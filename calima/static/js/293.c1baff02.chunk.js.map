{"version":3,"sources":["models/dtos/mfp/trabalhador.ts","views/pages/mfp/trabalhador/TrabalhadorSearchView.tsx","dependencies/empresaDependency.ts","dependencies/empresaMFPDependency.ts","models/dtos/mfp/trabalhadorExample.ts"],"names":["__webpack_require__","d","__webpack_exports__","CLASS_NAME","r","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","summer__WEBPACK_IMPORTED_MODULE_2__","_dependencies_empresaDependency__WEBPACK_IMPORTED_MODULE_3__","_dependencies_empresaMFPDependency__WEBPACK_IMPORTED_MODULE_4__","_models_dtos_mfp_trabalhador__WEBPACK_IMPORTED_MODULE_5__","_models_dtos_mfp_trabalhadorExample__WEBPACK_IMPORTED_MODULE_6__","defaultSorted","dataField","order","OrderType","DESC","TrabalhadorSearchView","props","globalReducer","useSelector","state","columns","filter","type","FilterType","NUMBER","sort","text","DATE","a","createElement","title","dependencies","hasEmpresa","globalParameter","hasEmpresaMFP","Object","assign","searchDataGridProps","dtoClassName","CLASS_NAME_EXAMPLE","searchExpressions","fieldName","value","empresaMFP","id","extraData","getExtraData","result","empresa"],"mappings":"6FA4CAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAO,MAAMA,EAAa,iGC5C1BH,EAAAI,EAAAF,GAAA,IAAAG,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,IAAAS,EAAAT,EAAA,GAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,MAAAa,EAAAb,EAAA,KAoBA,MAAMc,EAAoC,CACxC,CACEC,UAAW,SACXC,MAAOC,IAAUC,OA8ENC,UA1EiDC,KAC9D,MAAMC,EAAgBC,YAAmCC,GAASA,EAAMF,eAElEG,EAA0B,CAC9B,CACET,UAAW,SACXU,OAAQ,CACNC,KAAMC,IAAWC,QAEnBC,MAAM,EACNC,KAAM,aAER,CACEf,UAAW,OACXc,MAAM,EACNC,KAAM,QAER,CACEf,UAAW,aACXe,KAAM,MAER,CACEf,UAAW,yBACXe,KAAM,wBAER,CACEf,UAAW,MACXe,KAAM,OAER,CACEf,UAAW,MACXe,KAAM,OAER,CACEf,UAAW,gBACXe,KAAM,qBAER,CACEf,UAAW,iBACXU,OAAQ,CACNC,KAAMC,IAAWI,MAEnBF,MAAM,EACNC,KAAM,oBAaV,OACExB,EAAA0B,EAAAC,cAACxB,EAAA,GAAD,CACEyB,MAAM,mDACNC,aAAc,CAAC,IAAMC,YAAWf,EAAcgB,iBAAkB,IAAMC,YAAcjB,EAAcgB,mBAElG/B,EAAA0B,EAAAC,cAACxB,EAAA,EAAD8B,OAAAC,OAAA,GACMpB,EACAA,EAAMqB,oBAFZ,CAGEC,aAAcC,IACdnB,QAASA,EACTV,cAAeA,EACf8B,kBApBuB,IACpB,CACL,CACEC,UAAW,gBACXC,MAAOzB,EAAcgB,gBAAgBU,WAAWC,KAiBhDC,UAAWC,aAAa9B,EAAO,sBAAuBjB,6CC7FvD,SAASiC,EAAWC,GACzB,IAAIc,EAAS,KAIb,OAHKd,EAAgBe,UACnBD,EAAS,kDAEJA,EALTnD,EAAAC,EAAAC,EAAA,sBAAAkC,sCCAO,SAASE,EAAcD,GAC5B,IAAIc,EAAS,KAKb,OAJKd,EAAgBU,aACnBI,EACE,sKAEGA,EANTnD,EAAAC,EAAAC,EAAA,sBAAAoC,sCC6BAtC,EAAAC,EAAAC,EAAA,sBAAAC,IAAO,MAAMA,EAAa","file":"static/js/293.c1baff02.chunk.js","sourcesContent":["import { CepLocalidade } from '../ger/cepLocalidade';\r\nimport { CepUF } from '../ger/cepUF';\r\nimport { Dependente } from './dependente';\r\nimport { TrabalhadorEmail } from './trabalhadorEmail';\r\nimport { TrabalhadorEndereco } from './trabalhadorEndereco';\r\nimport { TrabalhadorExample } from './trabalhadorExample';\r\nimport { TrabalhadorTelefone } from './trabalhadorTelefone';\r\nimport { Vinculo } from './vinculo';\r\n\r\nexport interface Trabalhador extends TrabalhadorExample {\r\n  casadoBrasileiro?: boolean;\r\n  /** este campo utiliza o enum CategoriaCNHEnum */\r\n  cnhCategoria?: string;\r\n  cnhDataExpedicao?: string;\r\n  cnhDataPrimeiraHabilitacao?: string;\r\n  cnhDataValidade?: string;\r\n  cnhNumero?: string;\r\n  cnhUF?: CepUF;\r\n  /** este campo utiliza o enum CondicaoTrabalhadorEstrangeiroEnum */\r\n  condicaoTrabalhadorEstrangeiro?: string;\r\n  ctpsDigital?: boolean;\r\n  dataChegadaBrasil?: string;\r\n  /** este campo utiliza o enum DeficienciaEnum */\r\n  deficiencia?: string;\r\n  dependentes?: Dependente[];\r\n  emails?: TrabalhadorEmail[];\r\n  enderecos?: TrabalhadorEndereco[];\r\n  filhoBrasileiro?: boolean;\r\n  /** este campo utiliza o enum GrauInstrucaoEnum */\r\n  grauInstrucao?: string;\r\n  naturalidadeCidade?: CepLocalidade;\r\n  naturalidadeUF?: CepUF;\r\n  nomeMae?: string;\r\n  nomePai?: string;\r\n  preencheCotaDeficiencia?: boolean;\r\n  proprietario?: boolean;\r\n  /** este campo utiliza o enum RacaEnum */\r\n  raca?: string;\r\n  /** este campo utiliza o enum SexoEnum */\r\n  sexo?: string;\r\n  telefones?: TrabalhadorTelefone[];\r\n  vinculos?: Vinculo[];\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.trabalhador';\r\n","import React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  ColumnsProps,\r\n  DefaultSortProps,\r\n  FilterType,\r\n  getExtraData,\r\n  OrderType,\r\n  SearchDataGrid,\r\n  SearchExpression,\r\n  SearchViewProps,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMFP } from '../../../../dependencies/empresaMFPDependency';\r\nimport { CLASS_NAME, Trabalhador } from '../../../../models/dtos/mfp/trabalhador';\r\nimport { CLASS_NAME as CLASS_NAME_EXAMPLE } from '../../../../models/dtos/mfp/trabalhadorExample';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\nconst defaultSorted: DefaultSortProps[] = [\r\n  {\r\n    dataField: 'codigo',\r\n    order: OrderType.DESC,\r\n  },\r\n];\r\n\r\nconst TrabalhadorSearchView: FC<SearchViewProps<Trabalhador>> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'codigo',\r\n      filter: {\r\n        type: FilterType.NUMBER,\r\n      },\r\n      sort: true,\r\n      text: 'Código',\r\n    },\r\n    {\r\n      dataField: 'nome',\r\n      sort: true,\r\n      text: 'Nome',\r\n    },\r\n    {\r\n      dataField: 'identidade',\r\n      text: 'RG',\r\n    },\r\n    {\r\n      dataField: 'carteiraTrabalhoNumero',\r\n      text: 'Nº Carteira Trab.',\r\n    },\r\n    {\r\n      dataField: 'cpf',\r\n      text: 'CPF',\r\n    },\r\n    {\r\n      dataField: 'pis',\r\n      text: 'PIS',\r\n    },\r\n    {\r\n      dataField: 'tituloEleitor',\r\n      text: 'Título Eleitor',\r\n    },\r\n    {\r\n      dataField: 'dataNascimento',\r\n      filter: {\r\n        type: FilterType.DATE,\r\n      },\r\n      sort: true,\r\n      text: 'Data Nascimento',\r\n    },\r\n  ];\r\n\r\n  const getSearchExpressions = (): SearchExpression[] => {\r\n    return [\r\n      {\r\n        fieldName: 'empresaMFP.id',\r\n        value: globalReducer.globalParameter.empresaMFP.id,\r\n      },\r\n    ];\r\n  };\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Manutenção de Trabalhador - Dados Pessoais\"\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMFP(globalReducer.globalParameter)]}\r\n    >\r\n      <SearchDataGrid\r\n        {...props}\r\n        {...props.searchDataGridProps}\r\n        dtoClassName={CLASS_NAME_EXAMPLE}\r\n        columns={columns}\r\n        defaultSorted={defaultSorted}\r\n        searchExpressions={getSearchExpressions}\r\n        extraData={getExtraData(props, 'TrabalhadorEditView', CLASS_NAME)}\r\n      />\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default TrabalhadorSearchView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMFP(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMFP) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o Módulo Folha de Pagamento. Para configurá-la acesse Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n","import { Basic } from 'summer';\r\nimport { CepUF } from '../ger/cepUF';\r\nimport { EmpresaMFP } from './empresaMFP';\r\n\r\nexport interface TrabalhadorExample extends Basic {\r\n  carteiraTrabalhoDataEmissao?: Date;\r\n  carteiraTrabalhoNumero?: string;\r\n  carteiraTrabalhoSerie?: string;\r\n  carteiraTrabalhoUF?: CepUF;\r\n  codigo?: number;\r\n  cpf?: string;\r\n  dataNascimento?: Date;\r\n  dataValidadeVisto?: Date;\r\n  empresaMFP?: EmpresaMFP;\r\n  /** este campo utiliza o enum EstadoCivilEnum */\r\n  estadoCivil?: string;\r\n  identidade?: string;\r\n  identidadeComplemento?: string;\r\n  identidadeDataEmissao?: Date;\r\n  identidadeOrgaoExpedidor?: string;\r\n  identidadeUF?: CepUF;\r\n  /** este campo utiliza o enum NacionalidadeEnum */\r\n  nacionalidade?: string;\r\n  nome?: string;\r\n  passaporteNumero?: string;\r\n  pis?: string;\r\n  secaoEleitoral?: string;\r\n  tituloEleitor?: string;\r\n  zonaEleitoral?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.trabalhadorexample';\r\n"],"sourceRoot":""}
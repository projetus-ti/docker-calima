{"version":3,"sources":["models/enumerated/mlf/demonstrativoCSTEnum.ts","views/pages/mlf/report/demonstrativoCSTPISCOFINS/demonstrativoCST.ts","views/pages/mlf/report/demonstrativoCSTPISCOFINS/DemonstrativoCSTPISCOFINSReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/printerConfigTypeEnum.ts","models/enumerated/ger/printerTypeEnum.ts","dependencies/empresaMLFDependency.ts","models/dtos/ger/printerDataBasic.ts","views/pages/report/ReportFormView.tsx"],"names":["SINTETICO","label","value","DEMONSTRATIVO_CST_ENUM","CLASS_KEY","REPORT_EVENT","REPORT_TITLE","DemonstrativoCSTPISCOFINSReportView","props","history","useHistory","formProps","useForm","mode","globalReducer","useSelector","state","empresaMLF","globalParameter","basicData","Object","objectSpread2","getDefaultPrinterDataBasic","DATES","dtFinal","formatDate","parseRefToDate","referenciaAtual","dtInicial","useEffect","isEmpty","empresa","id","setTimeout","setValue","dropdownFormaImpressao","getValues","formaImpressao","title","concat","react_default","a","createElement","summer_esm","assign","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMLF","ReportFormView","printerData","hidden","FormGroup","tag","Row","Col","CustomInput","type","name","innerRef","register","validation","required","inputDropDownProps","optionsProvider","isPrependLabel","placeholder","InputType","DROP_DOWN","result","__webpack_require__","d","__webpack_exports__","SIMPLE","DATE","MONTHYEAR","MONTHYEARS","YEAR","GRAPHIC","PRINTER_TYPE_ENUM","_enumerated_ger_printerConfigTypeEnum__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_printerTypeEnum__WEBPACK_IMPORTED_MODULE_1__","reportEventType","classKey","printerConfigTypeEnum","module","anoLabel","dtFinalLabel","dtInicialLabel","pageNumber","passObj","printerDataEmail","printerTypeEnum","refFinalLabel","refInicialLabel","reportSequence","_props$printerData","resetObject","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","length","current","currentMomentDate","endDate","toDate","endOf","referenciaInicial","format","REF_PATTERN","referenciaFinal","ano","String","year","reset","dateInitial","react__WEBPACK_IMPORTED_MODULE_2___default","summer__WEBPACK_IMPORTED_MODULE_7__","dateComponent","datesComponent","Fragment","referenceInitial","REFERENCE","referenceComponent","referencesComponent","anoComponent","inputMaskedProps","mask","MASK","reactstrap__WEBPACK_IMPORTED_MODULE_3__","noValidate","children","firstOpen","extraConfigOpened","iconAppend","appendClickHandler","maxLength","minLength","min","NUMBER","reactstrap__WEBPACK_IMPORTED_MODULE_4__","className","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","selectProps","isClearable","handleSubmit","data","event","preventDefault","erros","validateExtras","params","message","AlertType","ERROR","alertManager","emit","ACTION_EVENTS","SHOW","showToast","INFORMATION","delay","gerarOldReport","errorFunction","mensagem","thenFunction","downloadOldReport","response","contentDisposition","headers","filename","slice","lastIndexOf","split","replace","saveAs","hideCancelButton"],"mappings":"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","file":"static/js/226.28cd797e.chunk.js","sourcesContent":["export const SINTETICO = { label: 'Sintético', value: 1 };\r\nexport const ANALITICO = { label: 'Analítico', value: 2 };\r\nexport const SEM_MOVIMENTO_CST_DE_ENTRADA = { label: 'Sem movimento CST de entrada', value: 3 };\r\nexport const SEM_MOVIMENTO_CST_DE_SAIDA = { label: 'Sem movimento CST de saída', value: 4 };\r\nexport const CST_DE_SAIDA_ISENTO = { label: 'CST de saída isento', value: 5 };\r\n\r\nexport const DEMONSTRATIVO_CST_ENUM = [SINTETICO, ANALITICO, SEM_MOVIMENTO_CST_DE_ENTRADA, SEM_MOVIMENTO_CST_DE_SAIDA, CST_DE_SAIDA_ISENTO];\r\n","export interface DemonstrativoCST {\r\n  dtFinal?: string;\r\n  dtInicial?: string;\r\n  exibirESPagDiferentes?: boolean;\r\n  formaImpressao?: number;\r\n  idGerEmpresa?: number;\r\n}\r\n\r\nexport const CLASS_KEY = 'demonstrativocstrelpass';\r\n","import React, { useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { Col, CustomInput, FormGroup, Row } from 'reactstrap';\r\nimport { formatDate, InputGroupInline, InputType, isEmpty, parseRefToDate, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMLF } from '../../../../../dependencies/empresaMLFDependency';\r\nimport { getDefaultPrinterDataBasic, PrinterDataBasic } from '../../../../../models/dtos/ger/printerDataBasic';\r\nimport { DATES } from '../../../../../models/enumerated/ger/printerConfigTypeEnum';\r\nimport { DEMONSTRATIVO_CST_ENUM, SINTETICO } from '../../../../../models/enumerated/mlf/demonstrativoCSTEnum';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport ReportFormView from '../../../report/ReportFormView';\r\nimport { CLASS_KEY, DemonstrativoCST } from './demonstrativoCST';\r\n\r\nconst REPORT_EVENT = 'printDemonstrativoCst';\r\nconst REPORT_TITLE = 'Demonstrativo CST PIS/COFINS';\r\n\r\nexport default function DemonstrativoCSTPISCOFINSReportView(props: WindowComponentProps) {\r\n  const history = useHistory();\r\n\r\n  const formProps = useForm<DemonstrativoCST>({ mode: 'onBlur' });\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const empresaMLF = globalReducer.globalParameter.empresaMLF;\r\n\r\n  const basicData: PrinterDataBasic = {\r\n    ...getDefaultPrinterDataBasic(REPORT_TITLE, REPORT_EVENT, CLASS_KEY, DATES.value),\r\n    dtFinal: formatDate(parseRefToDate(empresaMLF.referenciaAtual, 0)),\r\n    dtInicial: formatDate(parseRefToDate(empresaMLF.referenciaAtual, 1)),\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!isEmpty(globalReducer.globalParameter.empresa)) {\r\n        const id = globalReducer.globalParameter.empresa.id;\r\n        setTimeout(() => {\r\n          formProps.setValue('idGerEmpresa', id);\r\n          formProps.setValue('formaImpressao', SINTETICO.value);\r\n        }, 800);\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      const dropdownFormaImpressao = formProps.getValues().formaImpressao;\r\n      if (dropdownFormaImpressao === 1) {\r\n        basicData.title = `${REPORT_TITLE} Sintético`;\r\n      } else if (dropdownFormaImpressao === 2) {\r\n        basicData.title = `${REPORT_TITLE} Analítico`;\r\n      } else if (dropdownFormaImpressao === 3) {\r\n        basicData.title = `${REPORT_TITLE} Sem movimento CST de entrada`;\r\n      } else if (dropdownFormaImpressao === 4) {\r\n        basicData.title = `${REPORT_TITLE} Sem movimento CST de saída`;\r\n      } else {\r\n        basicData.title = `${REPORT_TITLE} CST de Saída Isento`;\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [formProps.getValues().formaImpressao]\r\n  );\r\n\r\n  return (\r\n    <WindowComponent\r\n      {...props}\r\n      title={REPORT_TITLE}\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMLF(globalReducer.globalParameter)]}\r\n    >\r\n      <ReportFormView formProps={formProps} printerData={basicData} history={history}>\r\n        <InputGroupInline formProps={formProps} id=\"idGerEmpresa\" hidden={true} />\r\n        <FormGroup tag={Row}>\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"idexibirESPagDiferentes\"\r\n              name=\"exibirESPagDiferentes\"\r\n              label=\"Exibir entrada e saída em páginas distintas\"\r\n              innerRef={formProps.register}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              id=\"formaImpressao\"\r\n              inputDropDownProps={{ optionsProvider: DEMONSTRATIVO_CST_ENUM }}\r\n              isPrependLabel={true}\r\n              label=\"Forma de impressão\"\r\n              placeholder=\"Informe a Forma de impressão\"\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </ReportFormView>\r\n    </WindowComponent>\r\n  );\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const SIMPLE = { label: '', value: '0' };\r\nexport const DATE = { label: '', value: '1' };\r\nexport const DATES = { label: '', value: '2' };\r\nexport const MONTHYEAR = { label: '', value: '3' };\r\nexport const MONTHYEARS = { label: '', value: '4' };\r\nexport const TINY = { label: '', value: '5' }; // TODO Remover\r\nexport const YEAR = { label: '', value: '6' };\r\nexport const QUARTER_YEAR = { label: '', value: '7' }; // TODO Remover\r\n\r\nconst PRINTER_CONFIG_TYPE_ENUM = [SIMPLE, DATE, DATES, MONTHYEAR, MONTHYEARS, TINY, YEAR, QUARTER_YEAR];\r\n\r\nexport default PRINTER_CONFIG_TYPE_ENUM;\r\n","export const TEXT = { label: 'Texto - CalimaDesk', value: 'texto' };\r\nexport const GRAPHIC = { label: 'Gráfico - PDF', value: 'grafico' };\r\nexport const EMAIL = { label: 'E-mail - PDF', value: 'email' };\r\n\r\nconst PRINTER_TYPE_ENUM = [TEXT, GRAPHIC, EMAIL];\r\n\r\nexport default PRINTER_TYPE_ENUM;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMLF(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMLF) {\r\n    result =\r\n      'A empresa fiscal da empresa selecionada deve estar configurada. Para configurar acesse:\\n' +\r\n      'Módulo Fiscal > Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n","import { SIMPLE } from '../../enumerated/ger/printerConfigTypeEnum';\r\nimport { GRAPHIC } from '../../enumerated/ger/printerTypeEnum';\r\nimport { PrinterDataEmail } from './printerDataEmail';\r\n\r\nexport interface PrinterDataBasic {\r\n  printerTypeEnum?: string;\r\n  dtInicial?: string;\r\n  dtFinal?: string;\r\n  refInicial?: string;\r\n  refFinal?: string;\r\n  reportSequence?: boolean;\r\n  pageNumber?: string;\r\n  title?: string;\r\n  printerDataEmail?: PrinterDataEmail;\r\n  passObj?: any;\r\n  printerConfigTypeEnum?: string;\r\n\r\n  dtInicialLabel?: string;\r\n  dtFinalLabel?: string;\r\n  refInicialLabel?: string;\r\n  refFinalLabel?: string;\r\n  anoLabel?: string;\r\n\r\n  reportEventType: string;\r\n  classKey: string;\r\n  module: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.printerdatabasicdto';\r\n\r\nexport function getDefaultPrinterDataBasic(\r\n  title: string,\r\n  reportEventType: string,\r\n  classKey: string,\r\n  printerConfigTypeEnum: string = SIMPLE.value,\r\n  module: string = 'MLF'\r\n) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    classKey,\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    module,\r\n    pageNumber: '1',\r\n    passObj: {},\r\n    printerConfigTypeEnum,\r\n    printerDataEmail: {},\r\n    printerTypeEnum: GRAPHIC.value,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportSequence: false,\r\n    title,\r\n  };\r\n}\r\n","import { saveAs } from 'file-saver';\r\nimport React, { FC, useEffect } from 'react';\r\nimport { Col, CustomInput, Form, Row } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  currentMomentDate,\r\n  ErroList,\r\n  ERROR,\r\n  format,\r\n  formatDate,\r\n  INFORMATION,\r\n  InputGroupInline,\r\n  InputType,\r\n  ProcessBar,\r\n  REF_PATTERN,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { PrinterDataBasic } from '../../../models/dtos/ger/printerDataBasic';\r\nimport { DATE, DATES, MONTHYEAR, MONTHYEARS, YEAR } from '../../../models/enumerated/ger/printerConfigTypeEnum';\r\nimport PRINTER_TYPE_ENUM, { GRAPHIC } from '../../../models/enumerated/ger/printerTypeEnum';\r\nimport { downloadOldReport, gerarOldReport } from '../../../services/report.service';\r\n\r\nexport interface ReportWindowComponentProps {\r\n  formProps: UseFormProps;\r\n  printerData?: PrinterDataBasic;\r\n  history?: any;\r\n  /** Função de validações extras */\r\n  validateExtras?: (printerData: PrinterDataBasic, formData: any) => string[];\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportFormView: FC<ReportWindowComponentProps> = props => {\r\n  useEffect(\r\n    () => {\r\n      const { printerTypeEnum, printerConfigTypeEnum } = props.printerData;\r\n      let resetObject: any = {\r\n        ...props.printerData,\r\n        printerTypeEnum: printerTypeEnum && printerTypeEnum.length > 0 ? printerTypeEnum[0] : GRAPHIC.value,\r\n      };\r\n\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (printerConfigTypeEnum) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case MONTHYEAR.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case MONTHYEARS.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case YEAR.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      props.formProps.reset(resetObject);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.printerData.printerConfigTypeEnum, props.printerData.printerTypeEnum]\r\n  );\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(props.printerData, data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      props.printerData.passObj = data;\r\n      showToast('Seu relatório está sendo gerado...', { ...INFORMATION, delay: 3000 });\r\n      gerarOldReport(props.printerData, {\r\n        errorFunction: (mensagem: string) => {\r\n          showToast(mensagem, ERROR);\r\n        },\r\n        thenFunction: () => {\r\n          downloadOldReport({\r\n            errorFunction: (mensagem: string) => {\r\n              showToast(mensagem, ERROR);\r\n            },\r\n            thenFunction: (response: any) => {\r\n              const contentDisposition = response.headers['content-disposition'];\r\n              const filename = contentDisposition\r\n                .slice(0, contentDisposition.lastIndexOf(';'))\r\n                .split('filename=')[1]\r\n                .replace(/\"/g, '');\r\n              saveAs(response.data, filename);\r\n            },\r\n          });\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.printerData.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.printerData.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: true } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.printerData.printerConfigTypeEnum === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.printerData.printerConfigTypeEnum === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.printerData.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: true } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"refInicial\"\r\n      label={props.printerData.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: true } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.printerData.printerConfigTypeEnum === MONTHYEAR.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.printerData.printerConfigTypeEnum === MONTHYEARS.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"refFinal\"\r\n          label={props.printerData.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: true } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.printerData.printerConfigTypeEnum === YEAR.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.printerData.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n\r\n      <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n        <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n          <InputGroupInline\r\n            id=\"title\"\r\n            label=\"Título\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Título\"\r\n            iconAppend=\"undo-alt\"\r\n            appendClickHandler={restoreTitle}\r\n            formProps={{\r\n              ...props.formProps,\r\n              validation: {\r\n                maxLength: 120,\r\n                minLength: 5,\r\n                required: true,\r\n              },\r\n            }}\r\n          />\r\n\r\n          <InputGroupInline\r\n            id=\"pageNumber\"\r\n            label=\"Página Inicial\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Página Inicial\"\r\n            formProps={{\r\n              ...props.formProps,\r\n              validation: {\r\n                min: 0,\r\n                required: true,\r\n              },\r\n            }}\r\n            type={InputType.NUMBER}\r\n          />\r\n\r\n          <Row className=\"mb-3 mt-3\">\r\n            <Col>\r\n              <CustomInput\r\n                type=\"switch\"\r\n                label=\"Sequenciar Relatórios\"\r\n                id=\"reportSequence\"\r\n                name=\"reportSequence\"\r\n                innerRef={props.formProps.register}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          {dateComponent}\r\n          {datesComponent}\r\n          {referenceComponent}\r\n          {referencesComponent}\r\n          {anoComponent}\r\n\r\n          <InputGroupInline\r\n            id=\"printerTypeEnum\"\r\n            label=\"Tipo de Impressão\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Selecione o tipo de impressão\"\r\n            formProps={{ ...props.formProps, validation: { required: true } }}\r\n            inputDropDownProps={{\r\n              optionsProvider: PRINTER_TYPE_ENUM,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n        </AccordionItem>\r\n      </Accordion>\r\n\r\n      <ProcessBar handleSubmit={props.formProps.handleSubmit(onSubmit)} hideCancelButton={true} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportFormView;\r\n"],"sourceRoot":""}
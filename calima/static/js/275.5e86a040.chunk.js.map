{"version":3,"sources":["models/enumerated/mfp/admitidosDemitidosPeriodoEnum.ts","views/pages/mfp/report/admitidosDemitidosPeriodo/admitidosDemitidosPeriodoRV.ts","views/pages/mfp/report/admitidosDemitidosPeriodo/AdmitidosDemitidosPeriodoReportView.tsx","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx"],"names":["NOME_TRABALHADOR","label","value","ADMITIDOS_DEMITIDOS_PERIODO_ENUM_VALUES","DEFAULT_VALUES","Object","objectSpread2","getDefaultReportBasicValues","DEFAULT_OPTIONS","getDefaultReportViewOptions","exibirConfiguracaoDadosEmpresa","AdmitidosDemitidosPeriodoReportView","props","globalParameter","useSelector","state","globalReducer","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","objectWithoutProperties","extraFormProps","_useState","useState","_useState2","slicedToArray","isGerarPorEmpresas","setIsGerarPorEmpresas","_useState3","_useState4","isRelatorioDiario","setIsRelatorioDiario","useEffect","setTimeout","setValue","carregarParametrosEmpresa","register","name","empresa","empresaMFP","usuario","referencia","responsavelContador","tipoResponsavelCaged","react_default","a","createElement","summer_esm","title","useGlobalParameter","wikiId","ReportForm","assign","localStorageKey","routeProps","reportBasicValues","reportViewOptions","validateExtras","erros","_extraFormProps$getVa","getValues","dtCagedDiario","isCagedDiario","push","parseDateToRef","toDate","addExtraParameters","formData","parametrosCaged","id","hidden","Row","Col","className","validation","required","placeholder","isPrependLabel","type","InputType","REFERENCE","DATE","CustomInput","innerRef","onChange","gerarPorEmpresas","EmpresaIS","inputSearchProps","selectProps","isMulti","tooltipProps","message","disabled","inputDropDownProps","optionsProvider","DROP_DOWN","__webpack_require__","d","__webpack_exports__","NATUREZA","SALDO_REPORT_ENUM","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","empresasSelecionadas","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","gerarCabecalhoPadraoAdministradora","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","virtualization","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","errors","triggerValidation","handleCancel","currentItem","currentValues","parentObject","EnvioEmail","Fragment","sort","detailView","keyField","propName","maxLength","TEXT_AREA","ReportInputs","activeTab","setActiveTab","_props$reportViewOpti","printingTypes","resetObject","length","idGerEmpresa","current","currentMomentDate","endDate","dtInicial","formatDate","DATES","dtFinal","endOf","referenciaInicial","format","REF_PATTERN","REFERENCES","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dtInicialRequired","dateComponent","datesComponent","dtFinalRequired","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","NUMBER","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","inputProps","style","marginBottom","size","segmentacaoFolhaComponent","exibirSegmentacaoFolha","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","exibirImprimirValoresColoridos","isClearable","firstOpen","extraConfigOpened","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","params","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history"],"mappings":"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","file":"static/js/275.5e86a040.chunk.js","sourcesContent":["export const NOME_TRABALHADOR = { label: 'Nome', value: 'Nome' };\r\nexport const DATA_ADMISSAO = { label: 'Data Admissão', value: 'Data Admissão' };\r\n\r\nexport const ADMITIDOS_DEMITIDOS_PERIODO_ENUM_VALUES = [NOME_TRABALHADOR, DATA_ADMISSAO];\r\n","import { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { CagedParam } from '../../../../../models/dtos/mfp/cagedParam';\r\n\r\nexport interface AdmitidosDemitidosPeriodoRV extends ReportBasicValues {\r\n  ordenacao?: string;\r\n  separarAdmitidosDemitidos?: boolean;\r\n  parametrosCaged?: CagedParam;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'admitidosdemitidosperiodorv';\r\nexport const REPORT_EVENT: string = 'printAdmitidosDemitidosPeriodo';\r\nexport const REPORT_TITLE: string = 'Funcionários Admitidos e Demitidos no Período';\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { InputGroupInline, InputType, parseDateToRef, toDate, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { getDefaultReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport { CagedParam } from '../../../../../models/dtos/mfp/cagedParam';\r\nimport { ADMITIDOS_DEMITIDOS_PERIODO_ENUM_VALUES, NOME_TRABALHADOR } from '../../../../../models/enumerated/mfp/admitidosDemitidosPeriodoEnum';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport EmpresaIS from '../../../../components/ger/empresaIS/EmpresaIS';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { AdmitidosDemitidosPeriodoRV, CLASS_KEY, REPORT_EVENT, REPORT_TITLE } from './admitidosDemitidosPeriodoRV';\r\n\r\nconst DEFAULT_VALUES: AdmitidosDemitidosPeriodoRV = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT),\r\n  exibirConfiguracaoDadosEmpresa: false,\r\n};\r\n\r\nconst AdmitidosDemitidosPeriodoReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const { globalParameter } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const { handleSubmit, ...formProps } = useForm<AdmitidosDemitidosPeriodoRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n  const extraFormProps = useForm<CagedParam>({ mode: 'onBlur' });\r\n  const [isGerarPorEmpresas, setIsGerarPorEmpresas] = useState();\r\n  const [isRelatorioDiario, setIsRelatorioDiario] = useState();\r\n\r\n  useEffect(\r\n    () => {\r\n      setTimeout(() => {\r\n        formProps.setValue('ordenacao', NOME_TRABALHADOR.value);\r\n        formProps.setValue('gerarPorEmpresas', false);\r\n        carregarParametrosEmpresa();\r\n        formProps.register({ name: 'parametrosCaged' });\r\n      }, 200);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const carregarParametrosEmpresa = () => {\r\n    extraFormProps.register({ name: 'responsavel' });\r\n    extraFormProps.register({ name: 'tipoResponsavel' });\r\n    extraFormProps.register({ name: 'empresaResponsavel' });\r\n\r\n    const { empresa, empresaMFP, usuario } = globalParameter;\r\n\r\n    formProps.setValue('usuario', usuario);\r\n\r\n    if (empresaMFP) {\r\n      extraFormProps.setValue('referencia', empresaMFP.referencia);\r\n      if (empresa.responsavelContador) {\r\n        extraFormProps.setValue('responsavel', empresa.responsavelContador);\r\n      }\r\n      extraFormProps.setValue('tipoResponsavel', empresaMFP.tipoResponsavelCaged);\r\n    }\r\n    extraFormProps.setValue('empresaResponsavel', empresa);\r\n  };\r\n\r\n  const onChangeRelatorioDiario = () => {\r\n    setIsRelatorioDiario(extraFormProps.getValues().isCagedDiario);\r\n  };\r\n\r\n  const onChangeGerarPorEmpresas = () => {\r\n    setIsGerarPorEmpresas(formProps.getValues().gerarPorEmpresas);\r\n    formProps.setValue('empresasSelecionadas', []);\r\n  };\r\n\r\n  const validateExtras = () => {\r\n    const erros = [];\r\n\r\n    const { referencia, dtCagedDiario, isCagedDiario } = extraFormProps.getValues();\r\n\r\n    if (isCagedDiario && !dtCagedDiario) {\r\n      erros.push('A Data de Geração do CAGED Diário não pode estar em branco.');\r\n    }\r\n\r\n    if (referencia && dtCagedDiario && parseDateToRef(toDate(dtCagedDiario)) !== referencia) {\r\n      erros.push('A Data de Geração do CAGED Diário é diferente da referência informada.');\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  const addExtraParameters = (formData: any) => {\r\n    formData.parametrosCaged = extraFormProps.getValues();\r\n    return formData;\r\n  };\r\n\r\n  return (\r\n    <WindowComponent title=\"Funcionários Admitidos e Demitidos no Período\" useGlobalParameter={true} globalParameter={globalParameter} wikiId={3610}>\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n        validateExtras={validateExtras}\r\n        addExtraParameters={addExtraParameters}\r\n      >\r\n        <InputGroupInline id=\"usuario.id\" formProps={formProps} hidden={true} />\r\n        <Row>\r\n          <Col className=\"col-6\">\r\n            <InputGroupInline\r\n              formProps={{ ...extraFormProps, validation: { required: true } }}\r\n              id=\"referencia\"\r\n              label=\"Referência\"\r\n              placeholder=\"Informe a Referência\"\r\n              isPrependLabel={true}\r\n              type={InputType.REFERENCE}\r\n            />\r\n          </Col>\r\n          {isRelatorioDiario ? (\r\n            <Col className=\"col-6\">\r\n              <InputGroupInline\r\n                formProps={extraFormProps}\r\n                id=\"dtCagedDiario\"\r\n                label=\"Data Geração CAGED Diário\"\r\n                placeholder=\"Informe a Data de Geração\"\r\n                isPrependLabel={true}\r\n                type={InputType.DATE}\r\n              />\r\n            </Col>\r\n          ) : null}\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"col-4\">\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"gerarPorEmpresas\"\r\n              name=\"gerarPorEmpresas\"\r\n              label=\"Gerar por Empresas\"\r\n              innerRef={formProps.register}\r\n              onChange={onChangeGerarPorEmpresas}\r\n            />\r\n          </Col>\r\n          <Col className=\"col-8\">\r\n            <EmpresaIS\r\n              formProps={formProps}\r\n              label=\"Empresa(s)\"\r\n              placeholder=\"Selecione no mínimo uma empresa\"\r\n              id=\"empresasSelecionadas\"\r\n              isPrependLabel={true}\r\n              inputSearchProps={{ selectProps: { isMulti: true } }}\r\n              tooltipProps={{ message: 'No mínimo uma Empresa deve ser selecionada' }}\r\n              disabled={!isGerarPorEmpresas}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"isCagedDiario\"\r\n              name=\"isCagedDiario\"\r\n              label=\"Relatório Diário (conforme CAGED Diário)\"\r\n              innerRef={extraFormProps.register}\r\n              onChange={onChangeRelatorioDiario}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"separarAdmitidosDemitidos\"\r\n              name=\"separarAdmitidosDemitidos\"\r\n              label=\"Agrupar entre Admitidos e Demitidos.\"\r\n              innerRef={formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              id=\"ordenacao\"\r\n              isPrependLabel={true}\r\n              label=\"Ordem de Impressão\"\r\n              placeholder=\"Selecione o Tipo de Ordenação\"\r\n              inputDropDownProps={{\r\n                optionsProvider: ADMITIDOS_DEMITIDOS_PERIODO_ENUM_VALUES,\r\n              }}\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </ReportForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default AdmitidosDemitidosPeriodoReportView;\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n"],"sourceRoot":""}
{"version":3,"sources":["views/pages/mlf/report/relacaoEntradaSaida/codigoFiscal/RelacaoSaidaCFOPReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/printerConfigTypeEnum.ts","models/enumerated/ger/printerTypeEnum.ts","dependencies/empresaMLFDependency.ts","models/dtos/ger/printerDataBasic.ts","views/pages/report/ReportFormView.tsx","views/pages/mlf/report/relacaoEntradaSaida/relacaoEntradaSaidaRV.ts","models/enumerated/mcg/sinteticoAnaliticoTipoEnum.ts","models/enumerated/mlf/origemLancamentoMLFEnum.ts"],"names":["REPORT_EVENT","REPORT_TITLE","RelacaoSaidaCFOPReportView","props","history","useHistory","formProps","useForm","mode","globalReducer","useSelector","state","empresaMLF","globalParameter","basicData","Object","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","getDefaultPrinterDataBasic","CLASS_KEY","DATES","value","dtFinal","formatDate","parseRefToDate","referenciaAtual","dtInicial","useEffect","isEmpty","empresa","id","setTimeout","setValue","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_10__","assign","title","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMLF","_report_ReportFormView__WEBPACK_IMPORTED_MODULE_17__","printerData","hidden","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","style","marginRight","reactstrap__WEBPACK_IMPORTED_MODULE_8__","label","ANALITICO","inline","type","name","innerRef","register","SINTETICO","isPrependLabel","placeholder","inputDropDownProps","optionsProvider","ORIGEM_LANCAMENTO_MLF_ENUM_VALUES","selectProps","isClearable","InputType","DROP_DOWN","reactstrap__WEBPACK_IMPORTED_MODULE_9__","tag","Row","result","__webpack_require__","d","__webpack_exports__","SIMPLE","DATE","MONTHYEAR","MONTHYEARS","YEAR","GRAPHIC","PRINTER_TYPE_ENUM","_enumerated_ger_printerConfigTypeEnum__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_printerTypeEnum__WEBPACK_IMPORTED_MODULE_1__","reportEventType","classKey","printerConfigTypeEnum","module","anoLabel","dtFinalLabel","dtInicialLabel","pageNumber","passObj","printerDataEmail","printerTypeEnum","refFinalLabel","refInicialLabel","reportSequence","ReportFormView","_props$printerData","resetObject","length","current","currentMomentDate","endDate","toDate","endOf","referenciaInicial","format","REF_PATTERN","referenciaFinal","ano","String","year","reset","dateInitial","react__WEBPACK_IMPORTED_MODULE_2___default","summer__WEBPACK_IMPORTED_MODULE_7__","validation","required","dateComponent","datesComponent","Fragment","referenceInitial","REFERENCE","referenceComponent","referencesComponent","anoComponent","inputMaskedProps","mask","MASK","reactstrap__WEBPACK_IMPORTED_MODULE_3__","noValidate","children","firstOpen","extraConfigOpened","iconAppend","appendClickHandler","maxLength","minLength","min","NUMBER","reactstrap__WEBPACK_IMPORTED_MODULE_4__","className","handleSubmit","data","event","preventDefault","erros","validateExtras","params","message","AlertType","ERROR","alertManager","emit","ACTION_EVENTS","SHOW","showToast","INFORMATION","delay","gerarOldReport","errorFunction","mensagem","thenFunction","downloadOldReport","response","contentDisposition","headers","filename","slice","lastIndexOf","split","replace","saveAs","hideCancelButton","ANALITICO_NUMBER","GRAU_CONTA_NUMBER","SINTETICO_ANALITICO_VALUES","SINTETICO_ANALITICO_TIPO_ENUM_VALUES","GRAU_CONTA","SINTETICO_ANALITICO_TIPO_VALUE_STRING_ENUM_VALUES","ANALITICO_NUMBER_VALUE","SINTETICO_NUMBER_VALUE","GRAU_CONTA_NUMBER_VALUE","SINTETICO_ANALITICO_TIPO_NUMBER_VALUE_ENUM_VALUES","SINTETICO_NUMBER","intValue"],"mappings":"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","file":"static/js/9.bab01291.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { Col, CustomInput, FormGroup, Label, Row } from 'reactstrap';\r\nimport { formatDate, InputGroupInline, InputType, isEmpty, parseRefToDate, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasEmpresa } from '../../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMLF } from '../../../../../../dependencies/empresaMLFDependency';\r\nimport { getDefaultPrinterDataBasic, PrinterDataBasic } from '../../../../../../models/dtos/ger/printerDataBasic';\r\nimport { DATES } from '../../../../../../models/enumerated/ger/printerConfigTypeEnum';\r\nimport { ANALITICO, SINTETICO } from '../../../../../../models/enumerated/mcg/sinteticoAnaliticoTipoEnum';\r\nimport { ORIGEM_LANCAMENTO_MLF_ENUM_VALUES } from '../../../../../../models/enumerated/mlf/origemLancamentoMLFEnum';\r\nimport { Reducers } from '../../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../../store/ducks/global.duck';\r\nimport ReportFormView from '../../../../report/ReportFormView';\r\nimport { CLASS_KEY, RelacaoEntradaSaidaRV } from '../relacaoEntradaSaidaRV';\r\n\r\nexport const REPORT_EVENT: string = 'printRelacaoSaidaCFOP';\r\nexport const REPORT_TITLE = 'Registro de Saídas Por Código Fiscal';\r\n\r\nexport default function RelacaoSaidaCFOPReportView(props: WindowComponentProps) {\r\n  const history = useHistory();\r\n  const formProps = useForm<RelacaoEntradaSaidaRV>({ mode: 'onBlur' });\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const empresaMLF = globalReducer.globalParameter.empresaMLF;\r\n\r\n  const basicData: PrinterDataBasic = {\r\n    ...getDefaultPrinterDataBasic(REPORT_TITLE, REPORT_EVENT, CLASS_KEY, DATES.value),\r\n    dtFinal: formatDate(parseRefToDate(empresaMLF.referenciaAtual, 0)),\r\n    dtInicial: formatDate(parseRefToDate(empresaMLF.referenciaAtual, 1)),\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!isEmpty(globalReducer.globalParameter.empresa)) {\r\n        const id = globalReducer.globalParameter.empresa.id;\r\n        setTimeout(() => {\r\n          formProps.setValue('idGerEmpresa', id);\r\n          formProps.setValue('sintetico', false);\r\n        }, 800);\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  return (\r\n    <WindowComponent\r\n      {...props}\r\n      title={REPORT_TITLE}\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMLF(globalReducer.globalParameter)]}\r\n    >\r\n      <ReportFormView formProps={formProps} printerData={basicData} history={history}>\r\n        <InputGroupInline formProps={formProps} id=\"idGerEmpresa\" hidden={true} />\r\n        <Row>\r\n          <Col>\r\n            <Label style={{ marginRight: 20 }}>Modelo do Relatório</Label>\r\n            <CustomInput\r\n              id=\"sinteticoFalse\"\r\n              value={'false'}\r\n              label={ANALITICO.label}\r\n              inline={true}\r\n              type=\"radio\"\r\n              name=\"sintetico\"\r\n              innerRef={formProps.register}\r\n            />\r\n            <CustomInput\r\n              id=\"sinteticoTrue\"\r\n              inline={true}\r\n              label={SINTETICO.label}\r\n              name=\"sintetico\"\r\n              value={'true'}\r\n              type=\"radio\"\r\n              innerRef={formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"origemLancamentoInt\"\r\n              label=\"Origem do Lançamento\"\r\n              isPrependLabel={true}\r\n              placeholder=\"Informe a Origem do Lançamento\"\r\n              formProps={formProps}\r\n              inputDropDownProps={{\r\n                optionsProvider: ORIGEM_LANCAMENTO_MLF_ENUM_VALUES,\r\n                selectProps: { isClearable: false },\r\n              }}\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <FormGroup tag={Row}>\r\n          <Col>\r\n            <CustomInput id=\"subtotalDiario\" innerRef={formProps.register} label=\"Exibir Subtotais Por Dia\" name=\"subtotalDiario\" type=\"switch\" />\r\n          </Col>\r\n        </FormGroup>\r\n      </ReportFormView>\r\n    </WindowComponent>\r\n  );\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const SIMPLE = { label: '', value: '0' };\r\nexport const DATE = { label: '', value: '1' };\r\nexport const DATES = { label: '', value: '2' };\r\nexport const MONTHYEAR = { label: '', value: '3' };\r\nexport const MONTHYEARS = { label: '', value: '4' };\r\nexport const TINY = { label: '', value: '5' }; // TODO Remover\r\nexport const YEAR = { label: '', value: '6' };\r\nexport const QUARTER_YEAR = { label: '', value: '7' }; // TODO Remover\r\n\r\nconst PRINTER_CONFIG_TYPE_ENUM = [SIMPLE, DATE, DATES, MONTHYEAR, MONTHYEARS, TINY, YEAR, QUARTER_YEAR];\r\n\r\nexport default PRINTER_CONFIG_TYPE_ENUM;\r\n","export const TEXT = { label: 'Texto - CalimaDesk', value: 'texto' };\r\nexport const GRAPHIC = { label: 'Gráfico - PDF', value: 'grafico' };\r\nexport const EMAIL = { label: 'E-mail - PDF', value: 'email' };\r\n\r\nconst PRINTER_TYPE_ENUM = [TEXT, GRAPHIC, EMAIL];\r\n\r\nexport default PRINTER_TYPE_ENUM;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMLF(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMLF) {\r\n    result =\r\n      'A empresa fiscal da empresa selecionada deve estar configurada. Para configurar acesse:\\n' +\r\n      'Módulo Fiscal > Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n","import { SIMPLE } from '../../enumerated/ger/printerConfigTypeEnum';\r\nimport { GRAPHIC } from '../../enumerated/ger/printerTypeEnum';\r\nimport { PrinterDataEmail } from './printerDataEmail';\r\n\r\nexport interface PrinterDataBasic {\r\n  printerTypeEnum?: string;\r\n  dtInicial?: string;\r\n  dtFinal?: string;\r\n  refInicial?: string;\r\n  refFinal?: string;\r\n  reportSequence?: boolean;\r\n  pageNumber?: string;\r\n  title?: string;\r\n  printerDataEmail?: PrinterDataEmail;\r\n  passObj?: any;\r\n  printerConfigTypeEnum?: string;\r\n\r\n  dtInicialLabel?: string;\r\n  dtFinalLabel?: string;\r\n  refInicialLabel?: string;\r\n  refFinalLabel?: string;\r\n  anoLabel?: string;\r\n\r\n  reportEventType: string;\r\n  classKey: string;\r\n  module: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.printerdatabasicdto';\r\n\r\nexport function getDefaultPrinterDataBasic(\r\n  title: string,\r\n  reportEventType: string,\r\n  classKey: string,\r\n  printerConfigTypeEnum: string = SIMPLE.value,\r\n  module: string = 'MLF'\r\n) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    classKey,\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    module,\r\n    pageNumber: '1',\r\n    passObj: {},\r\n    printerConfigTypeEnum,\r\n    printerDataEmail: {},\r\n    printerTypeEnum: GRAPHIC.value,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportSequence: false,\r\n    title,\r\n  };\r\n}\r\n","import { saveAs } from 'file-saver';\r\nimport React, { FC, useEffect } from 'react';\r\nimport { Col, CustomInput, Form, Row } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  currentMomentDate,\r\n  ErroList,\r\n  ERROR,\r\n  format,\r\n  formatDate,\r\n  INFORMATION,\r\n  InputGroupInline,\r\n  InputType,\r\n  ProcessBar,\r\n  REF_PATTERN,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { PrinterDataBasic } from '../../../models/dtos/ger/printerDataBasic';\r\nimport { DATE, DATES, MONTHYEAR, MONTHYEARS, YEAR } from '../../../models/enumerated/ger/printerConfigTypeEnum';\r\nimport PRINTER_TYPE_ENUM, { GRAPHIC } from '../../../models/enumerated/ger/printerTypeEnum';\r\nimport { downloadOldReport, gerarOldReport } from '../../../services/report.service';\r\n\r\nexport interface ReportWindowComponentProps {\r\n  formProps: UseFormProps;\r\n  printerData?: PrinterDataBasic;\r\n  history?: any;\r\n  /** Função de validações extras */\r\n  validateExtras?: (printerData: PrinterDataBasic, formData: any) => string[];\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportFormView: FC<ReportWindowComponentProps> = props => {\r\n  useEffect(\r\n    () => {\r\n      const { printerTypeEnum, printerConfigTypeEnum } = props.printerData;\r\n      let resetObject: any = {\r\n        ...props.printerData,\r\n        printerTypeEnum: printerTypeEnum && printerTypeEnum.length > 0 ? printerTypeEnum[0] : GRAPHIC.value,\r\n      };\r\n\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (printerConfigTypeEnum) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case MONTHYEAR.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case MONTHYEARS.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case YEAR.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      props.formProps.reset(resetObject);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.printerData.printerConfigTypeEnum, props.printerData.printerTypeEnum]\r\n  );\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(props.printerData, data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      props.printerData.passObj = data;\r\n      showToast('Seu relatório está sendo gerado...', { ...INFORMATION, delay: 3000 });\r\n      gerarOldReport(props.printerData, {\r\n        errorFunction: (mensagem: string) => {\r\n          showToast(mensagem, ERROR);\r\n        },\r\n        thenFunction: () => {\r\n          downloadOldReport({\r\n            errorFunction: (mensagem: string) => {\r\n              showToast(mensagem, ERROR);\r\n            },\r\n            thenFunction: (response: any) => {\r\n              const contentDisposition = response.headers['content-disposition'];\r\n              const filename = contentDisposition\r\n                .slice(0, contentDisposition.lastIndexOf(';'))\r\n                .split('filename=')[1]\r\n                .replace(/\"/g, '');\r\n              saveAs(response.data, filename);\r\n            },\r\n          });\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.printerData.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.printerData.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: true } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.printerData.printerConfigTypeEnum === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.printerData.printerConfigTypeEnum === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.printerData.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: true } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"refInicial\"\r\n      label={props.printerData.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: true } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.printerData.printerConfigTypeEnum === MONTHYEAR.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.printerData.printerConfigTypeEnum === MONTHYEARS.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"refFinal\"\r\n          label={props.printerData.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: true } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.printerData.printerConfigTypeEnum === YEAR.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.printerData.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n\r\n      <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n        <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n          <InputGroupInline\r\n            id=\"title\"\r\n            label=\"Título\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Título\"\r\n            iconAppend=\"undo-alt\"\r\n            appendClickHandler={restoreTitle}\r\n            formProps={{\r\n              ...props.formProps,\r\n              validation: {\r\n                maxLength: 120,\r\n                minLength: 5,\r\n                required: true,\r\n              },\r\n            }}\r\n          />\r\n\r\n          <InputGroupInline\r\n            id=\"pageNumber\"\r\n            label=\"Página Inicial\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Página Inicial\"\r\n            formProps={{\r\n              ...props.formProps,\r\n              validation: {\r\n                min: 0,\r\n                required: true,\r\n              },\r\n            }}\r\n            type={InputType.NUMBER}\r\n          />\r\n\r\n          <Row className=\"mb-3 mt-3\">\r\n            <Col>\r\n              <CustomInput\r\n                type=\"switch\"\r\n                label=\"Sequenciar Relatórios\"\r\n                id=\"reportSequence\"\r\n                name=\"reportSequence\"\r\n                innerRef={props.formProps.register}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          {dateComponent}\r\n          {datesComponent}\r\n          {referenceComponent}\r\n          {referencesComponent}\r\n          {anoComponent}\r\n\r\n          <InputGroupInline\r\n            id=\"printerTypeEnum\"\r\n            label=\"Tipo de Impressão\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Selecione o tipo de impressão\"\r\n            formProps={{ ...props.formProps, validation: { required: true } }}\r\n            inputDropDownProps={{\r\n              optionsProvider: PRINTER_TYPE_ENUM,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n        </AccordionItem>\r\n      </Accordion>\r\n\r\n      <ProcessBar handleSubmit={props.formProps.handleSubmit(onSubmit)} hideCancelButton={true} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportFormView;\r\n","import { Cfop } from '../../../../../models/dtos/ger/cfop';\r\n\r\nexport interface RelacaoEntradaSaidaRV {\r\n  idGerEmpresa?: number;\r\n  /** este campo utiliza o enum origemLancamentoMLFEnum */\r\n  origemLancamentoInt?: number;\r\n  sintetico?: boolean;\r\n  dataInicialStr?: string;\r\n  dataFinalStr?: string;\r\n  modelo?: boolean;\r\n  ordemEnum?: number;\r\n  subtotalDiario?: boolean;\r\n  /** este campo utiliza o enum ufEnum */\r\n  uf?: string;\r\n  cfops?: Cfop[];\r\n  /** este campo utiliza o enum EnumTipoPagamento */\r\n  tipoPagamento?: string;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'relacaoentradasaidarelpass';\r\n","export const ANALITICO_NUMBER = { label: 'Analítico', value: '1' };\r\nexport const SINTETICO_NUMBER = { label: 'Sintético', value: '2' };\r\nexport const GRAU_CONTA_NUMBER = { label: 'Grau da Conta', value: '3' };\r\n\r\nexport const SINTETICO_ANALITICO_VALUES = [ANALITICO_NUMBER, SINTETICO_NUMBER];\r\n\r\nexport const SINTETICO_ANALITICO_TIPO_ENUM_VALUES = [ANALITICO_NUMBER, SINTETICO_NUMBER, GRAU_CONTA_NUMBER];\r\n\r\nexport const ANALITICO = { label: 'Analítico', value: 'analitico' };\r\nexport const SINTETICO = { label: 'Sintético', value: 'sintetico' };\r\nexport const GRAU_CONTA = { label: 'Grau da Conta', value: 'grauConta' };\r\n\r\nexport const SINTETICO_ANALITICO_TIPO_VALUE_STRING_ENUM_VALUES = [ANALITICO, SINTETICO, GRAU_CONTA];\r\n\r\nexport const ANALITICO_NUMBER_VALUE = { label: 'Analítico', value: 1 };\r\nexport const SINTETICO_NUMBER_VALUE = { label: 'Sintético', value: 2 };\r\nexport const GRAU_CONTA_NUMBER_VALUE = { label: 'Grau da Conta', value: 3 };\r\n\r\nexport const SINTETICO_ANALITICO_TIPO_NUMBER_VALUE_ENUM_VALUES = [ANALITICO_NUMBER_VALUE, SINTETICO_NUMBER_VALUE, GRAU_CONTA_NUMBER_VALUE];\r\n","export const MANUAL = {\r\n  intValue: [0],\r\n  label: 'Manual',\r\n  value: 0,\r\n};\r\nexport const ARQUIVO_DIGITAL_XML_TXT = {\r\n  intValue: [1],\r\n  label: 'Arquivo Digital (XML e TXT)',\r\n  value: 1,\r\n};\r\nexport const SINTEGRA = {\r\n  intValue: [2],\r\n  label: 'SINTEGRA',\r\n  value: 2,\r\n};\r\nexport const SPED = {\r\n  intValue: [3],\r\n  label: 'SPED',\r\n  value: 3,\r\n};\r\nexport const INTEGRACAO_REST_JSON = {\r\n  intValue: [4],\r\n  label: 'Integração Rest (JSON)',\r\n  value: 4,\r\n};\r\n\r\nexport const ORIGEM_LANCAMENTO_MLF_ENUM_VALUES = [MANUAL, ARQUIVO_DIGITAL_XML_TXT, SINTEGRA, SPED, INTEGRACAO_REST_JSON];\r\n"],"sourceRoot":""}
{"version":3,"sources":["views/pages/mlf/report/gnre/gnreRV.ts","views/pages/mlf/report/gnre/GnreReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/printerConfigTypeEnum.ts","models/enumerated/ger/printerTypeEnum.ts","dependencies/empresaMLFDependency.ts","models/dtos/ger/printerDataBasic.ts","views/pages/report/ReportFormView.tsx"],"names":["REPORT_TITLE","BASIC_DATA","Object","objectSpread2","getDefaultPrinterDataBasic","DATES","value","dtFinal","dtInicial","PrestacaoServicoMuriaeReportView","props","globalReducer","useSelector","state","history","useHistory","formProps","useForm","mode","useEffect","globalParameter","empresa","setTimeout","setValue","id","react_default","a","createElement","summer_esm","assign","title","dependencies","hasEmpresa","hasEmpresaMLF","ReportFormView","printerData","extraConfigOpened","hidden","result","__webpack_require__","d","__webpack_exports__","SIMPLE","DATE","MONTHYEAR","MONTHYEARS","YEAR","label","GRAPHIC","PRINTER_TYPE_ENUM","empresaMLF","_enumerated_ger_printerConfigTypeEnum__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_printerTypeEnum__WEBPACK_IMPORTED_MODULE_1__","reportEventType","classKey","printerConfigTypeEnum","module","anoLabel","dtFinalLabel","dtInicialLabel","pageNumber","passObj","printerDataEmail","printerTypeEnum","refFinalLabel","refInicialLabel","reportSequence","_props$printerData","resetObject","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","length","current","currentMomentDate","endDate","formatDate","toDate","endOf","referenciaInicial","format","REF_PATTERN","referenciaFinal","ano","String","year","reset","dateInitial","react__WEBPACK_IMPORTED_MODULE_2___default","summer__WEBPACK_IMPORTED_MODULE_7__","isPrependLabel","validation","required","type","InputType","dateComponent","datesComponent","Fragment","referenceInitial","REFERENCE","referenceComponent","referencesComponent","anoComponent","inputMaskedProps","mask","MASK","reactstrap__WEBPACK_IMPORTED_MODULE_3__","noValidate","children","firstOpen","placeholder","iconAppend","appendClickHandler","maxLength","minLength","min","NUMBER","reactstrap__WEBPACK_IMPORTED_MODULE_4__","className","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","name","innerRef","register","inputDropDownProps","optionsProvider","selectProps","isClearable","DROP_DOWN","handleSubmit","data","event","preventDefault","erros","validateExtras","params","message","AlertType","ERROR","alertManager","emit","ACTION_EVENTS","SHOW","showToast","INFORMATION","delay","gerarOldReport","errorFunction","mensagem","thenFunction","downloadOldReport","response","contentDisposition","headers","filename","slice","lastIndexOf","split","replace","saveAs","hideCancelButton"],"mappings":"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","file":"static/js/220.0c048700.chunk.js","sourcesContent":["export interface GnreRV {\r\n  idGerEmpresa?: number;\r\n  dataInicialStr?: string;\r\n  dataFinalStr?: string;\r\n}\r\n\r\nexport const REPORT_TITLE = 'Relatório GNRE';\r\nexport const REPORT_EVENT: string = 'printRelacaoGnre'; // Nome do metódo a ser chamado no backend\r\nexport const CLASS_KEY: string = 'gnrerelpass'; // Nome da classe RelPass no backedn\r\n","import React, { useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { InputGroupInline, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMLF } from '../../../../../dependencies/empresaMLFDependency';\r\nimport { getDefaultPrinterDataBasic, PrinterDataBasic } from '../../../../../models/dtos/ger/printerDataBasic';\r\nimport { DATES } from '../../../../../models/enumerated/ger/printerConfigTypeEnum';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport ReportFormView from '../../../report/ReportFormView';\r\nimport { CLASS_KEY, GnreRV, REPORT_EVENT, REPORT_TITLE } from './gnreRV';\r\n\r\nconst BASIC_DATA: PrinterDataBasic = {\r\n  ...getDefaultPrinterDataBasic(REPORT_TITLE, REPORT_EVENT, CLASS_KEY, DATES.value),\r\n  dtFinal: '31/12/2017',\r\n  dtInicial: '01/12/2017',\r\n};\r\n\r\nexport default function PrestacaoServicoMuriaeReportView(props: WindowComponentProps) {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const history = useHistory();\r\n  const formProps = useForm<GnreRV>({ mode: 'onBlur' });\r\n\r\n  useEffect(\r\n    () => {\r\n      if (globalReducer.globalParameter.empresa !== null) {\r\n        setTimeout(() => {\r\n          formProps.setValue('idGerEmpresa', globalReducer.globalParameter.empresa.id);\r\n        }, 800);\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  return (\r\n    <WindowComponent\r\n      {...props}\r\n      title={REPORT_TITLE}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMLF(globalReducer.globalParameter)]}\r\n    >\r\n      <ReportFormView formProps={formProps} printerData={BASIC_DATA} history={history} extraConfigOpened={true}>\r\n        <InputGroupInline formProps={formProps} id=\"idGerEmpresa\" hidden={true} />\r\n      </ReportFormView>\r\n    </WindowComponent>\r\n  );\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const SIMPLE = { label: '', value: '0' };\r\nexport const DATE = { label: '', value: '1' };\r\nexport const DATES = { label: '', value: '2' };\r\nexport const MONTHYEAR = { label: '', value: '3' };\r\nexport const MONTHYEARS = { label: '', value: '4' };\r\nexport const TINY = { label: '', value: '5' }; // TODO Remover\r\nexport const YEAR = { label: '', value: '6' };\r\nexport const QUARTER_YEAR = { label: '', value: '7' }; // TODO Remover\r\n\r\nconst PRINTER_CONFIG_TYPE_ENUM = [SIMPLE, DATE, DATES, MONTHYEAR, MONTHYEARS, TINY, YEAR, QUARTER_YEAR];\r\n\r\nexport default PRINTER_CONFIG_TYPE_ENUM;\r\n","export const TEXT = { label: 'Texto - CalimaDesk', value: 'texto' };\r\nexport const GRAPHIC = { label: 'Gráfico - PDF', value: 'grafico' };\r\nexport const EMAIL = { label: 'E-mail - PDF', value: 'email' };\r\n\r\nconst PRINTER_TYPE_ENUM = [TEXT, GRAPHIC, EMAIL];\r\n\r\nexport default PRINTER_TYPE_ENUM;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMLF(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMLF) {\r\n    result =\r\n      'A empresa fiscal da empresa selecionada deve estar configurada. Para configurar acesse:\\n' +\r\n      'Módulo Fiscal > Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n","import { SIMPLE } from '../../enumerated/ger/printerConfigTypeEnum';\r\nimport { GRAPHIC } from '../../enumerated/ger/printerTypeEnum';\r\nimport { PrinterDataEmail } from './printerDataEmail';\r\n\r\nexport interface PrinterDataBasic {\r\n  printerTypeEnum?: string;\r\n  dtInicial?: string;\r\n  dtFinal?: string;\r\n  refInicial?: string;\r\n  refFinal?: string;\r\n  reportSequence?: boolean;\r\n  pageNumber?: string;\r\n  title?: string;\r\n  printerDataEmail?: PrinterDataEmail;\r\n  passObj?: any;\r\n  printerConfigTypeEnum?: string;\r\n\r\n  dtInicialLabel?: string;\r\n  dtFinalLabel?: string;\r\n  refInicialLabel?: string;\r\n  refFinalLabel?: string;\r\n  anoLabel?: string;\r\n\r\n  reportEventType: string;\r\n  classKey: string;\r\n  module: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.printerdatabasicdto';\r\n\r\nexport function getDefaultPrinterDataBasic(\r\n  title: string,\r\n  reportEventType: string,\r\n  classKey: string,\r\n  printerConfigTypeEnum: string = SIMPLE.value,\r\n  module: string = 'MLF'\r\n) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    classKey,\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    module,\r\n    pageNumber: '1',\r\n    passObj: {},\r\n    printerConfigTypeEnum,\r\n    printerDataEmail: {},\r\n    printerTypeEnum: GRAPHIC.value,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportSequence: false,\r\n    title,\r\n  };\r\n}\r\n","import { saveAs } from 'file-saver';\r\nimport React, { FC, useEffect } from 'react';\r\nimport { Col, CustomInput, Form, Row } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  currentMomentDate,\r\n  ErroList,\r\n  ERROR,\r\n  format,\r\n  formatDate,\r\n  INFORMATION,\r\n  InputGroupInline,\r\n  InputType,\r\n  ProcessBar,\r\n  REF_PATTERN,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { PrinterDataBasic } from '../../../models/dtos/ger/printerDataBasic';\r\nimport { DATE, DATES, MONTHYEAR, MONTHYEARS, YEAR } from '../../../models/enumerated/ger/printerConfigTypeEnum';\r\nimport PRINTER_TYPE_ENUM, { GRAPHIC } from '../../../models/enumerated/ger/printerTypeEnum';\r\nimport { downloadOldReport, gerarOldReport } from '../../../services/report.service';\r\n\r\nexport interface ReportWindowComponentProps {\r\n  formProps: UseFormProps;\r\n  printerData?: PrinterDataBasic;\r\n  history?: any;\r\n  /** Função de validações extras */\r\n  validateExtras?: (printerData: PrinterDataBasic, formData: any) => string[];\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportFormView: FC<ReportWindowComponentProps> = props => {\r\n  useEffect(\r\n    () => {\r\n      const { printerTypeEnum, printerConfigTypeEnum } = props.printerData;\r\n      let resetObject: any = {\r\n        ...props.printerData,\r\n        printerTypeEnum: printerTypeEnum && printerTypeEnum.length > 0 ? printerTypeEnum[0] : GRAPHIC.value,\r\n      };\r\n\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (printerConfigTypeEnum) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case MONTHYEAR.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case MONTHYEARS.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case YEAR.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      props.formProps.reset(resetObject);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.printerData.printerConfigTypeEnum, props.printerData.printerTypeEnum]\r\n  );\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(props.printerData, data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      props.printerData.passObj = data;\r\n      showToast('Seu relatório está sendo gerado...', { ...INFORMATION, delay: 3000 });\r\n      gerarOldReport(props.printerData, {\r\n        errorFunction: (mensagem: string) => {\r\n          showToast(mensagem, ERROR);\r\n        },\r\n        thenFunction: () => {\r\n          downloadOldReport({\r\n            errorFunction: (mensagem: string) => {\r\n              showToast(mensagem, ERROR);\r\n            },\r\n            thenFunction: (response: any) => {\r\n              const contentDisposition = response.headers['content-disposition'];\r\n              const filename = contentDisposition\r\n                .slice(0, contentDisposition.lastIndexOf(';'))\r\n                .split('filename=')[1]\r\n                .replace(/\"/g, '');\r\n              saveAs(response.data, filename);\r\n            },\r\n          });\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.printerData.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.printerData.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: true } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.printerData.printerConfigTypeEnum === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.printerData.printerConfigTypeEnum === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.printerData.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: true } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"refInicial\"\r\n      label={props.printerData.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: true } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.printerData.printerConfigTypeEnum === MONTHYEAR.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.printerData.printerConfigTypeEnum === MONTHYEARS.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"refFinal\"\r\n          label={props.printerData.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: true } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.printerData.printerConfigTypeEnum === YEAR.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.printerData.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n\r\n      <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n        <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n          <InputGroupInline\r\n            id=\"title\"\r\n            label=\"Título\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Título\"\r\n            iconAppend=\"undo-alt\"\r\n            appendClickHandler={restoreTitle}\r\n            formProps={{\r\n              ...props.formProps,\r\n              validation: {\r\n                maxLength: 120,\r\n                minLength: 5,\r\n                required: true,\r\n              },\r\n            }}\r\n          />\r\n\r\n          <InputGroupInline\r\n            id=\"pageNumber\"\r\n            label=\"Página Inicial\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Página Inicial\"\r\n            formProps={{\r\n              ...props.formProps,\r\n              validation: {\r\n                min: 0,\r\n                required: true,\r\n              },\r\n            }}\r\n            type={InputType.NUMBER}\r\n          />\r\n\r\n          <Row className=\"mb-3 mt-3\">\r\n            <Col>\r\n              <CustomInput\r\n                type=\"switch\"\r\n                label=\"Sequenciar Relatórios\"\r\n                id=\"reportSequence\"\r\n                name=\"reportSequence\"\r\n                innerRef={props.formProps.register}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          {dateComponent}\r\n          {datesComponent}\r\n          {referenceComponent}\r\n          {referencesComponent}\r\n          {anoComponent}\r\n\r\n          <InputGroupInline\r\n            id=\"printerTypeEnum\"\r\n            label=\"Tipo de Impressão\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Selecione o tipo de impressão\"\r\n            formProps={{ ...props.formProps, validation: { required: true } }}\r\n            inputDropDownProps={{\r\n              optionsProvider: PRINTER_TYPE_ENUM,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n        </AccordionItem>\r\n      </Accordion>\r\n\r\n      <ProcessBar handleSubmit={props.formProps.handleSubmit(onSubmit)} hideCancelButton={true} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportFormView;\r\n"],"sourceRoot":""}
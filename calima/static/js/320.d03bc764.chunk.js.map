{"version":3,"sources":["views/pages/mfp/fpas/FpasSearchView.tsx","dependencies/empresaDependency.ts","dependencies/empresaMFPDependency.ts","models/dtos/mfp/fpas.ts"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","summer__WEBPACK_IMPORTED_MODULE_2__","_dependencies_empresaDependency__WEBPACK_IMPORTED_MODULE_3__","_dependencies_empresaMFPDependency__WEBPACK_IMPORTED_MODULE_4__","_models_dtos_mfp_fpas__WEBPACK_IMPORTED_MODULE_5__","defaultSorted","dataField","order","OrderType","ASC","FpasSearchView","props","globalReducer","useSelector","state","columns","editable","filter","type","FilterType","NUMBER","sort","text","TEXT","a","createElement","title","dependencies","hasEmpresa","globalParameter","hasEmpresaMFP","Object","assign","searchDataGridProps","dtoClassName","CLASS_NAME","extraData","getExtraData","result","empresa","d","empresaMFP"],"mappings":"6FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,IAAAO,EAAAP,EAAA,GAAAQ,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KASA,MAAMW,EAAoC,CACxC,CACEC,UAAW,SACXC,MAAOC,IAAUC,MA6CNC,UAzCmCC,KAChD,MAAMC,EAAgBC,YAAmCC,GAASA,EAAMF,eAElEG,EAA0B,CAC9B,CACET,UAAW,SACXU,UAAU,EACVC,OAAQ,CACNC,KAAMC,IAAWC,QAEnBC,MAAM,EACNC,KAAM,aAER,CACEhB,UAAW,YACXU,UAAU,EACVC,OAAQ,CACNC,KAAMC,IAAWI,MAEnBF,MAAM,EACNC,KAAM,oBAIV,OACExB,EAAA0B,EAAAC,cAACxB,EAAA,GAAD,CACEyB,MAAM,qBACNC,aAAc,CAAC,IAAMC,YAAWhB,EAAciB,iBAAkB,IAAMC,YAAclB,EAAciB,mBAElG/B,EAAA0B,EAAAC,cAACxB,EAAA,EAAD8B,OAAAC,OAAA,GACMrB,EACAA,EAAMsB,oBAFZ,CAGElB,QAASA,EACTV,cAAeA,EACf6B,aAAcC,IACdC,UAAWC,aAAa1B,EAAO,eAAgBwB,6CCjDhD,SAASP,EAAWC,GACzB,IAAIS,EAAS,KAIb,OAHKT,EAAgBU,UACnBD,EAAS,kDAEJA,EALT5C,EAAA8C,EAAA5C,EAAA,sBAAAgC,sCCAO,SAASE,EAAcD,GAC5B,IAAIS,EAAS,KAKb,OAJKT,EAAgBY,aACnBH,EACE,sKAEGA,EANT5C,EAAA8C,EAAA5C,EAAA,sBAAAkC,sCCKApC,EAAA8C,EAAA5C,EAAA,sBAAAuC,IAAO,MAAMA,EAAa","file":"static/js/320.d03bc764.chunk.js","sourcesContent":["import React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { ColumnsProps, DefaultSortProps, FilterType, getExtraData, OrderType, SearchDataGrid, SearchViewProps, WindowComponent } from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMFP } from '../../../../dependencies/empresaMFPDependency';\r\nimport { CLASS_NAME, Fpas } from '../../../../models/dtos/mfp/fpas';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\nconst defaultSorted: DefaultSortProps[] = [\r\n  {\r\n    dataField: 'codigo',\r\n    order: OrderType.ASC,\r\n  },\r\n];\r\n\r\nconst FpasSearchView: FC<SearchViewProps<Fpas>> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'codigo',\r\n      editable: true,\r\n      filter: {\r\n        type: FilterType.NUMBER,\r\n      },\r\n      sort: true,\r\n      text: 'Código',\r\n    },\r\n    {\r\n      dataField: 'descricao',\r\n      editable: true,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      sort: true,\r\n      text: 'Descrição',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Códigos de FPAS\"\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMFP(globalReducer.globalParameter)]}\r\n    >\r\n      <SearchDataGrid\r\n        {...props}\r\n        {...props.searchDataGridProps}\r\n        columns={columns}\r\n        defaultSorted={defaultSorted}\r\n        dtoClassName={CLASS_NAME}\r\n        extraData={getExtraData(props, 'FpasEditView', CLASS_NAME)}\r\n      />\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default FpasSearchView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMFP(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMFP) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o Módulo Folha de Pagamento. Para configurá-la acesse Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n","import { Basic } from 'summer';\r\n\r\nexport interface Fpas extends Basic {\r\n  codigo?: number;\r\n  descricao?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.fpas';\r\n"],"sourceRoot":""}
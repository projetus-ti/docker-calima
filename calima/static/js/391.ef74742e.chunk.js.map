{"version":3,"sources":["models/dtos/mlf/giaSpInfComp.ts","views/components/mlf/ocorrenciaIS/OcorrenciaIS.tsx","views/pages/mlf/giaSpOcorrencia/GiaSpOcorrenciaEditView.tsx","views/pages/mlf/giaSpInfComp/GiaSpInfCompEditView.tsx","models/dtos/mlf/giaSpSubItem.ts"],"names":["__webpack_require__","d","__webpack_exports__","CLASS_NAME","OcorrenciaIS","props","react_default","a","createElement","summer_esm","Object","assign","type","InputType","INPUT_SEARCH","inputSearchProps","objectSpread2","columns","dataField","text","dtoClassName","searchViewId","GiaSpOcorrenciaEditView","formProps","useForm","defaultValues","selectedItem","mode","codigo","getValues","listaIESubstituto","listaIESubstituido","useEffect","nf","length","setValue","fillZero","handleSubmit","handleCancel","Row","Col","ocorrenciaIS_OcorrenciaIS","validation","required","label","placeholder","id","isPrependLabel","size","NUMBER","includes","maxLength","REFERENCE","GiaSpInfCompEditView","getSelectedItem","_useForm","reset","objectWithoutProperties","globalReducer","useSelector","state","defaultSortProps","order","OrderType","ASC","ocorrenciaFormProps","detailView","propName","title","empresa","globalParameter","setTimeout","wikiId","editViewProps","hidden","defaultSortDirection","defaultSorted","keyField"],"mappings":"6FAUAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAO,MAAMA,EAAa,yMC0BXC,MAhCsBC,GAEjCC,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,GACMN,EADN,CAEEO,KAAMC,IAAUC,aAChBC,iBAAgBL,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAA,GACXL,EAAMU,kBADK,IAEdE,QAAS,CACP,CACEC,UAAW,SACXC,KAAM,aAER,CACED,UAAW,YACXC,KAAM,mBAER,CACED,UAAW,gBACXC,KAAM,6BAER,CACED,UAAW,OACXC,KAAM,SAGVC,aAAcjB,IACdkB,aAAc,8BC2HPC,MAlJqEjB,IAClF,MAAMkB,EAAYC,YAAyB,CACzCC,cAAcf,OAAAM,EAAA,EAAAN,CAAA,GAAML,EAAMqB,cAC1BC,KAAM,WAGFC,EAASL,EAAUM,YAAYD,QAAUL,EAAUM,YAAYD,OAAOA,OAEtEE,EAAoB,CAAC,QAAS,SAC9BC,EAAqB,CAAC,QAAS,SAYrC,OATAC,oBAAU,KAAM,MACNC,EAAOV,EAAUM,YAAjBI,GACJA,GACgB,IAAdA,EAAGC,QACLX,EAAUY,SAAS,KAAMC,aAASH,EAAI,MAM1C3B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAgB4B,aAAchC,EAAMgC,aAAcC,aAAcjC,EAAMiC,aAAcf,UAAWA,GAC7FjB,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KACEjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,KACElC,EAAAC,EAAAC,cAACiC,EAAD,CACElB,UAASb,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAA,GAAOa,GAAP,IAAkBmB,WAAY,CAAEC,UAAU,KACnDC,MAAM,gBACNC,YAAY,8BACZC,GAAG,SACHC,gBAAgB,EAChBhC,iBAAkB,CAAEiC,KAAM,UAIhC1C,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KACEjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,KACElC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqC,GAAG,QACHF,MAAM,QACNrB,UAASb,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAA,GAAOa,GAAP,IAAkBmB,WAAY,CAAEC,UAAU,KACnDI,gBAAgB,EAChBF,YAAY,kBACZjC,KAAMC,IAAUoC,WApCV,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,SAwCnEC,SAAStB,GAChBtB,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KACEjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,KACElC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqC,GAAG,KACHF,MAAM,2BACNrB,UAASb,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAA,GAAOa,GAAP,IAAkBmB,WAAY,CAAEC,UAAU,EAAMQ,UAAW,MACpEJ,gBAAgB,EAChBF,YAAY,qCACZjC,KAAMC,IAAUoC,WAIpB,KACHnB,EAAkBoB,SAAStB,GAC1BtB,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KACEjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,KACElC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqC,GAAG,eACHF,MAAM,sCACNrB,UAASb,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAA,GAAOa,GAAP,IAAkBmB,WAAY,CAAEC,UAAU,EAAMQ,UAAW,MACpEJ,gBAAgB,EAChBF,YAAY,gDACZjC,KAAMC,IAAUoC,WAIpB,KACHlB,EAAmBmB,SAAStB,GAC3BtB,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KACEjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,KACElC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqC,GAAG,gBACHF,MAAM,0CACNrB,UAASb,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAA,GAAOa,GAAP,IAAkBmB,WAAY,CAAEC,UAAU,EAAMQ,UAAW,MACpEJ,gBAAgB,EAChBF,YAAY,oDACZjC,KAAMC,IAAUoC,WAIpB,KACHlB,EAAmBmB,SAAStB,IAAWE,EAAkBoB,SAAStB,GACjEtB,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KACEjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,KACElC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqC,GAAG,KACHF,MAAM,2BACNrB,UAASb,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAA,GAAOa,GAAP,IAAkBmB,WAAY,CAAEC,UAAU,EAAMQ,UAAW,KACpEJ,gBAAgB,EAChBF,YAAY,qCACZjC,KAAMC,IAAUoC,WAIpB,KACHnB,EAAkBoB,SAAStB,GAC1BtB,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KACEjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,KACElC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqC,GAAG,mBACHF,MAAM,wBACNrB,UAASb,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAA,GAAOa,GAAP,IAAkBmB,WAAY,CAAEC,UAAU,KACnDI,gBAAgB,EAChBnC,KAAMC,IAAUuC,cAIpB,KACHtB,EAAkBoB,SAAStB,GAC1BtB,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KACEjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,KACElC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqC,GAAG,gBACHF,MAAM,sBACNrB,UAASb,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAA,GAAOa,GAAP,IAAkBmB,WAAY,CAAEC,UAAU,KACnDI,gBAAgB,EAChBnC,KAAMC,IAAUuC,cAIpB,KAtHc,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,SAuH1DF,SAAStB,GACtBtB,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KACEjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,KACElC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqC,GAAG,oBACHF,MAAM,iCACNrB,UAASb,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAA,GAAOa,GAAP,IAAkBmB,WAAY,CAAEC,UAAU,EAAMQ,UAAW,MACpEJ,gBAAgB,EAChBF,YAAY,+CAIhB,OC1CKQ,UAjFmEhD,KAChF,MAAMqB,EAAe4B,aAAgBjD,GADoDkD,EAEzD/B,YAAsB,CAAEC,cAAeC,EAAcC,KAAM,WAAnF6B,EAFiFD,EAEjFC,MAAUjC,EAFuEb,OAAA+C,EAAA,EAAA/C,CAAA6C,EAAA,WAGnFG,EAAgBC,YAAmCC,GAASA,EAAMF,eAElEG,EAAuC,CAC3C,CACE3C,UAAW,gBACX4C,MAAOC,IAAUC,MAkBfC,EAA8C,CAClDhD,QAf8B,CAC9B,CACEC,UAAW,gBACXC,KAAM,aAER,CACED,UAAW,mBACXC,KAAM,mBAER,CACED,UAAW,QACXC,KAAM,UAKR+C,WAAY5C,EACZC,YACA4C,SAAU,cACVC,MAAO,kBAkBT,OAfApC,oBACE,KAAM,MACIqC,EAAYX,EAAcY,gBAA1BD,QACRE,WAAW,KACTf,EAAM9C,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAA,GACDgB,GADA,IAEH2C,QAAS,CACPvB,GAAIuB,EAAQvB,QAGf,MAEL,IAIAxC,EAAAC,EAAAC,cAACC,EAAA,GAAD,CAAiB2D,MAAM,mCAA6BI,OAAQ,IAC1DlE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUc,UAAWA,EAAWkD,cAAepE,EAAOe,aAAcjB,KAClEG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAkBc,UAAWA,EAAWuB,GAAG,aAAa4B,QAAQ,IAChEpE,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KACEjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,KACElC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEc,UAASb,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAA,GAAOa,GAAP,IAAkBmB,WAAY,CAAEC,UAAU,KACnDG,GAAG,aACHD,YAAY,0BACZE,gBAAgB,EAChBH,MAAM,gBACNhC,KAAMC,IAAUuC,cAItB9C,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KACEjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,KACElC,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,GACMN,EADN,CAEEsE,qBAAsBZ,IAAUC,IAChCY,cAAef,GACXI,EAJN,CAKEY,SAAS,sDCxFvB7E,EAAAC,EAAAC,EAAA,sBAAAC,IAAO,MAAMA,EAAa","file":"static/js/391.ef74742e.chunk.js","sourcesContent":["import { Basic } from 'summer';\r\nimport { Empresa } from '../ger/empresa';\r\nimport { GiaSpOcorrencia } from './giaSpOcorrencia';\r\n\r\nexport interface GiaSpInfComp extends Basic {\r\n  referencia?: string;\r\n  empresa?: Empresa;\r\n  ocorrencias?: GiaSpOcorrencia[];\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.giaspinfcomp';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mlf/giaSpSubItem';\r\n\r\nconst OcorrenciaIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      type={InputType.INPUT_SEARCH}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n          {\r\n            dataField: 'fundamentacao',\r\n            text: 'Fundamentação Legal',\r\n          },\r\n          {\r\n            dataField: 'tipo',\r\n            text: 'Tipo',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'GiaSpSubItemSearchView',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default OcorrenciaIS;\r\n","import React, { useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { DetailEditForm, DetailEditViewFormProps, fillZero, InputGroupInline, InputType } from 'summer';\r\nimport { GiaSpOcorrencia } from '../../../../models/dtos/mlf/giaSpOcorrencia';\r\nimport OcorrenciaIS from '../../../components/mlf/ocorrenciaIS/OcorrenciaIS';\r\n\r\nconst GiaSpOcorrenciaEditView: React.FC<DetailEditViewFormProps<GiaSpOcorrencia>> = props => {\r\n  const formProps = useForm<GiaSpOcorrencia>({\r\n    defaultValues: { ...props.selectedItem },\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const codigo = formProps.getValues().codigo && formProps.getValues().codigo.codigo;\r\n  const listaIE = ['00218', '00219', '00704', '00705', '00706', '00707', '00729', '00730'];\r\n  const listaIESubstituto = ['00210', '00211'];\r\n  const listaIESubstituido = ['00701', '00702'];\r\n  const listaCredAcum = ['00220', '00221', '00740', '00741', '00223', '00744', '00745'];\r\n\r\n  useEffect(() => {\r\n    const { nf } = formProps.getValues();\r\n    if (nf) {\r\n      if (nf.length !== 9) {\r\n        formProps.setValue('nf', fillZero(nf, 9));\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps}>\r\n      <Row>\r\n        <Col>\r\n          <OcorrenciaIS\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            label=\"Ocorrência\"\r\n            placeholder=\"Selecione uma ocorrência\"\r\n            id=\"codigo\"\r\n            isPrependLabel={true}\r\n            inputSearchProps={{ size: 'xl' }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"valor\"\r\n            label=\"Valor\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            isPrependLabel={true}\r\n            placeholder=\"Informe o valor\"\r\n            type={InputType.NUMBER}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      {listaIE.includes(codigo) ? (\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"ie\"\r\n              label=\"Inscrição Estadual\"\r\n              formProps={{ ...formProps, validation: { required: true, maxLength: 14 } }}\r\n              isPrependLabel={true}\r\n              placeholder=\"Informe a Inscrição Estadual\"\r\n              type={InputType.NUMBER}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      ) : null}\r\n      {listaIESubstituto.includes(codigo) ? (\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"ieSubstituto\"\r\n              label=\"Inscrição Estadual Substituto\"\r\n              formProps={{ ...formProps, validation: { required: true, maxLength: 14 } }}\r\n              isPrependLabel={true}\r\n              placeholder=\"Informe a Inscrição Estadual Substituta\"\r\n              type={InputType.NUMBER}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      ) : null}\r\n      {listaIESubstituido.includes(codigo) ? (\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"ieSubstituido\"\r\n              label=\"Inscrição Estadual Substituído\"\r\n              formProps={{ ...formProps, validation: { required: true, maxLength: 14 } }}\r\n              isPrependLabel={true}\r\n              placeholder=\"Informe a Inscrição Estadual Substituída\"\r\n              type={InputType.NUMBER}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      ) : null}\r\n      {listaIESubstituido.includes(codigo) || listaIESubstituto.includes(codigo) ? (\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"nf\"\r\n              label=\"Número da Nota Fiscal\"\r\n              formProps={{ ...formProps, validation: { required: true, maxLength: 9 } }}\r\n              isPrependLabel={true}\r\n              placeholder=\"Informe o Número da Nota Fiscal\"\r\n              type={InputType.NUMBER}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      ) : null}\r\n      {listaIESubstituto.includes(codigo) ? (\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"referenciaInicio\"\r\n              label=\"Referência Inicial\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              isPrependLabel={true}\r\n              type={InputType.REFERENCE}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      ) : null}\r\n      {listaIESubstituto.includes(codigo) ? (\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"referenciaFim\"\r\n              label=\"Referência Final\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              isPrependLabel={true}\r\n              type={InputType.REFERENCE}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      ) : null}\r\n      {listaCredAcum.includes(codigo) ? (\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"codigoAutorizacao\"\r\n              label=\"Código de Autorização\"\r\n              formProps={{ ...formProps, validation: { required: true, maxLength: 12 } }}\r\n              isPrependLabel={true}\r\n              placeholder=\"Informe o Código de Autorização\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n      ) : null}\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default GiaSpOcorrenciaEditView;\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, Row } from 'reactstrap';\r\nimport {\r\n  ColumnsProps,\r\n  DefaultSortProps,\r\n  DetailManagerForm,\r\n  DetailManagerFormProps,\r\n  EditForm,\r\n  EditViewProps,\r\n  getSelectedItem,\r\n  InputGroupInline,\r\n  InputType,\r\n  OrderType,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { CLASS_NAME, GiaSpInfComp } from '../../../../models/dtos/mlf/giaSpInfComp';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport GiaSpOcorrenciaEditView from '../giaSpOcorrencia/GiaSpOcorrenciaEditView';\r\n\r\ninterface GiaSpInfCompEditViewProps extends EditViewProps<GiaSpInfComp> {}\r\n\r\nconst GiaSpInfCompEditView: FC<GiaSpInfCompEditViewProps & RouteComponentProps> = props => {\r\n  const selectedItem = getSelectedItem(props);\r\n  const { reset, ...formProps } = useForm<GiaSpInfComp>({ defaultValues: selectedItem, mode: 'onBlur' });\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const defaultSortProps: DefaultSortProps[] = [\r\n    {\r\n      dataField: 'codigo.codigo',\r\n      order: OrderType.ASC,\r\n    },\r\n  ];\r\n\r\n  const colunas: ColumnsProps[] = [\r\n    {\r\n      dataField: 'codigo.codigo',\r\n      text: 'Código',\r\n    },\r\n    {\r\n      dataField: 'codigo.descricao',\r\n      text: 'Descrição',\r\n    },\r\n    {\r\n      dataField: 'valor',\r\n      text: 'Valor',\r\n    },\r\n  ];\r\n  const ocorrenciaFormProps: DetailManagerFormProps = {\r\n    columns: colunas,\r\n    detailView: GiaSpOcorrenciaEditView,\r\n    formProps,\r\n    propName: 'ocorrencias',\r\n    title: 'Ocorrências',\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      const { empresa } = globalReducer.globalParameter;\r\n      setTimeout(() => {\r\n        reset({\r\n          ...selectedItem,\r\n          empresa: {\r\n            id: empresa.id,\r\n          },\r\n        });\r\n      }, 500);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  return (\r\n    <WindowComponent title=\"Informações Complementares\" wikiId={35}>\r\n      <EditForm formProps={formProps} editViewProps={props} dtoClassName={CLASS_NAME}>\r\n        <InputGroupInline formProps={formProps} id=\"empresa.id\" hidden={true} />\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              id=\"referencia\"\r\n              placeholder=\"Informe a Referência\"\r\n              isPrependLabel={true}\r\n              label=\"Referência\"\r\n              type={InputType.REFERENCE}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <DetailManagerForm\r\n              {...props}\r\n              defaultSortDirection={OrderType.ASC}\r\n              defaultSorted={defaultSortProps}\r\n              {...ocorrenciaFormProps}\r\n              keyField=\"rowIndex\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </EditForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default GiaSpInfCompEditView;\r\n","import { Basic } from 'summer';\r\n\r\nexport interface GiaSpSubItem extends Basic {\r\n  codigo?: string;\r\n  descricao?: string;\r\n  fundamentacao?: string;\r\n  tipo?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.giaspsubitem';\r\n"],"sourceRoot":""}
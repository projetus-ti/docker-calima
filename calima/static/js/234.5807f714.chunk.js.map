{"version":3,"sources":["views/pages/mlf/report/servicoTomado/servicoTomadoRV.ts","views/pages/mlf/report/servicoTomado/ServicoTomadoReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/printerConfigTypeEnum.ts","models/enumerated/ger/printerTypeEnum.ts","dependencies/empresaMLFDependency.ts","models/dtos/ger/printerDataBasic.ts","views/pages/report/ReportFormView.tsx"],"names":["REPORT_TITLE","BASIC_DATA","Object","objectSpread2","getDefaultPrinterDataBasic","DATES","value","dtFinal","dtInicial","ServicoTomadoReportView","props","globalReducer","useSelector","state","history","useHistory","formProps","useForm","mode","useEffect","globalParameter","empresa","setTimeout","setValue","id","react_default","a","createElement","summer_esm","assign","title","dependencies","hasEmpresa","hasEmpresaMLF","ReportFormView","printerData","hidden","Row","className","Col","xs","CustomInput","type","label","name","innerRef","register","result","__webpack_require__","d","__webpack_exports__","SIMPLE","DATE","MONTHYEAR","MONTHYEARS","YEAR","GRAPHIC","PRINTER_TYPE_ENUM","empresaMLF","_enumerated_ger_printerConfigTypeEnum__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_printerTypeEnum__WEBPACK_IMPORTED_MODULE_1__","reportEventType","classKey","printerConfigTypeEnum","module","anoLabel","dtFinalLabel","dtInicialLabel","pageNumber","passObj","printerDataEmail","printerTypeEnum","refFinalLabel","refInicialLabel","reportSequence","_props$printerData","resetObject","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","length","current","currentMomentDate","endDate","formatDate","toDate","endOf","referenciaInicial","format","REF_PATTERN","referenciaFinal","ano","String","year","reset","dateInitial","react__WEBPACK_IMPORTED_MODULE_2___default","summer__WEBPACK_IMPORTED_MODULE_7__","isPrependLabel","validation","required","InputType","dateComponent","datesComponent","Fragment","referenceInitial","REFERENCE","referenceComponent","referencesComponent","anoComponent","inputMaskedProps","mask","MASK","reactstrap__WEBPACK_IMPORTED_MODULE_3__","noValidate","children","firstOpen","extraConfigOpened","placeholder","iconAppend","appendClickHandler","maxLength","minLength","min","NUMBER","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","inputDropDownProps","optionsProvider","selectProps","isClearable","DROP_DOWN","handleSubmit","data","event","preventDefault","erros","validateExtras","params","message","AlertType","ERROR","alertManager","emit","ACTION_EVENTS","SHOW","showToast","INFORMATION","delay","gerarOldReport","errorFunction","mensagem","thenFunction","downloadOldReport","response","contentDisposition","headers","filename","slice","lastIndexOf","split","replace","saveAs","hideCancelButton"],"mappings":"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","file":"static/js/234.5807f714.chunk.js","sourcesContent":["export interface ServicoTomadoRV {\r\n  paginaInicial?: number;\r\n  armazenarPaginaInicial?: boolean;\r\n  sequenciarRelatorio?: boolean;\r\n  referencia?: string;\r\n  tipoImpressao?: number;\r\n  idGerEmpresa?: number;\r\n  dataInicialStr?: string;\r\n  dataFinalStr?: string;\r\n}\r\n\r\nexport const REPORT_TITLE = 'Registro de Serviços Tomados - Saída';\r\nexport const REPORT_EVENT: string = 'printServicoTomado'; // Nome do metódo a ser chamado no backend\r\nexport const CLASS_KEY: string = 'servicotomadorelpass'; // Nome da classe RelPass no backedn\r\n","import React, { useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { InputGroupInline, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMLF } from '../../../../../dependencies/empresaMLFDependency';\r\nimport { getDefaultPrinterDataBasic, PrinterDataBasic } from '../../../../../models/dtos/ger/printerDataBasic';\r\nimport { DATES } from '../../../../../models/enumerated/ger/printerConfigTypeEnum';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport ReportFormView from '../../../report/ReportFormView';\r\nimport { CLASS_KEY, REPORT_EVENT, REPORT_TITLE, ServicoTomadoRV } from './servicoTomadoRV';\r\n\r\nconst BASIC_DATA: PrinterDataBasic = {\r\n  ...getDefaultPrinterDataBasic(REPORT_TITLE, REPORT_EVENT, CLASS_KEY, DATES.value),\r\n  dtFinal: '31/12/2017',\r\n  dtInicial: '01/01/2017',\r\n};\r\n\r\nexport default function ServicoTomadoReportView(props: WindowComponentProps) {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const history = useHistory();\r\n\r\n  const formProps = useForm<ServicoTomadoRV>({ mode: 'onBlur' });\r\n\r\n  useEffect(\r\n    () => {\r\n      if (globalReducer.globalParameter.empresa !== null) {\r\n        setTimeout(() => {\r\n          formProps.setValue('idGerEmpresa', globalReducer.globalParameter.empresa.id);\r\n        }, 800);\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  return (\r\n    <WindowComponent\r\n      {...props}\r\n      title={REPORT_TITLE}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMLF(globalReducer.globalParameter)]}\r\n    >\r\n      <ReportFormView formProps={formProps} printerData={BASIC_DATA} history={history}>\r\n        <InputGroupInline formProps={formProps} id=\"idGerEmpresa\" hidden={true} />\r\n        <Row className=\"align-items-center\">\r\n          <Col xs={4}>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              label=\"Armazenar Página (Livro Oficial)\"\r\n              id=\"armazenarPaginaInicial\"\r\n              name=\"armazenarPaginaInicial\"\r\n              innerRef={formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </ReportFormView>\r\n    </WindowComponent>\r\n  );\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const SIMPLE = { label: '', value: '0' };\r\nexport const DATE = { label: '', value: '1' };\r\nexport const DATES = { label: '', value: '2' };\r\nexport const MONTHYEAR = { label: '', value: '3' };\r\nexport const MONTHYEARS = { label: '', value: '4' };\r\nexport const TINY = { label: '', value: '5' }; // TODO Remover\r\nexport const YEAR = { label: '', value: '6' };\r\nexport const QUARTER_YEAR = { label: '', value: '7' }; // TODO Remover\r\n\r\nconst PRINTER_CONFIG_TYPE_ENUM = [SIMPLE, DATE, DATES, MONTHYEAR, MONTHYEARS, TINY, YEAR, QUARTER_YEAR];\r\n\r\nexport default PRINTER_CONFIG_TYPE_ENUM;\r\n","export const TEXT = { label: 'Texto - CalimaDesk', value: 'texto' };\r\nexport const GRAPHIC = { label: 'Gráfico - PDF', value: 'grafico' };\r\nexport const EMAIL = { label: 'E-mail - PDF', value: 'email' };\r\n\r\nconst PRINTER_TYPE_ENUM = [TEXT, GRAPHIC, EMAIL];\r\n\r\nexport default PRINTER_TYPE_ENUM;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMLF(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMLF) {\r\n    result =\r\n      'A empresa fiscal da empresa selecionada deve estar configurada. Para configurar acesse:\\n' +\r\n      'Módulo Fiscal > Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n","import { SIMPLE } from '../../enumerated/ger/printerConfigTypeEnum';\r\nimport { GRAPHIC } from '../../enumerated/ger/printerTypeEnum';\r\nimport { PrinterDataEmail } from './printerDataEmail';\r\n\r\nexport interface PrinterDataBasic {\r\n  printerTypeEnum?: string;\r\n  dtInicial?: string;\r\n  dtFinal?: string;\r\n  refInicial?: string;\r\n  refFinal?: string;\r\n  reportSequence?: boolean;\r\n  pageNumber?: string;\r\n  title?: string;\r\n  printerDataEmail?: PrinterDataEmail;\r\n  passObj?: any;\r\n  printerConfigTypeEnum?: string;\r\n\r\n  dtInicialLabel?: string;\r\n  dtFinalLabel?: string;\r\n  refInicialLabel?: string;\r\n  refFinalLabel?: string;\r\n  anoLabel?: string;\r\n\r\n  reportEventType: string;\r\n  classKey: string;\r\n  module: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.printerdatabasicdto';\r\n\r\nexport function getDefaultPrinterDataBasic(\r\n  title: string,\r\n  reportEventType: string,\r\n  classKey: string,\r\n  printerConfigTypeEnum: string = SIMPLE.value,\r\n  module: string = 'MLF'\r\n) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    classKey,\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    module,\r\n    pageNumber: '1',\r\n    passObj: {},\r\n    printerConfigTypeEnum,\r\n    printerDataEmail: {},\r\n    printerTypeEnum: GRAPHIC.value,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportSequence: false,\r\n    title,\r\n  };\r\n}\r\n","import { saveAs } from 'file-saver';\r\nimport React, { FC, useEffect } from 'react';\r\nimport { Col, CustomInput, Form, Row } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  currentMomentDate,\r\n  ErroList,\r\n  ERROR,\r\n  format,\r\n  formatDate,\r\n  INFORMATION,\r\n  InputGroupInline,\r\n  InputType,\r\n  ProcessBar,\r\n  REF_PATTERN,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { PrinterDataBasic } from '../../../models/dtos/ger/printerDataBasic';\r\nimport { DATE, DATES, MONTHYEAR, MONTHYEARS, YEAR } from '../../../models/enumerated/ger/printerConfigTypeEnum';\r\nimport PRINTER_TYPE_ENUM, { GRAPHIC } from '../../../models/enumerated/ger/printerTypeEnum';\r\nimport { downloadOldReport, gerarOldReport } from '../../../services/report.service';\r\n\r\nexport interface ReportWindowComponentProps {\r\n  formProps: UseFormProps;\r\n  printerData?: PrinterDataBasic;\r\n  history?: any;\r\n  /** Função de validações extras */\r\n  validateExtras?: (printerData: PrinterDataBasic, formData: any) => string[];\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportFormView: FC<ReportWindowComponentProps> = props => {\r\n  useEffect(\r\n    () => {\r\n      const { printerTypeEnum, printerConfigTypeEnum } = props.printerData;\r\n      let resetObject: any = {\r\n        ...props.printerData,\r\n        printerTypeEnum: printerTypeEnum && printerTypeEnum.length > 0 ? printerTypeEnum[0] : GRAPHIC.value,\r\n      };\r\n\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (printerConfigTypeEnum) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case MONTHYEAR.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case MONTHYEARS.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case YEAR.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      props.formProps.reset(resetObject);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.printerData.printerConfigTypeEnum, props.printerData.printerTypeEnum]\r\n  );\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(props.printerData, data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      props.printerData.passObj = data;\r\n      showToast('Seu relatório está sendo gerado...', { ...INFORMATION, delay: 3000 });\r\n      gerarOldReport(props.printerData, {\r\n        errorFunction: (mensagem: string) => {\r\n          showToast(mensagem, ERROR);\r\n        },\r\n        thenFunction: () => {\r\n          downloadOldReport({\r\n            errorFunction: (mensagem: string) => {\r\n              showToast(mensagem, ERROR);\r\n            },\r\n            thenFunction: (response: any) => {\r\n              const contentDisposition = response.headers['content-disposition'];\r\n              const filename = contentDisposition\r\n                .slice(0, contentDisposition.lastIndexOf(';'))\r\n                .split('filename=')[1]\r\n                .replace(/\"/g, '');\r\n              saveAs(response.data, filename);\r\n            },\r\n          });\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.printerData.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.printerData.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: true } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.printerData.printerConfigTypeEnum === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.printerData.printerConfigTypeEnum === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.printerData.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: true } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"refInicial\"\r\n      label={props.printerData.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: true } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.printerData.printerConfigTypeEnum === MONTHYEAR.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.printerData.printerConfigTypeEnum === MONTHYEARS.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"refFinal\"\r\n          label={props.printerData.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: true } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.printerData.printerConfigTypeEnum === YEAR.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.printerData.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n\r\n      <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n        <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n          <InputGroupInline\r\n            id=\"title\"\r\n            label=\"Título\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Título\"\r\n            iconAppend=\"undo-alt\"\r\n            appendClickHandler={restoreTitle}\r\n            formProps={{\r\n              ...props.formProps,\r\n              validation: {\r\n                maxLength: 120,\r\n                minLength: 5,\r\n                required: true,\r\n              },\r\n            }}\r\n          />\r\n\r\n          <InputGroupInline\r\n            id=\"pageNumber\"\r\n            label=\"Página Inicial\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Página Inicial\"\r\n            formProps={{\r\n              ...props.formProps,\r\n              validation: {\r\n                min: 0,\r\n                required: true,\r\n              },\r\n            }}\r\n            type={InputType.NUMBER}\r\n          />\r\n\r\n          <Row className=\"mb-3 mt-3\">\r\n            <Col>\r\n              <CustomInput\r\n                type=\"switch\"\r\n                label=\"Sequenciar Relatórios\"\r\n                id=\"reportSequence\"\r\n                name=\"reportSequence\"\r\n                innerRef={props.formProps.register}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          {dateComponent}\r\n          {datesComponent}\r\n          {referenceComponent}\r\n          {referencesComponent}\r\n          {anoComponent}\r\n\r\n          <InputGroupInline\r\n            id=\"printerTypeEnum\"\r\n            label=\"Tipo de Impressão\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Selecione o tipo de impressão\"\r\n            formProps={{ ...props.formProps, validation: { required: true } }}\r\n            inputDropDownProps={{\r\n              optionsProvider: PRINTER_TYPE_ENUM,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n        </AccordionItem>\r\n      </Accordion>\r\n\r\n      <ProcessBar handleSubmit={props.formProps.handleSubmit(onSubmit)} hideCancelButton={true} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportFormView;\r\n"],"sourceRoot":""}
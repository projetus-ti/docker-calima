{"version":3,"sources":["views/pages/mlf/refazerLancamentosContabeis/RefazerLancamentosContabeisProcessView.tsx","dependencies/empresaDependency.ts","dependencies/empresaMLFDependency.ts","../node_modules/reactstrap/es/CardTitle.js","services/mlf.service.ts","models/dtos/ger/especie.ts","views/components/ger/especieIS/EspecieIS.tsx"],"names":["RefazerLancamentosContabeisProcessView","props","globalReducer","useSelector","state","formProps","useForm","defaultValues","especies","isConhecimentoTransporteEntrada","isConhecimentoTransporteSaida","isContaPagar","isContaReceber","isEntrada","isSaida","mode","dispatch","useDispatch","useEffect","globalParameter","empresa","fillConfigAttributes","empresaMLF","fillDates","_globalReducer$global","usuario","id","setTimeout","setValue","refAtual","referenciaAtual","dtInicialFmt","formatDate","parseRefToDate","dtFinalFmt","parseLastDay","toDate","todasOpcoesDesmarcadas","values","every","value","callRefazer","data","refazerLancamentosContabeis","errorFunction","mensagem","showToast","ERROR","thenFunction","showJobScreen","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_11__","title","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMLF","reactstrap__WEBPACK_IMPORTED_MODULE_4__","hidden","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","Object","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","validation","required","label","placeholder","isPrependLabel","type","InputType","DATE","onChange","getValues","dtInicial","dataDoFormulario","String","dataFinal","parseDateToRef","reactstrap__WEBPACK_IMPORTED_MODULE_7__","style","marginBottom","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","className","reactstrap__WEBPACK_IMPORTED_MODULE_10__","name","innerRef","register","_components_ger_especieIS_EspecieIS__WEBPACK_IMPORTED_MODULE_16__","tooltipProps","message","inputSearchProps","selectProps","isMulti","handleSubmit","erros","compare","DATE_MONTH_YEAR_PATTERN","dtFinal","push","validateExtras","length","params","AlertType","WARNING","alertManager","emit","ACTION_EVENTS","SHOW","onOkClick","WARNING_YES_NO","handleClose","goBack","dispatchClose","history","onClose","result","__webpack_require__","d","__webpack_exports__","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","string","cssModule","object","CardTitle","Tag","attributes","classes","defaultProps","findEspecieByModelo","findReinfCFOPConfig","getLivroFolhaMLF","refazerLancamentosReinf","findConfigReinfEmpresa","importarIntegracaoFiscalContabil","validarIE","summer__WEBPACK_IMPORTED_MODULE_0__","getService","create","modelo","isImportacao","param","send","post","idCFOP","get","concat","idGerEmpresa","refazerLancamentosContabeisParam","refazerLancamentosReinfParam","idEmpresaMlf","importarParam","inscricaoEstadual","unidadeFederacao","CLASS_NAME","EspecieIS","summer__WEBPACK_IMPORTED_MODULE_2__","assign","columns","dataField","text","dtoClassName","searchViewId","INPUT_SEARCH"],"mappings":"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","file":"static/js/214.1f6983af.chunk.js","sourcesContent":["import React, { FC, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Card, CardBody, CardTitle, Col, CustomInput, Form, Row } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  compare,\r\n  DATE_MONTH_YEAR_PATTERN,\r\n  dispatchClose,\r\n  EditViewProps,\r\n  ErroList,\r\n  ERROR,\r\n  formatDate,\r\n  InputGroupInline,\r\n  InputType,\r\n  parseDateToRef,\r\n  parseLastDay,\r\n  parseRefToDate,\r\n  ProcessBar,\r\n  showToast,\r\n  toDate,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMLF } from '../../../../dependencies/empresaMLFDependency';\r\nimport { RefazerLancamentosContabeisParam } from '../../../../models/dtos/mlf/refazerLancamentosContabeisParam';\r\nimport { refazerLancamentosContabeis } from '../../../../services/mlf.service';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport { showJobScreen } from '../../../../store/ducks/jobs.duck';\r\nimport EspecieIS from '../../../components/ger/especieIS/EspecieIS';\r\n\r\ninterface RefazerLancamentosContabeisProcessView extends EditViewProps<RefazerLancamentosContabeisParam> {}\r\n\r\nconst RefazerLancamentosContabeisProcessView: FC<RefazerLancamentosContabeisProcessView & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const formProps = useForm<RefazerLancamentosContabeisParam>({\r\n    defaultValues: {\r\n      especies: [],\r\n      isConhecimentoTransporteEntrada: true,\r\n      isConhecimentoTransporteSaida: true,\r\n      isContaPagar: true,\r\n      isContaReceber: true,\r\n      isEntrada: true,\r\n      isSaida: true,\r\n    },\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(\r\n    () => {\r\n      if (globalReducer.globalParameter.empresa) {\r\n        fillConfigAttributes();\r\n        if (globalReducer.globalParameter.empresaMLF) {\r\n          fillDates();\r\n        }\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const fillConfigAttributes = () => {\r\n    const {\r\n      usuario,\r\n      empresa: { id },\r\n    } = globalReducer.globalParameter;\r\n\r\n    setTimeout(() => {\r\n      formProps.setValue('idEmpresa', id);\r\n      formProps.setValue('idUsuario', usuario.id);\r\n    }, 1000);\r\n  };\r\n\r\n  const fillDates = () => {\r\n    const refAtual = globalReducer.globalParameter.empresaMLF.referenciaAtual;\r\n    const dtInicialFmt: string = formatDate(parseRefToDate(refAtual, 1));\r\n    const dtFinalFmt: string = formatDate(parseLastDay(refAtual));\r\n    setTimeout(() => {\r\n      formProps.setValue('dtInicial', toDate(dtInicialFmt));\r\n      formProps.setValue('dtFinal', toDate(dtFinalFmt));\r\n    }, 500);\r\n  };\r\n\r\n  const fillDataFinalChange = () => {\r\n    if (formProps.getValues().dtInicial) {\r\n      const dataDoFormulario = toDate(String(formProps.getValues().dtInicial));\r\n      const dataFinal = parseLastDay(parseDateToRef(dataDoFormulario));\r\n      formProps.setValue('dtFinal', toDate(formatDate(dataFinal)));\r\n    } else {\r\n      formProps.setValue('dtFinal', null);\r\n    }\r\n  };\r\n\r\n  const validateExtras = () => {\r\n    const erros = [];\r\n\r\n    if (\r\n      compare(\r\n        formatDate(formProps.getValues().dtInicial, DATE_MONTH_YEAR_PATTERN),\r\n        formatDate(formProps.getValues().dtFinal, DATE_MONTH_YEAR_PATTERN)\r\n      ) > 0\r\n    ) {\r\n      erros.push('Data Final não pode ser menor que a Data Inicial.');\r\n    }\r\n\r\n    if (\r\n      todasOpcoesDesmarcadas([\r\n        formProps.getValues().isConhecimentoTransporteEntrada,\r\n        formProps.getValues().isConhecimentoTransporteSaida,\r\n        formProps.getValues().isContaPagar,\r\n        formProps.getValues().isContaReceber,\r\n        formProps.getValues().isEntrada,\r\n        formProps.getValues().isSaida,\r\n      ])\r\n    ) {\r\n      erros.push('Pelo menos um tipo de nota deve ser selecionado.');\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  const todasOpcoesDesmarcadas = (values: boolean[]) => {\r\n    return values.every(value => !value);\r\n  };\r\n\r\n  const handleRefazer = (data: RefazerLancamentosContabeisParam) => {\r\n    const erros = validateExtras();\r\n    if (erros.length > 0) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.WARNING,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n      return;\r\n    } else {\r\n      const params: AlertProps = {\r\n        message: 'Os lançamentos contábeis informados nas notas serão apagados para a recontabilização.\\nDeseja continuar?!',\r\n        onOkClick: () => callRefazer(data),\r\n        type: AlertType.WARNING_YES_NO,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    }\r\n  };\r\n\r\n  const callRefazer = (data: RefazerLancamentosContabeisParam) => {\r\n    refazerLancamentosContabeis(data, {\r\n      errorFunction: mensagem => {\r\n        showToast(mensagem, ERROR);\r\n      },\r\n      thenFunction: () => {\r\n        dispatch(showJobScreen());\r\n      },\r\n    });\r\n  };\r\n\r\n  const onClose = (goBack: boolean = true) => {\r\n    dispatchClose(props, props.history, goBack);\r\n  };\r\n\r\n  const handleCancel = () => onClose();\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Refazer Lançamentos Contábeis\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMLF(globalReducer.globalParameter)]}\r\n    >\r\n      <Form>\r\n        <InputGroupInline formProps={formProps} id=\"idEmpresa\" hidden={true} />\r\n        <InputGroupInline formProps={formProps} id=\"idUsuario\" hidden={true} />\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              id=\"dtInicial\"\r\n              label=\"Data Inicial\"\r\n              placeholder=\"Informe a Data Inicial do período que deseja refazer os lançamentos contábeis\"\r\n              isPrependLabel={true}\r\n              type={InputType.DATE}\r\n              onChange={fillDataFinalChange}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              id=\"dtFinal\"\r\n              label=\"Data Final\"\r\n              placeholder=\"Informe a Data Final do período que deseja refazer os lançamentos contábeis\"\r\n              isPrependLabel={true}\r\n              type={InputType.DATE}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Card style={{ marginBottom: '16px' }}>\r\n              <CardBody>\r\n                <CardTitle>Filtros Adicionais</CardTitle>\r\n                <Row className=\"mb-3\">\r\n                  <Col>\r\n                    <CustomInput type=\"switch\" label=\"Notas de Entrada\" name=\"isEntrada\" id=\"isEntrada\" innerRef={formProps.register} />\r\n                  </Col>\r\n                  <Col>\r\n                    <CustomInput type=\"switch\" label=\"Contas a Pagar\" name=\"isContaPagar\" id=\"isContaPagar\" innerRef={formProps.register} />\r\n                  </Col>\r\n                  <Col>\r\n                    <CustomInput\r\n                      type=\"switch\"\r\n                      label=\"Conhecimentos de Transporte - Entrada\"\r\n                      name=\"isConhecimentoTransporteEntrada\"\r\n                      id=\"isConhecimentoTransporteEntrada\"\r\n                      innerRef={formProps.register}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"mb-3\">\r\n                  <Col>\r\n                    <CustomInput type=\"switch\" label=\"Notas de Saída\" name=\"isSaida\" id=\"isSaida\" innerRef={formProps.register} />\r\n                  </Col>\r\n                  <Col>\r\n                    <CustomInput type=\"switch\" label=\"Contas a Receber\" name=\"isContaReceber\" id=\"isContaReceber\" innerRef={formProps.register} />\r\n                  </Col>\r\n                  <Col>\r\n                    <CustomInput\r\n                      type=\"switch\"\r\n                      label=\"Conhecimentos de Transporte - Saída\"\r\n                      name=\"isConhecimentoTransporteSaida\"\r\n                      id=\"isConhecimentoTransporteSaida\"\r\n                      innerRef={formProps.register}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"mb-3\">\r\n                  <Col>\r\n                    <EspecieIS\r\n                      formProps={formProps}\r\n                      id=\"especies\"\r\n                      isPrependLabel={true}\r\n                      tooltipProps={{ message: 'Caso não seja informado, o sistema irá considerar todas as Espécies' }}\r\n                      inputSearchProps={{ selectProps: { isMulti: true } }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <ProcessBar handleSubmit={formProps.handleSubmit(handleRefazer)} handleClose={handleCancel} />\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default RefazerLancamentosContabeisProcessView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMLF(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMLF) {\r\n    result =\r\n      'A empresa fiscal da empresa selecionada deve estar configurada. Para configurar acesse:\\n' +\r\n      'Módulo Fiscal > Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import { AxiosInstance } from 'axios';\r\nimport { AxiosParam, create, send } from 'summer';\r\nimport { Cfop } from '../models/dtos/ger/cfop';\r\nimport { Especie } from '../models/dtos/ger/especie';\r\nimport { ConfigLivroMLF } from '../models/dtos/mlf/configLivroMLF';\r\nimport { ConfigReinf } from '../models/dtos/mlf/configReinf';\r\nimport { ImportarIntegracaoFiscalContabilParam } from '../models/dtos/mlf/importarIntegracaoFiscalContabilParam';\r\nimport { RefazerLancamentosContabeisParam } from '../models/dtos/mlf/refazerLancamentosContabeisParam';\r\nimport { RefazerLancamentosReinfParam } from '../models/dtos/mlf/refazerLancamentosReinfParam';\r\n\r\nfunction getService(): AxiosInstance {\r\n  return create('/mlf');\r\n}\r\n\r\nexport function findEspecieByModelo(modelo: string, isImportacao: boolean, param: AxiosParam<Especie>) {\r\n  send(\r\n    getService().post<Especie>('/findEspecieByModelo', { modelo, isImportacao }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function findReinfCFOPConfig(idCFOP: number, param: AxiosParam<Cfop>) {\r\n  send(getService().get<Cfop>(`/findReinfCFOPConfig/${idCFOP}`), param);\r\n}\r\n\r\nexport function getLivroFolhaMLF(idGerEmpresa: number, param: AxiosParam<ConfigLivroMLF>) {\r\n  send(getService().get<ConfigLivroMLF>(`/getLivroFolhaMLF/${idGerEmpresa}`), param);\r\n}\r\n\r\nexport function refazerLancamentosContabeis(refazerLancamentosContabeisParam: RefazerLancamentosContabeisParam, param: AxiosParam<any>) {\r\n  send(getService().post<RefazerLancamentosContabeisParam>('/refazerLancamentosContabeis', refazerLancamentosContabeisParam), param);\r\n}\r\n\r\nexport function refazerLancamentosReinf(refazerLancamentosReinfParam: RefazerLancamentosReinfParam, param: AxiosParam<any>) {\r\n  send(getService().post<RefazerLancamentosReinfParam>('/refazerLancamentosReinf', refazerLancamentosReinfParam), param);\r\n}\r\n\r\nexport function findConfigReinfEmpresa(idEmpresaMlf: number, param: AxiosParam<any>) {\r\n  send(getService().get<ConfigReinf>(`/findConfigReinfEmpresa/${idEmpresaMlf}`), param);\r\n}\r\n\r\nexport function importarIntegracaoFiscalContabil(importarParam: ImportarIntegracaoFiscalContabilParam, param: AxiosParam<any>) {\r\n  send(getService().post<any>('/importarIntegracaoFiscalContabil', importarParam), param);\r\n}\r\n\r\nexport function validarIE(inscricaoEstadual: string, unidadeFederacao: string, param: AxiosParam<boolean>) {\r\n  send(\r\n    getService().post<boolean>('/validarIE', { inscricaoEstadual, unidadeFederacao }),\r\n    param\r\n  );\r\n}\r\n","import { Basic } from 'summer';\r\n\r\nexport interface Especie extends Basic {\r\n  abreviacao?: string;\r\n  descricao?: string;\r\n  cupomFiscalMaqReg?: boolean;\r\n  modelo?: string;\r\n  sequenciarNotas?: boolean;\r\n  naoValidarParticipante?: boolean;\r\n  habilitarReinf?: boolean;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.especie';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/especie';\r\n\r\nconst EspecieIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'abreviacao',\r\n            text: 'Abreviação',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'EspecieSearchView',\r\n      }}\r\n      label=\"Espécie\"\r\n      placeholder=\"Informe a Espécie\"\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EspecieIS;\r\n"],"sourceRoot":""}
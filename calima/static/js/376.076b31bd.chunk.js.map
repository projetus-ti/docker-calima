{"version":3,"sources":["models/dtos/mlf/tipoProduto.ts","views/pages/mlf/tipoProduto/TipoProdutoSearchView.tsx","dependencies/empresaDependency.ts"],"names":["__webpack_require__","d","__webpack_exports__","CLASS_NAME","r","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","summer__WEBPACK_IMPORTED_MODULE_2__","_dependencies_empresaDependency__WEBPACK_IMPORTED_MODULE_3__","_models_dtos_mlf_tipoProduto__WEBPACK_IMPORTED_MODULE_4__","defaultSorted","dataField","order","OrderType","ASC","cellEditProps","blurToSave","mode","ClickEnum","CLICK","TipoProdutoSearchView","props","globalReducer","useSelector","state","grupoTipoProdutoDTO","globalParameter","grupoEmpresaConfig","grupoProduto","grupoTipoProduto","columns","editable","filter","type","FilterType","TEXT","sort","text","a","createElement","title","useGlobalParameter","dependencies","hasEmpresa","Object","assign","searchDataGridProps","dtoClassName","extraData","getExtraData","searchExpressions","fieldName","value","id","result","empresa"],"mappings":"6FAUAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAO,MAAMA,EAAa,iGCV1BH,EAAAI,EAAAF,GAAA,IAAAG,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,IAAAS,EAAAT,EAAA,GAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,MAoBA,MAAMY,EAAoC,CACxC,CACEC,UAAW,SACXC,MAAOC,IAAUC,MAIfC,EAA+B,CACnCC,YAAY,EACZC,KAAMC,IAAUC,OA2DHC,UAxDiDC,KAC9D,MAAMC,EAAgBC,YAAmCC,GAASA,EAAMF,eAElEG,EAAsBH,EAAcI,gBAAgBC,mBAAmBC,aAAaC,iBAEpFC,EAA0B,CAC9B,CACEnB,UAAW,SACXoB,UAAU,EACVC,OAAQ,CACNC,KAAMC,IAAWC,MAEnBC,MAAM,EACNC,KAAM,aAER,CACE1B,UAAW,YACXoB,UAAU,EACVC,OAAQ,CACNC,KAAMC,IAAWC,MAEnBC,MAAM,EACNC,KAAM,oBAaV,OACEjC,EAAAkC,EAAAC,cAAChC,EAAA,GAAD,CACEiC,MAAM,sCACNC,oBAAoB,EACpBf,gBAAiBJ,EAAcI,gBAC/BgB,aAAc,CAAC,IAAMC,YAAWrB,EAAcI,mBAE9CtB,EAAAkC,EAAAC,cAAChC,EAAA,EAADqC,OAAAC,OAAA,GACMxB,EACAA,EAAMyB,oBAFZ,CAGEC,aAAc9C,IACd6B,QAASA,EACTf,cAAeA,EACfL,cAAeA,EACfsC,UAAWC,aAAa5B,EAAO,sBAAuBpB,KACtDiD,kBAxBN,WACE,MAAO,CACL,CACEC,UAAW,sBACXC,MAAO3B,EAAoB4B,8CC5D5B,SAASV,EAAWjB,GACzB,IAAI4B,EAAS,KAIb,OAHK5B,EAAgB6B,UACnBD,EAAS,kDAEJA,EALTxD,EAAAC,EAAAC,EAAA,sBAAA2C","file":"static/js/376.076b31bd.chunk.js","sourcesContent":["import { Basic } from 'summer';\r\nimport { GrupoTipoProduto } from '../ger/grupoTipoProduto';\r\n\r\nexport interface TipoProduto extends Basic {\r\n  codigo?: string;\r\n  descricao?: string;\r\n  grupoTipoProduto?: GrupoTipoProduto;\r\n  tipoItemStr?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mlf.model.dto.tipoproduto';\r\n","import React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  CellEditProps,\r\n  ClickEnum,\r\n  ColumnsProps,\r\n  DefaultSortProps,\r\n  FilterType,\r\n  getExtraData,\r\n  OrderType,\r\n  SearchDataGrid,\r\n  SearchExpression,\r\n  SearchViewProps,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { CLASS_NAME, TipoProduto } from '../../../../models/dtos/mlf/tipoProduto';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\nconst defaultSorted: DefaultSortProps[] = [\r\n  {\r\n    dataField: 'codigo',\r\n    order: OrderType.ASC,\r\n  },\r\n];\r\n\r\nconst cellEditProps: CellEditProps = {\r\n  blurToSave: true,\r\n  mode: ClickEnum.CLICK,\r\n};\r\n\r\nconst TipoProdutoSearchView: FC<SearchViewProps<TipoProduto>> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const grupoTipoProdutoDTO = globalReducer.globalParameter.grupoEmpresaConfig.grupoProduto.grupoTipoProduto;\r\n\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'codigo',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      sort: true,\r\n      text: 'Código',\r\n    },\r\n    {\r\n      dataField: 'descricao',\r\n      editable: true,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      sort: true,\r\n      text: 'Descrição',\r\n    },\r\n  ];\r\n\r\n  function getSearchExpression(): SearchExpression[] {\r\n    return [\r\n      {\r\n        fieldName: 'grupoTipoProduto.id',\r\n        value: grupoTipoProdutoDTO.id,\r\n      },\r\n    ];\r\n  }\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Manutenção de Tipo de Produto\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter)]}\r\n    >\r\n      <SearchDataGrid\r\n        {...props}\r\n        {...props.searchDataGridProps}\r\n        dtoClassName={CLASS_NAME}\r\n        columns={columns}\r\n        cellEditProps={cellEditProps}\r\n        defaultSorted={defaultSorted}\r\n        extraData={getExtraData(props, 'TipoProdutoEditVIew', CLASS_NAME)}\r\n        searchExpressions={getSearchExpression}\r\n      />\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default TipoProdutoSearchView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n"],"sourceRoot":""}
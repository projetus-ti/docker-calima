{"version":3,"sources":["models/dtos/mfp/compensacao.ts","models/enumerated/mfp/tipoCompensacaoEnum.ts","views/pages/mfp/compensacao/CompensacaoSearchView.tsx","dependencies/empresaDependency.ts","dependencies/empresaMFPDependency.ts"],"names":["__webpack_require__","d","__webpack_exports__","CLASS_NAME","NORMAL","SALARIO_FAMILIA","SALARIO_MATERNIDADE","DEC_TERCEIRO_SALARIO_MATERNIDADE","value","label","r","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","summer__WEBPACK_IMPORTED_MODULE_2__","_dependencies_empresaDependency__WEBPACK_IMPORTED_MODULE_3__","_dependencies_empresaMFPDependency__WEBPACK_IMPORTED_MODULE_4__","_models_dtos_mfp_compensacao__WEBPACK_IMPORTED_MODULE_5__","_models_enumerated_mfp_tipoCompensacaoEnum__WEBPACK_IMPORTED_MODULE_6__","defaultSorted","dataField","order","OrderType","ASC","CompensacaoSearchView","props","globalParameter","useSelector","state","globalReducer","columns","editable","filter","type","FilterType","TEXT","formatter","cell","row","refToFormat","referencia","sort","text","NUMBER","boolColumn","editor","a","createElement","title","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMFP","wikiId","Object","assign","searchDataGridProps","dtoClassName","searchExpressions","fieldName","empresaMFP","id","extraData","getExtraData","result","empresa"],"mappings":"6FAaAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAO,MAAMA,EAAa,iGCb1BH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAAN,EAAAC,EAAAC,EAAA,sBAAAK,IAAO,MAAMH,EAAS,CAAEI,MAAO,SAAUC,MAAO,UACnCJ,EAAkB,CAAEG,MAAO,kBAAmBC,MAAO,yBACrDH,EAAsB,CAAEE,MAAO,sBAAuBC,MAAO,0BAC7DF,EAAmC,CAAEC,MAAO,mCAAoCC,MAAO,oECHpGT,EAAAU,EAAAR,GAAA,IAAAS,EAAAX,EAAA,GAAAY,EAAAZ,EAAAa,EAAAF,GAAAG,EAAAd,EAAA,IAAAe,EAAAf,EAAA,GAAAgB,EAAAhB,EAAA,KAAAiB,EAAAjB,EAAA,KAAAkB,EAAAlB,EAAA,MAAAmB,EAAAnB,EAAA,MAsBA,MAAMoB,EAAoC,CACxC,CACEC,UAAW,aACXC,MAAOC,IAAUC,MA8FNC,UA1FiDC,KAAS,MAC/DC,EAAoBC,YAAmCC,GAASA,EAAMC,eAAtEH,gBAWR,MAAMI,EAA0B,CAC9B,CACEV,UAAW,aACXW,UAAU,EACVC,OAAQ,CACNC,KAAMC,IAAWC,MAEnBC,UAAW,CAACC,EAAMC,IACTC,aAAYD,EAAIE,YAEzBC,MAAM,EACNC,KAAM,iBAER,CACEtB,UAAW,QACXW,UAAU,EACVC,OAAQ,CACNC,KAAMC,IAAWS,QAEnBF,MAAM,EACNC,KAAM,SAERE,aAAW,CACTxB,UAAW,gBACXyB,QAAQ,EACRb,QAAQ,EACRS,MAAM,EACNC,KAAM,4BAER,CACEtB,UAAW,OACXW,UAAU,EACVK,UAAWE,GACTA,IAAQlC,IAAgBG,OAAS+B,IAAQjC,IAAoBE,OAASD,IAAiCC,MAAQ,gBAAY,oBAC7HkC,MAAM,EACNC,KAAM,QAER,CACEtB,UAAW,aACXW,UAAU,EACVC,OAAQ,CACNC,KAAMC,IAAWC,MAEnBM,MAAM,EACNC,KAAM,oBAER,CACEtB,UAAW,eACXW,UAAU,EACVC,OAAQ,CACNC,KAAMC,IAAWC,MAEnBM,MAAM,EACNC,KAAM,YAIV,OACE/B,EAAAmC,EAAAC,cAACjC,EAAA,GAAD,CACEkC,MAAM,wCACNC,oBAAoB,EACpBvB,gBAAiBA,EACjBwB,aAAc,CAAC,IAAMC,YAAWzB,GAAkB,IAAM0B,YAAc1B,IACtE2B,OAAQ,KAER1C,EAAAmC,EAAAC,cAACjC,EAAA,EAADwC,OAAAC,OAAA,GACM9B,EACAA,EAAM+B,oBAFZ,CAGE1B,QAASA,EACTX,cAAeA,EACfsC,aAAcvD,IACdwD,kBAhFN,WACE,MAAO,CACL,CACEC,UAAW,gBACXpD,MAAOmB,EAAgBkC,WAAWC,MA6ElCC,UAAWC,aAAatC,EAAO,sBAAuBvB,6CC/GvD,SAASiD,EAAWzB,GACzB,IAAIsC,EAAS,KAIb,OAHKtC,EAAgBuC,UACnBD,EAAS,kDAEJA,EALTjE,EAAAC,EAAAC,EAAA,sBAAAkD,sCCAO,SAASC,EAAc1B,GAC5B,IAAIsC,EAAS,KAKb,OAJKtC,EAAgBkC,aACnBI,EACE,sKAEGA,EANTjE,EAAAC,EAAAC,EAAA,sBAAAmD","file":"static/js/288.d9bcda93.chunk.js","sourcesContent":["import { CompensacaoExample } from './compensacaoExample';\r\nimport { CompensacaoGps } from './compensacaoGps';\r\nimport { GuiaGpsExample } from './guiaGpsExample';\r\nimport { Vinculo } from './vinculo';\r\n\r\nexport interface Compensacao extends CompensacaoExample {\r\n  guias?: CompensacaoGps[];\r\n  guiaGpsGeradora?: GuiaGpsExample;\r\n  vinculo?: Vinculo;\r\n  vrCompensado?: number;\r\n  vrACompensar?: number;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.compensacao';\r\n","export const NORMAL = { value: 'NORMAL', label: 'Normal' };\r\nexport const SALARIO_FAMILIA = { value: 'SALARIO_FAMILIA', label: 'Salário Família' };\r\nexport const SALARIO_MATERNIDADE = { value: 'SALARIO_MATERNIDADE', label: 'Salário Maternidade' };\r\nexport const DEC_TERCEIRO_SALARIO_MATERNIDADE = { value: 'DEC_TERCEIRO_SALARIO_MATERNIDADE', label: '13º Salário Maternidade' };\r\n\r\nexport const TIPO_COMPENSACAO_ENUM_VALUES = [NORMAL, SALARIO_FAMILIA, SALARIO_MATERNIDADE, DEC_TERCEIRO_SALARIO_MATERNIDADE];\r\n","import React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  boolColumn,\r\n  ColumnsProps,\r\n  DefaultSortProps,\r\n  FilterType,\r\n  getExtraData,\r\n  OrderType,\r\n  refToFormat,\r\n  SearchDataGrid,\r\n  SearchExpression,\r\n  SearchViewProps,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMFP } from '../../../../dependencies/empresaMFPDependency';\r\nimport { CLASS_NAME, Compensacao } from '../../../../models/dtos/mfp/compensacao';\r\nimport { DEC_TERCEIRO_SALARIO_MATERNIDADE, SALARIO_FAMILIA, SALARIO_MATERNIDADE } from '../../../../models/enumerated/mfp/tipoCompensacaoEnum';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\nconst defaultSorted: DefaultSortProps[] = [\r\n  {\r\n    dataField: 'referencia',\r\n    order: OrderType.ASC,\r\n  },\r\n];\r\n\r\nconst CompensacaoSearchView: FC<SearchViewProps<Compensacao>> = props => {\r\n  const { globalParameter } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  function getSearchExpression(): SearchExpression[] {\r\n    return [\r\n      {\r\n        fieldName: 'empresaMFP.id',\r\n        value: globalParameter.empresaMFP.id,\r\n      },\r\n    ];\r\n  }\r\n\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'referencia',\r\n      editable: true,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      formatter: (cell, row) => {\r\n        return refToFormat(row.referencia);\r\n      },\r\n      sort: true,\r\n      text: 'Referência',\r\n    },\r\n    {\r\n      dataField: 'valor',\r\n      editable: true,\r\n      filter: {\r\n        type: FilterType.NUMBER,\r\n      },\r\n      sort: true,\r\n      text: 'Valor',\r\n    },\r\n    boolColumn({\r\n      dataField: 'retencaoFonte',\r\n      editor: false,\r\n      filter: true,\r\n      sort: true,\r\n      text: 'Retenção na Fonte',\r\n    }),\r\n    {\r\n      dataField: 'tipo',\r\n      editable: true,\r\n      formatter: row =>\r\n        row === SALARIO_FAMILIA.value || row === SALARIO_MATERNIDADE.value || DEC_TERCEIRO_SALARIO_MATERNIDADE.value ? 'Dedução' : 'Compensação',\r\n      sort: true,\r\n      text: 'Tipo',\r\n    },\r\n    {\r\n      dataField: 'observacao',\r\n      editable: true,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      sort: true,\r\n      text: 'Observação',\r\n    },\r\n    {\r\n      dataField: 'tomador.nome',\r\n      editable: true,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      sort: true,\r\n      text: 'Tomador',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"GPS (Compensação/Dedução)\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalParameter}\r\n      dependencies={[() => hasEmpresa(globalParameter), () => hasEmpresaMFP(globalParameter)]}\r\n      wikiId={892}\r\n    >\r\n      <SearchDataGrid\r\n        {...props}\r\n        {...props.searchDataGridProps}\r\n        columns={columns}\r\n        defaultSorted={defaultSorted}\r\n        dtoClassName={CLASS_NAME}\r\n        searchExpressions={getSearchExpression}\r\n        extraData={getExtraData(props, 'CompensacaoEditView', CLASS_NAME)}\r\n      />\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default CompensacaoSearchView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMFP(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMFP) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o Módulo Folha de Pagamento. Para configurá-la acesse Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n"],"sourceRoot":""}
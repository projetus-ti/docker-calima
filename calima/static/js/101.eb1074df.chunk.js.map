{"version":3,"sources":["models/enumerated/mcg/balanceteCentroCustoOrdemEnum.ts","views/pages/mcg/report/balanceteCentroCusto/balanceteCentroCustoRV.ts","views/pages/mcg/report/balanceteCentroCusto/BalanceteCentroCustoReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/printerConfigTypeEnum.ts","models/enumerated/ger/printerTypeEnum.ts","dependencies/empresaMCGDependency.ts","models/dtos/ger/printerDataBasic.ts","views/pages/report/ReportFormView.tsx","models/enumerated/mcg/sinteticoAnaliticoTipoEnum.ts","models/enumerated/mcg/consolidarEnum.ts"],"names":["__webpack_require__","d","__webpack_exports__","CONTA","BALANCETE_CENTRO_CUSTO_ORDEM_ENUM_VALUES","value","label","REPORT_TITLE","BASIC_DATA","Object","objectSpread2","getDefaultPrinterDataBasic","MONTHYEARS","module","refFinal","format","currentMomentDate","toDate","REF_PATTERN","refInicial","BalanceteCentroCustoReportView","props","history","useHistory","formProps","useForm","mode","globalReducer","useSelector","state","_useState","useState","_useState2","slicedToArray","isEnabledGrau","setIsEnabledGrau","_useState3","_useState4","isEnabledIsMatriz","setIsEnabledIsMatriz","useEffect","globalParameter","empresa","setTimeout","_globalReducer$global","id","grupoEmpresa","grupoEmpresaRaiz","matriz","getValues","isAcumularMatrizFilial","centralizar","register","name","setValue","ANALITICO_NUMBER_VALUE","NORMAL_NUMBER","idsGrupoEmpresaPais","adjustTitle","consolidar","GRUPO_ATUAL_NUMBER","grau","tipo","SINTETICO_NUMBER_VALUE","GRAU_CONTA_NUMBER_VALUE","grauConta","reportTitle","acumularMatrizFilial","react_default","a","createElement","Col","CustomInput","type","onChange","innerRef","summer_esm","assign","title","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMCG","wikiId","ReportFormView","printerData","Row","isPrependLabel","placeholder","validation","required","inputDropDownProps","optionsProvider","SINTETICO_ANALITICO_TIPO_NUMBER_VALUE_ENUM_VALUES","selectProps","isClearable","InputType","DROP_DOWN","max","disabled","NUMBER","className","CONSOLIDAR_NUMBER_ENUM_VALUES","result","SIMPLE","DATE","DATES","MONTHYEAR","YEAR","GRAPHIC","PRINTER_TYPE_ENUM","empresaMCG","_enumerated_ger_printerConfigTypeEnum__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_printerTypeEnum__WEBPACK_IMPORTED_MODULE_1__","reportEventType","classKey","printerConfigTypeEnum","anoLabel","dtFinalLabel","dtInicialLabel","pageNumber","passObj","printerDataEmail","printerTypeEnum","refFinalLabel","refInicialLabel","reportSequence","_props$printerData","resetObject","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","length","current","endDate","dtInicial","formatDate","dtFinal","endOf","referenciaInicial","referenciaFinal","ano","String","year","reset","dateInitial","react__WEBPACK_IMPORTED_MODULE_2___default","summer__WEBPACK_IMPORTED_MODULE_7__","dateComponent","datesComponent","Fragment","referenceInitial","REFERENCE","referenceComponent","referencesComponent","anoComponent","inputMaskedProps","mask","MASK","reactstrap__WEBPACK_IMPORTED_MODULE_3__","noValidate","children","firstOpen","extraConfigOpened","iconAppend","appendClickHandler","maxLength","minLength","min","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","handleSubmit","data","event","preventDefault","erros","validateExtras","params","message","AlertType","ERROR","alertManager","emit","ACTION_EVENTS","SHOW","showToast","INFORMATION","delay","gerarOldReport","errorFunction","mensagem","thenFunction","downloadOldReport","response","contentDisposition","headers","filename","slice","lastIndexOf","split","replace","saveAs","hideCancelButton","ANALITICO_NUMBER","GRAU_CONTA_NUMBER","SINTETICO_ANALITICO_VALUES","SINTETICO_ANALITICO_TIPO_ENUM_VALUES","ANALITICO","SINTETICO","GRAU_CONTA","SINTETICO_ANALITICO_TIPO_VALUE_STRING_ENUM_VALUES","SINTETICO_NUMBER","NORMAL","CONSOLIDAR_ENUM_VALUES"],"mappings":"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","file":"static/js/101.eb1074df.chunk.js","sourcesContent":["export const CONTA = { value: 1, label: 'Conta' };\r\nexport const DESCRICAO = { value: 2, label: 'Descrição' };\r\n\r\nexport const BALANCETE_CENTRO_CUSTO_ORDEM_ENUM_VALUES = [CONTA, DESCRICAO];\r\n","export interface BalanceteCentroCustoRV {\r\n  dataHora?: boolean;\r\n  idsGerGrupoEmpresaPais?: number[];\r\n  idGerGrupoEmpresaAtual?: number;\r\n  idGerGrupoEmpresaRaiz?: number;\r\n  idGerEmpresa?: number;\r\n  consolidar?: number;\r\n  imprimirConta?: boolean;\r\n  ordem?: number;\r\n  tipo?: number;\r\n  grauConta?: number;\r\n  isAcumularMatrizFilial?: boolean;\r\n}\r\n\r\nexport const CLASS_KEY = 'balancetecentrocustorelpass';\r\nexport const REPORT_EVENT = 'printBalanceteCentroCusto';\r\nexport const REPORT_TITLE = 'Balancete por Centro de Custo';\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { currentMomentDate, format, InputGroupInline, InputType, REF_PATTERN, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../../dependencies/empresaMCGDependency';\r\nimport { getDefaultPrinterDataBasic, PrinterDataBasic } from '../../../../../models/dtos/ger/printerDataBasic';\r\nimport { MONTHYEARS } from '../../../../../models/enumerated/ger/printerConfigTypeEnum';\r\nimport { BALANCETE_CENTRO_CUSTO_ORDEM_ENUM_VALUES, CONTA } from '../../../../../models/enumerated/mcg/balanceteCentroCustoOrdemEnum';\r\nimport { CONSOLIDAR_NUMBER_ENUM_VALUES, GRUPO_ATUAL_NUMBER, NORMAL_NUMBER } from '../../../../../models/enumerated/mcg/consolidarEnum';\r\nimport {\r\n  ANALITICO_NUMBER_VALUE,\r\n  GRAU_CONTA_NUMBER_VALUE,\r\n  SINTETICO_ANALITICO_TIPO_NUMBER_VALUE_ENUM_VALUES,\r\n  SINTETICO_NUMBER_VALUE,\r\n} from '../../../../../models/enumerated/mcg/sinteticoAnaliticoTipoEnum';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport ReportFormView from '../../../report/ReportFormView';\r\nimport { BalanceteCentroCustoRV, CLASS_KEY, REPORT_EVENT, REPORT_TITLE } from './balanceteCentroCustoRV';\r\n\r\nconst BASIC_DATA: PrinterDataBasic = {\r\n  ...getDefaultPrinterDataBasic(REPORT_TITLE, REPORT_EVENT, CLASS_KEY, MONTHYEARS.value),\r\n  module: 'MCG',\r\n  refFinal: format(currentMomentDate().toDate(), REF_PATTERN),\r\n  refInicial: format(currentMomentDate().toDate(), REF_PATTERN),\r\n};\r\n\r\nexport default function BalanceteCentroCustoReportView(props: WindowComponentProps) {\r\n  const history = useHistory();\r\n  const formProps = useForm<BalanceteCentroCustoRV>({ mode: 'onBlur' });\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [isEnabledGrau, setIsEnabledGrau] = useState(true);\r\n  const [isEnabledIsMatriz, setIsEnabledIsMatriz] = useState(false);\r\n\r\n  const carregarParametroEmpresa = () => {\r\n    if (globalReducer.globalParameter.empresa.matriz === null) {\r\n      setIsEnabledIsMatriz(true);\r\n      formProps.getValues().isAcumularMatrizFilial = globalReducer.globalParameter.empresa.centralizar;\r\n    }\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (globalReducer.globalParameter.empresa) {\r\n        setTimeout(() => {\r\n          const {\r\n            empresa: { id, grupoEmpresa, grupoEmpresaRaiz },\r\n          } = globalReducer.globalParameter;\r\n          carregarParametroEmpresa();\r\n          formProps.register({ name: 'idGerEmpresa' });\r\n          formProps.register({ name: 'idGerGrupoEmpresaAtual' });\r\n          formProps.register({ name: 'idGerGrupoEmpresaRaiz' });\r\n          formProps.register({ name: 'idsGerGrupoEmpresaPais' });\r\n          formProps.setValue('tipo', ANALITICO_NUMBER_VALUE.value, true);\r\n          formProps.setValue('ordem', CONTA.value, true);\r\n          formProps.setValue('grauConta', 18, true);\r\n          formProps.setValue('consolidar', NORMAL_NUMBER.value, true);\r\n          formProps.setValue('idGerEmpresa', id, true);\r\n          formProps.setValue('idGerGrupoEmpresaAtual', grupoEmpresa.id, true);\r\n          formProps.setValue('idGerGrupoEmpresaRaiz', grupoEmpresaRaiz.id, true);\r\n          formProps.setValue('idsGerGrupoEmpresaPais', globalReducer.globalParameter.idsGrupoEmpresaPais, true);\r\n        }, 800);\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const adjustTitle = () => {\r\n    let consolidar: string = '';\r\n\r\n    if (formProps.getValues().consolidar !== NORMAL_NUMBER.value) {\r\n      const titleconsolidar = formProps.getValues().consolidar === GRUPO_ATUAL_NUMBER.value ? 'Grupo Atual' : 'Hierarquia Inferior';\r\n      consolidar = ' (' + titleconsolidar + ')';\r\n    }\r\n\r\n    let grau: string = '';\r\n\r\n    if (formProps.getValues().tipo === SINTETICO_NUMBER_VALUE.value) {\r\n      grau = ' - Sintético';\r\n    } else if (formProps.getValues().tipo === GRAU_CONTA_NUMBER_VALUE.value) {\r\n      grau = ' - Grau ' + formProps.getValues().grauConta;\r\n    }\r\n\r\n    let reportTitle: string = REPORT_TITLE;\r\n\r\n    if (formProps.getValues().isAcumularMatrizFilial) {\r\n      reportTitle += '- Consolidade';\r\n    }\r\n\r\n    formProps.setValue('title', reportTitle + grau + consolidar);\r\n  };\r\n\r\n  const enableGrau = () => {\r\n    if (formProps.getValues().tipo === GRAU_CONTA_NUMBER_VALUE.value) {\r\n      setIsEnabledGrau(false);\r\n    } else {\r\n      setIsEnabledGrau(true);\r\n    }\r\n  };\r\n\r\n  const onChangeTipo = () => {\r\n    enableGrau();\r\n    adjustTitle();\r\n  };\r\n\r\n  const acumularMatrizFilial = isEnabledIsMatriz ? (\r\n    <Col>\r\n      <CustomInput\r\n        type=\"switch\"\r\n        onChange={adjustTitle}\r\n        label=\"Acumular Matriz e Filiais\"\r\n        name=\"matrizFilial\"\r\n        id=\"matrizFilial\"\r\n        innerRef={formProps.register}\r\n      />\r\n    </Col>\r\n  ) : null;\r\n\r\n  return (\r\n    <WindowComponent\r\n      {...props}\r\n      title={REPORT_TITLE}\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMCG(globalReducer.globalParameter)]}\r\n      wikiId={3472}\r\n    >\r\n      <ReportFormView formProps={formProps} printerData={BASIC_DATA} history={history}>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"tipo\"\r\n              label=\"Tipo\"\r\n              isPrependLabel={true}\r\n              onChange={onChangeTipo}\r\n              placeholder=\"Selecione o tipo de relatório\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              inputDropDownProps={{\r\n                optionsProvider: SINTETICO_ANALITICO_TIPO_NUMBER_VALUE_ENUM_VALUES,\r\n                selectProps: { isClearable: false },\r\n              }}\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"grauConta\"\r\n              label=\"Grau\"\r\n              onChange={adjustTitle}\r\n              isPrependLabel={true}\r\n              placeholder=\"digite o grau da conta\"\r\n              formProps={{ ...formProps, validation: { max: 2147483647 } }}\r\n              disabled={isEnabledGrau}\r\n              type={InputType.NUMBER}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput type=\"switch\" label=\"Imprimir Contas\" name=\"imprimirConta\" id=\"imprimirConta\" innerRef={formProps.register} />\r\n          </Col>\r\n          <Col>\r\n            <CustomInput type=\"switch\" label=\"Imprimir Data/Hora de Emissão\" name=\"dataHora\" id=\"dataHora\" innerRef={formProps.register} />\r\n          </Col>\r\n          {acumularMatrizFilial}\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"ordem\"\r\n              label=\"Ordem de Impressão\"\r\n              isPrependLabel={true}\r\n              placeholder=\"Selecione a Ordem de Impressão\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              inputDropDownProps={{\r\n                optionsProvider: BALANCETE_CENTRO_CUSTO_ORDEM_ENUM_VALUES,\r\n                selectProps: { isClearable: false },\r\n              }}\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"consolidar\"\r\n              label=\"Consolidação\"\r\n              isPrependLabel={true}\r\n              onChange={adjustTitle}\r\n              placeholder=\"Selecione o tipo de relatório\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              inputDropDownProps={{\r\n                optionsProvider: CONSOLIDAR_NUMBER_ENUM_VALUES,\r\n                selectProps: { isClearable: false },\r\n              }}\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </ReportFormView>\r\n    </WindowComponent>\r\n  );\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const SIMPLE = { label: '', value: '0' };\r\nexport const DATE = { label: '', value: '1' };\r\nexport const DATES = { label: '', value: '2' };\r\nexport const MONTHYEAR = { label: '', value: '3' };\r\nexport const MONTHYEARS = { label: '', value: '4' };\r\nexport const TINY = { label: '', value: '5' }; // TODO Remover\r\nexport const YEAR = { label: '', value: '6' };\r\nexport const QUARTER_YEAR = { label: '', value: '7' }; // TODO Remover\r\n\r\nconst PRINTER_CONFIG_TYPE_ENUM = [SIMPLE, DATE, DATES, MONTHYEAR, MONTHYEARS, TINY, YEAR, QUARTER_YEAR];\r\n\r\nexport default PRINTER_CONFIG_TYPE_ENUM;\r\n","export const TEXT = { label: 'Texto - CalimaDesk', value: 'texto' };\r\nexport const GRAPHIC = { label: 'Gráfico - PDF', value: 'grafico' };\r\nexport const EMAIL = { label: 'E-mail - PDF', value: 'email' };\r\n\r\nconst PRINTER_TYPE_ENUM = [TEXT, GRAPHIC, EMAIL];\r\n\r\nexport default PRINTER_TYPE_ENUM;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMCG(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMCG) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o módulo Contábil. Para configurá-la acesse:\\n' +\r\n      'Módulo Contábil > Manutenção > Configurações > Empresa.';\r\n  }\r\n  return result;\r\n}\r\n","import { SIMPLE } from '../../enumerated/ger/printerConfigTypeEnum';\r\nimport { GRAPHIC } from '../../enumerated/ger/printerTypeEnum';\r\nimport { PrinterDataEmail } from './printerDataEmail';\r\n\r\nexport interface PrinterDataBasic {\r\n  printerTypeEnum?: string;\r\n  dtInicial?: string;\r\n  dtFinal?: string;\r\n  refInicial?: string;\r\n  refFinal?: string;\r\n  reportSequence?: boolean;\r\n  pageNumber?: string;\r\n  title?: string;\r\n  printerDataEmail?: PrinterDataEmail;\r\n  passObj?: any;\r\n  printerConfigTypeEnum?: string;\r\n\r\n  dtInicialLabel?: string;\r\n  dtFinalLabel?: string;\r\n  refInicialLabel?: string;\r\n  refFinalLabel?: string;\r\n  anoLabel?: string;\r\n\r\n  reportEventType: string;\r\n  classKey: string;\r\n  module: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.printerdatabasicdto';\r\n\r\nexport function getDefaultPrinterDataBasic(\r\n  title: string,\r\n  reportEventType: string,\r\n  classKey: string,\r\n  printerConfigTypeEnum: string = SIMPLE.value,\r\n  module: string = 'MLF'\r\n) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    classKey,\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    module,\r\n    pageNumber: '1',\r\n    passObj: {},\r\n    printerConfigTypeEnum,\r\n    printerDataEmail: {},\r\n    printerTypeEnum: GRAPHIC.value,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportSequence: false,\r\n    title,\r\n  };\r\n}\r\n","import { saveAs } from 'file-saver';\r\nimport React, { FC, useEffect } from 'react';\r\nimport { Col, CustomInput, Form, Row } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  currentMomentDate,\r\n  ErroList,\r\n  ERROR,\r\n  format,\r\n  formatDate,\r\n  INFORMATION,\r\n  InputGroupInline,\r\n  InputType,\r\n  ProcessBar,\r\n  REF_PATTERN,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { PrinterDataBasic } from '../../../models/dtos/ger/printerDataBasic';\r\nimport { DATE, DATES, MONTHYEAR, MONTHYEARS, YEAR } from '../../../models/enumerated/ger/printerConfigTypeEnum';\r\nimport PRINTER_TYPE_ENUM, { GRAPHIC } from '../../../models/enumerated/ger/printerTypeEnum';\r\nimport { downloadOldReport, gerarOldReport } from '../../../services/report.service';\r\n\r\nexport interface ReportWindowComponentProps {\r\n  formProps: UseFormProps;\r\n  printerData?: PrinterDataBasic;\r\n  history?: any;\r\n  /** Função de validações extras */\r\n  validateExtras?: (printerData: PrinterDataBasic, formData: any) => string[];\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportFormView: FC<ReportWindowComponentProps> = props => {\r\n  useEffect(\r\n    () => {\r\n      const { printerTypeEnum, printerConfigTypeEnum } = props.printerData;\r\n      let resetObject: any = {\r\n        ...props.printerData,\r\n        printerTypeEnum: printerTypeEnum && printerTypeEnum.length > 0 ? printerTypeEnum[0] : GRAPHIC.value,\r\n      };\r\n\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (printerConfigTypeEnum) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case MONTHYEAR.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case MONTHYEARS.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case YEAR.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      props.formProps.reset(resetObject);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.printerData.printerConfigTypeEnum, props.printerData.printerTypeEnum]\r\n  );\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(props.printerData, data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      props.printerData.passObj = data;\r\n      showToast('Seu relatório está sendo gerado...', { ...INFORMATION, delay: 3000 });\r\n      gerarOldReport(props.printerData, {\r\n        errorFunction: (mensagem: string) => {\r\n          showToast(mensagem, ERROR);\r\n        },\r\n        thenFunction: () => {\r\n          downloadOldReport({\r\n            errorFunction: (mensagem: string) => {\r\n              showToast(mensagem, ERROR);\r\n            },\r\n            thenFunction: (response: any) => {\r\n              const contentDisposition = response.headers['content-disposition'];\r\n              const filename = contentDisposition\r\n                .slice(0, contentDisposition.lastIndexOf(';'))\r\n                .split('filename=')[1]\r\n                .replace(/\"/g, '');\r\n              saveAs(response.data, filename);\r\n            },\r\n          });\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.printerData.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.printerData.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: true } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.printerData.printerConfigTypeEnum === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.printerData.printerConfigTypeEnum === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.printerData.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: true } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"refInicial\"\r\n      label={props.printerData.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: true } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.printerData.printerConfigTypeEnum === MONTHYEAR.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.printerData.printerConfigTypeEnum === MONTHYEARS.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"refFinal\"\r\n          label={props.printerData.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: true } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.printerData.printerConfigTypeEnum === YEAR.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.printerData.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n\r\n      <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n        <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n          <InputGroupInline\r\n            id=\"title\"\r\n            label=\"Título\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Título\"\r\n            iconAppend=\"undo-alt\"\r\n            appendClickHandler={restoreTitle}\r\n            formProps={{\r\n              ...props.formProps,\r\n              validation: {\r\n                maxLength: 120,\r\n                minLength: 5,\r\n                required: true,\r\n              },\r\n            }}\r\n          />\r\n\r\n          <InputGroupInline\r\n            id=\"pageNumber\"\r\n            label=\"Página Inicial\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Página Inicial\"\r\n            formProps={{\r\n              ...props.formProps,\r\n              validation: {\r\n                min: 0,\r\n                required: true,\r\n              },\r\n            }}\r\n            type={InputType.NUMBER}\r\n          />\r\n\r\n          <Row className=\"mb-3 mt-3\">\r\n            <Col>\r\n              <CustomInput\r\n                type=\"switch\"\r\n                label=\"Sequenciar Relatórios\"\r\n                id=\"reportSequence\"\r\n                name=\"reportSequence\"\r\n                innerRef={props.formProps.register}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          {dateComponent}\r\n          {datesComponent}\r\n          {referenceComponent}\r\n          {referencesComponent}\r\n          {anoComponent}\r\n\r\n          <InputGroupInline\r\n            id=\"printerTypeEnum\"\r\n            label=\"Tipo de Impressão\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Selecione o tipo de impressão\"\r\n            formProps={{ ...props.formProps, validation: { required: true } }}\r\n            inputDropDownProps={{\r\n              optionsProvider: PRINTER_TYPE_ENUM,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n        </AccordionItem>\r\n      </Accordion>\r\n\r\n      <ProcessBar handleSubmit={props.formProps.handleSubmit(onSubmit)} hideCancelButton={true} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportFormView;\r\n","export const ANALITICO_NUMBER = { label: 'Analítico', value: '1' };\r\nexport const SINTETICO_NUMBER = { label: 'Sintético', value: '2' };\r\nexport const GRAU_CONTA_NUMBER = { label: 'Grau da Conta', value: '3' };\r\n\r\nexport const SINTETICO_ANALITICO_VALUES = [ANALITICO_NUMBER, SINTETICO_NUMBER];\r\n\r\nexport const SINTETICO_ANALITICO_TIPO_ENUM_VALUES = [ANALITICO_NUMBER, SINTETICO_NUMBER, GRAU_CONTA_NUMBER];\r\n\r\nexport const ANALITICO = { label: 'Analítico', value: 'analitico' };\r\nexport const SINTETICO = { label: 'Sintético', value: 'sintetico' };\r\nexport const GRAU_CONTA = { label: 'Grau da Conta', value: 'grauConta' };\r\n\r\nexport const SINTETICO_ANALITICO_TIPO_VALUE_STRING_ENUM_VALUES = [ANALITICO, SINTETICO, GRAU_CONTA];\r\n\r\nexport const ANALITICO_NUMBER_VALUE = { label: 'Analítico', value: 1 };\r\nexport const SINTETICO_NUMBER_VALUE = { label: 'Sintético', value: 2 };\r\nexport const GRAU_CONTA_NUMBER_VALUE = { label: 'Grau da Conta', value: 3 };\r\n\r\nexport const SINTETICO_ANALITICO_TIPO_NUMBER_VALUE_ENUM_VALUES = [ANALITICO_NUMBER_VALUE, SINTETICO_NUMBER_VALUE, GRAU_CONTA_NUMBER_VALUE];\r\n","export const NORMAL = { value: '1', label: 'Normal' };\r\nexport const GRUPO_ATUAL = { value: '2', label: 'Grupo Atual' };\r\nexport const HIERARQUIA_INFERIOR = { value: '3', label: 'Hierarquia Inferior' };\r\n\r\nexport const CONSOLIDAR_ENUM_VALUES = [NORMAL, GRUPO_ATUAL, HIERARQUIA_INFERIOR];\r\n\r\nexport const NORMAL_NUMBER = { value: 1, label: 'Normal' };\r\nexport const GRUPO_ATUAL_NUMBER = { value: 2, label: 'Grupo Atual' };\r\nexport const HIERARQUIA_INFERIOR_NUMBER = { value: 3, label: 'Hierarquia Inferior' };\r\n\r\nexport const CONSOLIDAR_NUMBER_ENUM_VALUES = [NORMAL_NUMBER, GRUPO_ATUAL_NUMBER, HIERARQUIA_INFERIOR_NUMBER];\r\n"],"sourceRoot":""}
{"version":3,"sources":["views/pages/mfp/report/relacaoFaltas/relacaoFaltasTrabalhadorRV.ts","views/pages/mfp/report/relacaoFaltas/RelacaoFaltasTrabalhadorReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","dependencies/empresaMFPDependency.ts","dependencies/grupoEmpresaConfigDependency.ts","models/enumerated/mfp/categoriaEnum.ts","views/components/mfp/vinculoIS/VinculoIS.tsx","models/dtos/mfp/vinculoExample.ts","models/enumerated/mfp/ordenacaoTrabalhorEnum.ts"],"names":["DEFAULT_VALUES","Object","objectSpread2","getDefaultReportBasicValues","empresasSelecionadas","vinculos","DEFAULT_OPTIONS","getDefaultReportViewOptions","exibirConfiguracaoDadosEmpresa","RelacaoFaltasTrabalhadorReportView","props","globalReducer","useSelector","state","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","isDisableEmpresa","setIsDisableEmpresa","_useState3","_useState4","isCheckedEmpresa","setIsCheckedEmpresa","_useState5","_useState6","isDisableTrabalhador","setIsDisableTrabalhador","react_default","a","createElement","summer_esm","title","useGlobalParameter","globalParameter","dependencies","hasEmpresa","hasEmpresaMFP","hasGrupoEmpresaConfig","wikiId","wikiTitle","ReportForm","assign","localStorageKey","routeProps","reportBasicValues","reportViewOptions","validateExtras","relacaoFaltasTrabalhadorRV","getValues","erros","gerarPorEmpresas","isEmpty","push","length","Row","Col","validation","required","id","placeholder","isPrependLabel","label","type","InputType","REFERENCE","style","marginBottom","CustomInput","onChange","setValue","name","innerRef","register","checked","message","componentId","withTooltip","placement","tooltip","EmpresaIS","inputSearchProps","size","selectProps","isMulti","disabled","VinculoIS","inputDropDownProps","optionsProvider","ORDENACAO_TRABALHO_MATRICULA_NOME_ENUM_VALUES","isClearable","DROP_DOWN","result","empresa","__webpack_require__","d","__webpack_exports__","NATUREZA","value","SALDO_REPORT_ENUM","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","gerarCabecalhoPadraoAdministradora","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","virtualization","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","errors","triggerValidation","handleCancel","currentItem","currentValues","parentObject","EnvioEmail","Fragment","sort","detailView","keyField","propName","className","maxLength","TEXT_AREA","ReportInputs","activeTab","setActiveTab","useEffect","_props$reportViewOpti","printingTypes","resetObject","idGerEmpresa","current","currentMomentDate","endDate","DATE","dtInicial","formatDate","toDate","DATES","dtFinal","endOf","referenciaInicial","format","REF_PATTERN","REFERENCES","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dtInicialRequired","dateComponent","datesComponent","dtFinalRequired","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","NUMBER","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","inputProps","segmentacaoFolhaComponent","exibirSegmentacaoFolha","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","exibirImprimirValoresColoridos","firstOpen","extraConfigOpened","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","hidden","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","params","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history","empresaMFP","grupoEmpresaRaiz","grupoEmpresaConfig","grupoEmpresa","EMP_CONTR_PRAZO_DETERMINADO","EMPREGADO_DOMESTICO","MENOR_APRENDIZ","DIRETOR_EMPRESARIO_NAO_EMP_SEM_FGTS","AUTONOMO_CONTRIB_REMUNERACAO","TRABALHADOR_TEMPORARIO","EMPREGADO_TRABALHADOR_INTERMITENTE","CI_EMPRESARIO_SOCIO","ESTAGIARIO","EMPREGADO_CONTRATO_VERDE_AMARELO_SEM_ANT_FGTS","EMPREGADO_CONTRATO_VERDE_AMARELO_COM_ANT_FGTS","CATEGORIA_ENUM_VALUES","SOCIOS_VALUES","AUTONOMOS_VALUES","TRANSPORTADOR_VALUES","SEM_VINCULO_ESOCIAL_VALUES","TRABAVULSO","extraFields","codigoEsocial","codigoSefip","DIRETOR_NAO_EMP_COM_FGTS","AUTONOMO_CONTRIB_SAL_BASE","TRANSPORTADOR_CONTRIB_REMUNERACAO","TRANSPORTADOR_CONTRIB_SAL_BASE","COOPERADO","TRANSPORTADOR_COOPERADO","TRANSP_AUT_CONTRATADO_POR_CI","TRANSP_COOP_PRESTA_SERV_ENTIDADE_BENE","DIRIGENTE_SINDICAL","TRABALHADOR_AVULSO_PORTUARIO","SERVIDOR_PUBLICO_CONSELHO","CONSCRITO","TRABALHADOR_CEDIDO","CI_TRANSP_AUT_PASSAGEIROS","CI_TRANSP_AUT_CARGA","CI_COOPERADO_COOPERATIVA_PRODUCAO","CI_MICROEMPREENDEDOR_INDIVIDUAL","CI_MAGISTRADO_CLASSISTA","CI_ASSOCIADO_ELEITO_COOPERATIVA","CI_MEMBRO_CONSELHO_TUTELAR","MINISTRO_RELIGIOSO","MEDICO_RESIDENTE","BOLSISTA","PARTICIPANTE_CURSO_SEM_VINCULO","ATLETA_NAO_PROFISSIONAL","searchExpressions","expressions","apenasAutonomos","alias","conditionalGroup","fieldName","apenasAprendizes","apenasDomesticos","apenasEstagiarios","apenasSocios","searchViewProps","apenasInativos","MATRICULA","ORDENACAO_TRABALHO_CONTROLE_FERIAS_ENUM_VALUES","ORDENACAO_TRABALHADOR_ENUM_VALUES","NOME","LOTACAO_MATRICULA","LOTACAO_NOME","DATA_VENCIMENTO"],"mappings":"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","file":"static/js/46.32074333.chunk.js","sourcesContent":["import { Empresa } from '../../../../../models/dtos/ger/empresa';\r\nimport { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { VinculoExample } from '../../../../../models/dtos/mfp/vinculoExample';\r\n\r\nexport interface RelacaoFaltasTrabalhadorRV extends ReportBasicValues {\r\n  empresas?: Empresa[];\r\n  vinculos?: VinculoExample[];\r\n  /** este campo utiliza o enum OrdenacaoTrabalhorEnum */\r\n  ordemExibicao?: string;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'relacaofaltastrabalhadorrv';\r\nexport const REPORT_EVENT: string = 'printRelacaoFaltasTrabalhador';\r\nexport const REPORT_TITLE: string = 'Relação de Faltas por Trabalhador';\r\n","import React, { FC, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { InputGroupInline, InputType, isEmpty, WindowComponent, WindowComponentProps, withTooltip } from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMFP } from '../../../../../dependencies/empresaMFPDependency';\r\nimport { hasGrupoEmpresaConfig } from '../../../../../dependencies/grupoEmpresaConfigDependency';\r\nimport { getDefaultReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport { ORDENACAO_TRABALHO_MATRICULA_NOME_ENUM_VALUES } from '../../../../../models/enumerated/mfp/ordenacaoTrabalhorEnum';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport EmpresaIS from '../../../../components/ger/empresaIS/EmpresaIS';\r\nimport VinculoIS from '../../../../components/mfp/vinculoIS/VinculoIS';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { CLASS_KEY, RelacaoFaltasTrabalhadorRV, REPORT_EVENT, REPORT_TITLE } from './relacaoFaltasTrabalhadorRV';\r\n\r\nconst DEFAULT_VALUES: RelacaoFaltasTrabalhadorRV = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n  empresasSelecionadas: [],\r\n  vinculos: [],\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT),\r\n  exibirConfiguracaoDadosEmpresa: false,\r\n};\r\n\r\nconst RelacaoFaltasTrabalhadorReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const { handleSubmit, ...formProps } = useForm<RelacaoFaltasTrabalhadorRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n\r\n  const tooltip = (message: string, componentId: string) => withTooltip({ message, placement: 'top-start' }, componentId);\r\n\r\n  const [isDisableEmpresa, setIsDisableEmpresa] = useState(true);\r\n\r\n  const [isCheckedEmpresa, setIsCheckedEmpresa] = useState(false);\r\n\r\n  const [isDisableTrabalhador, setIsDisableTrabalhador] = useState(false);\r\n\r\n  const handleChangeEmpresa = () => {\r\n    if (isCheckedEmpresa) {\r\n      setIsCheckedEmpresa(false);\r\n      setIsDisableEmpresa(true);\r\n      setIsDisableTrabalhador(false);\r\n    } else {\r\n      setIsCheckedEmpresa(true);\r\n      setIsDisableEmpresa(false);\r\n      formProps.setValue('empresasSelecionadas', null, true);\r\n      setIsDisableTrabalhador(true);\r\n      formProps.setValue('vinculos', null, true);\r\n    }\r\n  };\r\n\r\n  const validateExtras = () => {\r\n    const relacaoFaltasTrabalhadorRV: RelacaoFaltasTrabalhadorRV = formProps.getValues();\r\n\r\n    const erros = [];\r\n\r\n    if (relacaoFaltasTrabalhadorRV.gerarPorEmpresas && isEmpty(relacaoFaltasTrabalhadorRV.empresasSelecionadas)) {\r\n      erros.push('Empresas - Campo não pode estar em branco quando a opção Gerar por Empresas estiver selecionada.');\r\n    }\r\n\r\n    if (relacaoFaltasTrabalhadorRV.gerarPorEmpresas === false && relacaoFaltasTrabalhadorRV.vinculos.length === 0) {\r\n      erros.push('O Campo Trabalhadores não pode estar em branco quando a opção Gerar por Empresas estiver desmarcada.');\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Relação de Faltas por Trabalhador\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[\r\n        () => hasEmpresa(globalReducer.globalParameter),\r\n        () => hasEmpresaMFP(globalReducer.globalParameter),\r\n        () => hasGrupoEmpresaConfig(globalReducer.globalParameter),\r\n      ]}\r\n      wikiId={3909}\r\n      wikiTitle=\"Relatório - Relação de Faltas por Trabalhador\"\r\n    >\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n        validateExtras={validateExtras}\r\n      >\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              id=\"referenciaInicial\"\r\n              placeholder=\"Informe a Referência\"\r\n              isPrependLabel={true}\r\n              label=\"Referência Inicial\"\r\n              type={InputType.REFERENCE}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              id=\"referenciaFinal\"\r\n              placeholder=\"Informe a Referência\"\r\n              isPrependLabel={true}\r\n              label=\"Referência Final\"\r\n              type={InputType.REFERENCE}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ marginBottom: '10px' }}>\r\n          <Col>\r\n            <CustomInput\r\n              onChange={handleChangeEmpresa}\r\n              type=\"switch\"\r\n              label=\"Gerar por Empresas\"\r\n              id=\"idgerarPorEmpresas\"\r\n              name=\"gerarPorEmpresas\"\r\n              innerRef={formProps.register}\r\n              checked={isCheckedEmpresa}\r\n            />\r\n            {tooltip('Empresas podem ser selecionadas.', 'gerarPorEmpresas')}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <EmpresaIS\r\n              label=\"Empresa(s)\"\r\n              placeholder=\"Selecione uma ou várias empresas.\"\r\n              id=\"empresasSelecionadas\"\r\n              isPrependLabel={true}\r\n              formProps={formProps}\r\n              inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n              disabled={isDisableEmpresa}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <VinculoIS\r\n              id=\"vinculos\"\r\n              formProps={formProps}\r\n              label=\"Trabalhador\"\r\n              placeholder=\"Selecione Trabalhador(es)\"\r\n              isPrependLabel={true}\r\n              inputSearchProps={{ selectProps: { isMulti: true } }}\r\n              disabled={isDisableTrabalhador}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"ordemExibicao\"\r\n              label=\"Ordem de Exibição\"\r\n              isPrependLabel={true}\r\n              placeholder=\"Selecione uma Ordem de Exibição\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              inputDropDownProps={{\r\n                optionsProvider: ORDENACAO_TRABALHO_MATRICULA_NOME_ENUM_VALUES,\r\n                selectProps: { isClearable: false },\r\n              }}\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </ReportForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default RelacaoFaltasTrabalhadorReportView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMFP(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMFP) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o Módulo Folha de Pagamento. Para configurá-la acesse Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasGrupoEmpresaConfig(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n\r\n  const msg: string =\r\n    'O Grupo de empresas não está configurado para a empresa selecionada. Para configurar acesse:\\n' +\r\n    'Modulo Principal > Manutenção > Configurações > Grupo de Empresa';\r\n\r\n  if (\r\n    !globalParameter.empresa ||\r\n    !globalParameter.empresa.grupoEmpresaRaiz.grupoEmpresaConfig ||\r\n    !globalParameter.empresa.grupoEmpresa.grupoEmpresaConfig\r\n  ) {\r\n    result = msg;\r\n  }\r\n\r\n  return result;\r\n}\r\n","export const EMPREGADO = {\r\n  extraFields: { codigoEsocial: '101', codigoSefip: '01' },\r\n  label: '01 / 101 - Empregado',\r\n  value: 'EMPREGADO',\r\n};\r\nexport const TRABAVULSO = {\r\n  extraFields: { codigoEsocial: '202', codigoSefip: '02' },\r\n  label: '02 / 202 - Trabalhador Avulso',\r\n  value: 'TRABAVULSO',\r\n};\r\nexport const TRAB_CONTR_NAO_VINC_RGPS = {\r\n  extraFields: { codigoEsocial: '101', codigoSefip: '03' },\r\n  label: '03 / 101 - Trabalhador não vinculado ao RGPS, mas com direito ao FGTS',\r\n  value: 'TRAB_CONTR_NAO_VINC_RGPS',\r\n};\r\nexport const EMP_CONTR_PRAZO_DETERMINADO = {\r\n  extraFields: { codigoEsocial: '105', codigoSefip: '04' },\r\n  label: '04 / 105 - Empregado - Prazo determinado (Lei n° 9.601/98)',\r\n  value: 'EMP_CONTR_PRAZO_DETERMINADO',\r\n};\r\nexport const DIRETOR_NAO_EMP_COM_FGTS = {\r\n  extraFields: { codigoEsocial: '721', codigoSefip: '05' },\r\n  label: '05 / 721 - C.I. - Diretor não empregado com FGTS (Lei nº 8.036/90, art. 16)',\r\n  value: 'DIRETOR_NAO_EMP_COM_FGTS',\r\n};\r\nexport const EMPREGADO_DOMESTICO = {\r\n  extraFields: { codigoEsocial: '104', codigoSefip: '06' },\r\n  label: '06 / 104 - Empregado doméstico',\r\n  value: 'EMPREGADO_DOMESTICO',\r\n};\r\nexport const MENOR_APRENDIZ = {\r\n  extraFields: { codigoEsocial: '103', codigoSefip: '07' },\r\n  label: '07 / 103 - Menor Aprendiz (Lei nº 11.180/2005)',\r\n  value: 'MENOR_APRENDIZ',\r\n};\r\nexport const DIRETOR_EMPRESARIO_NAO_EMP_SEM_FGTS = {\r\n  extraFields: { codigoEsocial: '722', codigoSefip: '11' },\r\n  label: '11 / 722 - C.I. - Diretor não empregado e demais empresários sem FGTS',\r\n  value: 'DIRETOR_EMPRESARIO_NAO_EMP_SEM_FGTS',\r\n};\r\nexport const DEMAIS_AGENTES_PUBLICOS = {\r\n  extraFields: { codigoEsocial: '309', codigoSefip: '12' },\r\n  label: '12 / 309 - Demais agentes públicos',\r\n  value: 'DEMAIS_AGENTES_PUBLICOS',\r\n};\r\nexport const AUTONOMO_CONTRIB_REMUNERACAO = {\r\n  extraFields: { codigoEsocial: '701', codigoSefip: '13' },\r\n  label: '13 / 701 - C.I. – Trabalhador autônomo com contribuição sobre remuneração; trabalhador associado à cooperativa de produção',\r\n  value: 'AUTONOMO_CONTRIB_REMUNERACAO',\r\n};\r\nexport const AUTONOMO_CONTRIB_SAL_BASE = {\r\n  extraFields: { codigoEsocial: '701', codigoSefip: '14' },\r\n  label: '14 / 701 - C.I. - Trabalhador autônomo com contribuição sobre salário base',\r\n  value: 'AUTONOMO_CONTRIB_SAL_BASE',\r\n};\r\nexport const TRANSPORTADOR_CONTRIB_REMUNERACAO = {\r\n  extraFields: { codigoEsocial: '712', codigoSefip: '15' },\r\n  label: '15 / 712 - C.I. - Transportador autônomo, com contribuição sobre remuneração',\r\n  value: 'TRANSPORTADOR_CONTRIB_REMUNERACAO',\r\n};\r\nexport const TRANSPORTADOR_CONTRIB_SAL_BASE = {\r\n  extraFields: { codigoEsocial: '712', codigoSefip: '16' },\r\n  label: '16 / 712 - C.I. - Transportador autônomo, com contribuição sobre salário base',\r\n  value: 'TRANSPORTADOR_CONTRIB_SAL_BASE',\r\n};\r\nexport const COOPERADO = {\r\n  extraFields: { codigoEsocial: '731', codigoSefip: '17' },\r\n  label: '17 / 731 - C.I. - Cooperado que presta serviços a empresas contratantes da cooperativa de trabalho',\r\n  value: 'COOPERADO',\r\n};\r\nexport const TRANSPORTADOR_COOPERADO = {\r\n  extraFields: { codigoEsocial: '734', codigoSefip: '18' },\r\n  label: '18 / 734 - C.I. - Transportador cooperado que presta serviços a empresas contratantes da cooperativa de trabalho',\r\n  value: 'TRANSPORTADOR_COOPERADO',\r\n};\r\nexport const AGENTE_POLITICO = {\r\n  extraFields: { codigoEsocial: '303', codigoSefip: '19' },\r\n  label: '19 / 303 - Agente Político',\r\n  value: 'AGENTE_POLITICO',\r\n};\r\nexport const SERV_PUBLICO_TEMPORARIO = {\r\n  extraFields: { codigoEsocial: '306', codigoSefip: '20' },\r\n  label: '20 / 306 - Servidor Público ocupante, exclusivamente, de cargo em comissão, Servidor Público ocupante de cargo temporário',\r\n  value: 'SERV_PUBLICO_TEMPORARIO',\r\n};\r\nexport const SERV_PUBLICO_EFETIVO = {\r\n  extraFields: { codigoEsocial: '301', codigoSefip: '21' },\r\n  label: '21 / 301 - Servidor Público titular de cargo efetivo, magistrado, membro do Ministério Público e do Tribunal e Conselho de Contas',\r\n  value: 'SERV_PUBLICO_EFETIVO',\r\n};\r\nexport const CI_CONTRATADO_POR_CI = {\r\n  extraFields: { codigoEsocial: '101', codigoSefip: '22' },\r\n  label:\r\n    '22 / 101 - C.I. - Contratado por outro C.I. equiparado a empresa ou por produtor rural pessoa física ou por missão diplomática e repartição consular de carreira estrangeiras',\r\n  value: 'CI_CONTRATADO_POR_CI',\r\n};\r\nexport const TRANSP_AUT_CONTRATADO_POR_CI = {\r\n  extraFields: { codigoEsocial: '101', codigoSefip: '23' },\r\n  label:\r\n    '23 / 101 - C.I. - Transportador autônomo contratado por outro C.I. equiparado à empresa ou por produtor rural pessoa física ou por missão diplomática e ' +\r\n    'repartição consular de carreira estrangeiras',\r\n  value: 'TRANSP_AUT_CONTRATADO_POR_CI',\r\n};\r\nexport const COOPERADO_PRESTA_SERV_ENTIDADE_BENE = {\r\n  extraFields: { codigoEsocial: '101', codigoSefip: '24' },\r\n  label:\r\n    '24 / 101 - C.I. - Cooperado que presta serviços à entidade beneficente de assistência social isenta da cota patronal ou a pessoa física,' +\r\n    ' por intermédioda cooperativa de trabalho',\r\n  value: 'COOPERADO_PRESTA_SERV_ENTIDADE_BENE',\r\n};\r\nexport const TRANSP_COOP_PRESTA_SERV_ENTIDADE_BENE = {\r\n  extraFields: { codigoEsocial: '101', codigoSefip: '25' },\r\n  label:\r\n    '25 / 101 - C.I. - Transportador cooperado que presta serviços a entidade beneficente de assistência social isenta da cota patronal ou a pessoa física, ' +\r\n    'por intermédio da cooperativa de trabalho',\r\n  value: 'TRANSP_COOP_PRESTA_SERV_ENTIDADE_BENE',\r\n};\r\nexport const DIRIGENTE_SINDICAL = {\r\n  extraFields: { codigoEsocial: '401', codigoSefip: '26' },\r\n  label:\r\n    '26 / 401 - Dirigente sindical, em relação ao adicional pago pelo sindicato; magistrado classista temporário da Justiça do Trabalho; magistrado dos Tribunais Eleitorais, ' +\r\n    'quando, nas três situações, for mantida a qualidade de segurado empregado (sem FGTS)',\r\n  value: 'DIRIGENTE_SINDICAL',\r\n};\r\nexport const EMPREGADO_TRABALHADOR_RURAL = {\r\n  extraFields: { codigoEsocial: '102' },\r\n  label: '102 - Empregado - Trabalhador Rural por Pequeno Prazo da Lei 11.718/2008',\r\n  value: 'EMPREGADO_TRABALHADOR_RURAL',\r\n};\r\nexport const TRABALHADOR_TEMPORARIO = {\r\n  extraFields: { codigoEsocial: '106' },\r\n  label: '106 - Trabalhador Temporário - contrato nos termos da Lei 6.019/74',\r\n  value: 'TRABALHADOR_TEMPORARIO',\r\n};\r\nexport const EMPREGADO_TRABALHADOR_INTERMITENTE = {\r\n  extraFields: { codigoEsocial: '111' },\r\n  label: '111 - Empregado - contrato de trabalho intermitente',\r\n  value: 'EMPREGADO_TRABALHADOR_INTERMITENTE',\r\n};\r\nexport const TRABALHADOR_AVULSO_PORTUARIO = {\r\n  extraFields: { codigoEsocial: '201' },\r\n  label: '201 - Trabalhador Avulso Portuário',\r\n  value: 'TRABALHADOR_AVULSO_PORTUARIO',\r\n};\r\nexport const SERVIDOR_PUBLICO_EXCLUSIVO = {\r\n  extraFields: { codigoEsocial: '302' },\r\n  label: '302 - Servidor Público Ocupante de Cargo exclusivo em comissão',\r\n  value: 'SERVIDOR_PUBLICO_EXCLUSIVO',\r\n};\r\nexport const SERVIDOR_PUBLICO_CONSELHO = {\r\n  extraFields: { codigoEsocial: '305' },\r\n  label:\r\n    '305 - Servidor Público indicado para conselho ou órgão deliberativo, na condição de representante do governo, órgão ou entidade da administração pública',\r\n  value: 'SERVIDOR_PUBLICO_CONSELHO',\r\n};\r\nexport const MILITAR_EFETIVO = {\r\n  extraFields: { codigoEsocial: '307' },\r\n  label: '307 - Militar efetivo',\r\n  value: 'MILITAR_EFETIVO',\r\n};\r\nexport const CONSCRITO = {\r\n  extraFields: { codigoEsocial: '308' },\r\n  label: '308 - Conscrito',\r\n  value: 'CONSCRITO',\r\n};\r\nexport const TRABALHADOR_CEDIDO = {\r\n  extraFields: { codigoEsocial: '410' },\r\n  label: '410 - Trabalhador cedido - informação prestada pelo Cessionário',\r\n  value: 'TRABALHADOR_CEDIDO',\r\n};\r\nexport const CI_TRANSP_AUT_PASSAGEIROS = {\r\n  extraFields: { codigoEsocial: '711' },\r\n  label: '711 - Contribuinte individual - Transportador autônomo de passageiros',\r\n  value: 'CI_TRANSP_AUT_PASSAGEIROS',\r\n};\r\nexport const CI_TRANSP_AUT_CARGA = {\r\n  extraFields: { codigoEsocial: '712' },\r\n  label: '712 - Contribuinte individual - Transportador autônomo de carga',\r\n  value: 'CI_TRANSP_AUT_CARGA',\r\n};\r\nexport const CI_EMPRESARIO_SOCIO = {\r\n  extraFields: { codigoEsocial: '723' },\r\n  label: '723 - Contribuinte individual - empresários, sócios e membro de conselho de administração ou fiscal',\r\n  value: 'CI_EMPRESARIO_SOCIO',\r\n};\r\nexport const CI_COOPERADO_COOPERATIVA_PRODUCAO = {\r\n  extraFields: { codigoEsocial: '738' },\r\n  label: '738 - Contribuinte individual - Cooperado filiado a Cooperativa de Produção',\r\n  value: 'CI_COOPERADO_COOPERATIVA_PRODUCAO',\r\n};\r\nexport const CI_MICROEMPREENDEDOR_INDIVIDUAL = {\r\n  extraFields: { codigoEsocial: '741' },\r\n  label: '741 - Contribuinte individual - Microempreendedor Individual',\r\n  value: 'CI_MICROEMPREENDEDOR_INDIVIDUAL',\r\n};\r\nexport const CI_MAGISTRADO_CLASSISTA = {\r\n  extraFields: { codigoEsocial: '751' },\r\n  label:\r\n    '751 - Contribuinte individual - magistrado classista temporário da Justiça do Trabalho ou da Justiça Eleitoral que seja aposentado de qualquer regime previdenciário',\r\n  value: 'CI_MAGISTRADO_CLASSISTA',\r\n};\r\nexport const CI_ASSOCIADO_ELEITO_COOPERATIVA = {\r\n  extraFields: { codigoEsocial: '761' },\r\n  label:\r\n    '761 - Contribuinte individual - Associado eleito para direção de Cooperativa, associação ou entidade de classe qualquer natureza ou finalidade, bem como o síndico ' +\r\n    'ou administrador eleito para exercer atividade de direção condominial, desde que recebam remuneração',\r\n  value: 'CI_ASSOCIADO_ELEITO_COOPERATIVA',\r\n};\r\nexport const CI_MEMBRO_CONSELHO_TUTELAR = {\r\n  extraFields: { codigoEsocial: '771' },\r\n  label: '771 - Contribuinte individual - Membro de conselho tutelar, nos termos da Lei nº 8.069, de 13 julho 1990',\r\n  value: 'CI_MEMBRO_CONSELHO_TUTELAR',\r\n};\r\nexport const MINISTRO_RELIGIOSO = {\r\n  extraFields: { codigoEsocial: '781' },\r\n  label: '781 - Ministro de confissão religiosa ou membro de vida consagrada, de congregação ou de ordem religiosa',\r\n  value: 'MINISTRO_RELIGIOSO',\r\n};\r\nexport const ESTAGIARIO = {\r\n  extraFields: { codigoEsocial: '901', codigoSefip: '45' },\r\n  label: '45 / 901 - Estagiário',\r\n  value: 'ESTAGIARIO',\r\n};\r\nexport const MEDICO_RESIDENTE = {\r\n  extraFields: { codigoEsocial: '902' },\r\n  label: '902 - Médico Residente',\r\n  value: 'MEDICO_RESIDENTE',\r\n};\r\nexport const BOLSISTA = {\r\n  extraFields: { codigoEsocial: '903' },\r\n  label: '903 - Bolsista, nos termos da lei 8958/1994',\r\n  value: 'BOLSISTA',\r\n};\r\nexport const PARTICIPANTE_CURSO_SEM_VINCULO = {\r\n  extraFields: { codigoEsocial: '904' },\r\n  label: '904 - Participante de curso de formação, como etapa de concurso público, sem vínculo de emprego/estatutário',\r\n  value: 'PARTICIPANTE_CURSO_SEM_VINCULO',\r\n};\r\nexport const ATLETA_NAO_PROFISSIONAL = {\r\n  extraFields: { codigoEsocial: '905' },\r\n  label: '905 - Atleta não profissional em formação que receba bolsa',\r\n  value: 'ATLETA_NAO_PROFISSIONAL',\r\n};\r\nexport const EMPREGADO_CONTRATO_VERDE_AMARELO_SEM_ANT_FGTS = {\r\n  extraFields: { codigoEsocial: '107' },\r\n  label: '107 - Empregado - Contrato de trabalho Verde e Amarelo - sem acordo para antecipação mensal da multa rescisória do FGTS',\r\n  value: 'EMPREGADO_CONTRATO_VERDE_AMARELO_SEM_ANT_FGTS',\r\n};\r\nexport const EMPREGADO_CONTRATO_VERDE_AMARELO_COM_ANT_FGTS = {\r\n  extraFields: { codigoEsocial: '108' },\r\n  label: '108 - Empregado - Contrato de trabalho Verde e Amarelo - com acordo para antecipação mensal da multa rescisória do FGTS',\r\n  value: 'EMPREGADO_CONTRATO_VERDE_AMARELO_COM_ANT_FGTS',\r\n};\r\n\r\nexport const CATEGORIA_ENUM_VALUES = [\r\n  EMPREGADO,\r\n  TRABAVULSO,\r\n  TRAB_CONTR_NAO_VINC_RGPS,\r\n  EMP_CONTR_PRAZO_DETERMINADO,\r\n  DIRETOR_NAO_EMP_COM_FGTS,\r\n  EMPREGADO_DOMESTICO,\r\n  MENOR_APRENDIZ,\r\n  DIRETOR_EMPRESARIO_NAO_EMP_SEM_FGTS,\r\n  DEMAIS_AGENTES_PUBLICOS,\r\n  AUTONOMO_CONTRIB_REMUNERACAO,\r\n  AUTONOMO_CONTRIB_SAL_BASE,\r\n  TRANSPORTADOR_CONTRIB_REMUNERACAO,\r\n  TRANSPORTADOR_CONTRIB_SAL_BASE,\r\n  COOPERADO,\r\n  TRANSPORTADOR_COOPERADO,\r\n  AGENTE_POLITICO,\r\n  SERV_PUBLICO_TEMPORARIO,\r\n  SERV_PUBLICO_EFETIVO,\r\n  CI_CONTRATADO_POR_CI,\r\n  TRANSP_AUT_CONTRATADO_POR_CI,\r\n  COOPERADO_PRESTA_SERV_ENTIDADE_BENE,\r\n  TRANSP_COOP_PRESTA_SERV_ENTIDADE_BENE,\r\n  DIRIGENTE_SINDICAL,\r\n  EMPREGADO_TRABALHADOR_RURAL,\r\n  TRABALHADOR_TEMPORARIO,\r\n  EMPREGADO_TRABALHADOR_INTERMITENTE,\r\n  TRABALHADOR_AVULSO_PORTUARIO,\r\n  SERVIDOR_PUBLICO_EXCLUSIVO,\r\n  SERVIDOR_PUBLICO_CONSELHO,\r\n  MILITAR_EFETIVO,\r\n  CONSCRITO,\r\n  TRABALHADOR_CEDIDO,\r\n  CI_TRANSP_AUT_PASSAGEIROS,\r\n  CI_TRANSP_AUT_CARGA,\r\n  CI_EMPRESARIO_SOCIO,\r\n  CI_COOPERADO_COOPERATIVA_PRODUCAO,\r\n  CI_MICROEMPREENDEDOR_INDIVIDUAL,\r\n  CI_MAGISTRADO_CLASSISTA,\r\n  CI_ASSOCIADO_ELEITO_COOPERATIVA,\r\n  CI_MEMBRO_CONSELHO_TUTELAR,\r\n  MINISTRO_RELIGIOSO,\r\n  ESTAGIARIO,\r\n  MEDICO_RESIDENTE,\r\n  BOLSISTA,\r\n  PARTICIPANTE_CURSO_SEM_VINCULO,\r\n  ATLETA_NAO_PROFISSIONAL,\r\n  EMPREGADO_CONTRATO_VERDE_AMARELO_SEM_ANT_FGTS,\r\n  EMPREGADO_CONTRATO_VERDE_AMARELO_COM_ANT_FGTS,\r\n];\r\n\r\nexport const SOCIOS_VALUES = [DIRETOR_NAO_EMP_COM_FGTS, DIRETOR_EMPRESARIO_NAO_EMP_SEM_FGTS, CI_EMPRESARIO_SOCIO];\r\n\r\nexport const AUTONOMOS_VALUES = [\r\n  TRABAVULSO,\r\n  AUTONOMO_CONTRIB_REMUNERACAO,\r\n  TRANSP_COOP_PRESTA_SERV_ENTIDADE_BENE,\r\n  AUTONOMO_CONTRIB_SAL_BASE,\r\n  TRANSPORTADOR_CONTRIB_REMUNERACAO,\r\n  TRANSPORTADOR_COOPERADO,\r\n  COOPERADO,\r\n  TRANSPORTADOR_CONTRIB_SAL_BASE,\r\n  TRANSP_AUT_CONTRATADO_POR_CI,\r\n  CI_TRANSP_AUT_PASSAGEIROS,\r\n  CI_TRANSP_AUT_CARGA,\r\n];\r\n\r\nexport const TRANSPORTADOR_VALUES = [\r\n  TRANSPORTADOR_CONTRIB_REMUNERACAO,\r\n  TRANSPORTADOR_CONTRIB_SAL_BASE,\r\n  TRANSPORTADOR_COOPERADO,\r\n  TRANSP_AUT_CONTRATADO_POR_CI,\r\n  TRANSP_COOP_PRESTA_SERV_ENTIDADE_BENE,\r\n];\r\n\r\nexport const SEM_VINCULO_ESOCIAL_VALUES = [\r\n  TRABALHADOR_AVULSO_PORTUARIO,\r\n  TRABAVULSO,\r\n  SERVIDOR_PUBLICO_CONSELHO,\r\n  CONSCRITO,\r\n  DIRIGENTE_SINDICAL,\r\n  TRABALHADOR_CEDIDO,\r\n  AUTONOMO_CONTRIB_REMUNERACAO,\r\n  AUTONOMO_CONTRIB_SAL_BASE,\r\n  CI_TRANSP_AUT_PASSAGEIROS,\r\n  CI_TRANSP_AUT_CARGA,\r\n  DIRETOR_NAO_EMP_COM_FGTS,\r\n  DIRETOR_EMPRESARIO_NAO_EMP_SEM_FGTS,\r\n  CI_EMPRESARIO_SOCIO,\r\n  COOPERADO,\r\n  TRANSPORTADOR_COOPERADO,\r\n  CI_COOPERADO_COOPERATIVA_PRODUCAO,\r\n  CI_MICROEMPREENDEDOR_INDIVIDUAL,\r\n  CI_MAGISTRADO_CLASSISTA,\r\n  CI_ASSOCIADO_ELEITO_COOPERATIVA,\r\n  CI_MEMBRO_CONSELHO_TUTELAR,\r\n  MINISTRO_RELIGIOSO,\r\n  ESTAGIARIO,\r\n  MEDICO_RESIDENTE,\r\n  BOLSISTA,\r\n  PARTICIPANTE_CURSO_SEM_VINCULO,\r\n  ATLETA_NAO_PROFISSIONAL,\r\n];\r\n\r\nexport const DOMESTICO_TEMPORARIO_VALUES = [EMPREGADO_DOMESTICO, TRABALHADOR_TEMPORARIO];\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { InputSearchProps } from 'summer/dist/views/components/inputSearch/InputSearch';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mfp/vinculoExample';\r\nimport { AUTONOMOS_VALUES, EMPREGADO_DOMESTICO, ESTAGIARIO, MENOR_APRENDIZ, SOCIOS_VALUES } from '../../../../models/enumerated/mfp/categoriaEnum';\r\n\r\nexport interface VinculoInputSearchProps extends InputProps {\r\n  apenasAutonomos?: boolean;\r\n  apenasAprendizes?: boolean;\r\n  apenasDomesticos?: boolean;\r\n  apenasEstagiarios?: boolean;\r\n  apenasInativos?: boolean;\r\n  apenasSocios?: boolean;\r\n}\r\n\r\nconst VinculoIS: FC<VinculoInputSearchProps> = props => {\r\n  function getSearchExpression(): SearchExpression[] {\r\n    let expressions = [];\r\n    if (props.apenasAutonomos) {\r\n      expressions = [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'categoria',\r\n          value: AUTONOMOS_VALUES,\r\n        },\r\n      ];\r\n    }\r\n    if (props.apenasAprendizes) {\r\n      expressions = [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'categoria',\r\n          value: MENOR_APRENDIZ.value,\r\n        },\r\n      ];\r\n    }\r\n    if (props.apenasDomesticos) {\r\n      expressions = [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'categoria',\r\n          value: EMPREGADO_DOMESTICO.value,\r\n        },\r\n      ];\r\n    }\r\n    if (props.apenasEstagiarios) {\r\n      expressions = [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'categoria',\r\n          value: ESTAGIARIO.value,\r\n        },\r\n      ];\r\n    }\r\n    if (props.apenasSocios) {\r\n      expressions = [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'categoria',\r\n          value: SOCIOS_VALUES,\r\n        },\r\n      ];\r\n    }\r\n    return expressions;\r\n  }\r\n\r\n  const inputSearchProps: InputSearchProps<any> = {\r\n    ...props.inputSearchProps,\r\n    columns: [\r\n      {\r\n        dataField: 'matricula',\r\n        text: 'Matrícula',\r\n      },\r\n      {\r\n        dataField: 'nome',\r\n        text: 'Trabalhador',\r\n      },\r\n      {\r\n        dataField: 'categoria',\r\n        text: 'Categoria',\r\n      },\r\n      {\r\n        dataField: 'dataAdmissao',\r\n        text: 'Dt. Admissão',\r\n      },\r\n      {\r\n        dataField: 'dataAfastamentoMovimentacao',\r\n        text: 'Dt. Último Afastamento',\r\n      },\r\n      {\r\n        dataField: 'dataAfastamentoRecisao',\r\n        text: 'Dt. Rescisão',\r\n      },\r\n      {\r\n        dataField: 'cpf',\r\n        text: 'CPF',\r\n      },\r\n    ],\r\n    dtoClassName: CLASS_NAME,\r\n    searchExpressions: getSearchExpression,\r\n    searchViewId: 'VinculoSearchView',\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      type={InputType.INPUT_SEARCH}\r\n      inputSearchProps={inputSearchProps}\r\n      searchViewProps={{ apenasInativos: props.apenasInativos }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default VinculoIS;\r\n","import { Basic } from 'summer';\r\nimport { EmpresaMFP } from './empresaMFP';\r\n\r\nexport interface VinculoExample extends Basic {\r\n  /** este campo utiliza o enum CategoriaEnum */\r\n  categoria?: string;\r\n  codigo?: string;\r\n  cpf?: string;\r\n  dataAdmissao?: string;\r\n  dataAfastamentoMovimentacao?: string;\r\n  dataAfastamentoRecisao?: string;\r\n  dataAfastamentoResilicao?: string;\r\n  dataRetornoMovimentacao?: string;\r\n  empresaMFP?: EmpresaMFP;\r\n  matricula?: number;\r\n  nome?: string;\r\n  pis?: string;\r\n  /** este campo utiliza o enum TipoResilicaoEnum */\r\n  tipoResilicao?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.vinculoexample';\r\n","export const MATRICULA = { value: 'MATRICULA', label: 'Matrícula' };\r\nexport const NOME = { value: 'NOME', label: 'Nome' };\r\nexport const LOTACAO_MATRICULA = { value: 'LOTACAO_MATRICULA', label: 'Lotação e Matrícula' };\r\nexport const LOTACAO_NOME = { value: 'LOTACAO_NOME', label: 'Lotação e Nome' };\r\nexport const DATA_VENCIMENTO = { value: 'DATA_VENCIMENTO', label: 'Data de Vencimento' };\r\n\r\nexport const ORDENACAO_TRABALHO_ENUM_VALUES = [MATRICULA, NOME, LOTACAO_MATRICULA, LOTACAO_NOME, DATA_VENCIMENTO];\r\n\r\nexport const ORDENACAO_TRABALHO_MATRICULA_NOME_ENUM_VALUES = [MATRICULA, NOME];\r\n\r\nexport const ORDENACAO_TRABALHO_CONTROLE_FERIAS_ENUM_VALUES = [MATRICULA, NOME, DATA_VENCIMENTO];\r\n\r\nexport const ORDENACAO_TRABALHADOR_ENUM_VALUES = [MATRICULA, NOME, LOTACAO_MATRICULA, LOTACAO_NOME];\r\n"],"sourceRoot":""}
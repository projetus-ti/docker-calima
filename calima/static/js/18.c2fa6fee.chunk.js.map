{"version":3,"sources":["models/dtos/mfp/quadroHorario.ts","views/components/mfp/agenciaIS/AgenciaIS.tsx","views/components/mfp/banco/BancoIS.tsx","views/components/mfp/sindicatoIS/SindicatoIS.tsx","views/components/mfp/cargo/CargoIS.tsx","models/dtos/mfp/valeTransporte.ts","models/enumerated/mfp/demissaoEnum.ts","models/enumerated/mfp/indicadorCumprimentoAvPrevioEnum.ts","models/enumerated/mfp/tipoAvisoPrevioEnum.ts","views/pages/mfp/rescisao/FeriasRescisaoEditView.tsx","views/pages/mfp/rescisao/RescisaoEditView.tsx","models/enumerated/mfp/tipoResilicaoEnum.ts","views/pages/mfp/vinculo/VinculoRemoveConfirmationView.tsx","views/pages/mfp/vinculo/VinculoSearchView.tsx","models/dtos/mfp/vinculoVW.ts","views/pages/mfp/exame/VinculoExameOcupacionalEditView.tsx","views/pages/mfp/exame/ExameEditView.tsx","views/pages/mfp/vinculoTomadorServico/VinculoTomadorServicoDetailEditView.tsx","views/pages/mfp/vinculoTomadorServico/VinculoTomadorServicoEditView.tsx","models/enumerated/mfp/contratoTrabalhoEnum.ts","models/enumerated/mfp/exposicaoAgenteNocivoEnum.ts","models/enumerated/mfp/gpsSimplesNacionalEnum.ts","models/enumerated/mfp/hipoteseLegalContratacaoTrabalhadorTemporarioEnum.ts","models/enumerated/mfp/naturezaEstagioEnum.ts","models/enumerated/mfp/nivelEstagioEnum.ts","models/enumerated/mfp/nrLeiAnistiaEnum.ts","models/enumerated/mfp/tipoAdmissaoEnum.ts","models/enumerated/mfp/tipoCalculoValeTransporteEnum.ts","models/enumerated/mfp/tipoContaEnum.ts","models/enumerated/mfp/tipoInclusaoContratoTemporarioEnum.ts","models/enumerated/mfp/tipoInstrumentoSituacaoEnsejadoraRemuneracaoEnum.ts","models/enumerated/mfp/tipoPensaoEnum.ts","models/enumerated/mfp/tipoRegimeJornadaTrabalhoEnum.ts","models/enumerated/mfp/tipoReintegracaoEnum.ts","models/enumerated/mfp/tipoTransportadorEnum.ts","views/components/mfp/instituicaoEnsinoIS/InstituicaoEnsinoIS.tsx","views/components/mfp/responsavelMenorAprendizIS/ResponsavelMenorAprendizIS.tsx","views/pages/mfp/vinculo/VinculoCargoEditView.tsx","models/enumerated/mfp/simNaoEnum.ts","views/pages/mfp/vinculo/VinculoDiferencialAcordoEditView.tsx","views/pages/mfp/vinculo/VinculoInternalSearchView.tsx","views/components/mfp/planoSaudeIS/PlanoSaudeIS.tsx","views/pages/mfp/vinculo/VinculoPlanoSaudeReembolsoEditView.tsx","views/pages/mfp/vinculo/VinculoPlanoSaudeEditView.tsx","models/enumerated/mfp/naturezaEventoEnum.ts","views/components/mfp/previdenciaComplementarIS/PrevidenciaComplementarIS.tsx","views/pages/mfp/vinculo/VinculoPrevidenciaComplementarEditView.tsx","views/components/mfp/quadroHorarioIS/QuadroHorarioIS.tsx","views/pages/mfp/vinculo/VinculoQuadroHorarioEditView.tsx","views/pages/mfp/vinculo/VinculoSalarioOutraRemuneracaoEditView.tsx","views/pages/mfp/vinculo/VinculoSalarioEditView.tsx","models/enumerated/mfp/indicativoPrestacaoTrabalhoEnum.ts","views/pages/mfp/vinculo/VinculoTrabalhoIntermitenteEditView.tsx","models/enumerated/mfp/eSocialMotivoDesligamentoEnum.ts","views/pages/mfp/vinculo/VinculoTransferenciaModalView.tsx","views/components/mfp/valeTransporteIS/ValeTransporteIS.tsx","views/pages/mfp/vinculo/VinculoValeTransporteEditView.tsx","views/pages/mfp/vinculo/VinculoReintegracaoModalView.tsx","views/pages/mfp/vinculo/VinculoEditView.tsx","dependencies/empresaDependency.ts","views/components/ger/empresaIS/EmpresaIS.tsx","dependencies/empresaMFPDependency.ts","dependencies/grupoEmpresaConfigDependency.ts","models/dtos/ger/cepUF.ts","models/dtos/ger/cepLocalidade.ts","views/components/ger/cepUFIS/CepUFIS.tsx","views/components/ger/cepLocalidadeIS/CepLocalidadeIS.tsx","models/dtos/ger/cepBairro.ts","models/dtos/ger/cepLogradouro.ts","models/dtos/ger/cepTitulo.ts","models/dtos/ger/centroCusto.ts","models/dtos/mfp/tomadorServico.ts","views/components/ger/cepBairroIS/CepBairroIS.tsx","views/components/ger/cepTituloIS/CepTituloIS.tsx","views/components/ger/cepLogradouro/CepLogradouroIS.tsx","views/components/mcg/centroCustoIS/CentroCustoIS.tsx","views/components/mfp/tomadorServicoIS/TomadorServicoIS.tsx","hooks/useCepManager.ts","models/dtos/mfp/cbo.ts","models/enumerated/ger/tipoTributacaoEnum.ts","models/enumerated/mfp/tipoExameMedicoEnum.ts","models/dtos/mfp/banco.ts","models/dtos/ger/agencia.ts","models/dtos/mfp/cargo.ts","models/enumerated/mfp/tipoPagamentoMFPEnum.ts","models/enumerated/ger/perfilEnum.ts","../node_modules/reactstrap/es/Table.js","models/dtos/mfp/planoSaude.ts","models/dtos/mfp/instituicaoEnsino.ts","models/dtos/mfp/previdenciaComplementar.ts","models/dtos/mfp/sindicatoExample.ts","views/components/mfp/cboIS/CboIS.tsx","models/dtos/mfp/responsavelMenorAprendiz.ts","utilities/constantes.ts"],"names":["__webpack_require__","d","__webpack_exports__","CLASS_NAME","AgenciaIS","props","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_2__","Object","assign","type","InputType","INPUT_SEARCH","inputSearchProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","searchViewId","BancoIS","SindicatoIS","CargoIS","DESPEDIDA_SEM_JUSTA_CAUSA","label","value","DESPEDIDA_POR_JUSTA_CAUSA","RESCISAO_PEDIDO_EMPREGADO","RESCISAO_FALECIMENTO_EMPREGADO","MUDANCA_REGIME_JURIDICO","RESCISAO_OUTROS","DEMISSAO_ENUM_VALUES","SEM_COMPATIBILIDADE_HOMOLOGNET_ENUM_VALUES","INDICADOR_CUMPRIMENTO_AV_PREVIO_ENUM_VALUES","TIPO_AVISO_PREVIO_ENUM_VALUES","FeriasRescisaoEditView","formProps","useForm","defaultValues","selectedItem","mode","_useState","useState","_useState2","slicedToArray","valorDisabled","setValorDisabled","useEffect","valorManual","nroFaltas","setValue","react_default","summer_esm","handleSubmit","handleCancel","validateExtras","formData","_","parentData","erros","compare","dtInicialPerAquisitivo","dtFinalPerAquisitivo","push","rescisaoJaCalculada","promisedAlert","AlertType","WARNING","Row","Col","id","objectSpread2","validation","require","isPrependLabel","DATE","className","NUMBER","style","width","marginLeft","marginTop","disabled","onChange","values","getValues","RescisaoEditView","getSelectedItem","recisao","dispatch","useDispatch","editFormRef","useRef","isSimularVisivel","setIsSimularVisivel","_useState3","_useState4","disabledCumprimentoAviso","setDisabledCumprimentoAviso","_useState5","_useState6","exibirTipoAviso","setExibirTipoAviso","_useState7","_useState8","fullVinculo","setFullVinculo","_useState9","_useState10","falecimentoEmpregado","setFalecimentoEmpregado","_useState11","_useState12","mudancaRegimeJuridico","setMudancaRegimeJuridico","setTimeout","register","name","isEmpty","getFullVinculo","vinculo","checkRescisaoCalculada","rescisaoCalculada","thenFunction","res","reset","onCancel","current","close","changeAvisoDispensaIndenizado","is","avisoPrevioIndenizado","dispensadoAvisoPrevio","indicadorCumprimentoAvPrevio","tipoAvisoPrevio","getFeriasRescisao","data","dtAfastamento","then","obterFeriasRescisao","dataAfastamentoBlur","dataAdmissao","promisedAlertWithCatch","definirAvisoPrevio","keys","map","key","[object Object]","catch","motivoChange","isFalecimentoEmpregado","isMudancaRegimeJuridico","nrCertidaoObito","cnpjEmpresaSucessora","motivoBlur","tipoDemissao","rescisaoObrigatoria","dtAvisoPrevio","dtPagamento","jaRecebeuAvisoPrevioTrabalhado","homolognet","EnumUtil","contains","find","simularRescisaoClick","naoCalcularRescisao","length","ERROR","showLoading","simularRescisao","rescisaoDTO","idArquivo","fileDownload","split","errorFunction","mensagem","progressActions","hideProgress","response","filename","headers","saveAs","apagarRescisaoClick","resetRescisao","filter","apagarRescisao","feriasDefaultSortProps","order","OrderType","ASC","feriasFormProps","boolColumn","formatter","decimalFormatter","detailView","propName","title","wizardFinishProps","confirmButton","onConfirm","submit","getEditView","Fragment","condicional","Button","color","onClick","pageId","tooltipProps","message","md","onBlur","onlyNumber","max","CNPJ","MASK","inputMaskedProps","mask","placeholder","inputDropDownProps","optionsProvider","DROP_DOWN","maxLength","defaultSortDirection","defaultSorted","keyField","wrapBody","openViaDock","wikiId","ref","editViewProps","externalSubmit","onDockSubmit","handleClose","btnSubmitIcon","btnSubmitLabel","onAfterPageChange","currentPageId","loadVinculo","finishProps","VinculoIS","required","TOTAL","VinculoRemoveConfirmationView","CALIMA_DANGER","CPF","cpf","done","DESC","VinculoSearchView","perfil","apenasInativos","INATIVOS","ATIVOS","globalReducer","useSelector","state","searchRef","editable","FilterType","sort","TEXT","enumColumn","editor","CATEGORIA_ENUM_VALUES","cpfFormatter","getIdsEmpresasMFP","empresasSelecionadas","it","empresaMFP","useGlobalParameter","globalParameter","dependencies","hasEmpresa","hasEmpresaMFP","hasGrupoEmpresaConfig","PERFIL_ENUM_MALE_VALUES","selectProps","isClearable","notifySearchExpressionChange","searchDataGridProps","extraData","getExtraData","removeConfirmationView","searchExpressionsFull","defaultExpressions","referencia","mainExpression","advancedSearch","expressions","fieldName","operation","OperationEnum","IN","TODOS","dataReferenciaEmpresa","parseRefToDate","alias","conditionalGroup","countOperation","CountComparatorEnum","EQ","EQUAL","GREATER_THAN","LESS_THAN_EQUAL","DIFERENT","VinculoExameOcupacionalEditView","nroOrdem","parentValues","parentFormProps","examesOcupacionais","getItemAtual","dtVencimentoExame","dtExame","forEach","exame","tipoExame","ADMISSIONAL","DEMISSIONAL","TIPO_EXAME_MEDICO_ENUM_VALUES","formatDate","add","toDate","CepUFIS","ExameEditView","registrarListasVinculo","updateUltimoExameVencimento","exameDefaultSortProps","exameFormProps","VinculoTomadorServicoDetailEditView","tomadorServicoDisabled","setTomadorServicoDisabled","existeCalculoVinculoTomadorServico","tomadorServico","dtFim","dtInicio","index","tomadoresServico","tomador","rowIndex","compareA","compareB","TomadorServicoIS","VinculoTomadorServicoEditView","tomadorDefaultSortProps","tomadorFormProps","detailViewSize","detailViewWikiId","PRAZO_INDETERMINADO","PRAZO_DETERMINADO_COM_CLAUSULA_DE_RESCISAO","PRAZO_DETERMINADO_SEM_CLAUSULA_DE_RESCISAO","CONTRATO_TRABALHO_ENUM_VALUES","EXPOSICAO_AGENTE_NOCIVO_ENUM_VALUES","GPS_SIMPLES_NACIONAL_ENUM_VALUES","NECESSIDADE_SUBTIUICAO_TRANSITORIA","HIPOTESE_LEGAL_CONTRATACAO_TRABALHADOR_TEMPORARIO_ENUM_VALUES","NATUREZA_ESTAGIO_ENUM_VALUES","NIVEL_ESTAGIO_ENUM_VALUES","NR_LEI_ANISTIA_ENUM_VALUES","TRANSFERENCIA","TIPO_ADMISSAO_ENUM_VALUES","DIAS_UTEIS","INFORMAR_NRO_DIAS","INFORMAR_QUANTIDADE","TIPO_CALCULO_VALE_TRANSPORTE_ENUM_VALUES","TIPO_CONTA_ENUM_VALUES","TIPO_INCLUSAO_CONTRATO_TEMPORARIO_ENUM_VALUES","OUTRAS_VERBSA_DE_NATUREZA_SALARIAL_OU_NAO_SALARIAL_DEVIDAS_APOS_DESLIGAMENTO","TIPO_INSTRUMENTO_SITUACAO_ENSEJADORA_REMUNERACAO_ENUM_VALUES","TIPO_PENSAO_ENUM_VALUES","TIPO_REGIME_JORNADA_TRABALHO_ENUM_VALUES","DECISAO_JUDICIAL","ANISTIAL_LEGAL","TIPO_REINTEGRACAO_ENUM_VALUES","TIPO_TRANSPORTADOR_ENUM_VALUES","InstituicaoEnsinoIS","ResponsavelMenorAprendizIS","VinculoCargoEditView","dtAtual","currentDate","refAtual","parseDateToRef","refGlobal","parseLastDay","cargos","currentItem","dataAlteracao","TEXT_AREA","SIM_NAO_ENUM_VALUE","VinculoDiferencialAcordoEditView","pagamentos","tableData","setTableData","selectedIndex","setSelectedIndex","filtroAno","substr","referenciaInicialPagamento","referenciaFinalPagamento","competencia","valorPagamento","filtrarAno","item","b","localeCompare","editarPagamentos","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","valor","existeMesmaCompetenciaEEvento","diferencial","diferenciaisAcordoConvencaoDissidio","undefined","selectIndex","tipoInstrumentoSituacaoEnsejadoraRemuneracao","dataAssinaturaAcordo","inicioCompetencia","finalCompetencia","dataInicialEfeito","minRef","getMinRef","EventoIS","REFERENCE","size","refInicial","refFinal","mesRefInicial","parseInt","mesRefFinal","parseFloat","ListGroup","variant","ListGroupItem","referencias","getIntervaloReferencia","slice","result","nextRef","getNextRef","getMaxRef","index_es","icon","Card","CardHeader","InputGroup","InputGroupAddon","addonType","Input","bsSize","innerRef","pagamento","CardBody","Table","striped","bordered","hover","responsive","onDoubleClick","checked","readOnly","VinculoInternalSearchView","history","useHistory","currentSelected","setCurrentSelected","dockActions","destroyDock","searchViewProps","hiddenHeader","isModal","selectRow","clickToSelect","hideSelectAll","SelectModeEnum","RADIO","onSelect","row","goBack","btnCloseLabel","PlanoSaudeIS","VinculoPlanoSaudeReembolsoEditView","cnpj","min","VinculoPlanoSaudeEditView","planos","reembolsoDefaultSortProps","reembolsoFormProps","prosseguir","mesmoEvento","evento","dtFimNoIntervalo","dtInicioNoIntervalo","planoSaudeIS_PlanoSaudeIS","RTPP","ESPP","RTFA","ESFA","RTSP","RTEP","ESSP","ESEP","PrevidenciaComplementarIS","VinculoPrevidenciaComplementarEditView","naturezasValidas","previdenciasComplementar","previdenciaComplementar","previdenciaJaCadastrada","eventoJaCadastrado","naturezaEventoDiferente","previdencia","vemAntes","periodoNaoCadastrado","mesmaPrevidencia","mesmoAno","format","naturezaEvento","previdenciaComplementarIS_PrevidenciaComplementarIS","QuadroHorarioIS","searchExpressions","VinculoQuadroHorarioEditView","quadrosHorarios","quadroHorarioIS_QuadroHorarioIS","VinculoSalarioOutraRemuneracaoEditView","categoriaVinculo","validarExistencia","vinculoSalario","outrasRemuneracoes","marginBottom","VinculoSalarioEditView","categoria","modoTela","setModoTela","disabledEdit","setDisabledEdit","isMensalista","setIsMensalista","isPeriodico","setIsPeriodico","isIntermitente","setIsIntermitente","checkHoristaDisabled","setCheckHoristaDisabled","_useState13","_useState14","checkDiaristaDisabled","setCheckDiaristaDisabled","_useState15","_useState16","isMPDisabled","setIsMPDisabled","configTrabalhadorIntermitente","validarEdicao","configurarSalario","ajustarPorTipoPagamento","validarSalarioVinculo","ajustarHorasContratuais","mensalista","tipoPagamento","MENSAL","periodico","PERIODICO","horista","NRO_HORAS_CONTRATUAIS_MENSALISTA","validarModoProfessor","isVinculoProfessor","salario","parametros","salarios","salarioAtual","numeroHorasContratuais","numeroHorasContratuaisFixa","dataAtual","getReferenciaAtual","ajustarMP","contratoTrabalho","EMP_CONTR_PRAZO_DETERMINADO","camposPreenchidos","tipoAdesaoBEM","dtAcordoBEM","diasDuracaoAcordo","REDUCAO_CARGA_HORARIA","dataInicial","dataFinal","strDataInicial","strDataFinal","percentualReducaoCargaHoraria","reajuste","reajusteHoras","motivo","reajustarSalario","fator","loop","toString","novoSalario","toFixed","mp93620","reajustarHoras","novasHoras","outraRemuneracaoDefaultSortProps","outraRemuneracaoFormProps","cnpjFormatter","headerStyle","onBeforeEdit","async","validateExtrasFunc","promise","msgA","msgB","ESTAGIARIO","isSalarioRepetido","TIPO_PAGAMENTO_MFP_ENUM_VALUES","paddingTop","labelProps","indexOf","marginRight","cx","btn-animated-icon btn-animated-icon--success","btn-animated-icon btn-animated-icon--danger","FRACTION_OF_TIME","paddingLeft","hideAddButton","hideEditButton","hideRemoveButton","FORA_ESTAB_INFORMADO_GRUPO","INDICATIVO_PRESTACAO_TRABALHO_ENUM_VALUES","VinculoTrabalhoIntermitenteEditView","cepManager","useCepManager","bairro","cep","localidade","nome","titulo","uf","exibirAlertaHorario","setExibirAlertaHorario","isLocalTrabalhoDisabled","setIsLocalTrabalhoDisabled","isLocalTrabalhoRequired","setIsLocalTrabalhoRequired","quadroHorario","codigoConvocacao","trabalhosIntermitentes","Math","indicativoPrestacaoTrabalho","verificarQuadroHorario","verificarQuadroHorarioESocial","localTrabalho","localTrabalhoBairro","localTrabalhoCep","cidade","localTrabalhoCidade","complemento","localTrabalhoComplemento","logradouro","localTrabalhoLogradouro","numero","localTrabalhoNumero","tipoLogradouro","localTrabalhoTipoLogradouro","localTrabalhoUf","dtPrevistaPagamento","cadastro","isInsert","checkA","checkB","localTrabalhoCepFmt","CepLogradouroIS","CepTituloIS","CepLocalidadeIS","CepBairroIS","open","ESOCIAL_MOTIVO_DESLIGAMENTO_ENUM_VALUES","VinculoTransferenciaModalView","showInfoMesmaRaizCNPJ","setShowInfoMesmaRaizCNPJ","showInfoRaizCNPJDiferente","setShowInfoRaizCNPJDiferente","showInfoTransferenciaEmpresa","setShowInfoTransferenciaEmpresa","disabledQuadroHorario","setDisabledQuadroHorario","podeInformarMotivoEsocial","setPodeInformarMotivoEsocial","isNotVinculoTSVE","setIsNotVinculoTSVE","tooltip","setTooltip","quadroHorarioSearchExpression","setQuadroHorarioSearchExpression","usuario","empresa","SEM_VINCULO_ESOCIAL_VALUES","empresaDestino","selecionadaPossuiGrupoEvento","grupoEmpresa","grupoEmpresaConfig","grupoEvento","atualPossuiGrupoEvento","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","triggerValidation","sent","transferirVinculo","headerDrawerToggle","toggleHeaderDrawer","onClose","stop","apply","this","arguments","Modal","centered","backdrop","isOpen","toggle","ModalHeader","ModalBody","EmpresaIS","motivoEsocial","caracterizaTransferencia","AFASTAMENTO_TRANSFERENCIA_ENUM_VALUES","EsocialUtil","getToolTipFmt","AFASTAMENTO_ENUM_VALUES","CALIMA_ORANGE","ModalFooter","ValeTransporteIS","VinculoValeTransporteEditView","labelQuantidade","setLabelQuantidade","tooltipQuantidade","setTooltipQuantidade","diasCalculoRequired","setDiasCalculoRequired","diasCalculoDisabled","setDiasCalculoDisabled","ajustarTelaTipoCalculoVT","diasCalculoReq","informarQuantidade","tipoCalculo","valeTransporteIS_ValeTransporteIS","VinculoReintegracaoModalView","isProcesso","setIsProcesso","isLeiAnistia","setIsLeiAnistia","tipoReintegracao","numeroProcesso","numeroLeiAnistia","dataEfetivoRetorno","dataReintegracao","reintegrarVinculo","reintegracao","processo","anistia","padStart","VinculoEditView","reintegracoes","valesTransporte","isSimplesNacional","setIsSimplesNacional","isTransportador","setIsTransportador","isTrabalhadorTemporario","setIsTrabalhadorTemporario","isEstagiario","setIsEstagiario","isMenorAprendiz","setIsMenorAprendiz","isContratoTempoDeterminado","setIsContratoTempoDeterminado","isContratoTempoDetComIndic","setIsContratoTempoDetComIndic","_useState17","_useState18","isContratoVerdeAmarelo","setIsContratoVerdeAmarelo","_useState19","_useState20","_useState21","_useState22","exigeCPFTrabSubstituto","setExigeCPFTrabSubstituto","_useState23","_useState24","isTrabalhadorDesabilitado","setIsTrabalhadorDesabilitado","_useState25","_useState26","categoriaTooltip","setCategoriaTooltip","_useState27","_useState28","modal","setModal","init","setDock","tipoTributacao","SIMPLES_NACIONAL","loadLocalTrabalho","updateCargoAtual","updateSalarioAtual","changeCategoria","cepFmt","mergeFormData","fields","field","openMultiPage","componente","Page","pageProps","editItemProps","location","match","multiPageActions","showPage","handleAfastamentoSubmit","handleTomadorServicoSubmit","handleExameSubmit","handleFeriasSubmit","handleRescisaoSubmit","handleCopiarDadosSubmit","findById","matricula","movimentacoes","ferias","closeModal","openFerias","FeriasEditView","openRescisao","openExame","openTomadorServico","openAfastamento","AfastamentoEditView","openEventos","VinculoEventoEditView","openCopiarDados","vinculo_VinculoInternalSearchView","openTransferencia","vinculo_VinculoTransferenciaModalView","openReintegracao","vinculo_VinculoReintegracaoModalView","createDock","TRANSPORTADOR_VALUES","EMPREGADO_TRABALHADOR_INTERMITENTE","EMPREGADO_CONTRATO_VERDE_AMARELO_COM_ANT_FGTS","EMPREGADO_CONTRATO_VERDE_AMARELO_SEM_ANT_FGTS","MENOR_APRENDIZ","TRABALHADOR_TEMPORARIO","EMPREGADO_DOMESTICO","itemEnum","getCargoReferencia","tipoSalarioAtual","dataInclusaoSalarioAtual","valorSalarioAtual","numHorasContratadasSalarioAtual","outrasRemuneracoesSalarioAtual","getSalarioReferencia","numHorasFormatter","valorTotalOutrasRemuneracoes","validarCargo","itemData","cargoDefaultSortProps","salarioDefaultSortProps","difAcordoDefaultSortProps","quadroHorarioDefaultSortProps","valeTransporteDefaultSortProps","planoSaudeDefaultSortProps","prevComplementarDefaultSortProps","reintegracaoDefaultSortProps","trabIntermitenteDefaultSortProps","cargoFormProps","onBeforeRemove","salarioFormProps","percentualFormatter","difAcordoFormProps","quadroHorarioFormProps","valeTransporteFormProps","planoSaudeFormProps","prevComplementarFormProps","cell","razaoSocial","reintegracaoFormProps","trabIntermitenteFormProps","DIRETOR_EMPRESARIO_NAO_EMP_SEM_FGTS","CI_EMPRESARIO_SOCIO","AUTONOMO_CONTRIB_REMUNERACAO","trabalhador","dataNascimento","dataDemissaoDeterminado","dataTransferencia","arr","cnpjEmpresaOrigem","cpfEmpresaOrigem","banco","agencia","numeroConta","bancoFgts","agenciaFgts","numeroContaFgts","beforePersist","validarVinculoBeforePersist","content","enumItem","VINCULO_PARAM_ENUM_VALUES","TrabalhadorIS","esocialSincronizadoOutroSistema","onlyAlphaNum","CboIS","CentroCustoIS","dataOpcaoFgts","MAXIMO_DIAS_EXPERIENCIA_CONTRATO_TRABALHO","background","height","responsavelMenorAprendizIS_ResponsavelMenorAprendizIS","instituicaoEnsinoIS_InstituicaoEnsinoIS","grupoEmpresaRaiz","searchFilter","setFilter","getFilter","CLASS_NAME_UF","CLASS_NAME_LOCALIDADE","manage","CLASS_NAME_BAIRRO","fillForm","getProp","clearForm","LUCRO_REAL","TIPO_TRIBUTACAO_ENUM_VALUES","AUTOMATIZACAO_EMPRESA_VALUES","TRIBUTACAO_LUCRO_REAL_ENUM_VALUES","LUCRO_REAL_ARBITRADO","LUCRO_PRESUMIDO_REAL_ARBITRADO","LUCRO_PRESUMIDO","IMUNE","ISENTO","TODAS","ATIVAS","PERFIL_ENUM_FEMALE_VALUES","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","string","cssModule","object","bool","borderless","dark","oneOfType","tag","responsiveTag","func","Tag","ResponsiveTag","attributes","classes","table","responsiveClassName","defaultProps","OPERACOES_CONSULTA_VALORES"],"mappings":"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","file":"static/js/18.c2fa6fee.chunk.js","sourcesContent":["import { Basic } from 'summer';\r\nimport { EmpresaMFP } from './empresaMFP';\r\nimport { QuadroHorarioDia } from './quadroHorarioDia';\r\nimport { Sindicato } from './sindicato';\r\n\r\nexport interface QuadroHorario extends Basic {\r\n  codigo?: number;\r\n  dataInatividade?: string;\r\n  descricao?: string;\r\n  empresaMFP?: EmpresaMFP;\r\n  escala?: boolean;\r\n  escala12X36?: boolean;\r\n  flexibilidade?: boolean;\r\n  quadroHorarioDia?: QuadroHorarioDia[];\r\n  sindicato?: Sindicato;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.quadrohorario';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/agencia';\r\n\r\nconst AgenciaIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      type={InputType.INPUT_SEARCH}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'numero',\r\n            text: 'Número',\r\n          },\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'banco.nome',\r\n            text: 'Banco',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'AgenciaSearchView',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AgenciaIS;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mfp/banco';\r\n\r\nconst BancoIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      type={InputType.INPUT_SEARCH}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'site',\r\n            text: 'Site',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'BancoSearchView',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BancoIS;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mfp/sindicatoExample';\r\n\r\nconst SindicatoIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      type={InputType.INPUT_SEARCH}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'codigoEntidadeSindical',\r\n            text: 'Cód. Entidade Sindical',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'SindicatoSearchView',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SindicatoIS;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mfp/cargo';\r\n\r\nconst CargoIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      type={InputType.INPUT_SEARCH}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'AtividadeEconomicaSearchView',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CargoIS;\r\n","import { Basic } from 'summer';\r\nimport { Forcli } from '../ger/forcli';\r\n\r\nexport interface ValeTransporte extends Basic {\r\n  forcli?: Forcli;\r\n  codigo?: number;\r\n  valorUnitario?: number;\r\n  descricao?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.valetransporte';\r\n","export const DESPEDIDA_SEM_JUSTA_CAUSA = {\r\n  label: 'SJ2 - Despedida sem justa causa, pelo empregador',\r\n  value: 'DESPEDIDA_SEM_JUSTA_CAUSA',\r\n};\r\nexport const DESPEDIDA_POR_JUSTA_CAUSA = {\r\n  label: 'JC2 - Despedida por justa causa, pelo empregador',\r\n  value: 'DESPEDIDA_POR_JUSTA_CAUSA',\r\n};\r\nexport const RESCISAO_ANTECIPADA_CONTRATO_PRAZO_DETERMINADO_EMPREGADOR = {\r\n  label: 'RA2 - Rescisão antecipada, pelo empregador, do contrato de trabalho por prazo determinado',\r\n  value: 'RESCISAO_ANTECIPADA_CONTRATO_PRAZO_DETERMINADO_EMPREGADOR',\r\n};\r\nexport const RESCISAO_FALECIMENTO_EMPREGADOR_DESCONTINUACAO_EMPRESA = {\r\n  label: 'FE2 - Rescisão do contrato de trabalho por falecimento do empregador individual sem continuação da atividade da empresa',\r\n  value: 'RESCISAO_FALECIMENTO_EMPREGADOR_DESCONTINUACAO_EMPRESA',\r\n};\r\nexport const RESCISAO_FALECIMENTO_EMPREGADOR_OPCAO_EMPREGADO = {\r\n  label: 'FE1 - Rescisão do contrato de trabalho por falecimento do empregador individual por opção do empregado',\r\n  value: 'RESCISAO_FALECIMENTO_EMPREGADOR_OPCAO_EMPREGADO',\r\n};\r\nexport const RESCISAO_ANTECIPADA_CONTRATAO_PRAZO_DETERMINADO_EMPREGADO = {\r\n  label: 'RA1 - Rescisão antecipada, pelo empregado, do contrato de trabalho por prazo determinado',\r\n  value: 'RESCISAO_ANTECIPADA_CONTRATAO_PRAZO_DETERMINADO_EMPREGADO',\r\n};\r\nexport const RESCISAO_PEDIDO_EMPREGADO = {\r\n  label: 'SJ1 - Rescisão contratual a pedido do empregado',\r\n  value: 'RESCISAO_PEDIDO_EMPREGADO',\r\n};\r\nexport const RESCISAO_FALECIMENTO_EMPREGADO = {\r\n  label: 'FT1 - Rescisão do contrato de trabalho por falecimento do empregado',\r\n  value: 'RESCISAO_FALECIMENTO_EMPREGADO',\r\n};\r\nexport const TERMINO_CONTRATO_TRABALHO_PRAZO_DETERMINADO = {\r\n  label: 'PD0 - Extinção normal do contrato de trabalho por prazo determinado',\r\n  value: 'TERMINO_CONTRATO_TRABALHO_PRAZO_DETERMINADO',\r\n};\r\nexport const RESCISAO_INDIRETA = {\r\n  label: 'RI2 - Rescisão Indireta',\r\n  value: 'RESCISAO_INDIRETA',\r\n};\r\nexport const RESCISAO_CULPA_RECIPROCA = {\r\n  label: 'CR0 - Rescisão por culpa recíproca',\r\n  value: 'RESCISAO_CULPA_RECIPROCA',\r\n};\r\nexport const RECISAO_FORCA_MAIOR = {\r\n  label: 'FM0 - Rescisão por força maior',\r\n  value: 'RECISAO_FORCA_MAIOR',\r\n};\r\nexport const RECISAO_ACORDO = {\r\n  label: 'I5 - Rescisão do Contrato por motivo de acordo',\r\n  value: 'RECISAO_ACORDO',\r\n};\r\nexport const MUDANCA_REGIME_JURIDICO = {\r\n  label: 'M - Mudança de regime jurídico',\r\n  value: 'MUDANCA_REGIME_JURIDICO',\r\n};\r\nexport const RESCISAO_OUTROS = {\r\n  label: 'L - Outros motivos de rescisão do contrato de trabalho',\r\n  value: 'RESCISAO_OUTROS',\r\n};\r\n\r\nexport const DEMISSAO_ENUM_VALUES = [\r\n  DESPEDIDA_SEM_JUSTA_CAUSA,\r\n  DESPEDIDA_POR_JUSTA_CAUSA,\r\n  RESCISAO_ANTECIPADA_CONTRATO_PRAZO_DETERMINADO_EMPREGADOR,\r\n  RESCISAO_FALECIMENTO_EMPREGADOR_DESCONTINUACAO_EMPRESA,\r\n  RESCISAO_FALECIMENTO_EMPREGADOR_OPCAO_EMPREGADO,\r\n  RESCISAO_ANTECIPADA_CONTRATAO_PRAZO_DETERMINADO_EMPREGADO,\r\n  RESCISAO_PEDIDO_EMPREGADO,\r\n  RESCISAO_FALECIMENTO_EMPREGADO,\r\n  TERMINO_CONTRATO_TRABALHO_PRAZO_DETERMINADO,\r\n  RESCISAO_INDIRETA,\r\n  RESCISAO_CULPA_RECIPROCA,\r\n  RECISAO_FORCA_MAIOR,\r\n  RECISAO_ACORDO,\r\n  MUDANCA_REGIME_JURIDICO,\r\n  RESCISAO_OUTROS,\r\n];\r\n/**\r\n * Conjunto dos itens do enumerado, que não geram Seguro Desemprego.\r\n */\r\nexport const NAO_GERAM_SEGURO_DESEMPREGO_VALUES = [RESCISAO_PEDIDO_EMPREGADO, DESPEDIDA_POR_JUSTA_CAUSA];\r\n\r\nexport const SEM_COMPATIBILIDADE_HOMOLOGNET_ENUM_VALUES = [MUDANCA_REGIME_JURIDICO, RESCISAO_OUTROS];\r\n","export const CUMPRIMENTO_TOTAL = {\r\n  label: 'Cumprimento total',\r\n  value: 'CUMPRIMENTO_TOTAL',\r\n};\r\nexport const CUMPRIMENTO_PARCIAL_NOVO_EMPREGO = {\r\n  label: 'Cumprimento parcial em razão de obtenção de novo emprego pelo empregado',\r\n  value: 'CUMPRIMENTO_PARCIAL_NOVO_EMPREGO',\r\n};\r\nexport const CUMPRIMENTO_PARCIAL_EMPREGADOR = {\r\n  label: 'Cumprimento parcial por iniciativa do empregador',\r\n  value: 'CUMPRIMENTO_PARCIAL_EMPREGADOR',\r\n};\r\nexport const OUTRAS_HIPOTESES = {\r\n  label: 'Outras hipóteses de cumprimento parcial do aviso prévio',\r\n  value: 'OUTRAS_HIPOTESES',\r\n};\r\n\r\nexport const INDICADOR_CUMPRIMENTO_AV_PREVIO_ENUM_VALUES = [\r\n  CUMPRIMENTO_TOTAL,\r\n  CUMPRIMENTO_PARCIAL_NOVO_EMPREGO,\r\n  CUMPRIMENTO_PARCIAL_EMPREGADOR,\r\n  OUTRAS_HIPOTESES,\r\n];\r\n","export const REDUCAO_DUAS_HORAS = {\r\n  label: 'Aviso prévio trabalhado dado pelo empregador ao empregado, que optou pela redução de duas horas diárias [caput do art. 488 da CLT]',\r\n  value: 'REDUCAO_DUAS_HORAS',\r\n};\r\nexport const REDUCAO_DIAS_CORRIDOS = {\r\n  label: 'Aviso prévio trabalhado dado pelo empregador ao empregado, que optou pela redução de dias corridos [parágrafo único do art. 488 da CLT]',\r\n  value: 'REDUCAO_DIAS_CORRIDOS',\r\n};\r\nexport const PEDIDO_DEMISSAO_NAO_DISPENSADO = {\r\n  label:\r\n    'Aviso prévio dado pelo empregado (pedido de demissão), não dispensado de seu cumprimento, sob pena de desconto, pelo empregador, ' +\r\n    'dos salários correspondentes ao prazo respectivo (§2º do art. 487 da CLT)',\r\n  value: 'PEDIDO_DEMISSAO_NAO_DISPENSADO',\r\n};\r\nexport const REDUCAO_1DIA_POR_SEMANA = {\r\n  label: 'Aviso prévio trabalhado dado pelo empregador rural ao empregado, com redução de um dia por semana ( art. 15 da Lei nº 5889/73)',\r\n  value: 'REDUCAO_1DIA_POR_SEMANA',\r\n};\r\nexport const ACORDO_EMPREGADO_EMPREGADOR = {\r\n  label: \"Aviso prévio trabalhado decorrente de acordo entre empregado e empregador (art. 484-A, 'caput', da CLT)\",\r\n  value: 'ACORDO_EMPREGADO_EMPREGADOR',\r\n};\r\n\r\nexport const TIPO_AVISO_PREVIO_ENUM_VALUES = [\r\n  REDUCAO_DUAS_HORAS,\r\n  REDUCAO_DIAS_CORRIDOS,\r\n  PEDIDO_DEMISSAO_NAO_DISPENSADO,\r\n  REDUCAO_1DIA_POR_SEMANA,\r\n  ACORDO_EMPREGADO_EMPREGADOR,\r\n];\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { AlertType, Checkbox, compare, DetailEditForm, DetailEditViewFormProps, InputGroupInline, InputType } from 'summer';\r\nimport { FeriasRescisao } from '../../../../models/dtos/mfp/feriasRescisao';\r\nimport { promisedAlert } from '../../../../utilities/vinculo.util';\r\n\r\nconst FeriasRescisaoEditView: FC<DetailEditViewFormProps<FeriasRescisao>> = props => {\r\n  const formProps = useForm<FeriasRescisao>({ defaultValues: props.selectedItem || {}, mode: 'onBlur' });\r\n\r\n  const [valorDisabled, setValorDisabled] = useState(true);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (props.selectedItem) {\r\n        setValorDisabled(!props.selectedItem.valorManual);\r\n      }\r\n      if (!props.selectedItem || !props.selectedItem.nroFaltas) {\r\n        formProps.setValue('nroFaltas', 0);\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const changeValorManual = () => {\r\n    const values = formProps.getValues();\r\n    setValorDisabled(!values.valorManual);\r\n  };\r\n\r\n  const validateExtras = (formData, _, parentData) => {\r\n    const erros = [];\r\n\r\n    if (compare(formData.dtInicialPerAquisitivo, formData.dtFinalPerAquisitivo) > 0) {\r\n      erros.push('O Período aquisitivo inicial não pode ser maior ou igual ao Período aquisitivo final');\r\n    } else {\r\n      if (parentData.rescisaoJaCalculada && formData.valorManual) {\r\n        promisedAlert('A rescisão deverá ser recalculada para que os valores sejam atualizados.', AlertType.WARNING);\r\n      }\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"dtInicialPerAquisitivo\"\r\n            label=\"Período Aquisitivo\"\r\n            formProps={{ ...formProps, validation: { require: true } }}\r\n            isPrependLabel={true}\r\n            type={InputType.DATE}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"dtFinalPerAquisitivo\"\r\n            label=\"Até\"\r\n            formProps={{ ...formProps, validation: { require: true } }}\r\n            isPrependLabel={true}\r\n            type={InputType.DATE}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <div className=\"d-flex\">\r\n        <div className=\"flex-grow-1\">\r\n          <InputGroupInline\r\n            id=\"nroFaltas\"\r\n            label=\"Nº de Faltas\"\r\n            formProps={{ ...formProps, validation: { require: true } }}\r\n            isPrependLabel={true}\r\n            type={InputType.NUMBER}\r\n          />\r\n        </div>\r\n        <div style={{ width: 200, marginLeft: 10, marginTop: 10 }}>\r\n          <Checkbox id=\"reflexoDobra\" formProps={formProps} label=\"Reflexo de Dobra\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex\">\r\n        <div className=\"flex-grow-1\">\r\n          <InputGroupInline id=\"valor\" label=\"Valor\" formProps={formProps} isPrependLabel={true} disabled={valorDisabled} />\r\n        </div>\r\n        <div style={{ width: 194, marginLeft: 10, marginTop: 10 }}>\r\n          <Checkbox id=\"valorManual\" formProps={formProps} label=\"Valor Manual\" onChange={changeValorManual} />\r\n        </div>\r\n      </div>\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default FeriasRescisaoEditView;\r\n","import { saveAs } from 'file-saver';\r\nimport React, { FC, useEffect, useRef, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Button, Col, Row } from 'reactstrap';\r\nimport {\r\n  AlertType,\r\n  boolColumn,\r\n  Box,\r\n  Checkbox,\r\n  compare,\r\n  decimalFormatter,\r\n  DefaultSortProps,\r\n  DetailManagerForm,\r\n  DetailManagerFormProps,\r\n  EditForm,\r\n  EditFormRefProps,\r\n  EditViewProps,\r\n  ErroList,\r\n  getSelectedItem,\r\n  InputGroupInline,\r\n  InputType,\r\n  isEmpty,\r\n  onlyNumber,\r\n  OrderType,\r\n  ProcessBar,\r\n  progressActions,\r\n  WikiButton,\r\n  WindowComponent,\r\n  Wizard,\r\n  WizardActionFinishProps,\r\n  WizardPage,\r\n} from 'summer';\r\nimport { Rescisao } from '../../../../models/dtos/mfp/rescisao';\r\nimport { CLASS_NAME, Vinculo } from '../../../../models/dtos/mfp/vinculo';\r\nimport {\r\n  DEMISSAO_ENUM_VALUES,\r\n  DESPEDIDA_SEM_JUSTA_CAUSA,\r\n  MUDANCA_REGIME_JURIDICO,\r\n  RESCISAO_FALECIMENTO_EMPREGADO,\r\n  SEM_COMPATIBILIDADE_HOMOLOGNET_ENUM_VALUES,\r\n} from '../../../../models/enumerated/mfp/demissaoEnum';\r\nimport { INDICADOR_CUMPRIMENTO_AV_PREVIO_ENUM_VALUES } from '../../../../models/enumerated/mfp/indicadorCumprimentoAvPrevioEnum';\r\nimport { TIPO_AVISO_PREVIO_ENUM_VALUES } from '../../../../models/enumerated/mfp/tipoAvisoPrevioEnum';\r\nimport { apagarRescisao, definirAvisoPrevio, obterFeriasRescisao, rescisaoCalculada, simularRescisao } from '../../../../services/mfp.service';\r\nimport { fileDownload } from '../../../../services/report.service';\r\nimport EnumUtil from '../../../../utilities/enum.util';\r\nimport { condicional, getFullVinculo, loadVinculo, promisedAlert, promisedAlertWithCatch, showLoading } from '../../../../utilities/vinculo.util';\r\nimport VinculoIS from '../../../components/mfp/vinculoIS/VinculoIS';\r\nimport FeriasRescisaoEditView from './FeriasRescisaoEditView';\r\n\r\ninterface RescisaoEditViewProps extends EditViewProps<Rescisao> {\r\n  onDockSubmit?: (data: any) => void;\r\n  openViaDock?: boolean;\r\n}\r\n\r\ninterface ScreenFields {\r\n  vinculo?: Vinculo;\r\n  rescisaoJaCalculada?: boolean;\r\n}\r\n\r\nconst RescisaoEditView: FC<RescisaoEditViewProps & RouteComponentProps> = props => {\r\n  const selectedItem = getSelectedItem(props);\r\n  const formProps = useForm<Rescisao & ScreenFields>({\r\n    defaultValues: { ...(selectedItem && selectedItem.recisao ? selectedItem.recisao : {}), rescisaoJaCalculada: false },\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const editFormRef = useRef<EditFormRefProps>();\r\n\r\n  const [isSimularVisivel, setIsSimularVisivel] = useState(true);\r\n  const [disabledCumprimentoAviso, setDisabledCumprimentoAviso] = useState(false);\r\n  const [exibirTipoAviso, setExibirTipoAviso] = useState(false);\r\n  const [fullVinculo, setFullVinculo] = useState(null);\r\n  const [falecimentoEmpregado, setFalecimentoEmpregado] = useState(true);\r\n  const [mudancaRegimeJuridico, setMudancaRegimeJuridico] = useState(true);\r\n\r\n  useEffect(\r\n    () => {\r\n      setTimeout(() => {\r\n        formProps.register({ name: 'rescisaoJaCalculada' });\r\n        if (selectedItem && !isEmpty(selectedItem.id)) {\r\n          getFullVinculo(formProps, props.selectedItem, vinculo => {\r\n            setFullVinculo(vinculo);\r\n            checkRescisaoCalculada();\r\n          });\r\n        } else {\r\n          if (!selectedItem || isEmpty(selectedItem.id)) {\r\n            setIsSimularVisivel(false);\r\n          }\r\n        }\r\n      }, 700);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const onPageChange = currentPageId => {\r\n    if (currentPageId === 'rescisao') {\r\n      loadVinculo(\r\n        formProps,\r\n        dispatch,\r\n        vinculo => {\r\n          setFullVinculo(vinculo);\r\n          if (vinculo.recisao && vinculo.recisao.id) {\r\n            checkRescisaoCalculada();\r\n          }\r\n        },\r\n        'recisao'\r\n      );\r\n    }\r\n  };\r\n\r\n  const checkRescisaoCalculada = () => {\r\n    rescisaoCalculada(\r\n      { ...formProps.getValues(), vinculo: fullVinculo },\r\n      {\r\n        thenFunction: res => formProps.setValue('rescisaoJaCalculada', res),\r\n      }\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    formProps.setValue('vinculo', null);\r\n    setFullVinculo(null);\r\n  };\r\n\r\n  const onCancel = () => {\r\n    editFormRef.current.close();\r\n  };\r\n\r\n  const handleSubmitViaDock = () => {\r\n    editFormRef.current.submit(false).then(res => {\r\n      editFormRef.current.close();\r\n      if (props.onDockSubmit) {\r\n        props.onDockSubmit(res);\r\n      }\r\n    });\r\n  };\r\n\r\n  const changeAvisoDispensaIndenizado = () => {\r\n    const values = formProps.getValues();\r\n    const is = values.avisoPrevioIndenizado || values.dispensadoAvisoPrevio;\r\n    setDisabledCumprimentoAviso(!is);\r\n    setExibirTipoAviso(is);\r\n    if (is) {\r\n      formProps.setValue([{ indicadorCumprimentoAvPrevio: null }, { tipoAvisoPrevio: null }]);\r\n    }\r\n  };\r\n\r\n  const getFeriasRescisao = data => {\r\n    if (data.dtAfastamento) {\r\n      promisedAlert('Deseja obter as férias que deverão ser incluídas na Rescisão?').then(() => {\r\n        obterFeriasRescisao(\r\n          { ...formProps.getValues(), vinculo: fullVinculo },\r\n          {\r\n            thenFunction: res => {\r\n              formProps.setValue('feriasRescisao', res);\r\n            },\r\n          }\r\n        );\r\n      });\r\n    } else {\r\n      promisedAlert('É necessário definir a Data de afastamento.', AlertType.WARNING);\r\n    }\r\n  };\r\n\r\n  const dataAfastamentoBlur = () => {\r\n    const values = formProps.getValues();\r\n    if (values.dtAfastamento && fullVinculo.dataAdmissao) {\r\n      promisedAlertWithCatch('Deseja definir os Dias e a Data de aviso prévio com base nas informações do Trabalhador?')\r\n        .then(() => {\r\n          definirAvisoPrevio(\r\n            { ...formProps.getValues(), vinculo: fullVinculo },\r\n            {\r\n              thenFunction: res => {\r\n                delete res.vinculo;\r\n                formProps.setValue(Object.keys(res).map(key => ({ [key]: res[key] })));\r\n                getFeriasRescisao(res);\r\n              },\r\n            }\r\n          );\r\n        })\r\n        .catch(() => {\r\n          getFeriasRescisao(values);\r\n        });\r\n    }\r\n  };\r\n\r\n  const motivoChange = value => {\r\n    const values = formProps.getValues();\r\n\r\n    const isFalecimentoEmpregado = value !== RESCISAO_FALECIMENTO_EMPREGADO.value;\r\n    const isMudancaRegimeJuridico = value !== MUDANCA_REGIME_JURIDICO.value;\r\n\r\n    setFalecimentoEmpregado(isFalecimentoEmpregado);\r\n    setMudancaRegimeJuridico(isMudancaRegimeJuridico);\r\n\r\n    formProps.setValue([\r\n      { nrCertidaoObito: isFalecimentoEmpregado ? null : values.nrCertidaoObito },\r\n      { cnpjEmpresaSucessora: isMudancaRegimeJuridico ? null : values.cnpjEmpresaSucessora },\r\n    ]);\r\n  };\r\n\r\n  const motivoBlur = () => {\r\n    const values = formProps.getValues();\r\n    if (values.tipoDemissao === DESPEDIDA_SEM_JUSTA_CAUSA.value) {\r\n      formProps.setValue('arrecadouFgtsGuiaRecolhimentoRescisorio', true);\r\n    }\r\n  };\r\n\r\n  const validateExtras = (formData, rescisaoObrigatoria = false) => {\r\n    const erros = [];\r\n\r\n    const is = isEmpty(formData.dtAfastamento) && isEmpty(formData.dtAvisoPrevio) && isEmpty(formData.tipoDemissao);\r\n\r\n    if (rescisaoObrigatoria && is) {\r\n      erros.push('É necessário preencher a rescisão');\r\n    } else if (!isEmpty(formData.dtAfastamento) && compare(formData.dtPagamento, fullVinculo.dataAdmissao) === -1) {\r\n      erros.push('Data do Afastamento da Rescisão não pode ser anterior a Data de Admissão');\r\n    } else if (!isEmpty(formData.dtPagamento) && compare(formData.dtPagamento, fullVinculo.dataAdmissao) === -1) {\r\n      erros.push('Data do Pagamento da Rescisão não pode ser anterior a Data de Admissão');\r\n    } else {\r\n      if (formData.dtAfastamento || formData.dtAvisoPrevio || formData.tipoDemissao) {\r\n        if (formData.avisoPrevioIndenizado && isEmpty(formData.dtAvisoPrevio)) {\r\n          erros.push('Data do aviso prévio não pode estar em branco.');\r\n        }\r\n\r\n        if (isEmpty(formData.dtAfastamento)) {\r\n          erros.push('Data de afastamento não pode estar em branco.');\r\n        }\r\n\r\n        if (isEmpty(formData.dtPagamento)) {\r\n          erros.push('Data do pagamento não pode estar em branco.');\r\n        }\r\n\r\n        if (formData.tipoDemissao) {\r\n          if (formData.tipoDemissao === MUDANCA_REGIME_JURIDICO.value && isEmpty(formData.cnpjEmpresaSucessora)) {\r\n            erros.push('O CNPJ da Empresa Sucessora é obrigatório para o tipo de demissão ' + MUDANCA_REGIME_JURIDICO.label);\r\n          }\r\n        } else {\r\n          erros.push('Motivo da rescisão não pode estar em branco.');\r\n        }\r\n      }\r\n\r\n      if (formData.dtAfastamento && formData.dtAvisoPrevio && compare(formData.dtAfastamento, formData.dtAvisoPrevio) < 0) {\r\n        erros.push('Data de Afastamento deve ser posterior a data de Aviso Prévio.');\r\n      }\r\n\r\n      if (formData.avisoPrevioIndenizado && formData.jaRecebeuAvisoPrevioTrabalhado) {\r\n        erros.push('O campo Já recebeu o Aviso Prévio Trabalhado não pode ser marcado para o Aviso Prévio Indenizado.');\r\n      }\r\n\r\n      if (formData.homolognet && EnumUtil.contains(SEM_COMPATIBILIDADE_HOMOLOGNET_ENUM_VALUES, formData.tipoDemissao)) {\r\n        erros.push(\r\n          'O campo Motivo não pode ser ' +\r\n            EnumUtil.find(SEM_COMPATIBILIDADE_HOMOLOGNET_ENUM_VALUES, formData.tipoDemissao).label +\r\n            ', quando a opção Gerar Homolognet estiver marcada.'\r\n        );\r\n      }\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  const simularRescisaoClick = () => {\r\n    const values = formProps.getValues();\r\n    if (values.rescisaoJaCalculada) {\r\n      promisedAlert('A rescisão já foi calculada.', AlertType.WARNING);\r\n    } else if (values.naoCalcularRescisao) {\r\n      promisedAlert('Para simular a rescisão a opção \"Não Calcular Rescisão\" precisa ser desmarcada.', AlertType.WARNING);\r\n    } else {\r\n      const erros = validateExtras(values, true);\r\n      if (erros.length > 0) {\r\n        promisedAlert(<ErroList erros={erros} />, AlertType.ERROR);\r\n      } else {\r\n        dispatch(showLoading());\r\n        simularRescisao(\r\n          { ...values, vinculo: fullVinculo },\r\n          {\r\n            thenFunction: res => {\r\n              if (res && res.rescisaoDTO) {\r\n                formProps.setValue(Object.keys(res.rescisaoDTO).map(key => ({ [key]: res.rescisaoDTO[key] })));\r\n              }\r\n\r\n              if (res && res.idArquivo) {\r\n                fileDownload(res.idArquivo.split('<')[1], {\r\n                  errorFunction: mensagem => {\r\n                    dispatch(progressActions.hideProgress());\r\n                    promisedAlert(mensagem, AlertType.ERROR);\r\n                  },\r\n                  thenFunction: response => {\r\n                    dispatch(progressActions.hideProgress());\r\n                    const filename = response.headers['content-disposition'].split('filename=')[1];\r\n                    saveAs(response.data, filename);\r\n                  },\r\n                });\r\n              }\r\n            },\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const apagarRescisaoClick = () => {\r\n    const values = formProps.getValues();\r\n\r\n    const resetRescisao = () => {\r\n      formProps.setValue(\r\n        Object.keys(values)\r\n          .filter(key => key !== 'vinculo')\r\n          .map(key => ({ [key]: null }))\r\n      );\r\n    };\r\n\r\n    if (values.rescisaoJaCalculada) {\r\n      promisedAlert(\r\n        'A rescisão já foi calculada. Ao remover ela, seus cálculos também serão removidos. Essa operação é irreversível. ' +\r\n          'Deseja realmente apagar a rescisão?'\r\n      ).then(() => {\r\n        apagarRescisao(values.id, {\r\n          thenFunction: resetRescisao,\r\n        });\r\n      });\r\n    } else {\r\n      resetRescisao();\r\n    }\r\n  };\r\n\r\n  const feriasDefaultSortProps: DefaultSortProps[] = [\r\n    {\r\n      dataField: 'dtInicialPerAquisitivo',\r\n      order: OrderType.ASC,\r\n    },\r\n  ];\r\n\r\n  const feriasFormProps: DetailManagerFormProps = {\r\n    columns: [\r\n      {\r\n        dataField: 'dtInicialPerAquisitivo',\r\n        text: 'Dt. Inicial do Período Aquisitivo',\r\n      },\r\n      {\r\n        dataField: 'dtFinalPerAquisitivo',\r\n        text: 'Dt. Final do Período Aquisitivo',\r\n      },\r\n      {\r\n        dataField: 'nroFaltas',\r\n        text: 'Nº de Faltas',\r\n      },\r\n      boolColumn({\r\n        dataField: 'reflexoDobra',\r\n        text: 'Reflexo de Dobra',\r\n      }),\r\n      {\r\n        dataField: 'valor',\r\n        formatter: decimalFormatter,\r\n        text: 'Valor',\r\n      },\r\n    ],\r\n    detailView: FeriasRescisaoEditView,\r\n    formProps,\r\n    propName: 'feriasRescisao',\r\n    title: 'Férias a incluir',\r\n  };\r\n\r\n  const wizardFinishProps: WizardActionFinishProps = {\r\n    confirmButton: {\r\n      label: 'Salvar',\r\n    },\r\n    onCancel: () => {\r\n      reset();\r\n      onCancel();\r\n    },\r\n    onConfirm: () => {\r\n      editFormRef.current.submit().then(reset);\r\n    },\r\n  };\r\n\r\n  const getEditView = () => (\r\n    <>\r\n      <Row>\r\n        <Col className=\"text-right\">\r\n          {condicional(\r\n            isSimularVisivel,\r\n            <Button color=\"first\" onClick={simularRescisaoClick}>\r\n              Simular Recisão\r\n            </Button>\r\n          )}\r\n          <Button color=\"first\" style={{ marginLeft: 10 }} onClick={apagarRescisaoClick}>\r\n            Apagar Recisão\r\n          </Button>\r\n          <WikiButton pageId={643} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Box title=\"Programação de Rescisão\" className=\"mt-4\">\r\n            <Row>\r\n              <Col>\r\n                <Checkbox\r\n                  id=\"naoCalcularRescisao\"\r\n                  formProps={formProps}\r\n                  label=\"Programação de Rescisão\"\r\n                  tooltipProps={{\r\n                    message:\r\n                      \"Caso seja selecionado a rescisão do vinculo não será calculada. Marque essa opção para gerar o evento 'S-2399 - Trabalhador Sem Vínculo de Emprego/Estatutário - Término' sem o grupo de verbas verbas rescisorias\",\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <Checkbox\r\n                  id=\"pagar13NaRescisao\"\r\n                  formProps={formProps}\r\n                  label=\"Pagar 13º salário na rescisão\"\r\n                  tooltipProps={{\r\n                    message: 'Caso DESMARQUE esta opção os valores referentes ao 13º salário serão calculados e emitidos nas guias de 13º salário',\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col md={5}>\r\n                <Checkbox id=\"cumpriuJornadaSemanaAfastamento\" formProps={formProps} label=\"Jornada de trabalho cumprida na semana do afastamento\" />\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ marginTop: 15 }}>\r\n              <Col>\r\n                <Checkbox\r\n                  id=\"dispensadoAvisoPrevio\"\r\n                  formProps={formProps}\r\n                  label=\"Dispensa do Aviso Prévio\"\r\n                  onChange={changeAvisoDispensaIndenizado}\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <Checkbox id=\"homolognet\" formProps={formProps} label=\"Gerar Homolognet\" />\r\n              </Col>\r\n              <Col md={5}>\r\n                <Checkbox\r\n                  id=\"arrecadouFgtsGuiaRecolhimentoRescisorio\"\r\n                  formProps={formProps}\r\n                  label=\"FGTS arrecadado na Guia de Recolhimento Rescisório\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ marginTop: 15 }}>\r\n              <Col>\r\n                <Checkbox id=\"recolheFGTSMesAnterior\" formProps={formProps} label=\"Recolher FGTS Mês Anterior\" />\r\n              </Col>\r\n              <Col>\r\n                <Checkbox id=\"jaRecebeuAvisoPrevioTrabalhado\" formProps={formProps} label=\"Aviso Prévio Trabalhado Recebido\" />\r\n              </Col>\r\n              <Col md={5}>\r\n                <Checkbox id=\"empregoNoAvisoPrevio\" formProps={formProps} label=\"Novo vínculo comprovado durante Aviso Prévio\" />\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ marginTop: 15 }}>\r\n              <Col>\r\n                <Checkbox id=\"avisoPrevioIndenizado\" formProps={formProps} label=\"Aviso Prévio Indenizado\" onChange={changeAvisoDispensaIndenizado} />\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ marginTop: 25 }}>\r\n              <Col>\r\n                <InputGroupInline\r\n                  id=\"dtAfastamento\"\r\n                  label=\"Data do Afastamento\"\r\n                  formProps={formProps}\r\n                  isPrependLabel={true}\r\n                  type={InputType.DATE}\r\n                  onBlur={dataAfastamentoBlur}\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <InputGroupInline id=\"dtAvisoPrevio\" label=\"Data do Aviso Prévio\" formProps={formProps} isPrependLabel={true} type={InputType.DATE} />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  id=\"duracaoAviso\"\r\n                  label=\"Dias de Aviso Prévio\"\r\n                  formProps={{ ...formProps, validation: { ...onlyNumber(0, 3), max: 999 } }}\r\n                  isPrependLabel={true}\r\n                  type={InputType.NUMBER}\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <InputGroupInline id=\"dtPagamento\" label=\"Data do Pagamento\" formProps={formProps} isPrependLabel={true} type={InputType.DATE} />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline id=\"vrPensao\" label=\"Valor pensão\" formProps={formProps} isPrependLabel={true} />\r\n              </Col>\r\n              <Col>\r\n                <InputGroupInline id=\"percPensao\" label=\"Percentual de Pensão\" formProps={formProps} isPrependLabel={true} />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline id=\"percPensaoFGTS\" label=\"Percentual de Pensão FGTS\" formProps={formProps} isPrependLabel={true} />\r\n              </Col>\r\n              <Col>\r\n                <InputGroupInline id=\"saldoFGTS\" label=\"Saldo FGTS\" formProps={formProps} isPrependLabel={true} />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  id=\"cnpjEmpresaSucessora\"\r\n                  label=\"CNPJ Empresa Sucessora\"\r\n                  formProps={formProps}\r\n                  isPrependLabel={true}\r\n                  type={InputType.CNPJ}\r\n                  disabled={mudancaRegimeJuridico}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  id=\"nrCertidaoObito\"\r\n                  label=\"Nr. Certidão de Óbito\"\r\n                  formProps={formProps}\r\n                  isPrependLabel={true}\r\n                  type={InputType.MASK}\r\n                  inputMaskedProps={{ mask: '999999.99.99.9999.9.99999.999.9999999-99' }}\r\n                  disabled={falecimentoEmpregado}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            {condicional(\r\n              exibirTipoAviso,\r\n              <Row>\r\n                <Col>\r\n                  <InputGroupInline\r\n                    id=\"tipoAvisoPrevio\"\r\n                    label=\"Tipo de Aviso Prévio\"\r\n                    formProps={formProps}\r\n                    isPrependLabel={true}\r\n                    placeholder=\"Selecione o Tipo de Aviso Prévio\"\r\n                    inputDropDownProps={{ optionsProvider: TIPO_AVISO_PREVIO_ENUM_VALUES }}\r\n                    type={InputType.DROP_DOWN}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            )}\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  id=\"indicadorCumprimentoAvPrevio\"\r\n                  label=\"Cumprimento Aviso Prévio\"\r\n                  formProps={formProps}\r\n                  isPrependLabel={true}\r\n                  placeholder=\"Selecione o Cumprimento Aviso Prévio\"\r\n                  inputDropDownProps={{ optionsProvider: INDICADOR_CUMPRIMENTO_AV_PREVIO_ENUM_VALUES }}\r\n                  type={InputType.DROP_DOWN}\r\n                  disabled={disabledCumprimentoAviso}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  id=\"tipoDemissao\"\r\n                  label=\"Motivo\"\r\n                  formProps={formProps}\r\n                  isPrependLabel={true}\r\n                  placeholder=\"Selecione o Motivo\"\r\n                  inputDropDownProps={{ optionsProvider: DEMISSAO_ENUM_VALUES }}\r\n                  type={InputType.DROP_DOWN}\r\n                  onChange={motivoChange}\r\n                  onBlur={motivoBlur}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  id=\"informacaoCaixa\"\r\n                  label=\"156 - Informações a CAIXA\"\r\n                  formProps={{ ...formProps, validation: { maxLength: 255 } }}\r\n                  isPrependLabel={true}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Box>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <DetailManagerForm\r\n            {...props}\r\n            defaultSortDirection={OrderType.ASC}\r\n            defaultSorted={feriasDefaultSortProps}\r\n            {...feriasFormProps}\r\n            keyField=\"rowIndex\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <WindowComponent title=\"Manutenção de Rescisão\" wrapBody={props.openViaDock === true} wikiId={2983}>\r\n      <EditForm\r\n        ref={editFormRef}\r\n        formProps={formProps}\r\n        editViewProps={props}\r\n        dtoClassName={CLASS_NAME}\r\n        externalSubmit={true}\r\n        validateExtras={validateExtras}\r\n      >\r\n        {props.openViaDock === true ? (\r\n          <div className=\"m-3\">\r\n            {getEditView()}\r\n            <ProcessBar handleSubmit={handleSubmitViaDock} handleClose={onCancel} btnSubmitIcon=\"save\" btnSubmitLabel=\"Salvar\" />\r\n          </div>\r\n        ) : (\r\n          <Wizard formProps={formProps} onAfterPageChange={onPageChange} finishProps={wizardFinishProps}>\r\n            <WizardPage id=\"vinculo\" title=\"Seleção do vínculo\">\r\n              <Row>\r\n                <Col>\r\n                  <VinculoIS id=\"vinculo\" formProps={{ ...formProps, validation: { required: true } }} label=\"Vinculo\" isPrependLabel={true} />\r\n                </Col>\r\n              </Row>\r\n            </WizardPage>\r\n            <WizardPage id=\"rescisao\" title=\"Rescisão\">\r\n              {getEditView()}\r\n            </WizardPage>\r\n          </Wizard>\r\n        )}\r\n      </EditForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default RescisaoEditView;\r\n","export const PARCIAL = { label: 'Parcial', value: 'PARCIAL' };\r\nexport const TOTAL = { label: 'Total', value: 'TOTAL' };\r\n\r\nexport const TIPO_RESILICAO_ENUM_VALUES = [PARCIAL, TOTAL];\r\n","import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { AlertType, CALIMA_DANGER, ConfirmationView, InputGroupInline, InputType, ProcessBar } from 'summer';\r\nimport { promisedAlert } from '../../../../utilities/vinculo.util';\r\n\r\ninterface VinculoRemoveFields {\r\n  cpf?: string;\r\n}\r\n\r\nconst VinculoRemoveConfirmationView: FC<ConfirmationView> = props => {\r\n  const formProps = useForm<VinculoRemoveFields>({ mode: 'onBlur' });\r\n\r\n  const handleSubmit = () => {\r\n    const values = formProps.getValues();\r\n    if (values.cpf === props.selectedItem.cpf) {\r\n      props.done(true);\r\n    } else {\r\n      promisedAlert('O CPF não corresponde ao trabalhador.', AlertType.ERROR);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => props.done(false);\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col className=\"text-center font-weight-bold mb-2\">ATENÇÃO: Este procedimento é irreversível!</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"text-center font-weight-bold mb-3\" style={{ color: CALIMA_DANGER }}>\r\n          Trabalhador: {props.selectedItem.label}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            isPrependLabel={true}\r\n            id=\"cpf\"\r\n            label=\"CPF\"\r\n            type={InputType.CPF}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <ProcessBar handleSubmit={formProps.handleSubmit(handleSubmit)} handleClose={handleCancel} btnSubmitIcon=\"check\" btnSubmitLabel=\"Confirmar\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VinculoRemoveConfirmationView;\r\n","import React, { FC, useRef } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, Row } from 'reactstrap';\r\nimport {\r\n  ColumnsProps,\r\n  CountComparatorEnum,\r\n  cpfFormatter,\r\n  DefaultSortProps,\r\n  enumColumn,\r\n  FilterType,\r\n  getExtraData,\r\n  InputGroupInline,\r\n  InputType,\r\n  OperationEnum,\r\n  OrderType,\r\n  parseRefToDate,\r\n  SearchDataGrid,\r\n  SearchDataGridRefProps,\r\n  SearchExpression,\r\n  SearchViewProps,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMFP } from '../../../../dependencies/empresaMFPDependency';\r\nimport { hasGrupoEmpresaConfig } from '../../../../dependencies/grupoEmpresaConfigDependency';\r\nimport { Empresa } from '../../../../models/dtos/ger/empresa';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mfp/vinculo';\r\nimport { CLASS_NAME as CLASS_NAME_VIEW, VinculoVW } from '../../../../models/dtos/mfp/vinculoVW';\r\nimport { ATIVOS, INATIVOS, PERFIL_ENUM_MALE_VALUES, TODOS } from '../../../../models/enumerated/ger/perfilEnum';\r\nimport { CATEGORIA_ENUM_VALUES } from '../../../../models/enumerated/mfp/categoriaEnum';\r\nimport { TOTAL } from '../../../../models/enumerated/mfp/tipoResilicaoEnum';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport VinculoRemoveConfirmationView from './VinculoRemoveConfirmationView';\r\n\r\nconst defaultSorted: DefaultSortProps[] = [\r\n  {\r\n    dataField: 'matricula',\r\n    order: OrderType.DESC,\r\n  },\r\n];\r\n\r\ninterface VinculoSearchViewProps extends SearchViewProps<VinculoVW> {\r\n  apenasInativos?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n}\r\n\r\nconst VinculoSearchView: FC<VinculoSearchViewProps> = props => {\r\n  const formProps = useForm<VinculoVW & { perfil: string }>({\r\n    defaultValues: { perfil: props.apenasInativos ? INATIVOS.value : ATIVOS.value },\r\n    mode: 'onBlur',\r\n  });\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const searchRef = useRef<SearchDataGridRefProps>();\r\n\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'matricula',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.NUMBER,\r\n      },\r\n      sort: true,\r\n      text: 'Matrícula',\r\n    },\r\n    {\r\n      dataField: 'nome',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      sort: true,\r\n      text: 'Trabalhador',\r\n    },\r\n    enumColumn(\r\n      {\r\n        dataField: 'categoria',\r\n        editor: true,\r\n        filter: true,\r\n        sort: true,\r\n        text: 'Categoria',\r\n      },\r\n      CATEGORIA_ENUM_VALUES\r\n    ),\r\n    {\r\n      dataField: 'dataAdmissao',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.DATE,\r\n      },\r\n      sort: true,\r\n      text: 'Dt. Admissão',\r\n    },\r\n    {\r\n      dataField: 'dataAfastamentoMovimentacao',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.DATE,\r\n      },\r\n      sort: true,\r\n      text: 'Dt. Último Afastamento',\r\n    },\r\n    {\r\n      dataField: 'dataAfastamentoRecisao',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.DATE,\r\n      },\r\n      sort: true,\r\n      text: 'Dt. Rescisão',\r\n    },\r\n    {\r\n      dataField: 'cpf',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      formatter: cpfFormatter,\r\n      sort: true,\r\n      text: 'CPF',\r\n    },\r\n  ];\r\n\r\n  const searchExpressionsFull = defaultExpressions => {\r\n    const { referencia } = globalReducer.globalParameter.empresaMFP;\r\n    const mainExpression: SearchExpression[] = [...defaultExpressions];\r\n    const advancedSearch: SearchExpression[] = [];\r\n\r\n    if (props.apenasInativos) {\r\n      mainExpression.push({\r\n        expressions: advancedSearch,\r\n        fieldName: 'empresaMFP.id',\r\n        operation: OperationEnum.IN,\r\n        value: getIdsEmpresasMFP(),\r\n      });\r\n    } else {\r\n      mainExpression.push({\r\n        expressions: advancedSearch,\r\n        fieldName: 'empresaMFP.id',\r\n        value: globalReducer.globalParameter.empresaMFP.id,\r\n      });\r\n    }\r\n\r\n    if (formProps.getValues().perfil !== TODOS.value) {\r\n      const dataReferenciaEmpresa = parseRefToDate(referencia, 0);\r\n\r\n      if (formProps.getValues().perfil === ATIVOS.value) {\r\n        advancedSearch.push({\r\n          alias: 'dataAfastamentoRecisao1',\r\n          conditionalGroup: 'd0',\r\n          countOperation: CountComparatorEnum.EQ,\r\n          fieldName: 'dataAfastamentoRecisao',\r\n          operation: OperationEnum.EQUAL,\r\n          value: null,\r\n        });\r\n\r\n        advancedSearch.push({\r\n          alias: 'dataAfastamentoRecisao2',\r\n          conditionalGroup: 'd0',\r\n          fieldName: 'dataAfastamentoRecisao',\r\n          operation: OperationEnum.GREATER_THAN,\r\n          value: dataReferenciaEmpresa,\r\n        });\r\n\r\n        advancedSearch.push({\r\n          conditionalGroup: 'd2',\r\n          fieldName: 'dataAfastamentoMovimentacao',\r\n          operation: OperationEnum.EQUAL,\r\n          value: null,\r\n        });\r\n\r\n        advancedSearch.push({\r\n          conditionalGroup: 'd2',\r\n          fieldName: 'dataAfastamentoMovimentacao',\r\n          operation: OperationEnum.GREATER_THAN,\r\n          value: dataReferenciaEmpresa,\r\n        });\r\n\r\n        advancedSearch.push({\r\n          conditionalGroup: 'd2',\r\n          fieldName: 'dataRetornoMovimentacao',\r\n          operation: OperationEnum.LESS_THAN_EQUAL,\r\n          value: dataReferenciaEmpresa,\r\n        });\r\n\r\n        advancedSearch.push({\r\n          alias: 'dataAfastamentoResilicao2',\r\n          conditionalGroup: 'd3',\r\n          fieldName: 'dataAfastamentoResilicao',\r\n          operation: OperationEnum.EQUAL,\r\n          value: null,\r\n        });\r\n\r\n        advancedSearch.push({\r\n          alias: 'dataAfastamentoResilicao1',\r\n          conditionalGroup: 'd3',\r\n          fieldName: 'dataAfastamentoResilicao',\r\n          operation: OperationEnum.GREATER_THAN,\r\n          value: dataReferenciaEmpresa,\r\n        });\r\n\r\n        advancedSearch.push({\r\n          alias: 'tipoResilicao1',\r\n          conditionalGroup: 'd3',\r\n          fieldName: 'tipoResilicao',\r\n          operation: OperationEnum.DIFERENT,\r\n          value: TOTAL.value,\r\n        });\r\n      } else {\r\n        advancedSearch.push({\r\n          conditionalGroup: 'd0',\r\n          fieldName: 'dataAfastamentoRecisao',\r\n          operation: OperationEnum.LESS_THAN_EQUAL,\r\n          value: dataReferenciaEmpresa,\r\n        });\r\n\r\n        advancedSearch.push({\r\n          conditionalGroup: 'd0',\r\n          expressions: [\r\n            {\r\n              conditionalGroup: 'd2',\r\n              fieldName: 'tipoResilicao',\r\n              operation: OperationEnum.EQUAL,\r\n              value: TOTAL.value,\r\n            },\r\n          ],\r\n          fieldName: 'dataAfastamentoRecisao',\r\n          operation: OperationEnum.LESS_THAN_EQUAL,\r\n          value: dataReferenciaEmpresa,\r\n        });\r\n\r\n        if (!props.apenasInativos) {\r\n          advancedSearch.push({\r\n            conditionalGroup: 'd0',\r\n            expressions: [\r\n              {\r\n                conditionalGroup: 'd2',\r\n                fieldName: 'dataRetornoMovimentacao',\r\n                operation: OperationEnum.GREATER_THAN,\r\n                value: dataReferenciaEmpresa,\r\n              },\r\n              {\r\n                alias: 'dataRetornoMovimentacao2',\r\n                conditionalGroup: 'd2',\r\n                fieldName: 'dataRetornoMovimentacao',\r\n                operation: OperationEnum.EQUAL,\r\n                value: null,\r\n              },\r\n            ],\r\n            fieldName: 'dataAfastamentoMovimentacao',\r\n            operation: OperationEnum.LESS_THAN_EQUAL,\r\n            value: dataReferenciaEmpresa,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    return mainExpression;\r\n  };\r\n\r\n  const getIdsEmpresasMFP = (): number[] => {\r\n    return props.empresasSelecionadas.filter(it => it && it.empresaMFP).map(it => it.empresaMFP.id);\r\n  };\r\n\r\n  const onChangeSituacao = () => setTimeout(() => searchRef.current.notifySearchExpressionChange(), 200);\r\n\r\n  return (\r\n    <WindowComponent\r\n      title={props.title || 'Manutenção de Trabalhador - Vínculo'}\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[\r\n        () => hasEmpresa(globalReducer.globalParameter),\r\n        () => hasEmpresaMFP(globalReducer.globalParameter),\r\n        () => hasGrupoEmpresaConfig(globalReducer.globalParameter),\r\n      ]}\r\n      wikiId={2983}\r\n    >\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"perfil\"\r\n            label=\"Situação\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            isPrependLabel={true}\r\n            placeholder=\"Informe a situação dos trabalhadores\"\r\n            inputDropDownProps={{\r\n              optionsProvider: PERFIL_ENUM_MALE_VALUES,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n            onChange={onChangeSituacao}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <SearchDataGrid\r\n        {...props}\r\n        {...props.searchDataGridProps}\r\n        columns={columns}\r\n        defaultSorted={defaultSorted}\r\n        dtoClassName={CLASS_NAME_VIEW}\r\n        extraData={getExtraData(props, 'VinculoEditView', CLASS_NAME, { removeConfirmationView: VinculoRemoveConfirmationView })}\r\n        ref={searchRef}\r\n        searchExpressionsFull={searchExpressionsFull}\r\n      />\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default VinculoSearchView;\r\n","import { Basic } from 'summer';\r\nimport { EmpresaMFP } from './empresaMFP';\r\n\r\nexport interface VinculoVW extends Basic {\r\n  /** este campo utiliza o enum CategoriaEnum */\r\n  categoria?: string;\r\n  codigo?: string;\r\n  cpf?: string;\r\n  dataAdmissao?: string;\r\n  dataAfastamentoMovimentacao?: string;\r\n  dataAfastamentoRecisao?: string;\r\n  dataAfastamentoResilicao?: string;\r\n  dataRetornoMovimentacao?: string;\r\n  empresaMFP?: EmpresaMFP;\r\n  matricula?: number;\r\n  nome?: string;\r\n  pis?: string;\r\n  /** este campo utiliza o enum TipoResilicaoEnum */\r\n  tipoResilicao?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.vinculovw';\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { add, compare, DetailEditForm, DetailEditViewFormProps, formatDate, InputGroupInline, InputType, isEmpty, onlyNumber, toDate } from 'summer';\r\nimport { VinculoExameOcupacional } from '../../../../models/dtos/mfp/vinculoExameOcupacional';\r\nimport { ADMISSIONAL, DEMISSIONAL, TIPO_EXAME_MEDICO_ENUM_VALUES } from '../../../../models/enumerated/mfp/tipoExameMedicoEnum';\r\nimport { getItemAtual } from '../../../../utilities/vinculo.util';\r\nimport CepUFIS from '../../../components/ger/cepUFIS/CepUFIS';\r\n\r\nconst VinculoExameOcupacionalEditView: FC<DetailEditViewFormProps<VinculoExameOcupacional>> = props => {\r\n  const formProps = useForm<VinculoExameOcupacional>({ defaultValues: props.selectedItem || {}, mode: 'onBlur' });\r\n\r\n  useEffect(\r\n    () => {\r\n      setTimeout(() => {\r\n        formProps.register({ name: 'nroOrdem' });\r\n\r\n        const value = formProps.getValues();\r\n\r\n        if (isEmpty(value.nroOrdem)) {\r\n          const parentValues = props.parentFormProps.getValues();\r\n          if (parentValues.examesOcupacionais.length > 0) {\r\n            formProps.setValue('nroOrdem', getItemAtual(parentValues.examesOcupacionais).nroOrdem + 1);\r\n          } else {\r\n            formProps.setValue('nroOrdem', 1);\r\n          }\r\n        }\r\n      }, 700);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const dtExameChange = () => {\r\n    const values = formProps.getValues();\r\n    if (!isEmpty(values.dtExame)) {\r\n      formProps.setValue('dtVencimentoExame', formatDate(add(add(toDate(values.dtExame), 1, 'year'), -1, 'day')));\r\n    }\r\n  };\r\n\r\n  const validateExtras = (formData, _, parentData) => {\r\n    const erros = [];\r\n\r\n    if (!isEmpty(formData) && !isEmpty(formData.dtVencimentoExame) && compare(formData.dtExame, formData.dtVencimentoExame) >= 0) {\r\n      erros.push('A data do Exame não pode ser maior ou igual a data do Vencimento do Exame.');\r\n    }\r\n\r\n    parentData.examesOcupacionais.forEach(exame => {\r\n      if (exame.nroOrdem !== formData.nroOrdem) {\r\n        if (!isEmpty(formData.tipoExame)) {\r\n          if (formData.tipoExame === exame.tipoExame && (ADMISSIONAL.value === formData.tipoExame || DEMISSIONAL.value === formData.tipoExame)) {\r\n            erros.push('Somente um Exame do tipo Admissional ou Demissional pode ser cadastrado.');\r\n          }\r\n        }\r\n        if (!isEmpty(formData.dtExame) && compare(formData.dtExame, exame.dtExame) === 0) {\r\n          erros.push('A Data do Exame já está cadastrada.');\r\n        }\r\n      }\r\n    });\r\n\r\n    return erros;\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"tipoExame\"\r\n            label=\"Tipo de Exame\"\r\n            formProps={formProps}\r\n            isPrependLabel={true}\r\n            inputDropDownProps={{ optionsProvider: TIPO_EXAME_MEDICO_ENUM_VALUES }}\r\n            type={InputType.DROP_DOWN}\r\n            placeholder=\"Selecione o Tipo de Exame\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"dtExame\"\r\n            label=\"Data do Exame\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            isPrependLabel={true}\r\n            type={InputType.DATE}\r\n            onBlur={dtExameChange}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"dtVencimentoExame\"\r\n            label=\"Vencimento do Exame\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            isPrependLabel={true}\r\n            type={InputType.DATE}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"codigoExame\"\r\n            label=\"Código do Exame\"\r\n            formProps={{ ...formProps, validation: { maxLength: 17 } }}\r\n            isPrependLabel={true}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline id=\"cnpjLaboratorio\" label=\"CNPJ do Laboratório\" formProps={formProps} isPrependLabel={true} type={InputType.CNPJ} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <CepUFIS id=\"ufMedicoCRM\" formProps={formProps} label=\"UF da CRM do Médico\" isPrependLabel={true} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline id=\"crm\" label=\"CRM do Médico\" formProps={{ ...formProps, validation: onlyNumber(0, 10) }} isPrependLabel={true} />\r\n        </Col>\r\n      </Row>\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default VinculoExameOcupacionalEditView;\r\n","import React, { FC, useEffect, useRef } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, Row } from 'reactstrap';\r\nimport {\r\n  Box,\r\n  DefaultSortProps,\r\n  DetailManagerForm,\r\n  DetailManagerFormProps,\r\n  EditForm,\r\n  EditFormRefProps,\r\n  EditViewProps,\r\n  enumColumn,\r\n  getSelectedItem,\r\n  InputGroupInline,\r\n  InputType,\r\n  OrderType,\r\n  ProcessBar,\r\n  WindowComponent,\r\n  Wizard,\r\n  WizardActionFinishProps,\r\n  WizardPage,\r\n} from 'summer';\r\nimport { CLASS_NAME, Vinculo } from '../../../../models/dtos/mfp/vinculo';\r\nimport { TIPO_EXAME_MEDICO_ENUM_VALUES } from '../../../../models/enumerated/mfp/tipoExameMedicoEnum';\r\nimport { getItemAtual, loadVinculo, registrarListasVinculo } from '../../../../utilities/vinculo.util';\r\nimport VinculoIS from '../../../components/mfp/vinculoIS/VinculoIS';\r\nimport VinculoExameOcupacionalEditView from './VinculoExameOcupacionalEditView';\r\n\r\ninterface ExameEditViewProps extends EditViewProps<Vinculo> {\r\n  onDockSubmit?: (data: any) => void;\r\n  openViaDock?: boolean;\r\n}\r\n\r\ninterface ScreenFields {\r\n  vinculo?: Vinculo;\r\n  ultimoExameVencimento?: string;\r\n}\r\n\r\nconst ExameEditView: FC<ExameEditViewProps & RouteComponentProps> = props => {\r\n  const selectedItem = getSelectedItem(props);\r\n  const formProps = useForm<Vinculo & ScreenFields>({ defaultValues: { examesOcupacionais: [], ...selectedItem }, mode: 'onBlur' });\r\n  const dispatch = useDispatch();\r\n\r\n  const editFormRef = useRef<EditFormRefProps>();\r\n\r\n  useEffect(\r\n    () => {\r\n      setTimeout(() => {\r\n        registrarListasVinculo(formProps, ['examesOcupacionais']);\r\n        if (selectedItem && selectedItem.id) {\r\n          updateUltimoExameVencimento();\r\n        }\r\n      }, 700);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const updateUltimoExameVencimento = () => {\r\n    const values = formProps.getValues();\r\n    if (values.examesOcupacionais.length > 0) {\r\n      formProps.setValue('ultimoExameVencimento', getItemAtual(values.examesOcupacionais).dtVencimentoExame);\r\n    }\r\n  };\r\n\r\n  const onPageChange = currentPageId => {\r\n    if (currentPageId === 'exames') {\r\n      loadVinculo(formProps, dispatch, () => {\r\n        updateUltimoExameVencimento();\r\n      });\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    formProps.setValue('vinculo', null);\r\n  };\r\n\r\n  const onCancel = () => {\r\n    editFormRef.current.close();\r\n  };\r\n\r\n  const handleSubmitViaDock = () => {\r\n    editFormRef.current.submit(false).then(res => {\r\n      editFormRef.current.close();\r\n      if (props.onDockSubmit) {\r\n        props.onDockSubmit(res);\r\n      }\r\n    });\r\n  };\r\n\r\n  const exameDefaultSortProps: DefaultSortProps[] = [\r\n    {\r\n      dataField: 'nroOrdem',\r\n      order: OrderType.ASC,\r\n    },\r\n  ];\r\n\r\n  const exameFormProps: DetailManagerFormProps = {\r\n    columns: [\r\n      {\r\n        dataField: 'dtExame',\r\n        text: 'Data do Exame',\r\n      },\r\n      {\r\n        dataField: 'dtVencimentoExame',\r\n        text: 'Vencimento do Exame',\r\n      },\r\n      enumColumn(\r\n        {\r\n          dataField: 'tipoExame',\r\n          text: 'Tipo de Exame',\r\n        },\r\n        TIPO_EXAME_MEDICO_ENUM_VALUES\r\n      ),\r\n    ],\r\n    detailView: VinculoExameOcupacionalEditView,\r\n    formProps,\r\n    onChange: updateUltimoExameVencimento,\r\n    propName: 'examesOcupacionais',\r\n    title: 'Histórico de Exames',\r\n  };\r\n\r\n  const wizardFinishProps: WizardActionFinishProps = {\r\n    confirmButton: {\r\n      label: 'Salvar',\r\n    },\r\n    onCancel: () => {\r\n      reset();\r\n      onCancel();\r\n    },\r\n    onConfirm: () => {\r\n      editFormRef.current.submit().then(reset);\r\n    },\r\n  };\r\n\r\n  const getEditView = () => (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          <Box title=\"Ultimo Exame Ocupacional\">\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  id=\"ultimoExameVencimento\"\r\n                  formProps={formProps}\r\n                  label=\"Vencimento\"\r\n                  isPrependLabel={true}\r\n                  type={InputType.DATE}\r\n                  disabled={true}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Box>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <DetailManagerForm\r\n            {...props}\r\n            defaultSortDirection={OrderType.ASC}\r\n            defaultSorted={exameDefaultSortProps}\r\n            {...exameFormProps}\r\n            keyField=\"rowIndex\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <WindowComponent title=\"Manutenção de Exames\" wrapBody={props.openViaDock === true} wikiId={2983}>\r\n      <EditForm ref={editFormRef} formProps={formProps} editViewProps={props} dtoClassName={CLASS_NAME} externalSubmit={true}>\r\n        {props.openViaDock === true ? (\r\n          <div className=\"m-3\">\r\n            {getEditView()}\r\n            <ProcessBar handleSubmit={handleSubmitViaDock} handleClose={onCancel} btnSubmitIcon=\"save\" btnSubmitLabel=\"Salvar\" />\r\n          </div>\r\n        ) : (\r\n          <Wizard formProps={formProps} onAfterPageChange={onPageChange} finishProps={wizardFinishProps}>\r\n            <WizardPage id=\"vinculo\" title=\"Seleção do vínculo\">\r\n              <Row>\r\n                <Col>\r\n                  <VinculoIS id=\"vinculo\" formProps={{ ...formProps, validation: { required: true } }} label=\"Vinculo\" isPrependLabel={true} />\r\n                </Col>\r\n              </Row>\r\n            </WizardPage>\r\n            <WizardPage id=\"exames\" title=\"Exames\">\r\n              {getEditView()}\r\n            </WizardPage>\r\n          </Wizard>\r\n        )}\r\n      </EditForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default ExameEditView;\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { compare, DetailEditForm, DetailEditViewFormProps, InputGroupInline, InputType, isEmpty, progressActions } from 'summer';\r\nimport { VinculoTomadorServico } from '../../../../models/dtos/mfp/vinculoTomadorServico';\r\nimport { existeCalculoVinculoTomadorServico } from '../../../../services/mfp.service';\r\nimport { showLoading } from '../../../../utilities/vinculo.util';\r\nimport TomadorServicoIS from '../../../components/mfp/tomadorServicoIS/TomadorServicoIS';\r\n\r\nconst VinculoTomadorServicoDetailEditView: FC<DetailEditViewFormProps<VinculoTomadorServico & { rowIndex?: number }>> = props => {\r\n  const formProps = useForm<VinculoTomadorServico>({ defaultValues: props.selectedItem || {}, mode: 'onBlur' });\r\n  const dispatch = useDispatch();\r\n\r\n  const [tomadorServicoDisabled, setTomadorServicoDisabled] = useState(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      setTimeout(() => {\r\n        if (props.selectedItem && props.selectedItem.id) {\r\n          const values = formProps.getValues();\r\n          const parentValues = props.parentFormProps.getValues();\r\n          dispatch(showLoading());\r\n          existeCalculoVinculoTomadorServico(\r\n            {\r\n              tomadorServico: {\r\n                dtFim: values.dtFim,\r\n                dtInicio: values.dtInicio,\r\n                tomadorServico: {\r\n                  id: values.tomadorServico.id,\r\n                },\r\n              },\r\n              vinculo: {\r\n                id: parentValues.id,\r\n              },\r\n            },\r\n            {\r\n              thenFunction: res => {\r\n                dispatch(progressActions.hideProgress());\r\n                setTomadorServicoDisabled(res);\r\n              },\r\n            }\r\n          );\r\n        }\r\n      }, 700);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const validateExtras = (formData, _, parentData) => {\r\n    const erros = [];\r\n\r\n    if (!isEmpty(formData.dtFim) && compare(formData.dtInicio, formData.dtFim) > 0) {\r\n      erros.push('A Data Final deve estar em branco ou posterior à Data Inicial.');\r\n    }\r\n\r\n    if (compare(parentData.dataAdmissao, formData.dtInicio) >= 0) {\r\n      erros.push('A Data Inicial não pode ser anterior à Data de Admissão.');\r\n    }\r\n\r\n    for (let index = 0; index < parentData.tomadoresServico.length; index++) {\r\n      const tomador = parentData.tomadoresServico[index];\r\n      if (!props.selectedItem || props.selectedItem.rowIndex !== index || props.selectedItem.id) {\r\n        if (isEmpty(tomador.dtFim)) {\r\n          erros.push('Existe um Tomador de Serviço em aberto, preencha sua Data Fim antes de inserir um novo Registro.');\r\n          break;\r\n        }\r\n\r\n        const compareA = compare(formData.dtInicio, tomador.dtInicio) >= 0 && compare(formData.dtInicio, tomador.dtFim) <= 0;\r\n        const compareB = compare(formData.dtFim, tomador.dtInicio) >= 0 && compare(formData.dtFim, tomador.dtFim) <= 0;\r\n\r\n        if (compareA || compareB) {\r\n          erros.push('Já existe Tomador de Serviço cadastrado pertencente ao período de início e fim informado');\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <Row>\r\n        <Col>\r\n          <TomadorServicoIS\r\n            id=\"tomadorServico\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            label=\"Tomador Serviço\"\r\n            isPrependLabel={true}\r\n            disabled={tomadorServicoDisabled}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"dtInicio\"\r\n            label=\"Data Inicial\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            isPrependLabel={true}\r\n            type={InputType.DATE}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <InputGroupInline id=\"dtFim\" label=\"Data Final\" formProps={formProps} isPrependLabel={true} type={InputType.DATE} />\r\n        </Col>\r\n      </Row>\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default VinculoTomadorServicoDetailEditView;\r\n","import React, { FC, useEffect, useRef } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, Row } from 'reactstrap';\r\nimport {\r\n  DefaultSortProps,\r\n  DetailManagerForm,\r\n  DetailManagerFormProps,\r\n  EditForm,\r\n  EditFormRefProps,\r\n  EditViewProps,\r\n  getSelectedItem,\r\n  OrderType,\r\n  ProcessBar,\r\n  WindowComponent,\r\n  Wizard,\r\n  WizardActionFinishProps,\r\n  WizardPage,\r\n} from 'summer';\r\nimport { CLASS_NAME, Vinculo } from '../../../../models/dtos/mfp/vinculo';\r\nimport { loadVinculo, registrarListasVinculo } from '../../../../utilities/vinculo.util';\r\nimport VinculoIS from '../../../components/mfp/vinculoIS/VinculoIS';\r\nimport VinculoTomadorServicoDetailEditView from './VinculoTomadorServicoDetailEditView';\r\n\r\ninterface VinculoTomadorServicoEditViewProps extends EditViewProps<Vinculo> {\r\n  onDockSubmit?: (data: any) => void;\r\n  openViaDock?: boolean;\r\n}\r\n\r\ninterface ScreenFields {\r\n  vinculo?: Vinculo;\r\n}\r\n\r\nconst VinculoTomadorServicoEditView: FC<VinculoTomadorServicoEditViewProps & RouteComponentProps> = props => {\r\n  const selectedItem = getSelectedItem(props);\r\n  const formProps = useForm<Vinculo & ScreenFields>({ defaultValues: { tomadoresServico: [], ...selectedItem }, mode: 'onBlur' });\r\n  const dispatch = useDispatch();\r\n\r\n  const editFormRef = useRef<EditFormRefProps>();\r\n\r\n  useEffect(\r\n    () => {\r\n      setTimeout(() => {\r\n        registrarListasVinculo(formProps, ['tomadoresServico'], ['dataAdmissao']);\r\n      }, 700);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const onPageChange = currentPageId => {\r\n    if (currentPageId === 'tomadoresServico') {\r\n      loadVinculo(formProps, dispatch);\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    formProps.setValue('vinculo', null);\r\n  };\r\n\r\n  const onCancel = () => {\r\n    editFormRef.current.close();\r\n  };\r\n\r\n  const handleSubmitViaDock = () => {\r\n    editFormRef.current.submit(false).then(res => {\r\n      editFormRef.current.close();\r\n      if (props.onDockSubmit) {\r\n        props.onDockSubmit(res);\r\n      }\r\n    });\r\n  };\r\n\r\n  const tomadorDefaultSortProps: DefaultSortProps[] = [\r\n    {\r\n      dataField: 'dtInicio',\r\n      order: OrderType.ASC,\r\n    },\r\n  ];\r\n\r\n  const tomadorFormProps: DetailManagerFormProps = {\r\n    columns: [\r\n      {\r\n        dataField: 'tomadorServico.nome',\r\n        text: 'Tomador',\r\n      },\r\n      {\r\n        dataField: 'dtInicio',\r\n        text: 'Data Inicial',\r\n      },\r\n      {\r\n        dataField: 'dtFim',\r\n        text: 'Data Final',\r\n      },\r\n    ],\r\n    detailView: VinculoTomadorServicoDetailEditView,\r\n    detailViewSize: 'large',\r\n    detailViewWikiId: 1736,\r\n    formProps,\r\n    propName: 'tomadoresServico',\r\n    title: 'Histórido de Tomadores de Serviço',\r\n    wikiId: 1736,\r\n  };\r\n\r\n  const wizardFinishProps: WizardActionFinishProps = {\r\n    confirmButton: {\r\n      label: 'Salvar',\r\n    },\r\n    onCancel: () => {\r\n      reset();\r\n      onCancel();\r\n    },\r\n    onConfirm: () => {\r\n      editFormRef.current.submit().then(reset);\r\n    },\r\n  };\r\n\r\n  const getEditView = () => (\r\n    <Row>\r\n      <Col>\r\n        <DetailManagerForm\r\n          {...props}\r\n          defaultSortDirection={OrderType.ASC}\r\n          defaultSorted={tomadorDefaultSortProps}\r\n          {...tomadorFormProps}\r\n          keyField=\"rowIndex\"\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n\r\n  return (\r\n    <WindowComponent title=\"Manutenção de Tomadores de Serviço\" wrapBody={props.openViaDock === true} wikiId={1736}>\r\n      <EditForm ref={editFormRef} formProps={formProps} editViewProps={props} dtoClassName={CLASS_NAME} externalSubmit={true}>\r\n        {props.openViaDock === true ? (\r\n          <div className=\"m-3\">\r\n            {getEditView()}\r\n            <ProcessBar handleSubmit={handleSubmitViaDock} handleClose={onCancel} btnSubmitIcon=\"save\" btnSubmitLabel=\"Salvar\" />\r\n          </div>\r\n        ) : (\r\n          <Wizard formProps={formProps} onAfterPageChange={onPageChange} finishProps={wizardFinishProps}>\r\n            <WizardPage id=\"vinculo\" title=\"Seleção do vínculo\">\r\n              <Row>\r\n                <Col>\r\n                  <VinculoIS id=\"vinculo\" formProps={{ ...formProps, validation: { required: true } }} label=\"Vinculo\" isPrependLabel={true} />\r\n                </Col>\r\n              </Row>\r\n            </WizardPage>\r\n            <WizardPage id=\"tomadoresServico\" title=\"Tomadores de Serviço\">\r\n              {getEditView()}\r\n            </WizardPage>\r\n          </Wizard>\r\n        )}\r\n      </EditForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default VinculoTomadorServicoEditView;\r\n","export const PRAZO_INDETERMINADO = { label: 'Contrato de trabalho por prazo indeterminado', value: 'PRAZO_INDETERMINADO' };\r\nexport const PRAZO_DETERMINADO_COM_CLAUSULA_DE_RESCISAO = {\r\n  label: 'Contrato de trabalho por prazo determinado com cláusula assecuratória de direito recíproco de rescisão antecipada',\r\n  value: 'PRAZO_DETERMINADO_COM_CLAUSULA_DE_RESCISAO',\r\n};\r\nexport const PRAZO_DETERMINADO_SEM_CLAUSULA_DE_RESCISAO = {\r\n  label: 'Contrato de trabalho por prazo determinado sem cláusula assecuratória de direito recíproco de rescisão antecipada',\r\n  value: 'PRAZO_DETERMINADO_SEM_CLAUSULA_DE_RESCISAO',\r\n};\r\nexport const ESTAGIO = { label: 'Contrato de Estágio', value: 'ESTAGIO' };\r\n\r\nexport const CONTRATO_TRABALHO_ENUM_VALUES = [\r\n  PRAZO_INDETERMINADO,\r\n  PRAZO_DETERMINADO_COM_CLAUSULA_DE_RESCISAO,\r\n  PRAZO_DETERMINADO_SEM_CLAUSULA_DE_RESCISAO,\r\n  ESTAGIO,\r\n];\r\n","export const NAO_EXPOSICAO_A_AGENTE_NOCIVO = { label: '1 - Não exposição a agente nocivo', value: 'NAO_EXPOSICAO_A_AGENTE_NOCIVO' };\r\nexport const EXPOSICAO_A_AGENTE_NOCIVO_15_ANOS_TRABALHO = {\r\n  label: '2 - Aposentadoria especial aos 15 anos de trabalho',\r\n  value: 'EXPOSICAO_A_AGENTE_NOCIVO_15_ANOS_TRABALHO',\r\n};\r\nexport const EXPOSICAO_A_AGENTE_NOCIVO_20_ANOS_TRABALHO = {\r\n  label: '3 - Aposentadoria especial 20 anos de trabalho',\r\n  value: 'EXPOSICAO_A_AGENTE_NOCIVO_20_ANOS_TRABALHO',\r\n};\r\nexport const EXPOSICAO_A_AGENTE_NOCIVO_25_ANOS_TRABALHO = {\r\n  label: '4 - Aposentadoria especial 25 anos de trabalho',\r\n  value: 'EXPOSICAO_A_AGENTE_NOCIVO_25_ANOS_TRABALHO',\r\n};\r\nexport const NAO_EXPOSICAO_A_AGENTE_NOCIVO_MAIS_DE_UM_VINCULO = {\r\n  label: '5 - Não exposição a agente nocivo (Vários vínculos)',\r\n  value: 'NAO_EXPOSICAO_A_AGENTE_NOCIVO_MAIS_DE_UM_VINCULO',\r\n};\r\nexport const EXPOSICAO_A_AGENTE_NOCIVO_15_ANOS_TRABALHO_MAIS_DE_UM_VINCULO = {\r\n  label: '6 - Aposentadoria especial aos 15 anos de trabalho (Vários vínculos)',\r\n  value: 'EXPOSICAO_A_AGENTE_NOCIVO_15_ANOS_TRABALHO_MAIS_DE_UM_VINCULO',\r\n};\r\nexport const EXPOSICAO_A_AGENTE_NOCIVO_20_ANOS_TRABALHO_MAIS_DE_UM_VINCULO = {\r\n  label: '7 - Aposentadoria especial 20 anos de trabalho (Vários vínculos)',\r\n  value: 'EXPOSICAO_A_AGENTE_NOCIVO_20_ANOS_TRABALHO_MAIS_DE_UM_VINCULO',\r\n};\r\nexport const EXPOSICAO_A_AGENTE_NOCIVO_25_ANOS_TRABALHO_MAIS_DE_UM_VINCULO = {\r\n  label: '8 - Aposentadoria especial 25 anos de trabalho (Vários vínculos)',\r\n  value: 'EXPOSICAO_A_AGENTE_NOCIVO_25_ANOS_TRABALHO_MAIS_DE_UM_VINCULO',\r\n};\r\n\r\nexport const EXPOSICAO_AGENTE_NOCIVO_ENUM_VALUES = [\r\n  NAO_EXPOSICAO_A_AGENTE_NOCIVO,\r\n  EXPOSICAO_A_AGENTE_NOCIVO_15_ANOS_TRABALHO,\r\n  EXPOSICAO_A_AGENTE_NOCIVO_20_ANOS_TRABALHO,\r\n  EXPOSICAO_A_AGENTE_NOCIVO_25_ANOS_TRABALHO,\r\n  NAO_EXPOSICAO_A_AGENTE_NOCIVO_MAIS_DE_UM_VINCULO,\r\n  EXPOSICAO_A_AGENTE_NOCIVO_15_ANOS_TRABALHO_MAIS_DE_UM_VINCULO,\r\n  EXPOSICAO_A_AGENTE_NOCIVO_20_ANOS_TRABALHO_MAIS_DE_UM_VINCULO,\r\n  EXPOSICAO_A_AGENTE_NOCIVO_25_ANOS_TRABALHO_MAIS_DE_UM_VINCULO,\r\n];\r\n","export const ANEXO_I_II_III = { label: 'ANEXO_I_II_III', value: 'ANEXO_I_II_III' };\r\nexport const ANEXO_IV = { label: 'ANEXO_IV', value: 'ANEXO_IV' };\r\nexport const ANEXO_V = { label: 'ANEXO_V', value: 'ANEXO_V' };\r\nexport const ANEXO_VI = { label: 'ANEXO_VI', value: 'ANEXO_VI' };\r\n\r\nexport const GPS_SIMPLES_NACIONAL_ENUM_VALUES = [ANEXO_I_II_III, ANEXO_IV, ANEXO_V, ANEXO_VI];\r\n","export const NECESSIDADE_SUBTIUICAO_TRANSITORIA = {\r\n  label: '1 - Necessidade de substituição transitória de pessoal permanente',\r\n  value: 'NECESSIDADE_SUBTIUICAO_TRANSITORIA',\r\n};\r\nexport const DEMANDA_COMPLEMENTAR_SERVICO = { value: 'DEMANDA_COMPLEMENTAR_SERVICO', label: '2 - Demanda complementar de serviços' };\r\n\r\nexport const HIPOTESE_LEGAL_CONTRATACAO_TRABALHADOR_TEMPORARIO_ENUM_VALUES = [NECESSIDADE_SUBTIUICAO_TRANSITORIA, DEMANDA_COMPLEMENTAR_SERVICO];\r\n","export const OBRIGATORIO = { value: 'OBRIGATORIO', label: 'Obrigatório' };\r\nexport const NAO_OBRIGATORIO = { value: 'NAO_OBRIGATORIO', label: 'Não obrigatório' };\r\n\r\nexport const NATUREZA_ESTAGIO_ENUM_VALUES = [OBRIGATORIO, NAO_OBRIGATORIO];\r\n","export const FUNDAMENTAL = { value: 'FUNDAMENTAL', label: 'Fundamental' };\r\nexport const MEDIO = { value: 'MEDIO', label: 'Médio' };\r\nexport const FORMACAO_PROFISSIONAL = { value: 'FORMACAO_PROFISSIONAL', label: 'Formação Profissional' };\r\nexport const SUPERIOR = { value: 'SUPERIOR', label: 'Superior' };\r\nexport const ESPECIAL = { value: 'ESPECIAL', label: 'Especial' };\r\nexport const MAE_SOCIAL = { value: 'MAE_SOCIAL', label: 'Mãe Social' };\r\n\r\nexport const NIVEL_ESTAGIO_ENUM_VALUES = [FUNDAMENTAL, MEDIO, FORMACAO_PROFISSIONAL, SUPERIOR, ESPECIAL, MAE_SOCIAL];\r\n","export const LEI_8632_1993 = { label: 'Lei 8.632/1993', value: 'LEI_8632_1993' };\r\nexport const LEI_10_559_2002 = { label: 'Lei 10.559/2002', value: 'LEI_10_559_2002' };\r\nexport const LEI_10_790_2003 = { label: 'Lei 10.790/2003', value: 'LEI_10_790_2003' };\r\nexport const LEI_11_282_2006 = { label: 'Lei 11.282/2006', value: 'LEI_11_282_2006' };\r\n\r\nexport const NR_LEI_ANISTIA_ENUM_VALUES = [LEI_8632_1993, LEI_10_559_2002, LEI_10_790_2003, LEI_11_282_2006];\r\n","export const PRIMEIRO_EMPREGO = { label: '1º Emprego', value: 'PRIMEIRO_EMPREGO' };\r\nexport const REEMPREGO = { label: 'Reemprego', value: 'REEMPREGO' };\r\nexport const REINTEGRACAO = { label: 'Reintegração', value: 'REINTEGRACAO' };\r\nexport const TRANSFERENCIA = { label: 'Transferência', value: 'TRANSFERENCIA' };\r\n\r\nexport const TIPO_ADMISSAO_ENUM_VALUES = [PRIMEIRO_EMPREGO, REEMPREGO, REINTEGRACAO, TRANSFERENCIA];\r\n","export const DIAS_UTEIS = { value: 'DIAS_UTEIS', label: 'Dias Úteis' };\r\nexport const INFORMAR_NRO_DIAS = { value: 'INFORMAR_NRO_DIAS', label: 'Informar Número de Dias' };\r\nexport const QUADRO_HORARIO = { value: 'QUADRO_HORARIO', label: 'Quadro de Horário' };\r\nexport const QUADRO_HORARIO_DIAS_UTEIS = { value: 'QUADRO_HORARIO_DIAS_UTEIS', label: 'Quadro de Horário - Dias Úteis' };\r\nexport const INFORMAR_QUANTIDADE = { value: 'INFORMAR_QUANTIDADE', label: 'Informar Quantidade' };\r\n\r\nexport const TIPO_CALCULO_VALE_TRANSPORTE_ENUM_VALUES = [\r\n  DIAS_UTEIS,\r\n  INFORMAR_NRO_DIAS,\r\n  QUADRO_HORARIO,\r\n  QUADRO_HORARIO_DIAS_UTEIS,\r\n  INFORMAR_QUANTIDADE,\r\n];\r\n","export const CONTA_CORRENTE = { value: 'CONTA_CORRENTE', label: 'Conta Corrente' };\r\nexport const CONTA_POUPANCA = { value: 'CONTA_POUPANCA', label: 'Conta Poupança' };\r\n\r\nexport const TIPO_CONTA_ENUM_VALUES = [CONTA_CORRENTE, CONTA_POUPANCA];\r\n","export const LOCAL_SEM_FILIAIS = { label: '1 - Locais sem filiais', value: 'LOCAL_SEM_FILIAIS' };\r\nexport const ESTUDO_MERDADO = { label: '2 - Estudo de mercado', value: 'ESTUDO_MERDADO' };\r\nexport const CONTRATACAO_SUP_3_MESES = { label: '3 - Contratação superior a 3 meses', value: 'CONTRATACAO_SUP_3_MESES' };\r\n\r\nexport const TIPO_INCLUSAO_CONTRATO_TEMPORARIO_ENUM_VALUES = [LOCAL_SEM_FILIAIS, ESTUDO_MERDADO, CONTRATACAO_SUP_3_MESES];\r\n","export const ACORDO_COLETIVO_TRABALHO = {\r\n  label: 'A - Acordo coletivo de trabalho',\r\n  value: 'ACORDO_COLETIVO_TRABALHO',\r\n};\r\nexport const LEGISLACAO_FEDERAL_ESTADUAL_MUNICIPAL_DISTRITAL = {\r\n  label: 'B - Legislação federal, estadual, municipal ou distrital',\r\n  value: 'LEGISLACAO_FEDERAL_ESTADUAL_MUNICIPAL_DISTRITAL',\r\n};\r\nexport const CONVENCAO_COLETIVA_TRABALHO = {\r\n  label: 'C - Convenção coletiva de trabalho',\r\n  value: 'CONVENCAO_COLETIVA_TRABALHO',\r\n};\r\nexport const SENTENCA_NORMATIVA_DISSIDIO = {\r\n  label: 'D - Sentença normativa - Dissídio',\r\n  value: 'SENTENCA_NORMATIVA_DISSIDIO',\r\n};\r\nexport const CONVERSAO_LICENCA_SAUDE_ACIDENTE_TRABALHO = {\r\n  label: 'E - Conversão de Licença saúde em acidente trabalho',\r\n  value: 'CONVERSAO_LICENCA_SAUDE_ACIDENTE_TRABALHO',\r\n};\r\nexport const OUTRAS_VERBSA_DE_NATUREZA_SALARIAL_OU_NAO_SALARIAL_DEVIDAS_APOS_DESLIGAMENTO = {\r\n  label: 'F - Outras verbas de natureza salarial ou não salarial devidas após o desligamento',\r\n  value: 'OUTRAS_VERBSA_DE_NATUREZA_SALARIAL_OU_NAO_SALARIAL_DEVIDAS_APOS_DESLIGAMENTO',\r\n};\r\nexport const ANTECIPACAO_DIFERENCA_ACORDO_CONVENCAO_DISSIDIO = {\r\n  label: 'G - Antecipação de diferenças de Acordo, Convenção ou Dissídio Coletivo.',\r\n  value: 'ANTECIPACAO_DIFERENCA_ACORDO_CONVENCAO_DISSIDIO',\r\n};\r\n\r\nexport const TIPO_INSTRUMENTO_SITUACAO_ENSEJADORA_REMUNERACAO_ENUM_VALUES = [\r\n  ACORDO_COLETIVO_TRABALHO,\r\n  LEGISLACAO_FEDERAL_ESTADUAL_MUNICIPAL_DISTRITAL,\r\n  CONVENCAO_COLETIVA_TRABALHO,\r\n  SENTENCA_NORMATIVA_DISSIDIO,\r\n  CONVERSAO_LICENCA_SAUDE_ACIDENTE_TRABALHO,\r\n  OUTRAS_VERBSA_DE_NATUREZA_SALARIAL_OU_NAO_SALARIAL_DEVIDAS_APOS_DESLIGAMENTO,\r\n  ANTECIPACAO_DIFERENCA_ACORDO_CONVENCAO_DISSIDIO,\r\n];\r\n","export const SALARIO_CONTRATUAL = { label: 'Salário Contratual', value: 'SALARIO_CONTRATUAL' };\r\nexport const SALARIO_MINIMO = { label: 'Salário Mínimo', value: 'SALARIO_MINIMO' };\r\nexport const RENDIMENTOS = { label: 'Rendimentos', value: 'RENDIMENTOS' };\r\nexport const SALARIO_LIQUIDO = { label: 'Salário Líquido', value: 'SALARIO_LIQUIDO' };\r\nexport const SALARIO_LIQUIDO_COM_ADIANTAMENTO = { label: 'Salário Líquido com Adiantamento', value: 'SALARIO_LIQUIDO_COM_ADIANTAMENTO' };\r\n\r\nexport const TIPO_PENSAO_ENUM_VALUES = [SALARIO_CONTRATUAL, SALARIO_MINIMO, RENDIMENTOS, SALARIO_LIQUIDO, SALARIO_LIQUIDO_COM_ADIANTAMENTO];\r\n","export const INTERMITENTE = { label: 'Submetidos a Horário de Trabalho (Cap. II da CLT) e / ou  Intermitente ', value: 'INTERMITENTE' };\r\nexport const ATIVIDADE_EXTERNA = { label: 'Atividade Externa especificada no Inciso I do Art. 62 da CLT', value: 'ATIVIDADE_EXTERNA' };\r\nexport const FUNCOES_ESPECIFICADAS = { label: 'Funções especificadas no Inciso II do Art. 62 da CLT', value: 'FUNCOES_ESPECIFICADAS' };\r\nexport const TELETRABALHO = { label: 'Teletrabalho, previsto no Inciso III do Art. 62 da CLT', value: 'TELETRABALHO' };\r\n\r\nexport const TIPO_REGIME_JORNADA_TRABALHO_ENUM_VALUES = [INTERMITENTE, ATIVIDADE_EXTERNA, FUNCOES_ESPECIFICADAS, TELETRABALHO];\r\n","export const DECISAO_JUDICIAL = { label: '1 - Reintegração por Decisão Judicial', value: 'DECISAO_JUDICIAL' };\r\nexport const ANISTIAL_LEGAL = { label: '2 - Reintegração por Anistia Legal', value: 'ANISTIAL_LEGAL' };\r\nexport const OUTROS = { label: '9 - Outros', value: 'OUTROS' };\r\n\r\nexport const TIPO_REINTEGRACAO_ENUM_VALUES = [DECISAO_JUDICIAL, ANISTIAL_LEGAL, OUTROS];\r\n","export const CARGA = { label: 'Carga', value: 'CARGA' };\r\nexport const PASSAGEIROS = { label: 'Passageiros', value: 'PASSAGEIROS' };\r\n\r\nexport const TIPO_TRANSPORTADOR_ENUM_VALUES = [CARGA, PASSAGEIROS];\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mfp/instituicaoEnsino';\r\n\r\nconst InstituicaoEnsinoIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      type={InputType.INPUT_SEARCH}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'InstituicaoEnsinoSearchView',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default InstituicaoEnsinoIS;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mfp/responsavelMenorAprendiz';\r\n\r\nconst ResponsavelMenorAprendizIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      type={InputType.INPUT_SEARCH}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome do Responsável',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'ResponsavelMenorAprendizSearchView',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ResponsavelMenorAprendizIS;\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, Row } from 'reactstrap';\r\nimport {\r\n  compare,\r\n  currentDate,\r\n  DetailEditForm,\r\n  DetailEditViewFormProps,\r\n  formatDate,\r\n  InputGroupInline,\r\n  InputType,\r\n  isEmpty,\r\n  parseDateToRef,\r\n  parseLastDay,\r\n} from 'summer';\r\nimport { VinculoCargo } from '../../../../models/dtos/mfp/vinculoCargo';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport { getItemAtual } from '../../../../utilities/vinculo.util';\r\nimport CargoIS from '../../../components/mfp/cargo/CargoIS';\r\n\r\nconst VinculoCargoEditView: FC<DetailEditViewFormProps<VinculoCargo>> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const formProps = useForm<VinculoCargo>({ defaultValues: props.selectedItem || {}, mode: 'onBlur' });\r\n\r\n  const dtAtual = currentDate();\r\n  const refAtual = parseDateToRef(dtAtual);\r\n\r\n  useEffect(\r\n    () => {\r\n      setTimeout(() => {\r\n        formProps.register({ name: 'nroOrdem' });\r\n\r\n        const values = formProps.getValues();\r\n\r\n        if (isEmpty(values.nroOrdem)) {\r\n          const parentValues = props.parentFormProps.getValues();\r\n          const refGlobal = globalReducer.globalParameter.empresaMFP.referencia;\r\n\r\n          formProps.setValue('dataAlteracao', formatDate(refAtual === refGlobal ? dtAtual : parseLastDay(refGlobal)));\r\n\r\n          if (parentValues.cargos.length > 0) {\r\n            formProps.setValue('nroOrdem', getItemAtual(parentValues.cargos).nroOrdem + 1);\r\n          } else {\r\n            formProps.setValue('nroOrdem', 1);\r\n          }\r\n        }\r\n      }, 500);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const validateExtras = (currentItem, _, parentData) => {\r\n    const erros = [];\r\n\r\n    if (compare(currentItem.dataAlteracao, parentData.dataAdmissao) < 0) {\r\n      erros.push('A Data de alteração não pode ser inferior à Data de Admissão');\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <Row>\r\n        <Col>\r\n          <CargoIS id=\"cargo\" formProps={{ ...formProps, validation: { required: true } }} isPrependLabel={true} label=\"Cargo\" />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"dataAlteracao\"\r\n            label=\"Data de Alteração\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            isPrependLabel={true}\r\n            type={InputType.DATE}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"motivo\"\r\n            label=\"Motivo\"\r\n            formProps={{ ...formProps, validation: { required: true, maxLength: 1000 } }}\r\n            isPrependLabel={true}\r\n            type={InputType.TEXT_AREA}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default VinculoCargoEditView;\r\n","export const SIM = { label: 'Sim', value: 'SIM' };\r\nexport const NAO = { label: 'Não', value: 'NAO' };\r\n\r\nexport const SIM_NAO_ENUM_VALUE = [SIM, NAO];\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { Button, Card, CardBody, CardHeader, Col, Input, InputGroup, InputGroupAddon, ListGroup, ListGroupItem, Row, Table } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertType,\r\n  Box,\r\n  decimalFormatter,\r\n  DetailEditForm,\r\n  DetailEditViewFormProps,\r\n  InputGroupInline,\r\n  InputType,\r\n  isEmpty,\r\n  onlyNumber,\r\n  parseLastDay,\r\n  parseRefToDate,\r\n  Tab,\r\n  TabGroup,\r\n  toDate,\r\n} from 'summer';\r\nimport { DiferencialAcordoConvencaoDissidio } from '../../../../models/dtos/mfp/diferencialAcordoConvencaoDissidio';\r\nimport { DiferencialAcordoConvencaoDissidioMensal } from '../../../../models/dtos/mfp/diferencialAcordoConvencaoDissidioMensal';\r\nimport { Vinculo } from '../../../../models/dtos/mfp/vinculo';\r\nimport { SIM_NAO_ENUM_VALUE } from '../../../../models/enumerated/mfp/simNaoEnum';\r\nimport {\r\n  OUTRAS_VERBSA_DE_NATUREZA_SALARIAL_OU_NAO_SALARIAL_DEVIDAS_APOS_DESLIGAMENTO,\r\n  TIPO_INSTRUMENTO_SITUACAO_ENSEJADORA_REMUNERACAO_ENUM_VALUES,\r\n} from '../../../../models/enumerated/mfp/tipoInstrumentoSituacaoEnsejadoraRemuneracaoEnum';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport { getIntervaloReferencia, getMaxRef, getMinRef, getNextRef, promisedAlert } from '../../../../utilities/vinculo.util';\r\nimport EventoIS from '../../../components/mfp/eventoIS/EventoIS';\r\n\r\ninterface ScreenFields {\r\n  filtroAno?: string;\r\n  referenciaInicialPagamento?: string;\r\n  referenciaFinalPagamento?: string;\r\n  valorPagamento?: string;\r\n}\r\n\r\nconst VinculoDiferencialAcordoEditView: FC<DetailEditViewFormProps<DiferencialAcordoConvencaoDissidio>> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const formProps = useForm<DiferencialAcordoConvencaoDissidio & ScreenFields>({\r\n    defaultValues: { pagamentos: [], ...props.selectedItem },\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const [tableData, setTableData] = useState<DiferencialAcordoConvencaoDissidioMensal[]>([]);\r\n  const [selectedIndex, setSelectedIndex] = useState(null);\r\n\r\n  useEffect(\r\n    () => {\r\n      const ref = globalReducer.globalParameter.empresaMFP.referencia;\r\n      setTimeout(() => {\r\n        formProps.register({ name: 'pagamentos' });\r\n        formProps.setValue([\r\n          { filtroAno: ref.substr(0, 4) },\r\n          { referenciaInicialPagamento: ref },\r\n          { referenciaFinalPagamento: ref },\r\n          { competencia: props.selectedItem ? props.selectedItem.competencia || ref : ref },\r\n          { valorPagamento: 0 },\r\n        ]);\r\n        filtrarAno();\r\n      }, 500);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const filtrarAno = () => {\r\n    const values = formProps.getValues();\r\n    const pagamentos = values.pagamentos.filter(item => item.referencia.substr(0, 4) === values.filtroAno);\r\n    pagamentos.sort((a, b) => a.referencia.localeCompare(b.referencia));\r\n    setTableData(pagamentos);\r\n  };\r\n\r\n  const referenciaInicialChange = () => formProps.setValue('referenciaFinalPagamento', formProps.getValues().referenciaInicialPagamento);\r\n\r\n  const lancarPagamentos = () => {\r\n    const erros = [];\r\n    const values = formProps.getValues();\r\n\r\n    const refInicial = values.referenciaInicialPagamento;\r\n    const refFinal = values.referenciaFinalPagamento;\r\n\r\n    if (isEmpty(refInicial)) {\r\n      erros.push('Referência Inicial - Campo não pode estar em branco.');\r\n    } else {\r\n      const mesRefInicial = parseInt(refInicial.substr(4), 10);\r\n      if (mesRefInicial > 12 || mesRefInicial < 1) {\r\n        erros.push('Referência Inicial - Mês inválido.');\r\n      }\r\n    }\r\n\r\n    if (isEmpty(refFinal)) {\r\n      erros.push('Referência Final - Campo não pode estar em branco.');\r\n    } else {\r\n      const mesRefFinal = parseInt(refFinal.substr(4), 10);\r\n      if (mesRefFinal > 12 || mesRefFinal < 1) {\r\n        erros.push('Referência Final - Mês inválido.');\r\n      }\r\n    }\r\n\r\n    if (isEmpty(values.valorPagamento) || parseFloat(values.valorPagamento) <= 0) {\r\n      erros.push('É necessário informar o valor do pagamento.');\r\n    }\r\n\r\n    if (!isEmpty(refInicial) && !isEmpty(refFinal) && parseInt(refInicial, 10) > parseInt(refFinal, 10)) {\r\n      erros.push('Referência final não pode ser menor que a inicial.');\r\n    }\r\n\r\n    if (erros.length > 0) {\r\n      alertManager.emit(ACTION_EVENTS.SHOW, {\r\n        message: (\r\n          <>\r\n            <p>Existem informações inválidas.</p>\r\n            <ListGroup variant=\"flush\">\r\n              {erros.map(item => (\r\n                <ListGroupItem key={item}>{item}</ListGroupItem>\r\n              ))}\r\n            </ListGroup>\r\n          </>\r\n        ),\r\n        type: AlertType.ERROR,\r\n      });\r\n    } else {\r\n      const referencias = getIntervaloReferencia(refInicial, refFinal);\r\n      const valor = parseFloat(values.valorPagamento);\r\n      const pagamentos = values.pagamentos.slice();\r\n\r\n      referencias.forEach(referencia => {\r\n        const existe = pagamentos.find((item, index) => {\r\n          let result = false;\r\n\r\n          if (item.referencia === referencia) {\r\n            pagamentos[index].valor = valor;\r\n            result = true;\r\n          }\r\n\r\n          return result;\r\n        });\r\n\r\n        if (existe === undefined) {\r\n          pagamentos.push({ referencia, valor });\r\n        }\r\n      });\r\n\r\n      const nextRef = getNextRef(getMaxRef(pagamentos));\r\n\r\n      formProps.setValue([\r\n        { pagamentos },\r\n        { filtroAno: refFinal.substr(0, 4) },\r\n        { valorPagamento: 0 },\r\n        { referenciaInicialPagamento: nextRef },\r\n        { referenciaFinalPagamento: nextRef },\r\n      ]);\r\n      setSelectedIndex(null);\r\n      filtrarAno();\r\n    }\r\n  };\r\n\r\n  const editarPagamentos = () => {\r\n    if (selectedIndex === null) {\r\n      alertManager.emit(ACTION_EVENTS.SHOW, {\r\n        message: 'Selecione o item que deseja editar',\r\n        type: AlertType.INFORMATION,\r\n      });\r\n    } else {\r\n      const item = tableData[selectedIndex];\r\n      formProps.setValue([\r\n        { referenciaInicialPagamento: item.referencia },\r\n        { referenciaFinalPagamento: item.referencia },\r\n        { valorPagamento: item.valor },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const removerPagamentos = () => {\r\n    if (selectedIndex === null) {\r\n      alertManager.emit(ACTION_EVENTS.SHOW, {\r\n        message: 'Selecione o item que deseja remover',\r\n        type: AlertType.INFORMATION,\r\n      });\r\n    } else {\r\n      const item = tableData[selectedIndex];\r\n      promisedAlert('Deseja mesmo remover este item?').then(() => {\r\n        const values = formProps.getValues();\r\n        const pagamentos = values.pagamentos.filter(pagamento => pagamento.referencia !== item.referencia);\r\n        const nextRef = getNextRef(getMaxRef(pagamentos));\r\n        formProps.setValue([{ pagamentos }, { referenciaInicialPagamento: nextRef }, { referenciaFinalPagamento: nextRef }]);\r\n        setSelectedIndex(null);\r\n        filtrarAno();\r\n      });\r\n    }\r\n  };\r\n\r\n  const validateExtras = (formData, _, parentData) => {\r\n    const erros = [];\r\n\r\n    if (formData.pagamentos.length === 0) {\r\n      erros.push('Pelo menos um pagamento deve ser informado');\r\n    }\r\n\r\n    if (\r\n      !isEmpty(formData.tipoInstrumentoSituacaoEnsejadoraRemuneracao) &&\r\n      formData.tipoInstrumentoSituacaoEnsejadoraRemuneracao !== OUTRAS_VERBSA_DE_NATUREZA_SALARIAL_OU_NAO_SALARIAL_DEVIDAS_APOS_DESLIGAMENTO.value &&\r\n      isEmpty(formData.dataAssinaturaAcordo)\r\n    ) {\r\n      erros.push('Data da Assinatura - Campo não pode estar em branco para o Tipo ou Situação selecionada.');\r\n    }\r\n\r\n    if (existeMesmaCompetenciaEEvento(formData)) {\r\n      erros.push('Esta competência já foi registrada');\r\n    }\r\n\r\n    if (!isEmpty(formData.competencia) && !isEmpty(formData.dataAssinaturaAcordo)) {\r\n      const inicioCompetencia = parseRefToDate(formData.competencia, 1);\r\n      const finalCompetencia = parseLastDay(formData.competencia);\r\n      const dataAssinaturaAcordo = toDate(formData.dataAssinaturaAcordo);\r\n      if (dataAssinaturaAcordo < inicioCompetencia || dataAssinaturaAcordo > finalCompetencia) {\r\n        erros.push('A Data de Assinatura precisa estar dentro do período da Competência');\r\n      }\r\n    }\r\n\r\n    if (formData.pagamentos.length > 0 && !isEmpty(formData.dataInicialEfeito)) {\r\n      const minRef = getMinRef(formData.pagamentos);\r\n      const dataEfeito = toDate(formData.dataInicialEfeito);\r\n      const minDataEfeito = parseRefToDate(minRef, 1);\r\n      if (dataEfeito < minDataEfeito) {\r\n        erros.push('A Data do Efeito não pode ser inferior a primeira referência de pagamento');\r\n      }\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  const existeMesmaCompetenciaEEvento = formData => {\r\n    const vinculo: Vinculo = props.parentFormProps.getValues();\r\n    const diferencial = vinculo.diferenciaisAcordoConvencaoDissidio.find(item => item.competencia === formData.competencia);\r\n    return diferencial === undefined || diferencial.id !== props.selectedItem.id;\r\n  };\r\n\r\n  const selectIndex = index => {\r\n    return () => {\r\n      setSelectedIndex(index);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <Row>\r\n        <Col>\r\n          <EventoIS id=\"evento\" formProps={{ ...formProps, validation: { required: true } }} label=\"Evento\" isPrependLabel={true} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <TabGroup formProps={formProps}>\r\n            <Tab title=\"Dados\">\r\n              <Row>\r\n                <Col>\r\n                  <InputGroupInline\r\n                    formProps={formProps}\r\n                    isPrependLabel={true}\r\n                    id=\"competencia\"\r\n                    label=\"Competência\"\r\n                    type={InputType.REFERENCE}\r\n                    tooltipProps={{\r\n                      message:\r\n                        'Competência em que é devida a obrigação de pagar os efeitos remuneratórios de lei, acordo coletivo, ' +\r\n                        'convenção coletiva ou sentença normativa',\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <InputGroupInline\r\n                    formProps={formProps}\r\n                    isPrependLabel={true}\r\n                    id=\"dataAssinaturaAcordo\"\r\n                    label=\"Data da Assinatura\"\r\n                    type={InputType.DATE}\r\n                    tooltipProps={{\r\n                      message:\r\n                        'Data da Assinatura do acordo, convenção coletiva, sentença normativa ou da conversão da ' +\r\n                        'licença saúde em acidente de trabalho',\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <InputGroupInline\r\n                    id=\"tipoInstrumentoSituacaoEnsejadoraRemuneracao\"\r\n                    label=\"Tipo ou Situação\"\r\n                    formProps={{ ...formProps, validation: { required: true } }}\r\n                    isPrependLabel={true}\r\n                    placeholder=\"Selecione o Tipo ou Situação\"\r\n                    inputDropDownProps={{ optionsProvider: TIPO_INSTRUMENTO_SITUACAO_ENSEJADORA_REMUNERACAO_ENUM_VALUES }}\r\n                    type={InputType.DROP_DOWN}\r\n                    tooltipProps={{\r\n                      message: 'Tipo do instrumento ou situação ensejadora da remuneração relativa a períodos de apuração anteriores',\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <InputGroupInline\r\n                    formProps={formProps}\r\n                    isPrependLabel={true}\r\n                    id=\"dataInicialEfeito\"\r\n                    label=\"Data do Efeito\"\r\n                    type={InputType.DATE}\r\n                    tooltipProps={{\r\n                      message: 'Data a partir da qual o instrumento ou legislação mencionada em Tipo/Situação passa a produzir efeitos',\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <InputGroupInline\r\n                    id=\"indicadorRemuneracaoRelativaNaturezaSalarial\"\r\n                    label=\"Remuneração Devida pela Empresa Sucessora?\"\r\n                    formProps={{ ...formProps, validation: { required: true } }}\r\n                    isPrependLabel={true}\r\n                    inputDropDownProps={{ optionsProvider: SIM_NAO_ENUM_VALUE }}\r\n                    placeholder=\"Selecione\"\r\n                    type={InputType.DROP_DOWN}\r\n                    tooltipProps={{\r\n                      message:\r\n                        'Indica se as remunerações são relativas a verbas de natureza salarial ou não salarial devidas pela ' +\r\n                        'empresa sucessora a empregados desligados ainda na sucedida',\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <InputGroupInline\r\n                    formProps={{ ...formProps, validation: { required: true, maxLength: 255 } }}\r\n                    isPrependLabel={true}\r\n                    id=\"descricao\"\r\n                    label=\"Descrição\"\r\n                    type={InputType.TEXT_AREA}\r\n                    tooltipProps={{\r\n                      message: 'Descrição do instrumento ou situação que originou o pagamento das verbas relativas a períodos anteriores',\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Tab>\r\n            <Tab title=\"Pagamentos\">\r\n              <Row>\r\n                <Col>\r\n                  <Box title=\"Lançamento\">\r\n                    <Row>\r\n                      <Col>\r\n                        <InputGroupInline\r\n                          formProps={{ ...formProps, validation: { required: true } }}\r\n                          isPrependLabel={true}\r\n                          id=\"referenciaInicialPagamento\"\r\n                          label=\"Referência Inicial\"\r\n                          type={InputType.REFERENCE}\r\n                          onBlur={referenciaInicialChange}\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <InputGroupInline\r\n                          formProps={{ ...formProps, validation: { required: true } }}\r\n                          isPrependLabel={true}\r\n                          id=\"referenciaFinalPagamento\"\r\n                          label=\"Referência Final\"\r\n                          type={InputType.REFERENCE}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <InputGroupInline\r\n                          formProps={{ ...formProps, validation: onlyNumber(0, 100) }}\r\n                          isPrependLabel={true}\r\n                          id=\"valorPagamento\"\r\n                          label=\"Valor\"\r\n                        />\r\n                      </Col>\r\n                      <Col md={4} className=\"text-right\">\r\n                        <Button color=\"success\" size=\"sm\" style={{ marginTop: 10 }} onClick={lancarPagamentos}>\r\n                          <span className=\"btn-wrapper--icon\">\r\n                            <FontAwesomeIcon icon={['fas', 'plus']} />\r\n                          </span>\r\n                          <span className=\"btn-wrapper--label\">Lançar</span>\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Box>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Card className=\"box-card\">\r\n                    <CardHeader className=\"font-weight-bold bg-light\">\r\n                      <Row>\r\n                        <Col style={{ marginTop: 5 }}>Pagamentos cadastrados</Col>\r\n                        <Col>\r\n                          <InputGroup size=\"sm\">\r\n                            <InputGroupAddon addonType=\"prepend\">Filtrar Ano</InputGroupAddon>\r\n                            <Input type=\"number\" bsSize=\"sm\" innerRef={formProps.register} name=\"filtroAno\" id=\"filtroAno\" onChange={filtrarAno} />\r\n                          </InputGroup>\r\n                        </Col>\r\n                        <Col className=\"text-right\">\r\n                          <Button id=\"editDiferencial\" size=\"sm\" color=\"link\" className=\"text-warning\" onClick={editarPagamentos}>\r\n                            <FontAwesomeIcon icon=\"pen\" />\r\n                          </Button>\r\n                          <Button id=\"removeDiferencial\" size=\"sm\" color=\"link\" className=\"text-danger\" onClick={removerPagamentos}>\r\n                            <FontAwesomeIcon icon=\"trash\" />\r\n                          </Button>\r\n                        </Col>\r\n                      </Row>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <Table size=\"sm\" striped={true} bordered={true} hover={true} responsive={true}>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>&nbsp;</th>\r\n                            <th>Referência</th>\r\n                            <th>Valor</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {tableData.map((item, index) => (\r\n                            <tr key={index} onClick={selectIndex(index)} onDoubleClick={editarPagamentos}>\r\n                              <td style={{ width: 30 }}>\r\n                                <Input\r\n                                  type=\"radio\"\r\n                                  name=\"itemSelecionadoValoresDiferencial\"\r\n                                  value={index}\r\n                                  checked={selectedIndex === index}\r\n                                  readOnly={true}\r\n                                  style={{ marginLeft: 3, marginTop: -6 }}\r\n                                />\r\n                              </td>\r\n                              <td style={{ width: 110 }} className=\"text-center\">\r\n                                {item.referencia}\r\n                              </td>\r\n                              <td>R$ {decimalFormatter(item.valor, null)}</td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </Table>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            </Tab>\r\n          </TabGroup>\r\n        </Col>\r\n      </Row>\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default VinculoDiferencialAcordoEditView;\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { Card } from 'reactstrap';\r\nimport { dockActions, ProcessBar, SearchViewProps, SelectModeEnum } from 'summer';\r\nimport { Vinculo } from '../../../../models/dtos/mfp/vinculo';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mfp/vinculoExample';\r\nimport VinculoSearchView from './VinculoSearchView';\r\n\r\ninterface VinculoInternalSearchViewProps {\r\n  onSelect: (data: any) => void;\r\n  onCancel?: () => void;\r\n}\r\n\r\nconst VinculoInternalSearchView: FC<VinculoInternalSearchViewProps> = props => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [currentSelected, setCurrentSelected] = useState(null);\r\n\r\n  useEffect(\r\n    () => {\r\n      // Remove a Dock para que ela não fique em cima do conteúdo\r\n      dispatch(dockActions.destroyDock());\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const searchViewProps: SearchViewProps<Vinculo> = {\r\n    hiddenHeader: true,\r\n    searchDataGridProps: {\r\n      columns: [\r\n        {\r\n          dataField: 'matricula',\r\n          text: 'Matrícula',\r\n        },\r\n        {\r\n          dataField: 'nome',\r\n          text: 'Trabalhador',\r\n        },\r\n        {\r\n          dataField: 'categoria',\r\n          text: 'Categoria',\r\n        },\r\n        {\r\n          dataField: 'cpf',\r\n          text: 'CPF',\r\n        },\r\n      ],\r\n      dtoClassName: CLASS_NAME,\r\n      extraData: { isModal: true, size: 'xl' },\r\n      selectRow: {\r\n        clickToSelect: true,\r\n        hideSelectAll: true,\r\n        mode: SelectModeEnum.RADIO,\r\n        onSelect: row => {\r\n          setCurrentSelected(row);\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.goBack();\r\n    if (props.onCancel) {\r\n      props.onCancel();\r\n    }\r\n  };\r\n\r\n  const onConfirm = () => {\r\n    props.onSelect(currentSelected);\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <VinculoSearchView {...searchViewProps} />\r\n      <div className=\"float-right mr-4 mb-4\">\r\n        <ProcessBar handleClose={onCancel} handleSubmit={onConfirm} btnSubmitIcon=\"check\" btnCloseLabel=\"Cancel\" btnSubmitLabel=\"Confirmar\" />\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default VinculoInternalSearchView;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mfp/planoSaude';\r\n\r\nconst PlanoSaudeIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      type={InputType.INPUT_SEARCH}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'registroANS',\r\n            text: 'Registro ANS',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'PlanoSaudeSearchView',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PlanoSaudeIS;\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline, InputType, isEmpty, onlyNumber } from 'summer';\r\nimport { VinculoPlanoSaudeReembolso } from '../../../../models/dtos/mfp/vinculoPlanoSaudeReembolso';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\nconst VinculoPlanoSaudeReembolsoEditView: FC<DetailEditViewFormProps<VinculoPlanoSaudeReembolso>> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const formProps = useForm<VinculoPlanoSaudeReembolso>({ defaultValues: props.selectedItem || {}, mode: 'onBlur' });\r\n\r\n  useEffect(\r\n    () => {\r\n      setTimeout(() => {\r\n        formProps.setValue('ano', parseInt(globalReducer.globalParameter.empresaMFP.referencia.substr(0, 4), 10));\r\n      }, 700);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const validateExtras = formData => {\r\n    const erros = [];\r\n\r\n    if (isEmpty(formData.cpf) && isEmpty(formData.cnpj)) {\r\n      erros.push('Campo CPF ou CNPJ deve ser preenchido');\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"razaoSocial\"\r\n            label=\"Razão Social\"\r\n            formProps={{ ...formProps, validation: { required: true, maxLength: 250 } }}\r\n            isPrependLabel={true}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline id=\"cnpj\" label=\"CNPJ\" formProps={formProps} isPrependLabel={true} type={InputType.CNPJ} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline id=\"cpf\" label=\"CPF\" formProps={formProps} isPrependLabel={true} type={InputType.CPF} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"ano\"\r\n            label=\"ANO\"\r\n            formProps={{ ...formProps, validation: { ...onlyNumber(0, 4), min: 1930, max: 3000 } }}\r\n            isPrependLabel={true}\r\n            type={InputType.NUMBER}\r\n            tooltipProps={{ message: 'Ano Calendário' }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"valorAnoAtual\"\r\n            label=\"Valor Ano Atual\"\r\n            formProps={{ ...formProps, validation: { required: true, ...onlyNumber(0, 100) } }}\r\n            isPrependLabel={true}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"valorAnoAnteriores\"\r\n            label=\"Valor Anos Anteriores\"\r\n            formProps={{ ...formProps, validation: { required: true, ...onlyNumber(0, 100) } }}\r\n            isPrependLabel={true}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default VinculoPlanoSaudeReembolsoEditView;\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Col, Row } from 'reactstrap';\r\nimport {\r\n  compare,\r\n  currentDate,\r\n  DefaultSortProps,\r\n  DetailEditForm,\r\n  DetailEditViewFormProps,\r\n  DetailManagerForm,\r\n  DetailManagerFormProps,\r\n  formatDate,\r\n  InputGroupInline,\r\n  InputType,\r\n  isEmpty,\r\n  OrderType,\r\n} from 'summer';\r\nimport { VinculoPlanoSaude } from '../../../../models/dtos/mfp/vinculoPlanoSaude';\r\nimport { getItemAtual } from '../../../../utilities/vinculo.util';\r\nimport EventoIS from '../../../components/mfp/eventoIS/EventoIS';\r\nimport PlanoSaudeIS from '../../../components/mfp/planoSaudeIS/PlanoSaudeIS';\r\nimport VinculoPlanoSaudeReembolsoEditView from './VinculoPlanoSaudeReembolsoEditView';\r\n\r\nconst VinculoPlanoSaudeEditView: FC<DetailEditViewFormProps<VinculoPlanoSaude>> = props => {\r\n  const formProps = useForm<VinculoPlanoSaude>({ defaultValues: props.selectedItem || {}, mode: 'onBlur' });\r\n\r\n  useEffect(\r\n    () => {\r\n      setTimeout(() => {\r\n        const vinculo = props.parentFormProps.getValues();\r\n\r\n        formProps.setValue('dataAlteracao', formatDate(currentDate()));\r\n        formProps.setValue('dtInicio', vinculo.dataAdmissao);\r\n\r\n        if (vinculo.planos.length > 0) {\r\n          formProps.setValue('nroOrdem', getItemAtual(vinculo.planos).nroOrdem + 1);\r\n        } else {\r\n          formProps.setValue('nroOrdem', 1);\r\n        }\r\n      }, 700);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const reembolsoDefaultSortProps: DefaultSortProps[] = [\r\n    {\r\n      dataField: 'ano',\r\n      order: OrderType.ASC,\r\n    },\r\n  ];\r\n\r\n  const reembolsoFormProps: DetailManagerFormProps = {\r\n    columns: [\r\n      {\r\n        dataField: 'razaoSocial',\r\n        text: 'Razão Social',\r\n      },\r\n      {\r\n        dataField: 'valorAnoAtual',\r\n        text: 'Valor Atual',\r\n      },\r\n      {\r\n        dataField: 'valorAnoAnteriores',\r\n        text: 'Valor Anterior',\r\n      },\r\n    ],\r\n    detailView: VinculoPlanoSaudeReembolsoEditView,\r\n    formProps,\r\n    propName: 'reembolsos',\r\n    title: 'Reembolsos de Planos de Saúde',\r\n  };\r\n\r\n  const validateExtras = (formData, _, parentData) => {\r\n    const erros = [];\r\n\r\n    if (!isEmpty(formData.dtFim) && compare(formData.dtInicio, formData.dtFim) === 1) {\r\n      erros.push('A Data Final deve estar em branco ou posterior à Data Inicial.');\r\n    }\r\n\r\n    if (compare(parentData.dataAdmissao, formData.dtInicio) === 1) {\r\n      erros.push('A Data Inicial não pode ser anterior à Data de Admissão.');\r\n    }\r\n\r\n    const itemRepetido = parentData.planos.find(item => {\r\n      let result = false;\r\n      let prosseguir = true;\r\n\r\n      if (!isEmpty(item.id) && !isEmpty(formData.id) && item.id === formData.id) {\r\n        prosseguir = false;\r\n      }\r\n\r\n      if (prosseguir) {\r\n        const mesmoEvento = formData.evento && item.evento && item.evento.id === formData.evento.id;\r\n        const dtFimNoIntervalo = isEmpty(formData.dtFim) || compare(item.dtInicio, formData.dtFim) <= 0;\r\n        const dtInicioNoIntervalo = isEmpty(item.dtFim) || compare(item.dtFim, formData.dtInicio) >= 0;\r\n        result = mesmoEvento && dtFimNoIntervalo && dtInicioNoIntervalo;\r\n      }\r\n\r\n      return result;\r\n    });\r\n\r\n    if (itemRepetido !== undefined) {\r\n      erros.push(\r\n        'Já existe Plano de saúde configurado para o evento ' + formData.evento.label + ' pertencente ao período de início e fim informado.'\r\n      );\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <Row>\r\n        <Col>\r\n          <PlanoSaudeIS id=\"planoSaude\" formProps={{ ...formProps, validation: { required: true } }} label=\"Plano de Saúde\" isPrependLabel={true} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <EventoIS id=\"evento\" formProps={{ ...formProps, validation: { required: true } }} label=\"Evento\" isPrependLabel={true} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"dtInicio\"\r\n            label=\"Data Inicial\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            isPrependLabel={true}\r\n            type={InputType.DATE}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <InputGroupInline id=\"dtFim\" label=\"Data Final\" formProps={formProps} isPrependLabel={true} type={InputType.DATE} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <DetailManagerForm\r\n            {...props}\r\n            defaultSortDirection={OrderType.ASC}\r\n            defaultSorted={reembolsoDefaultSortProps}\r\n            {...reembolsoFormProps}\r\n            keyField=\"rowIndex\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default VinculoPlanoSaudeEditView;\r\n","export const RTRT = {\r\n  label: 'Rendimento Tributável',\r\n  value: 'RTRT',\r\n};\r\nexport const RTPO = {\r\n  label: 'Dedução - Previdência Oficial',\r\n  value: 'RTPO',\r\n};\r\nexport const RTPP = {\r\n  label: 'Dedução - Previdência Privada',\r\n  value: 'RTPP',\r\n};\r\nexport const RTPA = {\r\n  label: 'Dedução - Pensão Alimentícia',\r\n  value: 'RTPA',\r\n};\r\nexport const RTIRF = {\r\n  label: 'Imposto sobre a Renda Retido na Fonte',\r\n  value: 'RTIRF',\r\n};\r\nexport const CJAC = {\r\n  label: 'Compensação de Imposto por Decisão Judicial - Ano-calendário',\r\n  value: 'CJAC',\r\n};\r\nexport const CJAA = {\r\n  label: 'Compensação de Imposto por Decisão Judicial - Anos Anteriores',\r\n  value: 'CJAA',\r\n};\r\nexport const ESRT = {\r\n  label: 'Tributação com Exigibilidade Suspensa - Rendimento Tributável',\r\n  value: 'ESRT',\r\n};\r\nexport const ESPO = {\r\n  label: 'Tributação com Exigibilidade Suspensa - Dedução - Previdência Oficial',\r\n  value: 'ESPO',\r\n};\r\nexport const ESPP = {\r\n  label: 'Tributação com Exigibilidade Suspensa - Dedução - Previdência Privada',\r\n  value: 'ESPP',\r\n};\r\nexport const ESDP = {\r\n  label: 'Tributação com Exigibilidade Suspensa - Dedução - Dependentes',\r\n  value: 'ESDP',\r\n};\r\nexport const ESPA = {\r\n  label: 'Tributação com Exigibilidade Suspensa - Dedução - Pensão Alimentícia',\r\n  value: 'ESPA',\r\n};\r\nexport const ESIR = {\r\n  label: 'Tributação com Exigibilidade Suspensa - Imposto sobre a Renda na Fonte',\r\n  value: 'ESIR',\r\n};\r\nexport const ESDJ = {\r\n  label: 'Tributação com Exigibilidade Suspensa - Depósito Judicial',\r\n  value: 'ESDJ',\r\n};\r\nexport const RIDAC = {\r\n  label: 'Diária e Ajuda de Custo',\r\n  value: 'RIDAC',\r\n};\r\nexport const RIIRP = {\r\n  label: 'Indenizações por Rescisão de Contrato de Trabalho, inclusive a título de PDV',\r\n  value: 'RIIRP',\r\n};\r\nexport const RIAP = {\r\n  label: 'Abono Pecuniário',\r\n  value: 'RIAP',\r\n};\r\nexport const RIMOG = {\r\n  label: 'Pensão, Aposentadoria ou Reforma por Moléstia Grave',\r\n  value: 'RIMOG',\r\n};\r\nexport const RIP65 = {\r\n  label: 'Parcela Isenta de Aposentadoria para Maiores de 65 anos',\r\n  value: 'RIP65',\r\n};\r\nexport const RIVC = {\r\n  label: 'Benefícios Indiretos e Reembolso de Despesa - Voluntário da Copa',\r\n  value: 'RIVC',\r\n};\r\nexport const RIBMR = {\r\n  label: 'Bolsa de Estudo Recebida por Médico-Residente',\r\n  value: 'RIBMR',\r\n};\r\nexport const RICAP = {\r\n  label:\r\n    'Complementação de aposentadoria de previdência complementar correspondente às contribuições efetuadas no período de 1º de janeiro de 1989 a 31 de dezembro de 1995',\r\n  value: 'RICAP',\r\n};\r\nexport const RIL96 = {\r\n  label: 'Lucros e dividendos pagos a partir de 1996',\r\n  value: 'RIL96',\r\n};\r\nexport const RIPTS = {\r\n  label: 'Valores pagos a titular ou sócio ou empresa de pequeno porte, exceto pró-labore e aluguéis',\r\n  value: 'RIPTS',\r\n};\r\nexport const RIO = {\r\n  label: 'Rendimentos Isentos Anuais - Outros',\r\n  value: 'RIO',\r\n};\r\nexport const RTFA = {\r\n  label: 'Dedução - FAPI',\r\n  value: 'RTFA',\r\n};\r\nexport const ESFA = {\r\n  label: 'Tributação com Exigibilidade Suspensa - Dedução – FAPI',\r\n  value: 'ESFA',\r\n};\r\nexport const RTSP = {\r\n  label: 'Dedução - Fundo de Previdência do Servidor Público',\r\n  value: 'RTSP',\r\n};\r\nexport const RTEP = {\r\n  label: 'Dedução - Contribuição do ente público patrocinador',\r\n  value: 'RTEP',\r\n};\r\nexport const ESSP = {\r\n  label: 'Tributação com Exigibilidade Suspensa - Dedução - Fundo de Previdência do Servidor Público',\r\n  value: 'ESSP',\r\n};\r\nexport const ESEP = {\r\n  label: 'Tributação com Exigibilidade Suspensa - Dedução - Contribuição do ente público patrocinador',\r\n  value: 'ESEP',\r\n};\r\n\r\nexport const NATUREZA_EVENTO_ENUM_VALUES = [\r\n  RTRT,\r\n  RTPO,\r\n  RTPP,\r\n  RTPA,\r\n  RTIRF,\r\n  CJAC,\r\n  CJAA,\r\n  ESRT,\r\n  ESPO,\r\n  ESPP,\r\n  ESDP,\r\n  ESPA,\r\n  ESIR,\r\n  ESDJ,\r\n  RIDAC,\r\n  RIIRP,\r\n  RIAP,\r\n  RIMOG,\r\n  RIP65,\r\n  RIVC,\r\n  RIBMR,\r\n  RICAP,\r\n  RIL96,\r\n  RIPTS,\r\n  RIO,\r\n  RTFA,\r\n  ESFA,\r\n  RTSP,\r\n  RTEP,\r\n  ESSP,\r\n  ESEP,\r\n];\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mfp/previdenciaComplementar';\r\n\r\nconst PrevidenciaComplementarIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      type={InputType.INPUT_SEARCH}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'PrevidenciaComplementarSearchView',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrevidenciaComplementarIS;\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Col, Row } from 'reactstrap';\r\nimport {\r\n  compare,\r\n  currentDate,\r\n  DetailEditForm,\r\n  DetailEditViewFormProps,\r\n  format,\r\n  formatDate,\r\n  InputGroupInline,\r\n  InputType,\r\n  isEmpty,\r\n  toDate,\r\n} from 'summer';\r\nimport { VinculoPrevidenciaComplementar } from '../../../../models/dtos/mfp/vinculoPrevidenciaComplementar';\r\nimport { ESEP, ESFA, ESPP, ESSP, RTEP, RTFA, RTPP, RTSP } from '../../../../models/enumerated/mfp/naturezaEventoEnum';\r\nimport { getItemAtual } from '../../../../utilities/vinculo.util';\r\nimport EventoIS from '../../../components/mfp/eventoIS/EventoIS';\r\nimport PrevidenciaComplementarIS from '../../../components/mfp/previdenciaComplementarIS/PrevidenciaComplementarIS';\r\n\r\nconst VinculoPrevidenciaComplementarEditView: FC<DetailEditViewFormProps<VinculoPrevidenciaComplementar>> = props => {\r\n  const formProps = useForm<VinculoPrevidenciaComplementar>({ defaultValues: props.selectedItem || {}, mode: 'onBlur' });\r\n\r\n  const naturezasValidas = [RTPP, RTFA, RTSP, RTEP, ESPP, ESFA, ESSP, ESEP];\r\n\r\n  useEffect(\r\n    () => {\r\n      setTimeout(() => {\r\n        const vinculo = props.parentFormProps.getValues();\r\n\r\n        formProps.setValue('dataAlteracao', formatDate(currentDate()));\r\n        formProps.setValue('dtInicio', vinculo.dataAdmissao);\r\n\r\n        if (vinculo.previdenciasComplementar.length > 0) {\r\n          formProps.setValue('nroOrdem', getItemAtual(vinculo.previdenciasComplementar).nroOrdem + 1);\r\n        } else {\r\n          formProps.setValue('nroOrdem', 1);\r\n        }\r\n      }, 700);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const validateExtras = (formData, _, parentData) => {\r\n    const erros = [];\r\n\r\n    if (!isEmpty(formData.dtFim) && compare(formData.dtInicio, formData.dtFim) === 1) {\r\n      erros.push('A Data Final deve estar em branco ou posterior à Data Inicial.');\r\n    }\r\n\r\n    if (compare(parentData.dataAdmissao, formData.dtInicio) === 1) {\r\n      erros.push('A Data Inicial não pode ser anterior à Data de Admissão.');\r\n    }\r\n\r\n    if (formData.previdenciaComplementar && formData.evento) {\r\n      let previdenciaJaCadastrada = false;\r\n      let eventoJaCadastrado = false;\r\n      let naturezaEventoDiferente = false;\r\n\r\n      parentData.previdenciasComplementar.forEach(previdencia => {\r\n        const vemAntes =\r\n          compare(formData.dtInicio, previdencia.dtInicio) < 0 && !isEmpty(formData.dtFim) && compare(formData.dtFim, previdencia.dtInicio) < 0;\r\n        const periodoNaoCadastrado = isEmpty(previdencia.dtFim) ? vemAntes : compare(formData.dtInicio, previdencia.dtFim) > 0;\r\n        const mesmaPrevidencia = previdencia.previdenciaComplementar.id === formData.previdenciaComplementar.id;\r\n\r\n        if (periodoNaoCadastrado) {\r\n          const mesmoAno = format(toDate(formData.dtInicio), 'YYYY') === format(toDate(previdencia.dtInicio), 'YYYY');\r\n          naturezaEventoDiferente = mesmaPrevidencia && mesmoAno && previdencia.evento.naturezaEvento !== formData.evento.naturezaEvento;\r\n        } else {\r\n          previdenciaJaCadastrada = mesmaPrevidencia;\r\n          eventoJaCadastrado = !mesmaPrevidencia && previdencia.evento.id === formData.evento.id;\r\n        }\r\n      });\r\n\r\n      if (previdenciaJaCadastrada) {\r\n        erros.push('Previdência já está relacionada ao vínculo no período informado.');\r\n      }\r\n      if (eventoJaCadastrado) {\r\n        erros.push('Evento já está relacionado ao vínculo a outra previdência no período informado.');\r\n      }\r\n      if (naturezaEventoDiferente) {\r\n        erros.push('Natureza do Evento não é a mesma já relacionada a esse previdência no ano informado.');\r\n      }\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <Row>\r\n        <Col>\r\n          <PrevidenciaComplementarIS\r\n            id=\"previdenciaComplementar\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            label=\"Previdência Complementar\"\r\n            isPrependLabel={true}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <EventoIS\r\n            id=\"evento\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            label=\"Evento\"\r\n            isPrependLabel={true}\r\n            naturezasValidas={naturezasValidas}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"dtInicio\"\r\n            label=\"Data Inicial\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            isPrependLabel={true}\r\n            type={InputType.DATE}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <InputGroupInline id=\"dtFim\" label=\"Data Final\" formProps={formProps} isPrependLabel={true} type={InputType.DATE} />\r\n        </Col>\r\n      </Row>\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default VinculoPrevidenciaComplementarEditView;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mfp/quadroHorario';\r\n\r\ninterface QuadroHorarioISProps {\r\n  searchExpressions?: () => SearchExpression[];\r\n}\r\n\r\nconst QuadroHorarioIS: FC<InputProps & QuadroHorarioISProps> = props => {\r\n  const getSearchExpressions = () => {\r\n    const searchExpressions: SearchExpression[] = [];\r\n    if (props.searchExpressions) {\r\n      searchExpressions.push(...props.searchExpressions());\r\n    }\r\n    return searchExpressions;\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      type={InputType.INPUT_SEARCH}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressions: getSearchExpressions,\r\n        searchViewId: 'QuadroHorarioSearchView',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default QuadroHorarioIS;\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline, isEmpty, SearchExpression } from 'summer';\r\nimport { VinculoQuadroHorario } from '../../../../models/dtos/mfp/vinculoQuadroHorario';\r\nimport { getItemAtual } from '../../../../utilities/vinculo.util';\r\nimport QuadroHorarioIS from '../../../components/mfp/quadroHorarioIS/QuadroHorarioIS';\r\n\r\nconst VinculoQuadroHorarioEditView: FC<DetailEditViewFormProps<VinculoQuadroHorario>> = props => {\r\n  const formProps = useForm<VinculoQuadroHorario>({ defaultValues: props.selectedItem || {}, mode: 'onBlur' });\r\n\r\n  useEffect(\r\n    () => {\r\n      setTimeout(() => {\r\n        formProps.register({ name: 'nroOrdem' });\r\n\r\n        const values = formProps.getValues();\r\n\r\n        if (isEmpty(values.nroOrdem)) {\r\n          const parentValues = props.parentFormProps.getValues();\r\n\r\n          if (parentValues.quadrosHorarios.length > 0) {\r\n            formProps.setValue('nroOrdem', getItemAtual(parentValues.quadrosHorarios).nroOrdem + 1);\r\n          } else {\r\n            formProps.setValue('nroOrdem', 1);\r\n          }\r\n        }\r\n      }, 500);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps}>\r\n      <Row>\r\n        <Col>\r\n          <QuadroHorarioIS\r\n            id=\"quadroHorario\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            label=\"Quadro de Horário\"\r\n            isPrependLabel={true}\r\n            inputSearchProps={{\r\n              searchExpressions: (): SearchExpression[] => [\r\n                {\r\n                  fieldName: 'empresaMFP.id',\r\n                  value: props.parentFormProps.getValues().empresaMFP.id,\r\n                },\r\n              ],\r\n            }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline id=\"descricao\" label=\"Descrição\" formProps={formProps} isPrependLabel={true} />\r\n        </Col>\r\n      </Row>\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default VinculoQuadroHorarioEditView;\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { Checkbox, DetailEditForm, DetailEditViewFormProps, InputGroupInline, InputType, isEmpty, onlyNumber } from 'summer';\r\nimport { VinculoSalarioOutraRemuneracao } from '../../../../models/dtos/mfp/vinculoSalarioOutraRemuneracao';\r\nimport { CATEGORIA_ENUM_VALUES } from '../../../../models/enumerated/mfp/categoriaEnum';\r\n\r\nconst VinculoSalarioOutraRemuneracaoEditView: FC<DetailEditViewFormProps<VinculoSalarioOutraRemuneracao>> = props => {\r\n  const formProps = useForm<VinculoSalarioOutraRemuneracao>({ defaultValues: props.selectedItem || {}, mode: 'onBlur' });\r\n\r\n  useEffect(\r\n    () => {\r\n      setTimeout(() => {\r\n        formProps.setValue('categoria', props.parentFormProps.getValues().categoriaVinculo);\r\n      }, 500);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const validateExtras = (formData, _, parentData) => {\r\n    const erros = [];\r\n\r\n    if (isEmpty(formData.cpf) && isEmpty(formData.cnpj)) {\r\n      erros.push('Um dos campos CPF/CNPJ deve ser preenchido.');\r\n    }\r\n\r\n    if (formData.cpf && formData.cnpj) {\r\n      erros.push('Apenas um dos campos CPF/CNPJ deve ser preenchido.');\r\n    }\r\n\r\n    if (parseFloat(formData.valor) <= 0) {\r\n      erros.push('O Campo Valor deve ser maior que ZERO.');\r\n    }\r\n\r\n    if (validarExistencia(formData.id, formData.cpf, parentData) || validarExistencia(formData.id, formData.cnpj, parentData)) {\r\n      erros.push('Este CPF/CNPJ já foi utilizado para este salário.');\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  const validarExistencia = (id, valor, vinculoSalario) =>\r\n    valor ? vinculoSalario.outrasRemuneracoes.find(item => (item.cpf === valor || item.cnpj === valor) && item.id !== id) !== undefined : false;\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { required: true, maxLength: 150 } }}\r\n            isPrependLabel={true}\r\n            id=\"nomeRazaoSocial\"\r\n            label=\"Nome / Razão Social\"\r\n            tooltipProps={{ message: 'Nome ou Razação Social do outro Vínculo Empregatício' }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={formProps}\r\n            isPrependLabel={true}\r\n            id=\"cpf\"\r\n            label=\"C.P.F.\"\r\n            tooltipProps={{ message: 'CPF do outro Vínculo Empregatício' }}\r\n            type={InputType.CPF}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={formProps}\r\n            isPrependLabel={true}\r\n            id=\"cnpj\"\r\n            label=\"C.N.P.J.\"\r\n            tooltipProps={{ message: 'CNPJ do outro Vínculo Empregatício' }}\r\n            type={InputType.CNPJ}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"categoria\"\r\n            label=\"Categoria\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            isPrependLabel={true}\r\n            placeholder=\"Selecione a Categoria\"\r\n            inputDropDownProps={{ optionsProvider: CATEGORIA_ENUM_VALUES }}\r\n            type={InputType.DROP_DOWN}\r\n            tooltipProps={{ message: 'Categoria do Trabalhador no outro Vínculo Empregatício' }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { required: true, ...onlyNumber(0, 100) } }}\r\n            isPrependLabel={true}\r\n            id=\"valor\"\r\n            label=\"Valor\"\r\n            tooltipProps={{ message: 'Valor de Remuneração no outro Vínculo Empregatício' }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row style={{ marginBottom: 20 }}>\r\n        <Col className=\"text-center\">\r\n          <Checkbox formProps={formProps} id=\"insideInss\" label=\"Incide p/ INSS\" />\r\n        </Col>\r\n        <Col className=\"text-center\">\r\n          <Checkbox formProps={formProps} id=\"insideIrrf\" label=\"Incide p/ IRRF\" />\r\n        </Col>\r\n        <Col className=\"text-center\">\r\n          <Checkbox formProps={formProps} id=\"insideFgts\" label=\"Incide p/ FGTS\" />\r\n        </Col>\r\n      </Row>\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default VinculoSalarioOutraRemuneracaoEditView;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport cx from 'classnames';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Col, Row } from 'reactstrap';\r\nimport {\r\n  add,\r\n  boolColumn,\r\n  CALIMA_DANGER,\r\n  Checkbox,\r\n  cnpjFormatter,\r\n  compare,\r\n  cpfFormatter,\r\n  decimalFormatter,\r\n  DefaultSortProps,\r\n  DetailEditForm,\r\n  DetailEditViewFormProps,\r\n  DetailManagerForm,\r\n  DetailManagerFormProps,\r\n  formatDate,\r\n  InputGroupInline,\r\n  InputType,\r\n  isEmpty,\r\n  onlyNumber,\r\n  OrderType,\r\n  parseDateToRef,\r\n  parseRefToDate,\r\n  progressActions,\r\n  toDate,\r\n} from 'summer';\r\nimport { Vinculo } from '../../../../models/dtos/mfp/vinculo';\r\nimport { VinculoSalario } from '../../../../models/dtos/mfp/vinculoSalario';\r\nimport { EMP_CONTR_PRAZO_DETERMINADO, ESTAGIARIO } from '../../../../models/enumerated/mfp/categoriaEnum';\r\nimport {\r\n  PRAZO_DETERMINADO_COM_CLAUSULA_DE_RESCISAO,\r\n  PRAZO_DETERMINADO_SEM_CLAUSULA_DE_RESCISAO,\r\n} from '../../../../models/enumerated/mfp/contratoTrabalhoEnum';\r\nimport { REDUCAO_CARGA_HORARIA } from '../../../../models/enumerated/mfp/tipoAdesaoBEMEnum';\r\nimport { MENSAL, PERIODICO, TIPO_PAGAMENTO_MFP_ENUM_VALUES } from '../../../../models/enumerated/mfp/tipoPagamentoMFPEnum';\r\nimport { validarSalarioVinculo } from '../../../../services/mfp.service';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport { NRO_HORAS_CONTRATUAIS_MENSALISTA } from '../../../../utilities/constantes';\r\nimport {\r\n  condicional,\r\n  getItemAtual,\r\n  getReferenciaAtual,\r\n  isSalarioRepetido,\r\n  isVinculoProfessor,\r\n  promisedAlert,\r\n  showLoading,\r\n} from '../../../../utilities/vinculo.util';\r\nimport VinculoSalarioOutraRemuneracaoEditView from './VinculoSalarioOutraRemuneracaoEditView';\r\n\r\ninterface ExtraFields {\r\n  categoriaVinculo?: string;\r\n  reajuste?: number;\r\n  reajusteHoras?: number;\r\n}\r\n\r\nconst VinculoSalarioEditView: FC<DetailEditViewFormProps<VinculoSalario>> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const formProps = useForm<VinculoSalario & ExtraFields>({\r\n    defaultValues: { ...props.selectedItem, categoriaVinculo: props.parentFormProps.getValues().categoria },\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const [modoTela, setModoTela] = useState(null);\r\n  const [disabledEdit, setDisabledEdit] = useState(false);\r\n  const [isMensalista, setIsMensalista] = useState(false);\r\n  const [isPeriodico, setIsPeriodico] = useState(false);\r\n  const [isIntermitente, setIsIntermitente] = useState(false);\r\n  const [checkHoristaDisabled, setCheckHoristaDisabled] = useState(false);\r\n  const [checkDiaristaDisabled, setCheckDiaristaDisabled] = useState(false);\r\n  const [isMPDisabled, setIsMPDisabled] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      // Campo utilizado pela tela VinculoSalarioOutraRemuneracaoEditView\r\n      formProps.register({ name: 'categoriaVinculo' });\r\n\r\n      configTrabalhadorIntermitente();\r\n      validarEdicao();\r\n    }, 700);\r\n  }, []);\r\n\r\n  // Re-executa após a validação do trabalhador intermitente\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      configurarSalario();\r\n      ajustarPorTipoPagamento(false);\r\n    }, 700);\r\n  }, [isIntermitente]);\r\n\r\n  const validarEdicao = () => {\r\n    if (props.selectedItem && !isEmpty(props.selectedItem.id)) {\r\n      const vinculo = props.parentFormProps.getValues();\r\n      dispatch(showLoading());\r\n      validarSalarioVinculo(vinculo.id, props.selectedItem, {\r\n        thenFunction: result => {\r\n          dispatch(progressActions.hideProgress());\r\n          setDisabledEdit(result);\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const ajustarPorTipoPagamento = (ajustarHorasContratuais = true) => {\r\n    const values = formProps.getValues();\r\n\r\n    const mensalista = values.tipoPagamento === MENSAL.value;\r\n    const periodico = values.tipoPagamento === PERIODICO.value;\r\n\r\n    if (mensalista) {\r\n      setCheckHoristaDisabled(false);\r\n    } else if (periodico) {\r\n      setCheckHoristaDisabled(true);\r\n      formProps.setValue('horista', true);\r\n      values.horista = true;\r\n    }\r\n\r\n    if (ajustarHorasContratuais) {\r\n      formProps.setValue('numeroHorasContratuais', NRO_HORAS_CONTRATUAIS_MENSALISTA);\r\n    }\r\n\r\n    setIsMensalista(mensalista);\r\n    setIsPeriodico(periodico);\r\n    setCheckDiaristaDisabled(values.horista === false);\r\n\r\n    if (!validarModoProfessor()) {\r\n      if (values.horista) {\r\n        setModoTela(isIntermitente ? 'horistaIntermitente' : 'horista');\r\n      } else {\r\n        setModoTela(isIntermitente ? 'mensalistaIntermitente' : 'mensalista');\r\n      }\r\n    }\r\n  };\r\n\r\n  const validarModoProfessor = () => {\r\n    let result = false;\r\n    if (isVinculoProfessor(props.parentFormProps.getValues())) {\r\n      setModoTela('professor');\r\n      result = true;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const configurarSalario = () => {\r\n    validarModoProfessor();\r\n\r\n    if (!props.selectedItem || isEmpty(props.selectedItem.nroOrdem)) {\r\n      const vinculo = props.parentFormProps.getValues();\r\n      const salario = formProps.getValues();\r\n      const parametros: any[] = [{ tipoPagamento: globalReducer.globalParameter.empresaMFP.tipoPagamento }];\r\n\r\n      if (vinculo.salarios.length > 0) {\r\n        const salarioAtual = getItemAtual(vinculo.salarios);\r\n\r\n        parametros.push(\r\n          { nroOrdem: salarioAtual.nroOrdem + 1 },\r\n          { tipoPagamento: salarioAtual.tipoPagamento },\r\n          { numeroHorasContratuais: salarioAtual.numeroHorasContratuais },\r\n          { valor: salarioAtual.valor },\r\n          { numeroHorasContratuaisFixa: salarioAtual.numeroHorasContratuaisFixa },\r\n          {\r\n            outrasRemuneracoes: salarioAtual.outrasRemuneracoes.map(item => {\r\n              item.id = null;\r\n              return item;\r\n            }),\r\n          }\r\n        );\r\n      } else {\r\n        parametros.push({ nroOrdem: 1 }, { numeroHorasContratuais: NRO_HORAS_CONTRATUAIS_MENSALISTA });\r\n      }\r\n\r\n      if (isEmpty(salario.data)) {\r\n        let dataAtual = formatDate(parseRefToDate(getReferenciaAtual(globalReducer), 1));\r\n        if (compare(dataAtual, vinculo.dataAdmissao) < 0) {\r\n          dataAtual = vinculo.dataAdmissao;\r\n        }\r\n        parametros.push({ data: dataAtual });\r\n      }\r\n\r\n      formProps.setValue(parametros);\r\n    }\r\n\r\n    ajustarMP();\r\n  };\r\n\r\n  const configTrabalhadorIntermitente = () => {\r\n    const vinculo: Vinculo = props.parentFormProps.getValues();\r\n    setIsIntermitente(\r\n      (vinculo.contratoTrabalho === PRAZO_DETERMINADO_COM_CLAUSULA_DE_RESCISAO.value ||\r\n        vinculo.contratoTrabalho === PRAZO_DETERMINADO_SEM_CLAUSULA_DE_RESCISAO.value) &&\r\n        vinculo.categoria === EMP_CONTR_PRAZO_DETERMINADO.value\r\n    );\r\n  };\r\n\r\n  const changeTipoPagamento = () => ajustarPorTipoPagamento();\r\n\r\n  const changeCheckHorista = () => {\r\n    ajustarPorTipoPagamento();\r\n    formProps.setValue('diarista', false);\r\n  };\r\n\r\n  const isNumeroHorasContratuaisFixa = () => formProps.getValues().numeroHorasContratuaisFixa;\r\n\r\n  const ajustarMP = () => {\r\n    setIsMPDisabled(true);\r\n\r\n    const values = formProps.getValues();\r\n\r\n    const parentValues = props.parentFormProps.getValues();\r\n    const camposPreenchidos =\r\n      isEmpty(parentValues.tipoAdesaoBEM) || isEmpty(parentValues.dtAcordoBEM) || isEmpty(parentValues.diasDuracaoAcordo) === false;\r\n\r\n    if (!disabledEdit && camposPreenchidos && parentValues.tipoAdesaoBEM === REDUCAO_CARGA_HORARIA.value) {\r\n      const dataInicial = parseRefToDate(parseDateToRef(toDate(parentValues.dtAcordoBEM)), 1);\r\n      const dataFinal = add(dataInicial, parentValues.diasDuracaoAcordo, 'days');\r\n\r\n      const strDataInicial = formatDate(dataInicial);\r\n      const strDataFinal = formatDate(dataFinal);\r\n\r\n      if (compare(values.data, strDataInicial) >= 0 && compare(values.data, strDataFinal) <= 0) {\r\n        setIsMPDisabled(false);\r\n        formProps.setValue('mp93620', true);\r\n        if (!isEmpty(parentValues.percentualReducaoCargaHoraria) && isEmpty(values.id)) {\r\n          formProps.setValue([\r\n            { reajuste: parentValues.percentualReducaoCargaHoraria },\r\n            { reajusteHoras: parentValues.percentualReducaoCargaHoraria },\r\n            { motivo: 'Redução salarial seguindo MPV-936/20' },\r\n          ]);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const reajustarSalario = (fator: number, loop: boolean = true) => {\r\n    return () => {\r\n      const values = formProps.getValues();\r\n      const valor = parseFloat(values.valor.toString());\r\n      const reajuste = parseFloat(values.reajuste.toString());\r\n\r\n      const valorReajuste = valor * (reajuste / 100) * fator;\r\n      const novoSalario = valor + valorReajuste;\r\n\r\n      formProps.setValue('valor', parseFloat((novoSalario > 0 ? novoSalario : 0).toFixed(2)));\r\n      if (values.mp93620 && !values.horista && loop) {\r\n        reajustarHoras(fator, false);\r\n      }\r\n    };\r\n  };\r\n\r\n  const reajustarHoras = (fator: number, loop: boolean = true) => {\r\n    return () => {\r\n      const values = formProps.getValues();\r\n      const valor = parseFloat(values.numeroHorasContratuais.toString());\r\n      const reajuste = parseFloat(values.reajusteHoras.toString());\r\n\r\n      const valorReajuste = valor * (reajuste / 100) * fator;\r\n      const novasHoras = valor + valorReajuste;\r\n\r\n      formProps.setValue('numeroHorasContratuais', parseFloat((novasHoras > 0 ? novasHoras : 0).toFixed(2)));\r\n      if (values.mp93620 && !values.horista && loop) {\r\n        reajustarSalario(fator, false);\r\n      }\r\n    };\r\n  };\r\n\r\n  const validateExtras = formData => {\r\n    const erros = [];\r\n\r\n    const vinculo = props.parentFormProps.getValues();\r\n\r\n    if (modoTela !== 'professor') {\r\n      if (parseFloat(formData.valor) <= 0 && vinculo.categoria !== ESTAGIARIO.value) {\r\n        erros.push('Valor deve ser maior que zero.');\r\n      }\r\n      if (parseFloat(formData.numeroHorasContratuais) <= 0) {\r\n        erros.push('Número de horas Mensais deve ser maior que zero.');\r\n      }\r\n    }\r\n\r\n    const salarioAtual = getItemAtual(vinculo.salarios);\r\n\r\n    if (salarioAtual && salarioAtual.id !== formData.id) {\r\n      if (isSalarioRepetido(salarioAtual, formData)) {\r\n        erros.push('Os valores salariais informados são idênticos ao anterior');\r\n      }\r\n    }\r\n\r\n    if (vinculo.dataAdmissao && compare(vinculo.dataAdmissao, formData.data) > 0) {\r\n      erros.push('Data do salário não pode ser menor que a data de admissão');\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  const handleSubmit = (formData, validateExtrasFunc) => {\r\n    const vinculo = props.parentFormProps.getValues();\r\n    const salarioAtual = getItemAtual(vinculo.salarios);\r\n\r\n    let promise = null;\r\n\r\n    if (salarioAtual) {\r\n      if (\r\n        !isVinculoProfessor(vinculo) &&\r\n        (parseFloat(formData.numeroHorasContratuais) < parseFloat(salarioAtual.numeroHorasContratuais) ||\r\n          parseFloat(formData.valor) < parseFloat(salarioAtual.valor))\r\n      ) {\r\n        promise = promisedAlert('O novo valor do salário ou número de horas contratuais está inferior ao salário atual.\\nDeseja continuar?');\r\n      }\r\n\r\n      if (compare(formData.data, salarioAtual.data) < 0) {\r\n        const msgA = 'A data de inclusão do salário está menor do que a data do salário atual.\\nDeseja continuar?';\r\n        if (promise) {\r\n          promise = promise.then(() => promisedAlert(msgA));\r\n        } else {\r\n          promise = promisedAlert(msgA);\r\n        }\r\n      }\r\n\r\n      if (formData.tipoPagamento !== globalReducer.globalParameter.empresaMFP.tipoPagamento) {\r\n        const msgB = 'O tipo de pagamento selecionado está diferente do selecionado na empresa.\\nDeseja continuar?';\r\n        if (promise) {\r\n          promise = promise.then(() => promisedAlert(msgB));\r\n        } else {\r\n          promise = promisedAlert(msgB);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (promise) {\r\n      promise.then(() => {\r\n        props.handleSubmit(formData, validateExtrasFunc);\r\n      });\r\n    } else {\r\n      props.handleSubmit(formData, validateExtrasFunc);\r\n    }\r\n  };\r\n\r\n  const outraRemuneracaoDefaultSortProps: DefaultSortProps[] = [\r\n    {\r\n      dataField: 'id',\r\n      order: OrderType.ASC,\r\n    },\r\n  ];\r\n\r\n  const outraRemuneracaoFormProps: DetailManagerFormProps = {\r\n    columns: [\r\n      {\r\n        dataField: 'cnpj',\r\n        formatter: cnpjFormatter,\r\n        headerStyle: { width: 160 },\r\n        text: 'C.N.P.J.',\r\n      },\r\n      {\r\n        dataField: 'cpf',\r\n        formatter: cpfFormatter,\r\n        headerStyle: { width: 140 },\r\n        text: 'C.P.F.',\r\n      },\r\n      {\r\n        dataField: 'valor',\r\n        formatter: decimalFormatter,\r\n        text: 'Valor',\r\n      },\r\n      boolColumn({\r\n        dataField: 'insideInss',\r\n        text: 'Incide INSS',\r\n      }),\r\n      boolColumn({\r\n        dataField: 'insideIrrf',\r\n        text: 'Incide IRRF',\r\n      }),\r\n      boolColumn({\r\n        dataField: 'insideFgts',\r\n        text: 'Incide FGTS',\r\n      }),\r\n    ],\r\n    detailView: VinculoSalarioOutraRemuneracaoEditView,\r\n    detailViewSize: 'large',\r\n    formProps,\r\n    onBeforeEdit: disabledEdit ? () => ({ async: true }) : null,\r\n    propName: 'outrasRemuneracoes',\r\n    title: 'Valor de Outras Remunerações - Dados de Outros Vínculos Empregatícios',\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      {condicional(\r\n        modoTela !== 'professor',\r\n        <>\r\n          <div className=\"d-flex\">\r\n            <div className=\"flex-grow-1\">\r\n              <InputGroupInline\r\n                id=\"tipoPagamento\"\r\n                label=\"Tipo de pagamento\"\r\n                formProps={{ ...formProps, validation: { required: true } }}\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de pagamento\"\r\n                inputDropDownProps={{ optionsProvider: TIPO_PAGAMENTO_MFP_ENUM_VALUES }}\r\n                type={InputType.DROP_DOWN}\r\n                onChange={changeTipoPagamento}\r\n                disabled={disabledEdit}\r\n              />\r\n            </div>\r\n            <div style={{ width: 144, marginLeft: 15, paddingTop: 10 }}>\r\n              <Checkbox\r\n                formProps={formProps}\r\n                id=\"mp93620\"\r\n                label=\"MPV-936/20\"\r\n                disabled={isMPDisabled}\r\n                labelProps={{ style: { color: CALIMA_DANGER } }}\r\n              />\r\n            </div>\r\n            <div style={{ width: 110, marginLeft: 15, paddingTop: 10 }}>\r\n              <Checkbox\r\n                formProps={formProps}\r\n                id=\"horista\"\r\n                label=\"Horista\"\r\n                disabled={disabledEdit || checkHoristaDisabled}\r\n                onChange={changeCheckHorista}\r\n              />\r\n            </div>\r\n            <div style={{ width: 110, marginLeft: 15, paddingTop: 10 }}>\r\n              <Checkbox formProps={formProps} id=\"diarista\" label=\"Diarista\" disabled={disabledEdit || checkDiaristaDisabled} />\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex\">\r\n            <div className=\"flex-grow-1\">\r\n              <InputGroupInline\r\n                formProps={{ ...formProps, validation: { required: true, ...onlyNumber(0, 100) } }}\r\n                isPrependLabel={true}\r\n                id=\"valor\"\r\n                label={['mensalista', 'mensalistaIntermitente'].indexOf(modoTela) >= 0 ? 'Valor do salário' : 'Valor da Hora'}\r\n                disabled={disabledEdit}\r\n              />\r\n            </div>\r\n            <div style={{ width: 245, marginLeft: 20, marginRight: 10 }}>\r\n              <InputGroupInline\r\n                formProps={{ ...formProps, validation: { min: 0, max: 100 } }}\r\n                isPrependLabel={true}\r\n                id=\"reajuste\"\r\n                label=\"Reajustar (%)\"\r\n                placeholder=\"&nbsp;\"\r\n                type={InputType.NUMBER}\r\n                disabled={disabledEdit}\r\n              />\r\n            </div>\r\n            <div style={{ marginTop: 8 }}>\r\n              <Button\r\n                color=\"neutral-success\"\r\n                disabled={disabledEdit}\r\n                onClick={reajustarSalario(1)}\r\n                className={cx('btn-pill d-30 p-0 align-top', { 'btn-animated-icon btn-animated-icon--success': !disabledEdit })}\r\n              >\r\n                <span className=\"btn-wrapper--icon\">\r\n                  <FontAwesomeIcon icon={['fas', 'plus']} />\r\n                </span>\r\n              </Button>\r\n              <Button\r\n                color=\"neutral-danger\"\r\n                disabled={disabledEdit}\r\n                onClick={reajustarSalario(-1)}\r\n                className={cx('btn-pill d-30 p-0 align-top ml-2', { 'btn-animated-icon btn-animated-icon--danger': !disabledEdit })}\r\n              >\r\n                <span className=\"btn-wrapper--icon\">\r\n                  <FontAwesomeIcon icon={['fas', 'minus']} />\r\n                </span>\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex\">\r\n            <div className=\"flex-grow-1\">\r\n              <InputGroupInline\r\n                formProps={{ ...formProps, validation: { required: true } }}\r\n                isPrependLabel={true}\r\n                id=\"numeroHorasContratuais\"\r\n                label={['mensalista', 'mensalistaIntermitente'].indexOf(modoTela) >= 0 ? 'Nº Horas MENSAIS' : 'Nº Horas MENSAIS (mês 30 dias)'}\r\n                type={InputType.FRACTION_OF_TIME}\r\n                disabled={disabledEdit}\r\n              />\r\n            </div>\r\n            <div style={{ width: 245, marginLeft: 20, marginRight: 10 }}>\r\n              <InputGroupInline\r\n                formProps={{ ...formProps, validation: { min: 0, max: 100 } }}\r\n                isPrependLabel={true}\r\n                id=\"reajusteHoras\"\r\n                label=\"Reajustar (%)\"\r\n                placeholder=\"&nbsp;\"\r\n                type={InputType.NUMBER}\r\n                disabled={disabledEdit}\r\n              />\r\n            </div>\r\n            <div style={{ marginTop: 8 }}>\r\n              <Button\r\n                color=\"neutral-success\"\r\n                disabled={disabledEdit}\r\n                onClick={reajustarHoras(1)}\r\n                className={cx('btn-pill d-30 p-0 align-top', { 'btn-animated-icon btn-animated-icon--success': !disabledEdit })}\r\n              >\r\n                <span className=\"btn-wrapper--icon\">\r\n                  <FontAwesomeIcon icon={['fas', 'plus']} />\r\n                </span>\r\n              </Button>\r\n              <Button\r\n                color=\"neutral-danger\"\r\n                disabled={disabledEdit}\r\n                onClick={reajustarHoras(-1)}\r\n                className={cx('btn-pill d-30 p-0 align-top ml-2', { 'btn-animated-icon btn-animated-icon--danger': !disabledEdit })}\r\n              >\r\n                <span className=\"btn-wrapper--icon\">\r\n                  <FontAwesomeIcon icon={['fas', 'minus']} />\r\n                </span>\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n      {condicional(\r\n        modoTela === 'horista' || modoTela === 'horistaIntermitente',\r\n        <div className=\"d-flex\" style={{ marginBottom: 15, paddingLeft: 10 }}>\r\n          {condicional(\r\n            isMensalista,\r\n            <div className=\"flex-grow-1\">\r\n              <Checkbox\r\n                formProps={formProps}\r\n                id=\"numeroHorasContratuaisFixa\"\r\n                label=\"Fixar Nº Horas MENSAIS\"\r\n                disabled={disabledEdit}\r\n                tooltipProps={{\r\n                  message:\r\n                    'Caso este campo seja marcado, o sistema irá levar em conta o valor que estiver no campo Nº Horas MENSAIS. ' +\r\n                    'Caso contrário, ele irá calcular proporcionalmente como (Nº Horas MENSAIS)/30 * (Número de dias a serem ' +\r\n                    'considerados no cálculo). O Cálculo também será feito de forma proporcional se houver afastamentos ou admissão ' +\r\n                    'do vínculo dentro do período de cálculo da respectiva referência, ignorando esta marcação.',\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n          {condicional(\r\n            isPeriodico,\r\n            <div className=\"flex-grow-1\">\r\n              <Checkbox\r\n                formProps={formProps}\r\n                id=\"numeroHorasContratuaisFixa\"\r\n                label=\"Fixar Nº Horas por PERÍODO\"\r\n                disabled={disabledEdit}\r\n                tooltipProps={{\r\n                  message:\r\n                    'Caso este campo seja marcado, o sistema irá levar em conta o valor que estiver no campo Nº Horas por PERÍODO. ' +\r\n                    'Caso contrário, ele irá calcular proporcionalmente como (Nº Horas MENSAIS)/30 * (Número de dias a serem ' +\r\n                    'considerados no cálculo). O Cálculo também será feito de forma proporcional se houver afastamentos ou admissão ' +\r\n                    'do vínculo dentro do período de cálculo da respectiva referência, ignorando esta marcação.',\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n          {condicional(\r\n            isNumeroHorasContratuaisFixa(),\r\n            <div style={{ width: 440 }}>\r\n              <Checkbox\r\n                formProps={formProps}\r\n                id=\"calcularHorasProporcionaisAdmissaoDemissao\"\r\n                label=\"Calcular horas proporcionais na admissão/demissão\"\r\n                disabled={disabledEdit}\r\n                tooltipProps={{\r\n                  message:\r\n                    'Caso este campo seja marcado, o sistema irá calcular proporcionalmente como (Nº Horas MENSAIS)/30 * (Número de ' +\r\n                    'dias a serem considerados no cálculo) para admissão/demissão do vínculo dentro do período de cálculo da ' +\r\n                    'respectiva referência.',\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            isPrependLabel={true}\r\n            id=\"data\"\r\n            label=\"Data de inclusão do salário\"\r\n            type={InputType.DATE}\r\n            disabled={disabledEdit}\r\n            onBlur={ajustarMP}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { min: 0, max: 100 } }}\r\n            isPrependLabel={true}\r\n            id=\"porcentagemComissaoSobreVendas\"\r\n            label=\"Porcentagem de comissão sobre vendas\"\r\n            type={InputType.NUMBER}\r\n            disabled={disabledEdit}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      {condicional(\r\n        modoTela === 'horistaIntermitente' || modoTela === 'mensalistaIntermitente',\r\n        <>\r\n          <Row>\r\n            <Col>\r\n              <InputGroupInline\r\n                formProps={{ ...formProps, validation: { maxLength: 128 } }}\r\n                isPrependLabel={true}\r\n                id=\"localPagamento\"\r\n                label=\"Local do pagamento\"\r\n                disabled={disabledEdit}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <InputGroupInline\r\n                formProps={{ ...formProps, validation: { ...onlyNumber(0, 4) } }}\r\n                isPrependLabel={true}\r\n                id=\"prazoPagamento\"\r\n                label=\"Prazo para pagamento (em dias)\"\r\n                disabled={disabledEdit}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n      {condicional(\r\n        modoTela !== 'professor',\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline formProps={formProps} isPrependLabel={true} id=\"motivo\" label=\"Motivo da inclusão do salário\" disabled={disabledEdit} />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      <Row>\r\n        <Col id=\"detailManagerOutraRemuneracao\">\r\n          <DetailManagerForm\r\n            {...props}\r\n            defaultSortDirection={OrderType.ASC}\r\n            defaultSorted={outraRemuneracaoDefaultSortProps}\r\n            {...outraRemuneracaoFormProps}\r\n            keyField=\"rowIndex\"\r\n            hideAddButton={disabledEdit}\r\n            hideEditButton={disabledEdit}\r\n            hideRemoveButton={disabledEdit}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      {condicional(\r\n        modoTela === 'professor',\r\n        <Row>\r\n          <Col>\r\n            <h6 className=\"text-center\">ATENÇÃO: Para informar o valor do salário de professor deve-se informar eventos do tipo 'Salário Aula'.</h6>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      {condicional(\r\n        disabledEdit,\r\n        <Row>\r\n          <Col>\r\n            <h6 className=\"text-center\" style={{ color: CALIMA_DANGER }}>\r\n              ATENÇÃO: Não é possível alterar o salário, pois o mesmo é referenciado nos cálculos. Para alterar o valor, adicione um novo salário.\r\n            </h6>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      <div style={{ marginBottom: 20 }} />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default VinculoSalarioEditView;\r\n","export const ESTAB_INFORMADO_GRUPO = {\r\n  label: 'Prestação de serviços no estabelecimento informado no grupo do S-2200 ou S-2206',\r\n  value: 'ESTAB_INFORMADO_GRUPO',\r\n};\r\nexport const FORA_ESTAB_INFORMADO_GRUPO = {\r\n  label: 'Prestação de serviços em apenas um local e fora do estabelecimento informado no grupo do S-2200 ou S-2206',\r\n  value: 'FORA_ESTAB_INFORMADO_GRUPO',\r\n};\r\nexport const EXTERNO_MAIS_LOCAIS = {\r\n  label: 'Prestação de serviços de natureza externa ou em mais de um local',\r\n  value: 'EXTERNO_MAIS_LOCAIS',\r\n};\r\n\r\nexport const INDICATIVO_PRESTACAO_TRABALHO_ENUM_VALUES = [ESTAB_INFORMADO_GRUPO, FORA_ESTAB_INFORMADO_GRUPO, EXTERNO_MAIS_LOCAIS];\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Col, Row } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  CALIMA_DANGER,\r\n  compare,\r\n  DetailEditForm,\r\n  DetailEditViewFormProps,\r\n  formatDate,\r\n  InputGroupInline,\r\n  InputType,\r\n  isEmpty,\r\n  onlyNumber,\r\n  parseDateToRef,\r\n  parseLastDay,\r\n  toDate,\r\n} from 'summer';\r\nimport useCepManager from '../../../../hooks/useCepManager';\r\nimport { CepBairro } from '../../../../models/dtos/ger/cepBairro';\r\nimport { CepLocalidade } from '../../../../models/dtos/ger/cepLocalidade';\r\nimport { CepLogradouro } from '../../../../models/dtos/ger/cepLogradouro';\r\nimport { CepTitulo } from '../../../../models/dtos/ger/cepTitulo';\r\nimport { CepUF } from '../../../../models/dtos/ger/cepUF';\r\nimport { VinculoTrabalhoIntermitente } from '../../../../models/dtos/mfp/vinculoTrabalhoIntermitente';\r\nimport {\r\n  FORA_ESTAB_INFORMADO_GRUPO,\r\n  INDICATIVO_PRESTACAO_TRABALHO_ENUM_VALUES,\r\n} from '../../../../models/enumerated/mfp/indicativoPrestacaoTrabalhoEnum';\r\nimport { verificarQuadroHorarioESocial } from '../../../../services/mfp.service';\r\nimport { condicional, getItemAtual } from '../../../../utilities/vinculo.util';\r\nimport CepBairroIS from '../../../components/ger/cepBairroIS/CepBairroIS';\r\nimport CepLocalidadeIS from '../../../components/ger/cepLocalidadeIS/CepLocalidadeIS';\r\nimport CepLogradouroIS from '../../../components/ger/cepLogradouro/CepLogradouroIS';\r\nimport CepTituloIS from '../../../components/ger/cepTituloIS/CepTituloIS';\r\nimport CepUFIS from '../../../components/ger/cepUFIS/CepUFIS';\r\nimport QuadroHorarioIS from '../../../components/mfp/quadroHorarioIS/QuadroHorarioIS';\r\n\r\ninterface ScreenFields {\r\n  localTrabalhoBairro?: CepBairro;\r\n  localTrabalhoCep?: string;\r\n  localTrabalhoCepFmt?: CepLogradouro;\r\n  localTrabalhoCidade?: CepLocalidade;\r\n  localTrabalhoComplemento?: string;\r\n  localTrabalhoLogradouro?: string;\r\n  localTrabalhoNumero?: string;\r\n  localTrabalhoTipoLogradouro?: CepTitulo;\r\n  localTrabalhoUf?: CepUF;\r\n}\r\n\r\nconst VinculoTrabalhoIntermitenteEditView: FC<DetailEditViewFormProps<VinculoTrabalhoIntermitente>> = props => {\r\n  const formProps = useForm<VinculoTrabalhoIntermitente & ScreenFields>({ defaultValues: props.selectedItem || {}, mode: 'onBlur' });\r\n\r\n  const cepManager = useCepManager(formProps, {\r\n    bairro: 'localTrabalhoBairro',\r\n    cep: 'localTrabalhoCep',\r\n    localidade: 'localTrabalhoCidade',\r\n    nome: 'localTrabalhoLogradouro',\r\n    titulo: 'localTrabalhoTipoLogradouro',\r\n    uf: 'localTrabalhoUf',\r\n  });\r\n\r\n  const [exibirAlertaHorario, setExibirAlertaHorario] = useState(false);\r\n  const [isLocalTrabalhoDisabled, setIsLocalTrabalhoDisabled] = useState(false);\r\n  const [isLocalTrabalhoRequired, setIsLocalTrabalhoRequired] = useState(true);\r\n\r\n  useEffect(\r\n    () => {\r\n      formProps.register({ name: 'localTrabalhoCep' });\r\n\r\n      setTimeout(() => {\r\n        const parentValues = props.parentFormProps.getValues();\r\n        const values = formProps.getValues();\r\n\r\n        if ((isEmpty(props.selectedItem) || isEmpty(props.selectedItem.id)) && parentValues.quadrosHorarios.length > 0) {\r\n          formProps.setValue('quadroHorario', getItemAtual(parentValues.quadrosHorarios).quadroHorario);\r\n        }\r\n\r\n        let codigoConvocacao = 1;\r\n\r\n        if (parentValues.trabalhosIntermitentes.length > 0) {\r\n          codigoConvocacao = Math.max(...parentValues.trabalhosIntermitentes.map(item => parseInt(item.codigoConvocacao, 10))) + 1;\r\n        }\r\n\r\n        formProps.setValue('codigoConvocacao', codigoConvocacao);\r\n\r\n        setIsLocalTrabalhoDisabled(values.indicativoPrestacaoTrabalho !== FORA_ESTAB_INFORMADO_GRUPO.value);\r\n        setIsLocalTrabalhoRequired(values.indicativoPrestacaoTrabalho === FORA_ESTAB_INFORMADO_GRUPO.value);\r\n\r\n        verificarQuadroHorario();\r\n      }, 700);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const verificarQuadroHorario = () => {\r\n    const values = formProps.getValues();\r\n    if (values.quadroHorario) {\r\n      verificarQuadroHorarioESocial(values.quadroHorario, {\r\n        thenFunction: res => {\r\n          if (!isEmpty(res)) {\r\n            setExibirAlertaHorario(true);\r\n            formProps.setValue('descricaoJornadaTrabalho', res);\r\n          }\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const clearLocalTrabalho = () => {\r\n    formProps.setValue([\r\n      { localTrabalhoBairro: null },\r\n      { localTrabalhoCep: null },\r\n      { localTrabalhoCepFmt: null },\r\n      { localTrabalhoCidade: null },\r\n      { localTrabalhoComplemento: null },\r\n      { localTrabalhoLogradouro: null },\r\n      { localTrabalhoNumero: null },\r\n      { localTrabalhoTipoLogradouro: null },\r\n      { localTrabalhoUf: null },\r\n    ]);\r\n  };\r\n\r\n  const localTrabalhoChange = value => {\r\n    setIsLocalTrabalhoDisabled(value !== FORA_ESTAB_INFORMADO_GRUPO.value);\r\n    setIsLocalTrabalhoRequired(value === FORA_ESTAB_INFORMADO_GRUPO.value);\r\n    clearLocalTrabalho();\r\n  };\r\n\r\n  const dataInicioChange = () => {\r\n    const values = formProps.getValues();\r\n    if (values.dtInicio) {\r\n      const data = formatDate(parseLastDay(parseDateToRef(toDate(values.dtInicio))));\r\n      formProps.setValue([{ dtFim: data }, { dtPrevistaPagamento: data }]);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (data, validateExtrasFunc) => {\r\n    data.localTrabalho = {\r\n      ...(props.selectedItem ? props.selectedItem.localTrabalho || {} : {}),\r\n      bairro: data.localTrabalhoBairro,\r\n      cep: data.localTrabalhoCep,\r\n      cidade: data.localTrabalhoCidade,\r\n      complemento: data.localTrabalhoComplemento,\r\n      logradouro: data.localTrabalhoLogradouro,\r\n      numero: data.localTrabalhoNumero,\r\n      tipoLogradouro: data.localTrabalhoTipoLogradouro,\r\n      uf: data.localTrabalhoUf,\r\n    };\r\n\r\n    [\r\n      'localTrabalhoBairro',\r\n      'localTrabalhoCep',\r\n      'localTrabalhoCepFmt',\r\n      'localTrabalhoCidade',\r\n      'localTrabalhoComplemento',\r\n      'localTrabalhoLogradouro',\r\n      'localTrabalhoNumero',\r\n      'localTrabalhoTipoLogradouro',\r\n      'localTrabalhoUf',\r\n    ].forEach(key => {\r\n      delete data[key];\r\n    });\r\n\r\n    props.handleSubmit(data, validateExtrasFunc);\r\n  };\r\n\r\n  const validateExtras = (formData, _, parentData) => {\r\n    const erros = [];\r\n\r\n    if (!isEmpty(formData.dtInicio) && compare(formData.dtInicio, parentData.dataAdmissao) < 0) {\r\n      erros.push('A Data Inicial não pode ser inferior à Data de Admissão');\r\n    }\r\n\r\n    if (!isEmpty(formData.dtInicio) && compare(formData.dtFim, formData.dtInicio) < 0) {\r\n      erros.push('A Data Final não pode ser inferior à Data Inicial');\r\n    }\r\n\r\n    if (!isEmpty(formData.dtPrevistaPagamento) && compare(formData.dtPrevistaPagamento, parentData.dataAdmissao) < 0) {\r\n      erros.push('A Data Prevista Pagamento não pode ser inferior à Data de Admissão');\r\n    }\r\n\r\n    if (parseInt(formData.codigoConvocacao, 10) < 1) {\r\n      erros.push('Código de Convocação - Campo não pode ser inferior a 1.');\r\n    }\r\n\r\n    parentData.trabalhosIntermitentes.forEach(cadastro => {\r\n      const isInsert = props.selectedItem === undefined && isEmpty(formData.id) && isEmpty(cadastro.id);\r\n      if (formData.id !== cadastro.id || isInsert) {\r\n        if (!isEmpty(formData.dtInicio) && compare(formData.dtInicio, cadastro.dtInicio) >= 0 && compare(formData.dtInicio, cadastro.dtFim) < 1) {\r\n          erros.push('A Data Inicial não pode estar num período de trabalho intermitente já cadastrado');\r\n        }\r\n\r\n        if (!isEmpty(formData.dtFim) && compare(formData.dtFim, cadastro.dtInicio) >= 0 && compare(formData.dtFim, cadastro.dtFim) < 1) {\r\n          erros.push('A Data Final não pode estar num período de trabalho intermitente já cadastrado');\r\n        }\r\n\r\n        if (!isEmpty(formData.dtInicio) && !isEmpty(formData.dtFim)) {\r\n          const checkA = compare(cadastro.dtInicio, formData.dtInicio) >= 0 && compare(cadastro.dtInicio, formData.dtFim) < 1;\r\n          const checkB = compare(cadastro.dtFim, formData.dtInicio) >= 0 && compare(cadastro.dtFim, formData.dtFim) < 1;\r\n\r\n          if (checkA || checkB) {\r\n            erros.push('Já existe trabalho intermitente cadastrado pertencente ao período de início e fim informados');\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    return erros;\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"codigoConvocacao\"\r\n            label=\"Código de Convocação\"\r\n            isPrependLabel={true}\r\n            formProps={{ ...formProps, validation: { required: true, ...onlyNumber(0, 30) } }}\r\n            tooltipProps={{ message: 'Preencher com o código atribuído pela empresa que identifica a convocação para trabalho intermitente.' }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"dtInicio\"\r\n            label=\"Data Inicial\"\r\n            isPrependLabel={true}\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            tooltipProps={{\r\n              message:\r\n                'Preencher com a data de início da prestação de trabalho intermitente. Deve ser uma data igual ou posterior ' +\r\n                'a data de admissão do trabalhador.',\r\n            }}\r\n            type={InputType.DATE}\r\n            onBlur={dataInicioChange}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"dtFim\"\r\n            label=\"Data Final\"\r\n            isPrependLabel={true}\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            tooltipProps={{\r\n              message: 'Preencher com a data de término da prestação de trabalho intermitente. Deve ser uma data igual ou posterior a data inicial.',\r\n            }}\r\n            type={InputType.DATE}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"dtPrevistaPagamento\"\r\n            label=\"Data Prevista Pagamento\"\r\n            isPrependLabel={true}\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            tooltipProps={{\r\n              message:\r\n                'Preencher com a data prevista para o pagamento da remuneração. Caso a convocação compreenda mais de um período de ' +\r\n                'apuração, preencher com a data prevista para o pagamento da remuneração do último mês. Deve ser uma data igual ou ' +\r\n                'posterior a data de admissão do trabalhador.',\r\n            }}\r\n            type={InputType.DATE}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"indicativoPrestacaoTrabalho\"\r\n            label=\"Indicativo Prestação Trabalho\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            isPrependLabel={true}\r\n            inputDropDownProps={{ optionsProvider: INDICATIVO_PRESTACAO_TRABALHO_ENUM_VALUES }}\r\n            type={InputType.DROP_DOWN}\r\n            onChange={localTrabalhoChange}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Accordion formProps={formProps}>\r\n            <AccordionItem title=\"Local de Trabalho\" disabled={isLocalTrabalhoDisabled}>\r\n              <Row>\r\n                <Col>\r\n                  <CepLogradouroIS\r\n                    id=\"localTrabalhoCepFmt\"\r\n                    formProps={{ ...formProps, validation: { required: isLocalTrabalhoRequired } }}\r\n                    cepManager={cepManager}\r\n                    label=\"CEP\"\r\n                    isPrependLabel={true}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <CepTituloIS\r\n                    id=\"localTrabalhoTipoLogradouro\"\r\n                    formProps={{ ...formProps, validation: { required: isLocalTrabalhoRequired } }}\r\n                    label=\"Tipo\"\r\n                    isPrependLabel={true}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <InputGroupInline\r\n                    id=\"localTrabalhoLogradouro\"\r\n                    label=\"Logradouro\"\r\n                    formProps={{ ...formProps, validation: { required: isLocalTrabalhoRequired, maxLength: 80 } }}\r\n                    isPrependLabel={true}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col md={5}>\r\n                  <InputGroupInline\r\n                    id=\"localTrabalhoNumero\"\r\n                    label=\"Número\"\r\n                    formProps={{ ...formProps, validation: { required: isLocalTrabalhoRequired, maxLength: 10 } }}\r\n                    isPrependLabel={true}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <InputGroupInline\r\n                    id=\"localTrabalhoComplemento\"\r\n                    label=\"Complemento\"\r\n                    formProps={{ ...formProps, validation: { maxLength: 60 } }}\r\n                    isPrependLabel={true}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <CepUFIS\r\n                    id=\"localTrabalhoUf\"\r\n                    formProps={{ ...formProps, validation: { required: isLocalTrabalhoRequired } }}\r\n                    label=\"UF\"\r\n                    isPrependLabel={true}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <CepLocalidadeIS\r\n                    id=\"localTrabalhoCidade\"\r\n                    formProps={{ ...formProps, validation: { required: isLocalTrabalhoRequired } }}\r\n                    label=\"Cidade\"\r\n                    isPrependLabel={true}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <CepBairroIS\r\n                    id=\"localTrabalhoBairro\"\r\n                    formProps={{ ...formProps, validation: { required: isLocalTrabalhoRequired } }}\r\n                    label=\"Bairro\"\r\n                    isPrependLabel={true}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </AccordionItem>\r\n            <AccordionItem title=\"Horário\" open={isLocalTrabalhoDisabled}>\r\n              <Row>\r\n                <Col>\r\n                  <QuadroHorarioIS\r\n                    id=\"quadroHorario\"\r\n                    formProps={{ ...formProps, validation: { required: true } }}\r\n                    label=\"Quadro de Horário\"\r\n                    isPrependLabel={true}\r\n                    onChange={verificarQuadroHorario}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              {condicional(\r\n                exibirAlertaHorario,\r\n                <>\r\n                  <Row>\r\n                    <Col>\r\n                      <h6 className=\"text-center\" style={{ color: CALIMA_DANGER, marginBottom: 15 }}>\r\n                        O Quadro de horário selecionado não é fixo, a Descrição da Jornada de Trabalho será utilizada.\r\n                      </h6>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <InputGroupInline\r\n                        id=\"descricaoJornadaTrabalho\"\r\n                        label=\"Descrição da Jornada de Trabalho\"\r\n                        formProps={{ ...formProps, validation: { maxLength: 999 } }}\r\n                        isPrependLabel={true}\r\n                        tooltipProps={{ message: 'Caso o Quadro de horário não seja fixo a Descrição da Jornada de Trabalho será utilizada.' }}\r\n                        type={InputType.TEXT_AREA}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </>\r\n              )}\r\n            </AccordionItem>\r\n          </Accordion>\r\n        </Col>\r\n      </Row>\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default VinculoTrabalhoIntermitenteEditView;\r\n","export const TRANSFERENCIA_TRABALHADOR_OUTRA_EMPRESA_MESMO_RAMO = {\r\n  label: 'Transferência de empregado para empresa do mesmo grupo econômico',\r\n  value: 'TRANSFERENCIA_TRABALHADOR_OUTRA_EMPRESA_MESMO_RAMO',\r\n};\r\nexport const TRANSFERENCIA_TRABALHADOR_EMPRESA_CONSORCIADA = {\r\n  label: 'Transferência de empresa consorciada ou de consórcio',\r\n  value: 'TRANSFERENCIA_TRABALHADOR_EMPRESA_CONSORCIADA',\r\n};\r\nexport const TRANSFERENCIA_TRABALHADOR_MOTIVO_SUCESSAO = {\r\n  label: 'Transferência por motivo de sucessão, incorporação, cisão ou fusão',\r\n  value: 'TRANSFERENCIA_TRABALHADOR_MOTIVO_SUCESSAO',\r\n};\r\n\r\nexport const ESOCIAL_MOTIVO_DESLIGAMENTO_ENUM_VALUES = [\r\n  TRANSFERENCIA_TRABALHADOR_OUTRA_EMPRESA_MESMO_RAMO,\r\n  TRANSFERENCIA_TRABALHADOR_EMPRESA_CONSORCIADA,\r\n  TRANSFERENCIA_TRABALHADOR_MOTIVO_SUCESSAO,\r\n];\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Col, Modal, ModalBody, ModalFooter, ModalHeader, Row } from 'reactstrap';\r\nimport {\r\n  AlertType,\r\n  CALIMA_DANGER,\r\n  CALIMA_ORANGE,\r\n  ErroList,\r\n  InputGroupInline,\r\n  InputType,\r\n  isEmpty,\r\n  parseDateToRef,\r\n  ProcessBar,\r\n  SearchExpression,\r\n} from 'summer';\r\nimport { TransferenciaVinculo } from '../../../../models/dtos/mfp/transferenciaVinculo';\r\nimport { Vinculo } from '../../../../models/dtos/mfp/vinculo';\r\nimport { AFASTAMENTO_ENUM_VALUES, AFASTAMENTO_TRANSFERENCIA_ENUM_VALUES } from '../../../../models/enumerated/mfp/afastamentoEnum';\r\nimport { SEM_VINCULO_ESOCIAL_VALUES } from '../../../../models/enumerated/mfp/categoriaEnum';\r\nimport { ESOCIAL_MOTIVO_DESLIGAMENTO_ENUM_VALUES } from '../../../../models/enumerated/mfp/eSocialMotivoDesligamentoEnum';\r\nimport { transferirVinculo } from '../../../../services/mfp.service';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../../store/ducks/global.duck';\r\nimport EnumUtil from '../../../../utilities/enum.util';\r\nimport EsocialUtil from '../../../../utilities/esocial.util';\r\nimport { promisedAlert } from '../../../../utilities/vinculo.util';\r\nimport EmpresaIS from '../../../components/ger/empresaIS/EmpresaIS';\r\nimport QuadroHorarioIS from '../../../components/mfp/quadroHorarioIS/QuadroHorarioIS';\r\nimport VinculoIS from '../../../components/mfp/vinculoIS/VinculoIS';\r\n\r\ninterface VinculoTransferenciaModalViewProps {\r\n  onClose?: () => void;\r\n  vinculo?: Vinculo;\r\n}\r\n\r\nconst VinculoTransferenciaModalView: FC<VinculoTransferenciaModalViewProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const formProps = useForm<TransferenciaVinculo>({ defaultValues: { vinculo: props.vinculo }, mode: 'onBlur' });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [showInfoMesmaRaizCNPJ, setShowInfoMesmaRaizCNPJ] = useState(false);\r\n  const [showInfoRaizCNPJDiferente, setShowInfoRaizCNPJDiferente] = useState(false);\r\n  const [showInfoTransferenciaEmpresa, setShowInfoTransferenciaEmpresa] = useState(false);\r\n  const [disabledQuadroHorario, setDisabledQuadroHorario] = useState(true);\r\n  const [podeInformarMotivoEsocial, setPodeInformarMotivoEsocial] = useState(false);\r\n  const [isNotVinculoTSVE, setIsNotVinculoTSVE] = useState(true);\r\n  const [tooltip, setTooltip] = useState(null);\r\n  const [quadroHorarioSearchExpression, setQuadroHorarioSearchExpression] = useState<SearchExpression>(null);\r\n\r\n  useEffect(\r\n    () => {\r\n      setTimeout(() => {\r\n        formProps.setValue('usuario', globalReducer.globalParameter.usuario);\r\n        formProps.setValue('empresaAtual', globalReducer.globalParameter.empresa);\r\n        setIsNotVinculoTSVE(!EnumUtil.contains(SEM_VINCULO_ESOCIAL_VALUES, props.vinculo.categoria));\r\n      }, 700);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const getQuadroSearchExpressions = () => {\r\n    const searchExpressions: SearchExpression[] = [];\r\n    if (quadroHorarioSearchExpression) {\r\n      searchExpressions.push(quadroHorarioSearchExpression);\r\n    }\r\n    return searchExpressions;\r\n  };\r\n\r\n  const empresaChange = value => {\r\n    formProps.setValue([{ motivoEsocial: null }, { quadroHorario: null }]);\r\n\r\n    setDisabledQuadroHorario(isEmpty(value));\r\n\r\n    if (isNotVinculoTSVE && value) {\r\n      if (value.empresaMFP) {\r\n        let caracterizaTransferencia = true;\r\n\r\n        if (globalReducer.globalParameter.empresa.cnpj) {\r\n          const raizCnpjOrigem = globalReducer.globalParameter.empresa.cnpj.slice(0, 8);\r\n          const raizCnpjDestino = value.cnpj.slice(0, 8);\r\n          caracterizaTransferencia = raizCnpjOrigem !== raizCnpjDestino;\r\n        } else {\r\n          setShowInfoTransferenciaEmpresa(true);\r\n        }\r\n\r\n        formProps.setValue('caracterizaTransferencia', caracterizaTransferencia);\r\n\r\n        setPodeInformarMotivoEsocial(caracterizaTransferencia);\r\n        setShowInfoRaizCNPJDiferente(caracterizaTransferencia);\r\n        setShowInfoMesmaRaizCNPJ(!caracterizaTransferencia);\r\n\r\n        setQuadroHorarioSearchExpression({\r\n          fieldName: 'empresaMFP.id',\r\n          value: value.empresaMFP.id,\r\n        });\r\n      } else {\r\n        promisedAlert(\r\n          'A empresa selecionada não está configurada para o Módulo Folha de Pagamento. Para configurá-la acesse Manutenção > Configurações > Empresa',\r\n          AlertType.INFORMATION\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const afastamentoChange = value => {\r\n    setTooltip(value ? { message: EsocialUtil.getToolTipFmt(EnumUtil.find(AFASTAMENTO_ENUM_VALUES, value)) } : null);\r\n  };\r\n\r\n  const validateExtras = formData => {\r\n    const erros = [];\r\n\r\n    if (formData.empresaDestino) {\r\n      if (formData.empresaDestino.id === globalReducer.globalParameter.empresa.id) {\r\n        erros.push('Empresa selecionada é a atual do vínculo.');\r\n      } else {\r\n        if (formData.empresaDestino.empresaMFP) {\r\n          const selecionadaPossuiGrupoEvento =\r\n            formData.empresaDestino.grupoEmpresa &&\r\n            formData.empresaDestino.grupoEmpresa.grupoEmpresaConfig &&\r\n            formData.empresaDestino.grupoEmpresa.grupoEmpresaConfig.grupoEvento;\r\n\r\n          const atualPossuiGrupoEvento =\r\n            globalReducer.globalParameter.empresa.grupoEmpresa &&\r\n            globalReducer.globalParameter.empresa.grupoEmpresa.grupoEmpresaConfig &&\r\n            globalReducer.globalParameter.empresa.grupoEmpresa.grupoEmpresaConfig.grupoEvento;\r\n\r\n          if (selecionadaPossuiGrupoEvento && atualPossuiGrupoEvento) {\r\n            if (\r\n              formData.empresaDestino.grupoEmpresa.grupoEmpresaConfig.grupoEvento.id !==\r\n              globalReducer.globalParameter.empresa.grupoEmpresa.grupoEmpresaConfig.grupoEvento.id\r\n            ) {\r\n              erros.push('Empresa selecionada deve ter o mesmo grupo de eventos da empresa atual.');\r\n            }\r\n          } else {\r\n            if (!atualPossuiGrupoEvento) {\r\n              erros.push('Empresa atual não possui grupo de eventos configurado.');\r\n            }\r\n            if (!selecionadaPossuiGrupoEvento) {\r\n              erros.push('Empresa selecionada não possui grupo de eventos configurado.');\r\n            }\r\n          }\r\n        } else {\r\n          erros.push('Empresa selecionada não está configurada para o Módulo Folha de Pagamento.');\r\n        }\r\n      }\r\n    }\r\n\r\n    if (formData.data && parseInt(parseDateToRef(formData.data), 10) <= parseInt(globalReducer.globalParameter.empresaMFP.referencia, 10)) {\r\n      erros.push('Data da transferência não pode ser menor ou igual a referência atual.');\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  const onConfirm = async () => {\r\n    const check = await formProps.triggerValidation();\r\n    if (check) {\r\n      const values = formProps.getValues();\r\n      const erros = validateExtras(values);\r\n      if (erros.length > 0) {\r\n        promisedAlert(<ErroList erros={erros} />, AlertType.ERROR);\r\n      } else {\r\n        transferirVinculo(values, {\r\n          thenFunction: () => {\r\n            promisedAlert(\r\n              'O sistema está realizando a transferência. Uma notificação será exibida quando estiver finalizado.',\r\n              AlertType.INFORMATION\r\n            ).then(() => {\r\n              if (!globalReducer.headerDrawerToggle) {\r\n                dispatch(toggleHeaderDrawer());\r\n              }\r\n              props.onClose();\r\n            });\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal centered={true} backdrop=\"static\" isOpen={true} toggle={props.onClose} size=\"lg\">\r\n      <ModalHeader toggle={props.onClose}>Transferência de Vínculo</ModalHeader>\r\n      <ModalBody>\r\n        <Row>\r\n          <Col className=\"text-center\">\r\n            <b>Atenção</b>\r\n            <br />\r\n            <p>\r\n              Os vínculos que se enquadram nas categorias de TSVE (Trabalhador Sem Vínculo de Emprego) do eSocial\r\n              <span style={{ color: CALIMA_DANGER }}> NÃO</span> geram eventos pendentes ao efetuar a tranferência.\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <VinculoIS\r\n              id=\"vinculo\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              label=\"Vínculo\"\r\n              isPrependLabel={true}\r\n              tooltipProps={{ message: 'Vínculo a ser transferido' }}\r\n              disabled={true}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <EmpresaIS\r\n              id=\"empresaDestino\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              label=\"Empresa\"\r\n              isPrependLabel={true}\r\n              onChange={empresaChange}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              isPrependLabel={true}\r\n              id=\"data\"\r\n              label=\"Data de Transferência\"\r\n              type={InputType.DATE}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <QuadroHorarioIS\r\n              id=\"quadroHorario\"\r\n              formProps={{ ...formProps, validation: { required: isNotVinculoTSVE } }}\r\n              label=\"Quadro de Horário\"\r\n              isPrependLabel={true}\r\n              disabled={disabledQuadroHorario}\r\n              searchExpressions={getQuadroSearchExpressions}\r\n              tooltipProps={{ message: 'Selecione o Quadro de Horários que será utilizado na empresa de destino.' }}\r\n            />\r\n            <p className=\"text-center\" style={{ color: CALIMA_DANGER }}>\r\n              (O Quadro de Horários é necessário para a geração dos eventos pendentes do eSocial)\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"motivo\"\r\n              label=\"Motivo SEFIP\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              isPrependLabel={true}\r\n              placeholder=\"Selecione o Motivo SEFIP\"\r\n              inputDropDownProps={{ optionsProvider: AFASTAMENTO_TRANSFERENCIA_ENUM_VALUES }}\r\n              type={InputType.DROP_DOWN}\r\n              onChange={afastamentoChange}\r\n              tooltipProps={tooltip}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"motivoEsocial\"\r\n              label=\"Motivo eSocial\"\r\n              formProps={{ ...formProps, validation: { required: podeInformarMotivoEsocial } }}\r\n              isPrependLabel={true}\r\n              placeholder=\"Selecione o Motivo eSocial\"\r\n              inputDropDownProps={{ optionsProvider: ESOCIAL_MOTIVO_DESLIGAMENTO_ENUM_VALUES }}\r\n              type={InputType.DROP_DOWN}\r\n              disabled={!podeInformarMotivoEsocial}\r\n              tooltipProps={{ message: 'Motivo de Transferência do eSocial.' }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        {showInfoMesmaRaizCNPJ && (\r\n          <Row>\r\n            <Col className=\"text-center\">\r\n              <p style={{ color: CALIMA_ORANGE }}>Transferência Entre Matriz e Filial (mesma raiz CNPJ)</p>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n        {showInfoRaizCNPJDiferente && (\r\n          <Row>\r\n            <Col className=\"text-center\">\r\n              <p style={{ color: CALIMA_ORANGE }}>Transferência Entre Empresas {!showInfoTransferenciaEmpresa && '(raiz CNPJ diferente)'}</p>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <ProcessBar handleClose={props.onClose} handleSubmit={onConfirm} btnSubmitIcon=\"check\" btnCloseLabel=\"Cancel\" btnSubmitLabel=\"Confirmar\" />\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default VinculoTransferenciaModalView;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mfp/valeTransporte';\r\n\r\nconst ValeTransporteIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      type={InputType.INPUT_SEARCH}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'ValeTransporteSearchView',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ValeTransporteIS;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline, InputType, onlyNumber } from 'summer';\r\nimport { VinculoValeTransporte } from '../../../../models/dtos/mfp/vinculoValeTransporte';\r\nimport {\r\n  DIAS_UTEIS,\r\n  INFORMAR_NRO_DIAS,\r\n  INFORMAR_QUANTIDADE,\r\n  TIPO_CALCULO_VALE_TRANSPORTE_ENUM_VALUES,\r\n} from '../../../../models/enumerated/mfp/tipoCalculoValeTransporteEnum';\r\nimport EventoIS from '../../../components/mfp/eventoIS/EventoIS';\r\nimport ValeTransporteIS from '../../../components/mfp/valeTransporteIS/ValeTransporteIS';\r\n\r\nconst VinculoValeTransporteEditView: FC<DetailEditViewFormProps<VinculoValeTransporte>> = props => {\r\n  const formProps = useForm<VinculoValeTransporte>({ defaultValues: props.selectedItem || {}, mode: 'onBlur' });\r\n\r\n  const [labelQuantidade, setLabelQuantidade] = useState('Quantidade por Turno');\r\n  const [tooltipQuantidade, setTooltipQuantidade] = useState(null);\r\n  const [diasCalculoRequired, setDiasCalculoRequired] = useState(false);\r\n  const [diasCalculoDisabled, setDiasCalculoDisabled] = useState(true);\r\n\r\n  const ajustarTelaTipoCalculoVT = value => {\r\n    let tooltip = null;\r\n\r\n    const diasCalculoReq = value === INFORMAR_NRO_DIAS.value;\r\n    const informarQuantidade = value === INFORMAR_QUANTIDADE.value;\r\n    const informarQuantidadePorDia = value === DIAS_UTEIS.value || value === INFORMAR_NRO_DIAS.value;\r\n\r\n    if (informarQuantidadePorDia) {\r\n      setLabelQuantidade('Quantidade por Dia');\r\n    } else if (informarQuantidade) {\r\n      setLabelQuantidade('Quantidade Total');\r\n    } else {\r\n      setLabelQuantidade('Quantidade por Turno');\r\n      tooltip = { message: 'Quantidade de vales por turno. O cadastro do turno é efetuado na manutenção do quadro de horário' };\r\n    }\r\n\r\n    setTooltipQuantidade(tooltip);\r\n    setDiasCalculoRequired(diasCalculoReq);\r\n    setDiasCalculoDisabled(!diasCalculoReq);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (props.selectedItem && props.selectedItem.tipoCalculo) {\r\n        ajustarTelaTipoCalculoVT(props.selectedItem.tipoCalculo);\r\n      }\r\n    }, 700);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (diasCalculoDisabled) {\r\n      formProps.triggerValidation('diasCalculo');\r\n    }\r\n  }, [diasCalculoDisabled]);\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps}>\r\n      <Row>\r\n        <Col>\r\n          <ValeTransporteIS\r\n            id=\"valeTransporte\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            label=\"Vale Transporte\"\r\n            isPrependLabel={true}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"tipoCalculo\"\r\n            label=\"Tipo de Cálculo\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            isPrependLabel={true}\r\n            placeholder=\"Selecione o Tipo de Cálculo\"\r\n            inputDropDownProps={{ optionsProvider: TIPO_CALCULO_VALE_TRANSPORTE_ENUM_VALUES }}\r\n            type={InputType.DROP_DOWN}\r\n            onChange={ajustarTelaTipoCalculoVT}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <EventoIS id=\"evento\" formProps={{ ...formProps, validation: { required: true } }} label=\"Evento\" isPrependLabel={true} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"quantidade\"\r\n            label={labelQuantidade}\r\n            formProps={{ ...formProps, validation: { required: true, ...onlyNumber(1, 4), max: 9999 } }}\r\n            isPrependLabel={true}\r\n            type={InputType.NUMBER}\r\n            tooltipProps={tooltipQuantidade}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"diasCalculo\"\r\n            label=\"Dias de Cálculo\"\r\n            formProps={{ ...formProps, validation: { required: diasCalculoRequired, ...onlyNumber(1, 2), max: 31 } }}\r\n            isPrependLabel={true}\r\n            type={InputType.NUMBER}\r\n            disabled={diasCalculoDisabled}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default VinculoValeTransporteEditView;\r\n","import { saveAs } from 'file-saver';\r\nimport React, { FC, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Col, Modal, ModalBody, ModalFooter, ModalHeader, Row } from 'reactstrap';\r\nimport { AlertType, Checkbox, compare, ErroList, InputGroupInline, InputType, isEmpty, onlyNumber, ProcessBar, progressActions } from 'summer';\r\nimport { Reintegracao } from '../../../../models/dtos/mfp/reintegracao';\r\nimport { Vinculo } from '../../../../models/dtos/mfp/vinculo';\r\nimport { NR_LEI_ANISTIA_ENUM_VALUES } from '../../../../models/enumerated/mfp/nrLeiAnistiaEnum';\r\nimport { ANISTIAL_LEGAL, DECISAO_JUDICIAL, TIPO_REINTEGRACAO_ENUM_VALUES } from '../../../../models/enumerated/mfp/tipoReintegracaoEnum';\r\nimport { reintegrarVinculo } from '../../../../services/mfp.service';\r\nimport { fileDownload } from '../../../../services/report.service';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport { promisedAlert, showLoading } from '../../../../utilities/vinculo.util';\r\nimport VinculoIS from '../../../components/mfp/vinculoIS/VinculoIS';\r\n\r\ninterface VinculoReintegracaoModalViewProps {\r\n  onClose?: () => void;\r\n  vinculo?: Vinculo;\r\n}\r\n\r\nconst VinculoReintegracaoModalView: FC<VinculoReintegracaoModalViewProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const formProps = useForm<Reintegracao>({ defaultValues: { vinculo: props.vinculo }, mode: 'onBlur' });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [isProcesso, setIsProcesso] = useState(false);\r\n  const [isLeiAnistia, setIsLeiAnistia] = useState(false);\r\n\r\n  const tipoReintegracaoChange = value => {\r\n    const processo = value === DECISAO_JUDICIAL.value;\r\n    const anistia = value === ANISTIAL_LEGAL.value;\r\n\r\n    setIsProcesso(processo);\r\n    setIsLeiAnistia(anistia);\r\n\r\n    if (processo) {\r\n      formProps.setValue('numeroLeiAnistia', null);\r\n    } else if (anistia) {\r\n      formProps.setValue('numeroProcesso', null);\r\n    } else {\r\n      formProps.setValue([{ numeroLeiAnistia: null }, { numeroProcesso: null }]);\r\n    }\r\n  };\r\n\r\n  const completarNumeroProcesso = () => {\r\n    formProps.setValue('numeroProcesso', formProps.getValues().numeroProcesso.padStart(20, '0'));\r\n  };\r\n\r\n  const validateExtras = formData => {\r\n    const erros = [];\r\n\r\n    if (formData.tipoReintegracao === DECISAO_JUDICIAL.value && isEmpty(formData.numeroProcesso)) {\r\n      erros.push('Para o tipo de Reintegracão por Decisão Judicial é obrigatório informar o número do processo.');\r\n    }\r\n\r\n    if (formData.tipoReintegracao === ANISTIAL_LEGAL.value && isEmpty(formData.numeroLeiAnistia)) {\r\n      erros.push('Para o tipo de Reintegracão por Anistia Legal é obrigatório informar o número da Lei de Anistia.');\r\n    }\r\n\r\n    if (!isEmpty(formData.dataEfetivoRetorno) && compare(formData.dataEfetivoRetorno, formData.vinculo.recisao.dtAfastamento) <= 0) {\r\n      erros.push('Data do Efetivo Retorno deve ser posterior à data de desligamento do trabalhador');\r\n    }\r\n\r\n    if (!isEmpty(formData.dataEfetivoRetorno) && !isEmpty(formData.dataReintegracao)) {\r\n      if (compare(formData.dataReintegracao, formData.dataEfetivoRetorno) === 1) {\r\n        erros.push('Data da Reintegração deve ser uma data igual ou anterior à data do efetivo retorno ao trabalho');\r\n      }\r\n      if (compare(formData.dataReintegracao, formData.vinculo.recisao.dtAfastamento) <= 0) {\r\n        erros.push('Data da Reintegração deve ser posterior à data de desligamento do trabalhador');\r\n      }\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  const onConfirm = async () => {\r\n    const check = await formProps.triggerValidation();\r\n    if (check) {\r\n      const values = formProps.getValues();\r\n      const erros = validateExtras(values);\r\n\r\n      if (erros.length > 0) {\r\n        promisedAlert(<ErroList erros={erros} />, AlertType.ERROR);\r\n      } else {\r\n        promisedAlert(\r\n          'Ao final do processo de Reintegração do Trabalhador a Rescisão será apagada (juntamente com seus cálculos caso existam) ' +\r\n            'esse é um processo irreversível. Deseja Continuar?'\r\n        ).then(() => {\r\n          dispatch(showLoading());\r\n          reintegrarVinculo(\r\n            {\r\n              empresa: { ...globalReducer.globalParameter.empresa, empresaMFP: globalReducer.globalParameter.empresaMFP },\r\n              reintegracao: values,\r\n              usuario: globalReducer.globalParameter.usuario,\r\n              vinculo: values.vinculo,\r\n            },\r\n            {\r\n              thenFunction: res => {\r\n                if (res) {\r\n                  promisedAlert(\r\n                    'Não foi possível realizar a reintegração do vínculo. Foi gerado um relatório de pendências que precisam ser ajustadas.',\r\n                    AlertType.ERROR\r\n                  ).then(() => {\r\n                    fileDownload(res.split('<')[1], {\r\n                      errorFunction: mensagem => {\r\n                        dispatch(progressActions.hideProgress());\r\n                        promisedAlert(mensagem, AlertType.ERROR);\r\n                      },\r\n                      thenFunction: response => {\r\n                        dispatch(progressActions.hideProgress());\r\n                        const filename = response.headers['content-disposition'].split('filename=')[1];\r\n                        saveAs(response.data, filename);\r\n                      },\r\n                    });\r\n                  });\r\n                } else {\r\n                  dispatch(progressActions.hideProgress());\r\n                  promisedAlert(\r\n                    'Reintegração realizada com sucesso. Evento Pendente adicionado para envio ao eSocial. Para verificar os detalhes ' +\r\n                      'do mesmo acesse: Módulo Folha de Pagamento > eSocial > Exportação > Monitor de Eventos.',\r\n                    AlertType.INFORMATION\r\n                  );\r\n                }\r\n              },\r\n            }\r\n          );\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={true} centered={true} backdrop=\"static\" toggle={props.onClose} size=\"lg\">\r\n      <ModalHeader toggle={props.onClose}>Reintegração de Vínculo</ModalHeader>\r\n      <ModalBody>\r\n        <Row>\r\n          <Col>\r\n            <VinculoIS\r\n              id=\"vinculo\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              label=\"Vínculo\"\r\n              isPrependLabel={true}\r\n              tooltipProps={{ message: 'Vínculo a ser transferido' }}\r\n              disabled={true}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"tipoReintegracao\"\r\n              label=\"Tipo de Reintegração\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              isPrependLabel={true}\r\n              placeholder=\"Selecione o Tipo de Reintegração\"\r\n              inputDropDownProps={{ optionsProvider: TIPO_REINTEGRACAO_ENUM_VALUES }}\r\n              type={InputType.DROP_DOWN}\r\n              onChange={tipoReintegracaoChange}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"dataReintegracao\"\r\n              label=\"Data Reintegração (Efeito)\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              isPrependLabel={true}\r\n              type={InputType.DATE}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"numeroProcesso\"\r\n              label=\"Número do Processo\"\r\n              formProps={{ ...formProps, validation: { ...onlyNumber(0, 20), maxLength: 20 } }}\r\n              isPrependLabel={true}\r\n              disabled={!isProcesso}\r\n              onBlur={completarNumeroProcesso}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"dataEfetivoRetorno\"\r\n              label=\"Data Efetivo Retorno\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              isPrependLabel={true}\r\n              type={InputType.DATE}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"numeroLeiAnistia\"\r\n              label=\"Número Lei de Anistia\"\r\n              formProps={formProps}\r\n              isPrependLabel={true}\r\n              inputDropDownProps={{ optionsProvider: NR_LEI_ANISTIA_ENUM_VALUES }}\r\n              type={InputType.DROP_DOWN}\r\n              disabled={!isLeiAnistia}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Checkbox id=\"remuneracaoPagaEmJuizo\" formProps={formProps} label=\"Remunerações/Contribuições pagas em Juizo\" />\r\n          </Col>\r\n        </Row>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <ProcessBar handleClose={props.onClose} handleSubmit={onConfirm} btnSubmitIcon=\"check\" btnCloseLabel=\"Cancel\" btnSubmitLabel=\"Confirmar\" />\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default VinculoReintegracaoModalView;\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, ListGroup, ListGroupItem, Row } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertType,\r\n  boolColumn,\r\n  Box,\r\n  Checkbox,\r\n  cnpjFormatter,\r\n  compare,\r\n  decimalFormatter,\r\n  DefaultSortProps,\r\n  DetailManagerForm,\r\n  DetailManagerFormProps,\r\n  dockActions,\r\n  DockItem,\r\n  DockItemList,\r\n  EditForm,\r\n  EditViewProps,\r\n  enumColumn,\r\n  findById,\r\n  getSelectedItem,\r\n  InputGroupInline,\r\n  InputType,\r\n  isEmpty,\r\n  onlyAlphaNum,\r\n  onlyNumber,\r\n  OrderType,\r\n  percentualFormatter,\r\n  progressActions,\r\n  SearchExpression,\r\n  Tab,\r\n  TabGroup,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport useCepManager from '../../../../hooks/useCepManager';\r\nimport { CepBairro } from '../../../../models/dtos/ger/cepBairro';\r\nimport { CepLocalidade } from '../../../../models/dtos/ger/cepLocalidade';\r\nimport { CepLogradouro } from '../../../../models/dtos/ger/cepLogradouro';\r\nimport { CepTitulo } from '../../../../models/dtos/ger/cepTitulo';\r\nimport { CepUF } from '../../../../models/dtos/ger/cepUF';\r\nimport { CLASS_NAME, Vinculo } from '../../../../models/dtos/mfp/vinculo';\r\nimport { SIMPLES_NACIONAL } from '../../../../models/enumerated/ger/tipoTributacaoEnum';\r\nimport {\r\n  AUTONOMO_CONTRIB_REMUNERACAO,\r\n  CATEGORIA_ENUM_VALUES,\r\n  CI_EMPRESARIO_SOCIO,\r\n  DIRETOR_EMPRESARIO_NAO_EMP_SEM_FGTS,\r\n  EMPREGADO_CONTRATO_VERDE_AMARELO_COM_ANT_FGTS,\r\n  EMPREGADO_CONTRATO_VERDE_AMARELO_SEM_ANT_FGTS,\r\n  EMPREGADO_DOMESTICO,\r\n  EMPREGADO_TRABALHADOR_INTERMITENTE,\r\n  ESTAGIARIO,\r\n  MENOR_APRENDIZ,\r\n  TRABALHADOR_TEMPORARIO,\r\n  TRANSPORTADOR_VALUES,\r\n} from '../../../../models/enumerated/mfp/categoriaEnum';\r\nimport {\r\n  CONTRATO_TRABALHO_ENUM_VALUES,\r\n  PRAZO_DETERMINADO_COM_CLAUSULA_DE_RESCISAO,\r\n  PRAZO_DETERMINADO_SEM_CLAUSULA_DE_RESCISAO,\r\n  PRAZO_INDETERMINADO,\r\n} from '../../../../models/enumerated/mfp/contratoTrabalhoEnum';\r\nimport { EXPOSICAO_AGENTE_NOCIVO_ENUM_VALUES } from '../../../../models/enumerated/mfp/exposicaoAgenteNocivoEnum';\r\nimport { GPS_SIMPLES_NACIONAL_ENUM_VALUES } from '../../../../models/enumerated/mfp/gpsSimplesNacionalEnum';\r\nimport {\r\n  HIPOTESE_LEGAL_CONTRATACAO_TRABALHADOR_TEMPORARIO_ENUM_VALUES,\r\n  NECESSIDADE_SUBTIUICAO_TRANSITORIA,\r\n} from '../../../../models/enumerated/mfp/hipoteseLegalContratacaoTrabalhadorTemporarioEnum';\r\nimport { NATUREZA_ESTAGIO_ENUM_VALUES } from '../../../../models/enumerated/mfp/naturezaEstagioEnum';\r\nimport { NIVEL_ESTAGIO_ENUM_VALUES } from '../../../../models/enumerated/mfp/nivelEstagioEnum';\r\nimport { NR_LEI_ANISTIA_ENUM_VALUES } from '../../../../models/enumerated/mfp/nrLeiAnistiaEnum';\r\nimport { TIPO_ADMISSAO_ENUM_VALUES, TRANSFERENCIA } from '../../../../models/enumerated/mfp/tipoAdmissaoEnum';\r\nimport { TIPO_CALCULO_VALE_TRANSPORTE_ENUM_VALUES } from '../../../../models/enumerated/mfp/tipoCalculoValeTransporteEnum';\r\nimport { TIPO_CONTA_ENUM_VALUES } from '../../../../models/enumerated/mfp/tipoContaEnum';\r\nimport { TIPO_INCLUSAO_CONTRATO_TEMPORARIO_ENUM_VALUES } from '../../../../models/enumerated/mfp/tipoInclusaoContratoTemporarioEnum';\r\nimport { TIPO_INSTRUMENTO_SITUACAO_ENSEJADORA_REMUNERACAO_ENUM_VALUES } from '../../../../models/enumerated/mfp/tipoInstrumentoSituacaoEnsejadoraRemuneracaoEnum';\r\nimport { TIPO_PAGAMENTO_MFP_ENUM_VALUES } from '../../../../models/enumerated/mfp/tipoPagamentoMFPEnum';\r\nimport { TIPO_PENSAO_ENUM_VALUES } from '../../../../models/enumerated/mfp/tipoPensaoEnum';\r\nimport { TIPO_REGIME_JORNADA_TRABALHO_ENUM_VALUES } from '../../../../models/enumerated/mfp/tipoRegimeJornadaTrabalhoEnum';\r\nimport { TIPO_REINTEGRACAO_ENUM_VALUES } from '../../../../models/enumerated/mfp/tipoReintegracaoEnum';\r\nimport { TIPO_TRANSPORTADOR_ENUM_VALUES } from '../../../../models/enumerated/mfp/tipoTransportadorEnum';\r\nimport { VINCULO_PARAM_ENUM_VALUES } from '../../../../models/enumerated/mfp/vinculoParamEnum';\r\nimport { validarSalarioVinculo, validarVinculoBeforePersist } from '../../../../services/mfp.service';\r\nimport { multiPageActions, Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport { MAXIMO_DIAS_EXPERIENCIA_CONTRATO_TRABALHO } from '../../../../utilities/constantes';\r\nimport EnumUtil from '../../../../utilities/enum.util';\r\nimport EsocialUtil from '../../../../utilities/esocial.util';\r\nimport {\r\n  condicional,\r\n  getCargoReferencia,\r\n  getItemAtual,\r\n  getReferenciaAtual,\r\n  getSalarioReferencia,\r\n  isVinculoProfessor,\r\n  numHorasFormatter,\r\n  promisedAlert,\r\n  registrarListasVinculo,\r\n  showLoading,\r\n  valorTotalOutrasRemuneracoes,\r\n} from '../../../../utilities/vinculo.util';\r\nimport CepBairroIS from '../../../components/ger/cepBairroIS/CepBairroIS';\r\nimport CepLocalidadeIS from '../../../components/ger/cepLocalidadeIS/CepLocalidadeIS';\r\nimport CepLogradouroIS from '../../../components/ger/cepLogradouro/CepLogradouroIS';\r\nimport CepTituloIS from '../../../components/ger/cepTituloIS/CepTituloIS';\r\nimport CepUFIS from '../../../components/ger/cepUFIS/CepUFIS';\r\nimport CentroCustoIS from '../../../components/mcg/centroCustoIS/CentroCustoIS';\r\nimport AgenciaIS from '../../../components/mfp/agenciaIS/AgenciaIS';\r\nimport BancoIS from '../../../components/mfp/banco/BancoIS';\r\nimport CboIS from '../../../components/mfp/cboIS/CboIS';\r\nimport InstituicaoEnsinoIS from '../../../components/mfp/instituicaoEnsinoIS/InstituicaoEnsinoIS';\r\nimport ResponsavelMenorAprendizIS from '../../../components/mfp/responsavelMenorAprendizIS/ResponsavelMenorAprendizIS';\r\nimport SindicatoIS from '../../../components/mfp/sindicatoIS/SindicatoIS';\r\nimport TrabalhadorIS from '../../../components/mfp/trabalhadorIS/TrabalhadorIS';\r\nimport AfastamentoEditView from '../afastamento/AfastamentoEditView';\r\nimport ExameEditView from '../exame/ExameEditView';\r\nimport FeriasEditView from '../ferias/FeriasEditView';\r\nimport RescisaoEditView from '../rescisao/RescisaoEditView';\r\nimport VinculoEventoEditView from '../vinculoEvento/VinculoEventoEditView';\r\nimport VinculoTomadorServicoEditView from '../vinculoTomadorServico/VinculoTomadorServicoEditView';\r\nimport VinculoCargoEditView from './VinculoCargoEditView';\r\nimport VinculoDiferencialAcordoEditView from './VinculoDiferencialAcordoEditView';\r\nimport VinculoInternalSearchView from './VinculoInternalSearchView';\r\nimport VinculoPlanoSaudeEditView from './VinculoPlanoSaudeEditView';\r\nimport VinculoPrevidenciaComplementarEditView from './VinculoPrevidenciaComplementarEditView';\r\nimport VinculoQuadroHorarioEditView from './VinculoQuadroHorarioEditView';\r\nimport VinculoSalarioEditView from './VinculoSalarioEditView';\r\nimport VinculoTrabalhoIntermitenteEditView from './VinculoTrabalhoIntermitenteEditView';\r\nimport VinculoTransferenciaModalView from './VinculoTransferenciaModalView';\r\nimport VinculoValeTransporteEditView from './VinculoValeTransporteEditView';\r\n\r\nimport './VinculoEditView.css';\r\nimport VinculoReintegracaoModalView from './VinculoReintegracaoModalView';\r\n\r\ninterface VinculoEditViewProps extends EditViewProps<Vinculo> {}\r\n\r\ninterface ScreenFields {\r\n  cargoAtual?: string;\r\n  tipoSalarioAtual?: string;\r\n  dataInclusaoSalarioAtual?: string;\r\n  valorSalarioAtual?: string;\r\n  numHorasContratadasSalarioAtual?: string;\r\n  outrasRemuneracoesSalarioAtual?: string;\r\n  localTrabalhoBairro?: CepBairro;\r\n  localTrabalhoCep?: string;\r\n  localTrabalhoCepFmt?: CepLogradouro;\r\n  localTrabalhoCidade?: CepLocalidade;\r\n  localTrabalhoComplemento?: string;\r\n  localTrabalhoLogradouro?: string;\r\n  localTrabalhoNumero?: string;\r\n  localTrabalhoTipoLogradouro?: CepTitulo;\r\n  localTrabalhoUf?: CepUF;\r\n}\r\n\r\nconst VinculoEditView: FC<VinculoEditViewProps & RouteComponentProps> = props => {\r\n  const selectedItem = getSelectedItem(props);\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const formProps = useForm<Vinculo & ScreenFields>({\r\n    defaultValues: {\r\n      cargos: [],\r\n      diferenciaisAcordoConvencaoDissidio: [],\r\n      planos: [],\r\n      previdenciasComplementar: [],\r\n      quadrosHorarios: [],\r\n      reintegracoes: [],\r\n      salarios: [],\r\n      trabalhosIntermitentes: [],\r\n      valesTransporte: [],\r\n      ...selectedItem,\r\n    },\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const cepManager = useCepManager(formProps, {\r\n    bairro: 'localTrabalhoBairro',\r\n    cep: 'localTrabalhoCep',\r\n    localidade: 'localTrabalhoCidade',\r\n    nome: 'localTrabalhoLogradouro',\r\n    titulo: 'localTrabalhoTipoLogradouro',\r\n    uf: 'localTrabalhoUf',\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [isSimplesNacional, setIsSimplesNacional] = useState(false);\r\n  const [isTransportador, setIsTransportador] = useState(false);\r\n  const [isIntermitente, setIsIntermitente] = useState(false);\r\n  const [isTrabalhadorTemporario, setIsTrabalhadorTemporario] = useState(false);\r\n  const [isEstagiario, setIsEstagiario] = useState(false);\r\n  const [isMenorAprendiz, setIsMenorAprendiz] = useState(false);\r\n  const [isContratoTempoDeterminado, setIsContratoTempoDeterminado] = useState(false);\r\n  const [isContratoTempoDetComIndic, setIsContratoTempoDetComIndic] = useState(false);\r\n  const [isContratoVerdeAmarelo, setIsContratoVerdeAmarelo] = useState(false);\r\n  const [isLocalTrabalhoRequired, setIsLocalTrabalhoRequired] = useState(false);\r\n  const [exigeCPFTrabSubstituto, setExigeCPFTrabSubstituto] = useState(false);\r\n  const [isTrabalhadorDesabilitado, setIsTrabalhadorDesabilitado] = useState(false);\r\n  const [categoriaTooltip, setCategoriaTooltip] = useState(null);\r\n  const [modal, setModal] = useState(null);\r\n\r\n  useEffect(\r\n    () => {\r\n      registrarListasVinculo(\r\n        formProps,\r\n        ['cargos', 'salarios', 'diferenciaisAcordoConvencaoDissidio', 'quadrosHorarios', 'valesTransporte', 'planos', 'previdenciasComplementar'],\r\n        [\r\n          'empresaMFP',\r\n          'localTrabalhoCep',\r\n          // Campos MPV-936\r\n          'tipoAdesaoBEM',\r\n          'dtAcordoBEM',\r\n          'diasDuracaoAcordo',\r\n          'percentualReducaoCargaHoraria',\r\n          'proximaFerias',\r\n          'recisao',\r\n        ]\r\n      );\r\n\r\n      setTimeout(() => {\r\n        if (selectedItem && selectedItem.id) {\r\n          setIsTrabalhadorDesabilitado(true);\r\n          init();\r\n        } else {\r\n          formProps.setValue('empresaMFP', globalReducer.globalParameter.empresaMFP);\r\n        }\r\n        setDock();\r\n      }, 700);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const init = (data = null) => {\r\n    setIsSimplesNacional(globalReducer.globalParameter.empresa.tipoTributacao === SIMPLES_NACIONAL.value);\r\n\r\n    loadLocalTrabalho(data);\r\n    updateCargoAtual();\r\n    updateSalarioAtual();\r\n    changeCategoria((data || selectedItem).categoria);\r\n  };\r\n\r\n  const loadLocalTrabalho = vinculo => {\r\n    const data = vinculo || selectedItem;\r\n    if (vinculo || (data && data.id)) {\r\n      const cepFmt = isEmpty(data.localTrabalho.cep) ? null : { cep: data.localTrabalho.cep, label: data.localTrabalho.cep };\r\n      formProps.setValue([\r\n        { localTrabalhoBairro: data.localTrabalho.bairro },\r\n        { localTrabalhoCep: data.localTrabalho.cep },\r\n        { localTrabalhoCepFmt: cepFmt },\r\n        { localTrabalhoCidade: data.localTrabalho.cidade },\r\n        { localTrabalhoComplemento: data.localTrabalho.complemento },\r\n        { localTrabalhoLogradouro: data.localTrabalho.logradouro },\r\n        { localTrabalhoNumero: data.localTrabalho.numero },\r\n        { localTrabalhoTipoLogradouro: data.localTrabalho.tipoLogradouro },\r\n        { localTrabalhoUf: data.localTrabalho.uf },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const mergeFormData = (formData, fields) => {\r\n    const values = [];\r\n    fields.forEach(field => {\r\n      values.push({ [field]: formData[field] || null });\r\n    });\r\n    formProps.setValue(values);\r\n  };\r\n\r\n  const openMultiPage = (componente: any, onDockSubmit: (formData) => void = null) => {\r\n    const Page = componente as FC<any>;\r\n    const pageProps = {\r\n      editItemProps: props.editItemProps,\r\n      history: props.history,\r\n      location: props.location,\r\n      match: props.match,\r\n      onDockSubmit,\r\n      openViaDock: true,\r\n      selectedItem: formProps.getValues(),\r\n    };\r\n    dispatch(multiPageActions.showPage(<Page {...pageProps} />));\r\n  };\r\n\r\n  const handleAfastamentoSubmit = formData =>\r\n    mergeFormData(formData, ['movimentacoes', 'tipoAdesaoBEM', 'percentualReducaoCargaHoraria', 'dtAcordoBEM', 'diasDuracaoAcordo']);\r\n\r\n  const handleTomadorServicoSubmit = formData => mergeFormData(formData, ['tomadoresServico']);\r\n  const handleExameSubmit = formData => mergeFormData(formData, ['examesOcupacionais']);\r\n  const handleFeriasSubmit = formData => mergeFormData(formData, ['ferias']);\r\n  const handleRescisaoSubmit = formData => formProps.setValue('recisao', formData);\r\n\r\n  const handleCopiarDadosSubmit = data => {\r\n    setDock();\r\n    if (data) {\r\n      dispatch(showLoading());\r\n      findById({ id: data.id }, CLASS_NAME, {\r\n        thenFunction: (res: Vinculo) => {\r\n          res.id = null;\r\n          res.matricula = null;\r\n          res.recisao = null;\r\n          res.movimentacoes = [];\r\n          res.salarios = [];\r\n          res.ferias = [];\r\n          res.valesTransporte = res.valesTransporte.map(item => ({ ...item, id: null }));\r\n          res.tomadoresServico = res.tomadoresServico.map(item => ({ ...item, id: null }));\r\n          res.quadrosHorarios = res.quadrosHorarios.map(item => ({ ...item, id: null }));\r\n          res.cargos = res.cargos.map(item => ({ ...item, id: null }));\r\n          res.planos = res.planos.map(item => ({ ...item, id: null }));\r\n\r\n          formProps.setValue(Object.keys(res).map(key => ({ [key]: res[key] })));\r\n\r\n          dispatch(progressActions.hideProgress());\r\n\r\n          init(res);\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const closeModal = () => setModal(null);\r\n\r\n  const openFerias = () => openMultiPage(FeriasEditView, handleFeriasSubmit);\r\n  const openRescisao = () => openMultiPage(RescisaoEditView, handleRescisaoSubmit);\r\n  const openExame = () => openMultiPage(ExameEditView, handleExameSubmit);\r\n  const openTomadorServico = () => openMultiPage(VinculoTomadorServicoEditView, handleTomadorServicoSubmit);\r\n  const openAfastamento = () => openMultiPage(AfastamentoEditView, handleAfastamentoSubmit);\r\n  const openEventos = () => openMultiPage(VinculoEventoEditView);\r\n  const openCopiarDados = () =>\r\n    dispatch(multiPageActions.showPage(<VinculoInternalSearchView onSelect={handleCopiarDadosSubmit} onCancel={setDock} />));\r\n\r\n  const openTransferencia = () => setModal(<VinculoTransferenciaModalView vinculo={selectedItem} onClose={closeModal} />);\r\n\r\n  const openReintegracao = () => {\r\n    if (selectedItem && selectedItem.recisao && selectedItem.recisao.dtAfastamento) {\r\n      setModal(<VinculoReintegracaoModalView vinculo={selectedItem} onClose={closeModal} />);\r\n    } else {\r\n      promisedAlert('Só é permitido reintegrar vínculos que possuem rescisão', AlertType.INFORMATION);\r\n    }\r\n  };\r\n\r\n  const setDock = () => {\r\n    dispatch(\r\n      dockActions.createDock(\r\n        <DockItemList>\r\n          {condicional(\r\n            !selectedItem || isEmpty(selectedItem.id),\r\n            <DockItem\r\n              id=\"dockCopiarDados\"\r\n              icon={['fas', 'copy']}\r\n              color=\"dark\"\r\n              text=\"Copiar\"\r\n              tooltipProps={{ message: 'Copiar dados de outro vinculo' }}\r\n              onClick={openCopiarDados}\r\n            />\r\n          )}\r\n          <DockItem id=\"dockFerias\" icon={['fas', 'plane-departure']} color=\"primary\" text=\"Ferias\" onClick={openFerias} />\r\n          <DockItem id=\"dockRecisao\" icon={['fas', 'power-off']} color=\"first\" text=\"Recisão\" onClick={openRescisao} />\r\n          <DockItem\r\n            id=\"dockEventos\"\r\n            icon={['far', 'calendar-alt']}\r\n            color=\"danger\"\r\n            text=\"Eventos\"\r\n            tooltipProps={{ message: 'Lançamento de Eventos' }}\r\n            onClick={openEventos}\r\n          />\r\n          <DockItem id=\"dockExames\" icon={['fas', 'stethoscope']} color=\"success\" text=\"Exames\" onClick={openExame} />\r\n          <DockItem\r\n            id=\"dockTomadores\"\r\n            icon={['fas', 'address-book']}\r\n            color=\"info\"\r\n            text=\"Tomadores\"\r\n            tooltipProps={{ message: 'Tomadores de Serviço' }}\r\n            onClick={openTomadorServico}\r\n          />\r\n          <DockItem id=\"dockAfastamento\" icon={['fas', 'first-aid']} color=\"warning\" text=\"Afastamento\" onClick={openAfastamento} />\r\n          {selectedItem && !isEmpty(selectedItem.id) && (\r\n            <>\r\n              <DockItem id=\"dockTransferencia\" icon={['fas', 'exchange-alt']} color=\"second\" text=\"Transferència\" onClick={openTransferencia} />\r\n              <DockItem id=\"dockReintegracao\" icon={['fas', 'arrow-circle-left']} color=\"danger\" text=\"Reintegração\" onClick={openReintegracao} />\r\n            </>\r\n          )}\r\n        </DockItemList>\r\n      )\r\n    );\r\n  };\r\n\r\n  const changeCategoria = value => {\r\n    setIsTransportador(EnumUtil.contains(TRANSPORTADOR_VALUES, value));\r\n    setIsIntermitente(value === EMPREGADO_TRABALHADOR_INTERMITENTE.value);\r\n    setIsContratoVerdeAmarelo(\r\n      value === EMPREGADO_CONTRATO_VERDE_AMARELO_COM_ANT_FGTS.value || value === EMPREGADO_CONTRATO_VERDE_AMARELO_SEM_ANT_FGTS.value\r\n    );\r\n    setIsEstagiario(value === ESTAGIARIO.value);\r\n    setIsMenorAprendiz(value === MENOR_APRENDIZ.value);\r\n    setIsTrabalhadorTemporario(value === TRABALHADOR_TEMPORARIO.value);\r\n\r\n    setIsLocalTrabalhoRequired(isTrabalhadorTemporario || value === EMPREGADO_DOMESTICO.value);\r\n\r\n    setCategoriaTooltip(null);\r\n\r\n    if (value) {\r\n      const itemEnum = EnumUtil.find(CATEGORIA_ENUM_VALUES, value);\r\n      if (itemEnum !== undefined) {\r\n        setCategoriaTooltip({ message: EsocialUtil.getToolTipFmt(itemEnum) });\r\n      }\r\n    }\r\n\r\n    if (!isContratoVerdeAmarelo) {\r\n      formProps.setValue('calculoProporcional', false);\r\n    }\r\n\r\n    if (isEstagiario) {\r\n      formProps.setValue('dataOpcaoFgts', null);\r\n    }\r\n  };\r\n\r\n  const changeContratoTrabalho = value => {\r\n    setIsContratoTempoDeterminado(value !== PRAZO_INDETERMINADO.value);\r\n    setIsContratoTempoDetComIndic(\r\n      value === PRAZO_DETERMINADO_COM_CLAUSULA_DE_RESCISAO.value || value === PRAZO_DETERMINADO_SEM_CLAUSULA_DE_RESCISAO.value\r\n    );\r\n  };\r\n\r\n  const changeDataAdmissao = () => {\r\n    const values = formProps.getValues();\r\n    if (isEmpty(values.dataOpcaoFgts) && values.categoria !== ESTAGIARIO.value) {\r\n      formProps.setValue('dataOpcaoFgts', values.dataAdmissao);\r\n    }\r\n  };\r\n\r\n  const changeHipoteseLegalContratacao = value => {\r\n    setExigeCPFTrabSubstituto(value === NECESSIDADE_SUBTIUICAO_TRANSITORIA.value);\r\n    if (value !== NECESSIDADE_SUBTIUICAO_TRANSITORIA.value) {\r\n      formProps.setValue('cpfTrabSubstituido', null);\r\n    }\r\n  };\r\n\r\n  const updateCargoAtual = () => {\r\n    formProps.setValue('cargoAtual', getCargoReferencia(formProps.getValues(), getReferenciaAtual(globalReducer)));\r\n  };\r\n\r\n  const updateSalarioAtual = () => {\r\n    let tipoSalarioAtual = null;\r\n    let dataInclusaoSalarioAtual = null;\r\n    let valorSalarioAtual = null;\r\n    let numHorasContratadasSalarioAtual = null;\r\n    let outrasRemuneracoesSalarioAtual = null;\r\n\r\n    const salario = getSalarioReferencia(formProps.getValues(), getReferenciaAtual(globalReducer));\r\n\r\n    if (salario) {\r\n      tipoSalarioAtual = EnumUtil.find(TIPO_PAGAMENTO_MFP_ENUM_VALUES, salario.tipoPagamento).label;\r\n      dataInclusaoSalarioAtual = salario.data;\r\n      valorSalarioAtual = decimalFormatter(salario.valor, null);\r\n      numHorasContratadasSalarioAtual = numHorasFormatter(salario.numeroHorasContratuais);\r\n      outrasRemuneracoesSalarioAtual = valorTotalOutrasRemuneracoes(salario.outrasRemuneracoes);\r\n    }\r\n\r\n    formProps.setValue([\r\n      { tipoSalarioAtual },\r\n      { dataInclusaoSalarioAtual },\r\n      { valorSalarioAtual },\r\n      { numHorasContratadasSalarioAtual },\r\n      { outrasRemuneracoesSalarioAtual },\r\n    ]);\r\n  };\r\n\r\n  const previdenciaComplementarFormatter = cell => (cell ? cnpjFormatter(cell.cnpj, null) + ' - ' + cell.razaoSocial : '');\r\n\r\n  const validarCargo = (itemData, done) => {\r\n    if (itemData.id) {\r\n      promisedAlert(\r\n        'A exclusão ou edição eliminará o histórico desse cargo que é utilizado em arquivos digitais e relatórios. Deseja continuar?'\r\n      ).then(() => done());\r\n    } else {\r\n      done();\r\n    }\r\n    return { async: true };\r\n  };\r\n\r\n  const validateExtras = formData => {\r\n    const erros = [];\r\n\r\n    if (!isVinculoProfessor(formData)) {\r\n      if (formData.salarios.length === 0) {\r\n        erros.push('Salário não informado');\r\n      } else if (formData.categoria !== ESTAGIARIO.value && parseFloat(getItemAtual(formData.salarios).valor.toString()) <= 0) {\r\n        erros.push('Valor do salário deve ser maior que zero.');\r\n      }\r\n    }\r\n\r\n    if (\r\n      [DIRETOR_EMPRESARIO_NAO_EMP_SEM_FGTS.value, CI_EMPRESARIO_SOCIO.value, AUTONOMO_CONTRIB_REMUNERACAO.value].indexOf(formData.categoria) === -1 &&\r\n      formData.quadrosHorarios.length === 0\r\n    ) {\r\n      erros.push('Quadro de horários não informado');\r\n    }\r\n\r\n    if (formData.contratoTrabalho === PRAZO_INDETERMINADO.value) {\r\n      if (isEstagiario) {\r\n        erros.push('Tipo de contrato para vínculos com a categoria \"45 / 901 - Estagiário\" não deve ser por tempo indeterminado.');\r\n      }\r\n\r\n      if (isMenorAprendiz) {\r\n        erros.push(\r\n          'Tipo de contrato para vínculos com a categoria \"07 / 103 - Menor Aprendiz (Lei nº 11.180/2005)\" não deve ser por tempo indeterminado.'\r\n        );\r\n      }\r\n    }\r\n\r\n    const notEmptyDatas = isEmpty(formData.dataAdmissao) || isEmpty(formData.trabalhador) || isEmpty(formData.trabalhador.dataNascimento) === false;\r\n    if (notEmptyDatas && compare(formData.dataAdmissao, formData.trabalhador.dataNascimento) < 1) {\r\n      erros.push('Data de admissão deve ser posterior que a data de nascimento');\r\n    }\r\n\r\n    if (!isEmpty(formData.dataDemissaoDeterminado) && compare(formData.dataDemissaoDeterminado, formData.dataAdmissao) < 1) {\r\n      erros.push('Term. Contrato Determinado deve ser posterior que a data de admissão.');\r\n    }\r\n\r\n    if (!isEmpty(formData.dataTransferencia) && compare(formData.dataTransferencia, formData.dataAdmissao) < 1) {\r\n      erros.push('A data de Transferência deve ser posterior à data de admissão.');\r\n    }\r\n\r\n    const distinctList = formData.valesTransporte.map(item => item.evento.id).filter((item, index, arr) => arr.indexOf(item) === index);\r\n\r\n    if (distinctList.length !== formData.valesTransporte.length) {\r\n      erros.push('O Evento vinculado ao Vale Transporte deve ser único.');\r\n    }\r\n\r\n    if (formData.dataTransferencia === TRANSFERENCIA.value) {\r\n      if (isEmpty(formData.dataTransferencia)) {\r\n        erros.push('Para o tipo de admissão TRANSFERÊNCIA é necessário informar a data de Transferência.');\r\n      }\r\n\r\n      if (isEmpty(formData.cnpjEmpresaOrigem) && isEmpty(formData.cpfEmpresaOrigem)) {\r\n        erros.push('Para o tipo de admissão TRANSFERÊNCIA é necessário informar o CNPJ ou CPF da Empresa de Origem.');\r\n      }\r\n    }\r\n\r\n    if (!isEmpty(formData.cnpjEmpresaOrigem) && !isEmpty(formData.cpfEmpresaOrigem)) {\r\n      erros.push('Só é permitodo informar apenas CNPJ ou CPF da Empresa de Origem.');\r\n    }\r\n\r\n    if (!isEmpty(formData.banco) || !isEmpty(formData.agencia) || !isEmpty(formData.numeroConta)) {\r\n      if (isEmpty(formData.banco)) {\r\n        erros.push('Banco - Campo não pode estar em branco.');\r\n      }\r\n\r\n      if (isEmpty(formData.agencia)) {\r\n        erros.push('Agência - Campo não pode estar em branco.');\r\n      }\r\n\r\n      if (isEmpty(formData.numeroConta)) {\r\n        erros.push('Nº Conta - Campo não pode estar em branco.');\r\n      }\r\n\r\n      if (!isEmpty(formData.banco) && !isEmpty(formData.agencia) && formData.banco.id !== formData.agencia.banco.id) {\r\n        erros.push('A Agência cadastrada selecionada não pertence a este banco');\r\n      }\r\n    }\r\n\r\n    if (!isEmpty(formData.bancoFgts) || !isEmpty(formData.agenciaFgts) || !isEmpty(formData.numeroContaFgts)) {\r\n      if (isEmpty(formData.bancoFgts)) {\r\n        erros.push('FGTS Banco - Campo não pode estar em branco.');\r\n      }\r\n\r\n      if (isEmpty(formData.agenciaFgts)) {\r\n        erros.push('FGTS Agência - Campo não pode estar em branco.');\r\n      }\r\n\r\n      if (isEmpty(formData.numeroContaFgts)) {\r\n        erros.push('FGTS Nº Conta - Campo não pode estar em branco.');\r\n      }\r\n\r\n      if (!isEmpty(formData.bancoFgts) && !isEmpty(formData.agenciaFgts) && formData.bancoFgts.id !== formData.agenciaFgts.banco.id) {\r\n        erros.push('A Agência do FGTS cadastrada selecionada não pertence a este banco FGTS');\r\n      }\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  const beforePersist = (formData, done) => {\r\n    formData.localTrabalho = {\r\n      ...(selectedItem ? selectedItem.localTrabalho || {} : {}),\r\n      bairro: formData.localTrabalhoBairro,\r\n      cep: formData.localTrabalhoCep,\r\n      cidade: formData.localTrabalhoCidade,\r\n      complemento: formData.localTrabalhoComplemento,\r\n      logradouro: formData.localTrabalhoLogradouro,\r\n      numero: formData.localTrabalhoNumero,\r\n      tipoLogradouro: formData.localTrabalhoTipoLogradouro,\r\n      uf: formData.localTrabalhoUf,\r\n    };\r\n\r\n    [\r\n      'localTrabalhoBairro',\r\n      'localTrabalhoCep',\r\n      'localTrabalhoCepFmt',\r\n      'localTrabalhoCidade',\r\n      'localTrabalhoComplemento',\r\n      'localTrabalhoLogradouro',\r\n      'localTrabalhoNumero',\r\n      'localTrabalhoTipoLogradouro',\r\n      'localTrabalhoUf',\r\n    ].forEach(key => {\r\n      delete formData[key];\r\n    });\r\n\r\n    validarVinculoBeforePersist(formData, {\r\n      thenFunction: res => {\r\n        if (Object.keys(res).length === 0) {\r\n          done(formData);\r\n        } else {\r\n          let message = null;\r\n\r\n          if (res.type === 'information') {\r\n            message = res.content;\r\n          } else {\r\n            message = (\r\n              <>\r\n                <p className=\"lead\">Existem informações que exigem a sua atenção:</p>\r\n                <ListGroup variant=\"flush\">\r\n                  {res.content.split(';').map(value => {\r\n                    const enumItem = EnumUtil.find(VINCULO_PARAM_ENUM_VALUES, value);\r\n                    return <ListGroupItem key={value}>{enumItem.label}</ListGroupItem>;\r\n                  })}\r\n                </ListGroup>\r\n                <p className=\"lead text-center\" style={{ marginTop: 16, marginBottom: 0 }}>\r\n                  Deseja ignorar essas advertências e salvar mesmo assim?\r\n                </p>\r\n              </>\r\n            );\r\n          }\r\n\r\n          promisedAlert(message).then(() => done(formData));\r\n        }\r\n      },\r\n    });\r\n\r\n    return { async: true };\r\n  };\r\n\r\n  const cargoDefaultSortProps: DefaultSortProps[] = [\r\n    {\r\n      dataField: 'nroOrdem',\r\n      order: OrderType.ASC,\r\n    },\r\n  ];\r\n\r\n  const salarioDefaultSortProps: DefaultSortProps[] = [\r\n    {\r\n      dataField: 'nroOrdem',\r\n      order: OrderType.ASC,\r\n    },\r\n  ];\r\n\r\n  const difAcordoDefaultSortProps: DefaultSortProps[] = [\r\n    {\r\n      dataField: 'competencia',\r\n      order: OrderType.ASC,\r\n    },\r\n  ];\r\n\r\n  const quadroHorarioDefaultSortProps: DefaultSortProps[] = [\r\n    {\r\n      dataField: 'nroOrdem',\r\n      order: OrderType.ASC,\r\n    },\r\n  ];\r\n\r\n  const valeTransporteDefaultSortProps: DefaultSortProps[] = [\r\n    {\r\n      dataField: 'id',\r\n      order: OrderType.ASC,\r\n    },\r\n  ];\r\n\r\n  const planoSaudeDefaultSortProps: DefaultSortProps[] = [\r\n    {\r\n      dataField: 'nroOrdem',\r\n      order: OrderType.ASC,\r\n    },\r\n  ];\r\n\r\n  const prevComplementarDefaultSortProps: DefaultSortProps[] = [\r\n    {\r\n      dataField: 'nroOrdem',\r\n      order: OrderType.ASC,\r\n    },\r\n  ];\r\n\r\n  const reintegracaoDefaultSortProps: DefaultSortProps[] = [\r\n    {\r\n      dataField: 'nroOrdem',\r\n      order: OrderType.ASC,\r\n    },\r\n  ];\r\n\r\n  const trabIntermitenteDefaultSortProps: DefaultSortProps[] = [\r\n    {\r\n      dataField: 'id',\r\n      order: OrderType.ASC,\r\n    },\r\n  ];\r\n\r\n  const cargoFormProps: DetailManagerFormProps = {\r\n    columns: [\r\n      {\r\n        dataField: 'cargo.descricao',\r\n        text: 'Cargo',\r\n      },\r\n      {\r\n        dataField: 'dataAlteracao',\r\n        text: 'Data Alteração',\r\n      },\r\n      {\r\n        dataField: 'motivo',\r\n        text: 'Motivo',\r\n      },\r\n    ],\r\n    detailView: VinculoCargoEditView,\r\n    formProps,\r\n    onBeforeEdit: validarCargo,\r\n    onBeforeRemove: validarCargo,\r\n    onChange: updateCargoAtual,\r\n    propName: 'cargos',\r\n    title: 'Histórico de Cargos',\r\n  };\r\n\r\n  const salarioFormProps: DetailManagerFormProps = {\r\n    columns: [\r\n      {\r\n        dataField: 'data',\r\n        text: 'Data de Inclusão',\r\n      },\r\n      {\r\n        dataField: 'hora',\r\n        text: 'Hora de Inclusão',\r\n      },\r\n      boolColumn({\r\n        dataField: 'mp93620',\r\n        text: 'MPV-936/20',\r\n      }),\r\n      enumColumn(\r\n        {\r\n          dataField: 'tipoPagamento',\r\n          text: 'Tipo de Pagamento',\r\n        },\r\n        TIPO_PAGAMENTO_MFP_ENUM_VALUES\r\n      ),\r\n      {\r\n        dataField: 'valor',\r\n        formatter: decimalFormatter,\r\n        text: 'Valor',\r\n      },\r\n      {\r\n        dataField: 'numeroHorasContratuais',\r\n        formatter: numHorasFormatter,\r\n        text: 'Nº de Horas',\r\n      },\r\n      {\r\n        dataField: 'outrasRemuneracoes',\r\n        formatter: valorTotalOutrasRemuneracoes,\r\n        text: 'Outras Remunerações',\r\n      },\r\n      boolColumn({\r\n        dataField: 'horista',\r\n        text: 'Horista',\r\n      }),\r\n      boolColumn({\r\n        dataField: 'diarista',\r\n        text: 'Diarista',\r\n      }),\r\n      {\r\n        dataField: 'porcentagemComissaoSobreVendas',\r\n        formatter: percentualFormatter,\r\n        text: '% Sobre Vendas',\r\n      },\r\n      {\r\n        dataField: 'motivo',\r\n        text: 'Motivo',\r\n      },\r\n    ],\r\n    detailView: VinculoSalarioEditView,\r\n    detailViewSize: 'extralarge',\r\n    formProps,\r\n    onBeforeRemove: (itemData, done) => {\r\n      let result = null;\r\n      if (itemData.id) {\r\n        dispatch(showLoading());\r\n        validarSalarioVinculo(selectedItem.id, itemData, {\r\n          thenFunction: res => {\r\n            dispatch(progressActions.hideProgress());\r\n            if (res) {\r\n              alertManager.emit(ACTION_EVENTS.SHOW, {\r\n                message: 'ATENÇÃO: Não é possível remover o salário, pois o mesmo é referenciado nos cálculos.',\r\n                type: AlertType.INFORMATION,\r\n              });\r\n            } else {\r\n              done();\r\n            }\r\n          },\r\n        });\r\n        result = { async: true };\r\n      }\r\n      return result;\r\n    },\r\n    propName: 'salarios',\r\n    title: 'Manutenção de Salários',\r\n  };\r\n\r\n  const difAcordoFormProps: DetailManagerFormProps = {\r\n    columns: [\r\n      {\r\n        dataField: 'evento.label',\r\n        text: 'Evento',\r\n      },\r\n      enumColumn(\r\n        {\r\n          dataField: 'tipoInstrumentoSituacaoEnsejadoraRemuneracao',\r\n          text: 'Tipo/Situação',\r\n        },\r\n        TIPO_INSTRUMENTO_SITUACAO_ENSEJADORA_REMUNERACAO_ENUM_VALUES\r\n      ),\r\n      {\r\n        dataField: 'descricao',\r\n        text: 'Descrição',\r\n      },\r\n    ],\r\n    detailView: VinculoDiferencialAcordoEditView,\r\n    detailViewSize: 'large',\r\n    formProps,\r\n    propName: 'diferenciaisAcordoConvencaoDissidio',\r\n    title: 'Manutenção de Diferenciais',\r\n  };\r\n\r\n  const quadroHorarioFormProps: DetailManagerFormProps = {\r\n    columns: [\r\n      {\r\n        dataField: 'descricao',\r\n        text: 'Descrição',\r\n      },\r\n    ],\r\n    detailView: VinculoQuadroHorarioEditView,\r\n    formProps,\r\n    propName: 'quadrosHorarios',\r\n    title: 'Histórico de Quadro de Horários',\r\n  };\r\n\r\n  const valeTransporteFormProps: DetailManagerFormProps = {\r\n    columns: [\r\n      enumColumn(\r\n        {\r\n          dataField: 'tipoCalculo',\r\n          text: 'Tipo de Cálculo',\r\n        },\r\n        TIPO_CALCULO_VALE_TRANSPORTE_ENUM_VALUES\r\n      ),\r\n      {\r\n        dataField: 'diasCalculo',\r\n        text: 'Nº de dias',\r\n      },\r\n      {\r\n        dataField: 'valeTransporte.descricao',\r\n        text: 'Vale Transporte',\r\n      },\r\n      {\r\n        dataField: 'valeTransporte.valorUnitario',\r\n        text: 'Valor Unitário',\r\n      },\r\n      {\r\n        dataField: 'quantidade',\r\n        text: 'Quantidade',\r\n      },\r\n    ],\r\n    detailView: VinculoValeTransporteEditView,\r\n    formProps,\r\n    propName: 'valesTransporte',\r\n    title: 'Histórico de Vales Transporte',\r\n  };\r\n\r\n  const planoSaudeFormProps: DetailManagerFormProps = {\r\n    columns: [\r\n      {\r\n        dataField: 'planoSaude.label',\r\n        text: 'Plano de Saúde',\r\n      },\r\n      {\r\n        dataField: 'evento.label',\r\n        text: 'Evento',\r\n      },\r\n      {\r\n        dataField: 'dtInicio',\r\n        text: 'Data Inicial',\r\n      },\r\n      {\r\n        dataField: 'dtFim',\r\n        text: 'Data Final',\r\n      },\r\n    ],\r\n    detailView: VinculoPlanoSaudeEditView,\r\n    detailViewSize: 'large',\r\n    formProps,\r\n    propName: 'planos',\r\n    title: 'Histórico de Planos de Saúde',\r\n  };\r\n\r\n  const prevComplementarFormProps: DetailManagerFormProps = {\r\n    columns: [\r\n      {\r\n        dataField: 'previdenciaComplementar',\r\n        formatter: previdenciaComplementarFormatter,\r\n        text: 'Previdência Complementar',\r\n      },\r\n      {\r\n        dataField: 'evento.label',\r\n        text: 'Evento',\r\n      },\r\n      {\r\n        dataField: 'dtInicio',\r\n        text: 'Data Inicial',\r\n      },\r\n      {\r\n        dataField: 'dtFim',\r\n        text: 'Data Final',\r\n      },\r\n    ],\r\n    detailView: VinculoPrevidenciaComplementarEditView,\r\n    detailViewSize: 'large',\r\n    formProps,\r\n    propName: 'previdenciasComplementar',\r\n    title: 'Histórico de Previdêcia Complementar',\r\n  };\r\n\r\n  const reintegracaoFormProps: DetailManagerFormProps = {\r\n    columns: [\r\n      {\r\n        dataField: 'dataReintegracao',\r\n        text: 'Data da Reintegração',\r\n      },\r\n      {\r\n        dataField: 'dataEfetivoRetorno',\r\n        text: 'Data do Efetivo Retorno',\r\n      },\r\n      enumColumn(\r\n        {\r\n          dataField: 'tipoReintegracao',\r\n          text: 'Tipo de Reintegração',\r\n        },\r\n        TIPO_REINTEGRACAO_ENUM_VALUES\r\n      ),\r\n      {\r\n        dataField: 'numeroProcesso',\r\n        text: 'Nº Processo',\r\n      },\r\n      enumColumn(\r\n        {\r\n          dataField: 'numeroLeiAnistia',\r\n          text: 'Nº Lei de Anistia',\r\n        },\r\n        NR_LEI_ANISTIA_ENUM_VALUES\r\n      ),\r\n    ],\r\n    detailView: null,\r\n    formProps,\r\n    hideAddButton: true,\r\n    hideEditButton: true,\r\n    propName: 'reintegracoes',\r\n    title: 'Histórico de Reintegrações',\r\n  };\r\n\r\n  const trabIntermitenteFormProps: DetailManagerFormProps = {\r\n    columns: [\r\n      {\r\n        dataField: 'codigoConvocacao',\r\n        text: 'Código Convocação',\r\n      },\r\n      {\r\n        dataField: 'dtInicio',\r\n        text: 'Data Inicial',\r\n      },\r\n      {\r\n        dataField: 'dtFim',\r\n        text: 'Data Final',\r\n      },\r\n      {\r\n        dataField: 'dtPrevistaPagamento',\r\n        text: 'Data Prevista Pagamento',\r\n      },\r\n    ],\r\n    detailView: VinculoTrabalhoIntermitenteEditView,\r\n    detailViewSize: 'large',\r\n    formProps,\r\n    propName: 'trabalhosIntermitentes',\r\n    title: 'Convocação e vigência para regime de Trabalho Intermitente - eSocial: Registro S-2260',\r\n  };\r\n\r\n  return (\r\n    <WindowComponent title=\"Manutenção de Trabalhador - Vínculo\" wikiId={2983}>\r\n      <EditForm formProps={formProps} editViewProps={props} dtoClassName={CLASS_NAME} validateExtras={validateExtras} beforePersist={beforePersist}>\r\n        {modal}\r\n        <Row>\r\n          <Col>\r\n            <div className=\"d-flex\">\r\n              <div style={{ width: 240 }}>\r\n                <InputGroupInline\r\n                  formProps={{ ...formProps, validation: { ...onlyNumber(0, 8) } }}\r\n                  isPrependLabel={true}\r\n                  id=\"matricula\"\r\n                  label=\"Matrícula\"\r\n                  tooltipProps={{ message: 'Preenchimento Opcional - Codificação Automática' }}\r\n                />\r\n              </div>\r\n              <div className=\"flex-grow-1\" style={{ marginLeft: 20 }}>\r\n                <TrabalhadorIS\r\n                  id=\"trabalhador\"\r\n                  formProps={formProps}\r\n                  isPrependLabel={true}\r\n                  label=\"Trabalhador\"\r\n                  disabled={isTrabalhadorDesabilitado}\r\n                  inputSearchProps={{\r\n                    searchExpressions: (): SearchExpression[] => [\r\n                      {\r\n                        fieldName: 'empresaMFP.id',\r\n                        value: formProps.getValues().empresaMFP.id,\r\n                      },\r\n                    ],\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        {condicional(\r\n          selectedItem && selectedItem.esocialSincronizadoOutroSistema === true,\r\n          <Row>\r\n            <Col>\r\n              <div className=\"d-flex\">\r\n                <div style={{ width: 350 }}>\r\n                  <InputGroupInline\r\n                    formProps={{ ...formProps, validation: { ...onlyAlphaNum(0, 30) } }}\r\n                    isPrependLabel={true}\r\n                    id=\"matriculaEsocial\"\r\n                    label=\"Matrícula eSocial\"\r\n                    tooltipProps={{\r\n                      message:\r\n                        'Matrícula eSocial indica a matrícula do vínculo no eSocial  - Campo preenchido quando o vínculo foi ' +\r\n                        'enviado ao eSocial por outro sistema e sincronizado para o Calima',\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div style={{ width: 200, paddingTop: 10, paddingLeft: 20 }}>\r\n                  <Checkbox\r\n                    formProps={formProps}\r\n                    id=\"esocialSincronizadoOutroSistema\"\r\n                    label=\"Sincronizado BX\"\r\n                    tooltipProps={{\r\n                      message: 'Indica que o Vinculo foi enviado ao eSocial por de outro sistema e foi sincronizado no Calima pelo eSocial BX',\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n        <Row>\r\n          <Col>\r\n            <TabGroup formProps={formProps}>\r\n              <Tab title=\"Gerais\">\r\n                <Row>\r\n                  <Col>\r\n                    <Accordion formProps={formProps}>\r\n                      <AccordionItem title=\"Dados gerais\">\r\n                        <Row>\r\n                          <Col>\r\n                            <CboIS id=\"cbo\" formProps={{ ...formProps, validation: { require: true } }} isPrependLabel={true} label=\"CBO\" />\r\n                          </Col>\r\n                          <Col>\r\n                            <CentroCustoIS id=\"centroCusto\" formProps={formProps} isPrependLabel={true} label=\"Centro Custo\" />\r\n                          </Col>\r\n                        </Row>\r\n                        <div className=\"d-flex\">\r\n                          <div className=\"flex-grow-1\">\r\n                            <SindicatoIS id=\"sindicato\" formProps={formProps} isPrependLabel={true} label=\"Sindicato\" />\r\n                          </div>\r\n                          <div style={{ width: 200, paddingTop: 10, paddingLeft: 20 }}>\r\n                            <Checkbox\r\n                              formProps={formProps}\r\n                              id=\"filiadoSindicado\"\r\n                              label=\"Filiado Sindicato\"\r\n                              tooltipProps={{\r\n                                message:\r\n                                  'Caso essa opção seja selecionada indica que o Vínculo é filiado ao Sindicato informado e caso ' +\r\n                                  'esteja desmarcada indica que o Sindicato informado é o representativo da categoria do Vinculo.',\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <Row>\r\n                          <Col>\r\n                            <InputGroupInline\r\n                              formProps={{ ...formProps, validation: { ...onlyAlphaNum(0, 12) } }}\r\n                              isPrependLabel={true}\r\n                              id=\"numeroConselhoRegional\"\r\n                              label=\"Nº Conselho Regional\"\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Box title=\"Registro\">\r\n                              <Row>\r\n                                <Col>\r\n                                  <InputGroupInline\r\n                                    formProps={{ ...formProps, validation: { ...onlyNumber(0, 8) } }}\r\n                                    isPrependLabel={true}\r\n                                    id=\"numeroLivroRegistro\"\r\n                                    label=\"Nº Livro\"\r\n                                    type={InputType.NUMBER}\r\n                                  />\r\n                                </Col>\r\n                                <Col>\r\n                                  <InputGroupInline\r\n                                    formProps={{ ...formProps, validation: { ...onlyNumber(0, 8) } }}\r\n                                    isPrependLabel={true}\r\n                                    id=\"numeroFolhaRegistro\"\r\n                                    label=\"Nº Folha\"\r\n                                    type={InputType.NUMBER}\r\n                                  />\r\n                                </Col>\r\n                              </Row>\r\n                            </Box>\r\n                          </Col>\r\n                        </Row>\r\n                        <div className=\"d-flex\">\r\n                          <div className=\"flex-grow-1\">\r\n                            <InputGroupInline\r\n                              id=\"categoria\"\r\n                              label=\"Categoria\"\r\n                              formProps={{ ...formProps, validation: { required: true } }}\r\n                              isPrependLabel={true}\r\n                              placeholder=\"Selecione a Categoria\"\r\n                              inputDropDownProps={{ optionsProvider: CATEGORIA_ENUM_VALUES }}\r\n                              type={InputType.DROP_DOWN}\r\n                              onChange={changeCategoria}\r\n                              tooltipProps={categoriaTooltip}\r\n                            />\r\n                          </div>\r\n                          {condicional(\r\n                            isContratoVerdeAmarelo,\r\n                            <div style={{ width: 255, paddingTop: 10, paddingLeft: 20 }}>\r\n                              <Checkbox\r\n                                formProps={formProps}\r\n                                id=\"calculoProporcional\"\r\n                                label=\"Pagamentos antecipados\"\r\n                                tooltipProps={{\r\n                                  message:\r\n                                    'Caso essa opção seja selecionada indica que o Vínculo receberá o pagamento imediato das seguintes ' +\r\n                                    'parcelas: I - remuneração;  II - décimo terceiro salário proporcional; III - férias proporcionais ' +\r\n                                    'com acréscimo de um terço.',\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          )}\r\n                          {condicional(\r\n                            isTransportador,\r\n                            <div className=\"flex-grow-1\" style={{ paddingLeft: 40 }}>\r\n                              <InputGroupInline\r\n                                id=\"tipoTransportador\"\r\n                                label=\"Tipo de transporte\"\r\n                                formProps={formProps}\r\n                                isPrependLabel={true}\r\n                                placeholder=\"Selecione o tipo de transporte\"\r\n                                inputDropDownProps={{ optionsProvider: TIPO_TRANSPORTADOR_ENUM_VALUES }}\r\n                                type={InputType.DROP_DOWN}\r\n                                tooltipProps={{\r\n                                  message:\r\n                                    'Indicador de tipo de transporte. Preencher para ajustar a base do imposto de renda quando o ' +\r\n                                    'contribuinte auferir rendimentos da prestação de serviços de transporte, em veículo próprio locado, ' +\r\n                                    'ou adquirido com reservas de domínio ou alienação fiduciária',\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <Row>\r\n                          <Col>\r\n                            <InputGroupInline\r\n                              id=\"contratoTrabalho\"\r\n                              label=\"Tipo de Contrato\"\r\n                              formProps={{ ...formProps, validation: { required: true } }}\r\n                              isPrependLabel={true}\r\n                              placeholder=\"Selecione o Tipo de Contrato\"\r\n                              inputDropDownProps={{ optionsProvider: CONTRATO_TRABALHO_ENUM_VALUES }}\r\n                              type={InputType.DROP_DOWN}\r\n                              onChange={changeContratoTrabalho}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                        {condicional(\r\n                          isContratoTempoDetComIndic,\r\n                          <Row>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"objetoContratacaoPrazoDet\"\r\n                                label=\"Objeto Contratação Prazo Determinado\"\r\n                                formProps={{ ...formProps, validation: { maxLength: 55 } }}\r\n                                isPrependLabel={true}\r\n                                tooltipProps={{\r\n                                  message: 'Indicação do objeto determinante da contratação por prazo determinado (obra,serviço, safra, etc.).',\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                        )}\r\n                        <Row>\r\n                          <Col>\r\n                            <InputGroupInline\r\n                              id=\"tipoAdmissao\"\r\n                              label=\"Tipo de Admissão\"\r\n                              formProps={formProps}\r\n                              isPrependLabel={true}\r\n                              placeholder=\"Selecione o Tipo de Admissão\"\r\n                              inputDropDownProps={{ optionsProvider: TIPO_ADMISSAO_ENUM_VALUES }}\r\n                              type={InputType.DROP_DOWN}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <InputGroupInline\r\n                              id=\"exposicaoAgenteNocivo\"\r\n                              label=\"Exposição a Agentes Nocivos\"\r\n                              formProps={formProps}\r\n                              isPrependLabel={true}\r\n                              inputDropDownProps={{ optionsProvider: EXPOSICAO_AGENTE_NOCIVO_ENUM_VALUES }}\r\n                              type={InputType.DROP_DOWN}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <InputGroupInline\r\n                              id=\"dataAdmissao\"\r\n                              label=\"Data Admissão\"\r\n                              formProps={{ ...formProps, validation: { required: true } }}\r\n                              isPrependLabel={true}\r\n                              type={InputType.DATE}\r\n                              onBlur={changeDataAdmissao}\r\n                            />\r\n                          </Col>\r\n                          <Col>\r\n                            <InputGroupInline\r\n                              id=\"dataDemissaoDeterminado\"\r\n                              label={isEstagiario ? 'Data de Término do Estágio' : 'Término de Contrato com Prazo Determinado'}\r\n                              formProps={formProps}\r\n                              isPrependLabel={true}\r\n                              type={InputType.DATE}\r\n                              disabled={isContratoTempoDeterminado === false}\r\n                              tooltipProps={{ message: 'Data prevista para término do contrato de trabalho por prazo determinado' }}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                        <div className=\"d-flex\">\r\n                          <div className=\"flex-grow-1\">\r\n                            <InputGroupInline\r\n                              id=\"dataOpcaoFgts\"\r\n                              label=\"Data Opção FGTS\"\r\n                              formProps={formProps}\r\n                              isPrependLabel={true}\r\n                              type={InputType.DATE}\r\n                              disabled={isEstagiario}\r\n                            />\r\n                          </div>\r\n                          <div style={{ width: 310, paddingTop: 10, paddingLeft: 20 }}>\r\n                            <Checkbox\r\n                              formProps={formProps}\r\n                              id=\"recebendoSeguroDesemprego\"\r\n                              label=\"Recebendo Seguro Desemprego\"\r\n                              tooltipProps={{ message: 'Selecione essa opção para gerar o CAGED Diário.' }}\r\n                            />\r\n                          </div>\r\n                          <div style={{ width: 210, paddingTop: 10, paddingLeft: 20 }}>\r\n                            <Checkbox formProps={formProps} id=\"trabalhadorRural\" label=\"Trabalhador Rural\" />\r\n                          </div>\r\n                        </div>\r\n                        <Row>\r\n                          <Col>\r\n                            <InputGroupInline\r\n                              id=\"diasExperiencia\"\r\n                              label=\"Nº de dias em Contrato de Experiência\"\r\n                              formProps={{\r\n                                ...formProps,\r\n                                validation: {\r\n                                  required: true,\r\n                                  ...onlyNumber(0, 2),\r\n                                  max: MAXIMO_DIAS_EXPERIENCIA_CONTRATO_TRABALHO,\r\n                                  min: 0,\r\n                                },\r\n                              }}\r\n                              isPrependLabel={true}\r\n                              type={InputType.NUMBER}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <InputGroupInline\r\n                              id=\"diasExperienciaProrrogado\"\r\n                              label=\"Nº de Dias de Prorrogação em Contrato Experiência\"\r\n                              formProps={{ ...formProps, validation: { required: true, ...onlyNumber(0, 2) } }}\r\n                              isPrependLabel={true}\r\n                              type={InputType.NUMBER}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <InputGroupInline\r\n                              id=\"anexoSimplesNacional\"\r\n                              label=\"Enquadramento Simples Nacional\"\r\n                              formProps={formProps}\r\n                              isPrependLabel={true}\r\n                              inputDropDownProps={{ optionsProvider: GPS_SIMPLES_NACIONAL_ENUM_VALUES }}\r\n                              type={InputType.DROP_DOWN}\r\n                              disabled={isSimplesNacional === false}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <InputGroupInline\r\n                              id=\"tipoPensaoEnum\"\r\n                              label=\"Tipo de Pensão\"\r\n                              formProps={formProps}\r\n                              isPrependLabel={true}\r\n                              inputDropDownProps={{ optionsProvider: TIPO_PENSAO_ENUM_VALUES }}\r\n                              type={InputType.DROP_DOWN}\r\n                              placeholder=\"Selecione o Tipo de Pensão\"\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                        <div className=\"d-flex\">\r\n                          <div className=\"flex-grow-1\">\r\n                            <InputGroupInline\r\n                              formProps={{ ...formProps, validation: { required: true, min: 0, max: 100 } }}\r\n                              isPrependLabel={true}\r\n                              id=\"percentualPensao\"\r\n                              label=\"Percentual de Pensão\"\r\n                              type={InputType.NUMBER}\r\n                            />\r\n                          </div>\r\n                          <div style={{ width: 210, paddingTop: 10, paddingLeft: 20 }}>\r\n                            <Checkbox formProps={formProps} id=\"aprendizGravida\" label=\"Aprendiz Grávida\" />\r\n                          </div>\r\n                        </div>\r\n                      </AccordionItem>\r\n                      <AccordionItem title=\"Transferência\">\r\n                        <Row>\r\n                          <Col md={3} />\r\n                          <Col>\r\n                            <div className=\"d-flex\" style={{ marginBottom: 5 }}>\r\n                              <div className=\"flex-grow-1\" style={{ background: '#b5b5b5', height: 2, marginTop: 10, marginRight: 10 }} />\r\n                              <div>Dados da Origem</div>\r\n                              <div className=\"flex-grow-1\" style={{ background: '#b5b5b5', height: 2, marginTop: 10, marginLeft: 10 }} />\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <InputGroupInline id=\"dataTransferencia\" label=\"Data\" formProps={formProps} isPrependLabel={true} type={InputType.DATE} />\r\n                          </Col>\r\n                          <Col>\r\n                            <InputGroupInline id=\"cnpjEmpresaOrigem\" label=\"CNPJ\" formProps={formProps} isPrependLabel={true} type={InputType.CNPJ} />\r\n                          </Col>\r\n                          <Col>\r\n                            <InputGroupInline id=\"cpfEmpresaOrigem\" label=\"CPF\" formProps={formProps} isPrependLabel={true} type={InputType.CPF} />\r\n                          </Col>\r\n                          <Col>\r\n                            <InputGroupInline\r\n                              id=\"matriculaEmpresaOrigem\"\r\n                              label=\"Matrícula\"\r\n                              formProps={{ ...formProps, validation: { maxLength: 30 } }}\r\n                              isPrependLabel={true}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      </AccordionItem>\r\n                      <AccordionItem title=\"Informações Bancárias\">\r\n                        <Box title=\"Remuneração\">\r\n                          <Row>\r\n                            <Col>\r\n                              <BancoIS id=\"banco\" formProps={formProps} isPrependLabel={true} label=\"Banco\" />\r\n                            </Col>\r\n                            <Col>\r\n                              <AgenciaIS id=\"agencia\" formProps={formProps} isPrependLabel={true} label=\"Agência\" />\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"tipoConta\"\r\n                                label=\"Tipo\"\r\n                                formProps={formProps}\r\n                                isPrependLabel={true}\r\n                                inputDropDownProps={{ optionsProvider: TIPO_CONTA_ENUM_VALUES }}\r\n                                type={InputType.DROP_DOWN}\r\n                                placeholder=\"Selecione o Tipo de Conta\"\r\n                              />\r\n                            </Col>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"numeroConta\"\r\n                                label=\"Nº Conta\"\r\n                                formProps={{ ...formProps, validation: { ...onlyNumber(0, 9) } }}\r\n                                isPrependLabel={true}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"digitoVerificadorConta\"\r\n                                label=\"Dígito Verificador\"\r\n                                formProps={{ ...formProps, validation: { ...onlyNumber(0, 1) } }}\r\n                                isPrependLabel={true}\r\n                              />\r\n                            </Col>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"operacaoContaBancaria\"\r\n                                label=\"Operação\"\r\n                                formProps={{ ...formProps, validation: { ...onlyNumber(0, 5) } }}\r\n                                isPrependLabel={true}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                        </Box>\r\n                        <Box title=\"FGTS\">\r\n                          <Row>\r\n                            <Col>\r\n                              <BancoIS id=\"bancoFgts\" formProps={formProps} isPrependLabel={true} label=\"Banco\" />\r\n                            </Col>\r\n                            <Col>\r\n                              <AgenciaIS id=\"agenciaFgts\" formProps={formProps} isPrependLabel={true} label=\"Agência\" />\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"numeroContaFgts\"\r\n                                label=\"Nº Conta\"\r\n                                formProps={{ ...formProps, validation: { ...onlyNumber(0, 9) } }}\r\n                                isPrependLabel={true}\r\n                              />\r\n                            </Col>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"digitoVerificadorContaFgts\"\r\n                                label=\"Dígito Verificador\"\r\n                                formProps={{ ...formProps, validation: { ...onlyNumber(0, 1) } }}\r\n                                isPrependLabel={true}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"operacaoContaFgts\"\r\n                                label=\"Operação\"\r\n                                formProps={{ ...formProps, validation: { ...onlyNumber(0, 5) } }}\r\n                                isPrependLabel={true}\r\n                              />\r\n                            </Col>\r\n                            <Col />\r\n                          </Row>\r\n                        </Box>\r\n                      </AccordionItem>\r\n                    </Accordion>\r\n                  </Col>\r\n                </Row>\r\n              </Tab>\r\n              <Tab title=\"Cargos\">\r\n                <Row>\r\n                  <Col>\r\n                    <Box title=\"Cargo Atual\">\r\n                      <InputGroupInline id=\"cargoAtual\" label=\"Cargo\" formProps={formProps} isPrependLabel={true} disabled={true} />\r\n                    </Box>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <DetailManagerForm\r\n                      {...props}\r\n                      defaultSortDirection={OrderType.ASC}\r\n                      defaultSorted={cargoDefaultSortProps}\r\n                      {...cargoFormProps}\r\n                      keyField=\"rowIndex\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Tab>\r\n              <Tab title=\"Salários\">\r\n                <Row>\r\n                  <Col>\r\n                    <Box title=\"Salário Atual\">\r\n                      <Row>\r\n                        <Col>\r\n                          <InputGroupInline id=\"tipoSalarioAtual\" label=\"Tipo\" formProps={formProps} isPrependLabel={true} disabled={true} />\r\n                        </Col>\r\n                        <Col>\r\n                          <InputGroupInline\r\n                            id=\"dataInclusaoSalarioAtual\"\r\n                            label=\"Data de Inclusão\"\r\n                            formProps={formProps}\r\n                            isPrependLabel={true}\r\n                            disabled={true}\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <InputGroupInline id=\"valorSalarioAtual\" label=\"Valor\" formProps={formProps} isPrependLabel={true} disabled={true} />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>\r\n                          <InputGroupInline\r\n                            id=\"numHorasContratadasSalarioAtual\"\r\n                            label=\"Nº de Horas Contratadas\"\r\n                            formProps={formProps}\r\n                            isPrependLabel={true}\r\n                            disabled={true}\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <InputGroupInline\r\n                            id=\"outrasRemuneracoesSalarioAtual\"\r\n                            label=\"Outras Remunerações\"\r\n                            formProps={formProps}\r\n                            isPrependLabel={true}\r\n                            disabled={true}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Box>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <Accordion>\r\n                      <AccordionItem title=\"Histórico de Salários\">\r\n                        <DetailManagerForm\r\n                          {...props}\r\n                          defaultSortDirection={OrderType.ASC}\r\n                          defaultSorted={salarioDefaultSortProps}\r\n                          {...salarioFormProps}\r\n                          keyField=\"rowIndex\"\r\n                        />\r\n                      </AccordionItem>\r\n                      <AccordionItem title=\"Diferencial (Acordo/Convenção/Dissídio) - eSocial: Registro S-1200\">\r\n                        <DetailManagerForm\r\n                          {...props}\r\n                          defaultSortDirection={OrderType.ASC}\r\n                          defaultSorted={difAcordoDefaultSortProps}\r\n                          {...difAcordoFormProps}\r\n                          keyField=\"rowIndex\"\r\n                        />\r\n                      </AccordionItem>\r\n                    </Accordion>\r\n                  </Col>\r\n                </Row>\r\n              </Tab>\r\n              <Tab title=\"Horários\">\r\n                <Row>\r\n                  <Col>\r\n                    <Box title=\"Jornada de Trabalho\">\r\n                      <div className=\"d-flex\">\r\n                        <div className=\"flex-grow-1\">\r\n                          <InputGroupInline\r\n                            id=\"tipoRegimeJornadaTrabalho\"\r\n                            label=\"Tipo de Regime de Jornada de Trabalho\"\r\n                            formProps={formProps}\r\n                            isPrependLabel={true}\r\n                            inputDropDownProps={{ optionsProvider: TIPO_REGIME_JORNADA_TRABALHO_ENUM_VALUES }}\r\n                            type={InputType.DROP_DOWN}\r\n                            placeholder=\"Selecione o Tipo de Regime de Jornada de Trabalho\"\r\n                          />\r\n                        </div>\r\n                        <div style={{ width: 255, marginTop: 10, marginLeft: 20 }}>\r\n                          <Checkbox formProps={formProps} id=\"jornadaTrabalhoParcial\" label=\"Jornada de Trabalho Parcial\" />\r\n                        </div>\r\n                      </div>\r\n                    </Box>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <DetailManagerForm\r\n                      {...props}\r\n                      defaultSortDirection={OrderType.ASC}\r\n                      defaultSorted={quadroHorarioDefaultSortProps}\r\n                      {...quadroHorarioFormProps}\r\n                      keyField=\"rowIndex\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Tab>\r\n              <Tab title=\"Vales Transporte\">\r\n                <Row>\r\n                  <Col>\r\n                    <DetailManagerForm\r\n                      {...props}\r\n                      defaultSortDirection={OrderType.ASC}\r\n                      defaultSorted={valeTransporteDefaultSortProps}\r\n                      {...valeTransporteFormProps}\r\n                      keyField=\"rowIndex\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Tab>\r\n              <Tab title=\"Planos de Saúde\">\r\n                <Row>\r\n                  <Col>\r\n                    <DetailManagerForm\r\n                      {...props}\r\n                      defaultSortDirection={OrderType.ASC}\r\n                      defaultSorted={planoSaudeDefaultSortProps}\r\n                      {...planoSaudeFormProps}\r\n                      keyField=\"rowIndex\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Tab>\r\n              <Tab title=\"Prev. Complementar\">\r\n                <Row>\r\n                  <Col>\r\n                    <DetailManagerForm\r\n                      {...props}\r\n                      defaultSortDirection={OrderType.ASC}\r\n                      defaultSorted={prevComplementarDefaultSortProps}\r\n                      {...prevComplementarFormProps}\r\n                      keyField=\"rowIndex\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Tab>\r\n              {condicional(\r\n                selectedItem && selectedItem.id && selectedItem.reintegracoes.length > 0,\r\n                <Tab title=\"Reintegrações\">\r\n                  <DetailManagerForm\r\n                    {...props}\r\n                    defaultSortDirection={OrderType.ASC}\r\n                    defaultSorted={reintegracaoDefaultSortProps}\r\n                    {...reintegracaoFormProps}\r\n                    keyField=\"rowIndex\"\r\n                  />\r\n                </Tab>\r\n              )}\r\n              {condicional(\r\n                isEstagiario || isMenorAprendiz,\r\n                <Tab title=\"Aprendiz / Estagiário\">\r\n                  <Row>\r\n                    <Col>\r\n                      <Box title=\"Informações Aprendiz/Estagiário\">\r\n                        <Row>\r\n                          <Col>\r\n                            <InputGroupInline\r\n                              id=\"cursoMatriculado\"\r\n                              label=\"Curso Matriculado\"\r\n                              formProps={{ ...formProps, validation: { required: true } }}\r\n                              isPrependLabel={true}\r\n                              tooltipProps={{ message: 'Curso no qual o Aprendiz/Estagiário encontra-se matriculado.' }}\r\n                            />\r\n                          </Col>\r\n                          <Col>\r\n                            <InputGroupInline\r\n                              id=\"areaAtuacao\"\r\n                              label=\"Área de Atuação\"\r\n                              formProps={{ ...formProps, validation: { maxLength: 50 } }}\r\n                              isPrependLabel={true}\r\n                              tooltipProps={{ message: 'Área de atuação do Aprendiz/Estagiário' }}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <ResponsavelMenorAprendizIS\r\n                              id=\"responsavelMenorAprendiz\"\r\n                              formProps={{ ...formProps, validation: { required: true } }}\r\n                              label=\"Responsável pelo Aprendiz/Estagiário\"\r\n                              isPrependLabel={true}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <InstituicaoEnsinoIS\r\n                              id=\"instituicaoEnsino\"\r\n                              formProps={{ ...formProps, validation: { required: true } }}\r\n                              label=\"Instituição de Ensino\"\r\n                              isPrependLabel={true}\r\n                              tooltipProps={{ message: 'Instituição de Ensino na qual o Aprendiz/Estagiário encontra-se matriculado.' }}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <InputGroupInline\r\n                              id=\"naturezaEstagio\"\r\n                              label=\"Natureza do Estágio\"\r\n                              formProps={formProps}\r\n                              isPrependLabel={true}\r\n                              inputDropDownProps={{ optionsProvider: NATUREZA_ESTAGIO_ENUM_VALUES }}\r\n                              type={InputType.DROP_DOWN}\r\n                            />\r\n                          </Col>\r\n                          <Col>\r\n                            <InputGroupInline\r\n                              id=\"nivelEstagio\"\r\n                              label=\"Nível do Estágio\"\r\n                              formProps={formProps}\r\n                              isPrependLabel={true}\r\n                              inputDropDownProps={{ optionsProvider: NIVEL_ESTAGIO_ENUM_VALUES }}\r\n                              type={InputType.DROP_DOWN}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <InputGroupInline\r\n                              id=\"numeroApolice\"\r\n                              label=\"Nº de Apólice\"\r\n                              formProps={{ ...formProps, validation: { maxLength: 30 } }}\r\n                              isPrependLabel={true}\r\n                              tooltipProps={{ message: 'Número de Apólice de Seguro' }}\r\n                            />\r\n                          </Col>\r\n                          <Col />\r\n                        </Row>\r\n                      </Box>\r\n                    </Col>\r\n                  </Row>\r\n                </Tab>\r\n              )}\r\n              <Tab title=\"Local de Trabalho\">\r\n                <Row>\r\n                  <Col>\r\n                    <Box title=\"Informações do local de trabalho - eSocial: Registro S-2200\">\r\n                      <Row>\r\n                        <Col md={4}>\r\n                          <CepLogradouroIS\r\n                            id=\"localTrabalhoCepFmt\"\r\n                            formProps={{ ...formProps, validation: { required: isLocalTrabalhoRequired } }}\r\n                            cepManager={cepManager}\r\n                            label=\"CEP\"\r\n                            isPrependLabel={true}\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <CepTituloIS\r\n                            id=\"localTrabalhoTipoLogradouro\"\r\n                            formProps={{ ...formProps, validation: { required: isLocalTrabalhoRequired } }}\r\n                            label=\"Tipo\"\r\n                            isPrependLabel={true}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>\r\n                          <InputGroupInline\r\n                            id=\"localTrabalhoLogradouro\"\r\n                            label=\"Logradouro\"\r\n                            formProps={{ ...formProps, validation: { required: isLocalTrabalhoRequired, maxLength: 80 } }}\r\n                            isPrependLabel={true}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>\r\n                          <InputGroupInline\r\n                            id=\"localTrabalhoNumero\"\r\n                            label=\"Número\"\r\n                            formProps={{ ...formProps, validation: { required: isLocalTrabalhoRequired, maxLength: 10 } }}\r\n                            isPrependLabel={true}\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <InputGroupInline\r\n                            id=\"localTrabalhoComplemento\"\r\n                            label=\"Complemento\"\r\n                            formProps={{ ...formProps, validation: { maxLength: 60 } }}\r\n                            isPrependLabel={true}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>\r\n                          <CepUFIS\r\n                            id=\"localTrabalhoUf\"\r\n                            formProps={{ ...formProps, validation: { required: isLocalTrabalhoRequired } }}\r\n                            label=\"UF\"\r\n                            isPrependLabel={true}\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <CepLocalidadeIS\r\n                            id=\"localTrabalhoCidade\"\r\n                            formProps={{ ...formProps, validation: { required: isLocalTrabalhoRequired } }}\r\n                            label=\"Cidade\"\r\n                            isPrependLabel={true}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>\r\n                          <CepBairroIS\r\n                            id=\"localTrabalhoBairro\"\r\n                            formProps={{ ...formProps, validation: { required: isLocalTrabalhoRequired } }}\r\n                            label=\"Bairro\"\r\n                            isPrependLabel={true}\r\n                          />\r\n                        </Col>\r\n                        <Col />\r\n                      </Row>\r\n                    </Box>\r\n                  </Col>\r\n                </Row>\r\n              </Tab>\r\n              {condicional(\r\n                isIntermitente,\r\n                <Tab title=\"Trabalho Intermitente\">\r\n                  <Row>\r\n                    <Col>\r\n                      <DetailManagerForm\r\n                        {...props}\r\n                        defaultSortDirection={OrderType.ASC}\r\n                        defaultSorted={trabIntermitenteDefaultSortProps}\r\n                        {...trabIntermitenteFormProps}\r\n                        keyField=\"rowIndex\"\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </Tab>\r\n              )}\r\n              {condicional(\r\n                isTrabalhadorTemporario,\r\n                <Tab title=\"Trabalho Temporário\">\r\n                  <Row>\r\n                    <Col>\r\n                      <Box title=\"Informações para contratação de trabalhador temporário - eSocial: Registro S-2200\">\r\n                        <Row>\r\n                          <Col>\r\n                            <InputGroupInline\r\n                              id=\"tipoInclusaoContratoTemporario\"\r\n                              label=\"Tipo de inclusão de contrato\"\r\n                              formProps={{ ...formProps, validation: { required: true } }}\r\n                              isPrependLabel={true}\r\n                              inputDropDownProps={{ optionsProvider: TIPO_INCLUSAO_CONTRATO_TEMPORARIO_ENUM_VALUES }}\r\n                              type={InputType.DROP_DOWN}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <InputGroupInline\r\n                              id=\"hipoteseLegalContratacaoTrabalhadorTemporario\"\r\n                              label=\"Hipótese legal para contratação\"\r\n                              formProps={{ ...formProps, validation: { required: true } }}\r\n                              isPrependLabel={true}\r\n                              inputDropDownProps={{ optionsProvider: HIPOTESE_LEGAL_CONTRATACAO_TRABALHADOR_TEMPORARIO_ENUM_VALUES }}\r\n                              type={InputType.DROP_DOWN}\r\n                              onChange={changeHipoteseLegalContratacao}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <InputGroupInline\r\n                              id=\"cpfTrabSubstituido\"\r\n                              label=\"CPF do trabalhador substituído\"\r\n                              formProps={{ ...formProps, validation: { required: exigeCPFTrabSubstituto } }}\r\n                              isPrependLabel={true}\r\n                              type={InputType.CPF}\r\n                              disabled={!exigeCPFTrabSubstituto}\r\n                            />\r\n                          </Col>\r\n                          <Col />\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <InputGroupInline\r\n                              id=\"justificativaContratoTemporario\"\r\n                              label=\"Justificativa de contrato cemporário\"\r\n                              formProps={{ ...formProps, validation: { required: true, maxLength: 999 } }}\r\n                              isPrependLabel={true}\r\n                              type={InputType.TEXT_AREA}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      </Box>\r\n                    </Col>\r\n                  </Row>\r\n                </Tab>\r\n              )}\r\n            </TabGroup>\r\n          </Col>\r\n        </Row>\r\n      </EditForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default VinculoEditView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMFP(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMFP) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o Módulo Folha de Pagamento. Para configurá-la acesse Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasGrupoEmpresaConfig(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n\r\n  const msg: string =\r\n    'O Grupo de empresas não está configurado para a empresa selecionada. Para configurar acesse:\\n' +\r\n    'Modulo Principal > Manutenção > Configurações > Grupo de Empresa';\r\n\r\n  if (\r\n    !globalParameter.empresa ||\r\n    !globalParameter.empresa.grupoEmpresaRaiz.grupoEmpresaConfig ||\r\n    !globalParameter.empresa.grupoEmpresa.grupoEmpresaConfig\r\n  ) {\r\n    result = msg;\r\n  }\r\n\r\n  return result;\r\n}\r\n","import { Basic } from 'summer';\r\nimport { CepPais } from './cepPais';\r\n\r\nexport interface CepUF extends Basic {\r\n  codigo?: string;\r\n  sigla?: string;\r\n  nome?: string;\r\n  exterior?: boolean;\r\n  pais?: CepPais;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.cepuf';\r\n","import { Basic } from 'summer';\r\nimport { CepUF } from './cepUF';\r\n\r\nexport interface CepLocalidade extends Basic {\r\n  nome?: string;\r\n  cep?: string;\r\n  tipo?: string;\r\n  codigoMunicipio?: string;\r\n  uf?: CepUF;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.ceplocalidade';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { SearchFilterProps } from '../../../../hooks/useSearchFilter';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepUF';\r\n\r\nexport interface CepUFISProps extends InputProps {\r\n  searchFilter?: SearchFilterProps;\r\n}\r\n\r\nconst CepUFIS: FC<CepUFISProps> = props => {\r\n  const onChange = value => {\r\n    if (props.searchFilter) {\r\n      props.searchFilter.setFilter(CLASS_NAME, value);\r\n    }\r\n    if (props.onChange) {\r\n      props.onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'sigla',\r\n            text: 'Sigla',\r\n          },\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'CepUFSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'UF'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a UF'}\r\n      type={InputType.INPUT_SEARCH}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepUFIS;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { SearchFilterProps } from '../../../../hooks/useSearchFilter';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepLocalidade';\r\nimport { CLASS_NAME as CLASS_NAME_UF } from '../../../../models/dtos/ger/cepUF';\r\n\r\nexport interface CepLocalidadeISProps extends InputProps {\r\n  searchFilter?: SearchFilterProps;\r\n}\r\n\r\nconst CepLocalidadeIS: FC<CepLocalidadeISProps> = props => {\r\n  const searchExpressionsFull = defaultExpressions => {\r\n    const expressions = [];\r\n\r\n    if (props.searchFilter) {\r\n      const item = props.searchFilter.getFilter(CLASS_NAME_UF);\r\n      if (item) {\r\n        expressions.push({\r\n          fieldName: 'uf.id',\r\n          value: item.id,\r\n        });\r\n      }\r\n    }\r\n\r\n    if (expressions.length > 0) {\r\n      expressions[0].expressions = defaultExpressions;\r\n    } else {\r\n      expressions.push(...defaultExpressions);\r\n    }\r\n\r\n    return expressions;\r\n  };\r\n\r\n  const onChange = value => {\r\n    if (props.searchFilter) {\r\n      props.searchFilter.setFilter(CLASS_NAME, value);\r\n    }\r\n    if (props.onChange) {\r\n      props.onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'cep',\r\n            text: 'CEP',\r\n          },\r\n          {\r\n            dataField: 'codigoMunicipio',\r\n            text: 'Código do Município',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressionsFull,\r\n        searchViewId: 'CepLocalidadeSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Cidade'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Cidade'}\r\n      type={InputType.INPUT_SEARCH}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepLocalidadeIS;\r\n","import { Basic } from 'summer';\r\nimport { CepLocalidade } from './cepLocalidade';\r\n\r\nexport interface CepBairro extends Basic {\r\n  bairro?: string;\r\n  localidade?: CepLocalidade;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.cepbairro';\r\n","import { Basic } from 'summer';\r\nimport { CepBairro } from './cepBairro';\r\nimport { CepLocalidade } from './cepLocalidade';\r\nimport { CepTitulo } from './cepTitulo';\r\nimport { CepUF } from './cepUF';\r\n\r\nexport interface CepLogradouro extends Basic {\r\n  bairro?: CepBairro;\r\n  cep?: string;\r\n  complemento?: string;\r\n  localidade?: CepLocalidade;\r\n  nome?: string;\r\n  titulo?: CepTitulo;\r\n  uf?: CepUF;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.ceplogradouro';\r\n","import { Basic } from 'summer';\r\n\r\nexport interface CepTitulo extends Basic {\r\n  nome?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.ceptitulo';\r\n","import { Basic } from 'summer';\r\nimport { Bem } from '../mcp/bem';\r\nimport { GrupoCentroCusto } from './grupoCentroCusto';\r\n\r\nexport interface CentroCusto extends Basic {\r\n  codigo?: string;\r\n  codigoReduzido?: number;\r\n  descricao?: string;\r\n  analitica?: boolean;\r\n  grupoCentroCusto?: GrupoCentroCusto;\r\n  bem?: Bem;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.centrocusto';\r\n","import { Basic } from 'summer';\r\nimport { CentroCusto } from '../ger/centroCusto';\r\nimport { Fpas } from './fpas';\r\nimport { Gps } from './gps';\r\nimport { LotacaoTributaria } from './lotacaoTributaria';\r\nimport { TomadorServicoEmail } from './tomadorServicoEmail';\r\nimport { TomadorServicoEndereco } from './tomadorServicoEndereco';\r\nimport { TomadorServicoTelefone } from './tomadorServicoTelefone';\r\n\r\nexport interface TomadorServico extends Basic {\r\n  aliquotaFap?: number;\r\n  aliquotaRat?: number;\r\n  caepf?: string;\r\n  cei?: string;\r\n  centroCusto?: CentroCusto;\r\n  cnaef?: string;\r\n  cnaefDesmembramento?: string;\r\n  cnpj?: string;\r\n  codigo?: number;\r\n  codigoDeducaoTerceiros?: string;\r\n  codigoFpas?: Fpas;\r\n  codigoGps?: Gps;\r\n  codigoGpsTerceiros?: Gps;\r\n  /** este campo utiliza o enum CodigoRecolhimentoEnum */\r\n  codigoRecolhimentoSefip?: string;\r\n  contribuicaoPatronalSubstituida?: boolean;\r\n  /** este campo utiliza o enum TipoControlePontoEnum */\r\n  controlePonto?: string;\r\n  emails?: TomadorServicoEmail[];\r\n  enderecos?: TomadorServicoEndereco[];\r\n  /** este campo utiliza o enum IndicativoContratacaoAprendizEnum */\r\n  indicativoContratacaoAprendiz?: string;\r\n  /** este campo utiliza o enum IndicativoContratacaoPCDEnum */\r\n  indicativoContratacaoPCD?: string;\r\n  isCnpjInscricaoContratante?: boolean;\r\n  isCnpjInscricaoProprietario?: boolean;\r\n  lotacaoTributaria?: LotacaoTributaria;\r\n  nome?: string;\r\n  nrInscricaoProprietario?: string;\r\n  nrInscricaoContratante?: string;\r\n  percentualDesoneracaoGps?: number;\r\n  /** este campo utiliza o enum TipoCAEPFEnum */\r\n  tipoCaepf?: string;\r\n  telefones?: TomadorServicoTelefone[];\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.tomadorservico';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { SearchFilterProps } from '../../../../hooks/useSearchFilter';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepBairro';\r\nimport { CLASS_NAME as CLASS_NAME_LOCALIDADE } from '../../../../models/dtos/ger/cepLocalidade';\r\nimport { CLASS_NAME as CLASS_NAME_UF } from '../../../../models/dtos/ger/cepUF';\r\n\r\nexport interface CepBairroISProps extends InputProps {\r\n  searchFilter?: SearchFilterProps;\r\n}\r\n\r\nconst CepBairroIS: FC<CepBairroISProps> = props => {\r\n  const searchExpressionsFull = defaultExpressions => {\r\n    let expressions = [];\r\n\r\n    if (props.searchFilter) {\r\n      const localidade = props.searchFilter.getFilter(CLASS_NAME_LOCALIDADE);\r\n      const uf = props.searchFilter.getFilter(CLASS_NAME_UF);\r\n      if (localidade) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'localidade.id',\r\n            value: localidade.id,\r\n          },\r\n        ];\r\n      } else if (uf) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'localidade.uf.id',\r\n            value: uf.id,\r\n          },\r\n        ];\r\n      }\r\n    }\r\n\r\n    if (expressions.length > 0) {\r\n      expressions[0].expressions = defaultExpressions;\r\n    } else {\r\n      expressions.push(...defaultExpressions);\r\n    }\r\n\r\n    return expressions;\r\n  };\r\n\r\n  const onChange = value => {\r\n    if (props.searchFilter) {\r\n      props.searchFilter.setFilter(CLASS_NAME, value);\r\n    }\r\n    if (props.onChange) {\r\n      props.onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'bairro',\r\n            text: 'Nome do Bairro',\r\n          },\r\n          {\r\n            dataField: 'localidade.nome',\r\n            text: 'Nome da cidade',\r\n          },\r\n          {\r\n            dataField: 'localidade.uf.sigla',\r\n            text: 'Sigla da UF',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressionsFull,\r\n        searchViewId: 'CepBairroSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Bairro'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Bairro'}\r\n      type={InputType.INPUT_SEARCH}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepBairroIS;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepTitulo';\r\n\r\nconst CepTituloIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'CepTituloSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Tipo'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Tipo de Logradouro'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepTituloIS;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CepManagerProps } from '../../../../hooks/useCepManager';\r\nimport { SearchFilterProps } from '../../../../hooks/useSearchFilter';\r\nimport { CLASS_NAME as CLASS_NAME_BAIRRO } from '../../../../models/dtos/ger/cepBairro';\r\nimport { CLASS_NAME as CLASS_NAME_LOCALIDADE } from '../../../../models/dtos/ger/cepLocalidade';\r\nimport { CepLogradouro, CLASS_NAME } from '../../../../models/dtos/ger/cepLogradouro';\r\nimport { CLASS_NAME as CLASS_NAME_UF } from '../../../../models/dtos/ger/cepUF';\r\n\r\nexport interface CepLogradouroProps {\r\n  cepManager?: CepManagerProps;\r\n  searchFilter?: SearchFilterProps;\r\n}\r\n\r\nconst CepLogradouroIS: FC<InputProps & CepLogradouroProps> = props => {\r\n  const searchExpressionsFull = defaultExpressions => {\r\n    let expressions = [];\r\n\r\n    if (props.searchFilter) {\r\n      const bairro = props.searchFilter.getFilter(CLASS_NAME_BAIRRO);\r\n      const localidade = props.searchFilter.getFilter(CLASS_NAME_LOCALIDADE);\r\n      const uf = props.searchFilter.getFilter(CLASS_NAME_UF);\r\n      if (bairro) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'bairro.id',\r\n            value: bairro.id,\r\n          },\r\n        ];\r\n      } else if (localidade) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'localidade.id',\r\n            value: localidade.id,\r\n          },\r\n        ];\r\n      } else if (uf) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'uf.id',\r\n            value: uf.id,\r\n          },\r\n        ];\r\n      }\r\n    }\r\n\r\n    if (expressions.length > 0) {\r\n      expressions[0].expressions = defaultExpressions;\r\n    } else {\r\n      expressions.push(...defaultExpressions);\r\n    }\r\n\r\n    return expressions;\r\n  };\r\n\r\n  const onChangeHandle = (result: CepLogradouro) => {\r\n    if (props.cepManager) {\r\n      props.cepManager.manage(result);\r\n    }\r\n    if (props.searchFilter) {\r\n      props.searchFilter.setFilter(CLASS_NAME, result);\r\n    }\r\n    if (props.onChange) {\r\n      props.onChange(result);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      onChange={onChangeHandle}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'bairro.bairro',\r\n            text: 'Bairro',\r\n          },\r\n          {\r\n            dataField: 'cep',\r\n            text: 'CEP',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressionsFull,\r\n        searchViewId: 'CepLogradouroSearchView',\r\n      }}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepLogradouroIS;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/centroCusto';\r\n\r\nconst CentroCustoIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'CentroCustoSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Centro de Custo'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Centro de Custo'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CentroCustoIS;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mfp/tomadorServico';\r\n\r\nconst TomadorServicoIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      type={InputType.INPUT_SEARCH}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'TomadorServicoSearchView',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TomadorServicoIS;\r\n","import { UseFormProps } from 'summer';\r\nimport { CepLogradouro } from '../models/dtos/ger/cepLogradouro';\r\n\r\nexport interface CepManagerOptions {\r\n  bairro?: boolean | string;\r\n  cep?: boolean | string;\r\n  localidade?: boolean | string;\r\n  nome?: boolean | string;\r\n  titulo?: boolean | string;\r\n  uf?: boolean | string;\r\n}\r\n\r\nexport interface CepManagerProps {\r\n  manage: (logradouro: CepLogradouro) => void;\r\n  reset: () => void;\r\n}\r\n\r\nconst useCepManager = (formProps: UseFormProps, props: CepManagerOptions): CepManagerProps => {\r\n  const getProp = (name: string): string => {\r\n    let result = null;\r\n\r\n    if (props[name] !== undefined) {\r\n      result = typeof props[name] === 'boolean' ? name : props[name];\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const fillForm = (logradouro: CepLogradouro) => {\r\n    const keyList = Object.keys(props);\r\n    keyList.forEach(key => {\r\n      const name = getProp(key);\r\n      if (name) {\r\n        formProps.setValue(name, logradouro[key]);\r\n      }\r\n    });\r\n  };\r\n\r\n  const clearForm = () => {\r\n    fillForm({\r\n      bairro: null,\r\n      cep: null,\r\n      localidade: null,\r\n      nome: null,\r\n      titulo: null,\r\n      uf: null,\r\n    });\r\n  };\r\n\r\n  return {\r\n    manage: (logradouro: CepLogradouro) => {\r\n      if (logradouro) {\r\n        fillForm(logradouro);\r\n      } else {\r\n        clearForm();\r\n      }\r\n    },\r\n    reset: () => clearForm(),\r\n  };\r\n};\r\n\r\nexport default useCepManager;\r\n","import { Basic } from 'summer';\r\n\r\nexport interface Cbo extends Basic {\r\n  codigo?: string;\r\n  descricao?: string;\r\n  professor?: boolean;\r\n  motoristaProfissional?: boolean;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.cbo';\r\n","export const LUCRO_REAL = { value: 'lucroReal', label: 'Lucro Real' };\r\nexport const LUCRO_REAL_ARBITRADO = { value: 'lucroRealArbitrado', label: 'Lucro Real/Arbitrado' };\r\nexport const LUCRO_PRESUMIDO_REAL = { value: 'lucroPresumidoReal', label: 'Lucro Presumido/Real' };\r\nexport const LUCRO_PRESUMIDO_REAL_ARBITRADO = { value: 'lucroPresumidoRealArbitrado', label: 'Lucro Presumido/Real/Arbitrado' };\r\nexport const LUCRO_PRESUMIDO = { value: 'lucroPresumido', label: 'Lucro Presumido' };\r\nexport const LUCRO_ARBITRADO = { value: 'lucroArbitrado', label: 'Lucro Arbitrado' };\r\nexport const LUCRO_PRESUMIDO_ARBITRADO = { value: 'lucroPresumidoArbitrado', label: 'Lucro Presumido/Arbitrado' };\r\nexport const IMUNE = { value: 'imune', label: 'Imune do IRPJ' };\r\nexport const ISENTO = { value: 'isento', label: 'Isenta do IRPJ' };\r\nexport const SIMPLES_NACIONAL = { value: 'simplesNacional', label: 'Simples Nacional' };\r\n\r\nexport const TIPO_TRIBUTACAO_ENUM_VALUES = [\r\n  IMUNE,\r\n  ISENTO,\r\n  LUCRO_ARBITRADO,\r\n  LUCRO_PRESUMIDO,\r\n  LUCRO_PRESUMIDO_ARBITRADO,\r\n  LUCRO_PRESUMIDO_REAL,\r\n  LUCRO_PRESUMIDO_REAL_ARBITRADO,\r\n  LUCRO_REAL,\r\n  LUCRO_REAL_ARBITRADO,\r\n  SIMPLES_NACIONAL,\r\n];\r\n\r\nexport const AUTOMATIZACAO_EMPRESA_VALUES = [LUCRO_REAL, LUCRO_PRESUMIDO, ISENTO, IMUNE, SIMPLES_NACIONAL];\r\n\r\nexport const TRIBUTACAO_LUCRO_REAL_ENUM_VALUES = [LUCRO_REAL, LUCRO_REAL_ARBITRADO, LUCRO_PRESUMIDO_REAL_ARBITRADO];\r\n","export const ADMISSIONAL = { label: 'Admissional', value: 'ADMISSIONAL' };\r\nexport const PERIODICO = { label: 'Periódico', value: 'PERIODICO' };\r\nexport const RETORNO_TRABALHO = { label: 'Retorno ao trabalho', value: 'RETORNO_TRABALHO' };\r\nexport const MUDANCA_FUNCAO = { label: 'Mudança de função', value: 'MUDANCA_FUNCAO' };\r\nexport const DEMISSIONAL = { label: 'Demissional', value: 'DEMISSIONAL' };\r\n\r\nexport const TIPO_EXAME_MEDICO_ENUM_VALUES = [ADMISSIONAL, PERIODICO, RETORNO_TRABALHO, MUDANCA_FUNCAO, DEMISSIONAL];\r\n","import { Basic } from 'summer';\r\n\r\nexport interface Banco extends Basic {\r\n  codigo?: string;\r\n  digitoVerificador?: string;\r\n  nome?: string;\r\n  site?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.banco';\r\n","import { Basic } from 'summer';\r\nimport { Banco } from '../mfp/banco';\r\nimport { AgenciaEmail } from './agenciaEmail';\r\nimport { AgenciaTelefone } from './agenciaTelefone';\r\nimport { CepBairro } from './cepBairro';\r\nimport { CepLocalidade } from './cepLocalidade';\r\nimport { CepTitulo } from './cepTitulo';\r\nimport { CepUF } from './cepUF';\r\n\r\nexport interface Agencia extends Basic {\r\n  bairro?: CepBairro;\r\n  banco?: Banco;\r\n  cep?: string;\r\n  cidade?: CepLocalidade;\r\n  complemento?: string;\r\n  digitoVerificador?: string;\r\n  emails?: AgenciaEmail[];\r\n  logradouro?: string;\r\n  nome?: string;\r\n  numero?: string;\r\n  numeroEndereco?: string;\r\n  observacao?: string;\r\n  telefones?: AgenciaTelefone[];\r\n  titulo?: CepTitulo;\r\n  uf?: CepUF;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.agencia';\r\n","import { Basic } from 'summer';\r\nimport { Cbo } from './cbo';\r\n\r\nexport interface Cargo extends Basic {\r\n  codigo?: number;\r\n  descricao?: string;\r\n  cbo?: Cbo;\r\n  codigoEsocial?: string;\r\n  referenciaAlteracao?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.cargo';\r\n","export const MENSAL = { label: 'Mensais', value: 'MENSAL' };\r\nexport const PERIODICO = { label: 'Periódicos', value: 'PERIODICO' };\r\n\r\nexport const TIPO_PAGAMENTO_MFP_ENUM_VALUES = [MENSAL, PERIODICO];\r\n","export const TODOS = { value: 'TODOS', label: 'Todos' };\r\nexport const ATIVOS = { value: 'ATIVOS', label: 'Ativos' };\r\nexport const INATIVOS = { value: 'INATIVOS', label: 'Inativos' };\r\n\r\nexport const TODAS = { value: 'TODAS', label: 'Todas' };\r\nexport const ATIVAS = { value: 'ATIVAS', label: 'Ativas' };\r\nexport const INATIVAS = { value: 'INATIVOS', label: 'Inativas' };\r\n\r\nexport const PERFIL_ENUM_MALE_VALUES = [TODOS, ATIVOS, INATIVOS];\r\n\r\nexport const PERFIL_ENUM_FEMALE_VALUES = [TODAS, ATIVAS, INATIVAS];\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nvar defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nvar Table = function Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive, cssModule);\n    return React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\nexport default Table;","import { Basic } from 'summer';\r\n\r\nexport interface PlanoSaude extends Basic {\r\n  codigo?: number;\r\n  razaoSocial?: string;\r\n  cnpj?: string;\r\n  registroANS?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.planosaude';\r\n","import { Basic } from 'summer';\r\nimport { CepBairro } from '../ger/cepBairro';\r\nimport { CepLocalidade } from '../ger/cepLocalidade';\r\nimport { CepTitulo } from '../ger/cepTitulo';\r\nimport { CepUF } from '../ger/cepUF';\r\n\r\nexport interface InstituicaoEnsino extends Basic {\r\n  nome?: string;\r\n  cnpj?: string;\r\n  codigo?: number;\r\n  logradouro?: string;\r\n  numero?: string;\r\n  complemento?: string;\r\n  cep?: string;\r\n  cepUf?: CepUF;\r\n  cepBairro?: CepBairro;\r\n  cepTitulo?: CepTitulo;\r\n  cepLocalidade?: CepLocalidade;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.instituicaoensino';\r\n","import { Basic } from 'summer';\r\n\r\nexport interface PrevidenciaComplementar extends Basic {\r\n  cnpj?: string;\r\n  codigo?: number;\r\n  razaoSocial?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.previdenciacomplementar';\r\n","import { Basic } from 'summer';\r\n\r\nexport interface SindicatoExample extends Basic {\r\n  cnpj?: string;\r\n  codigo?: number;\r\n  codigoEntidadeSindical?: string;\r\n  dia?: number;\r\n  mes?: number;\r\n  /** campo utiliza o enum OnusRemuneracaoEnum */\r\n  onusRemuneracaoAfast?: string;\r\n  razaoSocial?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.sindicatoexample';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mfp/cbo';\r\n\r\nconst CboIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      type={InputType.INPUT_SEARCH}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n          {\r\n            dataField: 'professor',\r\n            text: 'Salário aula',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'CboSearchView',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CboIS;\r\n","import { Basic } from 'summer';\r\nimport { CepBairro } from '../ger/cepBairro';\r\nimport { CepLocalidade } from '../ger/cepLocalidade';\r\nimport { CepTitulo } from '../ger/cepTitulo';\r\nimport { CepUF } from '../ger/cepUF';\r\n\r\nexport interface ResponsavelMenorAprendiz extends Basic {\r\n  cargo?: string;\r\n  cep?: string;\r\n  cepBairro?: CepBairro;\r\n  cepLocalidade?: CepLocalidade;\r\n  cepTitulo?: CepTitulo;\r\n  cepUf?: CepUF;\r\n  codigo?: number;\r\n  complemento?: string;\r\n  cpf?: string;\r\n  /** este campo utiliza o enum EstadoCivilEnum */\r\n  estadoCivil?: string;\r\n  logradouro?: string;\r\n  /** este campo utiliza o enum NacionalidadeEnum */\r\n  nacionalidade?: string;\r\n  nome?: string;\r\n  numero?: string;\r\n  rg?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.responsavelmenoraprendiz';\r\n","export const MAXIMO_DIAS_EXPERIENCIA_CONTRATO_TRABALHO: number = 90;\r\nexport const NRO_HORAS_CONTRATUAIS_MENSALISTA: number = 220;\r\nexport const OPERACOES_CONSULTA_VALORES: object[] = [\r\n  { label: '>', value: '>' },\r\n  { label: '<', value: '<' },\r\n  { label: '≥', value: '≥' },\r\n  { label: '≤', value: '≤' },\r\n  { label: '=', value: '=' },\r\n  { label: '<>', value: '<>' },\r\n];\r\n\r\nexport const CONSTANTES = { MAXIMO_DIAS_EXPERIENCIA_CONTRATO_TRABALHO, NRO_HORAS_CONTRATUAIS_MENSALISTA, OPERACOES_CONSULTA_VALORES };\r\n"],"sourceRoot":""}
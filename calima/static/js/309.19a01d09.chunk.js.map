{"version":3,"sources":["models/enumerated/ger/grauSatisfacaoEnum.ts","views/components/ger/perfilIS/PerfilIS.tsx","views/pages/ger/usuario/UsuarioEditView.tsx","../node_modules/reactstrap/es/Alert.js","models/dtos/ger/perfil.ts","models/dtos/ger/usuario.ts","models/dtos/mfp/evento.ts"],"names":["MUITO_SATISFEITO","label","value","PerfilIS","props","react_default","a","createElement","summer_esm","Object","assign","isPrependLabel","inputSearchProps","objectSpread2","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","placeholder","type","InputType","INPUT_SEARCH","defaultSortedEmpresa","order","OrderType","ASC","UsuarioEditView","selectedItem","getSelectedItem","_useState","useState","undefined","_useState2","slicedToArray","expressionsEmpresa","setExpressionsEmpresa","formProps","useForm","defaultValues","mode","extraFormProps","globalReducer","useSelector","state","_useState3","getValues","empresas","_useState4","selectedEmpresas","setSelectedEmpresas","_useState5","eventos","_useState6","selectedEventos","setSelectedEventos","_useState7","_useState8","setEventos","_useState9","_useState10","isMaster","setIsMaster","_useState11","_useState12","isConfigBoxConnectDisabled","setIsConfigBoxConnectDisabled","_useState13","_useState14","isClienteConnect","setIsClienteConnect","_useState15","_useState16","isExibirEnviarEmail","setIsExibirEnviarEmail","_useState17","_useState18","possuiSMSHabilitado","setPossuiSMSHabilitado","dispatch","useDispatch","history","useHistory","useEffect","_formProps$getValues","diaLimiteLancamento","administrador","cliente","funcionario","perfil","id","senha","grauSatisfacao","numeroCelular","_globalReducer$global","globalParameter","empresa","acesso","replace","getSenhaAjustada","confirmacaoSenha","setarUrl","searchExpressions","usuario","ids","map","it","length","expressions","fieldName","operation","ordered","getExpressions","getEventos","isClienteConnectHabilitado","configBoxConnect","empresaAtual","perfilModulo","connect","box","enviarPorEmail","temCreditoSMS","register","name","isClienteSelected","result","isEmpty","dtSincronizacao","usarAdm","administradora","possuiModulosEmail","setValue","possuiSite","homePage","url","site","reset","urlLogin","resetEnvioEmail","onChangeSwitch","switchClicado","outro1","outro2","empresasSelecionadasInvalidas","_step","_iterator","createForOfIteratorHelper","s","n","done","empresaA","_step2","_iterator2","empresaB","grupo","alertManager","emit","ACTION_EVENTS","SHOW","message","AlertType","INFORMATION","err","e","f","findEventosConnect","errorFunction","mensagem","showToast","ERROR","thenFunction","columnsEmpresa","editable","filter","FilterType","NUMBER","sort","TEXT","formatter","cnpjFormatter","cpfFormatter","selectRowEmpresas","clickToSelect","SelectModeEnum","CHECKBOX","onSelect","row","isSelect","empresasSelecionadas","onSelectAll","rows","selected","selectRowEventos","eventosSelecionados","propToolTip","messagem","placement","validateExtras","erros","_formProps$getValues5","push","title","useGlobalParameter","wikiId","editViewProps","externalSubmit","hidden","Row","Col","perfilIS_PerfilIS","validation","required","disabled","onChange","maxLength","md5","PASSWORD","CPF","EMAIL","tooltipProps","envioSMS","TELEFONE","DATE","CustomInput","innerRef","withTooltip","Label","style","marginRight","inline","Alert","color","className","searchDataGridProps","selectRow","defaultSorted","CLASS_NAME_EMPRESA","extraData","getExtraData","hideActionColumn","searchExpressionsProps","remote","cellEdit","pagination","search","addButtonProps","hideAddButton","href","target","rel","URL","Button","size","onClick","index_es","icon","data","CLASS_NAME_EVENTO","hideCustomSearch","handleSubmit","params","_formProps$getValues6","progressActions","showProgress","animated","striped","persistUsuario","hideProgress","SUCCESS","goBack","btnSubmitIcon","btnSubmitLabel","handleClose","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","prop_types__WEBPACK_IMPORTED_MODULE_4__","prop_types__WEBPACK_IMPORTED_MODULE_4___default","classnames__WEBPACK_IMPORTED_MODULE_5__","classnames__WEBPACK_IMPORTED_MODULE_5___default","_utils__WEBPACK_IMPORTED_MODULE_6__","_Fade__WEBPACK_IMPORTED_MODULE_7__","propTypes","children","node","string","closeClassName","closeAriaLabel","cssModule","object","fade","bool","isOpen","toggle","func","tag","transition","shape","oneOfType","defaultProps","unmountOnExit","Tag","attributes","classes","alert-dismissible","closeClasses","alertTransition","baseClass","timeout","in","role","aria-label","aria-hidden","__webpack_exports__","d"],"mappings":"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","file":"static/js/309.19a01d09.chunk.js","sourcesContent":["export const MUITO_SATISFEITO = { label: 'Muito Satisfeito', value: '1' };\r\nexport const SATISFEITO = { label: 'Satisfeito', value: '2' };\r\nexport const INDIFERENTE = { label: 'Indiferente', value: '3' };\r\nexport const INSATISFEITO = { label: 'Insatisfeito', value: '4' };\r\nexport const MUITO_INSATISFEITO = { label: 'Muito Insatisfeito', value: '5' };\r\n\r\nexport const GRAU_SATISFACAO_ENUM_VALUES = [MUITO_SATISFEITO, SATISFEITO, INDIFERENTE, INSATISFEITO, MUITO_INSATISFEITO];\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/perfil';\r\n\r\nconst PerfilIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'PerfilSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Perfil'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Selecione um perfil'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PerfilIS;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps, useHistory } from 'react-router';\r\nimport { Alert, Button, Col, CustomInput, Label, Row } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  cnpjFormatter,\r\n  ColumnsProps,\r\n  cpfFormatter,\r\n  DefaultSortProps,\r\n  EditForm,\r\n  EditViewProps,\r\n  ErroList,\r\n  ERROR,\r\n  FilterType,\r\n  getExtraData,\r\n  getSelectedItem,\r\n  InputGroupInline,\r\n  InputProps,\r\n  InputTooltipProps,\r\n  InputType,\r\n  isEmpty,\r\n  md5,\r\n  OrderType,\r\n  ProcessBar,\r\n  progressActions,\r\n  SearchDataGrid,\r\n  SearchExpression,\r\n  SearchViewProps,\r\n  SelectModeEnum,\r\n  SelectRowProps,\r\n  showToast,\r\n  SUCCESS,\r\n  Tab,\r\n  TabGroup,\r\n  WindowComponent,\r\n  withTooltip,\r\n} from 'summer';\r\nimport { CLASS_NAME as CLASS_NAME_EMPRESA, EmpresaVW } from '../../../../models/dtos/ger/empresaVW';\r\nimport { CLASS_NAME, Usuario } from '../../../../models/dtos/ger/usuario';\r\nimport { CLASS_NAME as CLASS_NAME_EVENTO, Evento } from '../../../../models/dtos/mfp/evento';\r\nimport { MUITO_SATISFEITO } from '../../../../models/enumerated/ger/grauSatisfacaoEnum';\r\nimport { findEventosConnect, persistUsuario } from '../../../../services/ger.service';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport PerfilIS from '../../../components/ger/perfilIS/PerfilIS';\r\n\r\ninterface UsuarioEditViewProps extends EditViewProps<Usuario> {}\r\n\r\ninterface UsuarioViewExtraProps {\r\n  confirmacaoSenha?: string;\r\n}\r\n\r\nconst defaultSortedEmpresa: DefaultSortProps[] = [\r\n  {\r\n    dataField: 'codigo',\r\n    order: OrderType.ASC,\r\n  },\r\n];\r\n\r\nconst UsuarioEditView: FC<UsuarioEditViewProps & RouteComponentProps & SearchViewProps<EmpresaVW> & InputProps> = props => {\r\n  const selectedItem = getSelectedItem(props);\r\n  const [expressionsEmpresa, setExpressionsEmpresa] = useState<SearchExpression[]>(undefined);\r\n  const formProps = useForm<Usuario>({ defaultValues: selectedItem, mode: 'onBlur' });\r\n  const extraFormProps = useForm<UsuarioViewExtraProps>({ mode: 'onBlur' });\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [selectedEmpresas, setSelectedEmpresas] = useState<EmpresaVW[]>(formProps.getValues().empresas || []);\r\n  const [selectedEventos, setSelectedEventos] = useState<Evento[]>(formProps.getValues().eventos || []);\r\n  const [eventos, setEventos] = useState<Evento[]>();\r\n  const [isMaster, setIsMaster] = useState<boolean>();\r\n  const [isConfigBoxConnectDisabled, setIsConfigBoxConnectDisabled] = useState<boolean>();\r\n  const [isClienteConnect, setIsClienteConnect] = useState<boolean>();\r\n  const [isExibirEnviarEmail, setIsExibirEnviarEmail] = useState<boolean>();\r\n  const [possuiSMSHabilitado, setPossuiSMSHabilitado] = useState();\r\n  const dispatch = useDispatch();\r\n  const urlConnect = 'https://connect.projetusti.com.br';\r\n  const urlSite = 'https://site.projetusti.com.br';\r\n  const urlBox = 'https://box.projetusti.com.br';\r\n  const urlAtendimentoLoja = 'https://atendimento.projetusti.com.br/chat/#/0f01ea6c-dbd3-42f4-9543-c951702ab3de/';\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(\r\n    () => {\r\n      const { diaLimiteLancamento, administrador, cliente, funcionario, perfil, id, senha, grauSatisfacao, numeroCelular } = formProps.getValues();\r\n      const { empresa, acesso } = globalReducer.globalParameter;\r\n\r\n      if (!diaLimiteLancamento) {\r\n        formProps.getValues().diaLimiteLancamento = 1;\r\n      }\r\n\r\n      if (!grauSatisfacao) {\r\n        formProps.getValues().grauSatisfacao = MUITO_SATISFEITO.value;\r\n      }\r\n\r\n      if (numeroCelular) {\r\n        formProps.getValues().numeroCelular = numeroCelular.replace('+55', '');\r\n      }\r\n\r\n      formProps.getValues().senha = getSenhaAjustada(senha);\r\n      extraFormProps.getValues().confirmacaoSenha = getSenhaAjustada(extraFormProps.getValues().confirmacaoSenha);\r\n\r\n      setarUrl();\r\n\r\n      setExpressionsEmpresa(getExpressions());\r\n      getEventos();\r\n\r\n      isClienteConnectHabilitado();\r\n      configBoxConnect();\r\n      formProps.getValues().empresaAtual = empresa;\r\n\r\n      setIsMaster(id === 1);\r\n\r\n      if (perfil && perfil.perfilModulo) {\r\n        setIsExibirEnviarEmail(perfil.perfilModulo.connect || perfil.perfilModulo.box);\r\n        formProps.getValues().enviarPorEmail = id === undefined;\r\n      }\r\n\r\n      if (!cliente && !funcionario && !administrador) {\r\n        formProps.getValues().funcionario = true;\r\n      }\r\n\r\n      setPossuiSMSHabilitado(acesso && acesso.temCreditoSMS);\r\n\r\n      formProps.register({ name: 'empresas' });\r\n      formProps.register({ name: 'eventos' });\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  function getExpressions() {\r\n    const searchExpressions: SearchExpression[] = [];\r\n    const { usuario } = globalReducer.globalParameter;\r\n\r\n    if (usuario.administrador || !usuario.empresas) {\r\n      return searchExpressions;\r\n    }\r\n\r\n    const ids = usuario.empresas.map(it => it.id);\r\n\r\n    if (ids.length > 0) {\r\n      searchExpressions[0].expressions = [\r\n        {\r\n          fieldName: 'id',\r\n          operation: '_field in _value',\r\n          ordered: true,\r\n          value: ids,\r\n        },\r\n      ];\r\n    }\r\n\r\n    return searchExpressions;\r\n  }\r\n\r\n  const isClienteConnectHabilitado = () => {\r\n    const { perfil } = formProps.getValues();\r\n\r\n    if (perfil && perfil.perfilModulo) {\r\n      setIsClienteConnect(perfil.perfilModulo.connect && isClienteSelected());\r\n    } else {\r\n      setIsClienteConnect(false);\r\n    }\r\n  };\r\n\r\n  const isClienteSelected = (): boolean => {\r\n    return formProps.getValues().cliente;\r\n  };\r\n\r\n  const onChangePerfil = () => {\r\n    resetEnvioEmail();\r\n    setarUrl();\r\n    isClienteConnectHabilitado();\r\n    configBoxConnect();\r\n  };\r\n\r\n  const configBoxConnect = () => {\r\n    const { perfil } = formProps.getValues();\r\n    if (perfil && perfil.perfilModulo) {\r\n      setIsConfigBoxConnectDisabled(!perfil.perfilModulo.connect && !perfil.perfilModulo.box);\r\n    } else {\r\n      setIsConfigBoxConnectDisabled(true);\r\n    }\r\n  };\r\n\r\n  const getSenhaAjustada = (senha: string) => {\r\n    let result: string = senha;\r\n    if (isEmpty(senha) && formProps.getValues().dtSincronizacao) {\r\n      result = 'senha_padrao';\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const setarUrl = (usarAdm: boolean = true) => {\r\n    const { perfil } = formProps.getValues();\r\n    const { administradora } = globalReducer.globalParameter;\r\n\r\n    if (perfil && perfil.perfilModulo) {\r\n      const possuiModulosEmail: boolean = perfil.perfilModulo.connect || perfil.perfilModulo.box;\r\n      setIsExibirEnviarEmail(possuiModulosEmail);\r\n      if (possuiModulosEmail) {\r\n        formProps.setValue('enviarPorEmail', isEmpty(formProps.getValues().id));\r\n        const possuiSite: boolean = administradora && !isEmpty(administradora.homePage);\r\n        let url;\r\n        if (usarAdm && possuiSite) {\r\n          url = administradora.homePage;\r\n        } else {\r\n          if (perfil.perfilModulo.connect) {\r\n            url = urlConnect;\r\n          } else if (perfil.perfilModulo.site) {\r\n            url = urlSite;\r\n          } else {\r\n            url = urlBox;\r\n          }\r\n        }\r\n        formProps.reset({\r\n          ...formProps.getValues(),\r\n          urlLogin: url,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const resetEnvioEmail = () => {\r\n    setIsExibirEnviarEmail(false);\r\n    formProps.setValue('urlLogin', undefined);\r\n    formProps.setValue('enviarPorEmail', false);\r\n  };\r\n\r\n  const onChangeSwitch = (switchClicado: string, outro1: string, outro2: string) => {\r\n    return () => {\r\n      formProps.setValue(switchClicado, formProps.getValues()[switchClicado]);\r\n      formProps.setValue(outro1, false);\r\n      formProps.setValue(outro2, false);\r\n      isClienteConnectHabilitado();\r\n    };\r\n  };\r\n\r\n  const getEventos = () => {\r\n    if (selectedEmpresas.length > 0) {\r\n      let empresasSelecionadasInvalidas = false;\r\n\r\n      for (const empresaA of selectedEmpresas) {\r\n        for (const empresaB of selectedEmpresas) {\r\n          if (!empresasSelecionadasInvalidas && empresaA.grupo !== empresaB.grupo) {\r\n            empresasSelecionadasInvalidas = true;\r\n            setEventos([]);\r\n            alertManager.emit(ACTION_EVENTS.SHOW, {\r\n              message:\r\n                'As empresas selecionadas devem pertencer ao mesmo grupo de empresas para que os eventos que foram habilitados sejam enviados ao Connect',\r\n              type: AlertType.INFORMATION,\r\n            });\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!empresasSelecionadasInvalidas) {\r\n        findEventosConnect(selectedEmpresas[0].id, {\r\n          errorFunction: mensagem => {\r\n            showToast(mensagem, ERROR);\r\n          },\r\n          thenFunction: (result: Evento[]) => {\r\n            setEventos(result);\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const columnsEmpresa: ColumnsProps[] = [\r\n    {\r\n      dataField: 'codigo',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.NUMBER,\r\n      },\r\n      sort: true,\r\n      text: 'Código',\r\n    },\r\n    {\r\n      dataField: 'razaoSocial',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      sort: true,\r\n      text: 'Razão Social',\r\n    },\r\n    {\r\n      dataField: 'nomeFantasia',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      sort: true,\r\n      text: 'Nome Fantasia',\r\n    },\r\n    {\r\n      dataField: 'cnpj',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      formatter: cnpjFormatter,\r\n      sort: true,\r\n      text: 'CNPJ',\r\n    },\r\n    {\r\n      dataField: 'cpf',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      formatter: cpfFormatter,\r\n      sort: true,\r\n      text: 'CPF',\r\n    },\r\n    {\r\n      dataField: 'cei',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      sort: true,\r\n      text: 'CEI',\r\n    },\r\n    {\r\n      dataField: 'ie',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      sort: true,\r\n      text: 'IE',\r\n    },\r\n    {\r\n      dataField: 'im',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      sort: true,\r\n      text: 'IM',\r\n    },\r\n    {\r\n      dataField: 'grupo',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      sort: true,\r\n      text: 'Grupo',\r\n    },\r\n  ];\r\n\r\n  const handleOnSelectEmpresas = (row, isSelect) => {\r\n    setEventos([]);\r\n    const empresasSelecionadas = isSelect ? [...selectedEmpresas, row] : selectedEmpresas.filter(it => it.id !== row.id);\r\n    setSelectedEmpresas(empresasSelecionadas);\r\n    formProps.setValue('empresas', empresasSelecionadas);\r\n  };\r\n\r\n  const handleOnSelectAllEmpresas = (isSelect, rows) => {\r\n    setEventos([]);\r\n    setSelectedEmpresas(isSelect ? rows : []);\r\n    formProps.setValue('empresas', rows);\r\n  };\r\n\r\n  const handleOnSelectEventos = (row, isSelect) => {\r\n    const eventosSelecionados = isSelect ? [...selectedEventos, row] : selectedEventos.filter(it => it.id !== row.id);\r\n    setSelectedEventos(eventosSelecionados);\r\n    formProps.setValue('eventos', eventosSelecionados);\r\n  };\r\n\r\n  const handleOnSelectAllEventos = (isSelect, rows) => {\r\n    setSelectedEventos(isSelect ? rows : []);\r\n    formProps.setValue('eventos', rows);\r\n  };\r\n\r\n  const selectRowEmpresas: SelectRowProps = {\r\n    clickToSelect: true,\r\n    mode: SelectModeEnum.CHECKBOX,\r\n    onSelect: handleOnSelectEmpresas,\r\n    // @ts-ignore\r\n    onSelectAll: handleOnSelectAllEmpresas,\r\n    selected: selectedEmpresas.map(it => it.id),\r\n  };\r\n\r\n  const selectRowEventos: SelectRowProps = {\r\n    clickToSelect: true,\r\n    mode: SelectModeEnum.CHECKBOX,\r\n    onSelect: handleOnSelectEventos,\r\n    // @ts-ignore\r\n    onSelectAll: handleOnSelectAllEventos,\r\n    selected: selectedEventos.map(it => it.id),\r\n  };\r\n\r\n  const columnsEventos: ColumnsProps[] = [\r\n    {\r\n      dataField: 'codigo',\r\n      editable: false,\r\n      sort: true,\r\n      text: 'Código',\r\n    },\r\n    {\r\n      dataField: 'descricao',\r\n      editable: false,\r\n      sort: true,\r\n      text: 'Descrição',\r\n    },\r\n    {\r\n      dataField: 'tipo',\r\n      editable: false,\r\n      sort: true,\r\n      text: 'Tipo',\r\n    },\r\n  ];\r\n\r\n  const propToolTip = (messagem: string): InputTooltipProps => {\r\n    return {\r\n      message: messagem,\r\n      placement: 'top-start',\r\n    };\r\n  };\r\n\r\n  const restaurarPadrao = () => {\r\n    setarUrl(false);\r\n    formProps.getValues().enviarPorEmail = true;\r\n  };\r\n\r\n  const validateExtras = () => {\r\n    const erros = [];\r\n\r\n    const { senha, perfil, administrador, funcionario, cliente } = formProps.getValues();\r\n\r\n    if (senha !== extraFormProps.getValues().confirmacaoSenha) {\r\n      erros.push('A senha informada não confere com a confirmação de senha.');\r\n    }\r\n\r\n    if (perfil && perfil.perfilModulo) {\r\n      if (perfil.perfilModulo.box || perfil.perfilModulo.connect) {\r\n        if (!isMaster && selectedEmpresas.length === 0) {\r\n          erros.push('Pelo menos 1 empresa deve ser selecionada para usuários com perfil que permite acesso ao Calima Connect ou Calima Box.');\r\n        }\r\n        if (!administrador && !funcionario && !cliente) {\r\n          erros.push('É necessário informar o tipo de usuário para usuários com perfil que permite acesso ao Calima Connect ou Calima Box.');\r\n        }\r\n      }\r\n      if (perfil.perfilModulo.site && cliente) {\r\n        erros.push('Usuário do Calima Site não pode ser cliente.');\r\n      }\r\n      if (!perfil.perfilModulo.box && !perfil.perfilModulo.connect) {\r\n        formProps.setValue('envioEmail', false);\r\n        formProps.setValue('envioSMS', false);\r\n      }\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    formProps.setValue('empresas', selectedEmpresas);\r\n    formProps.setValue('eventos', selectedEventos);\r\n\r\n    const erros = validateExtras();\r\n    if (erros.length > 0) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      const { senha, numeroCelular } = formProps.getValues();\r\n      if (senha === 'senha_padrao') {\r\n        formProps.setValue('senha', '');\r\n      }\r\n      if (numeroCelular) {\r\n        formProps.setValue('numeroCelular', '+55' + formProps.getValues().numeroCelular);\r\n      }\r\n\r\n      dispatch(\r\n        progressActions.showProgress({\r\n          animated: true,\r\n          className: 'progress-bar-rounded progress-animated-alt',\r\n          color: 'first',\r\n          label: 'Aguarde, processando...',\r\n          striped: true,\r\n          value: 100,\r\n        })\r\n      );\r\n\r\n      persistUsuario(formProps.getValues(), {\r\n        errorFunction: mensagem => {\r\n          dispatch(progressActions.hideProgress());\r\n          showToast(mensagem, ERROR);\r\n        },\r\n        thenFunction: result => {\r\n          if (result) {\r\n            dispatch(progressActions.hideProgress());\r\n            showToast('Ação concluída com sucesso!', SUCCESS);\r\n            history.goBack();\r\n          }\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  function generateHash(senha) {\r\n    if (senha !== 'senha_padrao') {\r\n      formProps.setValue('hash', md5(senha));\r\n    }\r\n  }\r\n\r\n  const handleClose = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <WindowComponent title=\"Manutenção de Usuários\" useGlobalParameter={true} globalParameter={globalReducer.globalParameter} wikiId={1558}>\r\n      <EditForm formProps={formProps} editViewProps={props} dtoClassName={CLASS_NAME} validateExtras={validateExtras} externalSubmit={true}>\r\n        <InputGroupInline id=\"grauSatisfacao\" formProps={formProps} hidden={true} />\r\n        <InputGroupInline id=\"dtSincronizacao\" formProps={formProps} hidden={true} />\r\n        <InputGroupInline id=\"hash\" formProps={formProps} hidden={true} />\r\n        <InputGroupInline id=\"empresaAtual.id\" formProps={formProps} hidden={true} />\r\n        <TabGroup formProps={formProps}>\r\n          <Tab title=\"Gerais\">\r\n            <Row>\r\n              <Col>\r\n                <PerfilIS id=\"perfil\" formProps={{ ...formProps, validation: { required: true } }} disabled={isMaster} onChange={onChangePerfil} />\r\n                <InputGroupInline\r\n                  id=\"nomeCompleto\"\r\n                  label=\"Nome Completo\"\r\n                  formProps={{ ...formProps, validation: { required: true, maxLength: 120 } }}\r\n                  isPrependLabel={true}\r\n                  placeholder=\"Informe o nome completo\"\r\n                />\r\n                <InputGroupInline\r\n                  id=\"usuario\"\r\n                  isPrependLabel={true}\r\n                  formProps={{ ...formProps, validation: { required: true, maxLength: 60 } }}\r\n                  label=\"Usuário\"\r\n                  placeholder=\"Informe o nome de usuário\"\r\n                  disabled={isMaster}\r\n                />\r\n                <InputGroupInline\r\n                  id=\"senha\"\r\n                  isPrependLabel={true}\r\n                  formProps={{ ...formProps, validation: { required: true, maxLength: 256 } }}\r\n                  label=\"Senha\"\r\n                  placeholder=\"Informe a senha\"\r\n                  onChange={generateHash}\r\n                  type={InputType.PASSWORD}\r\n                />\r\n                <InputGroupInline\r\n                  id=\"confirmacaoSenha\"\r\n                  isPrependLabel={true}\r\n                  formProps={{ ...extraFormProps, validation: { required: true, maxLength: 256 } }}\r\n                  label=\"Confirmação de Senha\"\r\n                  placeholder=\"Confirme a senha\"\r\n                  type={InputType.PASSWORD}\r\n                />\r\n                <InputGroupInline\r\n                  id=\"cpf\"\r\n                  isPrependLabel={true}\r\n                  formProps={{ ...formProps, validation: { required: true } }}\r\n                  label=\"CPF\"\r\n                  placeholder=\"Informe o CPF\"\r\n                  type={InputType.CPF}\r\n                />\r\n                <InputGroupInline\r\n                  id=\"email\"\r\n                  isPrependLabel={true}\r\n                  formProps={{ ...formProps, validation: { required: true, maxLength: 120 } }}\r\n                  label=\"E-mail\"\r\n                  placeholder=\"Informe o e-mail\"\r\n                  type={InputType.EMAIL}\r\n                  tooltipProps={{ message: 'E-mail para envio de notificações' }}\r\n                />\r\n                <InputGroupInline\r\n                  id=\"numeroCelular\"\r\n                  isPrependLabel={true}\r\n                  formProps={{ ...formProps, validation: { required: formProps.getValues().envioSMS } }}\r\n                  label=\"Celular\"\r\n                  type={InputType.TELEFONE}\r\n                  tooltipProps={{ message: 'Celular para envio de notificações via SMS' }}\r\n                />\r\n                <InputGroupInline\r\n                  id=\"dtInatividade\"\r\n                  isPrependLabel={true}\r\n                  formProps={formProps}\r\n                  label=\"Data de Inatividade\"\r\n                  placeholder=\"Informe a data de inatividade\"\r\n                  type={InputType.DATE}\r\n                  disabled={isMaster}\r\n                />\r\n                <CustomInput\r\n                  id=\"idbloquearChat\"\r\n                  name=\"bloquearChat\"\r\n                  label=\"Bloquear Chat para o Usuário\"\r\n                  type=\"switch\"\r\n                  innerRef={formProps.register}\r\n                  disabled={isMaster}\r\n                />\r\n                {withTooltip(\r\n                  propToolTip('Bloqueia o uso do chat para o usuário. Opção disponível apenas para o nível de acesso administrador.'),\r\n                  'bloquearChat'\r\n                )}\r\n                <br />\r\n                <Label style={{ marginRight: 20 }}>Tipo de Usuário</Label>\r\n                <CustomInput\r\n                  id=\"administrador\"\r\n                  inline={true}\r\n                  innerRef={formProps.register}\r\n                  label=\"Administrador\"\r\n                  name=\"administrador\"\r\n                  type=\"switch\"\r\n                  disabled={isMaster}\r\n                  onChange={onChangeSwitch('administrador', 'funcionario', 'cliente')}\r\n                />\r\n                <CustomInput\r\n                  id=\"funcionario\"\r\n                  inline={true}\r\n                  innerRef={formProps.register}\r\n                  label=\"Funcionário\"\r\n                  name=\"funcionario\"\r\n                  type=\"switch\"\r\n                  disabled={isMaster}\r\n                  onChange={onChangeSwitch('funcionario', 'administrador', 'cliente')}\r\n                />\r\n                <CustomInput\r\n                  id=\"cliente\"\r\n                  inline={true}\r\n                  innerRef={formProps.register}\r\n                  label=\"Cliente\"\r\n                  name=\"cliente\"\r\n                  type=\"switch\"\r\n                  disabled={isMaster}\r\n                  onChange={onChangeSwitch('cliente', 'funcionario', 'administrador')}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Tab>\r\n          <Tab title=\"Empresas\" disabled={isMaster}>\r\n            <Alert color=\"primary\" className=\"text-center\">\r\n              Caso seja marcada alguma empresa, o controle de empresa por usuário será ativado. Uma vez ativo, para cada empresa nova criada deve-se\r\n              configurar o acesso ao usuário para a mesma manualmente.\r\n            </Alert>\r\n            <SearchDataGrid\r\n              {...props}\r\n              {...props.searchDataGridProps}\r\n              columns={columnsEmpresa}\r\n              selectRow={selectRowEmpresas}\r\n              defaultSorted={defaultSortedEmpresa}\r\n              dtoClassName={CLASS_NAME_EMPRESA}\r\n              extraData={{ ...getExtraData(props, 'EmpresaEditView', CLASS_NAME_EMPRESA), hideActionColumn: true }}\r\n              searchExpressionsProps={expressionsEmpresa}\r\n              remote={{\r\n                cellEdit: false,\r\n                filter: false,\r\n                pagination: false,\r\n                search: false,\r\n                sort: false,\r\n              }}\r\n              addButtonProps={{ hideAddButton: true }}\r\n            />\r\n          </Tab>\r\n          <Tab title=\"Configurações do Box e Connect\" disabled={isConfigBoxConnectDisabled}>\r\n            <Row>\r\n              <Col>\r\n                {possuiSMSHabilitado ? null : (\r\n                  <Alert color=\"primary\" className=\"text-center\">\r\n                    <a id=\"linkLoja\" href={urlAtendimentoLoja} className=\"btn-link\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                      O serviço Notificações via SMS não está habilitado. Clique aqui para adquiri-lo!\r\n                    </a>\r\n                  </Alert>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <CustomInput\r\n                  type=\"switch\"\r\n                  label=\"Deseja receber notificações no email cadastrado?\"\r\n                  name=\"envioEmail\"\r\n                  id=\"idenvioEmail\"\r\n                  innerRef={formProps.register}\r\n                />\r\n                {withTooltip(propToolTip('Permite que o Calima envie e-mails de notificação.'), 'envioEmail')}\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <CustomInput\r\n                  type=\"switch\"\r\n                  label=\"Deseja receber notificações por sms no celular cadastrado?\"\r\n                  name=\"envioSMS\"\r\n                  id=\"idenvioSMS\"\r\n                  disabled={!possuiSMSHabilitado}\r\n                  innerRef={formProps.register}\r\n                />\r\n                {withTooltip(propToolTip('Permite que o Calima envie SMS de notificação.'), 'envioSMS')}\r\n              </Col>\r\n            </Row>\r\n            {isExibirEnviarEmail ? (\r\n              <Row>\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    label=\"Deseja enviar credenciais por e-mail ao salvar usuário?\"\r\n                    name=\"enviarPorEmail\"\r\n                    id=\"idenviarPorEmail\"\r\n                    innerRef={formProps.register}\r\n                  />\r\n                  {withTooltip(\r\n                    propToolTip('Envia um email para o usuário com o login, senha e URL de acesso ao Calima Connect ao salvar o usuário'),\r\n                    'enviarPorEmail'\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n            ) : null}\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={formProps}\r\n                  id=\"diaLimiteLancamento\"\r\n                  isPrependLabel={true}\r\n                  label=\"Dia Limite para Lançamentos no Calima Connect\"\r\n                  type={InputType.NUMBER}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            {isExibirEnviarEmail ? (\r\n              <Row>\r\n                <Col>\r\n                  <InputGroupInline\r\n                    formProps={formProps}\r\n                    id=\"urlLogin\"\r\n                    isPrependLabel={true}\r\n                    label=\"URL de acesso ao Connect ou Box\"\r\n                    type={InputType.URL}\r\n                  />\r\n                </Col>\r\n                <Col className=\"col-2\">\r\n                  <Button id=\"idrestaurarPadrao\" size=\"lg\" color=\"link\" className=\"text-success\" onClick={restaurarPadrao}>\r\n                    <FontAwesomeIcon icon=\"reply\" />\r\n                  </Button>\r\n                  {withTooltip(propToolTip('Restaurar a URL de acesso de acordo com o perfil do usuário'), 'restaurarPadrao')}\r\n                </Col>\r\n              </Row>\r\n            ) : null}\r\n          </Tab>\r\n          <Tab title=\"Eventos Habilitados no Connect\" disabled={!isClienteConnect}>\r\n            <Alert color=\"primary\" className=\"text-center\">\r\n              Caso seja marcado algum evento, o mesmo será habilitado para o Connect.\r\n            </Alert>\r\n            <Button onClick={getEventos} color=\"primary\" className=\"mb-2 mr-2\">\r\n              <FontAwesomeIcon icon=\"sync\" /> Consultar Eventos\r\n            </Button>\r\n            <SearchDataGrid\r\n              data={eventos}\r\n              columns={columnsEventos}\r\n              selectRow={selectRowEventos}\r\n              dtoClassName={CLASS_NAME_EVENTO}\r\n              extraData={{ ...getExtraData(props, 'EventoEditView', CLASS_NAME_EVENTO), hideActionColumn: true, hideCustomSearch: true }}\r\n              addButtonProps={{ hideAddButton: true }}\r\n            />\r\n          </Tab>\r\n        </TabGroup>\r\n        <ProcessBar handleSubmit={handleSubmit} btnSubmitIcon=\"save\" btnSubmitLabel=\"Salvar\" handleClose={handleClose} />\r\n      </EditForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default UsuarioEditView;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _objectSpread2 from \"@babel/runtime/helpers/esm/objectSpread\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Fade from './Fade';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  closeClassName: PropTypes.string,\n  closeAriaLabel: PropTypes.string,\n  cssModule: PropTypes.object,\n  color: PropTypes.string,\n  fade: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  tag: tagPropType,\n  transition: PropTypes.shape(Fade.propTypes),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  color: 'success',\n  isOpen: true,\n  tag: 'div',\n  closeAriaLabel: 'Close',\n  fade: true,\n  transition: _objectSpread2({}, Fade.defaultProps, {\n    unmountOnExit: true\n  })\n};\n\nfunction Alert(props) {\n  var className = props.className,\n      closeClassName = props.closeClassName,\n      closeAriaLabel = props.closeAriaLabel,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      color = props.color,\n      isOpen = props.isOpen,\n      toggle = props.toggle,\n      children = props.children,\n      transition = props.transition,\n      fade = props.fade,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"closeClassName\", \"closeAriaLabel\", \"cssModule\", \"tag\", \"color\", \"isOpen\", \"toggle\", \"children\", \"transition\", \"fade\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'alert', \"alert-\" + color, {\n    'alert-dismissible': toggle\n  }), cssModule);\n  var closeClasses = mapToCssModules(classNames('close', closeClassName), cssModule);\n\n  var alertTransition = _objectSpread2({}, Fade.defaultProps, {}, transition, {\n    baseClass: fade ? transition.baseClass : '',\n    timeout: fade ? transition.timeout : 0\n  });\n\n  return React.createElement(Fade, _extends({}, attributes, alertTransition, {\n    tag: Tag,\n    className: classes,\n    in: isOpen,\n    role: \"alert\",\n    innerRef: innerRef\n  }), toggle ? React.createElement(\"button\", {\n    type: \"button\",\n    className: closeClasses,\n    \"aria-label\": closeAriaLabel,\n    onClick: toggle\n  }, React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\")) : null, children);\n}\n\nAlert.propTypes = propTypes;\nAlert.defaultProps = defaultProps;\nexport default Alert;","import { Basic } from 'summer';\r\nimport { PerfilModulo } from './perfilModulo';\r\n\r\nexport interface Perfil extends Basic {\r\n  acessoFinanceiro?: boolean;\r\n  descricao?: string;\r\n  perfilModulo?: PerfilModulo;\r\n  permitirRestauracaoPeriodoFechado?: boolean;\r\n  visualizarApenasRelatorios?: boolean;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.perfil';\r\n","import { BasicUser } from 'summer';\r\nimport { Evento } from '../mfp/evento';\r\nimport { Empresa } from './empresa';\r\nimport { EmpresaVW } from './empresaVW';\r\nimport { Perfil } from './perfil';\r\n\r\nexport interface Usuario extends BasicUser {\r\n  login?: string;\r\n  senha?: string;\r\n  hash?: string;\r\n  email?: string;\r\n  empresas?: EmpresaVW[];\r\n  nomeCompleto?: string;\r\n  administrador?: boolean;\r\n  dtInatividade?: string;\r\n  cpf?: string;\r\n  empresaAtual?: Empresa;\r\n  perfil?: Perfil;\r\n  numeroCelular?: string;\r\n  bloquearChat?: boolean;\r\n  funcionario?: boolean;\r\n  cliente?: boolean;\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: boolean;\r\n  envioSMS?: boolean;\r\n  grauSatisfacao?: string;\r\n  urlLogin?: string;\r\n  diaLimiteLancamento?: number;\r\n  dtSincronizacao?: string;\r\n  eventos?: Evento[];\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.usuario';\r\n","import { EventoExample } from './eventoExample';\r\nimport { NaturezaRubrica } from './naturezaRubrica';\r\nimport { Rubrica } from './rubrica';\r\n\r\nexport interface Evento extends EventoExample {\r\n  acumula13Salario?: boolean;\r\n  acumulaAvisoPrevio?: boolean;\r\n  acumulaFeriasRescisao?: boolean;\r\n  acumulaInfRendimentos?: boolean;\r\n  fatorESocial?: string;\r\n  fatorESocialVrManual?: number;\r\n  forcarRecalculoSubFormula?: boolean;\r\n  habilitadoConnect?: boolean;\r\n  horaAula?: boolean;\r\n  horaExtraRais?: boolean;\r\n  incidenciaSobreSalarioMaternidade?: boolean;\r\n  incidenciaSobreSeguroDesemprego?: boolean;\r\n  /** campo utiliza o enum IncidenciaTributariaContribuicaoSindicalEnum */\r\n  incidenciaTributariaContribuicaoSindicalLaboral?: string;\r\n  /** campo utiliza o enum IncidenciaTributariaFGTSEnum */\r\n  incidenciaTributariaFGTSDecimoTerceiro?: string;\r\n  /** campo utiliza o enum IncidenciaTributariaFGTSEnum */\r\n  incidenciaTributariaFGTSFolha?: string;\r\n  /** campo utiliza o enum IncidenciaTributariaIRRFEnum */\r\n  incidenciaTributariaIRRFDecimoTerceiro?: string;\r\n  /** campo utiliza o enum IncidenciaTributariaIRRFEnum */\r\n  incidenciaTributariaIRRFFerias?: string;\r\n  /** campo utiliza o enum IncidenciaTributariaIRRFEnum */\r\n  incidenciaTributariaIRRFFolha?: string;\r\n  /** campo utiliza o enum IncidenciaTributariaIRRFEnum */\r\n  incidenciaTributariaIRRFPLR?: string;\r\n  /** campo utiliza o enum IncidenciaTributariaPrevidenciaSocialEnum */\r\n  incidenciaTributariaPrevidenciaDecimoTerceiro?: string;\r\n  /** campo utiliza o enum IncidenciaTributariaPrevidenciaSocialEnum */\r\n  incidenciaTributariaPrevidenciaFolha?: string;\r\n  insideDarfPIS?: boolean;\r\n  insideFGTS?: boolean;\r\n  insideINSS?: boolean;\r\n  /** campo utiliza o enum InssIrrfSobreEnum */\r\n  insideINSSSobre?: string;\r\n  insideIRRF?: boolean;\r\n  /** campo utiliza o enum InssIrrfSobreEnum */\r\n  insideIRRFSobre?: string;\r\n  isCalcularEventoFeriasProporcionalNaFolha?: boolean;\r\n  isVrManualfatorESocial?: boolean;\r\n  isVrManualReferenciaESocial?: boolean;\r\n  mediaSobreHoras?: boolean;\r\n  naturezaRubrica?: NaturezaRubrica;\r\n  nroMesesAcumulacao13?: number;\r\n  nroMesesAcumulacaoAvisoPrevio?: number;\r\n  nroMesesAcumulacaoFeriasRecisao?: number;\r\n  percentualRubrica?: number;\r\n  referenciaESocial?: string;\r\n  referenciaESocialVrManual?: number;\r\n  referenciaFormula?: string;\r\n  rubrica?: Rubrica;\r\n  /** campo utiliza o enum RubicaHomolognetDescontoEnum */\r\n  rubricaHomolognetDesconto?: string;\r\n  /** campo utiliza o enum TipoArredondamentoEnum */\r\n  tipoArredondamento?: string;\r\n  usadoRais?: boolean;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.evento';\r\n"],"sourceRoot":""}
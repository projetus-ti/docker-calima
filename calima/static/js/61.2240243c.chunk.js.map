{"version":3,"sources":["views/pages/mcg/report/cartaResponsabilidade/cartaResponsabilidadeRelRV.ts","views/pages/mcg/report/cartaResponsabilidade/CartaResponsabilidadeReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","dependencies/grupoEmpresaConfigDependency.ts","dependencies/empresaMCGDependency.ts","models/dtos/mcg/customizacaoTermo.ts","models/dtos/mcg/customizacaoTermosAberturaEncerramentoCabecalhoDefault.ts","models/dtos/mcg/customizacaoTermosAberturaEncerramentoRodapeDefault.ts","models/dtos/mcg/customizacaoTermosBalancoPatrimonialDefault.ts","models/dtos/mcg/customizacaoTermosCartaResponsabilidadeDefault.ts","models/dtos/mcg/customizacaoTermosDemonstracaoResultadoDefault.ts","models/dtos/mcg/customizacaoTermosVeracidadeCabecalhoDefault.ts","models/dtos/mcg/customizacaoTermosVeracidadeRodapeDefault.ts","models/enumerated/mcg/customizacaoTermoEnum.ts","views/components/mcg/customizacaoTermoIS/CustomizacaoTermoIS.tsx"],"names":["DEFAULT_VALUES","Object","objectSpread2","getDefaultReportBasicValues","DEFAULT_OPTIONS","getDefaultReportViewOptions","REFERENCES","value","dtFinalRequired","dtInicialRequired","exibirConfiguracaoDadosEmpresa","CartaResponsabilidadeReportView","props","globalReducer","useSelector","state","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","objectWithoutProperties","react_default","a","createElement","summer_esm","title","useGlobalParameter","globalParameter","dependencies","hasEmpresa","hasEmpresaMCG","hasGrupoEmpresaConfig","ReportForm","assign","localStorageKey","routeProps","reportBasicValues","reportViewOptions","CustomizacaoTermoIS","validation","required","label","searchViewProps","apenasCartaResponsabilidade","placeholder","id","isPrependLabel","inputSearchProps","size","result","empresa","__webpack_require__","d","__webpack_exports__","NATUREZA","SALDO_REPORT_ENUM","EmpresaIS","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","type","InputType","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","empresasSelecionadas","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","gerarCabecalhoPadraoAdministradora","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","virtualization","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","errors","getValues","register","setValue","triggerValidation","handleCancel","validateExtras","currentItem","currentValues","parentObject","EnvioEmail","Fragment","sort","detailView","keyField","propName","Row","className","Col","CustomInput","name","innerRef","maxLength","TEXT_AREA","ReportInputs","_useState","useState","_useState2","slicedToArray","activeTab","setActiveTab","useEffect","_props$reportViewOpti","printingTypes","resetObject","length","idGerEmpresa","current","currentMomentDate","endDate","DATE","dtInicial","formatDate","toDate","DATES","dtFinal","endOf","REFERENCE","referenciaInicial","format","REF_PATTERN","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dateComponent","datesComponent","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","NUMBER","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","inputProps","disabled","gerarPorEmpresas","style","marginBottom","selectProps","isMulti","segmentacaoFolhaComponent","exibirSegmentacaoFolha","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","exibirImprimirValoresColoridos","inputDropDownProps","optionsProvider","isClearable","DROP_DOWN","firstOpen","extraConfigOpened","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","hidden","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","erros","params","message","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history","grupoEmpresaRaiz","grupoEmpresaConfig","grupoEmpresa","empresaMCG","CustomizacaoTermosAberturaEncerramentoCabecalhoDefault","[object Object]","this","TERMO_PADRAO","getCustomizacaoTermosTipoEnum","ABERTURA_ENCERRAMENTO","getTermoDefault","CustomizacaoTermosAberturaEncerramentoRodapeDefault","CustomizacaoTermosBalancoPatrimonialDefault","BALANCO_PATRIMONIAL","CustomizacaoTermosCartaResponsabilidadeDefault","CARTA_RESPONSABILIDADE","CustomizacaoTermosDemonstracaoResultadoDefault","DEMONSTRCAO_RESULTADO","CustomizacaoTermosVeracidadeCabecalhoDefault","VERACIDADE","CustomizacaoTermosVeracidadeRodapeDefault","getTermoDefaultAbertura","getTermoDefaultEncerramento","CUSTOMIZACAO_TERMO_ENUM_VALUES","customizacaoTipoEnum","find","it","searchExpressions","alias","conditionalGroup","fieldName","apenasIndividualizadaVeracidade","apenasDemonstracaoResultado","apenasAberturaEncerramento","apenasBalancoPatrimonial"],"mappings":"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","file":"static/js/61.2240243c.chunk.js","sourcesContent":["import { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\n\r\nexport interface CartaResponsabilidadeRelRV extends ReportBasicValues {\r\n  cartaResponsabilidade?: string;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'cartaresponsabilidaderelrv';\r\nexport const REPORT_EVENT: string = 'printCartaResponsabilidade';\r\nexport const REPORT_TITLE: string = 'Carta Responsabilidade';\r\n","import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { REFERENCES, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../../dependencies/empresaMCGDependency';\r\nimport { hasGrupoEmpresaConfig } from '../../../../../dependencies/grupoEmpresaConfigDependency';\r\nimport { getDefaultReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport CustomizacaoTermoIS from '../../../../components/mcg/customizacaoTermoIS/CustomizacaoTermoIS';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { CartaResponsabilidadeRelRV, CLASS_KEY, REPORT_EVENT, REPORT_TITLE } from './cartaResponsabilidadeRelRV';\r\n\r\nconst DEFAULT_VALUES: CartaResponsabilidadeRelRV = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT, REFERENCES.value),\r\n  dtFinalRequired: true,\r\n  dtInicialRequired: true,\r\n  exibirConfiguracaoDadosEmpresa: true,\r\n};\r\n\r\nconst CartaResponsabilidadeReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const { handleSubmit, ...formProps } = useForm<CartaResponsabilidadeRelRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"CARTA DE RESPONSABILIDADE\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[\r\n        () => hasEmpresa(globalReducer.globalParameter),\r\n        () => hasEmpresaMCG(globalReducer.globalParameter),\r\n        () => hasGrupoEmpresaConfig(globalReducer.globalParameter),\r\n      ]}\r\n    >\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n      >\r\n        <CustomizacaoTermoIS\r\n          formProps={{ ...formProps, validation: { required: true } }}\r\n          label=\"Carta de Responsabilidade\"\r\n          searchViewProps={{ apenasCartaResponsabilidade: true }}\r\n          apenasCartaResponsabilidade={true}\r\n          placeholder=\"Selecione o Termo\"\r\n          id=\"cartaResponsabilidade\"\r\n          isPrependLabel={true}\r\n          inputSearchProps={{ size: 'xl' }}\r\n        />\r\n      </ReportForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default CartaResponsabilidadeReportView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasGrupoEmpresaConfig(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n\r\n  const msg: string =\r\n    'O Grupo de empresas não está configurado para a empresa selecionada. Para configurar acesse:\\n' +\r\n    'Modulo Principal > Manutenção > Configurações > Grupo de Empresa';\r\n\r\n  if (\r\n    !globalParameter.empresa ||\r\n    !globalParameter.empresa.grupoEmpresaRaiz.grupoEmpresaConfig ||\r\n    !globalParameter.empresa.grupoEmpresa.grupoEmpresaConfig\r\n  ) {\r\n    result = msg;\r\n  }\r\n\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMCG(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMCG) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o módulo Contábil. Para configurá-la acesse:\\n' +\r\n      'Módulo Contábil > Manutenção > Configurações > Empresa.';\r\n  }\r\n  return result;\r\n}\r\n","import { CustomizacaoTermoExample } from './customizacaoTermoExample';\r\n\r\nexport interface CustomizacaoTermo extends CustomizacaoTermoExample {\r\n  termoAbertura?: string;\r\n  termoEncerramento?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mcg.model.dto.customizacaotermo';\r\n","import { ABERTURA_ENCERRAMENTO } from '../../enumerated/mcg/customizacaoTermoEnum';\r\nimport { CustomizacaoTermosDefaultContent } from '../mfp/customizacaoTermosDefaultContent';\r\n\r\nexport class CustomizacaoTermosAberturaEncerramentoCabecalhoDefault implements CustomizacaoTermosDefaultContent {\r\n  private TERMO_PADRAO: string =\r\n    'CONTÉM O PRESENTE LIVRO <FOL_TOT/> FOLHAS, NUMERADAS SEQUENCIALMENTE POR ' +\r\n    'PROCESSAMENTO ELETRÔNICO DE DADOS DE <FOL_INI/> A <FOL_FIM/> E SE DESTINA A' +\r\n    ' SERVIR DE LIVRO <TIP_LIV/> NRO. <NUM_LIV/> DA EMPRESA \"<R_SOC_EMP/>\", ' +\r\n    'INSCRITA NO <CNPJ_CPF_EMP/>, COM SEDE A <END_EMP/>, CEP.: <CEP/>, NA CIDADE' +\r\n    ' DE <CID_EMP/>, ESTADO DE <UF_EMP/>, TENDO SEUS ATOS CONSTITUTIVOS ARQUIVADOS ' +\r\n    'NA <CART_EMP/> NO LIVRO <LIV_REG_EMP/>, SOB O NÚMERO <NUM_REG_EMP/>, EM <DAT_REG_EMP/>.';\r\n\r\n  public getCustomizacaoTermosTipoEnum() {\r\n    return ABERTURA_ENCERRAMENTO;\r\n  }\r\n\r\n  public getTermoDefault() {\r\n    return this.TERMO_PADRAO;\r\n  }\r\n}\r\n","import { ABERTURA_ENCERRAMENTO } from '../../enumerated/mcg/customizacaoTermoEnum';\r\nimport { CustomizacaoTermosDefaultContent } from '../mfp/customizacaoTermosDefaultContent';\r\n\r\nexport class CustomizacaoTermosAberturaEncerramentoRodapeDefault implements CustomizacaoTermosDefaultContent {\r\n  private TERMO_PADRAO: string =\r\n    '\\n' +\r\n    'CONTÉM O PRESENTE LIVRO <FOL_TOT/> FOLHAS, NUMERADAS SEQUENCIALMENTE POR PROCESSAMENTO ' +\r\n    'ELETRÔNICO DE DADOS DE <FOL_INI/> A <FOL_FIM/> QUE SE DESTINOU A SERVIR DE LIVRO ' +\r\n    '<TIP_LIV/> NRO. <NUM_LIV/> DA EMPRESA \"<R_SOC_EMP/>\", INSCRITA NO <CNPJ_CPF_EMP/>, ' +\r\n    'COM SEDE A <END_EMP/>, CEP.: <CEP/>, NA CIDADE DE <CID_EMP/>, ESTADO DE <UF_EMP/>,  ' +\r\n    'TENDO SEUS ATOS CONSTITUTIVOS ARQUIVADOS NA <CART_EMP/> NO LIVRO <LIV_REG_EMP/>, SOB O' +\r\n    ' NÚMERO <NUM_REG_EMP/>, EM <DAT_REG_EMP/>, COM ESCRITURAÇÃO REFERENTE AO PERÍODO DE ' +\r\n    '<PER_APURACAO/>.\\n';\r\n\r\n  public getCustomizacaoTermosTipoEnum() {\r\n    return ABERTURA_ENCERRAMENTO;\r\n  }\r\n\r\n  public getTermoDefault() {\r\n    return this.TERMO_PADRAO;\r\n  }\r\n}\r\n","import { BALANCO_PATRIMONIAL } from '../../enumerated/mcg/customizacaoTermoEnum';\r\nimport { CustomizacaoTermosDefaultContent } from '../mfp/customizacaoTermosDefaultContent';\r\n\r\nexport class CustomizacaoTermosBalancoPatrimonialDefault implements CustomizacaoTermosDefaultContent {\r\n  private TERMO_PADRAO: string =\r\n    'SOB AS PENAS DA LEI, DECLARAMOS QUE AS INFORMAÇÕES AQUI CONTIDAS SÃO VERDADEIRAS E NOS ' +\r\n    'RESPONSABILIZAMOS POR TODAS ELAS.\\n' +\r\n    'EM CUMPRIMENTO AO QUE DETERMINA O PARÁGRAFO 2º DO ARTIGO 1.184 DO CÓDIGO CIVIL BRASILEIRO, ' +\r\n    'LEI 10.406 DE 10/01/2002, ASSINAMOS O PRESENTE TERMO DE RESPONSABILIDADE RELATIVO A FIDELIDADE ' +\r\n    'E A REALIDADE DOS SALDOS DAS CONTAS AQUI LAVRADAS, CONSOANTE AS EXIGÊNCIAS DO ART. 1.188 DO' +\r\n    ' MESMO CÓDIGO. OS REGISTROS DO EXERCÍCIO FORAM REALIZADOS COM AMPARO EM DOCUMENTAÇÃO COMPETENTE,' +\r\n    ' REPASSADA AO PROFISSIONAL ENCARREGADO DA ESCRITA CONTÁBIL, ESTE NA QUALIDADE DE PROPOSTO DOS' +\r\n    ' SÓCIOS DA EMPRESA, ASSIM COMO, OS INVENTÁRIOS FÍSICOS DOS ELEMENTOS PATRIMONIAIS E AS PERTINENTES' +\r\n    ' AVALIAÇÕES, ESTES EFETUADOS SOB DIRETA RESPONSABILIDADE DO EMPRESÁRIO SIGNATÁRIO DESTE TERMO.';\r\n\r\n  public getCustomizacaoTermosTipoEnum() {\r\n    return BALANCO_PATRIMONIAL;\r\n  }\r\n\r\n  public getTermoDefault() {\r\n    return this.TERMO_PADRAO;\r\n  }\r\n}\r\n","import { CARTA_RESPONSABILIDADE } from '../../enumerated/mcg/customizacaoTermoEnum';\r\nimport { CustomizacaoTermosDefaultContent } from '../mfp/customizacaoTermosDefaultContent';\r\n\r\nexport class CustomizacaoTermosCartaResponsabilidadeDefault implements CustomizacaoTermosDefaultContent {\r\n  private TERMO_PADRAO: string =\r\n    'Prezados Senhores:\\n' +\r\n    'Declaramos, para os devidos fins, como administrador e responsável legal da empresa <R_SOC_EMP/>, CNPJ <CNPJ_CPF_EMP/>, que as informações relativas ao período base <PER_APURACAO/>, fornecidos a Vossas Senhorias para escrituração e elaboração das demonstrações contábeis, obrigações acessórias, apuração de impostos e arquivos eletrônicos exigidos pela fiscalização federal, estadual, municipal, trabalhista e previdenciária são fidedignas.\\n' +\r\n    'Também declaramos:\\n' +\r\n    '  (a). Que os controles internos adotados pela nossa empresa são de responsabilidade da administração e estão adequados ao tipo de atividade e volume de transações;\\n' +\r\n    '  (b). Que não realizamos nenhum tipo de operação que possa ser considerada ilegal, frente à legislação vigente;\\n' +\r\n    '  (c). Que todos os documentos que geramos e recebemos de nossos fornecedores estão revestidos de total idoneidade;\\n' +\r\n    '  (d). Que os estoques registrados em conta própria foram por nós avaliados, contados e levantados fisicamente e perfazem a realidade do período encerrado em <DT_PER_APURACAO_FIM/>;\\n' +\r\n    '  (e). Que as informações registradas no sistema de gestão e controle interno, denominado Calima ERP Contábil, são controladas e validadas com documentação suporte adequada, sendo de nossa inteira responsabilidade todo o conteúdo do banco de dados e arquivos eletrônicos gerados.\\n' +\r\n    'Além disso, declaramos que não temos conhecimento de quaisquer fatos ocorridos no período base que posssam afetar as demonstrações contábeis ou que as afetam até a data desta carta ou, ainda, que possam afetar a continuidade das operações da empresa.\\n' +\r\n    'Também confirmamos que não houve:\\n' +\r\n    '  (a). Fraude envolvendo administração ou empregados em cargos de responsabilidade ou confiança;\\n' +\r\n    '  (b). Fraude envolvendo terceiros que poderiam ter efeito material nas demonstrações contábeis;\\n' +\r\n    '  (c). Violação ou possíveis violações de lei, normas ou regulamentos cujos efeitos deveriam ser considerados para divulgação nas demonstrações contábeis, ou mesmo dar origem ao registro de provisão para contingências passivas.';\r\n\r\n  public getCustomizacaoTermosTipoEnum() {\r\n    return CARTA_RESPONSABILIDADE;\r\n  }\r\n\r\n  public getTermoDefault() {\r\n    return this.TERMO_PADRAO;\r\n  }\r\n}\r\n","import { DEMONSTRCAO_RESULTADO } from '../../enumerated/mcg/customizacaoTermoEnum';\r\nimport { CustomizacaoTermosDefaultContent } from '../mfp/customizacaoTermosDefaultContent';\r\n\r\nexport class CustomizacaoTermosDemonstracaoResultadoDefault implements CustomizacaoTermosDefaultContent {\r\n  private TERMO_PADRAO: string =\r\n    'RECONHECEMOS A EXATIDÃO DO PRESENTE DEMONSTRATIVO DO RESULTADO DO EXERCÍCIO, APRESENTANDO UM <LUC_PREJ_LIQUIDO/> DE <VALOR/> (<VALOR_EXTENSO/>).\\n' +\r\n    '\\n' +\r\n    'SOB AS PENAS DA LEI, DECLARAMOS QUE AS INFORMAÇÕES AQUI CONTIDAS SÃO VERDADEIRAS E NOS RESPONSABILIZAMOS POR TODAS ELAS.';\r\n\r\n  public getCustomizacaoTermosTipoEnum() {\r\n    return DEMONSTRCAO_RESULTADO;\r\n  }\r\n\r\n  public getTermoDefault() {\r\n    return this.TERMO_PADRAO;\r\n  }\r\n}\r\n","import { VERACIDADE } from '../../enumerated/mcg/customizacaoTermoEnum';\r\nimport { CustomizacaoTermosDefaultContent } from '../mfp/customizacaoTermosDefaultContent';\r\n\r\nexport class CustomizacaoTermosVeracidadeCabecalhoDefault implements CustomizacaoTermosDefaultContent {\r\n  private TERMO_PADRAO: string =\r\n    'DECLARO, SOB AS PENAS DA LEI, QUE AS INFORMAÇÕES AQUI CONTIDAS, REFLETEM A ' +\r\n    'DOCUMENTAÇÃO QUE ME FOI ENTREGUE, SÃO VERDADEIRAS E ME RESPONSABILIZO POR TODAS ELAS.';\r\n\r\n  public getCustomizacaoTermosTipoEnum() {\r\n    return VERACIDADE;\r\n  }\r\n\r\n  public getTermoDefault() {\r\n    return this.TERMO_PADRAO;\r\n  }\r\n}\r\n","import { VERACIDADE } from '../../enumerated/mcg/customizacaoTermoEnum';\r\nimport { CustomizacaoTermosDefaultContent } from '../mfp/customizacaoTermosDefaultContent';\r\n\r\nexport class CustomizacaoTermosVeracidadeRodapeDefault implements CustomizacaoTermosDefaultContent {\r\n  private TERMO_PADRAO: string =\r\n    'DECLARO, SOB AS PENAS DA LEI, QUE AS INFORMAÇÕES AQUI CONTIDAS, SÃO VERDADEIRAS E ME RESPONSABILIZO POR TODAS ELAS.';\r\n\r\n  public getCustomizacaoTermosTipoEnum() {\r\n    return VERACIDADE;\r\n  }\r\n\r\n  public getTermoDefault() {\r\n    return this.TERMO_PADRAO;\r\n  }\r\n}\r\n","import { CustomizacaoTermosAberturaEncerramentoCabecalhoDefault } from '../../dtos/mcg/customizacaoTermosAberturaEncerramentoCabecalhoDefault';\r\nimport { CustomizacaoTermosAberturaEncerramentoRodapeDefault } from '../../dtos/mcg/customizacaoTermosAberturaEncerramentoRodapeDefault';\r\nimport { CustomizacaoTermosBalancoPatrimonialDefault } from '../../dtos/mcg/customizacaoTermosBalancoPatrimonialDefault';\r\nimport { CustomizacaoTermosCartaResponsabilidadeDefault } from '../../dtos/mcg/customizacaoTermosCartaResponsabilidadeDefault';\r\nimport { CustomizacaoTermosDemonstracaoResultadoDefault } from '../../dtos/mcg/customizacaoTermosDemonstracaoResultadoDefault';\r\nimport { CustomizacaoTermosVeracidadeCabecalhoDefault } from '../../dtos/mcg/customizacaoTermosVeracidadeCabecalhoDefault';\r\nimport { CustomizacaoTermosVeracidadeRodapeDefault } from '../../dtos/mcg/customizacaoTermosVeracidadeRodapeDefault';\r\n\r\nexport const ABERTURA_ENCERRAMENTO = { value: 'ABERTURA_ENCERRAMENTO', label: 'Termo de Abertura e Encerramento' };\r\nexport const VERACIDADE = { value: 'VERACIDADE', label: 'Declaração Individualizada de Veracidade' };\r\nexport const BALANCO_PATRIMONIAL = { value: 'BALANCO_PATRIMONIAL', label: 'Termo do Balanço Patrimonial' };\r\nexport const DEMONSTRCAO_RESULTADO = { value: 'DEMONSTRCAO_RESULTADO', label: 'Termo da Demonstração do Resultado' };\r\nexport const CARTA_RESPONSABILIDADE = { value: 'CARTA_RESPONSABILIDADE', label: 'Carta de Responsabilidade' };\r\n\r\nexport function getTermoDefaultAbertura(customizacaoTipoEnum: string) {\r\n  const result = getAllDefaultContentsAbertura().find(it => it.getCustomizacaoTermosTipoEnum().value === customizacaoTipoEnum);\r\n  return result === null ? null : result.getTermoDefault();\r\n}\r\n\r\nexport function getTermoDefaultEncerramento(customizacaoTipoEnum: string) {\r\n  const result = getAllDefaultContentsEncerrramento().find(it => it.getCustomizacaoTermosTipoEnum().value === customizacaoTipoEnum);\r\n  return result === null ? null : result.getTermoDefault();\r\n}\r\n\r\nexport function getAllDefaultContentsAbertura() {\r\n  return [\r\n    new CustomizacaoTermosAberturaEncerramentoCabecalhoDefault(),\r\n    new CustomizacaoTermosBalancoPatrimonialDefault(),\r\n    new CustomizacaoTermosCartaResponsabilidadeDefault(),\r\n    new CustomizacaoTermosDemonstracaoResultadoDefault(),\r\n    new CustomizacaoTermosVeracidadeCabecalhoDefault(),\r\n  ];\r\n}\r\n\r\nexport function getAllDefaultContentsEncerrramento() {\r\n  return [new CustomizacaoTermosAberturaEncerramentoRodapeDefault(), new CustomizacaoTermosVeracidadeRodapeDefault()];\r\n}\r\n\r\nexport const CUSTOMIZACAO_TERMO_ENUM_VALUES = [ABERTURA_ENCERRAMENTO, VERACIDADE, BALANCO_PATRIMONIAL, DEMONSTRCAO_RESULTADO, CARTA_RESPONSABILIDADE];\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { InputSearchProps } from 'summer/dist/views/components/inputSearch/InputSearch';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mcg/customizacaoTermo';\r\nimport {\r\n  ABERTURA_ENCERRAMENTO,\r\n  BALANCO_PATRIMONIAL,\r\n  CARTA_RESPONSABILIDADE,\r\n  DEMONSTRCAO_RESULTADO,\r\n  VERACIDADE,\r\n} from '../../../../models/enumerated/mcg/customizacaoTermoEnum';\r\n\r\nexport interface CustomizacaoTermoSearchViewProps extends InputProps {\r\n  apenasCartaResponsabilidade?: boolean;\r\n  apenasIndividualizadaVeracidade?: boolean;\r\n  apenasDemonstracaoResultado?: boolean;\r\n  apenasAberturaEncerramento?: boolean;\r\n  apenasBalancoPatrimonial?: boolean;\r\n}\r\n\r\nconst CustomizacaoTermoIS: FC<CustomizacaoTermoSearchViewProps> = props => {\r\n  function getSearchExpression(): SearchExpression[] {\r\n    if (props.apenasCartaResponsabilidade) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: CARTA_RESPONSABILIDADE.value,\r\n        },\r\n      ];\r\n    }\r\n    if (props.apenasIndividualizadaVeracidade) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: VERACIDADE.value,\r\n        },\r\n      ];\r\n    }\r\n    if (props.apenasDemonstracaoResultado) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: DEMONSTRCAO_RESULTADO.value,\r\n        },\r\n      ];\r\n    }\r\n    if (props.apenasAberturaEncerramento) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: ABERTURA_ENCERRAMENTO.value,\r\n        },\r\n      ];\r\n    }\r\n    if (props.apenasBalancoPatrimonial) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: BALANCO_PATRIMONIAL.value,\r\n        },\r\n      ];\r\n    }\r\n    return [];\r\n  }\r\n\r\n  const inputSearchProps: InputSearchProps<any> = {\r\n    ...props.inputSearchProps,\r\n    columns: [\r\n      {\r\n        dataField: 'descricao',\r\n        text: 'Descrição',\r\n      },\r\n      {\r\n        dataField: 'termo',\r\n        text: 'Termo',\r\n      },\r\n    ],\r\n    dtoClassName: CLASS_NAME,\r\n    searchExpressions: getSearchExpression,\r\n    searchViewId: 'CustomizacaoTermoSearchView',\r\n  };\r\n\r\n  return <InputGroupInline {...props} type={InputType.INPUT_SEARCH} inputSearchProps={inputSearchProps} />;\r\n};\r\n\r\nexport default CustomizacaoTermoIS;\r\n"],"sourceRoot":""}
{"version":3,"sources":["views/pages/mcg/report/contaFluxoCaixaIndireto/contaFluxoCaixaIndiretoRV.ts","views/pages/mcg/report/contaFluxoCaixaIndireto/ContaFluxoCaixaIndiretoReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx"],"names":["DEFAULT_VALUES","Object","objectSpread2","getDefaultReportBasicValues","DEFAULT_OPTIONS","getDefaultReportViewOptions","REFERENCES","value","dtFinalRequired","dtInicialRequired","exibirConfiguracaoDadosEmpresa","ContaFluxoCaixaIndiretoReportView","props","globalReducer","useSelector","state","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","isEnabledIsMatriz","setIsEnabledIsMatriz","acumularMatrizFilial","react_default","a","createElement","Row","className","Col","CustomInput","type","label","name","id","innerRef","register","withTooltip","messagem","message","placement","propToolTip","useEffect","globalParameter","empresa","matriz","getValues","matrizFilial","centralizar","summer_esm","title","useGlobalParameter","dependencies","hasEmpresa","ReportForm","assign","localStorageKey","routeProps","extraConfigOpened","openExtraDados","reportBasicValues","reportViewOptions","result","__webpack_require__","d","__webpack_exports__","NATUREZA","SALDO_REPORT_ENUM","EmpresaIS","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","isPrependLabel","inputSearchProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","placeholder","InputType","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","empresasSelecionadas","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","gerarCabecalhoPadraoAdministradora","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","virtualization","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","errors","setValue","triggerValidation","handleCancel","validateExtras","currentItem","currentValues","parentObject","validation","required","EnvioEmail","Fragment","sort","detailView","keyField","propName","maxLength","TEXT_AREA","ReportInputs","activeTab","setActiveTab","_props$reportViewOpti","printingTypes","resetObject","length","idGerEmpresa","current","currentMomentDate","endDate","DATE","dtInicial","formatDate","toDate","DATES","dtFinal","endOf","REFERENCE","referenciaInicial","format","REF_PATTERN","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dateComponent","datesComponent","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","NUMBER","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","inputProps","disabled","gerarPorEmpresas","style","marginBottom","size","selectProps","isMulti","segmentacaoFolhaComponent","exibirSegmentacaoFolha","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","exibirImprimirValoresColoridos","inputDropDownProps","optionsProvider","isClearable","DROP_DOWN","firstOpen","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","hidden","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","erros","params","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history"],"mappings":"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","file":"static/js/231.60270980.chunk.js","sourcesContent":["import { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\n\r\nexport interface ContaFluxoCaixaIndiretoRV extends ReportBasicValues {\r\n  matrizFilial?: boolean;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'contafluxocaixaindiretorv';\r\nexport const REPORT_TITLE: string = 'CLASSIFICAÇÃO DE FLUXO DE CAIXA - INDIRETO';\r\nexport const REPORT_EVENT: string = 'printContaFluxoCaixaIndireto';\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { InputTooltipProps, REFERENCES, WindowComponent, WindowComponentProps, withTooltip } from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { getDefaultReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { CLASS_KEY, ContaFluxoCaixaIndiretoRV, REPORT_EVENT, REPORT_TITLE } from './contaFluxoCaixaIndiretoRV';\r\n\r\nconst DEFAULT_VALUES: ContaFluxoCaixaIndiretoRV = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT, REFERENCES.value),\r\n  dtFinalRequired: true,\r\n  dtInicialRequired: true,\r\n  exibirConfiguracaoDadosEmpresa: false,\r\n};\r\n\r\nconst ContaFluxoCaixaIndiretoReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const { handleSubmit, ...formProps } = useForm<ContaFluxoCaixaIndiretoRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n  const [isEnabledIsMatriz, setIsEnabledIsMatriz] = useState(false);\r\n\r\n  const carregarParametroEmpresa = () => {\r\n    if (globalReducer.globalParameter.empresa.matriz === null) {\r\n      setIsEnabledIsMatriz(true);\r\n      formProps.getValues().matrizFilial = globalReducer.globalParameter.empresa.centralizar;\r\n    }\r\n  };\r\n\r\n  const openExtraDados = () => {\r\n    if (globalReducer.globalParameter.empresa) {\r\n      return globalReducer.globalParameter.empresa.matriz !== null;\r\n    }\r\n  };\r\n\r\n  const propToolTip = (messagem: string): InputTooltipProps => {\r\n    return {\r\n      message: messagem,\r\n      placement: 'top-start',\r\n    };\r\n  };\r\n\r\n  const acumularMatrizFilial = isEnabledIsMatriz ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" label=\"Acumular Matriz/Filial\" name=\"matrizFilial\" id=\"idmatrizFilial\" innerRef={formProps.register} />\r\n        {withTooltip(propToolTip('Selecione caso queira gerar por matriz/filial'), 'matrizFilial')}\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  useEffect(\r\n    () => {\r\n      if (globalReducer.globalParameter.empresa) {\r\n        carregarParametroEmpresa();\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Classificação de Fluxo de Caixa - Indireto\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter)]}\r\n    >\r\n      {acumularMatrizFilial}\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        extraConfigOpened={openExtraDados()}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n      />\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default ContaFluxoCaixaIndiretoReportView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n"],"sourceRoot":""}
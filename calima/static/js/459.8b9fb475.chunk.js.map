{"version":3,"sources":["views/pages/mfp/banco/BancoEditView.tsx","models/dtos/mfp/banco.ts"],"names":["BancoEditView","props","selectedItem","getSelectedItem","formProps","useForm","defaultValues","mode","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_5__","title","editViewProps","dtoClassName","CLASS_NAME","beforePersist","formData","codigo","length","fillZero","toUpperCase","digitoVerificador","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","Object","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","validation","onlyAlphaNum","required","id","isPrependLabel","inputProps","autoFocus","label","labelWidth","placeholder","maxLength","type","InputType","URL","__webpack_require__","d","__webpack_exports__"],"mappings":"yKAwEeA,UA/DqDC,KAClE,MAAMC,EAAeC,aAAgBF,GAE/BG,EAAYC,YAAe,CAAEC,cAAeJ,EAAcK,KAAM,WAatE,OACEC,EAAAC,EAAAC,cAACC,EAAA,GAAD,CAAiBC,MAAM,6BACrBJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUP,UAAWA,EAAWS,cAAeZ,EAAOa,aAAcC,IAAYC,cAX7DC,IACU,IAA3BA,EAASC,OAAOC,SAClBF,EAASC,OAASE,aAASH,EAASC,OAAQ,IAE9CD,EAASC,OAASD,EAASC,OAAOG,cAClCJ,EAASK,kBAAoBL,EAASK,kBAAkBD,cACjDJ,IAMHT,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACEf,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEP,UAASqB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAOrB,GAAP,IAAkBuB,WAAWF,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAMG,aAAa,EAAG,IAAvB,IAA2BC,UAAU,MAC1EC,GAAG,SACHC,gBAAgB,EAChBC,WAAY,CAAEC,WAAW,GACzBC,MAAM,YACNC,WAtBiB,GAuBjBC,YAAY,mCAGhB5B,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEP,UAASqB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAOrB,GAAP,IAAkBuB,WAAYC,aAAa,EAAG,KACvDE,GAAG,oBACHC,gBAAgB,EAChBG,MAAM,wBACNE,YAAY,gDAIlB5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEP,UAASqB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAOrB,GAAP,IAAkBuB,WAAY,CAAEE,UAAU,EAAMQ,UAAW,OACpEP,GAAG,OACHC,gBAAgB,EAChBG,MAAM,OACNC,WAzCqB,GA0CrBC,YAAY,6BAEd5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEP,UAASqB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAOrB,GAAP,IAAkBuB,WAAY,CAAEU,UAAW,OACpDP,GAAG,OACHC,gBAAgB,EAChBG,MAAM,OACNC,WAjDqB,GAkDrBC,YAAY,wDACZE,KAAMC,IAAUC,4CCxD1BC,EAAAC,EAAAC,EAAA,sBAAA5B,IAAO,MAAMA,EAAa","file":"static/js/459.8b9fb475.chunk.js","sourcesContent":["import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { EditForm, EditViewProps, fillZero, getSelectedItem, InputGroupInline, InputType, onlyAlphaNum, WindowComponent } from 'summer';\r\nimport { Banco, CLASS_NAME } from '../../../../models/dtos/mfp/banco';\r\n\r\ninterface BancoEditViewProps extends EditViewProps<Banco> {}\r\n\r\nconst BancoEditView: FC<BancoEditViewProps & RouteComponentProps> = props => {\r\n  const selectedItem = getSelectedItem(props);\r\n\r\n  const formProps = useForm<Banco>({ defaultValues: selectedItem, mode: 'onBlur' });\r\n\r\n  const defaultWidth: number = 80;\r\n\r\n  const beforePersist = (formData: Banco): Banco => {\r\n    if (formData.codigo.length !== 3) {\r\n      formData.codigo = fillZero(formData.codigo, 3);\r\n    }\r\n    formData.codigo = formData.codigo.toUpperCase();\r\n    formData.digitoVerificador = formData.digitoVerificador.toUpperCase();\r\n    return formData;\r\n  };\r\n\r\n  return (\r\n    <WindowComponent title=\"Manutenção de Banco\">\r\n      <EditForm formProps={formProps} editViewProps={props} dtoClassName={CLASS_NAME} beforePersist={beforePersist}>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { ...onlyAlphaNum(0, 3), required: true } }}\r\n              id=\"codigo\"\r\n              isPrependLabel={true}\r\n              inputProps={{ autoFocus: true }}\r\n              label=\"Código\"\r\n              labelWidth={defaultWidth}\r\n              placeholder=\"Informe o Código do Banco.\"\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: onlyAlphaNum(0, 1) }}\r\n              id=\"digitoVerificador\"\r\n              isPrependLabel={true}\r\n              label=\"Dígito Verificador\"\r\n              placeholder=\"Informe o Dígito Verificador do Banco.\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <InputGroupInline\r\n          formProps={{ ...formProps, validation: { required: true, maxLength: 120 } }}\r\n          id=\"nome\"\r\n          isPrependLabel={true}\r\n          label=\"Nome\"\r\n          labelWidth={defaultWidth}\r\n          placeholder=\"Informe o nome do Banco.\"\r\n        />\r\n        <InputGroupInline\r\n          formProps={{ ...formProps, validation: { maxLength: 120 } }}\r\n          id=\"site\"\r\n          isPrependLabel={true}\r\n          label=\"Site\"\r\n          labelWidth={defaultWidth}\r\n          placeholder=\"Informe o Site do Banco. Ex: https://www.itau.com.br/\"\r\n          type={InputType.URL}\r\n        />\r\n      </EditForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default BancoEditView;\r\n","import { Basic } from 'summer';\r\n\r\nexport interface Banco extends Basic {\r\n  codigo?: string;\r\n  digitoVerificador?: string;\r\n  nome?: string;\r\n  site?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.banco';\r\n"],"sourceRoot":""}
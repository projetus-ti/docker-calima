{"version":3,"sources":["models/enumerated/mlf/impostoEnum.ts","views/pages/mlf/report/memorialImposto/memorialImpostoRV.ts","views/pages/mlf/report/memorialImposto/MemorialImpostoReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/printerConfigTypeEnum.ts","models/enumerated/ger/printerTypeEnum.ts","dependencies/empresaMLFDependency.ts","models/dtos/ger/printerDataBasic.ts","views/pages/report/ReportFormView.tsx"],"names":["COFINS","label","value","CSLL","IRPJ","PIS","MEMORIAL_IMPOSTO_ENUM_VALUES","REPORT_TITLE","BASIC_DATA","Object","objectSpread2","getDefaultPrinterDataBasic","MONTHYEAR","refInicial","MemorialImpostoReportView","props","globalReducer","useSelector","state","history","useHistory","formProps","useForm","mode","useEffect","globalParameter","empresa","setTimeout","setValue","id","title","concat","react_default","a","createElement","summer_esm","assign","dependencies","hasEmpresa","hasEmpresaMLF","ReportFormView","printerData","isPrependLabel","placeholder","validation","required","inputDropDownProps","optionsProvider","selectProps","isClearable","onChange","getValues","tipoImpostoInt","type","InputType","DROP_DOWN","hidden","result","__webpack_require__","d","__webpack_exports__","SIMPLE","DATE","DATES","MONTHYEARS","YEAR","GRAPHIC","PRINTER_TYPE_ENUM","empresaMLF","_enumerated_ger_printerConfigTypeEnum__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_printerTypeEnum__WEBPACK_IMPORTED_MODULE_1__","reportEventType","classKey","printerConfigTypeEnum","module","anoLabel","dtFinalLabel","dtInicialLabel","pageNumber","passObj","printerDataEmail","printerTypeEnum","refFinalLabel","refInicialLabel","reportSequence","_props$printerData","resetObject","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","length","current","currentMomentDate","endDate","dtInicial","formatDate","toDate","dtFinal","endOf","referenciaInicial","format","REF_PATTERN","referenciaFinal","ano","String","year","reset","dateInitial","react__WEBPACK_IMPORTED_MODULE_2___default","summer__WEBPACK_IMPORTED_MODULE_7__","dateComponent","datesComponent","Fragment","referenceInitial","REFERENCE","referenceComponent","referencesComponent","anoComponent","inputMaskedProps","mask","MASK","reactstrap__WEBPACK_IMPORTED_MODULE_3__","noValidate","children","firstOpen","extraConfigOpened","iconAppend","appendClickHandler","maxLength","minLength","min","NUMBER","reactstrap__WEBPACK_IMPORTED_MODULE_4__","className","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","name","innerRef","register","handleSubmit","data","event","preventDefault","erros","validateExtras","params","message","AlertType","ERROR","alertManager","emit","ACTION_EVENTS","SHOW","showToast","INFORMATION","delay","gerarOldReport","errorFunction","mensagem","thenFunction","downloadOldReport","response","contentDisposition","headers","filename","slice","lastIndexOf","split","replace","saveAs","hideCancelButton"],"mappings":"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","file":"static/js/229.0a99e9e1.chunk.js","sourcesContent":["export const COFINS = { label: 'COFINS', value: 1 };\r\nexport const CSLL = { label: 'CSLL', value: 2 };\r\nexport const ICMS = { label: 'ICMS', value: 3 };\r\nexport const ICMS_ST = { label: 'ICMS-ST', value: 4 };\r\nexport const IPI = { label: 'IPI', value: 5 };\r\nexport const IRPJ = { label: 'IRPJ', value: 6 };\r\nexport const PIS = { label: 'PIS', value: 7 };\r\nexport const RETENCAO_FONTE = { label: 'Retenção na Fonte', value: 8 };\r\nexport const ICMS_DA = { label: 'ICMS-DA', value: 9 };\r\nexport const OUTROS = { label: 'Outros', value: 10 };\r\nexport const ICMS_ST_RET_SAIDA = { label: 'ICMS-ST Retido de Saída', value: 11 };\r\nexport const IRRF = { label: 'IRRF', value: 12 };\r\nexport const ICMS_DA_AUC = { label: 'ICMS-DA (Ativo, Uso, Consumo)', value: 13 };\r\nexport const ICMS_DIFAL = { label: 'ICMS-Difal', value: 15 };\r\nexport const SIMPLES_NACIONAL = { label: 'Simples Nacional', value: 16 };\r\nexport const IRRF_ALUGUEL = { label: 'IR R.F. Sobre Aluguéi', value: 17 };\r\n\r\nexport const MEMORIAL_IMPOSTO_ENUM_VALUES = [IRPJ, CSLL, PIS, COFINS];\r\n","export interface MemorialImpostoRV {\r\n  idGerEmpresa?: number;\r\n  tipoImpostoInt?: number;\r\n}\r\n\r\nexport const REPORT_TITLE = 'Memória Imposto';\r\nexport const REPORT_EVENT: string = 'printMemoriaImposto'; // Nome do metódo a ser chamado no backend\r\nexport const CLASS_KEY: string = 'memoriaimpostorelpass'; // Nome da classe RelPass no backedn\r\n","import React, { useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { InputGroupInline, InputType, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMLF } from '../../../../../dependencies/empresaMLFDependency';\r\nimport { getDefaultPrinterDataBasic, PrinterDataBasic } from '../../../../../models/dtos/ger/printerDataBasic';\r\nimport { MONTHYEAR } from '../../../../../models/enumerated/ger/printerConfigTypeEnum';\r\nimport { COFINS, CSLL, IRPJ, MEMORIAL_IMPOSTO_ENUM_VALUES, PIS } from '../../../../../models/enumerated/mlf/impostoEnum';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport ReportFormView from '../../../report/ReportFormView';\r\nimport { CLASS_KEY, MemorialImpostoRV, REPORT_EVENT, REPORT_TITLE } from './memorialImpostoRV';\r\n\r\nconst BASIC_DATA: PrinterDataBasic = {\r\n  ...getDefaultPrinterDataBasic(REPORT_TITLE, REPORT_EVENT, CLASS_KEY, MONTHYEAR.value),\r\n  refInicial: '201712',\r\n};\r\n\r\nexport default function MemorialImpostoReportView(props: WindowComponentProps) {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const history = useHistory();\r\n  const formProps = useForm<MemorialImpostoRV>({ mode: 'onBlur' });\r\n\r\n  useEffect(\r\n    () => {\r\n      if (globalReducer.globalParameter.empresa !== null) {\r\n        setTimeout(() => {\r\n          formProps.setValue('idGerEmpresa', globalReducer.globalParameter.empresa.id);\r\n          formProps.setValue('tipoImpostoInt', IRPJ.value);\r\n          // @ts-ignore\r\n          formProps.setValue('title', REPORT_TITLE + ' IRPJ');\r\n          BASIC_DATA.title = `${REPORT_TITLE} IRPJ`;\r\n        }, 800);\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const setTitle = () => {\r\n    switch (formProps.getValues().tipoImpostoInt) {\r\n      case IRPJ.value:\r\n        // @ts-ignore\r\n        formProps.setValue('title', REPORT_TITLE + ' IRPJ');\r\n        BASIC_DATA.title = `${REPORT_TITLE} IRPJ`;\r\n        break;\r\n      case CSLL.value:\r\n        // @ts-ignore\r\n        formProps.setValue('title', REPORT_TITLE + ' CSLL');\r\n        BASIC_DATA.title = `${REPORT_TITLE} CSLL`;\r\n        break;\r\n      case PIS.value:\r\n        // @ts-ignore\r\n        formProps.setValue('title', REPORT_TITLE + ' PIS');\r\n        BASIC_DATA.title = `${REPORT_TITLE} PIS`;\r\n        break;\r\n      case COFINS.value:\r\n        // @ts-ignore\r\n        formProps.setValue('title', REPORT_TITLE + ' COFINS');\r\n        BASIC_DATA.title = `${REPORT_TITLE} COFINS`;\r\n        break;\r\n      default:\r\n        // @ts-ignore\r\n        formProps.setValue('title', REPORT_TITLE);\r\n        BASIC_DATA.title = REPORT_TITLE;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <WindowComponent\r\n      {...props}\r\n      title={'Memoria de cálculo de Imposto'}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMLF(globalReducer.globalParameter)]}\r\n    >\r\n      <ReportFormView formProps={formProps} printerData={BASIC_DATA} history={history}>\r\n        <InputGroupInline\r\n          id=\"tipoImpostoInt\"\r\n          label=\"Tipo de Imposto\"\r\n          isPrependLabel={true}\r\n          placeholder=\"Selecione o tipo de Imposto\"\r\n          formProps={{ ...formProps, validation: { required: true } }}\r\n          inputDropDownProps={{\r\n            optionsProvider: MEMORIAL_IMPOSTO_ENUM_VALUES,\r\n            selectProps: { isClearable: false },\r\n          }}\r\n          onChange={setTitle}\r\n          type={InputType.DROP_DOWN}\r\n        />\r\n        <InputGroupInline formProps={formProps} id=\"idGerEmpresa\" hidden={true} />\r\n      </ReportFormView>\r\n    </WindowComponent>\r\n  );\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const SIMPLE = { label: '', value: '0' };\r\nexport const DATE = { label: '', value: '1' };\r\nexport const DATES = { label: '', value: '2' };\r\nexport const MONTHYEAR = { label: '', value: '3' };\r\nexport const MONTHYEARS = { label: '', value: '4' };\r\nexport const TINY = { label: '', value: '5' }; // TODO Remover\r\nexport const YEAR = { label: '', value: '6' };\r\nexport const QUARTER_YEAR = { label: '', value: '7' }; // TODO Remover\r\n\r\nconst PRINTER_CONFIG_TYPE_ENUM = [SIMPLE, DATE, DATES, MONTHYEAR, MONTHYEARS, TINY, YEAR, QUARTER_YEAR];\r\n\r\nexport default PRINTER_CONFIG_TYPE_ENUM;\r\n","export const TEXT = { label: 'Texto - CalimaDesk', value: 'texto' };\r\nexport const GRAPHIC = { label: 'Gráfico - PDF', value: 'grafico' };\r\nexport const EMAIL = { label: 'E-mail - PDF', value: 'email' };\r\n\r\nconst PRINTER_TYPE_ENUM = [TEXT, GRAPHIC, EMAIL];\r\n\r\nexport default PRINTER_TYPE_ENUM;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMLF(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMLF) {\r\n    result =\r\n      'A empresa fiscal da empresa selecionada deve estar configurada. Para configurar acesse:\\n' +\r\n      'Módulo Fiscal > Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n","import { SIMPLE } from '../../enumerated/ger/printerConfigTypeEnum';\r\nimport { GRAPHIC } from '../../enumerated/ger/printerTypeEnum';\r\nimport { PrinterDataEmail } from './printerDataEmail';\r\n\r\nexport interface PrinterDataBasic {\r\n  printerTypeEnum?: string;\r\n  dtInicial?: string;\r\n  dtFinal?: string;\r\n  refInicial?: string;\r\n  refFinal?: string;\r\n  reportSequence?: boolean;\r\n  pageNumber?: string;\r\n  title?: string;\r\n  printerDataEmail?: PrinterDataEmail;\r\n  passObj?: any;\r\n  printerConfigTypeEnum?: string;\r\n\r\n  dtInicialLabel?: string;\r\n  dtFinalLabel?: string;\r\n  refInicialLabel?: string;\r\n  refFinalLabel?: string;\r\n  anoLabel?: string;\r\n\r\n  reportEventType: string;\r\n  classKey: string;\r\n  module: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.printerdatabasicdto';\r\n\r\nexport function getDefaultPrinterDataBasic(\r\n  title: string,\r\n  reportEventType: string,\r\n  classKey: string,\r\n  printerConfigTypeEnum: string = SIMPLE.value,\r\n  module: string = 'MLF'\r\n) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    classKey,\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    module,\r\n    pageNumber: '1',\r\n    passObj: {},\r\n    printerConfigTypeEnum,\r\n    printerDataEmail: {},\r\n    printerTypeEnum: GRAPHIC.value,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportSequence: false,\r\n    title,\r\n  };\r\n}\r\n","import { saveAs } from 'file-saver';\r\nimport React, { FC, useEffect } from 'react';\r\nimport { Col, CustomInput, Form, Row } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  currentMomentDate,\r\n  ErroList,\r\n  ERROR,\r\n  format,\r\n  formatDate,\r\n  INFORMATION,\r\n  InputGroupInline,\r\n  InputType,\r\n  ProcessBar,\r\n  REF_PATTERN,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { PrinterDataBasic } from '../../../models/dtos/ger/printerDataBasic';\r\nimport { DATE, DATES, MONTHYEAR, MONTHYEARS, YEAR } from '../../../models/enumerated/ger/printerConfigTypeEnum';\r\nimport PRINTER_TYPE_ENUM, { GRAPHIC } from '../../../models/enumerated/ger/printerTypeEnum';\r\nimport { downloadOldReport, gerarOldReport } from '../../../services/report.service';\r\n\r\nexport interface ReportWindowComponentProps {\r\n  formProps: UseFormProps;\r\n  printerData?: PrinterDataBasic;\r\n  history?: any;\r\n  /** Função de validações extras */\r\n  validateExtras?: (printerData: PrinterDataBasic, formData: any) => string[];\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportFormView: FC<ReportWindowComponentProps> = props => {\r\n  useEffect(\r\n    () => {\r\n      const { printerTypeEnum, printerConfigTypeEnum } = props.printerData;\r\n      let resetObject: any = {\r\n        ...props.printerData,\r\n        printerTypeEnum: printerTypeEnum && printerTypeEnum.length > 0 ? printerTypeEnum[0] : GRAPHIC.value,\r\n      };\r\n\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (printerConfigTypeEnum) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case MONTHYEAR.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case MONTHYEARS.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case YEAR.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      props.formProps.reset(resetObject);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.printerData.printerConfigTypeEnum, props.printerData.printerTypeEnum]\r\n  );\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(props.printerData, data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      props.printerData.passObj = data;\r\n      showToast('Seu relatório está sendo gerado...', { ...INFORMATION, delay: 3000 });\r\n      gerarOldReport(props.printerData, {\r\n        errorFunction: (mensagem: string) => {\r\n          showToast(mensagem, ERROR);\r\n        },\r\n        thenFunction: () => {\r\n          downloadOldReport({\r\n            errorFunction: (mensagem: string) => {\r\n              showToast(mensagem, ERROR);\r\n            },\r\n            thenFunction: (response: any) => {\r\n              const contentDisposition = response.headers['content-disposition'];\r\n              const filename = contentDisposition\r\n                .slice(0, contentDisposition.lastIndexOf(';'))\r\n                .split('filename=')[1]\r\n                .replace(/\"/g, '');\r\n              saveAs(response.data, filename);\r\n            },\r\n          });\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.printerData.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.printerData.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: true } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.printerData.printerConfigTypeEnum === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.printerData.printerConfigTypeEnum === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.printerData.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: true } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"refInicial\"\r\n      label={props.printerData.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: true } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.printerData.printerConfigTypeEnum === MONTHYEAR.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.printerData.printerConfigTypeEnum === MONTHYEARS.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"refFinal\"\r\n          label={props.printerData.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: true } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.printerData.printerConfigTypeEnum === YEAR.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.printerData.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n\r\n      <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n        <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n          <InputGroupInline\r\n            id=\"title\"\r\n            label=\"Título\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Título\"\r\n            iconAppend=\"undo-alt\"\r\n            appendClickHandler={restoreTitle}\r\n            formProps={{\r\n              ...props.formProps,\r\n              validation: {\r\n                maxLength: 120,\r\n                minLength: 5,\r\n                required: true,\r\n              },\r\n            }}\r\n          />\r\n\r\n          <InputGroupInline\r\n            id=\"pageNumber\"\r\n            label=\"Página Inicial\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Página Inicial\"\r\n            formProps={{\r\n              ...props.formProps,\r\n              validation: {\r\n                min: 0,\r\n                required: true,\r\n              },\r\n            }}\r\n            type={InputType.NUMBER}\r\n          />\r\n\r\n          <Row className=\"mb-3 mt-3\">\r\n            <Col>\r\n              <CustomInput\r\n                type=\"switch\"\r\n                label=\"Sequenciar Relatórios\"\r\n                id=\"reportSequence\"\r\n                name=\"reportSequence\"\r\n                innerRef={props.formProps.register}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          {dateComponent}\r\n          {datesComponent}\r\n          {referenceComponent}\r\n          {referencesComponent}\r\n          {anoComponent}\r\n\r\n          <InputGroupInline\r\n            id=\"printerTypeEnum\"\r\n            label=\"Tipo de Impressão\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Selecione o tipo de impressão\"\r\n            formProps={{ ...props.formProps, validation: { required: true } }}\r\n            inputDropDownProps={{\r\n              optionsProvider: PRINTER_TYPE_ENUM,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n        </AccordionItem>\r\n      </Accordion>\r\n\r\n      <ProcessBar handleSubmit={props.formProps.handleSubmit(onSubmit)} hideCancelButton={true} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportFormView;\r\n"],"sourceRoot":""}
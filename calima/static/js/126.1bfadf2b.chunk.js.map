{"version":3,"sources":["views/pages/mlf/report/prestacaoServico/prestacaoServicoGeralSaida/PrestacaoServicoGeralSaidaReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/printerConfigTypeEnum.ts","models/enumerated/ger/printerTypeEnum.ts","dependencies/empresaMLFDependency.ts","models/dtos/ger/printerDataBasic.ts","views/pages/report/ReportFormView.tsx","services/mlf.service.ts","views/pages/mlf/report/prestacaoServico/prestacaoServicoRV.ts"],"names":["BASIC_DATA","Object","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","getDefaultPrinterDataBasic","REPORT_TITLE","REPORT_EVENT","CLASS_KEY","DATES","value","dtFinal","dtInicial","PrestacaoServicoGeralSaidaReportView","props","globalReducer","useSelector","state","history","useHistory","formProps","useForm","mode","isNumberPage","useRef","useEffect","globalParameter","empresa","setTimeout","setValue","id","getLivroFolhaMLF","errorFunction","mensagem","showToast","ERROR","thenFunction","result","prestacaoServicoFolha","undefined","current","toString","prestacaoServicoLivro","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_8__","assign","title","dependencies","hasEmpresa","hasEmpresaMLF","_report_ReportFormView__WEBPACK_IMPORTED_MODULE_14__","printerData","hidden","reactstrap__WEBPACK_IMPORTED_MODULE_5__","className","reactstrap__WEBPACK_IMPORTED_MODULE_6__","xs","reactstrap__WEBPACK_IMPORTED_MODULE_7__","type","label","name","innerRef","register","__webpack_require__","d","__webpack_exports__","SIMPLE","DATE","MONTHYEAR","MONTHYEARS","YEAR","GRAPHIC","PRINTER_TYPE_ENUM","empresaMLF","_enumerated_ger_printerConfigTypeEnum__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_printerTypeEnum__WEBPACK_IMPORTED_MODULE_1__","reportEventType","classKey","printerConfigTypeEnum","module","anoLabel","dtFinalLabel","dtInicialLabel","pageNumber","passObj","printerDataEmail","printerTypeEnum","refFinalLabel","refInicialLabel","reportSequence","ReportFormView","_props$printerData","resetObject","length","currentMomentDate","endDate","formatDate","toDate","endOf","referenciaInicial","format","REF_PATTERN","referenciaFinal","ano","String","year","reset","dateInitial","react__WEBPACK_IMPORTED_MODULE_2___default","summer__WEBPACK_IMPORTED_MODULE_7__","isPrependLabel","validation","required","InputType","dateComponent","datesComponent","Fragment","referenceInitial","REFERENCE","referenceComponent","referencesComponent","anoComponent","inputMaskedProps","mask","MASK","reactstrap__WEBPACK_IMPORTED_MODULE_3__","noValidate","children","firstOpen","extraConfigOpened","placeholder","iconAppend","appendClickHandler","maxLength","minLength","min","NUMBER","reactstrap__WEBPACK_IMPORTED_MODULE_4__","inputDropDownProps","optionsProvider","selectProps","isClearable","DROP_DOWN","handleSubmit","data","event","preventDefault","erros","validateExtras","params","message","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","delay","gerarOldReport","downloadOldReport","response","contentDisposition","headers","filename","slice","lastIndexOf","split","replace","saveAs","hideCancelButton","findEspecieByModelo","findReinfCFOPConfig","refazerLancamentosContabeis","refazerLancamentosReinf","findConfigReinfEmpresa","importarIntegracaoFiscalContabil","validarIE","summer__WEBPACK_IMPORTED_MODULE_0__","getService","create","modelo","isImportacao","param","send","post","idCFOP","get","concat","idGerEmpresa","refazerLancamentosContabeisParam","refazerLancamentosReinfParam","idEmpresaMlf","importarParam","inscricaoEstadual","unidadeFederacao"],"mappings":"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","file":"static/js/126.1bfadf2b.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ERROR, InputGroupInline, showToast, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasEmpresa } from '../../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMLF } from '../../../../../../dependencies/empresaMLFDependency';\r\nimport { getDefaultPrinterDataBasic, PrinterDataBasic } from '../../../../../../models/dtos/ger/printerDataBasic';\r\nimport { ConfigLivroMLF } from '../../../../../../models/dtos/mlf/configLivroMLF';\r\nimport { DATES } from '../../../../../../models/enumerated/ger/printerConfigTypeEnum';\r\nimport { getLivroFolhaMLF } from '../../../../../../services/mlf.service';\r\nimport { Reducers } from '../../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../../store/ducks/global.duck';\r\nimport ReportFormView from '../../../../report/ReportFormView';\r\nimport { CLASS_KEY, PrestacaoServicoRV, REPORT_EVENT, REPORT_TITLE } from '../prestacaoServicoRV';\r\n\r\nconst BASIC_DATA: PrinterDataBasic = {\r\n  ...getDefaultPrinterDataBasic(REPORT_TITLE, REPORT_EVENT, CLASS_KEY, DATES.value),\r\n  dtFinal: '31/12/2017',\r\n  dtInicial: '01/12/2017',\r\n};\r\n\r\nexport default function PrestacaoServicoGeralSaidaReportView(props: WindowComponentProps) {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const history = useHistory();\r\n\r\n  const formProps = useForm<PrestacaoServicoRV & PrinterDataBasic>({ mode: 'onBlur' });\r\n\r\n  const isNumberPage = useRef('1');\r\n\r\n  useEffect(\r\n    () => {\r\n      if (globalReducer.globalParameter.empresa !== null) {\r\n        setTimeout(() => {\r\n          formProps.setValue('idGerEmpresa', globalReducer.globalParameter.empresa.id);\r\n          formProps.setValue('entrada', false);\r\n        }, 800);\r\n\r\n        getLivroFolhaMLF(globalReducer.globalParameter.empresa.id, {\r\n          errorFunction: mensagem => {\r\n            showToast(mensagem, ERROR);\r\n          },\r\n          thenFunction: (result: ConfigLivroMLF) => {\r\n            setTimeout(() => {\r\n              if (result.prestacaoServicoFolha !== null && result.prestacaoServicoFolha !== undefined) {\r\n                isNumberPage.current = result.prestacaoServicoFolha.toString();\r\n                // @ts-ignore\r\n                formProps.setValue('pageNumber', isNumberPage.current, true);\r\n              }\r\n              if (result.prestacaoServicoLivro !== null && result.prestacaoServicoLivro !== undefined) {\r\n                formProps.setValue('numeroLivro', result.prestacaoServicoLivro, true);\r\n              }\r\n            }, 600);\r\n          },\r\n        });\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  return (\r\n    <WindowComponent\r\n      {...props}\r\n      title={REPORT_TITLE}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMLF(globalReducer.globalParameter)]}\r\n    >\r\n      <ReportFormView formProps={formProps} printerData={BASIC_DATA} history={history}>\r\n        <InputGroupInline formProps={formProps} id=\"idGerEmpresa\" hidden={true} />\r\n        <InputGroupInline formProps={formProps} id=\"entrada\" hidden={true} />\r\n        <InputGroupInline formProps={formProps} id=\"numeroLivro\" hidden={true} />\r\n        <Row className=\"align-items-center\">\r\n          <Col xs={4}>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              label=\"Buscar notas por data da operação\"\r\n              id=\"buscarPorDataOperacao\"\r\n              name=\"buscarPorDataOperacao\"\r\n              innerRef={formProps.register}\r\n            />\r\n          </Col>\r\n          <Col xs={4}>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              label=\"Exibir valores zerados quando nota for cancelada\"\r\n              id=\"canceladoExibirZero\"\r\n              name=\"canceladoExibirZero\"\r\n              innerRef={formProps.register}\r\n            />\r\n          </Col>\r\n          <Col xs={4}>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              label=\"Armazenar Página (Livro Oficial)\"\r\n              id=\"armazenarPaginaInicial\"\r\n              name=\"armazenarPaginaInicial\"\r\n              innerRef={formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </ReportFormView>\r\n    </WindowComponent>\r\n  );\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const SIMPLE = { label: '', value: '0' };\r\nexport const DATE = { label: '', value: '1' };\r\nexport const DATES = { label: '', value: '2' };\r\nexport const MONTHYEAR = { label: '', value: '3' };\r\nexport const MONTHYEARS = { label: '', value: '4' };\r\nexport const TINY = { label: '', value: '5' }; // TODO Remover\r\nexport const YEAR = { label: '', value: '6' };\r\nexport const QUARTER_YEAR = { label: '', value: '7' }; // TODO Remover\r\n\r\nconst PRINTER_CONFIG_TYPE_ENUM = [SIMPLE, DATE, DATES, MONTHYEAR, MONTHYEARS, TINY, YEAR, QUARTER_YEAR];\r\n\r\nexport default PRINTER_CONFIG_TYPE_ENUM;\r\n","export const TEXT = { label: 'Texto - CalimaDesk', value: 'texto' };\r\nexport const GRAPHIC = { label: 'Gráfico - PDF', value: 'grafico' };\r\nexport const EMAIL = { label: 'E-mail - PDF', value: 'email' };\r\n\r\nconst PRINTER_TYPE_ENUM = [TEXT, GRAPHIC, EMAIL];\r\n\r\nexport default PRINTER_TYPE_ENUM;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMLF(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMLF) {\r\n    result =\r\n      'A empresa fiscal da empresa selecionada deve estar configurada. Para configurar acesse:\\n' +\r\n      'Módulo Fiscal > Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n","import { SIMPLE } from '../../enumerated/ger/printerConfigTypeEnum';\r\nimport { GRAPHIC } from '../../enumerated/ger/printerTypeEnum';\r\nimport { PrinterDataEmail } from './printerDataEmail';\r\n\r\nexport interface PrinterDataBasic {\r\n  printerTypeEnum?: string;\r\n  dtInicial?: string;\r\n  dtFinal?: string;\r\n  refInicial?: string;\r\n  refFinal?: string;\r\n  reportSequence?: boolean;\r\n  pageNumber?: string;\r\n  title?: string;\r\n  printerDataEmail?: PrinterDataEmail;\r\n  passObj?: any;\r\n  printerConfigTypeEnum?: string;\r\n\r\n  dtInicialLabel?: string;\r\n  dtFinalLabel?: string;\r\n  refInicialLabel?: string;\r\n  refFinalLabel?: string;\r\n  anoLabel?: string;\r\n\r\n  reportEventType: string;\r\n  classKey: string;\r\n  module: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.printerdatabasicdto';\r\n\r\nexport function getDefaultPrinterDataBasic(\r\n  title: string,\r\n  reportEventType: string,\r\n  classKey: string,\r\n  printerConfigTypeEnum: string = SIMPLE.value,\r\n  module: string = 'MLF'\r\n) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    classKey,\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    module,\r\n    pageNumber: '1',\r\n    passObj: {},\r\n    printerConfigTypeEnum,\r\n    printerDataEmail: {},\r\n    printerTypeEnum: GRAPHIC.value,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportSequence: false,\r\n    title,\r\n  };\r\n}\r\n","import { saveAs } from 'file-saver';\r\nimport React, { FC, useEffect } from 'react';\r\nimport { Col, CustomInput, Form, Row } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  currentMomentDate,\r\n  ErroList,\r\n  ERROR,\r\n  format,\r\n  formatDate,\r\n  INFORMATION,\r\n  InputGroupInline,\r\n  InputType,\r\n  ProcessBar,\r\n  REF_PATTERN,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { PrinterDataBasic } from '../../../models/dtos/ger/printerDataBasic';\r\nimport { DATE, DATES, MONTHYEAR, MONTHYEARS, YEAR } from '../../../models/enumerated/ger/printerConfigTypeEnum';\r\nimport PRINTER_TYPE_ENUM, { GRAPHIC } from '../../../models/enumerated/ger/printerTypeEnum';\r\nimport { downloadOldReport, gerarOldReport } from '../../../services/report.service';\r\n\r\nexport interface ReportWindowComponentProps {\r\n  formProps: UseFormProps;\r\n  printerData?: PrinterDataBasic;\r\n  history?: any;\r\n  /** Função de validações extras */\r\n  validateExtras?: (printerData: PrinterDataBasic, formData: any) => string[];\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportFormView: FC<ReportWindowComponentProps> = props => {\r\n  useEffect(\r\n    () => {\r\n      const { printerTypeEnum, printerConfigTypeEnum } = props.printerData;\r\n      let resetObject: any = {\r\n        ...props.printerData,\r\n        printerTypeEnum: printerTypeEnum && printerTypeEnum.length > 0 ? printerTypeEnum[0] : GRAPHIC.value,\r\n      };\r\n\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (printerConfigTypeEnum) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case MONTHYEAR.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case MONTHYEARS.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case YEAR.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      props.formProps.reset(resetObject);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.printerData.printerConfigTypeEnum, props.printerData.printerTypeEnum]\r\n  );\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(props.printerData, data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      props.printerData.passObj = data;\r\n      showToast('Seu relatório está sendo gerado...', { ...INFORMATION, delay: 3000 });\r\n      gerarOldReport(props.printerData, {\r\n        errorFunction: (mensagem: string) => {\r\n          showToast(mensagem, ERROR);\r\n        },\r\n        thenFunction: () => {\r\n          downloadOldReport({\r\n            errorFunction: (mensagem: string) => {\r\n              showToast(mensagem, ERROR);\r\n            },\r\n            thenFunction: (response: any) => {\r\n              const contentDisposition = response.headers['content-disposition'];\r\n              const filename = contentDisposition\r\n                .slice(0, contentDisposition.lastIndexOf(';'))\r\n                .split('filename=')[1]\r\n                .replace(/\"/g, '');\r\n              saveAs(response.data, filename);\r\n            },\r\n          });\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.printerData.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.printerData.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: true } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.printerData.printerConfigTypeEnum === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.printerData.printerConfigTypeEnum === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.printerData.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: true } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"refInicial\"\r\n      label={props.printerData.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: true } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.printerData.printerConfigTypeEnum === MONTHYEAR.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.printerData.printerConfigTypeEnum === MONTHYEARS.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"refFinal\"\r\n          label={props.printerData.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: true } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.printerData.printerConfigTypeEnum === YEAR.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.printerData.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n\r\n      <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n        <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n          <InputGroupInline\r\n            id=\"title\"\r\n            label=\"Título\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Título\"\r\n            iconAppend=\"undo-alt\"\r\n            appendClickHandler={restoreTitle}\r\n            formProps={{\r\n              ...props.formProps,\r\n              validation: {\r\n                maxLength: 120,\r\n                minLength: 5,\r\n                required: true,\r\n              },\r\n            }}\r\n          />\r\n\r\n          <InputGroupInline\r\n            id=\"pageNumber\"\r\n            label=\"Página Inicial\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Página Inicial\"\r\n            formProps={{\r\n              ...props.formProps,\r\n              validation: {\r\n                min: 0,\r\n                required: true,\r\n              },\r\n            }}\r\n            type={InputType.NUMBER}\r\n          />\r\n\r\n          <Row className=\"mb-3 mt-3\">\r\n            <Col>\r\n              <CustomInput\r\n                type=\"switch\"\r\n                label=\"Sequenciar Relatórios\"\r\n                id=\"reportSequence\"\r\n                name=\"reportSequence\"\r\n                innerRef={props.formProps.register}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          {dateComponent}\r\n          {datesComponent}\r\n          {referenceComponent}\r\n          {referencesComponent}\r\n          {anoComponent}\r\n\r\n          <InputGroupInline\r\n            id=\"printerTypeEnum\"\r\n            label=\"Tipo de Impressão\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Selecione o tipo de impressão\"\r\n            formProps={{ ...props.formProps, validation: { required: true } }}\r\n            inputDropDownProps={{\r\n              optionsProvider: PRINTER_TYPE_ENUM,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n        </AccordionItem>\r\n      </Accordion>\r\n\r\n      <ProcessBar handleSubmit={props.formProps.handleSubmit(onSubmit)} hideCancelButton={true} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportFormView;\r\n","import { AxiosInstance } from 'axios';\r\nimport { AxiosParam, create, send } from 'summer';\r\nimport { Cfop } from '../models/dtos/ger/cfop';\r\nimport { Especie } from '../models/dtos/ger/especie';\r\nimport { ConfigLivroMLF } from '../models/dtos/mlf/configLivroMLF';\r\nimport { ConfigReinf } from '../models/dtos/mlf/configReinf';\r\nimport { ImportarIntegracaoFiscalContabilParam } from '../models/dtos/mlf/importarIntegracaoFiscalContabilParam';\r\nimport { RefazerLancamentosContabeisParam } from '../models/dtos/mlf/refazerLancamentosContabeisParam';\r\nimport { RefazerLancamentosReinfParam } from '../models/dtos/mlf/refazerLancamentosReinfParam';\r\n\r\nfunction getService(): AxiosInstance {\r\n  return create('/mlf');\r\n}\r\n\r\nexport function findEspecieByModelo(modelo: string, isImportacao: boolean, param: AxiosParam<Especie>) {\r\n  send(\r\n    getService().post<Especie>('/findEspecieByModelo', { modelo, isImportacao }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function findReinfCFOPConfig(idCFOP: number, param: AxiosParam<Cfop>) {\r\n  send(getService().get<Cfop>(`/findReinfCFOPConfig/${idCFOP}`), param);\r\n}\r\n\r\nexport function getLivroFolhaMLF(idGerEmpresa: number, param: AxiosParam<ConfigLivroMLF>) {\r\n  send(getService().get<ConfigLivroMLF>(`/getLivroFolhaMLF/${idGerEmpresa}`), param);\r\n}\r\n\r\nexport function refazerLancamentosContabeis(refazerLancamentosContabeisParam: RefazerLancamentosContabeisParam, param: AxiosParam<any>) {\r\n  send(getService().post<RefazerLancamentosContabeisParam>('/refazerLancamentosContabeis', refazerLancamentosContabeisParam), param);\r\n}\r\n\r\nexport function refazerLancamentosReinf(refazerLancamentosReinfParam: RefazerLancamentosReinfParam, param: AxiosParam<any>) {\r\n  send(getService().post<RefazerLancamentosReinfParam>('/refazerLancamentosReinf', refazerLancamentosReinfParam), param);\r\n}\r\n\r\nexport function findConfigReinfEmpresa(idEmpresaMlf: number, param: AxiosParam<any>) {\r\n  send(getService().get<ConfigReinf>(`/findConfigReinfEmpresa/${idEmpresaMlf}`), param);\r\n}\r\n\r\nexport function importarIntegracaoFiscalContabil(importarParam: ImportarIntegracaoFiscalContabilParam, param: AxiosParam<any>) {\r\n  send(getService().post<any>('/importarIntegracaoFiscalContabil', importarParam), param);\r\n}\r\n\r\nexport function validarIE(inscricaoEstadual: string, unidadeFederacao: string, param: AxiosParam<boolean>) {\r\n  send(\r\n    getService().post<boolean>('/validarIE', { inscricaoEstadual, unidadeFederacao }),\r\n    param\r\n  );\r\n}\r\n","export interface PrestacaoServicoRV {\r\n  paginaInicial?: number;\r\n  armazenarPaginaInicial?: boolean;\r\n  sequenciarRelatorio?: boolean;\r\n  idGerEmpresa?: number;\r\n  modelo?: boolean;\r\n  entrada?: boolean;\r\n  canceladoExibirZero?: boolean;\r\n  buscarPorDataOperacao?: boolean;\r\n  numeroLivro?: string;\r\n}\r\n\r\nexport const REPORT_TITLE = 'Listagem de Prestação de Serviço';\r\nexport const REPORT_EVENT: string = 'printPrestacaoServicoGeral'; // Nome do metódo a ser chamado no backend\r\nexport const CLASS_KEY: string = 'prestacaoservicorelpass'; // Nome da classe RelPass no backedn\r\n"],"sourceRoot":""}
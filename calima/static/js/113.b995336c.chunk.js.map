{"version":3,"sources":["views/pages/mcg/report/caixaSimplificado/caixaSimplificadoRV.ts","views/pages/mcg/report/caixaSimplificado/CaixaSimplificadoReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/printerConfigTypeEnum.ts","models/enumerated/ger/printerTypeEnum.ts","dependencies/grupoEmpresaConfigDependency.ts","dependencies/empresaMCGDependency.ts","models/dtos/ger/printerDataBasic.ts","views/pages/report/ReportFormView.tsx","models/enumerated/ger/consolidarEnum.ts"],"names":["REPORT_TITLE","REPORT_EVENT","CLASS_KEY","MODULE","CaixaSimplificadoReportView","props","history","useHistory","formProps","useForm","mode","defaultValues","idsGerGrupoEmpresaPais","globalReducer","useSelector","state","_useState","useState","_useState2","Object","slicedToArray","isEnabledMatriz","setIsEnabledMatriz","_globalReducer$global","globalParameter","empresa","empresaMCG","basicData","objectSpread2","getDefaultPrinterDataBasic","MONTHYEARS","value","refFinal","refAtual","refInicial","useEffect","matriz","getValues","isAcumularMatrizFilial","centralizar","reset","consolidar","NORMAL","idGerEmpresa","id","idGerGrupoEmpresaAtual","grupoEmpresa","idGerGrupoEmpresaRaiz","idGrupoEmpresaRaiz","react_default","a","createElement","summer_esm","assign","title","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMCG","hasGrupoEmpresaConfig","ReportFormView","printerData","hidden","Row","className","Col","CustomInput","label","name","innerRef","register","type","isPrependLabel","placeholder","validation","required","inputDropDownProps","optionsProvider","CONSOLIDAR_ENUM_VALUES","selectProps","isClearable","InputType","DROP_DOWN","onChange","consolidacao","result","HIERARQUIA_INFERIOR","GRUPO_ATUAL","setValue","__webpack_require__","d","__webpack_exports__","SIMPLE","DATE","DATES","MONTHYEAR","YEAR","GRAPHIC","PRINTER_TYPE_ENUM","grupoEmpresaRaiz","grupoEmpresaConfig","_enumerated_ger_printerConfigTypeEnum__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_printerTypeEnum__WEBPACK_IMPORTED_MODULE_1__","reportEventType","classKey","printerConfigTypeEnum","module","anoLabel","dtFinalLabel","dtInicialLabel","pageNumber","passObj","printerDataEmail","printerTypeEnum","refFinalLabel","refInicialLabel","reportSequence","_props$printerData","resetObject","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","length","current","currentMomentDate","endDate","dtInicial","formatDate","toDate","dtFinal","endOf","referenciaInicial","format","REF_PATTERN","referenciaFinal","ano","String","year","dateInitial","react__WEBPACK_IMPORTED_MODULE_2___default","summer__WEBPACK_IMPORTED_MODULE_7__","dateComponent","datesComponent","Fragment","referenceInitial","REFERENCE","referenceComponent","referencesComponent","anoComponent","inputMaskedProps","mask","MASK","reactstrap__WEBPACK_IMPORTED_MODULE_3__","noValidate","children","firstOpen","extraConfigOpened","iconAppend","appendClickHandler","maxLength","minLength","min","NUMBER","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","handleSubmit","data","event","preventDefault","erros","validateExtras","params","message","AlertType","ERROR","alertManager","emit","ACTION_EVENTS","SHOW","showToast","INFORMATION","delay","gerarOldReport","errorFunction","mensagem","thenFunction","downloadOldReport","response","contentDisposition","headers","filename","slice","lastIndexOf","split","replace","saveAs","hideCancelButton"],"mappings":"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","file":"static/js/113.b995336c.chunk.js","sourcesContent":["export interface CaixaSimplificadoRelPass {\r\n  armazenarPagina?: boolean;\r\n  consolidar?: string;\r\n  idGerEmpresa?: number;\r\n  idGerGrupoEmpresaAtual?: number;\r\n  idGerGrupoEmpresaRaiz?: number;\r\n  idsGerGrupoEmpresaPais?: number[];\r\n  isAcumularMatrizFilial?: boolean;\r\n  saltarPag?: boolean;\r\n  somenteContaCaixa?: boolean;\r\n}\r\n\r\nexport const REPORT_TITLE = 'Livro Caixa - Simplificado';\r\nexport const REPORT_EVENT: string = 'printCaixaSimplificado';\r\nexport const CLASS_KEY: string = 'caixasimplificadorelpass';\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { InputGroupInline, InputType, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../../dependencies/empresaMCGDependency';\r\nimport { hasGrupoEmpresaConfig } from '../../../../../dependencies/grupoEmpresaConfigDependency';\r\nimport { getDefaultPrinterDataBasic, PrinterDataBasic } from '../../../../../models/dtos/ger/printerDataBasic';\r\nimport { CONSOLIDAR_ENUM_VALUES, GRUPO_ATUAL, HIERARQUIA_INFERIOR, NORMAL } from '../../../../../models/enumerated/ger/consolidarEnum';\r\nimport { MONTHYEARS } from '../../../../../models/enumerated/ger/printerConfigTypeEnum';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport ReportFormView from '../../../report/ReportFormView';\r\nimport { CaixaSimplificadoRelPass, CLASS_KEY, REPORT_EVENT, REPORT_TITLE } from './caixaSimplificadoRV';\r\n\r\nconst MODULE: string = 'MCG';\r\n\r\nexport default function CaixaSimplificadoReportView(props: WindowComponentProps) {\r\n  const history = useHistory();\r\n  const formProps = useForm<CaixaSimplificadoRelPass & PrinterDataBasic>({ mode: 'onBlur', defaultValues: { idsGerGrupoEmpresaPais: [] } });\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [isEnabledMatriz, setIsEnabledMatriz] = useState(false);\r\n  const { empresa, empresaMCG } = globalReducer.globalParameter;\r\n\r\n  const basicData: PrinterDataBasic = {\r\n    ...getDefaultPrinterDataBasic(REPORT_TITLE, REPORT_EVENT, CLASS_KEY, MONTHYEARS.value, MODULE),\r\n    refFinal: empresaMCG.refAtual,\r\n    refInicial: empresaMCG.refAtual,\r\n  };\r\n\r\n  const init = () => {\r\n    if (empresa.matriz === null) {\r\n      setIsEnabledMatriz(true);\r\n      formProps.getValues().isAcumularMatrizFilial = empresa.centralizar;\r\n    }\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (empresa !== null) {\r\n        init();\r\n\r\n        formProps.reset({\r\n          consolidar: NORMAL.value,\r\n          idGerEmpresa: empresa.id,\r\n          idGerGrupoEmpresaAtual: empresa.grupoEmpresa.id,\r\n          idGerGrupoEmpresaRaiz: empresa.idGrupoEmpresaRaiz,\r\n        });\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  function changeReportTitle(value: any) {\r\n    const consolidacao = formProps.getValues().consolidar;\r\n    let result = REPORT_TITLE;\r\n    if (consolidacao === HIERARQUIA_INFERIOR.value) {\r\n      result = 'Livro Caixa - Simplificado (Hierarquia Inferior)';\r\n    } else if (consolidacao === GRUPO_ATUAL.value) {\r\n      result = 'Livro Caixa - Simplificado (Grupo Atual)';\r\n    }\r\n    formProps.setValue('title', result);\r\n  }\r\n\r\n  return (\r\n    <WindowComponent\r\n      {...props}\r\n      title={REPORT_TITLE}\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[\r\n        () => hasEmpresa(globalReducer.globalParameter),\r\n        () => hasEmpresaMCG(globalReducer.globalParameter),\r\n        () => hasGrupoEmpresaConfig(globalReducer.globalParameter),\r\n      ]}\r\n    >\r\n      <ReportFormView formProps={formProps} printerData={basicData} history={history}>\r\n        <InputGroupInline formProps={formProps} id=\"idGerEmpresa\" hidden={true} />\r\n        <InputGroupInline formProps={formProps} id=\"idGerGrupoEmpresaAtual\" hidden={true} />\r\n        <InputGroupInline formProps={formProps} id=\"idGerGrupoEmpresaRaiz\" hidden={true} />\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              id=\"checkSomenteContaCaixa\"\r\n              label=\"Somente conta caixa\"\r\n              name=\"somenteContaCaixa\"\r\n              innerRef={formProps.register}\r\n              type=\"switch\"\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <CustomInput id=\"checkArmazenarPagina\" label=\"Armazenar página\" name=\"armazenarPagina\" innerRef={formProps.register} type=\"switch\" />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput id=\"checkSaltarPag\" label=\"Saltar página entre conta\" name=\"saltarPag\" innerRef={formProps.register} type=\"switch\" />\r\n          </Col>\r\n\r\n          {isEnabledMatriz && (\r\n            <Col>\r\n              <CustomInput\r\n                id=\"checkIsAcumularMatrizFilial\"\r\n                label=\"Acumular matriz e filiais\"\r\n                name=\"isAcumularMatrizFilial\"\r\n                innerRef={formProps.register}\r\n                type=\"switch\"\r\n              />\r\n            </Col>\r\n          )}\r\n        </Row>\r\n\r\n        <InputGroupInline\r\n          id=\"consolidar\"\r\n          label=\"Consolidação\"\r\n          isPrependLabel={true}\r\n          placeholder=\"Selecione o tipo de Consolidação\"\r\n          formProps={{ ...formProps, validation: { required: true } }}\r\n          inputDropDownProps={{\r\n            optionsProvider: CONSOLIDAR_ENUM_VALUES,\r\n            selectProps: { isClearable: false },\r\n          }}\r\n          type={InputType.DROP_DOWN}\r\n          onChange={changeReportTitle}\r\n        />\r\n      </ReportFormView>\r\n    </WindowComponent>\r\n  );\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const SIMPLE = { label: '', value: '0' };\r\nexport const DATE = { label: '', value: '1' };\r\nexport const DATES = { label: '', value: '2' };\r\nexport const MONTHYEAR = { label: '', value: '3' };\r\nexport const MONTHYEARS = { label: '', value: '4' };\r\nexport const TINY = { label: '', value: '5' }; // TODO Remover\r\nexport const YEAR = { label: '', value: '6' };\r\nexport const QUARTER_YEAR = { label: '', value: '7' }; // TODO Remover\r\n\r\nconst PRINTER_CONFIG_TYPE_ENUM = [SIMPLE, DATE, DATES, MONTHYEAR, MONTHYEARS, TINY, YEAR, QUARTER_YEAR];\r\n\r\nexport default PRINTER_CONFIG_TYPE_ENUM;\r\n","export const TEXT = { label: 'Texto - CalimaDesk', value: 'texto' };\r\nexport const GRAPHIC = { label: 'Gráfico - PDF', value: 'grafico' };\r\nexport const EMAIL = { label: 'E-mail - PDF', value: 'email' };\r\n\r\nconst PRINTER_TYPE_ENUM = [TEXT, GRAPHIC, EMAIL];\r\n\r\nexport default PRINTER_TYPE_ENUM;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasGrupoEmpresaConfig(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n\r\n  const msg: string =\r\n    'O Grupo de empresas não está configurado para a empresa selecionada. Para configurar acesse:\\n' +\r\n    'Modulo Principal > Manutenção > Configurações > Grupo de Empresa';\r\n\r\n  if (\r\n    !globalParameter.empresa ||\r\n    !globalParameter.empresa.grupoEmpresaRaiz.grupoEmpresaConfig ||\r\n    !globalParameter.empresa.grupoEmpresa.grupoEmpresaConfig\r\n  ) {\r\n    result = msg;\r\n  }\r\n\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMCG(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMCG) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o módulo Contábil. Para configurá-la acesse:\\n' +\r\n      'Módulo Contábil > Manutenção > Configurações > Empresa.';\r\n  }\r\n  return result;\r\n}\r\n","import { SIMPLE } from '../../enumerated/ger/printerConfigTypeEnum';\r\nimport { GRAPHIC } from '../../enumerated/ger/printerTypeEnum';\r\nimport { PrinterDataEmail } from './printerDataEmail';\r\n\r\nexport interface PrinterDataBasic {\r\n  printerTypeEnum?: string;\r\n  dtInicial?: string;\r\n  dtFinal?: string;\r\n  refInicial?: string;\r\n  refFinal?: string;\r\n  reportSequence?: boolean;\r\n  pageNumber?: string;\r\n  title?: string;\r\n  printerDataEmail?: PrinterDataEmail;\r\n  passObj?: any;\r\n  printerConfigTypeEnum?: string;\r\n\r\n  dtInicialLabel?: string;\r\n  dtFinalLabel?: string;\r\n  refInicialLabel?: string;\r\n  refFinalLabel?: string;\r\n  anoLabel?: string;\r\n\r\n  reportEventType: string;\r\n  classKey: string;\r\n  module: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.printerdatabasicdto';\r\n\r\nexport function getDefaultPrinterDataBasic(\r\n  title: string,\r\n  reportEventType: string,\r\n  classKey: string,\r\n  printerConfigTypeEnum: string = SIMPLE.value,\r\n  module: string = 'MLF'\r\n) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    classKey,\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    module,\r\n    pageNumber: '1',\r\n    passObj: {},\r\n    printerConfigTypeEnum,\r\n    printerDataEmail: {},\r\n    printerTypeEnum: GRAPHIC.value,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportSequence: false,\r\n    title,\r\n  };\r\n}\r\n","import { saveAs } from 'file-saver';\r\nimport React, { FC, useEffect } from 'react';\r\nimport { Col, CustomInput, Form, Row } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  currentMomentDate,\r\n  ErroList,\r\n  ERROR,\r\n  format,\r\n  formatDate,\r\n  INFORMATION,\r\n  InputGroupInline,\r\n  InputType,\r\n  ProcessBar,\r\n  REF_PATTERN,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { PrinterDataBasic } from '../../../models/dtos/ger/printerDataBasic';\r\nimport { DATE, DATES, MONTHYEAR, MONTHYEARS, YEAR } from '../../../models/enumerated/ger/printerConfigTypeEnum';\r\nimport PRINTER_TYPE_ENUM, { GRAPHIC } from '../../../models/enumerated/ger/printerTypeEnum';\r\nimport { downloadOldReport, gerarOldReport } from '../../../services/report.service';\r\n\r\nexport interface ReportWindowComponentProps {\r\n  formProps: UseFormProps;\r\n  printerData?: PrinterDataBasic;\r\n  history?: any;\r\n  /** Função de validações extras */\r\n  validateExtras?: (printerData: PrinterDataBasic, formData: any) => string[];\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportFormView: FC<ReportWindowComponentProps> = props => {\r\n  useEffect(\r\n    () => {\r\n      const { printerTypeEnum, printerConfigTypeEnum } = props.printerData;\r\n      let resetObject: any = {\r\n        ...props.printerData,\r\n        printerTypeEnum: printerTypeEnum && printerTypeEnum.length > 0 ? printerTypeEnum[0] : GRAPHIC.value,\r\n      };\r\n\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (printerConfigTypeEnum) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case MONTHYEAR.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case MONTHYEARS.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case YEAR.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      props.formProps.reset(resetObject);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.printerData.printerConfigTypeEnum, props.printerData.printerTypeEnum]\r\n  );\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(props.printerData, data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      props.printerData.passObj = data;\r\n      showToast('Seu relatório está sendo gerado...', { ...INFORMATION, delay: 3000 });\r\n      gerarOldReport(props.printerData, {\r\n        errorFunction: (mensagem: string) => {\r\n          showToast(mensagem, ERROR);\r\n        },\r\n        thenFunction: () => {\r\n          downloadOldReport({\r\n            errorFunction: (mensagem: string) => {\r\n              showToast(mensagem, ERROR);\r\n            },\r\n            thenFunction: (response: any) => {\r\n              const contentDisposition = response.headers['content-disposition'];\r\n              const filename = contentDisposition\r\n                .slice(0, contentDisposition.lastIndexOf(';'))\r\n                .split('filename=')[1]\r\n                .replace(/\"/g, '');\r\n              saveAs(response.data, filename);\r\n            },\r\n          });\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.printerData.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.printerData.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: true } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.printerData.printerConfigTypeEnum === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.printerData.printerConfigTypeEnum === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.printerData.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: true } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"refInicial\"\r\n      label={props.printerData.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: true } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.printerData.printerConfigTypeEnum === MONTHYEAR.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.printerData.printerConfigTypeEnum === MONTHYEARS.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"refFinal\"\r\n          label={props.printerData.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: true } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.printerData.printerConfigTypeEnum === YEAR.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.printerData.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n\r\n      <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n        <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n          <InputGroupInline\r\n            id=\"title\"\r\n            label=\"Título\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Título\"\r\n            iconAppend=\"undo-alt\"\r\n            appendClickHandler={restoreTitle}\r\n            formProps={{\r\n              ...props.formProps,\r\n              validation: {\r\n                maxLength: 120,\r\n                minLength: 5,\r\n                required: true,\r\n              },\r\n            }}\r\n          />\r\n\r\n          <InputGroupInline\r\n            id=\"pageNumber\"\r\n            label=\"Página Inicial\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Página Inicial\"\r\n            formProps={{\r\n              ...props.formProps,\r\n              validation: {\r\n                min: 0,\r\n                required: true,\r\n              },\r\n            }}\r\n            type={InputType.NUMBER}\r\n          />\r\n\r\n          <Row className=\"mb-3 mt-3\">\r\n            <Col>\r\n              <CustomInput\r\n                type=\"switch\"\r\n                label=\"Sequenciar Relatórios\"\r\n                id=\"reportSequence\"\r\n                name=\"reportSequence\"\r\n                innerRef={props.formProps.register}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          {dateComponent}\r\n          {datesComponent}\r\n          {referenceComponent}\r\n          {referencesComponent}\r\n          {anoComponent}\r\n\r\n          <InputGroupInline\r\n            id=\"printerTypeEnum\"\r\n            label=\"Tipo de Impressão\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Selecione o tipo de impressão\"\r\n            formProps={{ ...props.formProps, validation: { required: true } }}\r\n            inputDropDownProps={{\r\n              optionsProvider: PRINTER_TYPE_ENUM,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n        </AccordionItem>\r\n      </Accordion>\r\n\r\n      <ProcessBar handleSubmit={props.formProps.handleSubmit(onSubmit)} hideCancelButton={true} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportFormView;\r\n","export const NORMAL = { value: '1', label: 'Normal' };\r\nexport const GRUPO_ATUAL = { value: '2', label: 'Grupo Atual' };\r\nexport const HIERARQUIA_INFERIOR = { value: '3', label: 'Hierarquia Inferior' };\r\n\r\nexport const CONSOLIDAR_ENUM_VALUES = [NORMAL, GRUPO_ATUAL, HIERARQUIA_INFERIOR];\r\n"],"sourceRoot":""}
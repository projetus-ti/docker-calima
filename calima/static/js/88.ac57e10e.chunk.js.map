{"version":3,"sources":["views/pages/mho/report/reciboHonorario/ReciboHonorarioRV.ts","views/pages/mho/report/reciboHonorario/ReciboHonorarioReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","dependencies/administradoraMHODependency.ts","models/dtos/mho/empresaMHO.ts","views/components/mho/empresaMHOIS/EmpresaMHOIS.tsx"],"names":["DEFAULT_VALUES","Object","objectSpread2","getDefaultReportBasicValues","dataEmissao","empresasMHO","gerarCabecalhoPadraoAdministradora","umaVia","usarDataEmissaoReferenciaDataVencimento","DEFAULT_OPTIONS","getDefaultReportViewOptions","exibirConfiguracaoDadosEmpresa","ReciboHonorarioReportView","props","globalReducer","useSelector","state","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","disableDuasVias","setDisableDuasVias","_useState3","_useState4","disableUmaVia","setDisableUmaVia","_useState5","_useState6","checkedUmRelPorPag","setCheckedUmRelPorPag","_useState7","_useState8","checkedDoisRelPorPag","setCheckedDoisRelPorPag","handleChange","e","target","value","onChangeChecked","id","checked","react_default","a","createElement","summer_esm","title","useGlobalParameter","globalParameter","dependencies","hasEmpresa","hasAdministradoraMHO","ReportForm","assign","localStorageKey","routeProps","reportBasicValues","reportViewOptions","label","isPrependLabel","validation","required","placeholder","type","InputType","REFERENCE","FormGroup","tag","Row","Col","EmpresaMHOIS","inputSearchProps","selectProps","isMulti","CustomInput","name","innerRef","register","Card","style","marginBottom","borderWidth","CardBody","onChange","disabled","result","empresa","__webpack_require__","d","__webpack_exports__","NATUREZA","SALDO_REPORT_ENUM","EmpresaIS","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","empresasSelecionadas","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","virtualization","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","errors","getValues","setValue","triggerValidation","handleCancel","validateExtras","currentItem","currentValues","parentObject","EnvioEmail","Fragment","sort","detailView","keyField","propName","className","maxLength","TEXT_AREA","ReportInputs","activeTab","setActiveTab","useEffect","_props$reportViewOpti","printingTypes","resetObject","length","idGerEmpresa","current","currentMomentDate","endDate","DATE","dtInicial","formatDate","toDate","DATES","dtFinal","endOf","referenciaInicial","format","REF_PATTERN","REFERENCES","referenciaFinal","ANO","ano","String","year","reset","toggleTab","tabIndex","dateInitial","dtInicialRequired","dateComponent","datesComponent","dtFinalRequired","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","NUMBER","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","inputProps","gerarPorEmpresas","size","segmentacaoFolhaComponent","exibirSegmentacaoFolha","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","exibirImprimirValoresColoridos","inputDropDownProps","optionsProvider","isClearable","DROP_DOWN","firstOpen","extraConfigOpened","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","hidden","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","erros","params","message","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history","administradora","administradoraMHO"],"mappings":"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","file":"static/js/88.ac57e10e.chunk.js","sourcesContent":["import { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { EmpresaMHO } from '../../../../../models/dtos/mho/empresaMHO';\r\n\r\nexport interface ReciboHonorarioRV extends ReportBasicValues {\r\n  dataEmissao?: Date;\r\n  doisRelPorPag?: boolean;\r\n  empresasMHO?: EmpresaMHO[];\r\n  exibirBaixasETotalBaixas?: boolean;\r\n  referencia?: string;\r\n  umaVia?: boolean;\r\n  umRelPorPag?: boolean;\r\n  usarDataEmissaoReferenciaDataVencimento?: boolean;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'recibohonorariorv';\r\nexport const REPORT_EVENT: string = 'printReciboHonorario';\r\nexport const REPORT_TITLE: string = 'Recibos de Honorários';\r\n","import React, { FC, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Card, CardBody, Col, CustomInput, FormGroup, Row } from 'reactstrap';\r\nimport { InputGroupInline, InputType, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasAdministradoraMHO } from '../../../../../dependencies/administradoraMHODependency';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { getDefaultReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport EmpresaMHOIS from '../../../../components/mho/empresaMHOIS/EmpresaMHOIS';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { CLASS_KEY, ReciboHonorarioRV, REPORT_EVENT, REPORT_TITLE } from './ReciboHonorarioRV';\r\n\r\nconst DEFAULT_VALUES: ReciboHonorarioRV = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n  dataEmissao: null,\r\n  empresasMHO: [],\r\n  gerarCabecalhoPadraoAdministradora: true,\r\n  umaVia: false,\r\n  usarDataEmissaoReferenciaDataVencimento: false,\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT),\r\n  exibirConfiguracaoDadosEmpresa: false,\r\n};\r\n\r\nconst ReciboHonorarioReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const { handleSubmit, ...formProps } = useForm<ReciboHonorarioRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n\r\n  const [disableDuasVias, setDisableDuasVias] = useState(false);\r\n\r\n  const [disableUmaVia, setDisableUmaVia] = useState(true);\r\n\r\n  const [checkedUmRelPorPag, setCheckedUmRelPorPag] = useState(false);\r\n  const [checkedDoisRelPorPag, setCheckedDoisRelPorPag] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    if (e.target.value === 'true') {\r\n      setDisableDuasVias(true);\r\n      setDisableUmaVia(false);\r\n      setCheckedUmRelPorPag(false);\r\n    } else if (e.target.value === 'false') {\r\n      setDisableDuasVias(false);\r\n      setDisableUmaVia(true);\r\n      setCheckedDoisRelPorPag(false);\r\n    }\r\n  };\r\n\r\n  const onChangeChecked = e => {\r\n    if (e.target.id === 'umRelPorPag') {\r\n      if (e.target.checked === true) {\r\n        setCheckedUmRelPorPag(true);\r\n      } else {\r\n        setCheckedUmRelPorPag(false);\r\n      }\r\n    } else if (e.target.id === 'doisRelPorPag') {\r\n      if (e.target.checked === true) {\r\n        setCheckedDoisRelPorPag(true);\r\n      } else {\r\n        setCheckedDoisRelPorPag(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Recibo de Honorários\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasAdministradoraMHO(globalReducer.globalParameter)]}\r\n    >\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n      >\r\n        <InputGroupInline\r\n          id=\"referencia\"\r\n          label=\"Referência\"\r\n          isPrependLabel={true}\r\n          formProps={{ ...formProps, validation: { required: true } }}\r\n          placeholder=\"Informe a Referência\"\r\n          type={InputType.REFERENCE}\r\n        />\r\n        <FormGroup tag={Row}>\r\n          <Col>\r\n            <EmpresaMHOIS formProps={formProps} id=\"empresasMHO\" inputSearchProps={{ selectProps: { isMulti: true } }} />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup tag={Row}>\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"exibirBaixasETotalBaixas\"\r\n              name=\"exibirBaixasETotalBaixas\"\r\n              label=\"Exibir Baixas e Total (-) Baixas\"\r\n              innerRef={formProps.register}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <Row>\r\n          <Col>\r\n            <Card style={{ marginBottom: '16px', borderWidth: 'thin' }}>\r\n              <CardBody>\r\n                <FormGroup tag={Row}>\r\n                  <Col>\r\n                    <CustomInput\r\n                      type=\"radio\"\r\n                      name=\"umaVia\"\r\n                      id=\"false\"\r\n                      value={'false'}\r\n                      label=\"Imprimir duas vias do recibo\"\r\n                      innerRef={formProps.register}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup tag={Row}>\r\n                  <Col>\r\n                    <CustomInput\r\n                      disabled={disableDuasVias}\r\n                      type=\"switch\"\r\n                      id=\"umRelPorPag\"\r\n                      name=\"umRelPorPag\"\r\n                      label=\"Separar as duas vias em páginas diferentes\"\r\n                      innerRef={formProps.register}\r\n                      checked={checkedUmRelPorPag}\r\n                      onChange={onChangeChecked}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col>\r\n            <Card style={{ marginBottom: '16px', borderWidth: 'thin' }}>\r\n              <CardBody>\r\n                <FormGroup tag={Row}>\r\n                  <Col>\r\n                    <CustomInput\r\n                      type=\"radio\"\r\n                      name=\"umaVia\"\r\n                      id=\"true\"\r\n                      value={'true'}\r\n                      label=\"Imprime uma via do recibo para cada empresa selecionada\"\r\n                      innerRef={formProps.register}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup tag={Row}>\r\n                  <Col>\r\n                    <CustomInput\r\n                      disabled={disableUmaVia}\r\n                      type=\"switch\"\r\n                      id=\"doisRelPorPag\"\r\n                      name=\"doisRelPorPag\"\r\n                      label=\"Agrupar o máximo de vias que couberem em uma página\"\r\n                      innerRef={formProps.register}\r\n                      checked={checkedDoisRelPorPag}\r\n                      onChange={onChangeChecked}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </ReportForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default ReciboHonorarioReportView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasAdministradoraMHO(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.administradora.administradoraMHO) {\r\n    result =\r\n      'A administradora deve ser configurada no módulo de Honorários. Para configurar acesse:\\n' +\r\n      'Módulo Honorários > Configurações > Administradora';\r\n  }\r\n\r\n  return result;\r\n}\r\n","import { Basic } from 'summer';\r\nimport { Empresa } from '../ger/empresa';\r\nimport { Banco } from '../mfp/banco';\r\nimport { ConfiguracaoBoletoMHO } from './configuracaoBoletoMHO';\r\nimport { EmpresaEventoFixoMHO } from './empresaEventoFixoMHO';\r\n\r\nexport interface EmpresaMHO extends Basic {\r\n  agenciaDebitoAutomatico?: string;\r\n  bancoInstituicaoDebitoAutomatico?: Banco;\r\n  configuracaoBoletoMHO: ConfiguracaoBoletoMHO;\r\n  contaCorrenteDebitoAutomatico?: string;\r\n  dentroMes?: boolean;\r\n  diaVencimento?: number;\r\n  digitoAgenciaDebitoAutomatico?: string;\r\n  dvContaCorrenteDebitoAutomatico?: string;\r\n  empresa?: Empresa;\r\n  empresaEventosFixos?: EmpresaEventoFixoMHO[];\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mho.model.dto.empresamho';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mho/empresaMHO';\r\n\r\nconst EmpresaMHOIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'empresa.codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'empresa.razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'diaVencimento',\r\n            text: 'Dia de Vencimento',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'EmpresaMHOSearchView',\r\n      }}\r\n      label=\"Empresa\"\r\n      placeholder=\"Informe a Empresa\"\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\nexport default EmpresaMHOIS;\r\n"],"sourceRoot":""}
{"version":3,"sources":["models/dtos/mcg/configECFRemuneracaoSocio.ts","views/pages/mcg/configECFRemuneracaoSocio/ConfigECFRemuneracaoSocioSearchView.tsx","dependencies/empresaDependency.ts","dependencies/empresaMCGDependency.ts"],"names":["__webpack_require__","d","__webpack_exports__","CLASS_NAME","r","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","summer__WEBPACK_IMPORTED_MODULE_2__","_dependencies_empresaDependency__WEBPACK_IMPORTED_MODULE_3__","_dependencies_empresaMCGDependency__WEBPACK_IMPORTED_MODULE_4__","_models_dtos_mcg_configECFRemuneracaoSocio__WEBPACK_IMPORTED_MODULE_5__","defaultSorted","dataField","order","OrderType","ASC","cellEditProps","blurToSave","mode","ClickEnum","CLICK","ConfigECFRemuneracaoSocioSearchView","props","globalReducer","useSelector","state","columns","editable","filter","type","FilterType","TEXT","sort","text","formatter","cell","row","a","createElement","refToFormat","referenciaInicial","referenciaFinal","NUMBER","title","useGlobalParameter","globalParameter","dependencies","hasEmpresaMCG","hasEmpresa","Object","assign","searchDataGridProps","dtoClassName","extraData","getExtraData","result","empresa","empresaMCG"],"mappings":"6FAgBAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAO,MAAMA,EAAa,+GChB1BH,EAAAI,EAAAF,GAAA,IAAAG,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,IAAAS,EAAAT,EAAA,GAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,MAqBA,MAAMa,EAAoC,CACxC,CACEC,UAAW,aACXC,MAAOC,IAAUC,MAIfC,EAA+B,CACnCC,YAAY,EACZC,KAAMC,IAAUC,OAgEHC,UA7D6EC,KAC1F,MAAMC,EAAgBC,YAAmCC,GAASA,EAAMF,eAUlEG,EAA0B,CAC9B,CACEd,UAAW,aACXe,UAAU,EACVC,OAAQ,CACNC,KAAMC,IAAWC,MAEnBC,MAAM,EACNC,KAAM,YAER,CACErB,UAAW,oBACXe,UAAU,EACVC,OAAQ,CACNC,KAAMC,IAAWC,MAEnBG,UAxBqB,CAACC,EAAMC,IAE5BhC,EAAAiC,EAAAC,cAAA,YACGC,aAAYH,EAAII,mBADnB,MAC0CD,aAAYH,EAAIK,kBAsB1DT,MAAM,EACNC,KAAM,mCAER,CACErB,UAAW,wBACXe,UAAU,EACVC,OAAQ,CACNC,KAAMC,IAAWY,QAEnBV,MAAM,EACNC,KAAM,kCAGV,OACE7B,EAAAiC,EAAAC,cAAC/B,EAAA,GAAD,CACEoC,MAAM,4EACNC,oBAAoB,EACpBC,gBAAiBtB,EAAcsB,gBAC/BC,aAAc,CAAC,IAAMC,YAAcxB,EAAcsB,iBAAkB,IAAMG,YAAWzB,EAAcsB,mBAElGzC,EAAAiC,EAAAC,cAAC/B,EAAA,EAAD0C,OAAAC,OAAA,GACM5B,EACAA,EAAM6B,oBAFZ,CAGEC,aAAcnD,IACdyB,QAASA,EACTV,cAAeA,EACfL,cAAeA,EACf0C,UAAWC,aAAahC,EAAO,oCAAqCrB,6CCtFrE,SAAS+C,EAAWH,GACzB,IAAIU,EAAS,KAIb,OAHKV,EAAgBW,UACnBD,EAAS,kDAEJA,EALTzD,EAAAC,EAAAC,EAAA,sBAAAgD,sCCAO,SAASD,EAAcF,GAC5B,IAAIU,EAAS,KAMb,OALKV,EAAgBY,aACnBF,EACE,0LAGGA,EAPTzD,EAAAC,EAAAC,EAAA,sBAAA+C","file":"static/js/309.380fc6c7.chunk.js","sourcesContent":["import { Basic } from 'summer';\r\nimport { Responsavel } from '../ger/responsavel';\r\nimport { EmpresaMCG } from './empresaMCG';\r\n\r\nexport interface ConfigECFRemuneracaoSocio extends Basic {\r\n  empresaMCG?: EmpresaMCG;\r\n  referenciaFinal?: string;\r\n  referenciaInicial?: string;\r\n  socio?: Responsavel;\r\n  vrDemaisRendimentos?: number;\r\n  vrIRRetidoFonte?: number;\r\n  vrJurosCapitalProprio?: number;\r\n  vrLucrosDividendos?: number;\r\n  vrRemuneracaoTrabalho?: number;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mcg.model.dto.configecfremuneracaosocio';\r\n","import React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  CellEditProps,\r\n  ClickEnum,\r\n  ColumnsProps,\r\n  DefaultSortProps,\r\n  FilterType,\r\n  getExtraData,\r\n  OrderType,\r\n  refToFormat,\r\n  SearchDataGrid,\r\n  SearchViewProps,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../dependencies/empresaMCGDependency';\r\nimport { CLASS_NAME, ConfigECFRemuneracaoSocio } from '../../../../models/dtos/mcg/configECFRemuneracaoSocio';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\nconst defaultSorted: DefaultSortProps[] = [\r\n  {\r\n    dataField: 'socio.nome',\r\n    order: OrderType.ASC,\r\n  },\r\n];\r\n\r\nconst cellEditProps: CellEditProps = {\r\n  blurToSave: true,\r\n  mode: ClickEnum.CLICK,\r\n};\r\n\r\nconst ConfigECFRemuneracaoSocioSearchView: FC<SearchViewProps<ConfigECFRemuneracaoSocio>> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const periodoFormatter = (cell, row) => {\r\n    return (\r\n      <span>\r\n        {refToFormat(row.referenciaInicial)} - {refToFormat(row.referenciaFinal)}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'socio.nome',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      sort: true,\r\n      text: 'Sócio',\r\n    },\r\n    {\r\n      dataField: 'referenciaInicial',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      formatter: periodoFormatter,\r\n      sort: true,\r\n      text: 'Período de Remuneração',\r\n    },\r\n    {\r\n      dataField: 'vrRemuneracaoTrabalho',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.NUMBER,\r\n      },\r\n      sort: true,\r\n      text: 'Remuneração do Trabalho',\r\n    },\r\n  ];\r\n  return (\r\n    <WindowComponent\r\n      title=\"Manutenção SPED ECF - Registro Y600 Remuneração dos Sócios\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresaMCG(globalReducer.globalParameter), () => hasEmpresa(globalReducer.globalParameter)]}\r\n    >\r\n      <SearchDataGrid\r\n        {...props}\r\n        {...props.searchDataGridProps}\r\n        dtoClassName={CLASS_NAME}\r\n        columns={columns}\r\n        cellEditProps={cellEditProps}\r\n        defaultSorted={defaultSorted}\r\n        extraData={getExtraData(props, 'ConfigECFRemuneracaoSocioEditView', CLASS_NAME)}\r\n      />\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default ConfigECFRemuneracaoSocioSearchView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMCG(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMCG) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o módulo Contábil. Para configurá-la acesse:\\n' +\r\n      'Módulo Contábil > Manutenção > Configurações > Empresa.';\r\n  }\r\n  return result;\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["views/pages/mcg/evolucaoContaContabilGraf/EvolucaoContaContabilGrafView.tsx","dependencies/empresaDependency.ts","dependencies/grupoEmpresaConfigDependency.ts","dependencies/empresaMCGDependency.ts","services/mcg.service.ts","views/components/mcg/planoContaIS/PlanoContaIS.tsx","models/dtos/ger/planoConta.ts","models/enumerated/mlf/mesEnum.ts","utilities/colors.ts"],"names":["EvolucaoContaContabilGrafView","props","globalReducer","useSelector","state","_useState","useState","_useState2","Object","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","activeTab","setActiveTab","_useForm","useForm","mode","reset","formProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","_useState3","_useState4","seriesContAcumulada","setSeriesContAcumulada","_useState5","_useState6","seriesDebCred","setSeriesDebCred","_useState7","_useState8","typeChart","setTypeChart","optionsGraficDebCred","chart","height","colors","GOVERNOR_BAY","AZURE_RADIANCE","MEDIUM_SPRING_GREEN","BERMUDA","dataLabels","enabled","fill","opacity","plotOptions","bar","horizontal","stroke","show","width","xaxis","categories","MES_ENUM_VALUES","map","it","label","yaxis","title","text","optionsGraficContAcumulada","toggleTab","target","tabIndex","useEffect","globalParameter","empresa","_globalReducer$global","grupoEmpresaConfig","refAtual","empresaMCG","setTimeout","dataStr","format","parseRefToDate","idGerEmpresa","id","idGerGrupoEmpresaAtual","handleTypeGraficChange","event","value","toString","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_19__","assign","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMCG","hasGrupoEmpresaConfig","reactstrap__WEBPACK_IMPORTED_MODULE_9__","hidden","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","_components_mcg_planoContaIS_PlanoContaIS__WEBPACK_IMPORTED_MODULE_26__","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","validation","required","placeholder","xs","maxLength","min","max","isPrependLabel","type","InputType","NUMBER","xl","reactstrap__WEBPACK_IMPORTED_MODULE_12__","name","onChange","innerRef","register","className","reactstrap__WEBPACK_IMPORTED_MODULE_13__","onClick","handleSubmit","data","evolucaoContaContabilGraf","errorFunction","mensagem","showToast","ERROR","thenFunction","result","saldosAcumuladosTotal","saldosDebCred","isEmpty","saldoAcumuladoPrimaria","dataSaldoAcumuladoPrimaria","forEach","values","push","planoConta","descricao","saldoAcumuladoSecundaria","dataSaldoAcumuladoSecundaria","planoContaComparacao","saldoCCPrimaria","dadosTratadosCreditoPrimario","saldoCDPrimaria","dadosTratadosDebitoPrimario","saldoCCSecundaria","dadosTratadosCreditoSecundario","saldoCDSecundaria","dadosTratadosDebitoSecundario","color","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_3__","icon","reactstrap__WEBPACK_IMPORTED_MODULE_14__","tabs","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","cx","active","reactstrap__WEBPACK_IMPORTED_MODULE_17__","Fragment","reactstrap__WEBPACK_IMPORTED_MODULE_18__","tabId","react_apexcharts__WEBPACK_IMPORTED_MODULE_6___default","options","series","__webpack_require__","d","__webpack_exports__","grupoEmpresaRaiz","grupoEmpresa","getService","create","gerarLancamentosFolhaPagamento","integracaoFolhaParam","param","send","post","integrarFolhaPagamento","lancamentoIntegracaoFolha","integrarMCP","importarParam","importarLancamentoCSV","formDataSend","FormData","append","String","importarDuplicados","importarLancamentosCardinal","_step","_iterator","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__","arquivos","s","n","done","arquivo","file","nomeArquivo","err","e","f","importarLancamentoPadraoCSV","_step2","_iterator2","importarHistoricoCSV","grupoHistoricoDestino","_step3","_iterator3","importarPlanoContaCSV","idEmpresa","grupoPlanoContaDestino","_step4","_iterator4","importarHistorico","importacaoHistorico","importarPlanoConta","importacaoPlanoContaParam","buscarConfigLivroFolhaMCG","get","integracaoFiscalContabil","encerrarContas","contaResultadoEncerramento","force","getDataUltimaContaEncerrada","limparEncerramentoContaResultado","contaResultadoLimpeza","validarReferenciaSPEDECFIrpjCsll","configECFIrpjCsll","validarReferenciaSPEDECFImuneIsenta","configECFImuneIsenta","validarRefRemuneracaoSocio","configECFRemuneracaoSocio","validarQuadroSocietario","configQuadro","obterLucroPrejuizoClassificacao","idGrupoPlanoConta","getSaldo","saldo","validarDadosSpedECF","ecfExportacaoParam","gerarSpedECF","usuario","getArquivoDigitalService","recuperarLancamentoConta","transferenciaLancamentoConta","transferirLancamentoConta","obterBancoPlanoConta","bancoPlanoContaDTO","validarConfigLivroFolha","changeLivroFolha","fecharRestaurar","fechamentoRestauracao","forceFecharRestaurar","verificarErros","erros","gerarSpedContabil","selecaoSped","arquivoRTFEscrituracaoSubstituida","_step5","_iterator5","atributoSelecaoSped","salvarLucroPrejuizoClassificacao","lucroPrejuizoClassificacao","consultarMovimentacao","saldoCriteria","totalizadorLancamento","consulta","getSaldoAnterior","isDataEncerrada","parametros","abrirContas","removeLancamentoPeriodo","obterContasClassificacaoIndireto","salvarClassificacaoIndireto","contaFluxoCaixaIndireto","obterMutacaoPatrimonioLiquido","salvarMutacaoPatrimonioLiquido","mutacaoPatrimonioLiquido","salvarContaResultado","contaResultado","excluirContaResultado","obterContasClassificacaoDireto","salvarClassificacaoDireto","contaFluxoCaixa","findSubGrupo","planoContaSubGrupoParam","removerTodosPlanosConta","removeList","listaPlanoConta","apagarFilha","listSubGrupo","referenciarContas","idsPlanoConta","idPlanoContaReferencial","idPlanoContaReferencialECF","desvincularContas","existeLancamentoEmContaAnalitica","idPlanoConta","importarLancamentoMCG","tipoImportacao","sobescrever","versaoSuperiorA2","dtInicial","dtFinal","importarSpedContabil","_step6","_iterator6","gerarManadContabil","refInicial","refFinal","arquivoSFP","evolucaoContaContabilGrafParam","composicaoReceitaDespesasGraf","compReceitaDespesasGrafParam","gerarFCONTContabil","fContContabilCrit","obterDadosArquivoExtrato","arquivoSelecionado","idBancoMCG","obterDadosConciliacaoBancariaPeriodo","obterBancoListPlanoConta","conciliarLancamentosExtrato","listConciliacaoBancaria","removerConciliarLancamentosExtrato","listaRemover","removerLancamentosExtratoBancario","obterLancamentosSaldoPeriodo","historico","valor","operacaoConsultaValor","conciliarLancamentosConta","listaConciliacao","removerConciliarLancamentosConta","listaConciliarRemover","eLalurAContas","eLacsAContas","getSaldoDebito","getSaldoCredito","removerLancamentoLote","atualizaCalculoIrpjCsll","buscarLancamentosHonorarios","integracaoHonorariosParam","integrarHonorarios","lancamentos","isAlteraCalculoIRPJorCSLL","alterarPlanoContaNaturezaConfig","enumPlanoContaNaturezaConta","prepararContaResultado","PlanoContaIS","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_3__","searchViewProps","filtroContaResultado","hideExtraFields","useDefaultSelectRow","inputSearchProps","columns","dataField","dtoClassName","CLASS_NAME","searchExpressions","expressions","analitica","alias","conditionalGroup","fieldName","sintetica","filtro","grupoPlanoConta","searchViewId","INPUT_SEARCH","JANEIRO_STRING","MES_STRING_ENUM_VALUES","CARIBBEAN_GREEN","MY_SIN","RED_ORANGE","RUBY","DARK_ORCHID","PURPLE_HEART","FREE_SPEECH_BLUE","DODGER_BLUE","DEEP_SKY_BLUE","IRIS_BLUE","GORSE","AMBER","ORANGE_PEEL"],"mappings":"iWA0TeA,UAnSqFC,KAClG,MAAMC,EAAgBC,YAAmCC,GAASA,EAAMF,eADmCG,EAEzEC,mBAAS,GAFgEC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEpGK,EAFoGH,EAAA,GAEzFI,EAFyFJ,EAAA,GAAAK,EAI3EC,YAAa,CAAEC,KAAM,WAA7CC,EAJmGH,EAInGG,MAAUC,EAJyFR,OAAAS,EAAA,EAAAT,CAAAI,EAAA,WAAAM,EAMrDZ,mBAAS,IAN4Ca,EAAAX,OAAAC,EAAA,EAAAD,CAAAU,EAAA,GAMpGE,EANoGD,EAAA,GAM/EE,EAN+EF,EAAA,GAAAG,EAOjEhB,mBAAS,IAPwDiB,EAAAf,OAAAC,EAAA,EAAAD,CAAAc,EAAA,GAOpGE,EAPoGD,EAAA,GAOrFE,EAPqFF,EAAA,GAAAG,EAQzEpB,mBAAS,QARgEqB,EAAAnB,OAAAC,EAAA,EAAAD,CAAAkB,EAAA,GAQpGE,EARoGD,EAAA,GAQzFE,EARyFF,EAAA,GAUrGG,EAAuB,CAC3BC,MAAO,CACLC,OAAQ,KAEVC,OAAQ,CAACC,IAAcC,IAAgBC,IAAqBC,KAC5DC,WAAY,CACVC,SAAS,GAEXC,KAAM,CACJC,QAAS,GAEXC,YAAa,CACXC,IAAK,CACHC,YAAY,IAGhBC,OAAQ,CACNC,MAAM,EACNC,MAAO,GAETC,MAAO,CACLC,WAAYC,IAAgBC,IAAIC,GAAMA,EAAGC,QAE3CC,MAAO,CACLC,MAAO,CACLC,KAAM,qCAKNC,EAA6B,CACjC1B,MAAO,CACLC,OAAQ,KAEVC,OAAQ,CAACC,IAAcE,KACvBE,WAAY,CACVC,SAAS,GAEXG,YAAa,CACXC,IAAK,CACHC,YAAY,IAGhBC,OAAQ,CACNC,MAAM,EACNC,MAAO,GAETC,MAAO,CACLC,WAAYC,IAAgBC,IAAIC,GAAMA,EAAGC,QAE3CC,MAAO,CACLC,MAAO,CACLC,KAAM,qCAKNE,EAAY,EAAGC,aAAyB,MACpCC,EAAaD,EAAbC,SACJlD,IAAckD,GAChBjD,EAAaiD,IAIjBC,oBACE,KACE,GAA8C,OAA1C3D,EAAc4D,gBAAgBC,QAAkB,OAAAC,EAK9C9D,EAAc4D,gBAHhBC,EAFgDC,EAEhDD,QACAE,EAHgDD,EAGhDC,mBACcC,EAJkCF,EAIhDG,WAAcD,SAEhBE,WAAW,KACTrD,EAAM,CACJsD,QAASC,aAAOC,aAAeL,EAAU,GAAI,QAC7CM,aAAcT,EAAQU,GACtBC,uBAAwBT,EAAmBQ,MAE5C,OAGP,IAGF,MA8DME,EAAyBC,IAC7B,MAAMC,EAAQD,EAAMjB,OAAOkB,MAAMC,WACjCjD,EAAagD,IAGf,OACEE,EAAAC,EAAAC,cAACC,EAAA,GAAD1E,OAAA2E,OAAA,GACMlF,EADN,CAEEsD,MAAM,sCACN6B,oBAAoB,EACpBtB,gBAAiB5D,EAAc4D,gBAC/BuB,aAAc,CACZ,IAAMC,YAAWpF,EAAc4D,iBAC/B,IAAMyB,YAAcrF,EAAc4D,iBAClC,IAAM0B,YAAsBtF,EAAc4D,oBAG5CiB,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAkBlE,UAAWA,EAAWyD,GAAG,eAAeiB,QAAQ,IAClEX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAkBlE,UAAWA,EAAWyD,GAAG,yBAAyBiB,QAAQ,IAC5EX,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CACE7E,UAASR,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAA,GAAOQ,GAAP,IAAkB+E,WAAY,CAAEC,UAAU,KACnDvB,GAAG,aACHwB,YAAY,8BACZ5C,MAAM,wBAIZ0B,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CACE7E,UAASR,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAA,GAAOQ,GAAP,IAAkB+E,WAAY,CAAEC,UAAU,KACnDvB,GAAG,uBACHpB,MAAM,wCACN4C,YAAY,sDAIlBlB,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKM,GAAI,GACPnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACET,GAAG,UACHzD,UAASR,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAA,GAAOQ,GAAP,IAAkB+E,WAAY,CAAEC,UAAU,EAAMG,UAAW,EAAGC,IAAK,KAAMC,IAAK,OACvFC,gBAAgB,EAChBjD,MAAM,MACNkD,KAAMC,IAAUC,UAGpB1B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKc,GAAI,GAAT,uBACA3B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKM,GAAI,GACPnB,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CACEJ,KAAK,QACL9B,GAAG,OACHpB,MAAM,QACNuD,KAAK,cACL/B,MAAO,OACPgC,SAAUlC,EACVmC,SAAU9F,EAAU+F,YAGxBhC,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKM,GAAI,GACPnB,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CACEJ,KAAK,QACL9B,GAAG,MACHpB,MAAM,SACNuD,KAAK,cACL/B,MAAO,MACPgC,SAAUlC,EACVmC,SAAU9F,EAAU+F,aAI1BhC,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAKqB,UAAU,QACbjC,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAQD,UAAU,OAAOE,QAASlG,EAAUmG,aA1IlCC,IAClBC,YAA0BD,EAAM,CAC9BE,cAAeC,IACbC,aAAUD,EAAUE,MAEtBC,aAAeC,IACb,MAAMC,EAAwB,GACxBC,EAAgB,GAEtB,IAAKC,aAAQH,EAAOI,wBAAyB,CAC3C,MAAMC,EAA6B,GACnCL,EAAOI,uBAAuBE,QAAQC,IACpCF,EAA2BG,KAAKD,KAElCN,EAAsBO,KAAK,CAAEvB,KAAMQ,EAAKgB,WAAWC,UAAWjB,KAAMY,IAEtE,IAAKF,aAAQH,EAAOW,0BAA2B,CAC7C,MAAMC,EAA+B,GACrCZ,EAAOW,yBAAyBL,QAAQC,IACtCK,EAA6BJ,KAAKD,KAEpCN,EAAsBO,KAAK,CAAEvB,KAAMQ,EAAKoB,qBAAqBH,UAAWjB,KAAMmB,IAGhF,IAAKT,aAAQH,EAAOc,iBAAkB,CACpC,MAAMC,EAA+B,GACrCf,EAAOc,gBAAgBR,QAAQC,IAC7BQ,EAA6BP,KAAKD,KAEpCL,EAAcM,KAAK,CAAEvB,KAAM,cAAaQ,EAAKgB,WAAWC,UAAWjB,KAAMsB,IAG3E,IAAKZ,aAAQH,EAAOgB,iBAAkB,CACpC,MAAMC,EAA8B,GACpCjB,EAAOgB,gBAAgBV,QAAQC,IAC7BU,EAA4BT,KAAKD,KAEnCL,EAAcM,KAAK,CAAEvB,KAAM,aAAYQ,EAAKgB,WAAWC,UAAWjB,KAAMwB,IAG1E,IAAKd,aAAQH,EAAOkB,mBAAoB,CACtC,MAAMC,EAAiC,GACvCnB,EAAOkB,kBAAkBZ,QAAQC,IAC/BY,EAA+BX,KAAKD,KAEtCL,EAAcM,KAAK,CAAEvB,KAAM,cAAaQ,EAAKoB,qBAAqBH,UAAWjB,KAAM0B,IAGrF,IAAKhB,aAAQH,EAAOoB,mBAAoB,CACtC,MAAMC,EAAgC,GACtCrB,EAAOoB,kBAAkBd,QAAQC,IAC/Bc,EAA8Bb,KAAKD,KAErCL,EAAcM,KAAK,CAAEvB,KAAM,aAAYQ,EAAKoB,qBAAqBH,UAAWjB,KAAM4B,IAGpFvH,EAAiBoG,GACjBxG,EAAuBuG,QAiFmDqB,MAAM,WAC1ElE,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAiBC,KAAK,SADxB,gBAKJpE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAKC,MAAM,GACTtE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,KACEvE,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAASvC,UAAWwC,YAAG,CAAEC,OAAsB,IAAd/I,IAAoBkD,SAAU,EAAGsD,QAASxD,GAA3E,+BAIFqB,EAAAC,EAAAC,cAACqE,EAAA,EAAD,KACEvE,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAASvC,UAAWwC,YAAG,CAAEC,OAAsB,IAAd/I,IAAoBkD,SAAU,EAAGsD,QAASxD,GAA3E,qCAKJqB,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAY1C,UAAU,OAAOtG,UAAWA,GACvB,QAAdkB,EACCmD,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2E,SAAA,KACE5E,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAASC,MAAO,EAAG7C,UAAU,YAC3BjC,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAAC6E,EAAA9E,EAAD,CAAO+E,QAAStG,EAA4BuG,OAAQ5I,EAAqBmF,KAAK,WAIpFxB,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAASC,MAAO,EAAG7C,UAAU,YAC3BjC,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAAC6E,EAAA9E,EAAD,CAAO+E,QAASjI,EAAsBkI,OAAQxI,EAAe+E,KAAK,YAM1ExB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2E,SAAA,KACE5E,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAASC,MAAO,EAAG7C,UAAU,YAC3BjC,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAAC6E,EAAA9E,EAAD,CAAO+E,QAAStG,EAA4BuG,OAAQ5I,EAAqBmF,KAAK,YAIpFxB,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAASC,MAAO,EAAG7C,UAAU,YAC3BjC,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAAC6E,EAAA9E,EAAD,CAAO+E,QAASjI,EAAsBkI,OAAQxI,EAAe+E,KAAK,oDC5S/E,SAASjB,EAAWxB,GACzB,IAAI6D,EAAS,KAIb,OAHK7D,EAAgBC,UACnB4D,EAAS,kDAEJA,EALTsC,EAAAC,EAAAC,EAAA,sBAAA7E,sCCAO,SAASE,EAAsB1B,GACpC,IAAI6D,EAAS,KAcb,OAPG7D,EAAgBC,SAChBD,EAAgBC,QAAQqG,iBAAiBnG,oBACzCH,EAAgBC,QAAQsG,aAAapG,qBAEtC0D,EARA,oLAWKA,EAfTsC,EAAAC,EAAAC,EAAA,sBAAA3E,sCCAO,SAASD,EAAczB,GAC5B,IAAI6D,EAAS,KAMb,OALK7D,EAAgBK,aACnBwD,EACE,0LAGGA,EAPTsC,EAAAC,EAAAC,EAAA,sBAAA5E,6lFC+DA,SAAS+E,IACP,OAAOC,aAAO,QAGT,SAASC,EAA+BC,EAA4CC,GACzFC,aAAKL,IAAaM,KAAkC,kCAAmCH,GAAuBC,GAGzG,SAASG,EAAuBC,EAAwDJ,GAC7FC,aAAKL,IAAaM,KAAkC,0BAA2BE,GAA4BJ,GAGtG,SAASK,EAAYC,EAA4BN,GACtDC,aAAKL,IAAaM,KAAuB,YAAaI,GAAgBN,GAGjE,SAASO,EAAsB7D,EAAoCsD,GACxE,MAAMQ,EAAe,IAAIC,SACzBD,EAAaE,OAAO,aAAcC,OAAOjE,EAAKrD,QAAQU,KACtDyG,EAAaE,OAAO,qBAAsBC,OAAOjE,EAAKkE,qBACtDJ,EAAaE,OAAO,8BAA+BC,OAAOjE,EAAKmE,8BAJ2C,IAAAC,EAAAC,EAAAjL,OAAAkL,EAAA,EAAAlL,CAMpF4G,EAAKuE,UAN+E,IAM1G,IAAAF,EAAAG,MAAAJ,EAAAC,EAAAI,KAAAC,MAAqC,OAA1BC,EAA0BP,EAAA3G,MACnCqG,EAAaE,OAAO,WAAYW,EAAQC,KAAMD,EAAQE,cAPkD,MAAAC,GAAAT,EAAAU,EAAAD,GAAA,QAAAT,EAAAW,IAU1GzB,aAAKL,IAAaM,KAAoB,yBAA0BM,GAAeR,GAG1E,SAAS2B,EAA4BjF,EAA0CsD,GACpF,MAAMQ,EAAe,IAAIC,SACzBD,EAAaE,OAAO,aAAcC,OAAOjE,EAAKrD,QAAQU,KAFgE,IAAA6H,EAAAC,EAAA/L,OAAAkL,EAAA,EAAAlL,CAIhG4G,EAAKuE,UAJ2F,IAItH,IAAAY,EAAAX,MAAAU,EAAAC,EAAAV,KAAAC,MAAqC,OAA1BC,EAA0BO,EAAAzH,MACnCqG,EAAaE,OAAO,WAAYW,EAAQC,KAAMD,EAAQE,cAL8D,MAAAC,GAAAK,EAAAJ,EAAAD,GAAA,QAAAK,EAAAH,IAOtHzB,aAAKL,IAAaM,KAAoB,+BAAgCM,GAAeR,GAGhF,SAAS8B,EAAqBpF,EAAmCsD,GACtE,MAAMQ,EAAe,IAAIC,SACzBD,EAAaE,OAAO,2BAA4BC,OAAOjE,EAAKqF,sBAAsBhI,KAFsB,IAAAiI,EAAAC,EAAAnM,OAAAkL,EAAA,EAAAlL,CAIlF4G,EAAKuE,UAJ6E,IAIxG,IAAAgB,EAAAf,MAAAc,EAAAC,EAAAd,KAAAC,MAAqC,OAA1BC,EAA0BW,EAAA7H,MACnCqG,EAAaE,OAAO,WAAYW,EAAQC,KAAMD,EAAQE,cALgD,MAAAC,GAAAS,EAAAR,EAAAD,GAAA,QAAAS,EAAAP,IAOxGzB,aAAKL,IAAaM,KAAoB,wBAAyBM,GAAeR,GAGzE,SAASkC,EAAsBxF,EAAoCsD,GACxE,MAAMQ,EAAe,IAAIC,SACzBD,EAAaE,OAAO,YAAaC,OAAOjE,EAAKyF,YAC7C3B,EAAaE,OAAO,4BAA6BC,OAAOjE,EAAK0F,uBAAuBrI,KAHsB,IAAAsI,EAAAC,EAAAxM,OAAAkL,EAAA,EAAAlL,CAKpF4G,EAAKuE,UAL+E,IAK1G,IAAAqB,EAAApB,MAAAmB,EAAAC,EAAAnB,KAAAC,MAAqC,OAA1BC,EAA0BgB,EAAAlI,MACnCqG,EAAaE,OAAO,WAAYW,EAAQC,KAAMD,EAAQE,cANkD,MAAAC,GAAAc,EAAAb,EAAAD,GAAA,QAAAc,EAAAZ,IAQ1GzB,aAAKL,IAAaM,KAAoB,yBAA0BM,GAAeR,GAG1E,SAASuC,EAAkBC,EAA0CxC,GAC1EC,aAAKL,IAAaM,KAAoB,qBAAsBsC,GAAsBxC,GAG7E,SAASyC,EAAmBC,EAAiD1C,GAClFC,aAAKL,IAAaM,KAAoB,sBAAuBwC,GAA4B1C,GAGpF,SAAS2C,EAA0BR,EAAmBnC,GAC3DC,aAAKL,IAAagD,IAAgB,8BAAgCT,GAAYnC,GAGzE,SAAS6C,EAAyBvC,EAAyCN,GAChFC,aAAKL,IAAaM,KAAqC,4BAA6BI,GAAgBN,GAG/F,SAAS8C,EACdC,EACAC,EACAhD,GAEAC,aACEL,IAAaM,KAAoC,kBAAmB,CAAE6C,6BAA4BC,UAClGhD,GAIG,SAASiD,EAA4BnJ,EAAsBkG,GAChEC,aAAKL,IAAagD,IAAU,gCAAkC9I,GAAekG,GAGxE,SAASkD,EAAiCC,EAA8CnD,GAC7FC,aAAKL,IAAaM,KAAa,wCAAyCiD,GAAwBnD,GAG3F,SAASoD,EAAiCC,EAAsCrD,GACrFC,aAAKL,IAAaM,KAAc,oCAAqCmD,GAAoBrD,GAGpF,SAASsD,EAAoCC,EAA4CvD,GAC9FC,aAAKL,IAAaM,KAAc,uCAAwCqD,GAAuBvD,GAG1F,SAASwD,EAA2BC,EAAsDzD,GAC/FC,aAAKL,IAAaM,KAAc,8BAA+BuD,GAA4BzD,GAGtF,SAAS0D,EAAwBC,EAAgC3D,GACtEC,aAAKL,IAAaM,KAAa,2BAA4ByD,GAAe3D,GAGrE,SAAS4D,EAAgCC,EAA2B7D,GACzEC,aAAKL,IAAagD,IAAQ,oCAAsCiB,GAAoB7D,GAG/E,SAAS8D,EAASC,EAAc/D,GACrCC,aAAKL,IAAaM,KAAa,YAAa6D,GAAQ/D,GAG/C,SAASgE,EAAoBC,EAAwCjE,GAC1EC,aAAKL,IAAaM,KAAoB,uBAAwB+D,GAAqBjE,GAG9E,SAASkE,EAAaC,EAAkBF,EAAwCjE,GACrFC,aACEmE,cAA2BlE,KAAa,gBAAiB,CAAEiE,UAASF,uBACpEjE,GAIG,SAASqE,EAAyBC,EAA4DtE,GACnGC,aAAKL,IAAaM,KAAmB,4BAA6BoE,GAA+BtE,GAG5F,SAASuE,EAA0BD,EAA4DtE,GACpGC,aAAKL,IAAaM,KAAc,6BAA8BoE,GAA+BtE,GAGxF,SAASwE,EAAqBC,EAAqCzE,GACxEC,aAAKL,IAAaM,KAAe,wBAAyBuE,GAAqBzE,GAG1E,SAAS0E,EAAwB5K,EAAsBkG,GAC5DC,aAAKL,IAAagD,IAAa,4BAA8B9I,GAAekG,GAGvE,SAAS2E,EAAiB7K,EAAsBkG,GACrDC,aAAKL,IAAagD,IAAU,qBAAuB9I,GAAekG,GAG7D,SAAS4E,EAAgBC,EAAiD7E,GAC/EC,aAAKL,IAAaM,KAAkB,mBAAoB2E,GAAwB7E,GAG3E,SAAS8E,EAAqBD,EAAiD7E,GACpFC,aAAKL,IAAaM,KAAW,wBAAyB2E,GAAwB7E,GAGzE,SAAS+E,EAAeC,EAAuBhF,GACpDC,aAAKL,IAAaM,KAAc,kBAAmB8E,GAAQhF,GAGtD,SAASiF,EAAkBC,EAAkClF,GAClE,MAAMQ,EAAe,IAAIC,SAGzB,GAFAD,EAAaE,OAAO,aAAcC,OAAOuE,EAAYf,QAAQpK,KAEzDmL,EAAYC,kCAAmC,KAAAC,EAAAC,EAAAvP,OAAAkL,EAAA,EAAAlL,CAC3BoP,EAAYC,mCADe,IACjD,IAAAE,EAAAnE,MAAAkE,EAAAC,EAAAlE,KAAAC,MAAqE,OAA1DC,EAA0D+D,EAAAjL,MACnEqG,EAAaE,OAAO,oCAAqCW,EAAQC,KAAMD,EAAQE,cAFhC,MAAAC,GAAA6D,EAAA5D,EAAAD,GAAA,QAAA6D,EAAA3D,KAMnD,IAAK,MAAM4D,KAAuBJ,EAEN,sCAAxBI,GACwB,YAAxBA,GACqC,OAArCJ,EAAYI,IAEZ9E,EAAaE,OAAO4E,EAAqBJ,EAAYI,IAGzDrF,aAAKL,IAAaM,KAAa,qBAAsBM,GAAeR,GAG/D,SAASuF,EACdC,EACAxF,GAEAC,aAAKL,IAAaM,KAAiC,oCAAqCsF,GAA6BxF,GAGhH,SAASyF,EAAsBC,EAA8B1F,GAClEC,aAAKL,IAAaM,KAAwB,yBAA0BwF,GAAgB1F,GAG/E,SAAS2F,EAAsBC,EAAmC5F,GACvEC,aAAKL,IAAaM,KAA4B,yBAA0B0F,GAAW5F,GAG9E,SAAS6F,EAAiBH,EAA8B1F,GAC7DC,aAAKL,IAAaM,KAAa,oBAAqBwF,GAAgB1F,GAG/D,SAAS8F,EAAgBC,EAAgC/F,GAC9DC,aAAKL,IAAaM,KAAc,mBAAoB6F,GAAa/F,GAG5D,SAASgG,EAAYD,EAAgC/F,GAC1DC,aAAKL,IAAaM,KAAW,eAAgB6F,GAAa/F,GAGrD,SAASiG,EAAwBF,EAAqC/F,GAC3EC,aAAKL,IAAaM,KAAa,2BAA4B6F,GAAa/F,GAGnE,SAASkG,EAAiCrC,EAA2B7D,GAC1EC,aAAKL,IAAagD,IAA+B,qCAAuCiB,GAAoB7D,GAGvG,SAASmG,EAA4BC,EAAkDpG,GAC5FC,aAAKL,IAAaM,KAAc,+BAAgCkG,GAA0BpG,GAGrF,SAASqG,EAA8BxC,EAA2B7D,GACvEC,aAAKL,IAAagD,IAAQ,kCAAoCiB,GAAoB7D,GAG7E,SAASsG,EAA+BC,EAAoDvG,GACjGC,aAAKL,IAAaM,KAAW,kCAAmCqG,GAA2BvG,GAGtF,SAASwG,EAAqBC,EAAgCzG,GACnEC,aAAKL,IAAaM,KAAW,wBAAyBuG,GAAiBzG,GAGlE,SAAS0G,EAAsBD,EAAgCzG,GACpEC,aAAKL,IAAaM,KAAW,yBAA0BuG,GAAiBzG,GAGnE,SAAS2G,EAA+B9C,EAA2B7D,GACxEC,aAAKL,IAAagD,IAAuB,mCAAqCiB,GAAoB7D,GAG7F,SAAS4G,EAA0BC,EAAkC7G,GAC1EC,aAAKL,IAAaM,KAAc,6BAA8B2G,GAAkB7G,GAG3E,SAAS8G,EAAaC,EAAkD/G,GAC7EC,aAAKL,IAAaM,KAAU,gBAAiB6G,GAA0B/G,GAGlE,SAASgH,GAAwBnD,EAA2BM,EAAkBnE,GACnFC,aACEL,IAAaM,KAAW,2BAA4B,CAAE2D,oBAAmBM,YACzEnE,GAIG,SAASiH,GAAWC,EAA+BC,EAAsBhD,EAAkBnE,GAChGC,aACEL,IAAaM,KAAU,cAAe,CAAEgH,kBAAiBC,cAAahD,YACtEnE,GAIG,SAASoH,GAAa1J,EAAwBsC,GACnDC,aAAKL,IAAaM,KAAmB,gBAAiBxC,GAAasC,GAG9D,SAASqH,GACdC,EACAC,EACAC,EACAxH,GAEAC,aACEL,IAAaM,KAAW,qBAAsB,CAAEoH,gBAAeC,0BAAyBC,+BACxFxH,GAIG,SAASyH,GACdH,EACAC,EACAC,EACAxH,GAEAC,aACEL,IAAaM,KAAW,qBAAsB,CAAEoH,gBAAeC,0BAAyBC,+BACxFxH,GAIG,SAAS0H,GAAiCC,EAAsBxF,EAAmBnC,GACxFC,aACEL,IAAaM,KAAc,oCAAqC,CAAEyH,eAAcxF,cAChFnC,GAIG,SAAS4H,GAAsBlL,EAAsCsD,GAC1E,MAAMQ,EAAe,IAAIC,SACzBD,EAAaE,OAAO,eAAgBC,OAAOjE,EAAK5C,eAChD0G,EAAaE,OAAO,iBAAkBC,OAAOjE,EAAKmL,iBAClDrH,EAAaE,OAAO,cAAeC,OAAOjE,EAAKoL,cAC/CtH,EAAaE,OAAO,mBAAoBC,OAAOjE,EAAKqL,mBACpDvH,EAAaE,OAAO,UAAWhE,EAAK2E,QAAQ,GAAGC,KAAM5E,EAAK2E,QAAQ,GAAGE,cAEvC,IAA1B7E,EAAKqL,kBAA+B3K,aAAQV,EAAKsL,YAAe5K,aAAQV,EAAKuL,WAC/EzH,EAAaE,OAAO,YAAahE,EAAKsL,WACtCxH,EAAaE,OAAO,UAAWhE,EAAKuL,UAGtChI,aAAKL,IAAaM,KAA8C,yBAA0BM,GAAeR,GAGpG,SAASkI,GAAqBxL,EAA8BsD,GACjE,MAAMQ,EAAe,IAAIC,SACzBD,EAAaE,OAAO,aAAcC,OAAOjE,EAAKrD,QAAQU,KACtDyG,EAAaE,OAAO,aAAcC,OAAOjE,EAAKyH,QAAQpK,KAH6C,IAAAoO,EAAAC,EAAAtS,OAAAkL,EAAA,EAAAlL,CAK7E4G,EAAKuE,UALwE,IAKnG,IAAAmH,EAAAlH,MAAAiH,EAAAC,EAAAjH,KAAAC,MAAqC,OAA1BC,EAA0B8G,EAAAhO,MACnCqG,EAAaE,OAAO,WAAYW,EAAQC,KAAMD,EAAQE,cAN2C,MAAAC,GAAA4G,EAAA3G,EAAAD,GAAA,QAAA4G,EAAA1G,IASnGzB,aAAKL,IAAaM,KAAoB,wBAAyBM,GAAeR,GAGzE,SAASqI,GAAmB3L,EAAyBsD,GAC1D,MAAMQ,EAAe,IAAIC,SACzBD,EAAaE,OAAO,aAAchE,EAAK4L,YACvC9H,EAAaE,OAAO,WAAYhE,EAAK6L,UACrC/H,EAAaE,OAAO,eAAgBC,OAAOjE,EAAK5C,eAChD0G,EAAaE,OAAO,aAAcC,OAAOjE,EAAKyH,QAAQpK,KAEjDqD,aAAQV,EAAK8L,aAChBhI,EAAaE,OAAO,aAAchE,EAAK8L,WAAW,GAAGlH,KAAM5E,EAAK8L,WAAW,GAAGjH,aAGhFtB,aAAKL,IAAaM,KAAa,sBAAuBM,GAAeR,GAGhE,SAASrD,GACd8L,EACAzI,GAEAC,aAAKL,IAAaM,KAAsC,6BAA8BuI,GAAiCzI,GAGlH,SAAS0I,GACdC,EACA3I,GAEAC,aAAKL,IAAaM,KAA0C,iCAAkCyI,GAA+B3I,GAGxH,SAAS4I,GAAmBC,EAAsC7I,GACvEC,aAAKL,IAAaM,KAAW,sBAAuB2I,GAAoB7I,GAGnE,SAAS8I,GAAyBC,EAAwCC,EAAYhJ,GAC3F,MAAMQ,EAAe,IAAIC,SACzBD,EAAaE,OAAO,aAAcsI,GAElCxI,EAAaE,OAAO,qBAAsBqI,EAAmB,GAAGzH,KAAMyH,EAAmB,GAAGxH,aAE5FtB,aAAKL,IAAaM,KAAqB,4BAA6BM,GAAeR,GAG9E,SAASiJ,GACdpF,EACA1B,EACA6G,EACAhB,EACAC,EACAjI,GAEA,MAAMQ,EAAe,IAAIC,SACzBD,EAAaE,OAAO,oBAAqBC,OAAOkD,IAChDrD,EAAaE,OAAO,YAAaC,OAAOwB,IACxC3B,EAAaE,OAAO,aAAcC,OAAOqI,IACzCxI,EAAaE,OAAO,YAAaC,OAAOqH,IACxCxH,EAAaE,OAAO,UAAWC,OAAOsH,IAEtChI,aAAKL,IAAaM,KAA8B,wCAAyCM,GAAeR,GAGnG,SAASkJ,GAAyBzE,EAAqCzE,GAC5EC,aAAKL,IAAaM,KAAiB,4BAA6BuE,GAAqBzE,GAGhF,SAASmJ,GAA4BC,EAAgDpJ,GAC1FC,aAAKL,IAAaM,KAAa,+BAAgCkJ,GAA0BpJ,GAGpF,SAASqJ,GAAmCC,EAAqCtJ,GACtFC,aAAKL,IAAaM,KAAa,sCAAuCoJ,GAAetJ,GAGhF,SAASuJ,GAAkCD,EAA8BtJ,GAC9EC,aAAKL,IAAaM,KAAa,qCAAsCoJ,GAAetJ,GAE/E,SAASwJ,GACd3F,EACA1B,EACA6F,EACAC,EACAwB,EACAC,EACAC,EACA3J,GAEA,MAAMQ,EAAe,IAAIC,SACzBD,EAAaE,OAAO,oBAAqBC,OAAOkD,IAChDrD,EAAaE,OAAO,YAAaC,OAAOwB,IACxC3B,EAAaE,OAAO,YAAaC,OAAOqH,IACxCxH,EAAaE,OAAO,UAAWC,OAAOsH,IACtCzH,EAAaE,OAAO,YAAaC,OAAO8I,IACxCjJ,EAAaE,OAAO,QAASC,OAAO+I,IACpClJ,EAAaE,OAAO,wBAAyBC,OAAOgJ,IAEpD1J,aAAKL,IAAaM,KAA8B,gCAAiCM,GAAeR,GAG3F,SAAS4J,GAA0BC,EAAsC7J,GAC9EC,aAAKL,IAAaM,KAAW,6BAA8B2J,GAAmB7J,GAGzE,SAAS8J,GAAiCC,EAA2C/J,GAC1FC,aAAKL,IAAaM,KAAW,oCAAqC6J,GAAwB/J,GAGrF,SAASgK,GAAcjQ,EAAYiG,GACxCC,aAAKL,IAAagD,IAAkB,kBAAoB7I,GAAKiG,GAGxD,SAASiK,GAAalQ,EAAYiG,GACvCC,aAAKL,IAAagD,IAAkB,iBAAmB7I,GAAKiG,GAGvD,SAASkK,GAAenE,EAAuB/F,GACpDC,aAAKL,IAAaM,KAAa,kBAAmB6F,GAAa/F,GAG1D,SAASmK,GAAgBpE,EAAuB/F,GACrDC,aAAKL,IAAaM,KAAa,mBAAoB6F,GAAa/F,GAG3D,SAASoK,GAAsBrE,EAAkC/F,GACtEC,aAAKL,IAAaM,KAAc,yBAA0B6F,GAAa/F,GAGlE,SAASqK,GAAwBtE,EAAkC/F,GACxEC,aAAKL,IAAaM,KAAc,2BAA4B6F,GAAa/F,GAGpE,SAASsK,GACdC,EACAvK,GAEAC,aAAKL,IAAaM,KAAuC,+BAAgCqK,GAA4BvK,GAGhH,SAASwK,GACdD,EACAE,EACAzK,GAEAC,aACEL,IAAaM,KAAa,sBAAuB,CAAEqK,4BAA2BE,gBAC9EzK,GAIG,SAAS0K,GAA0B3E,EAA6B/F,GACrEC,aAAKL,IAAaM,KAAc,6BAA8B6F,GAAa/F,GAGtE,SAAS2K,GAAgCrD,EAAyBsD,EAAqC5K,GAC5GC,aACEL,IAAaM,KAAW,mCAAoC,CAAEoH,gBAAesD,gCAC7E5K,GAIG,SAAS6K,GAAuBhH,EAA2B7D,GAChEC,aAAKL,IAAagD,IAAU,2BAA6BiB,GAAoB7D,yFC1chE8K,IA/EsCvV,KACnD,MAAMC,EAAgBC,YAAmCC,GAASA,EAAMF,eAqCxE,OACEuV,EAAAzQ,EAAAC,cAACyQ,EAAA,EAADlV,OAAA2E,OAAA,GACMlF,EADN,CAEEqG,gBAAgB,EAChBqP,gBAAenV,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAA,GACVP,EAAM0V,iBADI,IAEbC,qBAAsB3V,EAAM2V,qBAC5BC,iBAAiB,EACjBC,qBAAqB,IAEvBC,iBAAgBvV,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAA,GACXP,EAAM8V,kBADK,IAEdC,QAAS,CACP,CACEC,UAAW,QACXzS,KAAM,SAER,CACEyS,UAAW,YACXzS,KAAM,gBAER,CACEyS,UAAW,iBACXzS,KAAM,QAER,CACEyS,UAAW,YACXzS,KAAM,oBAGV0S,aAAcC,IACdC,kBAlEsB,KAC1B,MAAMC,EAAkC,GAwBxC,OAvBIpW,EAAMqW,WACRD,EAAYlO,KAAK,CACfoO,MAAO,IACPC,iBAAkB,KAClBC,UAAW,YACX5R,OAAO,IAGP5E,EAAMyW,WACRL,EAAYlO,KAAK,CACfoO,MAAO,IACPC,iBAAkB,KAClBC,UAAW,YACX5R,OAAO,IAIP5E,EAAM2V,sBACR3V,EAAM2V,qBAAqB3N,QAAQ0O,IACjCN,EAAYlO,KAAKwO,KAId,CACL,CACEH,iBAAkB,KAClBH,cACAI,UAAW,qBACX5R,MAAO5E,EAAMsO,mBAAqBrO,EAAc4D,gBAAgB8S,gBAAgBnS,MAqChFoS,aAAc,yBAEhBxT,MAAOpD,EAAMoD,MAAQpD,EAAMoD,MAAQ,kBACnC4C,YAAahG,EAAMgG,YAAchG,EAAMgG,YAAc,4BACrDM,KAAMC,IAAUsQ,oDCvEtB7M,EAAAC,EAAAC,EAAA,sBAAAgM,IAAO,MAAMA,EAAa,+FCjB1BlM,EAAAC,EAAAC,EAAA,sBAAAjH,IAAA+G,EAAAC,EAAAC,EAAA,sBAAA4M,IAAA9M,EAAAC,EAAAC,EAAA,sBAAA6M,IAAO,MAaM9T,EAAkB,CAbR,CAAEG,MAAO,UAAWwB,MAAO,GACzB,CAAExB,MAAO,YAAawB,MAAO,GACjC,CAAExB,MAAO,WAASwB,MAAO,GACzB,CAAExB,MAAO,QAASwB,MAAO,GAC1B,CAAExB,MAAO,OAAQwB,MAAO,GACvB,CAAExB,MAAO,QAASwB,MAAO,GACzB,CAAExB,MAAO,QAASwB,MAAO,GACxB,CAAExB,MAAO,SAAUwB,MAAO,GACxB,CAAExB,MAAO,WAAYwB,MAAO,GAC7B,CAAExB,MAAO,UAAWwB,MAAO,IAC1B,CAAExB,MAAO,WAAYwB,MAAO,IAC5B,CAAExB,MAAO,WAAYwB,MAAO,KAIvCkS,EAAiB,CAAE1T,MAAO,UAAWwB,MAAO,KAa5CmS,EAAyB,CACpCD,EAb8B,CAAE1T,MAAO,YAAawB,MAAO,KACjC,CAAExB,MAAO,WAASwB,MAAO,KACzB,CAAExB,MAAO,QAASwB,MAAO,KAC1B,CAAExB,MAAO,OAAQwB,MAAO,KACvB,CAAExB,MAAO,QAASwB,MAAO,KACzB,CAAExB,MAAO,QAASwB,MAAO,KACxB,CAAExB,MAAO,SAAUwB,MAAO,KACxB,CAAExB,MAAO,WAAYwB,MAAO,KAC7B,CAAExB,MAAO,UAAWwB,MAAO,MAC1B,CAAExB,MAAO,WAAYwB,MAAO,MAC5B,CAAExB,MAAO,WAAYwB,MAAO,yCC1B3DoF,EAAAC,EAAAC,EAAA,sBAAA8M,IAAAhN,EAAAC,EAAAC,EAAA,sBAAAhI,IAAA8H,EAAAC,EAAAC,EAAA,sBAAA+M,IAAAjN,EAAAC,EAAAC,EAAA,sBAAAjI,IAAA+H,EAAAC,EAAAC,EAAA,sBAAA9H,IAAA4H,EAAAC,EAAAC,EAAA,sBAAA/H,IAAA6H,EAAAC,EAAAC,EAAA,sBAAAgN,IAAAlN,EAAAC,EAAAC,EAAA,sBAAAiN,IAAAnN,EAAAC,EAAAC,EAAA,sBAAAkN,IAAApN,EAAAC,EAAAC,EAAA,sBAAAmN,IAAArN,EAAAC,EAAAC,EAAA,sBAAAoN,IAAAtN,EAAAC,EAAAC,EAAA,sBAAAqN,IAAAvN,EAAAC,EAAAC,EAAA,sBAAAsN,IAAAxN,EAAAC,EAAAC,EAAA,sBAAAuN,IAAAzN,EAAAC,EAAAC,EAAA,sBAAAwN,IAAA1N,EAAAC,EAAAC,EAAA,sBAAAyN,IAAA3N,EAAAC,EAAAC,EAAA,sBAAA0N,IAAO,MAAMZ,EAAkB,UAClB9U,EAAiB,UACjB+U,EAAS,UACThV,EAAe,UACfG,EAAU,UACVD,EAAsB,UACtB+U,EAAa,UACbC,EAAO,UACPC,EAAc,UACdC,EAAe,UACfC,EAAmB,UACnBC,EAAc,UACdC,EAAgB,UAChBC,EAAY,UACZC,EAAQ,UACRC,EAAQ,UACRC,EAAc","file":"static/js/119.ec2def4a.chunk.js","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Button, Col, CustomInput, Form, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport { EditViewProps, ERROR, format, InputGroupInline, InputType, isEmpty, parseRefToDate, showToast, WindowComponent } from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../dependencies/empresaMCGDependency';\r\nimport { hasGrupoEmpresaConfig } from '../../../../dependencies/grupoEmpresaConfigDependency';\r\nimport { EvolucaoContaContabilGrafParam } from '../../../../models/dtos/mcg/evolucaoContaContabilGrafParam';\r\nimport { EvolucaoContaContabilGrafReturn } from '../../../../models/dtos/mcg/evolucaoContaContabilGrafReturn';\r\nimport { MES_ENUM_VALUES } from '../../../../models/enumerated/mlf/mesEnum';\r\nimport { evolucaoContaContabilGraf } from '../../../../services/mcg.service';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport { AZURE_RADIANCE, BERMUDA, GOVERNOR_BAY, MEDIUM_SPRING_GREEN } from '../../../../utilities/colors';\r\nimport PlanoContaIS from '../../../components/mcg/planoContaIS/PlanoContaIS';\r\n\r\ninterface EvolucaoContaContabilGrafViewProps extends EditViewProps<EvolucaoContaContabilGrafParam> {}\r\n\r\nconst EvolucaoContaContabilGrafView: FC<EvolucaoContaContabilGrafViewProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  const { reset, ...formProps } = useForm<any>({ mode: 'onBlur' });\r\n\r\n  const [seriesContAcumulada, setSeriesContAcumulada] = useState([]);\r\n  const [seriesDebCred, setSeriesDebCred] = useState([]);\r\n  const [typeChart, setTypeChart] = useState('line');\r\n\r\n  const optionsGraficDebCred = {\r\n    chart: {\r\n      height: 350,\r\n    },\r\n    colors: [GOVERNOR_BAY, AZURE_RADIANCE, MEDIUM_SPRING_GREEN, BERMUDA],\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    fill: {\r\n      opacity: 1,\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: false,\r\n      },\r\n    },\r\n    stroke: {\r\n      show: true,\r\n      width: 1,\r\n    },\r\n    xaxis: {\r\n      categories: MES_ENUM_VALUES.map(it => it.label),\r\n    },\r\n    yaxis: {\r\n      title: {\r\n        text: 'Saldo Acumulado das Contas (R$)',\r\n      },\r\n    },\r\n  };\r\n\r\n  const optionsGraficContAcumulada = {\r\n    chart: {\r\n      height: 250,\r\n    },\r\n    colors: [GOVERNOR_BAY, MEDIUM_SPRING_GREEN],\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: false,\r\n      },\r\n    },\r\n    stroke: {\r\n      show: true,\r\n      width: 1,\r\n    },\r\n    xaxis: {\r\n      categories: MES_ENUM_VALUES.map(it => it.label),\r\n    },\r\n    yaxis: {\r\n      title: {\r\n        text: 'Saldo Acumulado das Contas (R$)',\r\n      },\r\n    },\r\n  };\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (globalReducer.globalParameter.empresa !== null) {\r\n        const {\r\n          empresa,\r\n          grupoEmpresaConfig,\r\n          empresaMCG: { refAtual },\r\n        } = globalReducer.globalParameter;\r\n        setTimeout(() => {\r\n          reset({\r\n            dataStr: format(parseRefToDate(refAtual, 1), 'YYYY'),\r\n            idGerEmpresa: empresa.id,\r\n            idGerGrupoEmpresaAtual: grupoEmpresaConfig.id,\r\n          });\r\n        }, 400);\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const callGrafic = (data: EvolucaoContaContabilGrafParam) => {\r\n    evolucaoContaContabilGraf(data, {\r\n      errorFunction: mensagem => {\r\n        showToast(mensagem, ERROR);\r\n      },\r\n      thenFunction: (result: EvolucaoContaContabilGrafReturn) => {\r\n        const saldosAcumuladosTotal = [];\r\n        const saldosDebCred = [];\r\n\r\n        if (!isEmpty(result.saldoAcumuladoPrimaria)) {\r\n          const dataSaldoAcumuladoPrimaria = [];\r\n          result.saldoAcumuladoPrimaria.forEach(values => {\r\n            dataSaldoAcumuladoPrimaria.push(values);\r\n          });\r\n          saldosAcumuladosTotal.push({ name: data.planoConta.descricao, data: dataSaldoAcumuladoPrimaria });\r\n        }\r\n        if (!isEmpty(result.saldoAcumuladoSecundaria)) {\r\n          const dataSaldoAcumuladoSecundaria = [];\r\n          result.saldoAcumuladoSecundaria.forEach(values => {\r\n            dataSaldoAcumuladoSecundaria.push(values);\r\n          });\r\n          saldosAcumuladosTotal.push({ name: data.planoContaComparacao.descricao, data: dataSaldoAcumuladoSecundaria });\r\n        }\r\n\r\n        if (!isEmpty(result.saldoCCPrimaria)) {\r\n          const dadosTratadosCreditoPrimario = [];\r\n          result.saldoCCPrimaria.forEach(values => {\r\n            dadosTratadosCreditoPrimario.push(values);\r\n          });\r\n          saldosDebCred.push({ name: `CRÉDITO ` + data.planoConta.descricao, data: dadosTratadosCreditoPrimario });\r\n        }\r\n\r\n        if (!isEmpty(result.saldoCDPrimaria)) {\r\n          const dadosTratadosDebitoPrimario = [];\r\n          result.saldoCDPrimaria.forEach(values => {\r\n            dadosTratadosDebitoPrimario.push(values);\r\n          });\r\n          saldosDebCred.push({ name: `DÉBITO ` + data.planoConta.descricao, data: dadosTratadosDebitoPrimario });\r\n        }\r\n\r\n        if (!isEmpty(result.saldoCCSecundaria)) {\r\n          const dadosTratadosCreditoSecundario = [];\r\n          result.saldoCCSecundaria.forEach(values => {\r\n            dadosTratadosCreditoSecundario.push(values);\r\n          });\r\n          saldosDebCred.push({ name: `CRÉDITO ` + data.planoContaComparacao.descricao, data: dadosTratadosCreditoSecundario });\r\n        }\r\n\r\n        if (!isEmpty(result.saldoCDSecundaria)) {\r\n          const dadosTratadosDebitoSecundario = [];\r\n          result.saldoCDSecundaria.forEach(values => {\r\n            dadosTratadosDebitoSecundario.push(values);\r\n          });\r\n          saldosDebCred.push({ name: `DÉBITO ` + data.planoContaComparacao.descricao, data: dadosTratadosDebitoSecundario });\r\n        }\r\n\r\n        setSeriesDebCred(saldosDebCred);\r\n        setSeriesContAcumulada(saldosAcumuladosTotal);\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleTypeGraficChange = event => {\r\n    const value = event.target.value.toString();\r\n    setTypeChart(value);\r\n  };\r\n\r\n  return (\r\n    <WindowComponent\r\n      {...props}\r\n      title=\"Evolução de Conta Contábil\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[\r\n        () => hasEmpresa(globalReducer.globalParameter),\r\n        () => hasEmpresaMCG(globalReducer.globalParameter),\r\n        () => hasGrupoEmpresaConfig(globalReducer.globalParameter),\r\n      ]}\r\n    >\r\n      <Form>\r\n        <InputGroupInline formProps={formProps} id=\"idGerEmpresa\" hidden={true} />\r\n        <InputGroupInline formProps={formProps} id=\"idGerGrupoEmpresaAtual\" hidden={true} />\r\n        <Row>\r\n          <Col>\r\n            <PlanoContaIS\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              id=\"planoConta\"\r\n              placeholder=\"Informe a Conta Contábil\"\r\n              label=\"Conta Contábil\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <PlanoContaIS\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              id=\"planoContaComparacao\"\r\n              label=\"Conta Contábil de comparação\"\r\n              placeholder=\"Informe a Conta Contábil de comparação\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={4}>\r\n            <InputGroupInline\r\n              id=\"dataStr\"\r\n              formProps={{ ...formProps, validation: { required: true, maxLength: 4, min: 1980, max: 3000 } }}\r\n              isPrependLabel={true}\r\n              label=\"Ano\"\r\n              type={InputType.NUMBER}\r\n            />\r\n          </Col>\r\n          <Col xl={2}>Tipo do Gráfico:</Col>\r\n          <Col xs={1}>\r\n            <CustomInput\r\n              type=\"radio\"\r\n              id=\"line\"\r\n              label=\"Linha\"\r\n              name=\"tipografico\"\r\n              value={'line'}\r\n              onChange={handleTypeGraficChange}\r\n              innerRef={formProps.register}\r\n            />\r\n          </Col>\r\n          <Col xs={1}>\r\n            <CustomInput\r\n              type=\"radio\"\r\n              id=\"bar\"\r\n              label=\"Barras\"\r\n              name=\"tipografico\"\r\n              value={'bar'}\r\n              onChange={handleTypeGraficChange}\r\n              innerRef={formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <Button className=\"ml-0\" onClick={formProps.handleSubmit(callGrafic)} color=\"primary\">\r\n              <FontAwesomeIcon icon=\"sync\" /> Consultar\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Nav tabs={true}>\r\n          <NavItem>\r\n            <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n              Saldo Acumulado das Contas\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink className={cx({ active: activeTab === 2 })} tabIndex={2} onClick={toggleTab}>\r\n              Saldo de Crédito e Débito\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n        <TabContent className=\"mb-1\" activeTab={activeTab}>\r\n          {typeChart === 'bar' ? (\r\n            <>\r\n              <TabPane tabId={1} className=\"mb-0 p-3\">\r\n                <Row>\r\n                  <Col>\r\n                    <Chart options={optionsGraficContAcumulada} series={seriesContAcumulada} type=\"bar\" />\r\n                  </Col>\r\n                </Row>\r\n              </TabPane>\r\n              <TabPane tabId={2} className=\"mb-0 p-3\">\r\n                <Row>\r\n                  <Col>\r\n                    <Chart options={optionsGraficDebCred} series={seriesDebCred} type=\"bar\" />\r\n                  </Col>\r\n                </Row>\r\n              </TabPane>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <TabPane tabId={1} className=\"mb-0 p-3\">\r\n                <Row>\r\n                  <Col>\r\n                    <Chart options={optionsGraficContAcumulada} series={seriesContAcumulada} type=\"line\" />\r\n                  </Col>\r\n                </Row>\r\n              </TabPane>\r\n              <TabPane tabId={2} className=\"mb-0 p-3\">\r\n                <Row>\r\n                  <Col>\r\n                    <Chart options={optionsGraficDebCred} series={seriesDebCred} type=\"line\" />\r\n                  </Col>\r\n                </Row>\r\n              </TabPane>\r\n            </>\r\n          )}\r\n        </TabContent>\r\n      </Form>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default EvolucaoContaContabilGrafView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasGrupoEmpresaConfig(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n\r\n  const msg: string =\r\n    'O Grupo de empresas não está configurado para a empresa selecionada. Para configurar acesse:\\n' +\r\n    'Modulo Principal > Manutenção > Configurações > Grupo de Empresa';\r\n\r\n  if (\r\n    !globalParameter.empresa ||\r\n    !globalParameter.empresa.grupoEmpresaRaiz.grupoEmpresaConfig ||\r\n    !globalParameter.empresa.grupoEmpresa.grupoEmpresaConfig\r\n  ) {\r\n    result = msg;\r\n  }\r\n\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMCG(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMCG) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o módulo Contábil. Para configurá-la acesse:\\n' +\r\n      'Módulo Contábil > Manutenção > Configurações > Empresa.';\r\n  }\r\n  return result;\r\n}\r\n","import { AxiosInstance } from 'axios';\r\nimport { ArquivoSelecionado, AxiosParam, create, isEmpty, send } from 'summer';\r\nimport { PlanoConta } from '../models/dtos/ger/planoConta';\r\nimport { PlanoContaSubGrupoParam } from '../models/dtos/ger/planoContaSubGrupoParam';\r\nimport { RuleMessage } from '../models/dtos/ger/ruleMessage';\r\nimport { Usuario } from '../models/dtos/ger/usuario';\r\nimport { BancoExtrato } from '../models/dtos/mcg/bancoExtrato';\r\nimport { BancoMCG } from '../models/dtos/mcg/bancoMCG';\r\nimport { BancoPlanoConta } from '../models/dtos/mcg/bancoPlanoConta';\r\nimport { CalculoIrpjCsll } from '../models/dtos/mcg/calculoIrpjCsll';\r\nimport { ComposicaoReceitaDespesasGrafParam } from '../models/dtos/mcg/composicaoReceitaDespesasGrafParam';\r\nimport { ComposicaoReceitaDespesasGrafReturn } from '../models/dtos/mcg/composicaoReceitaDespesasGrafReturn';\r\nimport { ConciliacaoBancaria } from '../models/dtos/mcg/conciliacaoBancaria';\r\nimport { ConciliacaoConta } from '../models/dtos/mcg/conciliacaoConta';\r\nimport { ConfigECFImuneIsenta } from '../models/dtos/mcg/configECFImuneIsenta';\r\nimport { ConfigECFIrpjCsll } from '../models/dtos/mcg/configECFIrpjCsll';\r\nimport { ConfigECFRemuneracaoSocio } from '../models/dtos/mcg/configECFRemuneracaoSocio';\r\nimport { ConsultaTotalLancamento } from '../models/dtos/mcg/consultaTotalLancamento';\r\nimport { ContaFluxoCaixa } from '../models/dtos/mcg/contaFluxoCaixa';\r\nimport { ContaFluxoCaixaIndireto } from '../models/dtos/mcg/contaFluxoCaixaIndireto';\r\nimport { ContaResultado } from '../models/dtos/mcg/contaResultado';\r\nimport { ContaResultadoLimpeza } from '../models/dtos/mcg/contaResultadoLimpeza';\r\nimport { ContaResultadoMCGEncerramento } from '../models/dtos/mcg/contaResultadoMCGEncerramento';\r\nimport { DataEncerradaParam } from '../models/dtos/mcg/dataEncerradaParam';\r\nimport { ECFExportacaoParam } from '../models/dtos/mcg/ecfExportacaoParam';\r\nimport { Erros } from '../models/dtos/mcg/erros';\r\nimport { EvolucaoContaContabilGrafParam } from '../models/dtos/mcg/evolucaoContaContabilGrafParam';\r\nimport { EvolucaoContaContabilGrafReturn } from '../models/dtos/mcg/evolucaoContaContabilGrafReturn';\r\nimport { FCONTContabilCrit } from '../models/dtos/mcg/fContContabilCrit';\r\nimport { FechamentoRestauracaoMCG } from '../models/dtos/mcg/fechamentoRestauracaoMCG';\r\nimport { ImportacaoFiscalContabil, ImportacaoFiscalContabilResult } from '../models/dtos/mcg/importacaoFiscalContabil';\r\nimport { ImportacaoHistorico } from '../models/dtos/mcg/importacaoHistorico';\r\nimport { ImportacaoHistoricoCSVParam } from '../models/dtos/mcg/importacaoHistoricoCSVParam';\r\nimport { ImportacaoLancamentoCSVParam } from '../models/dtos/mcg/importacaoLancamentoCSVParam';\r\nimport { ImportacaoLancamentoMCGRetornoValidacao } from '../models/dtos/mcg/importacaoLancamentoMCGRetornoValidacao';\r\nimport { ImportacaoLancamentoMCGSelecao } from '../models/dtos/mcg/importacaoLancamentoMCGSelecao';\r\nimport { ImportacaoLancamentoPadraoCSVParam } from '../models/dtos/mcg/importacaoLancamentoPadraoCSVParam';\r\nimport { ImportacaoPlanoConta } from '../models/dtos/mcg/importacaoPlanoConta';\r\nimport { ImportacaoPlanoContaCSVParam } from '../models/dtos/mcg/importacaoPlanoContaCSVParam';\r\nimport { ImportacaoSpedContabil } from '../models/dtos/mcg/importacaoSpedContabil';\r\nimport { ImportacaoResult, ImportarMCP } from '../models/dtos/mcg/importarMCP';\r\nimport { InfoConciliacaoBancaria } from '../models/dtos/mcg/infoConciliacaoBancaria';\r\nimport { IntegracaoFolhaParam } from '../models/dtos/mcg/integracaoFolhaParam';\r\nimport { IntegracaoHonorariosParam } from '../models/dtos/mcg/integracaoHonorariosParam';\r\nimport { Lancamento } from '../models/dtos/mcg/lancamento';\r\nimport { LancamentoConciliacao } from '../models/dtos/mcg/lancamentoConciliacao';\r\nimport { LancamentoIntegracaoFolha } from '../models/dtos/mcg/lancamentoIntegracaoFolha';\r\nimport { LancamentoIntegracaoHonorarios } from '../models/dtos/mcg/lancamentoIntegracaoHonorarios';\r\nimport { LancamentoSaldo } from '../models/dtos/mcg/lancamentoSaldo';\r\nimport { LivroFolha } from '../models/dtos/mcg/livroFolha';\r\nimport { LucroPrejuizoClassificacao } from '../models/dtos/mcg/lucroPrejuizoClassificacao';\r\nimport { MANADContabilCrit } from '../models/dtos/mcg/manadContabilCrit';\r\nimport { MutacaoPatrimonioLiquido } from '../models/dtos/mcg/mutacaoPatrimonioLiquido';\r\nimport { QuadroSocietario } from '../models/dtos/mcg/quadroSocietario';\r\nimport { RemoveLancamentoLote } from '../models/dtos/mcg/removeLancamentoLote';\r\nimport { RemoveLancamentoPeriodo } from '../models/dtos/mcg/removeLancamentoPeriodo';\r\nimport { Saldo } from '../models/dtos/mcg/saldo';\r\nimport { SaldoCriteria } from '../models/dtos/mcg/saldoCriteria';\r\nimport { SelecaoSpedContabil } from '../models/dtos/mcg/selecaoSpedContabil';\r\nimport { SomaSaldo } from '../models/dtos/mcg/somaSaldo';\r\nimport { TotalizadorLancamento } from '../models/dtos/mcg/totalizadorLancamento';\r\nimport { TransferenciaLancamentoConta } from '../models/dtos/mcg/transferenciaLancamentoConta';\r\nimport { VerificarErros } from '../models/dtos/mcg/verificarErros';\r\nimport { getArquivoDigitalService } from './ger.service';\r\n\r\nfunction getService(): AxiosInstance {\r\n  return create('/mcg');\r\n}\r\n\r\nexport function gerarLancamentosFolhaPagamento(integracaoFolhaParam: IntegracaoFolhaParam, param: AxiosParam<LancamentoIntegracaoFolha[]>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/gerarLancamentosFolhaPagamento', integracaoFolhaParam), param);\r\n}\r\n\r\nexport function integrarFolhaPagamento(lancamentoIntegracaoFolha: LancamentoIntegracaoFolha[], param: AxiosParam<any>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/integrarFolhaPagamento', lancamentoIntegracaoFolha), param);\r\n}\r\n\r\nexport function integrarMCP(importarParam: ImportarMCP, param: AxiosParam<ImportacaoResult>) {\r\n  send(getService().post<ImportacaoResult>('/importar', importarParam), param);\r\n}\r\n\r\nexport function importarLancamentoCSV(data: ImportacaoLancamentoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('importarDuplicados', String(data.importarDuplicados));\r\n  formDataSend.append('importarLancamentosCardinal', String(data.importarLancamentosCardinal));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarLancamentoPadraoCSV(data: ImportacaoLancamentoPadraoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoPadraoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistoricoCSV(data: ImportacaoHistoricoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('grupoHistoricoDestino.id', String(data.grupoHistoricoDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarHistoricoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarPlanoContaCSV(data: ImportacaoPlanoContaCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idEmpresa', String(data.idEmpresa));\r\n  formDataSend.append('grupoPlanoContaDestino.id', String(data.grupoPlanoContaDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarPlanoContaCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistorico(importacaoHistorico: ImportacaoHistorico, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarHistorico', importacaoHistorico), param);\r\n}\r\n\r\nexport function importarPlanoConta(importacaoPlanoContaParam: ImportacaoPlanoConta, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarPlanoConta', importacaoPlanoContaParam), param);\r\n}\r\n\r\nexport function buscarConfigLivroFolhaMCG(idEmpresa: number, param: AxiosParam<LivroFolha>) {\r\n  send(getService().get<LivroFolha>('/buscarConfigLivroFolhaMCG/' + idEmpresa), param);\r\n}\r\n\r\nexport function integracaoFiscalContabil(importarParam: ImportacaoFiscalContabil, param: AxiosParam<ImportacaoFiscalContabilResult>) {\r\n  send(getService().post<ImportacaoFiscalContabilResult>('/integracaoFiscalContabil', importarParam), param);\r\n}\r\n\r\nexport function encerrarContas(\r\n  contaResultadoEncerramento: ContaResultadoMCGEncerramento,\r\n  force: boolean,\r\n  param: AxiosParam<ContaResultadoMCGEncerramento>\r\n) {\r\n  send(\r\n    getService().post<ContaResultadoMCGEncerramento>('/encerrarContas', { contaResultadoEncerramento, force }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function getDataUltimaContaEncerrada(idGerEmpresa: number, param: AxiosParam<Date>) {\r\n  send(getService().get<Date>('/getDataUltimaContaEncerrada/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function limparEncerramentoContaResultado(contaResultadoLimpeza: ContaResultadoLimpeza, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/limparEncerramentoContaResultadoApos', contaResultadoLimpeza), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFIrpjCsll(configECFIrpjCsll: ConfigECFIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFIrpjCsll', configECFIrpjCsll), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFImuneIsenta(configECFImuneIsenta: ConfigECFImuneIsenta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFImuneIsenta', configECFImuneIsenta), param);\r\n}\r\n\r\nexport function validarRefRemuneracaoSocio(configECFRemuneracaoSocio: ConfigECFRemuneracaoSocio, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarRefRemuneracaoSocio', configECFRemuneracaoSocio), param);\r\n}\r\n\r\nexport function validarQuadroSocietario(configQuadro: QuadroSocietario, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/validarQuadroSocietario', configQuadro), param);\r\n}\r\n\r\nexport function obterLucroPrejuizoClassificacao(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterLucroPrejuizoClassificacao/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function getSaldo(saldo: Saldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldo', saldo), param);\r\n}\r\n\r\nexport function validarDadosSpedECF(ecfExportacaoParam: ECFExportacaoParam, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/validarDadosSpedECF', ecfExportacaoParam), param);\r\n}\r\n\r\nexport function gerarSpedECF(usuario: Usuario, ecfExportacaoParam: ECFExportacaoParam, param?: AxiosParam<string>) {\r\n  send(\r\n    getArquivoDigitalService().post<string>('/gerarSpedECF', { usuario, ecfExportacaoParam }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function recuperarLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<Lancamento[]>) {\r\n  send(getService().post<Lancamento[]>('/recuperarLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function transferirLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/transferirLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function obterBancoPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG>) {\r\n  send(getService().post<BancoMCG>('/obterBancoPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function validarConfigLivroFolha(idGerEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(getService().get<boolean>('/validarConfigLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function changeLivroFolha(idGerEmpresa: number, param: AxiosParam<void>) {\r\n  send(getService().get<void>('/changeLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function fecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<RuleMessage>) {\r\n  send(getService().post<RuleMessage>('/fecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function forceFecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/forceFecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function verificarErros(erros: VerificarErros, param: AxiosParam<Erros[]>) {\r\n  send(getService().post<Erros[]>('/verificarErros', erros), param);\r\n}\r\n\r\nexport function gerarSpedContabil(selecaoSped: SelecaoSpedContabil, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('usuario.id', String(selecaoSped.usuario.id));\r\n\r\n  if (selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n    for (const arquivo of selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n      formDataSend.append('arquivoRTFEscrituracaoSubstituida', arquivo.file, arquivo.nomeArquivo);\r\n    }\r\n  }\r\n\r\n  for (const atributoSelecaoSped in selecaoSped) {\r\n    if (\r\n      atributoSelecaoSped !== 'arquivoRTFEscrituracaoSubstituida' &&\r\n      atributoSelecaoSped !== 'usuario' &&\r\n      selecaoSped[atributoSelecaoSped] !== null\r\n    ) {\r\n      formDataSend.append(atributoSelecaoSped, selecaoSped[atributoSelecaoSped]);\r\n    }\r\n  }\r\n  send(getService().post<string>('/gerarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function salvarLucroPrejuizoClassificacao(\r\n  lucroPrejuizoClassificacao: LucroPrejuizoClassificacao,\r\n  param: AxiosParam<LucroPrejuizoClassificacao>\r\n) {\r\n  send(getService().post<LucroPrejuizoClassificacao>('/salvarLucroPrejuizoClassificacao', lucroPrejuizoClassificacao), param);\r\n}\r\n\r\nexport function consultarMovimentacao(saldoCriteria: SaldoCriteria, param: AxiosParam<LancamentoSaldo[]>) {\r\n  send(getService().post<LancamentoSaldo[]>('/consultarMovimentacao', saldoCriteria), param);\r\n}\r\n\r\nexport function totalizadorLancamento(consulta: ConsultaTotalLancamento, param: AxiosParam<TotalizadorLancamento>) {\r\n  send(getService().post<TotalizadorLancamento>('/totalizadorLancamento', consulta), param);\r\n}\r\n\r\nexport function getSaldoAnterior(saldoCriteria: SaldoCriteria, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoAnterior', saldoCriteria), param);\r\n}\r\n\r\nexport function isDataEncerrada(parametros: DataEncerradaParam, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isDataEncerrada', parametros), param);\r\n}\r\n\r\nexport function abrirContas(parametros: DataEncerradaParam, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/abrirContas', parametros), param);\r\n}\r\n\r\nexport function removeLancamentoPeriodo(parametros: RemoveLancamentoPeriodo, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removeLancamentoPeriodo', parametros), param);\r\n}\r\n\r\nexport function obterContasClassificacaoIndireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixaIndireto[]>) {\r\n  send(getService().get<ContaFluxoCaixaIndireto[]>('/obterContasClassificacaoIndireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoIndireto(contaFluxoCaixaIndireto: ContaFluxoCaixaIndireto, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoIndireto', contaFluxoCaixaIndireto), param);\r\n}\r\n\r\nexport function obterMutacaoPatrimonioLiquido(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterMutacaoPatrimonioLiquido/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarMutacaoPatrimonioLiquido(mutacaoPatrimonioLiquido: MutacaoPatrimonioLiquido, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarMutacaoPatrimonioLiquido', mutacaoPatrimonioLiquido), param);\r\n}\r\n\r\nexport function salvarContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function excluirContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/excluirContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function obterContasClassificacaoDireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixa[]>) {\r\n  send(getService().get<ContaFluxoCaixa[]>('/obterContasClassificacaoDireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoDireto(contaFluxoCaixa: ContaFluxoCaixa, param?: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoDireto', contaFluxoCaixa), param);\r\n}\r\n\r\nexport function findSubGrupo(planoContaSubGrupoParam: PlanoContaSubGrupoParam, param: AxiosParam<any>) {\r\n  send(getService().post<any>('/findSubGrupo', planoContaSubGrupoParam), param);\r\n}\r\n\r\nexport function removerTodosPlanosConta(idGrupoPlanoConta: number, usuario: Usuario, param: AxiosParam<void>) {\r\n  send(\r\n    getService().post<void>('/removerTodosPlanosConta', { idGrupoPlanoConta, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function removeList(listaPlanoConta: PlanoConta[], apagarFilha: boolean, usuario: Usuario, param: AxiosParam<any>) {\r\n  send(\r\n    getService().post<any>('/removeList', { listaPlanoConta, apagarFilha, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function listSubGrupo(planoConta: PlanoConta, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().post<PlanoConta[]>('/listSubGrupo', planoConta), param);\r\n}\r\n\r\nexport function referenciarContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<void>\r\n) {\r\n  send(\r\n    getService().post<void>('/referenciarContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function desvincularContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<any>\r\n) {\r\n  send(\r\n    getService().post<void>('/desvincularContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function existeLancamentoEmContaAnalitica(idPlanoConta: number, idEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(\r\n    getService().post<boolean>('/existeLancamentoEmContaAnalitica', { idPlanoConta, idEmpresa }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function importarLancamentoMCG(data: ImportacaoLancamentoMCGSelecao, param: AxiosParam<ImportacaoLancamentoMCGRetornoValidacao>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('tipoImportacao', String(data.tipoImportacao));\r\n  formDataSend.append('sobescrever', String(data.sobescrever));\r\n  formDataSend.append('versaoSuperiorA2', String(data.versaoSuperiorA2));\r\n  formDataSend.append('arquivo', data.arquivo[0].file, data.arquivo[0].nomeArquivo);\r\n\r\n  if (data.versaoSuperiorA2 === false && !isEmpty(data.dtInicial) && !isEmpty(data.dtFinal)) {\r\n    formDataSend.append('dtInicial', data.dtInicial);\r\n    formDataSend.append('dtFinal', data.dtFinal);\r\n  }\r\n\r\n  send(getService().post<ImportacaoLancamentoMCGRetornoValidacao>('/importarLancamentoMCG', formDataSend), param);\r\n}\r\n\r\nexport function importarSpedContabil(data: ImportacaoSpedContabil, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function gerarManadContabil(data: MANADContabilCrit, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('refInicial', data.refInicial);\r\n  formDataSend.append('refFinal', data.refFinal);\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  if (!isEmpty(data.arquivoSFP)) {\r\n    formDataSend.append('arquivoSFP', data.arquivoSFP[0].file, data.arquivoSFP[0].nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<string>('/gerarManadContabil', formDataSend), param);\r\n}\r\n\r\nexport function evolucaoContaContabilGraf(\r\n  evolucaoContaContabilGrafParam: EvolucaoContaContabilGrafParam,\r\n  param: AxiosParam<EvolucaoContaContabilGrafReturn>\r\n) {\r\n  send(getService().post<EvolucaoContaContabilGrafReturn>('/evolucaoContaContabilGraf', evolucaoContaContabilGrafParam), param);\r\n}\r\n\r\nexport function composicaoReceitaDespesasGraf(\r\n  compReceitaDespesasGrafParam: ComposicaoReceitaDespesasGrafParam,\r\n  param: AxiosParam<ComposicaoReceitaDespesasGrafReturn>\r\n) {\r\n  send(getService().post<ComposicaoReceitaDespesasGrafReturn>('/composicaoReceitaDespesasGraf', compReceitaDespesasGrafParam), param);\r\n}\r\n\r\nexport function gerarFCONTContabil(fContContabilCrit: FCONTContabilCrit, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/gerarFCONTContabil', fContContabilCrit), param);\r\n}\r\n\r\nexport function obterDadosArquivoExtrato(arquivoSelecionado: ArquivoSelecionado, idBancoMCG, param: AxiosParam<BancoExtrato[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idBancoMCG', idBancoMCG);\r\n\r\n  formDataSend.append('arquivoSelecionado', arquivoSelecionado[0].file, arquivoSelecionado[0].nomeArquivo);\r\n\r\n  send(getService().post<BancoExtrato[]>('/obterDadosArquivoExtrato', formDataSend), param);\r\n}\r\n\r\nexport function obterDadosConciliacaoBancariaPeriodo(\r\n  idGrupoPlanoConta,\r\n  idEmpresa,\r\n  idBancoMCG,\r\n  dtInicial,\r\n  dtFinal,\r\n  param: AxiosParam<InfoConciliacaoBancaria>\r\n) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGrupoPlanoConta', String(idGrupoPlanoConta));\r\n  formDataSend.append('idEmpresa', String(idEmpresa));\r\n  formDataSend.append('idBancoMCG', String(idBancoMCG));\r\n  formDataSend.append('dtInicial', String(dtInicial));\r\n  formDataSend.append('dtFinal', String(dtFinal));\r\n\r\n  send(getService().post<InfoConciliacaoBancaria>('/obterDadosConciliacaoBancariaPeriodo', formDataSend), param);\r\n}\r\n\r\nexport function obterBancoListPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG[]>) {\r\n  send(getService().post<BancoMCG[]>('/obterBancoListPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function conciliarLancamentosExtrato(listConciliacaoBancaria: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/conciliarLancamentosExtrato', listConciliacaoBancaria), param);\r\n}\r\n\r\nexport function removerConciliarLancamentosExtrato(listaRemover: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerConciliarLancamentosExtrato', listaRemover), param);\r\n}\r\n\r\nexport function removerLancamentosExtratoBancario(listaRemover: BancoExtrato[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerLancamentosExtratoBancario', listaRemover), param);\r\n}\r\nexport function obterLancamentosSaldoPeriodo(\r\n  idGrupoPlanoConta,\r\n  idEmpresa,\r\n  dtInicial,\r\n  dtFinal,\r\n  historico,\r\n  valor,\r\n  operacaoConsultaValor,\r\n  param: AxiosParam<LancamentoConciliacao[]>\r\n) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGrupoPlanoConta', String(idGrupoPlanoConta));\r\n  formDataSend.append('idEmpresa', String(idEmpresa));\r\n  formDataSend.append('dtInicial', String(dtInicial));\r\n  formDataSend.append('dtFinal', String(dtFinal));\r\n  formDataSend.append('historico', String(historico));\r\n  formDataSend.append('valor', String(valor));\r\n  formDataSend.append('operacaoConsultaValor', String(operacaoConsultaValor));\r\n\r\n  send(getService().post<LancamentoConciliacao[]>('/obterLancamentosSaldoPeriodo', formDataSend), param);\r\n}\r\n\r\nexport function conciliarLancamentosConta(listaConciliacao: ConciliacaoConta[], param: AxiosParam<void>) {\r\n  send(getService().post<void>('/conciliarLancamentosConta', listaConciliacao), param);\r\n}\r\n\r\nexport function removerConciliarLancamentosConta(listaConciliarRemover: ConciliacaoConta[], param: AxiosParam<void>) {\r\n  send(getService().post<void>('/removerConciliarLancamentosConta', listaConciliarRemover), param);\r\n}\r\n\r\nexport function eLalurAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLalurAContas/' + id), param);\r\n}\r\n\r\nexport function eLacsAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLacsAContas/' + id), param);\r\n}\r\n\r\nexport function getSaldoDebito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoDebito', parametros), param);\r\n}\r\n\r\nexport function getSaldoCredito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoCredito', parametros), param);\r\n}\r\n\r\nexport function removerLancamentoLote(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/removerLancamentoLote', parametros), param);\r\n}\r\n\r\nexport function atualizaCalculoIrpjCsll(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/atualizaCalculoIrpjCsll', parametros), param);\r\n}\r\n\r\nexport function buscarLancamentosHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  param: AxiosParam<LancamentoIntegracaoHonorarios[]>\r\n) {\r\n  send(getService().post<LancamentoIntegracaoHonorarios[]>('/buscarLancamentosHonorarios', integracaoHonorariosParam), param);\r\n}\r\n\r\nexport function integrarHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  lancamentos: LancamentoIntegracaoHonorarios[],\r\n  param: AxiosParam<number>\r\n) {\r\n  send(\r\n    getService().post<number>('/integrarHonorarios', { integracaoHonorariosParam, lancamentos }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function isAlteraCalculoIRPJorCSLL(parametros: CalculoIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isAlteraCalculoIRPJorCSLL', parametros), param);\r\n}\r\n\r\nexport function alterarPlanoContaNaturezaConfig(idsPlanoConta: number[], enumPlanoContaNaturezaConta: number, param: AxiosParam<void>) {\r\n  send(\r\n    getService().post<void>('/alterarPlanoContaNaturezaConfig', { idsPlanoConta, enumPlanoContaNaturezaConta }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function prepararContaResultado(idGrupoPlanoConta: number, param: AxiosParam<void>) {\r\n  send(getService().get<void>('/prepararContaResultado/' + idGrupoPlanoConta), param);\r\n}\r\n","import React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/planoConta';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\nexport interface PlanoContaInputSearchProps extends InputProps {\r\n  analitica?: boolean;\r\n  sintetica?: boolean;\r\n  idGrupoPlanoConta?: number;\r\n  filtroContaResultado?: SearchExpression[];\r\n}\r\n\r\nconst PlanoContaIS: FC<PlanoContaInputSearchProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const getSearchExpression = (): SearchExpression[] => {\r\n    const expressions: SearchExpression[] = [];\r\n    if (props.analitica) {\r\n      expressions.push({\r\n        alias: 'c',\r\n        conditionalGroup: 'c_',\r\n        fieldName: 'analitica',\r\n        value: true,\r\n      });\r\n    }\r\n    if (props.sintetica) {\r\n      expressions.push({\r\n        alias: 'c',\r\n        conditionalGroup: 'c_',\r\n        fieldName: 'analitica',\r\n        value: false,\r\n      });\r\n    }\r\n\r\n    if (props.filtroContaResultado) {\r\n      props.filtroContaResultado.forEach(filtro => {\r\n        expressions.push(filtro);\r\n      });\r\n    }\r\n\r\n    return [\r\n      {\r\n        conditionalGroup: 'g_',\r\n        expressions,\r\n        fieldName: 'grupoPlanoConta.id',\r\n        value: props.idGrupoPlanoConta || globalReducer.globalParameter.grupoPlanoConta.id,\r\n      },\r\n    ];\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      searchViewProps={{\r\n        ...props.searchViewProps,\r\n        filtroContaResultado: props.filtroContaResultado,\r\n        hideExtraFields: true,\r\n        useDefaultSelectRow: true,\r\n      }}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'conta',\r\n            text: 'Conta',\r\n          },\r\n          {\r\n            dataField: 'analitica',\r\n            text: 'Analítica',\r\n          },\r\n          {\r\n            dataField: 'codigoReduzido',\r\n            text: 'C.R.',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressions: getSearchExpression,\r\n        searchViewId: 'PlanoContaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Plano de Contas'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Plano de Contas'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PlanoContaIS;\r\n","import { Basic } from 'summer';\r\nimport { PlanoContaMCG } from '../mcg/planoContaMCG';\r\nimport { SaldoAnterior } from '../mcg/saldoAnterior';\r\nimport { PlanoContaMCP } from '../mcp/planoContaMCP';\r\nimport { GrupoPlanoConta } from './grupoPlanoConta';\r\n\r\nexport interface PlanoConta extends Basic {\r\n  analitica?: boolean;\r\n  conta?: string;\r\n  codigoReduzido?: number;\r\n  descricao?: string;\r\n  grupoPlanoConta?: GrupoPlanoConta;\r\n  mcgPlanoConta?: PlanoContaMCG;\r\n  mcpPlanoConta?: PlanoContaMCP;\r\n  saldoAnterior?: SaldoAnterior;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.planoconta';\r\n","export const JANEIRO = { label: 'Janeiro', value: 1 };\r\nexport const FEVEREIRO = { label: 'Fevereiro', value: 2 };\r\nexport const MARCO = { label: 'Março', value: 3 };\r\nexport const ABRIL = { label: 'Abril', value: 4 };\r\nexport const MAIO = { label: 'Maio', value: 5 };\r\nexport const JUNHO = { label: 'Junho', value: 6 };\r\nexport const JULHO = { label: 'Julho', value: 7 };\r\nexport const AGOSTO = { label: 'Agosto', value: 8 };\r\nexport const SETEMBRO = { label: 'Setembro', value: 9 };\r\nexport const OUTUBRO = { label: 'Outubro', value: 10 };\r\nexport const NOVEMBRO = { label: 'Novembro', value: 11 };\r\nexport const DEZEMBRO = { label: 'Dezembro', value: 12 };\r\n\r\nexport const MES_ENUM_VALUES = [JANEIRO, FEVEREIRO, MARCO, ABRIL, MAIO, JUNHO, JULHO, AGOSTO, SETEMBRO, OUTUBRO, NOVEMBRO, DEZEMBRO];\r\n\r\nexport const JANEIRO_STRING = { label: 'Janeiro', value: '1' };\r\nexport const FEVEREIRO_STRING = { label: 'Fevereiro', value: '2' };\r\nexport const MARCO_STRING = { label: 'Março', value: '3' };\r\nexport const ABRIL_STRING = { label: 'Abril', value: '4' };\r\nexport const MAIO_STRING = { label: 'Maio', value: '5' };\r\nexport const JUNHO_STRING = { label: 'Junho', value: '6' };\r\nexport const JULHO_STRING = { label: 'Julho', value: '7' };\r\nexport const AGOSTO_STRING = { label: 'Agosto', value: '8' };\r\nexport const SETEMBRO_STRING = { label: 'Setembro', value: '9' };\r\nexport const OUTUBRO_STRING = { label: 'Outubro', value: '10' };\r\nexport const NOVEMBRO_STRING = { label: 'Novembro', value: '11' };\r\nexport const DEZEMBRO_STRING = { label: 'Dezembro', value: '12' };\r\n\r\nexport const MES_STRING_ENUM_VALUES = [\r\n  JANEIRO_STRING,\r\n  FEVEREIRO_STRING,\r\n  MARCO_STRING,\r\n  ABRIL_STRING,\r\n  MAIO_STRING,\r\n  JUNHO_STRING,\r\n  JULHO_STRING,\r\n  AGOSTO_STRING,\r\n  SETEMBRO_STRING,\r\n  OUTUBRO_STRING,\r\n  NOVEMBRO_STRING,\r\n  DEZEMBRO_STRING,\r\n];\r\n","export const CARIBBEAN_GREEN = '#00E396';\r\nexport const AZURE_RADIANCE = '#008FFB';\r\nexport const MY_SIN = '#FEB019';\r\nexport const GOVERNOR_BAY = '#3C44B1';\r\nexport const BERMUDA = '#7BDCB5';\r\nexport const MEDIUM_SPRING_GREEN = '#00D084';\r\nexport const RED_ORANGE = '#f44336';\r\nexport const RUBY = '#e91e63';\r\nexport const DARK_ORCHID = '#9c27b0';\r\nexport const PURPLE_HEART = '#673ab7';\r\nexport const FREE_SPEECH_BLUE = '#3f51b5';\r\nexport const DODGER_BLUE = '#2196f3';\r\nexport const DEEP_SKY_BLUE = '#03a9f4';\r\nexport const IRIS_BLUE = '#00bcd4';\r\nexport const GORSE = '#ffeb3b';\r\nexport const AMBER = '#ffc107';\r\nexport const ORANGE_PEEL = '#ff9800';\r\n"],"sourceRoot":""}
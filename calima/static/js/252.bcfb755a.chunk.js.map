{"version":3,"sources":["views/pages/mcg/composicaoReceitaDespesasGraf/ComposicaoReceitaDespesasGrafView.tsx","dependencies/empresaDependency.ts","dependencies/grupoEmpresaConfigDependency.ts","dependencies/empresaMCGDependency.ts","services/mcg.service.ts","utilities/colors.ts"],"names":["ComposicaoReceitaDespesasGrafView","props","globalReducer","useSelector","state","_useState","useState","_useState2","Object","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","activeTab","setActiveTab","_useForm","useForm","mode","reset","formProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","_useState3","_useState4","serieModeloSintetico","setSerieModeloSintetico","_useState5","_useState6","serieModeloAnalitico","setSerieModeloAnalitico","_useState7","_useState8","serieComposicao","setSerieComposicao","_useState9","_useState10","labelSintetico","setlabelSintetico","_useState11","_useState12","labelsAnalitico","setlabelsAnalitico","_useState13","_useState14","labelsCompResult","setlabelsCompResult","optionsSintetico","labels","optionsAnalitico","colors","RED_ORANGE","RUBY","DARK_ORCHID","PURPLE_HEART","FREE_SPEECH_BLUE","DODGER_BLUE","DEEP_SKY_BLUE","IRIS_BLUE","GORSE","AMBER","ORANGE_PEEL","optionsCompResult","toggleTab","target","tabIndex","useEffect","globalParameter","empresa","_globalReducer$global","refAtual","empresaMCG","setTimeout","dataStr","id","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_18__","assign","title","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMCG","hasGrupoEmpresaConfig","reactstrap__WEBPACK_IMPORTED_MODULE_9__","hidden","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","validation","required","placeholder","isPrependLabel","label","type","InputType","REFERENCE","className","reactstrap__WEBPACK_IMPORTED_MODULE_12__","onClick","handleSubmit","data","composicaoReceitaDespesasGraf","errorFunction","mensagem","showToast","ERROR","thenFunction","result","composicaoResultado","length","modeloSintetico","modeloAnalitico","params","message","AlertType","WARNING_YES_NO","alertManager","emit","ACTION_EVENTS","SHOW","modeloSinteticoLabel","modeloAnaliticoLabel","composicaoResultadoLabel","forEach","value","valor","Number","String","push","toUpperCase","color","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_3__","icon","reactstrap__WEBPACK_IMPORTED_MODULE_13__","tabs","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","cx","active","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","tabId","react_apexcharts__WEBPACK_IMPORTED_MODULE_6___default","options","series","__webpack_require__","d","__webpack_exports__","grupoEmpresaRaiz","grupoEmpresaConfig","grupoEmpresa","getService","create","gerarLancamentosFolhaPagamento","integracaoFolhaParam","param","send","post","integrarFolhaPagamento","lancamentoIntegracaoFolha","integrarMCP","importarParam","importarLancamentoCSV","formDataSend","FormData","append","importarDuplicados","importarLancamentosCardinal","_step","_iterator","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__","arquivos","s","n","done","arquivo","file","nomeArquivo","err","e","f","importarLancamentoPadraoCSV","_step2","_iterator2","importarHistoricoCSV","grupoHistoricoDestino","_step3","_iterator3","importarPlanoContaCSV","idEmpresa","grupoPlanoContaDestino","_step4","_iterator4","importarHistorico","importacaoHistorico","importarPlanoConta","importacaoPlanoContaParam","buscarConfigLivroFolhaMCG","get","integracaoFiscalContabil","encerrarContas","contaResultadoEncerramento","force","getDataUltimaContaEncerrada","idGerEmpresa","limparEncerramentoContaResultado","contaResultadoLimpeza","validarReferenciaSPEDECFIrpjCsll","configECFIrpjCsll","validarReferenciaSPEDECFImuneIsenta","configECFImuneIsenta","validarRefRemuneracaoSocio","configECFRemuneracaoSocio","validarQuadroSocietario","configQuadro","obterLucroPrejuizoClassificacao","idGrupoPlanoConta","getSaldo","saldo","validarDadosSpedECF","ecfExportacaoParam","gerarSpedECF","usuario","getArquivoDigitalService","recuperarLancamentoConta","transferenciaLancamentoConta","transferirLancamentoConta","obterBancoPlanoConta","bancoPlanoContaDTO","validarConfigLivroFolha","changeLivroFolha","fecharRestaurar","fechamentoRestauracao","forceFecharRestaurar","verificarErros","erros","gerarSpedContabil","selecaoSped","arquivoRTFEscrituracaoSubstituida","_step5","_iterator5","atributoSelecaoSped","salvarLucroPrejuizoClassificacao","lucroPrejuizoClassificacao","consultarMovimentacao","saldoCriteria","totalizadorLancamento","consulta","getSaldoAnterior","isDataEncerrada","parametros","abrirContas","removeLancamentoPeriodo","obterContasClassificacaoIndireto","salvarClassificacaoIndireto","contaFluxoCaixaIndireto","obterMutacaoPatrimonioLiquido","salvarMutacaoPatrimonioLiquido","mutacaoPatrimonioLiquido","salvarContaResultado","contaResultado","excluirContaResultado","obterContasClassificacaoDireto","salvarClassificacaoDireto","contaFluxoCaixa","findSubGrupo","planoContaSubGrupoParam","removerTodosPlanosConta","removeList","listaPlanoConta","apagarFilha","listSubGrupo","planoConta","referenciarContas","idsPlanoConta","idPlanoContaReferencial","idPlanoContaReferencialECF","desvincularContas","existeLancamentoEmContaAnalitica","idPlanoConta","importarLancamentoMCG","tipoImportacao","sobescrever","versaoSuperiorA2","isEmpty","dtInicial","dtFinal","importarSpedContabil","_step6","_iterator6","gerarManadContabil","refInicial","refFinal","arquivoSFP","evolucaoContaContabilGraf","evolucaoContaContabilGrafParam","compReceitaDespesasGrafParam","gerarFCONTContabil","fContContabilCrit","obterDadosArquivoExtrato","arquivoSelecionado","idBancoMCG","obterDadosConciliacaoBancariaPeriodo","obterBancoListPlanoConta","conciliarLancamentosExtrato","listConciliacaoBancaria","removerConciliarLancamentosExtrato","listaRemover","removerLancamentosExtratoBancario","obterLancamentosSaldoPeriodo","historico","operacaoConsultaValor","conciliarLancamentosConta","listaConciliacao","removerConciliarLancamentosConta","listaConciliarRemover","eLalurAContas","eLacsAContas","getSaldoDebito","getSaldoCredito","removerLancamentoLote","atualizaCalculoIrpjCsll","buscarLancamentosHonorarios","integracaoHonorariosParam","integrarHonorarios","lancamentos","isAlteraCalculoIRPJorCSLL","alterarPlanoContaNaturezaConfig","enumPlanoContaNaturezaConta","prepararContaResultado","CARIBBEAN_GREEN","AZURE_RADIANCE","MY_SIN","GOVERNOR_BAY","BERMUDA","MEDIUM_SPRING_GREEN"],"mappings":"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","file":"static/js/252.bcfb755a.chunk.js","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Button, Col, Form, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  EditViewProps,\r\n  ERROR,\r\n  InputGroupInline,\r\n  InputType,\r\n  showToast,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../dependencies/empresaMCGDependency';\r\nimport { hasGrupoEmpresaConfig } from '../../../../dependencies/grupoEmpresaConfigDependency';\r\nimport { ComposicaoReceitaDespesasGrafParam } from '../../../../models/dtos/mcg/composicaoReceitaDespesasGrafParam';\r\nimport { ComposicaoReceitaDespesasGrafReturn } from '../../../../models/dtos/mcg/composicaoReceitaDespesasGrafReturn';\r\nimport { composicaoReceitaDespesasGraf } from '../../../../services/mcg.service';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport {\r\n  AMBER,\r\n  DARK_ORCHID,\r\n  DEEP_SKY_BLUE,\r\n  DODGER_BLUE,\r\n  FREE_SPEECH_BLUE,\r\n  GORSE,\r\n  IRIS_BLUE,\r\n  ORANGE_PEEL,\r\n  PURPLE_HEART,\r\n  RED_ORANGE,\r\n  RUBY,\r\n} from '../../../../utilities/colors';\r\n\r\ninterface ComposicaoReceitaDespesasGrafViewProps extends EditViewProps<ComposicaoReceitaDespesasGrafParam> {}\r\n\r\nconst ComposicaoReceitaDespesasGrafView: FC<ComposicaoReceitaDespesasGrafViewProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  const { reset, ...formProps } = useForm<any>({ mode: 'onBlur' });\r\n\r\n  const [serieModeloSintetico, setSerieModeloSintetico] = useState([]);\r\n  const [serieModeloAnalitico, setSerieModeloAnalitico] = useState([]);\r\n  const [serieComposicao, setSerieComposicao] = useState([]);\r\n  const [labelSintetico, setlabelSintetico] = useState([]);\r\n  const [labelsAnalitico, setlabelsAnalitico] = useState([]);\r\n  const [labelsCompResult, setlabelsCompResult] = useState([]);\r\n\r\n  const optionsSintetico = {\r\n    labels: labelSintetico,\r\n  };\r\n  const optionsAnalitico = {\r\n    colors: [RED_ORANGE, RUBY, DARK_ORCHID, PURPLE_HEART, FREE_SPEECH_BLUE, DODGER_BLUE, DEEP_SKY_BLUE, IRIS_BLUE, GORSE, AMBER, ORANGE_PEEL],\r\n    labels: labelsAnalitico,\r\n  };\r\n\r\n  const optionsCompResult = {\r\n    labels: labelsCompResult,\r\n  };\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (globalReducer.globalParameter.empresa !== null) {\r\n        const {\r\n          empresa,\r\n          empresaMCG: { refAtual },\r\n        } = globalReducer.globalParameter;\r\n        setTimeout(() => {\r\n          reset({\r\n            dataStr: refAtual,\r\n            empresa: {\r\n              id: empresa.id,\r\n            },\r\n          });\r\n        }, 500);\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const callGrafic = (data: ComposicaoReceitaDespesasGrafParam) => {\r\n    composicaoReceitaDespesasGraf(data, {\r\n      errorFunction: mensagem => {\r\n        showToast(mensagem, ERROR);\r\n      },\r\n      thenFunction: (result: ComposicaoReceitaDespesasGrafReturn) => {\r\n        if (result.composicaoResultado.length === 0 && result.modeloSintetico.length === 0 && result.modeloAnalitico.length === 0) {\r\n          const params: AlertProps = {\r\n            message: 'Nenhum dado encontrado relativo a Referência Atual para geração dos gráficos',\r\n            type: AlertType.WARNING_YES_NO,\r\n          };\r\n          alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n        } else {\r\n          const modeloSintetico = [];\r\n          const modeloSinteticoLabel = [];\r\n          const modeloAnalitico = [];\r\n          const modeloAnaliticoLabel = [];\r\n          const composicaoResultado = [];\r\n          const composicaoResultadoLabel = ['TOTAL DA RECEITA', 'TOTAL DA DESPESA'];\r\n\r\n          result.modeloSintetico.forEach(value => {\r\n            const valor = Number(value[1]) * -1;\r\n            const label = String(value[0]);\r\n            modeloSinteticoLabel.push(label.toUpperCase());\r\n            modeloSintetico.push(valor);\r\n          });\r\n\r\n          result.modeloAnalitico.forEach(value => {\r\n            const valor = Number(value[1]) * -1;\r\n            const label = String(value[0]);\r\n            modeloAnaliticoLabel.push(label.toUpperCase());\r\n            modeloAnalitico.push(valor);\r\n          });\r\n\r\n          result.composicaoResultado.forEach(value => {\r\n            const valor = Number(value) * -1;\r\n            composicaoResultado.push(valor);\r\n          });\r\n\r\n          setlabelSintetico(modeloSinteticoLabel);\r\n          setSerieModeloSintetico(modeloSintetico);\r\n          setSerieModeloAnalitico(modeloAnalitico);\r\n          setlabelsAnalitico(modeloAnaliticoLabel);\r\n          setSerieComposicao(composicaoResultado);\r\n          setlabelsCompResult(composicaoResultadoLabel);\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <WindowComponent\r\n      {...props}\r\n      title=\"Composição de Receita e Despesas\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[\r\n        () => hasEmpresa(globalReducer.globalParameter),\r\n        () => hasEmpresaMCG(globalReducer.globalParameter),\r\n        () => hasGrupoEmpresaConfig(globalReducer.globalParameter),\r\n      ]}\r\n    >\r\n      <Form>\r\n        <InputGroupInline formProps={formProps} id=\"empresa.id\" hidden={true} />\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              id=\"dataStr\"\r\n              placeholder=\"Informe a Referência\"\r\n              isPrependLabel={true}\r\n              label=\"Referência\"\r\n              type={InputType.REFERENCE}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <Button className=\"ml-0\" onClick={formProps.handleSubmit(callGrafic)} color=\"primary\">\r\n              <FontAwesomeIcon icon=\"sync\" /> Consultar\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Nav tabs={true}>\r\n          <NavItem>\r\n            <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n              Modelo Sintético\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink className={cx({ active: activeTab === 2 })} tabIndex={2} onClick={toggleTab}>\r\n              Modelo Analítico\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab}>\r\n              Composição do resultado\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n        <TabContent className=\"mb-1\" activeTab={activeTab}>\r\n          <TabPane tabId={1} className=\"mb-0 p-3\">\r\n            <Row>\r\n              <Col>\r\n                <Chart options={optionsSintetico} series={serieModeloSintetico} type=\"pie\" />\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n          <TabPane tabId={2} className=\"mb-0 p-3\">\r\n            <Row>\r\n              <Col>\r\n                <Chart options={optionsAnalitico} series={serieModeloAnalitico} type=\"pie\" />\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n          <TabPane tabId={3} className=\"mb-0 p-3\">\r\n            <Row>\r\n              <Col>\r\n                <Chart options={optionsCompResult} series={serieComposicao} type=\"pie\" />\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n        </TabContent>\r\n      </Form>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default ComposicaoReceitaDespesasGrafView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasGrupoEmpresaConfig(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n\r\n  const msg: string =\r\n    'O Grupo de empresas não está configurado para a empresa selecionada. Para configurar acesse:\\n' +\r\n    'Modulo Principal > Manutenção > Configurações > Grupo de Empresa';\r\n\r\n  if (\r\n    !globalParameter.empresa ||\r\n    !globalParameter.empresa.grupoEmpresaRaiz.grupoEmpresaConfig ||\r\n    !globalParameter.empresa.grupoEmpresa.grupoEmpresaConfig\r\n  ) {\r\n    result = msg;\r\n  }\r\n\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMCG(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMCG) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o módulo Contábil. Para configurá-la acesse:\\n' +\r\n      'Módulo Contábil > Manutenção > Configurações > Empresa.';\r\n  }\r\n  return result;\r\n}\r\n","import { AxiosInstance } from 'axios';\r\nimport { ArquivoSelecionado, AxiosParam, create, isEmpty, send } from 'summer';\r\nimport { PlanoConta } from '../models/dtos/ger/planoConta';\r\nimport { PlanoContaSubGrupoParam } from '../models/dtos/ger/planoContaSubGrupoParam';\r\nimport { RuleMessage } from '../models/dtos/ger/ruleMessage';\r\nimport { Usuario } from '../models/dtos/ger/usuario';\r\nimport { BancoExtrato } from '../models/dtos/mcg/bancoExtrato';\r\nimport { BancoMCG } from '../models/dtos/mcg/bancoMCG';\r\nimport { BancoPlanoConta } from '../models/dtos/mcg/bancoPlanoConta';\r\nimport { CalculoIrpjCsll } from '../models/dtos/mcg/calculoIrpjCsll';\r\nimport { ComposicaoReceitaDespesasGrafParam } from '../models/dtos/mcg/composicaoReceitaDespesasGrafParam';\r\nimport { ComposicaoReceitaDespesasGrafReturn } from '../models/dtos/mcg/composicaoReceitaDespesasGrafReturn';\r\nimport { ConciliacaoBancaria } from '../models/dtos/mcg/conciliacaoBancaria';\r\nimport { ConciliacaoConta } from '../models/dtos/mcg/conciliacaoConta';\r\nimport { ConfigECFImuneIsenta } from '../models/dtos/mcg/configECFImuneIsenta';\r\nimport { ConfigECFIrpjCsll } from '../models/dtos/mcg/configECFIrpjCsll';\r\nimport { ConfigECFRemuneracaoSocio } from '../models/dtos/mcg/configECFRemuneracaoSocio';\r\nimport { ConsultaTotalLancamento } from '../models/dtos/mcg/consultaTotalLancamento';\r\nimport { ContaFluxoCaixa } from '../models/dtos/mcg/contaFluxoCaixa';\r\nimport { ContaFluxoCaixaIndireto } from '../models/dtos/mcg/contaFluxoCaixaIndireto';\r\nimport { ContaResultado } from '../models/dtos/mcg/contaResultado';\r\nimport { ContaResultadoLimpeza } from '../models/dtos/mcg/contaResultadoLimpeza';\r\nimport { ContaResultadoMCGEncerramento } from '../models/dtos/mcg/contaResultadoMCGEncerramento';\r\nimport { DataEncerradaParam } from '../models/dtos/mcg/dataEncerradaParam';\r\nimport { ECFExportacaoParam } from '../models/dtos/mcg/ecfExportacaoParam';\r\nimport { Erros } from '../models/dtos/mcg/erros';\r\nimport { EvolucaoContaContabilGrafParam } from '../models/dtos/mcg/evolucaoContaContabilGrafParam';\r\nimport { EvolucaoContaContabilGrafReturn } from '../models/dtos/mcg/evolucaoContaContabilGrafReturn';\r\nimport { FCONTContabilCrit } from '../models/dtos/mcg/fContContabilCrit';\r\nimport { FechamentoRestauracaoMCG } from '../models/dtos/mcg/fechamentoRestauracaoMCG';\r\nimport { ImportacaoFiscalContabil, ImportacaoFiscalContabilResult } from '../models/dtos/mcg/importacaoFiscalContabil';\r\nimport { ImportacaoHistorico } from '../models/dtos/mcg/importacaoHistorico';\r\nimport { ImportacaoHistoricoCSVParam } from '../models/dtos/mcg/importacaoHistoricoCSVParam';\r\nimport { ImportacaoLancamentoCSVParam } from '../models/dtos/mcg/importacaoLancamentoCSVParam';\r\nimport { ImportacaoLancamentoMCGRetornoValidacao } from '../models/dtos/mcg/importacaoLancamentoMCGRetornoValidacao';\r\nimport { ImportacaoLancamentoMCGSelecao } from '../models/dtos/mcg/importacaoLancamentoMCGSelecao';\r\nimport { ImportacaoLancamentoPadraoCSVParam } from '../models/dtos/mcg/importacaoLancamentoPadraoCSVParam';\r\nimport { ImportacaoPlanoConta } from '../models/dtos/mcg/importacaoPlanoConta';\r\nimport { ImportacaoPlanoContaCSVParam } from '../models/dtos/mcg/importacaoPlanoContaCSVParam';\r\nimport { ImportacaoSpedContabil } from '../models/dtos/mcg/importacaoSpedContabil';\r\nimport { ImportacaoResult, ImportarMCP } from '../models/dtos/mcg/importarMCP';\r\nimport { InfoConciliacaoBancaria } from '../models/dtos/mcg/infoConciliacaoBancaria';\r\nimport { IntegracaoFolhaParam } from '../models/dtos/mcg/integracaoFolhaParam';\r\nimport { IntegracaoHonorariosParam } from '../models/dtos/mcg/integracaoHonorariosParam';\r\nimport { Lancamento } from '../models/dtos/mcg/lancamento';\r\nimport { LancamentoConciliacao } from '../models/dtos/mcg/lancamentoConciliacao';\r\nimport { LancamentoIntegracaoFolha } from '../models/dtos/mcg/lancamentoIntegracaoFolha';\r\nimport { LancamentoIntegracaoHonorarios } from '../models/dtos/mcg/lancamentoIntegracaoHonorarios';\r\nimport { LancamentoSaldo } from '../models/dtos/mcg/lancamentoSaldo';\r\nimport { LivroFolha } from '../models/dtos/mcg/livroFolha';\r\nimport { LucroPrejuizoClassificacao } from '../models/dtos/mcg/lucroPrejuizoClassificacao';\r\nimport { MANADContabilCrit } from '../models/dtos/mcg/manadContabilCrit';\r\nimport { MutacaoPatrimonioLiquido } from '../models/dtos/mcg/mutacaoPatrimonioLiquido';\r\nimport { QuadroSocietario } from '../models/dtos/mcg/quadroSocietario';\r\nimport { RemoveLancamentoLote } from '../models/dtos/mcg/removeLancamentoLote';\r\nimport { RemoveLancamentoPeriodo } from '../models/dtos/mcg/removeLancamentoPeriodo';\r\nimport { Saldo } from '../models/dtos/mcg/saldo';\r\nimport { SaldoCriteria } from '../models/dtos/mcg/saldoCriteria';\r\nimport { SelecaoSpedContabil } from '../models/dtos/mcg/selecaoSpedContabil';\r\nimport { SomaSaldo } from '../models/dtos/mcg/somaSaldo';\r\nimport { TotalizadorLancamento } from '../models/dtos/mcg/totalizadorLancamento';\r\nimport { TransferenciaLancamentoConta } from '../models/dtos/mcg/transferenciaLancamentoConta';\r\nimport { VerificarErros } from '../models/dtos/mcg/verificarErros';\r\nimport { getArquivoDigitalService } from './ger.service';\r\n\r\nfunction getService(): AxiosInstance {\r\n  return create('/mcg');\r\n}\r\n\r\nexport function gerarLancamentosFolhaPagamento(integracaoFolhaParam: IntegracaoFolhaParam, param: AxiosParam<LancamentoIntegracaoFolha[]>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/gerarLancamentosFolhaPagamento', integracaoFolhaParam), param);\r\n}\r\n\r\nexport function integrarFolhaPagamento(lancamentoIntegracaoFolha: LancamentoIntegracaoFolha[], param: AxiosParam<any>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/integrarFolhaPagamento', lancamentoIntegracaoFolha), param);\r\n}\r\n\r\nexport function integrarMCP(importarParam: ImportarMCP, param: AxiosParam<ImportacaoResult>) {\r\n  send(getService().post<ImportacaoResult>('/importar', importarParam), param);\r\n}\r\n\r\nexport function importarLancamentoCSV(data: ImportacaoLancamentoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('importarDuplicados', String(data.importarDuplicados));\r\n  formDataSend.append('importarLancamentosCardinal', String(data.importarLancamentosCardinal));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarLancamentoPadraoCSV(data: ImportacaoLancamentoPadraoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoPadraoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistoricoCSV(data: ImportacaoHistoricoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('grupoHistoricoDestino.id', String(data.grupoHistoricoDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarHistoricoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarPlanoContaCSV(data: ImportacaoPlanoContaCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idEmpresa', String(data.idEmpresa));\r\n  formDataSend.append('grupoPlanoContaDestino.id', String(data.grupoPlanoContaDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarPlanoContaCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistorico(importacaoHistorico: ImportacaoHistorico, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarHistorico', importacaoHistorico), param);\r\n}\r\n\r\nexport function importarPlanoConta(importacaoPlanoContaParam: ImportacaoPlanoConta, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarPlanoConta', importacaoPlanoContaParam), param);\r\n}\r\n\r\nexport function buscarConfigLivroFolhaMCG(idEmpresa: number, param: AxiosParam<LivroFolha>) {\r\n  send(getService().get<LivroFolha>('/buscarConfigLivroFolhaMCG/' + idEmpresa), param);\r\n}\r\n\r\nexport function integracaoFiscalContabil(importarParam: ImportacaoFiscalContabil, param: AxiosParam<ImportacaoFiscalContabilResult>) {\r\n  send(getService().post<ImportacaoFiscalContabilResult>('/integracaoFiscalContabil', importarParam), param);\r\n}\r\n\r\nexport function encerrarContas(\r\n  contaResultadoEncerramento: ContaResultadoMCGEncerramento,\r\n  force: boolean,\r\n  param: AxiosParam<ContaResultadoMCGEncerramento>\r\n) {\r\n  send(\r\n    getService().post<ContaResultadoMCGEncerramento>('/encerrarContas', { contaResultadoEncerramento, force }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function getDataUltimaContaEncerrada(idGerEmpresa: number, param: AxiosParam<Date>) {\r\n  send(getService().get<Date>('/getDataUltimaContaEncerrada/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function limparEncerramentoContaResultado(contaResultadoLimpeza: ContaResultadoLimpeza, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/limparEncerramentoContaResultadoApos', contaResultadoLimpeza), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFIrpjCsll(configECFIrpjCsll: ConfigECFIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFIrpjCsll', configECFIrpjCsll), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFImuneIsenta(configECFImuneIsenta: ConfigECFImuneIsenta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFImuneIsenta', configECFImuneIsenta), param);\r\n}\r\n\r\nexport function validarRefRemuneracaoSocio(configECFRemuneracaoSocio: ConfigECFRemuneracaoSocio, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarRefRemuneracaoSocio', configECFRemuneracaoSocio), param);\r\n}\r\n\r\nexport function validarQuadroSocietario(configQuadro: QuadroSocietario, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/validarQuadroSocietario', configQuadro), param);\r\n}\r\n\r\nexport function obterLucroPrejuizoClassificacao(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterLucroPrejuizoClassificacao/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function getSaldo(saldo: Saldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldo', saldo), param);\r\n}\r\n\r\nexport function validarDadosSpedECF(ecfExportacaoParam: ECFExportacaoParam, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/validarDadosSpedECF', ecfExportacaoParam), param);\r\n}\r\n\r\nexport function gerarSpedECF(usuario: Usuario, ecfExportacaoParam: ECFExportacaoParam, param?: AxiosParam<string>) {\r\n  send(\r\n    getArquivoDigitalService().post<string>('/gerarSpedECF', { usuario, ecfExportacaoParam }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function recuperarLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<Lancamento[]>) {\r\n  send(getService().post<Lancamento[]>('/recuperarLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function transferirLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/transferirLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function obterBancoPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG>) {\r\n  send(getService().post<BancoMCG>('/obterBancoPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function validarConfigLivroFolha(idGerEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(getService().get<boolean>('/validarConfigLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function changeLivroFolha(idGerEmpresa: number, param: AxiosParam<void>) {\r\n  send(getService().get<void>('/changeLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function fecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<RuleMessage>) {\r\n  send(getService().post<RuleMessage>('/fecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function forceFecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/forceFecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function verificarErros(erros: VerificarErros, param: AxiosParam<Erros[]>) {\r\n  send(getService().post<Erros[]>('/verificarErros', erros), param);\r\n}\r\n\r\nexport function gerarSpedContabil(selecaoSped: SelecaoSpedContabil, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('usuario.id', String(selecaoSped.usuario.id));\r\n\r\n  if (selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n    for (const arquivo of selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n      formDataSend.append('arquivoRTFEscrituracaoSubstituida', arquivo.file, arquivo.nomeArquivo);\r\n    }\r\n  }\r\n\r\n  for (const atributoSelecaoSped in selecaoSped) {\r\n    if (\r\n      atributoSelecaoSped !== 'arquivoRTFEscrituracaoSubstituida' &&\r\n      atributoSelecaoSped !== 'usuario' &&\r\n      selecaoSped[atributoSelecaoSped] !== null\r\n    ) {\r\n      formDataSend.append(atributoSelecaoSped, selecaoSped[atributoSelecaoSped]);\r\n    }\r\n  }\r\n  send(getService().post<string>('/gerarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function salvarLucroPrejuizoClassificacao(\r\n  lucroPrejuizoClassificacao: LucroPrejuizoClassificacao,\r\n  param: AxiosParam<LucroPrejuizoClassificacao>\r\n) {\r\n  send(getService().post<LucroPrejuizoClassificacao>('/salvarLucroPrejuizoClassificacao', lucroPrejuizoClassificacao), param);\r\n}\r\n\r\nexport function consultarMovimentacao(saldoCriteria: SaldoCriteria, param: AxiosParam<LancamentoSaldo[]>) {\r\n  send(getService().post<LancamentoSaldo[]>('/consultarMovimentacao', saldoCriteria), param);\r\n}\r\n\r\nexport function totalizadorLancamento(consulta: ConsultaTotalLancamento, param: AxiosParam<TotalizadorLancamento>) {\r\n  send(getService().post<TotalizadorLancamento>('/totalizadorLancamento', consulta), param);\r\n}\r\n\r\nexport function getSaldoAnterior(saldoCriteria: SaldoCriteria, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoAnterior', saldoCriteria), param);\r\n}\r\n\r\nexport function isDataEncerrada(parametros: DataEncerradaParam, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isDataEncerrada', parametros), param);\r\n}\r\n\r\nexport function abrirContas(parametros: DataEncerradaParam, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/abrirContas', parametros), param);\r\n}\r\n\r\nexport function removeLancamentoPeriodo(parametros: RemoveLancamentoPeriodo, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removeLancamentoPeriodo', parametros), param);\r\n}\r\n\r\nexport function obterContasClassificacaoIndireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixaIndireto[]>) {\r\n  send(getService().get<ContaFluxoCaixaIndireto[]>('/obterContasClassificacaoIndireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoIndireto(contaFluxoCaixaIndireto: ContaFluxoCaixaIndireto, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoIndireto', contaFluxoCaixaIndireto), param);\r\n}\r\n\r\nexport function obterMutacaoPatrimonioLiquido(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterMutacaoPatrimonioLiquido/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarMutacaoPatrimonioLiquido(mutacaoPatrimonioLiquido: MutacaoPatrimonioLiquido, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarMutacaoPatrimonioLiquido', mutacaoPatrimonioLiquido), param);\r\n}\r\n\r\nexport function salvarContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function excluirContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/excluirContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function obterContasClassificacaoDireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixa[]>) {\r\n  send(getService().get<ContaFluxoCaixa[]>('/obterContasClassificacaoDireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoDireto(contaFluxoCaixa: ContaFluxoCaixa, param?: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoDireto', contaFluxoCaixa), param);\r\n}\r\n\r\nexport function findSubGrupo(planoContaSubGrupoParam: PlanoContaSubGrupoParam, param: AxiosParam<any>) {\r\n  send(getService().post<any>('/findSubGrupo', planoContaSubGrupoParam), param);\r\n}\r\n\r\nexport function removerTodosPlanosConta(idGrupoPlanoConta: number, usuario: Usuario, param: AxiosParam<void>) {\r\n  send(\r\n    getService().post<void>('/removerTodosPlanosConta', { idGrupoPlanoConta, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function removeList(listaPlanoConta: PlanoConta[], apagarFilha: boolean, usuario: Usuario, param: AxiosParam<any>) {\r\n  send(\r\n    getService().post<any>('/removeList', { listaPlanoConta, apagarFilha, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function listSubGrupo(planoConta: PlanoConta, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().post<PlanoConta[]>('/listSubGrupo', planoConta), param);\r\n}\r\n\r\nexport function referenciarContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<void>\r\n) {\r\n  send(\r\n    getService().post<void>('/referenciarContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function desvincularContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<any>\r\n) {\r\n  send(\r\n    getService().post<void>('/desvincularContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function existeLancamentoEmContaAnalitica(idPlanoConta: number, idEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(\r\n    getService().post<boolean>('/existeLancamentoEmContaAnalitica', { idPlanoConta, idEmpresa }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function importarLancamentoMCG(data: ImportacaoLancamentoMCGSelecao, param: AxiosParam<ImportacaoLancamentoMCGRetornoValidacao>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('tipoImportacao', String(data.tipoImportacao));\r\n  formDataSend.append('sobescrever', String(data.sobescrever));\r\n  formDataSend.append('versaoSuperiorA2', String(data.versaoSuperiorA2));\r\n  formDataSend.append('arquivo', data.arquivo[0].file, data.arquivo[0].nomeArquivo);\r\n\r\n  if (data.versaoSuperiorA2 === false && !isEmpty(data.dtInicial) && !isEmpty(data.dtFinal)) {\r\n    formDataSend.append('dtInicial', data.dtInicial);\r\n    formDataSend.append('dtFinal', data.dtFinal);\r\n  }\r\n\r\n  send(getService().post<ImportacaoLancamentoMCGRetornoValidacao>('/importarLancamentoMCG', formDataSend), param);\r\n}\r\n\r\nexport function importarSpedContabil(data: ImportacaoSpedContabil, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function gerarManadContabil(data: MANADContabilCrit, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('refInicial', data.refInicial);\r\n  formDataSend.append('refFinal', data.refFinal);\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  if (!isEmpty(data.arquivoSFP)) {\r\n    formDataSend.append('arquivoSFP', data.arquivoSFP[0].file, data.arquivoSFP[0].nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<string>('/gerarManadContabil', formDataSend), param);\r\n}\r\n\r\nexport function evolucaoContaContabilGraf(\r\n  evolucaoContaContabilGrafParam: EvolucaoContaContabilGrafParam,\r\n  param: AxiosParam<EvolucaoContaContabilGrafReturn>\r\n) {\r\n  send(getService().post<EvolucaoContaContabilGrafReturn>('/evolucaoContaContabilGraf', evolucaoContaContabilGrafParam), param);\r\n}\r\n\r\nexport function composicaoReceitaDespesasGraf(\r\n  compReceitaDespesasGrafParam: ComposicaoReceitaDespesasGrafParam,\r\n  param: AxiosParam<ComposicaoReceitaDespesasGrafReturn>\r\n) {\r\n  send(getService().post<ComposicaoReceitaDespesasGrafReturn>('/composicaoReceitaDespesasGraf', compReceitaDespesasGrafParam), param);\r\n}\r\n\r\nexport function gerarFCONTContabil(fContContabilCrit: FCONTContabilCrit, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/gerarFCONTContabil', fContContabilCrit), param);\r\n}\r\n\r\nexport function obterDadosArquivoExtrato(arquivoSelecionado: ArquivoSelecionado, idBancoMCG, param: AxiosParam<BancoExtrato[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idBancoMCG', idBancoMCG);\r\n\r\n  formDataSend.append('arquivoSelecionado', arquivoSelecionado[0].file, arquivoSelecionado[0].nomeArquivo);\r\n\r\n  send(getService().post<BancoExtrato[]>('/obterDadosArquivoExtrato', formDataSend), param);\r\n}\r\n\r\nexport function obterDadosConciliacaoBancariaPeriodo(\r\n  idGrupoPlanoConta,\r\n  idEmpresa,\r\n  idBancoMCG,\r\n  dtInicial,\r\n  dtFinal,\r\n  param: AxiosParam<InfoConciliacaoBancaria>\r\n) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGrupoPlanoConta', String(idGrupoPlanoConta));\r\n  formDataSend.append('idEmpresa', String(idEmpresa));\r\n  formDataSend.append('idBancoMCG', String(idBancoMCG));\r\n  formDataSend.append('dtInicial', String(dtInicial));\r\n  formDataSend.append('dtFinal', String(dtFinal));\r\n\r\n  send(getService().post<InfoConciliacaoBancaria>('/obterDadosConciliacaoBancariaPeriodo', formDataSend), param);\r\n}\r\n\r\nexport function obterBancoListPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG[]>) {\r\n  send(getService().post<BancoMCG[]>('/obterBancoListPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function conciliarLancamentosExtrato(listConciliacaoBancaria: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/conciliarLancamentosExtrato', listConciliacaoBancaria), param);\r\n}\r\n\r\nexport function removerConciliarLancamentosExtrato(listaRemover: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerConciliarLancamentosExtrato', listaRemover), param);\r\n}\r\n\r\nexport function removerLancamentosExtratoBancario(listaRemover: BancoExtrato[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerLancamentosExtratoBancario', listaRemover), param);\r\n}\r\nexport function obterLancamentosSaldoPeriodo(\r\n  idGrupoPlanoConta,\r\n  idEmpresa,\r\n  dtInicial,\r\n  dtFinal,\r\n  historico,\r\n  valor,\r\n  operacaoConsultaValor,\r\n  param: AxiosParam<LancamentoConciliacao[]>\r\n) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGrupoPlanoConta', String(idGrupoPlanoConta));\r\n  formDataSend.append('idEmpresa', String(idEmpresa));\r\n  formDataSend.append('dtInicial', String(dtInicial));\r\n  formDataSend.append('dtFinal', String(dtFinal));\r\n  formDataSend.append('historico', String(historico));\r\n  formDataSend.append('valor', String(valor));\r\n  formDataSend.append('operacaoConsultaValor', String(operacaoConsultaValor));\r\n\r\n  send(getService().post<LancamentoConciliacao[]>('/obterLancamentosSaldoPeriodo', formDataSend), param);\r\n}\r\n\r\nexport function conciliarLancamentosConta(listaConciliacao: ConciliacaoConta[], param: AxiosParam<void>) {\r\n  send(getService().post<void>('/conciliarLancamentosConta', listaConciliacao), param);\r\n}\r\n\r\nexport function removerConciliarLancamentosConta(listaConciliarRemover: ConciliacaoConta[], param: AxiosParam<void>) {\r\n  send(getService().post<void>('/removerConciliarLancamentosConta', listaConciliarRemover), param);\r\n}\r\n\r\nexport function eLalurAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLalurAContas/' + id), param);\r\n}\r\n\r\nexport function eLacsAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLacsAContas/' + id), param);\r\n}\r\n\r\nexport function getSaldoDebito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoDebito', parametros), param);\r\n}\r\n\r\nexport function getSaldoCredito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoCredito', parametros), param);\r\n}\r\n\r\nexport function removerLancamentoLote(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/removerLancamentoLote', parametros), param);\r\n}\r\n\r\nexport function atualizaCalculoIrpjCsll(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/atualizaCalculoIrpjCsll', parametros), param);\r\n}\r\n\r\nexport function buscarLancamentosHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  param: AxiosParam<LancamentoIntegracaoHonorarios[]>\r\n) {\r\n  send(getService().post<LancamentoIntegracaoHonorarios[]>('/buscarLancamentosHonorarios', integracaoHonorariosParam), param);\r\n}\r\n\r\nexport function integrarHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  lancamentos: LancamentoIntegracaoHonorarios[],\r\n  param: AxiosParam<number>\r\n) {\r\n  send(\r\n    getService().post<number>('/integrarHonorarios', { integracaoHonorariosParam, lancamentos }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function isAlteraCalculoIRPJorCSLL(parametros: CalculoIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isAlteraCalculoIRPJorCSLL', parametros), param);\r\n}\r\n\r\nexport function alterarPlanoContaNaturezaConfig(idsPlanoConta: number[], enumPlanoContaNaturezaConta: number, param: AxiosParam<void>) {\r\n  send(\r\n    getService().post<void>('/alterarPlanoContaNaturezaConfig', { idsPlanoConta, enumPlanoContaNaturezaConta }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function prepararContaResultado(idGrupoPlanoConta: number, param: AxiosParam<void>) {\r\n  send(getService().get<void>('/prepararContaResultado/' + idGrupoPlanoConta), param);\r\n}\r\n","export const CARIBBEAN_GREEN = '#00E396';\r\nexport const AZURE_RADIANCE = '#008FFB';\r\nexport const MY_SIN = '#FEB019';\r\nexport const GOVERNOR_BAY = '#3C44B1';\r\nexport const BERMUDA = '#7BDCB5';\r\nexport const MEDIUM_SPRING_GREEN = '#00D084';\r\nexport const RED_ORANGE = '#f44336';\r\nexport const RUBY = '#e91e63';\r\nexport const DARK_ORCHID = '#9c27b0';\r\nexport const PURPLE_HEART = '#673ab7';\r\nexport const FREE_SPEECH_BLUE = '#3f51b5';\r\nexport const DODGER_BLUE = '#2196f3';\r\nexport const DEEP_SKY_BLUE = '#03a9f4';\r\nexport const IRIS_BLUE = '#00bcd4';\r\nexport const GORSE = '#ffeb3b';\r\nexport const AMBER = '#ffc107';\r\nexport const ORANGE_PEEL = '#ff9800';\r\n"],"sourceRoot":""}
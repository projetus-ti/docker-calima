{"version":3,"sources":["models/enumerated/mcg/codigoMotivoSubstituicaoEnum.ts","models/enumerated/mcg/formaEscrituracaoSpedContabilEnum.ts","models/enumerated/mcg/indicadorFinalidadeSpedContabilEnum.ts","models/enumerated/mcg/situacaoEspecialSpedContabilEnum.ts","models/enumerated/mcg/situacaoInicialPeriodoSpedContabilEnum.ts","views/pages/mcg/geracaoSpedEcd/GeracaoSpedECDProcessView.tsx","dependencies/empresaDependency.ts","dependencies/empresaMCGDependency.ts","services/mcg.service.ts","models/dtos/ger/responsavel.ts","views/components/ger/responsavelIS/ResponsavelIS.tsx"],"names":["CODIGO_MOTIVO_SUBSTITUICAO_ENUM_VALUES","label","value","G_LIVRO_DIARIO_COMPLETO","FORMA_ESCRITURACAO_SPED_CONTABIL_ENUM_VALUES","ORIGINAL","SUBSTITUTA","INDICADOR_FINALIDADE_SPED_CONTABIL_ENUM_VALUES","SITUACAO_ESPECIAL_SPED_CONTABIL_ENUM_VALUES","INICIO_PRIMEIRO_DIA_ANO","SITUACAO_INICIAL_PERIODO_SPED_CONTABIL_ENUM_VALUES","GeracaoSpedECDProcessView","props","globalReducer","useSelector","state","empresaMCG","globalParameter","empresa","usuario","formProps","useForm","defaultValues","codigoEmpresa","codigo","toString","dtFinal","parseRefToDate","refFinal","toLocaleDateString","dtInicial","refAtual","gerarRegistroJ150","idGerEmpresa","id","imprimirPlanoContasReferencial","indicadorFinalidadeSpedContabil","signatarioRepresentanteLegal","situacaoInicialPeriodoSpedContabil","tipoArquivo","tipoSituacaoEspecial","mode","_useState","useState","_useState2","Object","slicedToArray","isEnabledRepresentante","setIsEnabledRepresentante","_useState3","_useState4","isEnabledSubstituta","setIsEnabledSubstituta","propToolTip","message","placement","useEffect","buscarConfigLivroFolhaMCG","errorFunction","mensagem","showToast","ERROR","thenFunction","result","setTimeout","setValue","diarioGeral","react_default","a","createElement","summer_esm","title","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMCG","wikiId","hidden","isPrependLabel","placeholder","inputDropDownProps","optionsProvider","type","InputType","DROP_DOWN","Row","Col","objectSpread2","validation","required","DATE","disabled","selectProps","isClearable","tooltipProps","onChange","getValues","unregister","className","xs","maxLength","acceptedTypes","isMultiple","limitSizeBytes","SIZE_ONE_HUNDRED_BYTES","propImageName","maxFiles","max","NUMBER","CustomInput","name","innerRef","register","withTooltip","ResponsavelIS","inputSearchProps","bsbsSize","isMulti","handleSubmit","data","erros","_formProps$getValues","toDate","push","validateExtras","length","params","AlertType","WARNING","alertManager","emit","ACTION_EVENTS","SHOW","gerarSpedContabil","async","callExport","handleClose","goBack","dispatchClose","history","onClose","__webpack_require__","d","__webpack_exports__","getService","create","gerarLancamentosFolhaPagamento","integracaoFolhaParam","param","send","post","integrarFolhaPagamento","lancamentoIntegracaoFolha","integrarMCP","importarParam","importarLancamentoCSV","formDataSend","FormData","append","String","importarDuplicados","importarLancamentosCardinal","_step","_iterator","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__","arquivos","s","n","done","arquivo","file","nomeArquivo","err","e","f","importarLancamentoPadraoCSV","_step2","_iterator2","importarHistoricoCSV","grupoHistoricoDestino","_step3","_iterator3","importarPlanoContaCSV","idEmpresa","grupoPlanoContaDestino","_step4","_iterator4","importarHistorico","importacaoHistorico","importarPlanoConta","importacaoPlanoContaParam","get","integracaoFiscalContabil","encerrarContas","contaResultadoEncerramento","force","getDataUltimaContaEncerrada","limparEncerramentoContaResultado","contaResultadoLimpeza","validarReferenciaSPEDECFIrpjCsll","configECFIrpjCsll","validarReferenciaSPEDECFImuneIsenta","configECFImuneIsenta","validarRefRemuneracaoSocio","configECFRemuneracaoSocio","validarQuadroSocietario","configQuadro","obterLucroPrejuizoClassificacao","idGrupoPlanoConta","getSaldo","saldo","validarDadosSpedECF","ecfExportacaoParam","gerarSpedECF","getArquivoDigitalService","recuperarLancamentoConta","transferenciaLancamentoConta","transferirLancamentoConta","obterBancoPlanoConta","bancoPlanoContaDTO","validarConfigLivroFolha","changeLivroFolha","fecharRestaurar","fechamentoRestauracao","forceFecharRestaurar","verificarErros","selecaoSped","arquivoRTFEscrituracaoSubstituida","_step5","_iterator5","atributoSelecaoSped","salvarLucroPrejuizoClassificacao","lucroPrejuizoClassificacao","consultarMovimentacao","saldoCriteria","totalizadorLancamento","consulta","getSaldoAnterior","isDataEncerrada","parametros","abrirContas","removeLancamentoPeriodo","obterContasClassificacaoIndireto","salvarClassificacaoIndireto","contaFluxoCaixaIndireto","obterMutacaoPatrimonioLiquido","salvarMutacaoPatrimonioLiquido","mutacaoPatrimonioLiquido","salvarContaResultado","contaResultado","excluirContaResultado","obterContasClassificacaoDireto","salvarClassificacaoDireto","contaFluxoCaixa","findSubGrupo","planoContaSubGrupoParam","removerTodosPlanosConta","removeList","listaPlanoConta","apagarFilha","listSubGrupo","planoConta","referenciarContas","idsPlanoConta","idPlanoContaReferencial","idPlanoContaReferencialECF","desvincularContas","existeLancamentoEmContaAnalitica","idPlanoConta","importarLancamentoMCG","tipoImportacao","sobescrever","versaoSuperiorA2","isEmpty","importarSpedContabil","_step6","_iterator6","gerarManadContabil","refInicial","arquivoSFP","evolucaoContaContabilGraf","evolucaoContaContabilGrafParam","composicaoReceitaDespesasGraf","compReceitaDespesasGrafParam","gerarFCONTContabil","fContContabilCrit","obterDadosArquivoExtrato","arquivoSelecionado","idBancoMCG","obterDadosConciliacaoBancariaPeriodo","obterBancoListPlanoConta","conciliarLancamentosExtrato","listConciliacaoBancaria","removerConciliarLancamentosExtrato","listaRemover","removerLancamentosExtratoBancario","eLalurAContas","eLacsAContas","getSaldoDebito","getSaldoCredito","removerLancamentoLote","atualizaCalculoIrpjCsll","buscarLancamentosHonorarios","integracaoHonorariosParam","integrarHonorarios","lancamentos","isAlteraCalculoIRPJorCSLL","CLASS_NAME","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","assign","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","searchViewId","INPUT_SEARCH"],"mappings":"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","file":"static/js/251.4f93b4cb.chunk.js","sourcesContent":["export const MUDANCAS_SALDOS_CONTAS_POR_LANCAMENTOS_EXPONTANEOS = {\r\n  label: 'Mudanças de saldos das contas que não podem ser realizadas por meio de lançamentos expontâneos',\r\n  value: '001',\r\n};\r\nexport const ALTERACAO_ASSINATURA = { label: 'Alteração de assinatura', value: '002' };\r\nexport const ALTERACAO_DEMONSTRACAO_CONTABIL = { label: 'Alteracao de demonstrações contábeis', value: '003' };\r\nexport const ALTERACAO_FORMA_ESCRITURACAO_CONTABIL = { label: 'Alteração da forma de escrituração contábil', value: '004' };\r\nexport const ALTERACAO_NUMERO_LIVRO = { label: 'Alteração do número do livro', value: '005' };\r\nexport const OUTROS = { label: 'Outros', value: '099' };\r\n\r\nexport const CODIGO_MOTIVO_SUBSTITUICAO_ENUM_VALUES = [\r\n  MUDANCAS_SALDOS_CONTAS_POR_LANCAMENTOS_EXPONTANEOS,\r\n  ALTERACAO_ASSINATURA,\r\n  ALTERACAO_DEMONSTRACAO_CONTABIL,\r\n  ALTERACAO_FORMA_ESCRITURACAO_CONTABIL,\r\n  ALTERACAO_NUMERO_LIVRO,\r\n  OUTROS,\r\n];\r\n","export const G_LIVRO_DIARIO_COMPLETO = { label: 'G - Livro Diário (completo sem escrituração auxiliar)', value: 'G_livro_diario_completo' };\r\nexport const R_LIVRO_DIARIO_RESUMIDO = {\r\n  label: 'R - Livro Diário com Escrituração Resumida (com escrituração auxiliar)',\r\n  value: 'R_livro_diario_resumido',\r\n};\r\nexport const A_LIVRO_DIARIO_AUXILIAR_RESUMIDO = {\r\n  label: 'A - Livro Diário Auxiliar ao Diário com Escrituração Resumida',\r\n  value: 'A_livro_diario_auxiliar_resumido',\r\n};\r\nexport const B_LIVRO_BALANCETES_DIARIOS_BALANCOS = { label: 'B - Livro Balancetes Diários e Balanços', value: 'B_livro_balancetes_diarios_balancos' };\r\nexport const Z_RAZAO_AUXILIAR = { label: 'Z - Razão Auxiliar', value: 'Z_razao_auxiliar' };\r\n\r\nexport const FORMA_ESCRITURACAO_SPED_CONTABIL_ENUM_VALUES = [\r\n  G_LIVRO_DIARIO_COMPLETO,\r\n  R_LIVRO_DIARIO_RESUMIDO,\r\n  A_LIVRO_DIARIO_AUXILIAR_RESUMIDO,\r\n  B_LIVRO_BALANCETES_DIARIOS_BALANCOS,\r\n  Z_RAZAO_AUXILIAR,\r\n];\r\n","export const ORIGINAL = { label: 'Original', value: 0 };\r\nexport const SUBSTITUTA = { label: 'Substituta', value: 1 };\r\n\r\nexport const INDICADOR_FINALIDADE_SPED_CONTABIL_ENUM_VALUES = [ORIGINAL, SUBSTITUTA];\r\n","export const NORMAL = { label: 'Normal', value: 99 };\r\nexport const ABERTURA = { label: 'Abertura', value: 0 };\r\nexport const CISAO = { label: 'Cisão', value: 1 };\r\nexport const FUSAO = { label: 'Fusão', value: 2 };\r\nexport const INCORPORACAO = { label: 'Incorporação', value: 3 };\r\nexport const EXTINCAO = { label: 'Extinção', value: 4 };\r\n\r\nexport const SITUACAO_ESPECIAL_SPED_CONTABIL_ENUM_VALUES = [NORMAL, ABERTURA, CISAO, FUSAO, INCORPORACAO, EXTINCAO];\r\n","export const INICIO_PRIMEIRO_DIA_ANO = { label: 'Início no primeiro dia do ano', value: 0 };\r\nexport const ABERTURA = { label: 'Abertura', value: 1 };\r\nexport const CISAO_FUSAO = { label: 'Resultante de cisão/fusão ou remanescente de cisão ou realizou Incorporação', value: 2 };\r\nexport const FCONT = { label: 'Início da obrigatoriedade da entrega da FCONT no curso do ano-calendário', value: 3 };\r\n\r\nexport const SITUACAO_INICIAL_PERIODO_SPED_CONTABIL_ENUM_VALUES = [INICIO_PRIMEIRO_DIA_ANO, ABERTURA, CISAO_FUSAO, FCONT];\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  Box,\r\n  dispatchClose,\r\n  EditViewProps,\r\n  ErroList,\r\n  ERROR,\r\n  FileInputPreview,\r\n  InputGroupInline,\r\n  InputTooltipProps,\r\n  InputType,\r\n  parseRefToDate,\r\n  ProcessBar,\r\n  showToast,\r\n  SIZE_ONE_HUNDRED_BYTES,\r\n  toDate,\r\n  WindowComponent,\r\n  withTooltip,\r\n} from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../dependencies/empresaMCGDependency';\r\nimport { LivroFolha } from '../../../../models/dtos/mcg/livroFolha';\r\nimport { SelecaoSpedContabil } from '../../../../models/dtos/mcg/selecaoSpedContabil';\r\nimport { CODIGO_MOTIVO_SUBSTITUICAO_ENUM_VALUES } from '../../../../models/enumerated/mcg/codigoMotivoSubstituicaoEnum';\r\nimport {\r\n  FORMA_ESCRITURACAO_SPED_CONTABIL_ENUM_VALUES,\r\n  G_LIVRO_DIARIO_COMPLETO,\r\n} from '../../../../models/enumerated/mcg/formaEscrituracaoSpedContabilEnum';\r\nimport {\r\n  INDICADOR_FINALIDADE_SPED_CONTABIL_ENUM_VALUES,\r\n  ORIGINAL,\r\n  SUBSTITUTA,\r\n} from '../../../../models/enumerated/mcg/indicadorFinalidadeSpedContabilEnum';\r\nimport { SITUACAO_ESPECIAL_SPED_CONTABIL_ENUM_VALUES } from '../../../../models/enumerated/mcg/situacaoEspecialSpedContabilEnum';\r\nimport {\r\n  INICIO_PRIMEIRO_DIA_ANO,\r\n  SITUACAO_INICIAL_PERIODO_SPED_CONTABIL_ENUM_VALUES,\r\n} from '../../../../models/enumerated/mcg/situacaoInicialPeriodoSpedContabilEnum';\r\nimport { buscarConfigLivroFolhaMCG, gerarSpedContabil } from '../../../../services/mcg.service';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport ResponsavelIS from '../../../components/ger/responsavelIS/ResponsavelIS';\r\n\r\ninterface GeracaoSpedECDProcessViewProps extends EditViewProps<SelecaoSpedContabil> {}\r\n\r\nconst GeracaoSpedECDProcessView: FC<GeracaoSpedECDProcessViewProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const empresaMCG = globalReducer.globalParameter.empresaMCG;\r\n  const empresa = globalReducer.globalParameter.empresa;\r\n  const usuario = globalReducer.globalParameter.usuario;\r\n  const formProps = useForm<SelecaoSpedContabil>({\r\n    defaultValues: {\r\n      codigoEmpresa: empresa.codigo.toString(),\r\n      dtFinal: parseRefToDate(empresaMCG.refFinal, 0).toLocaleDateString(),\r\n      dtInicial: parseRefToDate(empresaMCG.refAtual, 1).toLocaleDateString(),\r\n      gerarRegistroJ150: true,\r\n      idGerEmpresa: empresa.id,\r\n      imprimirPlanoContasReferencial: true,\r\n      indicadorFinalidadeSpedContabil: ORIGINAL.value,\r\n      signatarioRepresentanteLegal: true,\r\n      situacaoInicialPeriodoSpedContabil: INICIO_PRIMEIRO_DIA_ANO.value,\r\n      tipoArquivo: G_LIVRO_DIARIO_COMPLETO.value,\r\n      tipoSituacaoEspecial: null,\r\n      usuario,\r\n    },\r\n    mode: 'onBlur',\r\n  });\r\n  const [isEnabledRepresentante, setIsEnabledRepresentante] = useState(true);\r\n  const [isEnabledSubstituta, setIsEnabledSubstituta] = useState(true);\r\n\r\n  const validateExtras = () => {\r\n    const erros = [];\r\n    const { dtInicial, dtFinal } = formProps.getValues();\r\n\r\n    if (toDate(dtFinal) < toDate(dtInicial)) {\r\n      erros.push('A Data Final não pode ser menor que a Data Inicial');\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  const propToolTip = (message: string): InputTooltipProps => {\r\n    return {\r\n      message,\r\n      placement: 'auto',\r\n    };\r\n  };\r\n\r\n  const enabledRepresentante = () => {\r\n    if (formProps.getValues().signatarioRepresentanteLegal) {\r\n      setIsEnabledRepresentante(true);\r\n      formProps.unregister(['responsavel']);\r\n    } else {\r\n      setIsEnabledRepresentante(false);\r\n    }\r\n  };\r\n\r\n  const enabledSubstituta = () => {\r\n    if (formProps.getValues().indicadorFinalidadeSpedContabil === SUBSTITUTA.value) {\r\n      setIsEnabledSubstituta(false);\r\n    } else {\r\n      setIsEnabledSubstituta(true);\r\n      formProps.unregister(['codigoMotivoSubstituicao']);\r\n      formProps.unregister(['hashEscrituracaoSubstituida']);\r\n      formProps.unregister(['nireEscrituracaoSubstituida']);\r\n      formProps.unregister(['arquivoRTFEscrituracaoSubstituida']);\r\n    }\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      const {\r\n        empresa: { id },\r\n      } = globalReducer.globalParameter;\r\n\r\n      buscarConfigLivroFolhaMCG(id, {\r\n        errorFunction: mensagem => {\r\n          showToast(mensagem, ERROR);\r\n        },\r\n        thenFunction: (result: LivroFolha) => {\r\n          setTimeout(() => {\r\n            formProps.setValue('nroOrdem', result.diarioGeral, true);\r\n          }, 700);\r\n        },\r\n      });\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const handleImport = (data: SelecaoSpedContabil) => {\r\n    const erros = validateExtras();\r\n    if (erros.length > 0) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.WARNING,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      callExport(data);\r\n    }\r\n  };\r\n\r\n  function callExport(data: SelecaoSpedContabil): void {\r\n    gerarSpedContabil(data, {\r\n      errorFunction: mensagem => {\r\n        showToast(mensagem, ERROR);\r\n      },\r\n      thenFunction: (result: any) => {\r\n        return { async: true };\r\n      },\r\n    });\r\n  }\r\n\r\n  const onClose = (goBack: boolean = true) => {\r\n    dispatchClose(props, props.history, goBack);\r\n  };\r\n\r\n  const handleCancel = () => onClose();\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Geração SPED ECD - Escrituração Contábil Fiscal\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMCG(globalReducer.globalParameter)]}\r\n      wikiId={209}\r\n    >\r\n      <InputGroupInline id=\"idGerEmpresa\" formProps={formProps} hidden={true} />\r\n      <InputGroupInline id=\"codigoEmpresa\" formProps={formProps} hidden={true} />\r\n      <InputGroupInline id=\"usuario.id\" formProps={formProps} hidden={true} />\r\n      <InputGroupInline\r\n        formProps={formProps}\r\n        id=\"tipoSituacaoEspecial\"\r\n        isPrependLabel={true}\r\n        label=\"Tipo Situação Especial\"\r\n        placeholder=\"Selecione o Tipo Situação Especial.\"\r\n        inputDropDownProps={{\r\n          optionsProvider: SITUACAO_ESPECIAL_SPED_CONTABIL_ENUM_VALUES,\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"dtInicial\"\r\n            label=\"Data Inicial\"\r\n            isPrependLabel={true}\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            type={InputType.DATE}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"dtFinal\"\r\n            label=\"Data Final\"\r\n            isPrependLabel={true}\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            type={InputType.DATE}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { required: false } }}\r\n            id=\"tipoArquivo\"\r\n            isPrependLabel={true}\r\n            disabled={true}\r\n            label=\"Arquivo\"\r\n            placeholder=\"Selecione um Arquivo.\"\r\n            inputDropDownProps={{\r\n              optionsProvider: FORMA_ESCRITURACAO_SPED_CONTABIL_ENUM_VALUES,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            id=\"situacaoInicialPeriodoSpedContabil\"\r\n            isPrependLabel={true}\r\n            label=\"Indicador de Situação\"\r\n            placeholder=\"Selecione a Situação Especial.\"\r\n            tooltipProps={{ message: 'Indicador de situação no início do período' }}\r\n            inputDropDownProps={{\r\n              optionsProvider: SITUACAO_INICIAL_PERIODO_SPED_CONTABIL_ENUM_VALUES,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={formProps}\r\n            id=\"indicadorFinalidadeSpedContabil\"\r\n            isPrependLabel={true}\r\n            onChange={enabledSubstituta}\r\n            label=\"Indicador de Finalidade\"\r\n            placeholder=\"Selecione o Motivo da Substituicao.\"\r\n            tooltipProps={{ message: 'Indicador Finalidade da Escrituração' }}\r\n            inputDropDownProps={{\r\n              optionsProvider: INDICADOR_FINALIDADE_SPED_CONTABIL_ENUM_VALUES,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      {!isEnabledSubstituta && (\r\n        <Box title={'Configurações de Finalidade Substituta'}>\r\n          <Row>\r\n            <Col className=\"mt-4\" xs={6}>\r\n              <Row>\r\n                <Col>\r\n                  <InputGroupInline\r\n                    formProps={{ ...formProps, validation: { required: true } }}\r\n                    id=\"codigoMotivoSubstituicao\"\r\n                    isPrependLabel={true}\r\n                    label=\"Motivo da Substituicao\"\r\n                    disabled={isEnabledSubstituta}\r\n                    tooltipProps={{ message: 'O motivo a ser adotado deve ser aquele cujo motivo é o preponderante na substituição da ECD' }}\r\n                    placeholder=\"Selecione o Motivo da Substituicao.\"\r\n                    inputDropDownProps={{\r\n                      optionsProvider: CODIGO_MOTIVO_SUBSTITUICAO_ENUM_VALUES,\r\n                    }}\r\n                    type={InputType.DROP_DOWN}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <InputGroupInline\r\n                    id=\"hashEscrituracaoSubstituida\"\r\n                    isPrependLabel={true}\r\n                    formProps={{ ...formProps, validation: { maxLength: 40, required: true } }}\r\n                    disabled={isEnabledSubstituta}\r\n                    label=\"Hash da Escrituração Substituída\"\r\n                    placeholder=\"Informe a Hash da Escrituração Substituída\"\r\n                    tooltipProps={{ message: 'Hash da Escrituração Substituída' }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <InputGroupInline\r\n                    id=\"nireEscrituracaoSubstituida\"\r\n                    isPrependLabel={true}\r\n                    formProps={{ ...formProps, validation: { maxLength: 11 } }}\r\n                    disabled={isEnabledSubstituta}\r\n                    label=\"Nire da Escrituração Substituída\"\r\n                    placeholder=\"Informe a Nire da Escrituração Substituída\"\r\n                    tooltipProps={{ message: 'Nire da Escrituração Substituída' }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col xs={6}>\r\n              <Box title={'Arquivo da Escrituração Substituída'}>\r\n                <FileInputPreview\r\n                  acceptedTypes=\".rtf\"\r\n                  formProps={{ ...formProps, validation: { required: true } }}\r\n                  isMultiple={true}\r\n                  limitSizeBytes={SIZE_ONE_HUNDRED_BYTES}\r\n                  propImageName=\"arquivoRTFEscrituracaoSubstituida\"\r\n                  maxFiles={1}\r\n                />\r\n              </Box>\r\n            </Col>\r\n          </Row>\r\n        </Box>\r\n      )}\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"nroOrdem\"\r\n            label=\"Nº de Ordem\"\r\n            isPrependLabel={true}\r\n            placeholder=\"digite o Nº de Ordem\"\r\n            formProps={{ ...formProps, validation: { max: 2147483647 } }}\r\n            type={InputType.NUMBER}\r\n          />\r\n        </Col>\r\n        <Col className=\"mt-2\">\r\n          <CustomInput type=\"switch\" label=\"Armazenar Nº de Ordem\" name=\"armazenarNumOrdem\" id=\"armazenarNumOrdem\" innerRef={formProps.register} />\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            label=\"Gerar Plano de Contas Referencial\"\r\n            name=\"imprimirPlanoContasReferencial\"\r\n            id=\"idimprimirPlanoContasReferencial\"\r\n            innerRef={formProps.register}\r\n          />\r\n          {withTooltip(\r\n            propToolTip(\r\n              'Apenas para Sped Contábil anterior a 2014. A partir da versão 3.X e alterações posteriores do PVA do Sped Contábil, não haverá o plano de contas referencial da RFB.'\r\n            ),\r\n            'imprimirPlanoContasReferencial'\r\n          )}\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            label=\"Gerar Registro J150 (Demonstração do Resultado do Exercício)\"\r\n            name=\"gerarRegistroJ150\"\r\n            id=\"idgerarRegistroJ150\"\r\n            innerRef={formProps.register}\r\n          />\r\n          {withTooltip(propToolTip('Gera o registro J150 - Demonstração do Resultado do Exercício caso marcado.'), 'gerarRegistroJ150')}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"mt-2\">\r\n          <CustomInput\r\n            type=\"switch\"\r\n            label=\"Signatário é o Representante Legal da Empresa Junto a RFB\"\r\n            name=\"signatarioRepresentanteLegal\"\r\n            id=\"idsignatarioRepresentanteLegal\"\r\n            onChange={enabledRepresentante}\r\n            innerRef={formProps.register}\r\n          />\r\n          {withTooltip(propToolTip('O Signatário é o Representante Legal da Empresa Junto a RFB.'), 'signatarioRepresentanteLegal')}\r\n        </Col>\r\n        {!isEnabledRepresentante && (\r\n          <Col>\r\n            <ResponsavelIS\r\n              id=\"responsavel\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              label=\"Representante Legal\"\r\n              placeholder=\"Informe o Representante Legal\"\r\n              disabled={isEnabledRepresentante}\r\n              isPrependLabel={true}\r\n              inputSearchProps={{ bsbsSize: 'xl', selectProps: { isMulti: false } }}\r\n            />\r\n          </Col>\r\n        )}\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <ProcessBar handleSubmit={formProps.handleSubmit(handleImport)} handleClose={handleCancel} />\r\n        </Col>\r\n      </Row>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default GeracaoSpedECDProcessView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMCG(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMCG) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o módulo Contábil. Para configurá-la acesse:\\n' +\r\n      'Módulo Contábil > Manutenção > Configurações > Empresa.';\r\n  }\r\n  return result;\r\n}\r\n","import { AxiosInstance } from 'axios';\r\nimport { ArquivoSelecionado, AxiosParam, create, isEmpty, send } from 'summer';\r\nimport { PlanoConta } from '../models/dtos/ger/planoConta';\r\nimport { PlanoContaSubGrupoParam } from '../models/dtos/ger/planoContaSubGrupoParam';\r\nimport { RuleMessage } from '../models/dtos/ger/ruleMessage';\r\nimport { Usuario } from '../models/dtos/ger/usuario';\r\nimport { BancoExtrato } from '../models/dtos/mcg/bancoExtrato';\r\nimport { BancoMCG } from '../models/dtos/mcg/bancoMCG';\r\nimport { BancoPlanoConta } from '../models/dtos/mcg/bancoPlanoConta';\r\nimport { CalculoIrpjCsll } from '../models/dtos/mcg/calculoIrpjCsll';\r\nimport { ComposicaoReceitaDespesasGrafParam } from '../models/dtos/mcg/composicaoReceitaDespesasGrafParam';\r\nimport { ComposicaoReceitaDespesasGrafReturn } from '../models/dtos/mcg/composicaoReceitaDespesasGrafReturn';\r\nimport { ConciliacaoBancaria } from '../models/dtos/mcg/conciliacaoBancaria';\r\nimport { ConfigECFImuneIsenta } from '../models/dtos/mcg/configECFImuneIsenta';\r\nimport { ConfigECFIrpjCsll } from '../models/dtos/mcg/configECFIrpjCsll';\r\nimport { ConfigECFRemuneracaoSocio } from '../models/dtos/mcg/configECFRemuneracaoSocio';\r\nimport { ConsultaTotalLancamento } from '../models/dtos/mcg/consultaTotalLancamento';\r\nimport { ContaFluxoCaixa } from '../models/dtos/mcg/contaFluxoCaixa';\r\nimport { ContaFluxoCaixaIndireto } from '../models/dtos/mcg/contaFluxoCaixaIndireto';\r\nimport { ContaResultado } from '../models/dtos/mcg/contaResultado';\r\nimport { ContaResultadoLimpeza } from '../models/dtos/mcg/contaResultadoLimpeza';\r\nimport { ContaResultadoMCGEncerramento } from '../models/dtos/mcg/contaResultadoMCGEncerramento';\r\nimport { DataEncerradaParam } from '../models/dtos/mcg/dataEncerradaParam';\r\nimport { ECFExportacaoParam } from '../models/dtos/mcg/ecfExportacaoParam';\r\nimport { Erros } from '../models/dtos/mcg/erros';\r\nimport { EvolucaoContaContabilGrafParam } from '../models/dtos/mcg/evolucaoContaContabilGrafParam';\r\nimport { EvolucaoContaContabilGrafReturn } from '../models/dtos/mcg/evolucaoContaContabilGrafReturn';\r\nimport { FCONTContabilCrit } from '../models/dtos/mcg/fContContabilCrit';\r\nimport { FechamentoRestauracaoMCG } from '../models/dtos/mcg/fechamentoRestauracaoMCG';\r\nimport { ImportacaoFiscalContabil, ImportacaoFiscalContabilResult } from '../models/dtos/mcg/importacaoFiscalContabil';\r\nimport { ImportacaoHistorico } from '../models/dtos/mcg/importacaoHistorico';\r\nimport { ImportacaoHistoricoCSVParam } from '../models/dtos/mcg/importacaoHistoricoCSVParam';\r\nimport { ImportacaoLancamentoCSVParam } from '../models/dtos/mcg/importacaoLancamentoCSVParam';\r\nimport { ImportacaoLancamentoMCGRetornoValidacao } from '../models/dtos/mcg/importacaoLancamentoMCGRetornoValidacao';\r\nimport { ImportacaoLancamentoMCGSelecao } from '../models/dtos/mcg/importacaoLancamentoMCGSelecao';\r\nimport { ImportacaoLancamentoPadraoCSVParam } from '../models/dtos/mcg/importacaoLancamentoPadraoCSVParam';\r\nimport { ImportacaoPlanoConta } from '../models/dtos/mcg/importacaoPlanoConta';\r\nimport { ImportacaoPlanoContaCSVParam } from '../models/dtos/mcg/importacaoPlanoContaCSVParam';\r\nimport { ImportacaoSpedContabil } from '../models/dtos/mcg/importacaoSpedContabil';\r\nimport { ImportacaoResult, ImportarMCP } from '../models/dtos/mcg/importarMCP';\r\nimport { InfoConciliacaoBancaria } from '../models/dtos/mcg/infoConciliacaoBancaria';\r\nimport { IntegracaoFolhaParam } from '../models/dtos/mcg/integracaoFolhaParam';\r\nimport { IntegracaoHonorariosParam } from '../models/dtos/mcg/integracaoHonorariosParam';\r\nimport { Lancamento } from '../models/dtos/mcg/lancamento';\r\nimport { LancamentoIntegracaoFolha } from '../models/dtos/mcg/lancamentoIntegracaoFolha';\r\nimport { LancamentoIntegracaoHonorarios } from '../models/dtos/mcg/lancamentoIntegracaoHonorarios';\r\nimport { LancamentoSaldo } from '../models/dtos/mcg/lancamentoSaldo';\r\nimport { LivroFolha } from '../models/dtos/mcg/livroFolha';\r\nimport { LucroPrejuizoClassificacao } from '../models/dtos/mcg/lucroPrejuizoClassificacao';\r\nimport { MANADContabilCrit } from '../models/dtos/mcg/manadContabilCrit';\r\nimport { MutacaoPatrimonioLiquido } from '../models/dtos/mcg/mutacaoPatrimonioLiquido';\r\nimport { QuadroSocietario } from '../models/dtos/mcg/quadroSocietario';\r\nimport { RemoveLancamentoLote } from '../models/dtos/mcg/removeLancamentoLote';\r\nimport { RemoveLancamentoPeriodo } from '../models/dtos/mcg/removeLancamentoPeriodo';\r\nimport { Saldo } from '../models/dtos/mcg/saldo';\r\nimport { SaldoCriteria } from '../models/dtos/mcg/saldoCriteria';\r\nimport { SelecaoSpedContabil } from '../models/dtos/mcg/selecaoSpedContabil';\r\nimport { SomaSaldo } from '../models/dtos/mcg/somaSaldo';\r\nimport { TotalizadorLancamento } from '../models/dtos/mcg/totalizadorLancamento';\r\nimport { TransferenciaLancamentoConta } from '../models/dtos/mcg/transferenciaLancamentoConta';\r\nimport { VerificarErros } from '../models/dtos/mcg/verificarErros';\r\nimport { getArquivoDigitalService } from './ger.service';\r\n\r\nfunction getService(): AxiosInstance {\r\n  return create('/mcg');\r\n}\r\n\r\nexport function gerarLancamentosFolhaPagamento(integracaoFolhaParam: IntegracaoFolhaParam, param: AxiosParam<LancamentoIntegracaoFolha[]>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/gerarLancamentosFolhaPagamento', integracaoFolhaParam), param);\r\n}\r\n\r\nexport function integrarFolhaPagamento(lancamentoIntegracaoFolha: LancamentoIntegracaoFolha[], param: AxiosParam<any>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/integrarFolhaPagamento', lancamentoIntegracaoFolha), param);\r\n}\r\n\r\nexport function integrarMCP(importarParam: ImportarMCP, param: AxiosParam<ImportacaoResult>) {\r\n  send(getService().post<ImportacaoResult>('/importar', importarParam), param);\r\n}\r\n\r\nexport function importarLancamentoCSV(data: ImportacaoLancamentoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('importarDuplicados', String(data.importarDuplicados));\r\n  formDataSend.append('importarLancamentosCardinal', String(data.importarLancamentosCardinal));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarLancamentoPadraoCSV(data: ImportacaoLancamentoPadraoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoPadraoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistoricoCSV(data: ImportacaoHistoricoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('grupoHistoricoDestino.id', String(data.grupoHistoricoDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarHistoricoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarPlanoContaCSV(data: ImportacaoPlanoContaCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idEmpresa', String(data.idEmpresa));\r\n  formDataSend.append('grupoPlanoContaDestino.id', String(data.grupoPlanoContaDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarPlanoContaCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistorico(importacaoHistorico: ImportacaoHistorico, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarHistorico', importacaoHistorico), param);\r\n}\r\n\r\nexport function importarPlanoConta(importacaoPlanoContaParam: ImportacaoPlanoConta, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarPlanoConta', importacaoPlanoContaParam), param);\r\n}\r\n\r\nexport function buscarConfigLivroFolhaMCG(idEmpresa: number, param: AxiosParam<LivroFolha>) {\r\n  send(getService().get<LivroFolha>('/buscarConfigLivroFolhaMCG/' + idEmpresa), param);\r\n}\r\n\r\nexport function integracaoFiscalContabil(importarParam: ImportacaoFiscalContabil, param: AxiosParam<ImportacaoFiscalContabilResult>) {\r\n  send(getService().post<ImportacaoFiscalContabilResult>('/integracaoFiscalContabil', importarParam), param);\r\n}\r\n\r\nexport function encerrarContas(\r\n  contaResultadoEncerramento: ContaResultadoMCGEncerramento,\r\n  force: boolean,\r\n  param: AxiosParam<ContaResultadoMCGEncerramento>\r\n) {\r\n  send(\r\n    getService().post<ContaResultadoMCGEncerramento>('/encerrarContas', { contaResultadoEncerramento, force }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function getDataUltimaContaEncerrada(idGerEmpresa: number, param: AxiosParam<Date>) {\r\n  send(getService().get<Date>('/getDataUltimaContaEncerrada/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function limparEncerramentoContaResultado(contaResultadoLimpeza: ContaResultadoLimpeza, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/limparEncerramentoContaResultadoApos', contaResultadoLimpeza), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFIrpjCsll(configECFIrpjCsll: ConfigECFIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFIrpjCsll', configECFIrpjCsll), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFImuneIsenta(configECFImuneIsenta: ConfigECFImuneIsenta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFImuneIsenta', configECFImuneIsenta), param);\r\n}\r\n\r\nexport function validarRefRemuneracaoSocio(configECFRemuneracaoSocio: ConfigECFRemuneracaoSocio, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarRefRemuneracaoSocio', configECFRemuneracaoSocio), param);\r\n}\r\n\r\nexport function validarQuadroSocietario(configQuadro: QuadroSocietario, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/validarQuadroSocietario', configQuadro), param);\r\n}\r\n\r\nexport function obterLucroPrejuizoClassificacao(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterLucroPrejuizoClassificacao/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function getSaldo(saldo: Saldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldo', saldo), param);\r\n}\r\n\r\nexport function validarDadosSpedECF(ecfExportacaoParam: ECFExportacaoParam, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/validarDadosSpedECF', ecfExportacaoParam), param);\r\n}\r\n\r\nexport function gerarSpedECF(usuario: Usuario, ecfExportacaoParam: ECFExportacaoParam, param?: AxiosParam<string>) {\r\n  send(\r\n    getArquivoDigitalService().post<string>('/gerarSpedECF', { usuario, ecfExportacaoParam }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function recuperarLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<Lancamento[]>) {\r\n  send(getService().post<Lancamento[]>('/recuperarLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function transferirLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/transferirLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function obterBancoPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG>) {\r\n  send(getService().post<BancoMCG>('/obterBancoPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function validarConfigLivroFolha(idGerEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(getService().get<boolean>('/validarConfigLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function changeLivroFolha(idGerEmpresa: number, param: AxiosParam<void>) {\r\n  send(getService().get<void>('/changeLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function fecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<RuleMessage>) {\r\n  send(getService().post<RuleMessage>('/fecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function forceFecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/forceFecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function verificarErros(erros: VerificarErros, param: AxiosParam<Erros[]>) {\r\n  send(getService().post<Erros[]>('/verificarErros', erros), param);\r\n}\r\n\r\nexport function gerarSpedContabil(selecaoSped: SelecaoSpedContabil, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('usuario.id', String(selecaoSped.usuario.id));\r\n\r\n  if (selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n    for (const arquivo of selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n      formDataSend.append('arquivoRTFEscrituracaoSubstituida', arquivo.file, arquivo.nomeArquivo);\r\n    }\r\n  }\r\n\r\n  for (const atributoSelecaoSped in selecaoSped) {\r\n    if (\r\n      atributoSelecaoSped !== 'arquivoRTFEscrituracaoSubstituida' &&\r\n      atributoSelecaoSped !== 'usuario' &&\r\n      selecaoSped[atributoSelecaoSped] !== null\r\n    ) {\r\n      formDataSend.append(atributoSelecaoSped, selecaoSped[atributoSelecaoSped]);\r\n    }\r\n  }\r\n  send(getService().post<string>('/gerarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function salvarLucroPrejuizoClassificacao(\r\n  lucroPrejuizoClassificacao: LucroPrejuizoClassificacao,\r\n  param: AxiosParam<LucroPrejuizoClassificacao>\r\n) {\r\n  send(getService().post<LucroPrejuizoClassificacao>('/salvarLucroPrejuizoClassificacao', lucroPrejuizoClassificacao), param);\r\n}\r\n\r\nexport function consultarMovimentacao(saldoCriteria: SaldoCriteria, param: AxiosParam<LancamentoSaldo[]>) {\r\n  send(getService().post<LancamentoSaldo[]>('/consultarMovimentacao', saldoCriteria), param);\r\n}\r\n\r\nexport function totalizadorLancamento(consulta: ConsultaTotalLancamento, param: AxiosParam<TotalizadorLancamento>) {\r\n  send(getService().post<TotalizadorLancamento>('/totalizadorLancamento', consulta), param);\r\n}\r\n\r\nexport function getSaldoAnterior(saldoCriteria: SaldoCriteria, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoAnterior', saldoCriteria), param);\r\n}\r\n\r\nexport function isDataEncerrada(parametros: DataEncerradaParam, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isDataEncerrada', parametros), param);\r\n}\r\n\r\nexport function abrirContas(parametros: DataEncerradaParam, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/abrirContas', parametros), param);\r\n}\r\n\r\nexport function removeLancamentoPeriodo(parametros: RemoveLancamentoPeriodo, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removeLancamentoPeriodo', parametros), param);\r\n}\r\n\r\nexport function obterContasClassificacaoIndireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixaIndireto[]>) {\r\n  send(getService().get<ContaFluxoCaixaIndireto[]>('/obterContasClassificacaoIndireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoIndireto(contaFluxoCaixaIndireto: ContaFluxoCaixaIndireto, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoIndireto', contaFluxoCaixaIndireto), param);\r\n}\r\n\r\nexport function obterMutacaoPatrimonioLiquido(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterMutacaoPatrimonioLiquido/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarMutacaoPatrimonioLiquido(mutacaoPatrimonioLiquido: MutacaoPatrimonioLiquido, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarMutacaoPatrimonioLiquido', mutacaoPatrimonioLiquido), param);\r\n}\r\n\r\nexport function salvarContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function excluirContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/excluirContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function obterContasClassificacaoDireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixa[]>) {\r\n  send(getService().get<ContaFluxoCaixa[]>('/obterContasClassificacaoDireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoDireto(contaFluxoCaixa: ContaFluxoCaixa, param?: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoDireto', contaFluxoCaixa), param);\r\n}\r\n\r\nexport function findSubGrupo(planoContaSubGrupoParam: PlanoContaSubGrupoParam, param: AxiosParam<any>) {\r\n  send(getService().post<any>('/findSubGrupo', planoContaSubGrupoParam), param);\r\n}\r\n\r\nexport function removerTodosPlanosConta(idGrupoPlanoConta: number, usuario: Usuario, param: AxiosParam<void>) {\r\n  send(\r\n    getService().post<void>('/removerTodosPlanosConta', { idGrupoPlanoConta, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function removeList(listaPlanoConta: PlanoConta[], apagarFilha: boolean, usuario: Usuario, param: AxiosParam<any>) {\r\n  send(\r\n    getService().post<any>('/removeList', { listaPlanoConta, apagarFilha, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function listSubGrupo(planoConta: PlanoConta, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().post<PlanoConta[]>('/listSubGrupo', planoConta), param);\r\n}\r\n\r\nexport function referenciarContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<void>\r\n) {\r\n  send(\r\n    getService().post<void>('/referenciarContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function desvincularContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<any>\r\n) {\r\n  send(\r\n    getService().post<void>('/desvincularContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function existeLancamentoEmContaAnalitica(idPlanoConta: number, idEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(\r\n    getService().post<boolean>('/existeLancamentoEmContaAnalitica', { idPlanoConta, idEmpresa }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function importarLancamentoMCG(data: ImportacaoLancamentoMCGSelecao, param: AxiosParam<ImportacaoLancamentoMCGRetornoValidacao>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('tipoImportacao', String(data.tipoImportacao));\r\n  formDataSend.append('sobescrever', String(data.sobescrever));\r\n  formDataSend.append('versaoSuperiorA2', String(data.versaoSuperiorA2));\r\n  formDataSend.append('arquivo', data.arquivo[0].file, data.arquivo[0].nomeArquivo);\r\n\r\n  if (data.versaoSuperiorA2 === false && !isEmpty(data.dtInicial) && !isEmpty(data.dtFinal)) {\r\n    formDataSend.append('dtInicial', data.dtInicial);\r\n    formDataSend.append('dtFinal', data.dtFinal);\r\n  }\r\n\r\n  send(getService().post<ImportacaoLancamentoMCGRetornoValidacao>('/importarLancamentoMCG', formDataSend), param);\r\n}\r\n\r\nexport function importarSpedContabil(data: ImportacaoSpedContabil, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function gerarManadContabil(data: MANADContabilCrit, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('refInicial', data.refInicial);\r\n  formDataSend.append('refFinal', data.refFinal);\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  if (!isEmpty(data.arquivoSFP)) {\r\n    formDataSend.append('arquivoSFP', data.arquivoSFP[0].file, data.arquivoSFP[0].nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<string>('/gerarManadContabil', formDataSend), param);\r\n}\r\n\r\nexport function evolucaoContaContabilGraf(\r\n  evolucaoContaContabilGrafParam: EvolucaoContaContabilGrafParam,\r\n  param: AxiosParam<EvolucaoContaContabilGrafReturn>\r\n) {\r\n  send(getService().post<EvolucaoContaContabilGrafReturn>('/evolucaoContaContabilGraf', evolucaoContaContabilGrafParam), param);\r\n}\r\n\r\nexport function composicaoReceitaDespesasGraf(\r\n  compReceitaDespesasGrafParam: ComposicaoReceitaDespesasGrafParam,\r\n  param: AxiosParam<ComposicaoReceitaDespesasGrafReturn>\r\n) {\r\n  send(getService().post<ComposicaoReceitaDespesasGrafReturn>('/composicaoReceitaDespesasGraf', compReceitaDespesasGrafParam), param);\r\n}\r\n\r\nexport function gerarFCONTContabil(fContContabilCrit: FCONTContabilCrit, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/gerarFCONTContabil', fContContabilCrit), param);\r\n}\r\n\r\nexport function obterDadosArquivoExtrato(arquivoSelecionado: ArquivoSelecionado, idBancoMCG, param: AxiosParam<BancoExtrato[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idBancoMCG', idBancoMCG);\r\n\r\n  formDataSend.append('arquivoSelecionado', arquivoSelecionado[0].file, arquivoSelecionado[0].nomeArquivo);\r\n\r\n  send(getService().post<BancoExtrato[]>('/obterDadosArquivoExtrato', formDataSend), param);\r\n}\r\n\r\nexport function obterDadosConciliacaoBancariaPeriodo(\r\n  idGrupoPlanoConta,\r\n  idEmpresa,\r\n  idBancoMCG,\r\n  dtInicial,\r\n  dtFinal,\r\n  param: AxiosParam<InfoConciliacaoBancaria>\r\n) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGrupoPlanoConta', String(idGrupoPlanoConta));\r\n  formDataSend.append('idEmpresa', String(idEmpresa));\r\n  formDataSend.append('idBancoMCG', String(idBancoMCG));\r\n  formDataSend.append('dtInicial', String(dtInicial));\r\n  formDataSend.append('dtFinal', String(dtFinal));\r\n\r\n  send(getService().post<InfoConciliacaoBancaria>('/obterDadosConciliacaoBancariaPeriodo', formDataSend), param);\r\n}\r\n\r\nexport function obterBancoListPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG[]>) {\r\n  send(getService().post<BancoMCG[]>('/obterBancoListPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function conciliarLancamentosExtrato(listConciliacaoBancaria: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/conciliarLancamentosExtrato', listConciliacaoBancaria), param);\r\n}\r\n\r\nexport function removerConciliarLancamentosExtrato(listaRemover: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerConciliarLancamentosExtrato', listaRemover), param);\r\n}\r\n\r\nexport function removerLancamentosExtratoBancario(listaRemover: BancoExtrato[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerLancamentosExtratoBancario', listaRemover), param);\r\n}\r\n\r\nexport function eLalurAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLalurAContas/' + id), param);\r\n}\r\n\r\nexport function eLacsAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLacsAContas/' + id), param);\r\n}\r\n\r\nexport function getSaldoDebito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoDebito', parametros), param);\r\n}\r\n\r\nexport function getSaldoCredito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoCredito', parametros), param);\r\n}\r\n\r\nexport function removerLancamentoLote(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/removerLancamentoLote', parametros), param);\r\n}\r\n\r\nexport function atualizaCalculoIrpjCsll(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/atualizaCalculoIrpjCsll', parametros), param);\r\n}\r\n\r\nexport function buscarLancamentosHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  param: AxiosParam<LancamentoIntegracaoHonorarios[]>\r\n) {\r\n  send(getService().post<LancamentoIntegracaoHonorarios[]>('/buscarLancamentosHonorarios', integracaoHonorariosParam), param);\r\n}\r\n\r\nexport function integrarHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  lancamentos: LancamentoIntegracaoHonorarios[],\r\n  param: AxiosParam<number>\r\n) {\r\n  send(\r\n    getService().post<number>('/integrarHonorarios', { integracaoHonorariosParam, lancamentos }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function isAlteraCalculoIRPJorCSLL(parametros: CalculoIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isAlteraCalculoIRPJorCSLL', parametros), param);\r\n}\r\n","import { Basic } from 'summer';\r\nimport { CepBairro } from './cepBairro';\r\nimport { CepLocalidade } from './cepLocalidade';\r\nimport { CepTitulo } from './cepTitulo';\r\nimport { CepUF } from './cepUF';\r\n\r\nexport interface Responsavel extends Basic {\r\n  cargo?: string;\r\n  cei?: string;\r\n  cep?: string;\r\n  cnpj?: string;\r\n  cpf?: string;\r\n  cepBairro?: CepBairro;\r\n  /** Campo referente a cidade */\r\n  cepLocalidade?: CepLocalidade;\r\n  /** tipo do logradouro ex: rua, avenida */\r\n  cepTitulo?: CepTitulo;\r\n  cepUf?: CepUF;\r\n  complemento?: string;\r\n  dataNascimento?: Date;\r\n  dataValidadeCRC?: Date;\r\n  email?: string;\r\n  /** Este campo utiliza o estadoCivilEnum */\r\n  estadoCivil?: string;\r\n  logradouro?: string;\r\n  numeroConselho?: string;\r\n  /** Este campo utiliza o nacionalidadeEnum */\r\n  nacionalidade?: string;\r\n  nome?: string;\r\n  numero?: string;\r\n  orgaoEmissor?: string;\r\n  rg?: string;\r\n  telefone?: string;\r\n  /** Este campo utiliza o responsavelTipoEnum */\r\n  tipo?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.responsavel';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/responsavel';\r\n\r\nconst ResponsavelIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'tipo',\r\n            text: 'Tipo',\r\n          },\r\n          {\r\n            dataField: 'telefone',\r\n            text: 'Telefone',\r\n          },\r\n          {\r\n            dataField: 'email',\r\n            text: 'E-mail',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'ResponsavelSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Responsável'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Responsável'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ResponsavelIS;\r\n"],"sourceRoot":""}
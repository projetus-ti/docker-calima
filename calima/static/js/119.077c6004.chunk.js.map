{"version":3,"sources":["views/pages/mcg/report/caixaNormal/caixaNormalRelRV.ts","views/pages/mcg/report/caixaNormal/CaixaNormalReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","dependencies/empresaMCGDependency.ts","models/enumerated/mcg/consolidarEnum.ts"],"names":["DEFAULT_VALUES","Object","objectSpread2","getDefaultReportBasicValues","consolidacao","NORMAL","value","DEFAULT_OPTIONS","getDefaultReportViewOptions","REFERENCES","dtFinalRequired","dtInicialRequired","exibirConfiguracaoDadosEmpresa","exibirConfiguracaoDataAtual","CaixaNormalReportView","props","globalReducer","useSelector","state","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","isDisable","setisDisable","_useState3","_useState4","isEnabledIsMatriz","setIsEnabledIsMatriz","init","globalParameter","empresa","matriz","getValues","matrizFilial","centralizar","setTimeout","setValue","empresaMCG","refAtual","triggerValidation","useEffect","acumularMatrizFilial","react_default","a","createElement","Col","CustomInput","type","disabled","label","name","id","innerRef","register","summer_esm","title","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMCG","Row","className","isPrependLabel","placeholder","validation","required","inputDropDownProps","optionsProvider","CONSOLIDAR_ENUM_VALUES","selectProps","isClearable","InputType","DROP_DOWN","onChange","isEcfCsv","ReportForm","assign","localStorageKey","routeProps","reportBasicValues","reportViewOptions","result","__webpack_require__","d","__webpack_exports__","NATUREZA","SALDO_REPORT_ENUM","EmpresaIS","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","inputSearchProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","empresasSelecionadas","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","gerarCabecalhoPadraoAdministradora","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","virtualization","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","errors","handleCancel","validateExtras","currentItem","currentValues","parentObject","EnvioEmail","Fragment","sort","detailView","keyField","propName","maxLength","TEXT_AREA","ReportInputs","activeTab","setActiveTab","_props$reportViewOpti","printingTypes","resetObject","length","idGerEmpresa","current","currentMomentDate","endDate","DATE","dtInicial","formatDate","toDate","DATES","dtFinal","endOf","REFERENCE","referenciaInicial","format","REF_PATTERN","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dateComponent","datesComponent","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","NUMBER","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","inputProps","gerarPorEmpresas","style","marginBottom","size","isMulti","segmentacaoFolhaComponent","exibirSegmentacaoFolha","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","exibirImprimirValoresColoridos","firstOpen","extraConfigOpened","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","hidden","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","erros","params","message","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history","NORMAL_NUMBER","GRUPO_ATUAL_NUMBER","CONSOLIDAR_NUMBER_ENUM_VALUES"],"mappings":"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","file":"static/js/119.077c6004.chunk.js","sourcesContent":["import { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\n\r\nexport interface CaixaNormalRelRV extends ReportBasicValues {\r\n  somenteContaCaixa?: boolean;\r\n  armazenarPagina?: boolean;\r\n  matrizFilial?: boolean;\r\n  consolidacao?: string;\r\n  isEcfCsv?: boolean;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'caixanormalrelrv';\r\nexport const REPORT_TITLE: string = 'Livro Caixa';\r\nexport const REPORT_EVENT: string = 'printCaixaNormal';\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { InputGroupInline, InputType, REFERENCES, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../../dependencies/empresaMCGDependency';\r\nimport { getDefaultReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport { CONSOLIDAR_ENUM_VALUES, NORMAL } from '../../../../../models/enumerated/mcg/consolidarEnum';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { CaixaNormalRelRV, CLASS_KEY, REPORT_EVENT, REPORT_TITLE } from './caixaNormalRelRV';\r\n\r\nconst DEFAULT_VALUES: CaixaNormalRelRV = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n  consolidacao: NORMAL.value,\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT, REFERENCES.value),\r\n  dtFinalRequired: true,\r\n  dtInicialRequired: true,\r\n  exibirConfiguracaoDadosEmpresa: true,\r\n  exibirConfiguracaoDataAtual: true,\r\n};\r\n\r\nconst CaixaNormalReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const { handleSubmit, ...formProps } = useForm<CaixaNormalRelRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n\r\n  const [isDisable, setisDisable] = useState(false);\r\n  const [isEnabledIsMatriz, setIsEnabledIsMatriz] = useState(false);\r\n\r\n  const carregarParametroEmpresa = () => {\r\n    if (globalReducer.globalParameter.empresa.matriz === null) {\r\n      setIsEnabledIsMatriz(true);\r\n      formProps.getValues().matrizFilial = globalReducer.globalParameter.empresa.centralizar;\r\n    }\r\n  };\r\n\r\n  const init = () => {\r\n    carregarParametroEmpresa();\r\n    setTimeout(() => {\r\n      formProps.setValue('referenciaInicial', globalReducer.globalParameter.empresaMCG.refAtual);\r\n      formProps.triggerValidation('referenciaInicial');\r\n      formProps.setValue('referenciaFinal', globalReducer.globalParameter.empresaMCG.refAtual);\r\n      formProps.triggerValidation('referenciaFinal');\r\n    }, 1000);\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (globalReducer.globalParameter.empresa) {\r\n        init();\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const acumularMatrizFilial = isEnabledIsMatriz ? (\r\n    <Col>\r\n      <CustomInput\r\n        type=\"switch\"\r\n        disabled={isDisable}\r\n        label=\"Acumular Matriz e Filiais\"\r\n        name=\"matrizFilial\"\r\n        id=\"matrizFilial\"\r\n        innerRef={formProps.register}\r\n      />\r\n    </Col>\r\n  ) : null;\r\n\r\n  const isEcfCsv = () => {\r\n    if (formProps.getValues().isEcfCsv === true) {\r\n      formProps.setValue('somenteContaCaixa', true);\r\n      formProps.setValue('consolidacao', NORMAL.value);\r\n      formProps.setValue('armazenarPagina', false);\r\n      formProps.setValue('matrizFilial', false);\r\n      setisDisable(true);\r\n    } else {\r\n      setisDisable(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Livro Caixa - Normal\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMCG(globalReducer.globalParameter)]}\r\n    >\r\n      <Row>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            disabled={isDisable}\r\n            label=\"Somente Conta Caixa\"\r\n            name=\"somenteContaCaixa\"\r\n            id=\"somenteContaCaixa\"\r\n            innerRef={formProps.register}\r\n          />\r\n        </Col>\r\n        {acumularMatrizFilial}\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            disabled={isDisable}\r\n            label=\"Amazenar Página\"\r\n            name=\"armazenarPagina\"\r\n            id=\"armazenarPagina\"\r\n            innerRef={formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mt-3\">\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"consolidacao\"\r\n            label=\"Consolidação\"\r\n            isPrependLabel={true}\r\n            disabled={isDisable}\r\n            placeholder=\"Selecione uma consolidação\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            inputDropDownProps={{\r\n              optionsProvider: CONSOLIDAR_ENUM_VALUES,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            label=\"Gerar CSV Registro Q100 do SPED-ECF\"\r\n            name=\"isEcfCsv\"\r\n            onChange={isEcfCsv}\r\n            id=\"isEcfCsv\"\r\n            innerRef={formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n      />\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default CaixaNormalReportView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMCG(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMCG) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o módulo Contábil. Para configurá-la acesse:\\n' +\r\n      'Módulo Contábil > Manutenção > Configurações > Empresa.';\r\n  }\r\n  return result;\r\n}\r\n","export const NORMAL = { value: '1', label: 'Normal' };\r\nexport const GRUPO_ATUAL = { value: '2', label: 'Grupo Atual' };\r\nexport const HIERARQUIA_INFERIOR = { value: '3', label: 'Hierarquia Inferior' };\r\n\r\nexport const CONSOLIDAR_ENUM_VALUES = [NORMAL, GRUPO_ATUAL, HIERARQUIA_INFERIOR];\r\n\r\nexport const NORMAL_NUMBER = { value: 1, label: 'Normal' };\r\nexport const GRUPO_ATUAL_NUMBER = { value: 2, label: 'Grupo Atual' };\r\nexport const HIERARQUIA_INFERIOR_NUMBER = { value: 3, label: 'Hierarquia Inferior' };\r\n\r\nexport const CONSOLIDAR_NUMBER_ENUM_VALUES = [NORMAL_NUMBER, GRUPO_ATUAL_NUMBER, HIERARQUIA_INFERIOR_NUMBER];\r\n"],"sourceRoot":""}
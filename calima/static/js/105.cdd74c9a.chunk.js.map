{"version":3,"sources":["models/enumerated/ger/tipoPagamentoEnum.ts","views/pages/mlf/report/relacaoEntradaSaida/tipoPagamento/RelacaoEntradaTipoPagamentoReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/printerConfigTypeEnum.ts","models/enumerated/ger/printerTypeEnum.ts","dependencies/empresaMLFDependency.ts","models/dtos/ger/printerDataBasic.ts","views/pages/report/ReportFormView.tsx","views/pages/mlf/report/relacaoEntradaSaida/relacaoEntradaSaidaRV.ts","models/enumerated/mcg/sinteticoAnaliticoTipoEnum.ts","models/enumerated/mlf/origemLancamentoMLFEnum.ts"],"names":["TIPO_PAGAMENTO_ENUM_VALUES","label","serverValue","value","REPORT_EVENT","REPORT_TITLE","BASIC_DATA","Object","objectSpread2","getDefaultPrinterDataBasic","CLASS_KEY","DATES","dtFinal","dtInicial","RelacaoEntradaTipoPagamentoReportView","props","history","useHistory","formProps","useForm","mode","globalReducer","useSelector","state","useEffect","globalParameter","empresa","id","setTimeout","setValue","triggerValidation","react_default","a","createElement","summer_esm","assign","title","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMLF","ReportFormView","printerData","hidden","Row","Col","Label","style","marginRight","CustomInput","ANALITICO","inline","type","name","innerRef","register","SINTETICO","isPrependLabel","placeholder","inputDropDownProps","optionsProvider","ORIGEM_LANCAMENTO_MLF_ENUM_VALUES","InputType","DROP_DOWN","FormGroup","tag","result","__webpack_require__","d","__webpack_exports__","SIMPLE","DATE","MONTHYEAR","MONTHYEARS","YEAR","GRAPHIC","PRINTER_TYPE_ENUM","empresaMLF","_enumerated_ger_printerConfigTypeEnum__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_printerTypeEnum__WEBPACK_IMPORTED_MODULE_1__","reportEventType","classKey","printerConfigTypeEnum","module","anoLabel","dtFinalLabel","dtInicialLabel","pageNumber","passObj","printerDataEmail","printerTypeEnum","refFinalLabel","refInicialLabel","reportSequence","_props$printerData","resetObject","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","length","current","currentMomentDate","endDate","formatDate","toDate","endOf","referenciaInicial","format","REF_PATTERN","referenciaFinal","ano","String","year","reset","dateInitial","react__WEBPACK_IMPORTED_MODULE_2___default","summer__WEBPACK_IMPORTED_MODULE_7__","validation","required","dateComponent","datesComponent","Fragment","referenceInitial","REFERENCE","referenceComponent","referencesComponent","anoComponent","inputMaskedProps","mask","MASK","reactstrap__WEBPACK_IMPORTED_MODULE_3__","noValidate","children","firstOpen","extraConfigOpened","iconAppend","appendClickHandler","maxLength","minLength","min","NUMBER","reactstrap__WEBPACK_IMPORTED_MODULE_4__","className","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","selectProps","isClearable","handleSubmit","data","event","preventDefault","erros","validateExtras","params","message","AlertType","ERROR","alertManager","emit","ACTION_EVENTS","SHOW","showToast","INFORMATION","delay","gerarOldReport","errorFunction","mensagem","thenFunction","downloadOldReport","response","contentDisposition","headers","filename","slice","lastIndexOf","split","replace","saveAs","hideCancelButton","ANALITICO_NUMBER","GRAU_CONTA_NUMBER","SINTETICO_ANALITICO_VALUES","SINTETICO_ANALITICO_TIPO_ENUM_VALUES","GRAU_CONTA","SINTETICO_ANALITICO_TIPO_VALUE_STRING_ENUM_VALUES","ANALITICO_NUMBER_VALUE","SINTETICO_NUMBER_VALUE","GRAU_CONTA_NUMBER_VALUE","SINTETICO_ANALITICO_TIPO_NUMBER_VALUE_ENUM_VALUES","SINTETICO_NUMBER","intValue"],"mappings":"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","file":"static/js/105.cdd74c9a.chunk.js","sourcesContent":["export const A_VISTA = { label: 'À Vista', serverValue: [0], value: 'aVista' };\r\nexport const A_PRAZO = { label: 'À Prazo', serverValue: [1], value: 'aPrazo' };\r\nexport const SEM_PAGAMENTO = { label: 'Sem Pgto. / Outros', serverValue: [9], value: 'semPagamento' };\r\n\r\nexport const TIPO_PAGAMENTO_ENUM_VALUES = [A_VISTA, A_PRAZO, SEM_PAGAMENTO];\r\n","import React, { useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { Col, CustomInput, FormGroup, Label, Row } from 'reactstrap';\r\nimport { InputGroupInline, InputType, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasEmpresa } from '../../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMLF } from '../../../../../../dependencies/empresaMLFDependency';\r\nimport { getDefaultPrinterDataBasic, PrinterDataBasic } from '../../../../../../models/dtos/ger/printerDataBasic';\r\nimport { DATES } from '../../../../../../models/enumerated/ger/printerConfigTypeEnum';\r\nimport { TIPO_PAGAMENTO_ENUM_VALUES } from '../../../../../../models/enumerated/ger/tipoPagamentoEnum';\r\nimport { ANALITICO, SINTETICO } from '../../../../../../models/enumerated/mcg/sinteticoAnaliticoTipoEnum';\r\nimport { ORIGEM_LANCAMENTO_MLF_ENUM_VALUES } from '../../../../../../models/enumerated/mlf/origemLancamentoMLFEnum';\r\nimport { Reducers } from '../../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../../store/ducks/global.duck';\r\nimport ReportFormView from '../../../../report/ReportFormView';\r\nimport { CLASS_KEY, RelacaoEntradaSaidaRV } from '../relacaoEntradaSaidaRV';\r\n\r\nexport const REPORT_EVENT: string = 'printRelacaoEntradaTipoPagamento';\r\nexport const REPORT_TITLE = 'Relação de Entradas Por Tipo de Pagamento';\r\n\r\nconst BASIC_DATA: PrinterDataBasic = {\r\n  ...getDefaultPrinterDataBasic(REPORT_TITLE, REPORT_EVENT, CLASS_KEY, DATES.value),\r\n  dtFinal: '31/12/2017',\r\n  dtInicial: '01/12/2017',\r\n};\r\n\r\nexport default function RelacaoEntradaTipoPagamentoReportView(props: WindowComponentProps) {\r\n  const history = useHistory();\r\n\r\n  const formProps = useForm<RelacaoEntradaSaidaRV>({ mode: 'onBlur' });\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (globalReducer.globalParameter.empresa !== null) {\r\n        const id = globalReducer.globalParameter.empresa.id;\r\n        setTimeout(() => {\r\n          formProps.setValue('idGerEmpresa', id);\r\n          formProps.setValue('sintetico', false);\r\n          formProps.setValue('tipoPagamento', null);\r\n          formProps.triggerValidation('tipoPagamento');\r\n        }, 800);\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  return (\r\n    <WindowComponent\r\n      {...props}\r\n      title={REPORT_TITLE}\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMLF(globalReducer.globalParameter)]}\r\n    >\r\n      <ReportFormView formProps={formProps} printerData={BASIC_DATA} history={history}>\r\n        <InputGroupInline formProps={formProps} id=\"idGerEmpresa\" hidden={true} />\r\n        <Row>\r\n          <Col>\r\n            <Label style={{ marginRight: 20 }}>Modelo do Relatório</Label>\r\n            <CustomInput\r\n              id=\"sinteticoFalse\"\r\n              value={'false'}\r\n              label={ANALITICO.label}\r\n              inline={true}\r\n              type=\"radio\"\r\n              name=\"sintetico\"\r\n              innerRef={formProps.register}\r\n            />\r\n            <CustomInput\r\n              id=\"sinteticoTrue\"\r\n              inline={true}\r\n              label={SINTETICO.label}\r\n              name=\"sintetico\"\r\n              value={'true'}\r\n              type=\"radio\"\r\n              innerRef={formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"origemLancamentoInt\"\r\n              label=\"Origem do Lançamento\"\r\n              isPrependLabel={true}\r\n              placeholder=\"Informe a Origem do Lançamento\"\r\n              formProps={formProps}\r\n              inputDropDownProps={{\r\n                optionsProvider: ORIGEM_LANCAMENTO_MLF_ENUM_VALUES,\r\n              }}\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"tipoPagamento\"\r\n              label=\"Filtrar por\"\r\n              isPrependLabel={true}\r\n              placeholder=\"Informe o Tipo de Pagamento para o filtro\"\r\n              formProps={formProps}\r\n              inputDropDownProps={{\r\n                optionsProvider: TIPO_PAGAMENTO_ENUM_VALUES,\r\n              }}\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <FormGroup tag={Row}>\r\n          <Col>\r\n            <CustomInput id=\"subtotalDiario\" innerRef={formProps.register} label=\"Exibir Subtotais Por Dia\" name=\"subtotalDiario\" type=\"switch\" />\r\n          </Col>\r\n        </FormGroup>\r\n      </ReportFormView>\r\n    </WindowComponent>\r\n  );\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const SIMPLE = { label: '', value: '0' };\r\nexport const DATE = { label: '', value: '1' };\r\nexport const DATES = { label: '', value: '2' };\r\nexport const MONTHYEAR = { label: '', value: '3' };\r\nexport const MONTHYEARS = { label: '', value: '4' };\r\nexport const TINY = { label: '', value: '5' }; // TODO Remover\r\nexport const YEAR = { label: '', value: '6' };\r\nexport const QUARTER_YEAR = { label: '', value: '7' }; // TODO Remover\r\n\r\nconst PRINTER_CONFIG_TYPE_ENUM = [SIMPLE, DATE, DATES, MONTHYEAR, MONTHYEARS, TINY, YEAR, QUARTER_YEAR];\r\n\r\nexport default PRINTER_CONFIG_TYPE_ENUM;\r\n","export const TEXT = { label: 'Texto - CalimaDesk', value: 'texto' };\r\nexport const GRAPHIC = { label: 'Gráfico - PDF', value: 'grafico' };\r\nexport const EMAIL = { label: 'E-mail - PDF', value: 'email' };\r\n\r\nconst PRINTER_TYPE_ENUM = [TEXT, GRAPHIC, EMAIL];\r\n\r\nexport default PRINTER_TYPE_ENUM;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMLF(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMLF) {\r\n    result =\r\n      'A empresa fiscal da empresa selecionada deve estar configurada. Para configurar acesse:\\n' +\r\n      'Módulo Fiscal > Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n","import { SIMPLE } from '../../enumerated/ger/printerConfigTypeEnum';\r\nimport { GRAPHIC } from '../../enumerated/ger/printerTypeEnum';\r\nimport { PrinterDataEmail } from './printerDataEmail';\r\n\r\nexport interface PrinterDataBasic {\r\n  printerTypeEnum?: string;\r\n  dtInicial?: string;\r\n  dtFinal?: string;\r\n  refInicial?: string;\r\n  refFinal?: string;\r\n  reportSequence?: boolean;\r\n  pageNumber?: string;\r\n  title?: string;\r\n  printerDataEmail?: PrinterDataEmail;\r\n  passObj?: any;\r\n  printerConfigTypeEnum?: string;\r\n\r\n  dtInicialLabel?: string;\r\n  dtFinalLabel?: string;\r\n  refInicialLabel?: string;\r\n  refFinalLabel?: string;\r\n  anoLabel?: string;\r\n\r\n  reportEventType: string;\r\n  classKey: string;\r\n  module: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.printerdatabasicdto';\r\n\r\nexport function getDefaultPrinterDataBasic(\r\n  title: string,\r\n  reportEventType: string,\r\n  classKey: string,\r\n  printerConfigTypeEnum: string = SIMPLE.value,\r\n  module: string = 'MLF'\r\n) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    classKey,\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    module,\r\n    pageNumber: '1',\r\n    passObj: {},\r\n    printerConfigTypeEnum,\r\n    printerDataEmail: {},\r\n    printerTypeEnum: GRAPHIC.value,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportSequence: false,\r\n    title,\r\n  };\r\n}\r\n","import { saveAs } from 'file-saver';\r\nimport React, { FC, useEffect } from 'react';\r\nimport { Col, CustomInput, Form, Row } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  currentMomentDate,\r\n  ErroList,\r\n  ERROR,\r\n  format,\r\n  formatDate,\r\n  INFORMATION,\r\n  InputGroupInline,\r\n  InputType,\r\n  ProcessBar,\r\n  REF_PATTERN,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { PrinterDataBasic } from '../../../models/dtos/ger/printerDataBasic';\r\nimport { DATE, DATES, MONTHYEAR, MONTHYEARS, YEAR } from '../../../models/enumerated/ger/printerConfigTypeEnum';\r\nimport PRINTER_TYPE_ENUM, { GRAPHIC } from '../../../models/enumerated/ger/printerTypeEnum';\r\nimport { downloadOldReport, gerarOldReport } from '../../../services/report.service';\r\n\r\nexport interface ReportWindowComponentProps {\r\n  formProps: UseFormProps;\r\n  printerData?: PrinterDataBasic;\r\n  history?: any;\r\n  /** Função de validações extras */\r\n  validateExtras?: (printerData: PrinterDataBasic, formData: any) => string[];\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportFormView: FC<ReportWindowComponentProps> = props => {\r\n  useEffect(\r\n    () => {\r\n      const { printerTypeEnum, printerConfigTypeEnum } = props.printerData;\r\n      let resetObject: any = {\r\n        ...props.printerData,\r\n        printerTypeEnum: printerTypeEnum && printerTypeEnum.length > 0 ? printerTypeEnum[0] : GRAPHIC.value,\r\n      };\r\n\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (printerConfigTypeEnum) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case MONTHYEAR.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case MONTHYEARS.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case YEAR.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      props.formProps.reset(resetObject);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.printerData.printerConfigTypeEnum, props.printerData.printerTypeEnum]\r\n  );\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(props.printerData, data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      props.printerData.passObj = data;\r\n      showToast('Seu relatório está sendo gerado...', { ...INFORMATION, delay: 3000 });\r\n      gerarOldReport(props.printerData, {\r\n        errorFunction: (mensagem: string) => {\r\n          showToast(mensagem, ERROR);\r\n        },\r\n        thenFunction: () => {\r\n          downloadOldReport({\r\n            errorFunction: (mensagem: string) => {\r\n              showToast(mensagem, ERROR);\r\n            },\r\n            thenFunction: (response: any) => {\r\n              const contentDisposition = response.headers['content-disposition'];\r\n              const filename = contentDisposition\r\n                .slice(0, contentDisposition.lastIndexOf(';'))\r\n                .split('filename=')[1]\r\n                .replace(/\"/g, '');\r\n              saveAs(response.data, filename);\r\n            },\r\n          });\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.printerData.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.printerData.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: true } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.printerData.printerConfigTypeEnum === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.printerData.printerConfigTypeEnum === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.printerData.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: true } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"refInicial\"\r\n      label={props.printerData.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: true } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.printerData.printerConfigTypeEnum === MONTHYEAR.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.printerData.printerConfigTypeEnum === MONTHYEARS.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"refFinal\"\r\n          label={props.printerData.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: true } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.printerData.printerConfigTypeEnum === YEAR.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.printerData.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n\r\n      <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n        <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n          <InputGroupInline\r\n            id=\"title\"\r\n            label=\"Título\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Título\"\r\n            iconAppend=\"undo-alt\"\r\n            appendClickHandler={restoreTitle}\r\n            formProps={{\r\n              ...props.formProps,\r\n              validation: {\r\n                maxLength: 120,\r\n                minLength: 5,\r\n                required: true,\r\n              },\r\n            }}\r\n          />\r\n\r\n          <InputGroupInline\r\n            id=\"pageNumber\"\r\n            label=\"Página Inicial\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Página Inicial\"\r\n            formProps={{\r\n              ...props.formProps,\r\n              validation: {\r\n                min: 0,\r\n                required: true,\r\n              },\r\n            }}\r\n            type={InputType.NUMBER}\r\n          />\r\n\r\n          <Row className=\"mb-3 mt-3\">\r\n            <Col>\r\n              <CustomInput\r\n                type=\"switch\"\r\n                label=\"Sequenciar Relatórios\"\r\n                id=\"reportSequence\"\r\n                name=\"reportSequence\"\r\n                innerRef={props.formProps.register}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          {dateComponent}\r\n          {datesComponent}\r\n          {referenceComponent}\r\n          {referencesComponent}\r\n          {anoComponent}\r\n\r\n          <InputGroupInline\r\n            id=\"printerTypeEnum\"\r\n            label=\"Tipo de Impressão\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Selecione o tipo de impressão\"\r\n            formProps={{ ...props.formProps, validation: { required: true } }}\r\n            inputDropDownProps={{\r\n              optionsProvider: PRINTER_TYPE_ENUM,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n        </AccordionItem>\r\n      </Accordion>\r\n\r\n      <ProcessBar handleSubmit={props.formProps.handleSubmit(onSubmit)} hideCancelButton={true} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportFormView;\r\n","import { Cfop } from '../../../../../models/dtos/ger/cfop';\r\n\r\nexport interface RelacaoEntradaSaidaRV {\r\n  idGerEmpresa?: number;\r\n  /** este campo utiliza o enum origemLancamentoMLFEnum */\r\n  origemLancamentoInt?: number;\r\n  sintetico?: boolean;\r\n  dataInicialStr?: string;\r\n  dataFinalStr?: string;\r\n  modelo?: boolean;\r\n  ordemEnum?: number;\r\n  subtotalDiario?: boolean;\r\n  /** este campo utiliza o enum ufEnum */\r\n  uf?: string;\r\n  cfops?: Cfop[];\r\n  /** este campo utiliza o enum EnumTipoPagamento */\r\n  tipoPagamento?: string;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'relacaoentradasaidarelpass';\r\n","export const ANALITICO_NUMBER = { label: 'Analítico', value: '1' };\r\nexport const SINTETICO_NUMBER = { label: 'Sintético', value: '2' };\r\nexport const GRAU_CONTA_NUMBER = { label: 'Grau da Conta', value: '3' };\r\n\r\nexport const SINTETICO_ANALITICO_VALUES = [ANALITICO_NUMBER, SINTETICO_NUMBER];\r\n\r\nexport const SINTETICO_ANALITICO_TIPO_ENUM_VALUES = [ANALITICO_NUMBER, SINTETICO_NUMBER, GRAU_CONTA_NUMBER];\r\n\r\nexport const ANALITICO = { label: 'Analítico', value: 'analitico' };\r\nexport const SINTETICO = { label: 'Sintético', value: 'sintetico' };\r\nexport const GRAU_CONTA = { label: 'Grau da Conta', value: 'grauConta' };\r\n\r\nexport const SINTETICO_ANALITICO_TIPO_VALUE_STRING_ENUM_VALUES = [ANALITICO, SINTETICO, GRAU_CONTA];\r\n\r\nexport const ANALITICO_NUMBER_VALUE = { label: 'Analítico', value: 1 };\r\nexport const SINTETICO_NUMBER_VALUE = { label: 'Sintético', value: 2 };\r\nexport const GRAU_CONTA_NUMBER_VALUE = { label: 'Grau da Conta', value: 3 };\r\n\r\nexport const SINTETICO_ANALITICO_TIPO_NUMBER_VALUE_ENUM_VALUES = [ANALITICO_NUMBER_VALUE, SINTETICO_NUMBER_VALUE, GRAU_CONTA_NUMBER_VALUE];\r\n","export const MANUAL = {\r\n  intValue: [0],\r\n  label: 'Manual',\r\n  value: 0,\r\n};\r\nexport const ARQUIVO_DIGITAL_XML_TXT = {\r\n  intValue: [1],\r\n  label: 'Arquivo Digital (XML e TXT)',\r\n  value: 1,\r\n};\r\nexport const SINTEGRA = {\r\n  intValue: [2],\r\n  label: 'SINTEGRA',\r\n  value: 2,\r\n};\r\nexport const SPED = {\r\n  intValue: [3],\r\n  label: 'SPED',\r\n  value: 3,\r\n};\r\nexport const INTEGRACAO_REST_JSON = {\r\n  intValue: [4],\r\n  label: 'Integração Rest (JSON)',\r\n  value: 4,\r\n};\r\n\r\nexport const ORIGEM_LANCAMENTO_MLF_ENUM_VALUES = [MANUAL, ARQUIVO_DIGITAL_XML_TXT, SINTEGRA, SPED, INTEGRACAO_REST_JSON];\r\n"],"sourceRoot":""}
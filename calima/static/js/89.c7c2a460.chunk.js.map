{"version":3,"sources":["models/enumerated/mho/statusContaPagarMHOEnum.ts","views/components/mho/historicoPagarMHOIS/HistoricoPagarMHOIS.tsx","models/enumerated/mho/ordenacaoContaPagarRelEnum.ts","views/pages/mho/report/contaPagar/ContaPagarMHORelRV.ts","views/pages/mho/report/contaPagar/ContaPagarMHOReportView.tsx","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","dependencies/administradoraMHODependency.ts","models/dtos/mho/historicoPagarMHO.ts"],"names":["__webpack_require__","d","__webpack_exports__","TODAS","STATUS_CONTA_PAGAR_MHO_ENUM_VALUES","FLUXO_CAIXA_VALUES","value","label","HistoricoPagarMHOIS","props","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_2__","Object","assign","isPrependLabel","type","InputType","INPUT_SEARCH","inputSearchProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","placeholder","DATA_VENCIMENTO","ORDENACAO_CONTA_PAGAR_MHO_ENUM_VALUES","DEFAULT_VALUES","objectSpread2","getDefaultReportBasicValues","historicos","status","tipoOrdenacao","DEFAULT_OPTIONS","getDefaultReportViewOptions","DATES","dtFinalRequired","dtInicialRequired","exibirConfiguracaoDadosEmpresa","ContaPagarMHOReportView","globalReducer","useSelector","state","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","objectWithoutProperties","react_default","summer_esm","title","useGlobalParameter","globalParameter","dependencies","hasAdministradoraMHO","wikiId","ReportForm","localStorageKey","routeProps","reportBasicValues","reportViewOptions","validateExtras","formData","errors","dtInicial","dtFinal","push","id","selectProps","isMulti","inputDropDownProps","optionsProvider","isClearable","DROP_DOWN","NATUREZA","SALDO_REPORT_ENUM","EmpresaIS","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","empresasSelecionadas","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","gerarCabecalhoPadraoAdministradora","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","virtualization","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","getValues","register","setValue","triggerValidation","handleCancel","currentItem","currentValues","parentObject","validation","required","EnvioEmail","Fragment","sort","detailView","keyField","propName","Row","className","Col","CustomInput","name","innerRef","maxLength","TEXT_AREA","ReportInputs","_useState","useState","_useState2","slicedToArray","activeTab","setActiveTab","useEffect","_props$reportViewOpti","printingTypes","resetObject","length","idGerEmpresa","empresa","current","currentMomentDate","endDate","DATE","formatDate","toDate","endOf","REFERENCE","referenciaInicial","format","REF_PATTERN","REFERENCES","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dateComponent","datesComponent","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","NUMBER","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","inputProps","disabled","gerarPorEmpresas","style","marginBottom","size","segmentacaoFolhaComponent","exibirSegmentacaoFolha","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","exibirImprimirValoresColoridos","firstOpen","extraConfigOpened","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","hidden","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","erros","params","message","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history","result","administradora","administradoraMHO"],"mappings":"4FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAO,MAAMF,EAAQ,CAAEG,MAAO,QAASC,MAAO,SAMjCH,EAAqC,CAACD,EALpB,CAAEG,MAAO,kBAAmBC,MAAO,0BACrC,CAAED,MAAO,gBAAiBC,MAAO,yBAMjDF,EAAqB,CAACF,EALX,CAAEG,MAAO,WAAYC,MAAO,4CACxB,CAAED,MAAO,eAAgBC,MAAO,iIC2B7CC,IA3B6BC,IAExCC,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,GACMN,EADN,CAEEO,gBAAgB,EAChBC,KAAMC,IAAUC,aAChBC,iBAAgBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAA,GACXL,EAAMW,kBADK,IAEdE,QAAS,CACP,CACEC,UAAW,SACXC,KAAM,aAER,CACED,UAAW,YACXC,KAAM,oBAGVC,aAAcC,IACdC,aAAc,gCAEhBpB,MAAM,eACNqB,YAAY,6JC1BX,MAAMC,EAAkB,CAAEtB,MAAO,qBAAsBD,MAAO,KAIxDwB,EAAwC,CAACD,EAFxB,CAAEtB,MAAO,oBAAqBD,MAAO,uCCW5D,MCGDyB,EAAkCjB,OAAAkB,EAAA,EAAAlB,QAAAkB,EAAA,EAAAlB,CAAA,GACnCmB,YDF+B,mBCCI,IAEtCC,WAAY,GACZC,OAAQhC,IAAMG,MACd8B,cAAeP,EAAgBvB,QAG3B+B,EAAkCvB,OAAAkB,EAAA,EAAAlB,QAAAkB,EAAA,EAAAlB,CAAA,GACnCwB,YDV+B,qBCUWC,IAAMjC,QADb,IAEtCkC,iBAAiB,EACjBC,mBAAmB,EACnBC,gCAAgC,IA2DnBC,UAxDiElC,KAC9E,MAAMmC,EAAgBC,YAAmCC,GAASA,EAAMF,eADeG,EAGhDC,YAA4B,CAAEC,cAAelB,EAAgBmB,KAAM,WAAlGC,EAH+EJ,EAG/EI,aAAiBC,EAH8DtC,OAAAuC,EAAA,EAAAvC,CAAAiC,EAAA,kBAavF,OACEO,EAAA3C,EAAAC,cAAC2C,EAAA,GAAD,CACEC,MAAM,iBACNC,oBAAoB,EACpBC,gBAAiBd,EAAcc,gBAC/BC,aAAc,CAAC,IAAMC,YAAqBhB,EAAcc,kBACxDG,OAAQ,MAERP,EAAA3C,EAAAC,cAACkD,EAAA,EAADhD,OAAAC,OAAA,GACMN,EADN,CAEE0C,aAAcA,EACdC,UAAWA,EACXW,gBD1CyB,qBC2CzBC,WAAYvD,EACZwD,kBAAmBlC,EACnBmC,kBAAmB7B,EACnB8B,eAxBkBC,IACtB,MAAMC,EAAS,GAIf,OAHID,EAASE,UAAYF,EAASG,SAChCF,EAAOG,KAAK,+DAEPH,KAqBHf,EAAA3C,EAAAC,cAACJ,EAAA,EAAD,CAAqB4C,UAAWA,EAAWqB,GAAG,aAAarD,iBAAkB,CAAEsD,YAAa,CAAEC,SAAS,MAEvGrB,EAAA3C,EAAAC,cAAC2C,EAAA,EAAD,CACEkB,GAAG,SACHlE,MAAM,SACN6C,UAAWA,EACXpC,gBAAgB,EAChBY,YAAY,mBACZgD,mBAAoB,CAAEC,gBAAiBzE,IAAoCsE,YAAa,CAAEI,aAAa,IACvG7D,KAAMC,IAAU6D,YAElBzB,EAAA3C,EAAAC,cAAC2C,EAAA,EAAD,CACEkB,GAAG,gBACHlE,MAAM,0BACN6C,UAAWA,EACXpC,gBAAgB,EAChBY,YAAY,8BACZgD,mBAAoB,CAAEC,gBAAiB/C,EAAuC4C,YAAa,CAAEI,aAAa,IAC1G7D,KAAMC,IAAU6D,kDC/E1B/E,EAAAC,EAAAC,EAAA,sBAAA8E,IAAO,MAEMA,EAAW,CAAEzE,MAAO,6BAA8BD,MAAO,YAEhE2E,EAAoB,CAJJ,CAAE1E,MAAO,4CAA6CD,MAAO,UAC1D,CAAEC,MAAO,qDAAmDD,MAAO,aAG9C0E,GAE/BC,mFCyDAC,IAvDgCzE,IAE3CC,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,GACMN,EADN,CAEEO,gBAAgB,EAChBI,iBAAgBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAA,GACXL,EAAMW,kBADK,IAEdE,QAAS,CACP,CACEC,UAAW,SACXC,KAAM,aAER,CACED,UAAW,cACXC,KAAM,mBAER,CACED,UAAW,eACXC,KAAM,iBAER,CACED,UAAW,OACXC,KAAM,QAER,CACED,UAAW,MACXC,KAAM,OAER,CACED,UAAW,MACXC,KAAM,OAER,CACED,UAAW,KACXC,KAAM,MAER,CACED,UAAW,KACXC,KAAM,MAER,CACED,UAAW,QACXC,KAAM,UAGVC,aAAchB,EAAMgB,cAAgBC,IACpCC,aAAc,sBAEhBpB,MAAOE,EAAMF,MAAQE,EAAMF,MAAQ,UACnCqB,YAAanB,EAAMmB,YAAcnB,EAAMmB,YAAc,oBACrDX,KAAMC,IAAUC,mDC1DtBnB,EAAAC,EAAAC,EAAA,sBAAA+B,IAAA,IAAAkD,EAAAnF,EAAA,GAAAoF,EAAApF,EAAA,KAyDO,SAASiC,EAA4BuB,EAAgB,KAAM6B,EAA6B,KAAMC,EAA4B,MAC/H,MAAO,CACLC,WAAYC,IAAQlF,MACpBmF,qBAAsB,GACtBC,WAAY,CACVC,OAAQ,GACRC,QAASpC,EACTqC,cAAe,IAEjBC,uBAAuB,EACvBC,UAAU,EACVC,sBAAsB,EACtBC,oCAAoC,EACpCZ,qBACAC,oBACAY,uBAAuB,EACvBC,kBAAkB,EAClBC,0BAA0B,EAC1BC,mBAAoB,GACpBC,gBAAiBtB,IAAS1E,MAC1BiG,aAAa,EACbC,kBAAkB,EAClBC,wBAAwB,EACxBC,UAAW,IACXlD,QACAmD,gBAAgB,sCCpEb,SAASrE,EAA4BsE,EAAyBC,EAAyB,MAC5F,MAAO,CACLC,SAAU,MACVC,aAAc,aACdC,eAAgB,eAChBtE,gCAAgC,EAChCuE,6BAA6B,EAC7BC,sCAAsC,EACtCC,sBAAsB,EACtBC,qBAAqB,EACrBC,cAAe,sBACfC,gBAAiB,wBACjBV,kBACAC,kBAbJ7G,EAAAC,EAAAC,EAAA,sBAAAoC,mNCTA,MAAMiF,EAA+B,CACnCC,QAAS,GACTC,MAAO,IAoDMC,MAjD+EjH,IAAS,MAAAsC,EAChCC,YAA2B,CAC9FC,cAAexC,EAAMkH,cAAgBJ,EACrCrE,KAAM,WAGFE,EAAY,CAChBiB,OAPmGtB,EAC7FsB,OAONuD,UARmG7E,EACrF6E,UAQdC,SATmG9E,EAC1E8E,SASzBC,SAVmG/E,EAChE+E,SAUnCC,kBAXmGhF,EACtDgF,mBAiB/C,OACEzE,EAAA3C,EAAAC,cAAC2C,EAAA,EAAD,CAAgBJ,aAAc1C,EAAM0C,aAAc6E,aAAcvH,EAAMuH,aAAc5E,UAAWA,EAAWe,eALrF,CAAC8D,EAAkBC,EAAsBC,IACvD,IAKL7E,EAAA3C,EAAAC,cAAC2C,EAAA,EAAD,CACEkB,GAAG,UACHzD,gBAAgB,EAChBoC,UAAStC,OAAAkB,EAAA,EAAAlB,QAAAkB,EAAA,EAAAlB,CAAA,GACJsC,GADI,IAEPgF,WAAY,CACVC,UAAU,KAGd9H,MAAM,UACNqB,YAAY,8BAGd0B,EAAA3C,EAAAC,cAAC2C,EAAA,EAAD,CACEkB,GAAG,QACHzD,gBAAgB,EAChBoC,UAAStC,OAAAkB,EAAA,EAAAlB,QAAAkB,EAAA,EAAAlB,CAAA,GACJsC,GADI,IAEPgF,WAAY,CACVC,UAAU,KAGd9H,MAAM,SACNqB,YAAY,kCCsCL0G,MA/EyB7H,IActC,OACE6C,EAAA3C,EAAAC,cAAA0C,EAAA3C,EAAA4H,SAAA,KACEjF,EAAA3C,EAAAC,cAAA,uCACA0C,EAAA3C,EAAAC,cAAC2C,EAAA,EAAD,CACEkB,GAAG,qBACHlE,MAAM,UACNS,gBAAgB,EAChBY,YAAY,UACZwB,UAAStC,OAAAkB,EAAA,EAAAlB,QAAAkB,EAAA,EAAAlB,CAAA,GACJL,EAAM2C,WADF,IAEPgF,WAAY,CACVC,UAAU,OAKhB/E,EAAA3C,EAAAC,cAAC2C,EAAA,EAADzC,OAAAC,OAAA,CACEO,QA9B0B,CAC9B,CACEC,UAAW,UACXiH,MAAM,EACNhH,KAAM,WAER,CACED,UAAW,QACXiH,MAAM,EACNhH,KAAM,WAsBJgC,MAAM,yBACNiF,WAAYf,EACZgB,SAAS,QACTtF,UAAW3C,EAAM2C,UACjBuF,SAAS,4BACLlI,IAGN6C,EAAA3C,EAAAC,cAAA,yBACA0C,EAAA3C,EAAAC,cAACgI,EAAA,EAAD,CAAKC,UAAU,QACbvF,EAAA3C,EAAAC,cAACkI,EAAA,EAAD,KACExF,EAAA3C,EAAAC,cAACmI,EAAA,EAAD,CACE9H,KAAK,SACLwD,GAAG,4BACHuE,KAAK,uCACLzI,MAAM,iBACN0I,SAAUxI,EAAM2C,UAAUyE,YAG9BvE,EAAA3C,EAAAC,cAACkI,EAAA,EAAD,KACExF,EAAA3C,EAAAC,cAACmI,EAAA,EAAD,CACE9H,KAAK,SACLwD,GAAG,2BACHuE,KAAK,sCACLzI,MAAM,oBACN0I,SAAUxI,EAAM2C,UAAUyE,aAKhCvE,EAAA3C,EAAAC,cAAC2C,EAAA,EAAD,CACEkB,GAAG,sBACHlE,MAAM,WACNS,gBAAgB,EAChBY,YAAY,WACZwB,UAAStC,OAAAkB,EAAA,EAAAlB,QAAAkB,EAAA,EAAAlB,CAAA,GACJL,EAAM2C,WADF,IAEPgF,WAAY,CACVc,UAAW,OAGfjI,KAAMC,IAAUiI,uBC6WTC,MAzZuB3I,IACpC,MAAMmC,EAAgBC,YAAmCC,GAASA,EAAMF,eAD3ByG,EAEXC,mBAAS,GAFEC,EAAAzI,OAAA0I,EAAA,EAAA1I,CAAAuI,EAAA,GAEtCI,EAFsCF,EAAA,GAE3BG,EAF2BH,EAAA,GAI7CI,oBACE,KAAM,MAAAC,EACsCnJ,EAAMyD,kBAAxC2F,EADJD,EACIC,cAAehD,EADnB+C,EACmB/C,eACvB,IAAIiD,EAAgBhJ,OAAAkB,EAAA,EAAAlB,QAAAkB,EAAA,EAAAlB,CAAA,GACfL,EAAMwD,mBADS,IAElBsB,WAAYsE,GAAiBA,EAAcE,OAAS,EAAIF,EAAc,GAAKrE,IAAQlF,MACnF0J,aAAcpH,EAAcc,gBAAgBuG,QAAQxF,GACpDiC,UAAW,IAEb,MAAMwD,EAAUC,eACVC,EAAUD,eAChB,OAAQtD,GACN,KAAKwD,IAAK/J,MACRwJ,EAAWhJ,OAAAkB,EAAA,EAAAlB,QAAAkB,EAAA,EAAAlB,CAAA,GACNgJ,GADM,IAETxF,UAAWgG,aAAWJ,EAAQK,YAEhC,MACF,KAAKhI,IAAMjC,MACTwJ,EAAWhJ,OAAAkB,EAAA,EAAAlB,QAAAkB,EAAA,EAAAlB,CAAA,GACNgJ,GADM,IAETvF,QAAS+F,aAAWF,EAAQI,MAAM,SAASD,UAC3CjG,UAAWgG,aAAWJ,EAAQK,YAEhC,MACF,KAAKE,IAAUnK,MACbwJ,EAAWhJ,OAAAkB,EAAA,EAAAlB,QAAAkB,EAAA,EAAAlB,CAAA,GACNgJ,GADM,IAETY,kBAAmBC,aAAOT,EAAQK,SAAUK,OAE9C,MACF,KAAKC,IAAWvK,MACdwJ,EAAWhJ,OAAAkB,EAAA,EAAAlB,QAAAkB,EAAA,EAAAlB,CAAA,GACNgJ,GADM,IAETgB,gBAAiBH,aAAOT,EAAQK,SAAUK,KAC1CF,kBAAmBC,aAAOP,EAAQG,SAAUK,OAE9C,MACF,KAAKG,IAAIzK,MACPwJ,EAAWhJ,OAAAkB,EAAA,EAAAlB,QAAAkB,EAAA,EAAAlB,CAAA,GACNgJ,GADM,IAETkB,IAAKC,OAAOf,EAAQgB,UAM1BzK,EAAM2C,UAAU+H,MAAMrB,IAExB,CAACrJ,EAAMyD,kBAAmBtB,EAAcc,gBAAgBuG,UAG1D,MAAMmB,EAAY,EAAGC,aAAyB,MACpCC,EAAaD,EAAbC,SACJ7B,IAAc6B,GAChB5B,EAAa4B,IAQXC,EACJjI,EAAA3C,EAAAC,cAAC2C,EAAA,EAAD,CACEkB,GAAG,YACHlE,MAAOE,EAAMyD,kBAAkB8C,eAC/BhG,gBAAgB,EAChBoC,UAAStC,OAAAkB,EAAA,EAAAlB,QAAAkB,EAAA,EAAAlB,CAAA,GAAOL,EAAM2C,WAAb,IAAwBgF,WAAY,CAAEC,SAAU5H,EAAMyD,kBAAkBzB,qBACjFxB,KAAMC,IAAUmJ,OAIdmB,EAAgB/K,EAAMyD,kBAAkB2C,iBAAmBwD,IAAK/J,MAAQiL,EAAc,KAEtFE,EACJhL,EAAMyD,kBAAkB2C,iBAAmBtE,IAAMjC,MAC/CgD,EAAA3C,EAAAC,cAAA0C,EAAA3C,EAAA4H,SAAA,KACGgD,EAEDjI,EAAA3C,EAAAC,cAAC2C,EAAA,EAAD,CACEkB,GAAG,UACHlE,MAAOE,EAAMyD,kBAAkB6C,aAC/B/F,gBAAgB,EAChBoC,UAAStC,OAAAkB,EAAA,EAAAlB,QAAAkB,EAAA,EAAAlB,CAAA,GAAOL,EAAM2C,WAAb,IAAwBgF,WAAY,CAAEC,SAAU5H,EAAMyD,kBAAkB1B,mBACjFvB,KAAMC,IAAUmJ,QAGlB,KAEAqB,EACJpI,EAAA3C,EAAAC,cAAC2C,EAAA,EAAD,CACEkB,GAAG,oBACHlE,MAAOE,EAAMyD,kBAAkBoD,gBAC/BtG,gBAAgB,EAChBoC,UAAStC,OAAAkB,EAAA,EAAAlB,QAAAkB,EAAA,EAAAlB,CAAA,GAAOL,EAAM2C,WAAb,IAAwBgF,WAAY,CAAEC,SAAU5H,EAAMyD,kBAAkByH,sBACjF1K,KAAMC,IAAUuJ,YAIdmB,EAAqBnL,EAAMyD,kBAAkB2C,iBAAmB4D,IAAUnK,MAAQoL,EAAmB,KAErGG,EACJpL,EAAMyD,kBAAkB2C,iBAAmBgE,IAAWvK,MACpDgD,EAAA3C,EAAAC,cAAA0C,EAAA3C,EAAA4H,SAAA,KACGmD,EAEDpI,EAAA3C,EAAAC,cAAC2C,EAAA,EAAD,CACEkB,GAAG,kBACHlE,MAAOE,EAAMyD,kBAAkBmD,cAC/BrG,gBAAgB,EAChBoC,UAAStC,OAAAkB,EAAA,EAAAlB,QAAAkB,EAAA,EAAAlB,CAAA,GAAOL,EAAM2C,WAAb,IAAwBgF,WAAY,CAAEC,SAAU5H,EAAMyD,kBAAkB4H,oBACjF7K,KAAMC,IAAUuJ,aAGlB,KAEAsB,EACJtL,EAAMyD,kBAAkB2C,iBAAmBkE,IAAIzK,MAC7CgD,EAAA3C,EAAAC,cAAC2C,EAAA,EAAD,CACEkB,GAAG,MACHlE,MAAOE,EAAMyD,kBAAkB4C,SAC/B9F,gBAAgB,EAChBoC,UAAStC,OAAAkB,EAAA,EAAAlB,QAAAkB,EAAA,EAAAlB,CAAA,GAAOL,EAAM2C,WAAb,IAAwBgF,WAAY,CAAEC,SAAU5H,EAAMyD,kBAAkB8H,eACjFC,iBAAkB,CAAEC,KAAM,QAC1BjL,KAAMC,IAAUiL,OAEhB,KAEAC,EAAqB3L,EAAMyD,kBAAkBkD,oBACjD9D,EAAA3C,EAAAC,cAAC2C,EAAA,EAAD,CACEkB,GAAG,YACHlE,MAAM,oBACNS,gBAAgB,EAChBY,YAAY,oBACZwB,UAAStC,OAAAkB,EAAA,EAAAlB,QAAAkB,EAAA,EAAAlB,CAAA,GACJL,EAAM2C,WADF,IAEPgF,WAAY,CACViE,IAAK,EACLhE,UAAU,KAGdpH,KAAMC,IAAUoL,SAEhB,KAEEC,EAA6B9L,EAAMyD,kBAAkBsI,oCACzDlJ,EAAA3C,EAAAC,cAAA0C,EAAA3C,EAAA4H,SAAA,KACEjF,EAAA3C,EAAAC,cAACgI,EAAA,EAAD,CAAKC,UAAU,sBACbvF,EAAA3C,EAAAC,cAACkI,EAAA,EAAD,CAAK2D,GAAI,GACPnJ,EAAA3C,EAAAC,cAACmI,EAAA,EAAD,CAAa9H,KAAK,SAASwD,GAAG,mBAAmBuE,KAAK,mBAAmBzI,MAAM,qBAAqB0I,SAAUxI,EAAM2C,UAAUyE,YAEhIvE,EAAA3C,EAAAC,cAACkI,EAAA,EAAD,KACExF,EAAA3C,EAAAC,cAACsE,EAAA,EAAD,CACE9B,UAAW3C,EAAM2C,UACjB7C,MAAM,aACNqB,YAAY,sCACZ6C,GAAG,uBACHzD,gBAAgB,EAChB0L,WAAY,CAAEC,SAAUlM,EAAM2C,UAAUwE,YAAYgF,iBAAkBC,MAAO,CAAEC,aAAc,KAC7F1L,iBAAkB,CAAE2L,KAAM,KAAMrI,YAAa,CAAEC,SAAS,SAK9D,KAEEqI,EAA4BvM,EAAMyD,kBAAkB+I,uBACxD3J,EAAA3C,EAAAC,cAACgI,EAAA,EAAD,CAAKC,UAAU,QACbvF,EAAA3C,EAAAC,cAACkI,EAAA,EAAD,KACExF,EAAA3C,EAAAC,cAACmI,EAAA,EAAD,CACE9H,KAAK,SACLwD,GAAG,mBACHuE,KAAK,mBACLzI,MAAM,8CACN0I,SAAUxI,EAAM2C,UAAUyE,aAI9B,KAEEqF,EAAqBzM,EAAMyD,kBAAkB+C,4BACjD3D,EAAA3C,EAAAC,cAACgI,EAAA,EAAD,CAAKC,UAAU,QACbvF,EAAA3C,EAAAC,cAACkI,EAAA,EAAD,KACExF,EAAA3C,EAAAC,cAACmI,EAAA,EAAD,CAAa9H,KAAK,SAASwD,GAAG,kBAAkBuE,KAAK,kBAAkBzI,MAAM,wBAAwB0I,SAAUxI,EAAM2C,UAAUyE,aAGjI,KAEEsF,EAAmB1M,EAAMyD,kBAAkBgD,qCAC/C5D,EAAA3C,EAAAC,cAACgI,EAAA,EAAD,CAAKC,UAAU,QACbvF,EAAA3C,EAAAC,cAACkI,EAAA,EAAD,KACExF,EAAA3C,EAAAC,cAACmI,EAAA,EAAD,CACE9H,KAAK,SACLwD,GAAG,yBACHuE,KAAK,yBACLzI,MAAM,iCACN0I,SAAUxI,EAAM2C,UAAUyE,aAI9B,KAEEuF,EAAwB3M,EAAMyD,kBAAkBxB,+BACpDY,EAAA3C,EAAAC,cAAA0C,EAAA3C,EAAA4H,SAAA,KACEjF,EAAA3C,EAAAC,cAACgI,EAAA,EAAD,CAAKC,UAAU,QACbvF,EAAA3C,EAAAC,cAACkI,EAAA,EAAD,KACExF,EAAA3C,EAAAC,cAACmI,EAAA,EAAD,CACE9H,KAAK,SACLwD,GAAG,mBACHuE,KAAK,mBACLzI,MAAM,+BACN0I,SAAUxI,EAAM2C,UAAUyE,aAKhCvE,EAAA3C,EAAAC,cAACgI,EAAA,EAAD,CAAKC,UAAU,QACbvF,EAAA3C,EAAAC,cAACkI,EAAA,EAAD,KACExF,EAAA3C,EAAAC,cAACmI,EAAA,EAAD,CACE9H,KAAK,SACLwD,GAAG,wBACHuE,KAAK,wBACLzI,MAAM,+BACN0I,SAAUxI,EAAM2C,UAAUyE,cAKhC,KAEEwF,EAA6B5M,EAAMwD,kBAAkB6B,sBACzDxC,EAAA3C,EAAAC,cAAA0C,EAAA3C,EAAA4H,SAAA,KACG9H,EAAMyD,kBAAkBoJ,gCACvBhK,EAAA3C,EAAAC,cAACgI,EAAA,EAAD,CAAKC,UAAU,QACbvF,EAAA3C,EAAAC,cAACkI,EAAA,EAAD,KACExF,EAAA3C,EAAAC,cAACmI,EAAA,EAAD,CACE9H,KAAK,SACLwD,GAAG,2BACHuE,KAAK,2BACLzI,MAAM,4DACN0I,SAAUxI,EAAM2C,UAAUyE,aAMlCvE,EAAA3C,EAAAC,cAAC2C,EAAA,EAAD,CACEkB,GAAG,kBACHlE,MAAM,sCACNS,gBAAgB,EAChBY,YAAY,mDACZwB,UAAStC,OAAAkB,EAAA,EAAAlB,QAAAkB,EAAA,EAAAlB,CAAA,GAAOL,EAAM2C,WAAb,IAAwBgF,WAAY,CAAEC,UAAU,KACzDzD,mBAAoB,CAClBC,gBAAiBI,IACjBP,YAAa,CAAEI,aAAa,IAE9B7D,KAAMC,IAAU6D,aAGlB,KAEJ,OACEzB,EAAA3C,EAAAC,cAAC2C,EAAA,EAAD,CAAWH,UAAW3C,EAAM2C,UAAWmK,UAAW9M,EAAM+M,oBAAqB,GAC3ElK,EAAA3C,EAAAC,cAAC2C,EAAA,EAAD,CAAeC,MAAM,kDACnBF,EAAA3C,EAAAC,cAAA0C,EAAA3C,EAAA4H,SAAA,KACEjF,EAAA3C,EAAAC,cAAC6M,EAAA,EAAD,CAAKC,MAAM,GACTpK,EAAA3C,EAAAC,cAAC+M,EAAA,EAAD,KACErK,EAAA3C,EAAAC,cAACgN,EAAA,EAAD,CAAS/E,UAAWgF,YAAG,CAAEC,OAAsB,IAAdrE,IAAoB6B,SAAU,EAAGyC,QAAS3C,GAA3E,+BAIF9H,EAAA3C,EAAAC,cAAC+M,EAAA,EAAD,KACErK,EAAA3C,EAAAC,cAACgN,EAAA,EAAD,CACE/E,UAAWgF,YAAG,CAAEC,OAAsB,IAAdrE,IACxB6B,SAAU,EACVyC,QAAS3C,EACTuB,UAAWlM,EAAMyD,kBAAkBiD,sBAJrC,oBASF7D,EAAA3C,EAAAC,cAAC+M,EAAA,EAAD,KACErK,EAAA3C,EAAAC,cAACgN,EAAA,EAAD,CAAS/E,UAAWgF,YAAG,CAAEC,OAAsB,IAAdrE,IAAoB6B,SAAU,EAAGyC,QAAS3C,EAAWuB,UAAU,GAAhG,aAMJrJ,EAAA3C,EAAAC,cAACoN,EAAA,EAAD,CAAYnF,UAAU,OAAOY,UAAWA,GACtCnG,EAAA3C,EAAAC,cAACqN,EAAA,EAAD,CAASC,MAAO,EAAGrF,UAAU,YAC3BvF,EAAA3C,EAAAC,cAAC2C,EAAA,EAAD,CAAkBH,UAAW3C,EAAM2C,UAAWqB,GAAG,eAAe0J,QAAQ,IACxE7K,EAAA3C,EAAAC,cAAC2C,EAAA,EAAD,CACEkB,GAAG,QACHlE,MAAM,YACNS,gBAAgB,EAChBY,YAAY,YACZwM,WAAW,WACXC,mBA/OO,KACnB5N,EAAM2C,UAAU0E,SAAS,QAASrH,EAAMwD,kBAAkBT,OAAO,IA+OrDJ,UAAStC,OAAAkB,EAAA,EAAAlB,QAAAkB,EAAA,EAAAlB,CAAA,GACJL,EAAM2C,WADF,IAEPgF,WAAY,CACVc,UAAW,IACXoF,UAAW,EACXjG,UAAU,OAKf+D,EAEAG,EAEAS,EAEAE,EAEAG,EAEAF,EAEAC,EAEA5B,EACAC,EACAG,EACAC,EACAE,EAEDzI,EAAA3C,EAAAC,cAAA,WAEA0C,EAAA3C,EAAAC,cAACgI,EAAA,EAAD,CAAKC,UAAU,QACbvF,EAAA3C,EAAAC,cAACkI,EAAA,EAAD,KACExF,EAAA3C,EAAAC,cAACmI,EAAA,EAAD,CACE9H,KAAK,SACLwD,GAAG,uBACHuE,KAAK,uBACLzI,MAAM,sBACN0I,SAAUxI,EAAM2C,UAAUyE,aAKhCvE,EAAA3C,EAAAC,cAACgI,EAAA,EAAD,CAAKC,UAAU,QACbvF,EAAA3C,EAAAC,cAACkI,EAAA,EAAD,KACExF,EAAA3C,EAAAC,cAACmI,EAAA,EAAD,CACE9H,KAAK,SACLwD,GAAG,iBACHuE,KAAK,iBACLzI,MAAM,2BACN0I,SAAUxI,EAAM2C,UAAUyE,aAKhCvE,EAAA3C,EAAAC,cAAC2C,EAAA,EAAD,CACEkB,GAAG,aACHlE,MAAM,uBACNS,gBAAgB,EAChBY,YAAY,mCACZwB,UAAStC,OAAAkB,EAAA,EAAAlB,QAAAkB,EAAA,EAAAlB,CAAA,GAAOL,EAAM2C,WAAb,IAAwBgF,WAAY,CAAEC,UAAU,KACzDzD,mBAAoB,CAClBC,gBAAiBpE,EAAMyD,kBAAkB2F,cAAgBpJ,EAAMyD,kBAAkB2F,cAAgB0E,IACjG7J,YAAa,CAAEI,aAAa,IAE9B7D,KAAMC,IAAU6D,YAGlBzB,EAAA3C,EAAAC,cAACgI,EAAA,EAAD,CAAKC,UAAU,QACbvF,EAAA3C,EAAAC,cAACkI,EAAA,EAAD,KACExF,EAAA3C,EAAAC,cAACmI,EAAA,EAAD,CACE9H,KAAK,SACLwD,GAAG,iBACHuE,KAAK,iBACLzI,MAAM,oBACN0I,SAAUxI,EAAM2C,UAAUyE,aAKhCvE,EAAA3C,EAAAC,cAACgI,EAAA,EAAD,CAAKC,UAAU,QACbvF,EAAA3C,EAAAC,cAACkI,EAAA,EAAD,KACExF,EAAA3C,EAAAC,cAACmI,EAAA,EAAD,CACE9H,KAAK,SACLwD,GAAG,oBACHuE,KAAK,oBACLzI,MAAM,wBACN0I,SAAUxI,EAAM2C,UAAUyE,cAKlCvE,EAAA3C,EAAAC,cAACqN,EAAA,EAAD,CAASC,MAAO,EAAGrF,UAAU,YAC3BvF,EAAA3C,EAAAC,cAAC4N,EAAD,CAAYpL,UAAW3C,EAAM2C,UAAWqL,eAAgBhO,EAAMwD,kBAAkBT,SAElFF,EAAA3C,EAAAC,cAACqN,EAAA,EAAD,CAASC,MAAO,EAAGrF,UAAU,kBClU1B/E,IAhEyBrD,KAAS,MACvCiO,EAAuB7L,YAAmCC,GAASA,EAAMF,eAAzE8L,mBACFC,EAAWC,cAUjB,MAkBMC,EAAgBC,IAChBrO,EAAMsO,qBACRD,EAAOrO,EAAMsO,mBAAmBD,IAElCA,EAAKvI,aAAc,EAEnByI,YAAYF,EAAMrO,EAAMyD,kBAAkB0C,gBAAiB,CACzDqI,cAAgBC,GAAqBC,aAAUD,EAAUE,KACzDC,aAAc,KACPX,GACHC,EAASW,eAEP7O,EAAM8O,aACR9O,EAAM8O,kBAMd,OACEjM,EAAA3C,EAAAC,cAAC4O,EAAA,EAAD,CAAMC,YAAY,GACfhP,EAAMiP,SACPpM,EAAA3C,EAAAC,cAAC+O,EAAD,CACE1L,kBAAmBxD,EAAMwD,kBACzBC,kBAAmBzD,EAAMyD,kBACzBd,UAAW3C,EAAM2C,UACjBoK,kBAAmB/M,EAAM+M,oBAG3BlK,EAAA3C,EAAAC,cAAC2C,EAAA,EAAD,CAAYJ,aAAc1C,EAAM0C,aA/CnB,CAAC2L,EAAWc,KAC3BA,EAAMC,iBACN,IAAIC,EAAQ,GAIZ,GAHIrP,EAAM0D,iBACR2L,EAAQrP,EAAM0D,eAAe2K,IAE3BgB,GAASA,EAAM/F,OAAQ,CACzB,MAAMgG,EAAqB,CACzBC,QAAS1M,EAAA3C,EAAAC,cAAC2C,EAAA,EAAD,CAAUuM,MAAOA,IAC1B7O,KAAMgP,IAAUb,OAElBc,KAAaC,KAAKC,IAAcC,KAAMN,QAEtCZ,aAAU,mIAAqHmB,KAC/HzB,EAAaC,KAiC2CyB,YAvD5D,WACM9P,EAAM8P,YACR9P,EAAM8P,cACG9P,EAAMuD,YACfwM,aAAc/P,EAAMuD,WAAYvD,EAAMuD,WAAWyM,iDC5DhD,SAAS7M,EAAqBF,GACnC,IAAIgN,EAAS,KAOb,OANKhN,EAAgBiN,eAAeC,oBAClCF,EACE,gKAIGA,EART1Q,EAAAC,EAAAC,EAAA,sBAAA0D,sCCKA5D,EAAAC,EAAAC,EAAA,sBAAAwB,IAAO,MAAMA,EAAa","file":"static/js/89.c7c2a460.chunk.js","sourcesContent":["export const TODAS = { value: 'TODAS', label: 'Todas' };\r\nexport const SOMENTE_A_PAGAR = { value: 'SOMENTE_A_PAGAR', label: 'Somente contas a pagar' };\r\nexport const SOMENTE_PAGAS = { value: 'SOMENTE_PAGAS', label: 'Somente contas pagas' };\r\nexport const BAIXADOS = { value: 'BAIXADOS', label: 'Somente honorários e contas baixados ' };\r\nexport const NAO_BAIXADOS = { value: 'NAO_BAIXADOS', label: 'Somente honórarios e contas não baixados' };\r\n\r\nexport const STATUS_CONTA_PAGAR_MHO_ENUM_VALUES = [TODAS, SOMENTE_A_PAGAR, SOMENTE_PAGAS];\r\n\r\nexport const FLUXO_CAIXA_VALUES = [TODAS, BAIXADOS, NAO_BAIXADOS];\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mho/historicoPagarMHO';\r\n\r\nconst HistoricoPagarMHOIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      type={InputType.INPUT_SEARCH}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'HistoricoPagarMHOSearchView',\r\n      }}\r\n      label=\"Histórico\"\r\n      placeholder=\"Informe o Histórico\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default HistoricoPagarMHOIS;\r\n","export const DATA_VENCIMENTO = { label: 'Data de Vencimento', value: '0' };\r\n\r\nexport const DATA_PAGAMENTO = { label: 'Data de Pagamento', value: '1' };\r\n\r\nexport const ORDENACAO_CONTA_PAGAR_MHO_ENUM_VALUES = [DATA_VENCIMENTO, DATA_PAGAMENTO];\r\n","import { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { HistoricoPagarMHO } from '../../../../../models/dtos/mho/historicoPagarMHO';\r\n\r\nexport interface ContaPagarMHORelRV extends ReportBasicValues {\r\n  historicos?: HistoricoPagarMHO[];\r\n  imprimirCaixa?: boolean;\r\n  /** Campo utiliza o statusContaPagarMHOEnum */\r\n  status?: string;\r\n  /** Campo utiliza o ordenacaoContaPagarRelEnum */\r\n  tipoOrdenacao?: string;\r\n  totalGeral?: number;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'contapagarmhorelrv';\r\nexport const REPORT_EVENT: string = 'printContaPagarMHO';\r\nexport const REPORT_TITLE: string = 'Contas a Pagar';\r\n","import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { DATES, InputGroupInline, InputType, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasAdministradoraMHO } from '../../../../../dependencies/administradoraMHODependency';\r\nimport { getDefaultReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport { DATA_VENCIMENTO, ORDENACAO_CONTA_PAGAR_MHO_ENUM_VALUES } from '../../../../../models/enumerated/mho/ordenacaoContaPagarRelEnum';\r\nimport { STATUS_CONTA_PAGAR_MHO_ENUM_VALUES, TODAS } from '../../../../../models/enumerated/mho/statusContaPagarMHOEnum';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport HistoricoPagarMHOIS from '../../../../components/mho/historicoPagarMHOIS/HistoricoPagarMHOIS';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { CLASS_KEY, ContaPagarMHORelRV, REPORT_EVENT, REPORT_TITLE } from './ContaPagarMHORelRV';\r\n\r\nconst DEFAULT_VALUES: ContaPagarMHORelRV = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n  historicos: [],\r\n  status: TODAS.value,\r\n  tipoOrdenacao: DATA_VENCIMENTO.value,\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT, DATES.value),\r\n  dtFinalRequired: true,\r\n  dtInicialRequired: true,\r\n  exibirConfiguracaoDadosEmpresa: false,\r\n};\r\n\r\nconst ContaPagarMHOReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const { handleSubmit, ...formProps } = useForm<ContaPagarMHORelRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n\r\n  const validateExtras = (formData: ContaPagarMHORelRV): string[] => {\r\n    const errors = [];\r\n    if (formData.dtInicial > formData.dtFinal) {\r\n      errors.push('A data inicial não pode ser maior ou igual a data final.');\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Contas a Pagar\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasAdministradoraMHO(globalReducer.globalParameter)]}\r\n      wikiId={1109}\r\n    >\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n        validateExtras={validateExtras}\r\n      >\r\n        <HistoricoPagarMHOIS formProps={formProps} id=\"historicos\" inputSearchProps={{ selectProps: { isMulti: true } }} />\r\n\r\n        <InputGroupInline\r\n          id=\"status\"\r\n          label=\"Status\"\r\n          formProps={formProps}\r\n          isPrependLabel={true}\r\n          placeholder=\"Informe o status\"\r\n          inputDropDownProps={{ optionsProvider: STATUS_CONTA_PAGAR_MHO_ENUM_VALUES, selectProps: { isClearable: false } }}\r\n          type={InputType.DROP_DOWN}\r\n        />\r\n        <InputGroupInline\r\n          id=\"tipoOrdenacao\"\r\n          label=\"Tipo de Ordenação\"\r\n          formProps={formProps}\r\n          isPrependLabel={true}\r\n          placeholder=\"Informe o Tipo de Ordenacao\"\r\n          inputDropDownProps={{ optionsProvider: ORDENACAO_CONTA_PAGAR_MHO_ENUM_VALUES, selectProps: { isClearable: false } }}\r\n          type={InputType.DROP_DOWN}\r\n        />\r\n      </ReportForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default ContaPagarMHOReportView;\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasAdministradoraMHO(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.administradora.administradoraMHO) {\r\n    result =\r\n      'A administradora deve ser configurada no módulo de Honorários. Para configurar acesse:\\n' +\r\n      'Módulo Honorários > Configurações > Administradora';\r\n  }\r\n\r\n  return result;\r\n}\r\n","import { Basic } from 'summer';\r\n\r\nexport interface HistoricoPagarMHO extends Basic {\r\n  codigo?: number;\r\n  descricao?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mho.model.dto.historicopagarmho';\r\n"],"sourceRoot":""}
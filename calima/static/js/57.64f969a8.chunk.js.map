{"version":3,"sources":["views/pages/mfp/instituicaoEnsino/InstituicaoEnsinoEditView.tsx","models/dtos/ger/cepUF.ts","models/dtos/ger/cepLocalidade.ts","views/components/ger/cepUFIS/CepUFIS.tsx","views/components/ger/cepLocalidadeIS/CepLocalidadeIS.tsx","models/dtos/ger/cepBairro.ts","models/dtos/ger/cepLogradouro.ts","models/dtos/ger/cepTitulo.ts","views/components/ger/cepBairroIS/CepBairroIS.tsx","views/components/ger/cepTituloIS/CepTituloIS.tsx","views/components/ger/cepLogradouro/CepLogradouroIS.tsx","hooks/useCepManager.ts","models/dtos/mfp/instituicaoEnsino.ts"],"names":["InstituicaoEnsinoEditView","props","selectedItem","getSelectedItem","formProps","useForm","defaultValues","mode","cepManager","useCepManager","bairro","cep","localidade","nome","titulo","uf","useEffect","id","setTimeout","setValue","label","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_5__","title","editViewProps","dtoClassName","CLASS_NAME","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","Object","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","validation","maxLength","isPrependLabel","labelWidth","placeholder","tooltipProps","message","type","InputType","NUMBER","required","CNPJ","_components_ger_cepLogradouro_CepLogradouroIS__WEBPACK_IMPORTED_MODULE_10__","inputSearchProps","selectProps","isMulti","_components_ger_cepTituloIS_CepTituloIS__WEBPACK_IMPORTED_MODULE_11__","_components_ger_cepUFIS_CepUFIS__WEBPACK_IMPORTED_MODULE_12__","_components_ger_cepLocalidadeIS_CepLocalidadeIS__WEBPACK_IMPORTED_MODULE_9__","_components_ger_cepBairroIS_CepBairroIS__WEBPACK_IMPORTED_MODULE_8__","__webpack_require__","d","__webpack_exports__","CepUFIS","summer__WEBPACK_IMPORTED_MODULE_2__","assign","columns","dataField","text","searchViewId","INPUT_SEARCH","onChange","value","searchFilter","setFilter","CepLocalidadeIS","searchExpressionsFull","defaultExpressions","expressions","item","getFilter","CLASS_NAME_UF","push","fieldName","length","CepBairroIS","CLASS_NAME_LOCALIDADE","CepTituloIS","CepLogradouroIS","result","manage","CLASS_NAME_BAIRRO","fillForm","logradouro","keys","forEach","key","name","undefined","getProp","clearForm","reset"],"mappings":"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","file":"static/js/57.64f969a8.chunk.js","sourcesContent":["import React, { FC, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { EditForm, EditViewProps, getSelectedItem, InputGroupInline, InputType, WindowComponent } from 'summer';\r\nimport useCepManager from '../../../../hooks/useCepManager';\r\nimport { CLASS_NAME, InstituicaoEnsino } from '../../../../models/dtos/mfp/instituicaoEnsino';\r\nimport CepBairroIS from '../../../components/ger/cepBairroIS/CepBairroIS';\r\nimport CepLocalidadeIS from '../../../components/ger/cepLocalidadeIS/CepLocalidadeIS';\r\nimport CepLogradouroIS from '../../../components/ger/cepLogradouro/CepLogradouroIS';\r\nimport CepTituloIS from '../../../components/ger/cepTituloIS/CepTituloIS';\r\nimport CepUFIS from '../../../components/ger/cepUFIS/CepUFIS';\r\n\r\ninterface InstituicaoEnsinoEditViewProps extends EditViewProps<InstituicaoEnsino> {}\r\n\r\nconst labelWidth: number = 200;\r\n\r\nconst InstituicaoEnsinoEditView: FC<InstituicaoEnsinoEditViewProps & RouteComponentProps> = props => {\r\n  const selectedItem = getSelectedItem(props);\r\n  const formProps = useForm<InstituicaoEnsino>({ defaultValues: selectedItem, mode: 'onBlur' });\r\n  const cepManager = useCepManager(formProps, {\r\n    bairro: 'cepBairro',\r\n    cep: true,\r\n    localidade: 'cepLocalidade',\r\n    nome: 'logradouro',\r\n    titulo: 'cepTitulo',\r\n    uf: 'cepUf',\r\n  });\r\n\r\n  useEffect(\r\n    () => {\r\n      if (props.selectedItem && props.selectedItem.id) {\r\n        setTimeout(() => {\r\n          // @ts-ignore\r\n          formProps.setValue('cepFmt', { cep: props.selectedItem.cep, label: props.selectedItem.cep });\r\n        }, 500);\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  return (\r\n    <WindowComponent title=\"Manutenção de Instituição de Ensino\">\r\n      <EditForm formProps={formProps} editViewProps={props} dtoClassName={CLASS_NAME}>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { maxLength: 5 } }}\r\n              id=\"codigo\"\r\n              isPrependLabel={true}\r\n              labelWidth={labelWidth}\r\n              label=\"Código\"\r\n              placeholder=\"Informe o Código.\"\r\n              tooltipProps={{ message: 'Preenchimento Opcional - Codificação Automática' }}\r\n              type={InputType.NUMBER}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              id=\"cnpj\"\r\n              isPrependLabel={true}\r\n              labelWidth={labelWidth}\r\n              label=\"CNPJ\"\r\n              type={InputType.CNPJ}\r\n              tooltipProps={{ message: 'CNPJ da Instituição de Ensisno em que o aprendiz/estagiário encontra-se matriculado.' }}\r\n              placeholder=\"Informe o CNPJ.\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true, maxLength: 250 } }}\r\n              id=\"nome\"\r\n              isPrependLabel={true}\r\n              labelWidth={labelWidth}\r\n              label=\"Nome\"\r\n              placeholder=\"Informe o nome\"\r\n              tooltipProps={{ message: 'Instituição de Ensisno em que o aprendiz/estagiário encontra-se matriculado.' }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <CepLogradouroIS\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              label=\"CEP\"\r\n              placeholder=\"Informe o CEP\"\r\n              id=\"cepFmt\"\r\n              labelWidth={labelWidth}\r\n              isPrependLabel={true}\r\n              tooltipProps={{ message: 'CEP no qual a instituição de ensino está localizada.' }}\r\n              cepManager={cepManager}\r\n              inputSearchProps={{ selectProps: { isMulti: false } }}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <CepTituloIS\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              label=\"Tipo de Logradouro\"\r\n              placeholder=\"Informe o tipo de logradouro\"\r\n              id=\"cepTitulo\"\r\n              labelWidth={labelWidth}\r\n              isPrependLabel={true}\r\n              tooltipProps={{ message: 'Tipo de Logradouro no qual a instituição de ensino está localizada.' }}\r\n              inputSearchProps={{ selectProps: { isMulti: false } }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true, maxLength: 150 } }}\r\n              id=\"logradouro\"\r\n              isPrependLabel={true}\r\n              labelWidth={labelWidth}\r\n              tooltipProps={{ message: 'Logradouro no qual a instituição de ensino está localizada.' }}\r\n              label=\"Logradouro\"\r\n              placeholder=\"Informe o logradouro.\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true, maxLength: 10 } }}\r\n              id=\"numero\"\r\n              isPrependLabel={true}\r\n              labelWidth={labelWidth}\r\n              tooltipProps={{ message: 'Número do endereço no qual a instituição de ensino está localizada.' }}\r\n              label=\"Número\"\r\n              placeholder=\"Informe o número.\"\r\n              type={InputType.NUMBER}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true, maxLength: 60 } }}\r\n              id=\"complemento\"\r\n              isPrependLabel={true}\r\n              labelWidth={labelWidth}\r\n              tooltipProps={{ message: 'Complemento do endereço no qual a instituição de ensino está localizada.' }}\r\n              label=\"Complemento\"\r\n              placeholder=\"Informe o Complemento.\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <CepUFIS\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              id=\"cepUf\"\r\n              labelWidth={labelWidth}\r\n              isPrependLabel={true}\r\n              tooltipProps={{ message: 'UF do endereço no qual a instituição de ensino está localizada.' }}\r\n              inputSearchProps={{ selectProps: { isMulti: false } }}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <CepLocalidadeIS\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              id=\"cepLocalidade\"\r\n              labelWidth={labelWidth}\r\n              isPrependLabel={true}\r\n              tooltipProps={{ message: 'Cidade na qual a instituição de ensino está localizada.' }}\r\n              inputSearchProps={{ selectProps: { isMulti: false } }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <CepBairroIS\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              id=\"cepBairro\"\r\n              labelWidth={labelWidth}\r\n              isPrependLabel={true}\r\n              tooltipProps={{ message: 'Bairro no qual a instituição de ensino está localizada.' }}\r\n              inputSearchProps={{ selectProps: { isMulti: false } }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </EditForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default InstituicaoEnsinoEditView;\r\n","import { Basic } from 'summer';\r\nimport { CepPais } from './cepPais';\r\n\r\nexport interface CepUF extends Basic {\r\n  codigo?: string;\r\n  sigla?: string;\r\n  nome?: string;\r\n  exterior?: boolean;\r\n  pais?: CepPais;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.cepuf';\r\n","import { Basic } from 'summer';\r\nimport { CepUF } from './cepUF';\r\n\r\nexport interface CepLocalidade extends Basic {\r\n  nome?: string;\r\n  cep?: string;\r\n  tipo?: string;\r\n  codigoMunicipio?: string;\r\n  uf?: CepUF;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.ceplocalidade';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { SearchFilterProps } from '../../../../hooks/useSearchFilter';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepUF';\r\n\r\nexport interface CepUFISProps extends InputProps {\r\n  searchFilter?: SearchFilterProps;\r\n}\r\n\r\nconst CepUFIS: FC<CepUFISProps> = props => {\r\n  const onChange = value => {\r\n    if (props.searchFilter) {\r\n      props.searchFilter.setFilter(CLASS_NAME, value);\r\n    }\r\n    if (props.onChange) {\r\n      props.onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'sigla',\r\n            text: 'Sigla',\r\n          },\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'CepUFSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'UF'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a UF'}\r\n      type={InputType.INPUT_SEARCH}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepUFIS;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { SearchFilterProps } from '../../../../hooks/useSearchFilter';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepLocalidade';\r\nimport { CLASS_NAME as CLASS_NAME_UF } from '../../../../models/dtos/ger/cepUF';\r\n\r\nexport interface CepLocalidadeISProps extends InputProps {\r\n  searchFilter?: SearchFilterProps;\r\n}\r\n\r\nconst CepLocalidadeIS: FC<CepLocalidadeISProps> = props => {\r\n  const searchExpressionsFull = defaultExpressions => {\r\n    const expressions = [];\r\n\r\n    if (props.searchFilter) {\r\n      const item = props.searchFilter.getFilter(CLASS_NAME_UF);\r\n      if (item) {\r\n        expressions.push({\r\n          fieldName: 'uf.id',\r\n          value: item.id,\r\n        });\r\n      }\r\n    }\r\n\r\n    if (expressions.length > 0) {\r\n      expressions[0].expressions = defaultExpressions;\r\n    } else {\r\n      expressions.push(...defaultExpressions);\r\n    }\r\n\r\n    return expressions;\r\n  };\r\n\r\n  const onChange = value => {\r\n    if (props.searchFilter) {\r\n      props.searchFilter.setFilter(CLASS_NAME, value);\r\n    }\r\n    if (props.onChange) {\r\n      props.onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'cep',\r\n            text: 'CEP',\r\n          },\r\n          {\r\n            dataField: 'codigoMunicipio',\r\n            text: 'Código do Município',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressionsFull,\r\n        searchViewId: 'CepLocalidadeSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Cidade'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Cidade'}\r\n      type={InputType.INPUT_SEARCH}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepLocalidadeIS;\r\n","import { Basic } from 'summer';\r\nimport { CepLocalidade } from './cepLocalidade';\r\n\r\nexport interface CepBairro extends Basic {\r\n  bairro?: string;\r\n  localidade?: CepLocalidade;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.cepbairro';\r\n","import { Basic } from 'summer';\r\nimport { CepBairro } from './cepBairro';\r\nimport { CepLocalidade } from './cepLocalidade';\r\nimport { CepTitulo } from './cepTitulo';\r\nimport { CepUF } from './cepUF';\r\n\r\nexport interface CepLogradouro extends Basic {\r\n  bairro?: CepBairro;\r\n  cep?: string;\r\n  complemento?: string;\r\n  localidade?: CepLocalidade;\r\n  nome?: string;\r\n  titulo?: CepTitulo;\r\n  uf?: CepUF;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.ceplogradouro';\r\n","import { Basic } from 'summer';\r\n\r\nexport interface CepTitulo extends Basic {\r\n  nome?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.ceptitulo';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { SearchFilterProps } from '../../../../hooks/useSearchFilter';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepBairro';\r\nimport { CLASS_NAME as CLASS_NAME_LOCALIDADE } from '../../../../models/dtos/ger/cepLocalidade';\r\nimport { CLASS_NAME as CLASS_NAME_UF } from '../../../../models/dtos/ger/cepUF';\r\n\r\nexport interface CepBairroISProps extends InputProps {\r\n  searchFilter?: SearchFilterProps;\r\n}\r\n\r\nconst CepBairroIS: FC<CepBairroISProps> = props => {\r\n  const searchExpressionsFull = defaultExpressions => {\r\n    let expressions = [];\r\n\r\n    if (props.searchFilter) {\r\n      const localidade = props.searchFilter.getFilter(CLASS_NAME_LOCALIDADE);\r\n      const uf = props.searchFilter.getFilter(CLASS_NAME_UF);\r\n      if (localidade) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'localidade.id',\r\n            value: localidade.id,\r\n          },\r\n        ];\r\n      } else if (uf) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'localidade.uf.id',\r\n            value: uf.id,\r\n          },\r\n        ];\r\n      }\r\n    }\r\n\r\n    if (expressions.length > 0) {\r\n      expressions[0].expressions = defaultExpressions;\r\n    } else {\r\n      expressions.push(...defaultExpressions);\r\n    }\r\n\r\n    return expressions;\r\n  };\r\n\r\n  const onChange = value => {\r\n    if (props.searchFilter) {\r\n      props.searchFilter.setFilter(CLASS_NAME, value);\r\n    }\r\n    if (props.onChange) {\r\n      props.onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'bairro',\r\n            text: 'Nome do Bairro',\r\n          },\r\n          {\r\n            dataField: 'localidade.nome',\r\n            text: 'Nome da cidade',\r\n          },\r\n          {\r\n            dataField: 'localidade.uf.sigla',\r\n            text: 'Sigla da UF',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressionsFull,\r\n        searchViewId: 'CepBairroSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Bairro'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Bairro'}\r\n      type={InputType.INPUT_SEARCH}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepBairroIS;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepTitulo';\r\n\r\nconst CepTituloIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'CepTituloSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Tipo'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Tipo de Logradouro'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepTituloIS;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CepManagerProps } from '../../../../hooks/useCepManager';\r\nimport { SearchFilterProps } from '../../../../hooks/useSearchFilter';\r\nimport { CLASS_NAME as CLASS_NAME_BAIRRO } from '../../../../models/dtos/ger/cepBairro';\r\nimport { CLASS_NAME as CLASS_NAME_LOCALIDADE } from '../../../../models/dtos/ger/cepLocalidade';\r\nimport { CepLogradouro, CLASS_NAME } from '../../../../models/dtos/ger/cepLogradouro';\r\nimport { CLASS_NAME as CLASS_NAME_UF } from '../../../../models/dtos/ger/cepUF';\r\n\r\nexport interface CepLogradouroProps {\r\n  cepManager?: CepManagerProps;\r\n  searchFilter?: SearchFilterProps;\r\n}\r\n\r\nconst CepLogradouroIS: FC<InputProps & CepLogradouroProps> = props => {\r\n  const searchExpressionsFull = defaultExpressions => {\r\n    let expressions = [];\r\n\r\n    if (props.searchFilter) {\r\n      const bairro = props.searchFilter.getFilter(CLASS_NAME_BAIRRO);\r\n      const localidade = props.searchFilter.getFilter(CLASS_NAME_LOCALIDADE);\r\n      const uf = props.searchFilter.getFilter(CLASS_NAME_UF);\r\n      if (bairro) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'bairro.id',\r\n            value: bairro.id,\r\n          },\r\n        ];\r\n      } else if (localidade) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'localidade.id',\r\n            value: localidade.id,\r\n          },\r\n        ];\r\n      } else if (uf) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'uf.id',\r\n            value: uf.id,\r\n          },\r\n        ];\r\n      }\r\n    }\r\n\r\n    if (expressions.length > 0) {\r\n      expressions[0].expressions = defaultExpressions;\r\n    } else {\r\n      expressions.push(...defaultExpressions);\r\n    }\r\n\r\n    return expressions;\r\n  };\r\n\r\n  const onChangeHandle = (result: CepLogradouro) => {\r\n    if (props.cepManager) {\r\n      props.cepManager.manage(result);\r\n    }\r\n    if (props.searchFilter) {\r\n      props.searchFilter.setFilter(CLASS_NAME, result);\r\n    }\r\n    if (props.onChange) {\r\n      props.onChange(result);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      onChange={onChangeHandle}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'bairro.bairro',\r\n            text: 'Bairro',\r\n          },\r\n          {\r\n            dataField: 'cep',\r\n            text: 'CEP',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressionsFull,\r\n        searchViewId: 'CepLogradouroSearchView',\r\n      }}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepLogradouroIS;\r\n","import { UseFormProps } from 'summer';\r\nimport { CepLogradouro } from '../models/dtos/ger/cepLogradouro';\r\n\r\nexport interface CepManagerOptions {\r\n  bairro?: boolean | string;\r\n  cep?: boolean | string;\r\n  localidade?: boolean | string;\r\n  nome?: boolean | string;\r\n  titulo?: boolean | string;\r\n  uf?: boolean | string;\r\n}\r\n\r\nexport interface CepManagerProps {\r\n  manage: (logradouro: CepLogradouro) => void;\r\n  reset: () => void;\r\n}\r\n\r\nconst useCepManager = (formProps: UseFormProps, props: CepManagerOptions): CepManagerProps => {\r\n  const getProp = (name: string): string => {\r\n    let result = null;\r\n\r\n    if (props[name] !== undefined) {\r\n      result = typeof props[name] === 'boolean' ? name : props[name];\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const fillForm = (logradouro: CepLogradouro) => {\r\n    const keyList = Object.keys(props);\r\n    keyList.forEach(key => {\r\n      const name = getProp(key);\r\n      if (name) {\r\n        formProps.setValue(name, logradouro[key]);\r\n      }\r\n    });\r\n  };\r\n\r\n  const clearForm = () => {\r\n    fillForm({\r\n      bairro: null,\r\n      cep: null,\r\n      localidade: null,\r\n      nome: null,\r\n      titulo: null,\r\n      uf: null,\r\n    });\r\n  };\r\n\r\n  return {\r\n    manage: (logradouro: CepLogradouro) => {\r\n      if (logradouro) {\r\n        fillForm(logradouro);\r\n      } else {\r\n        clearForm();\r\n      }\r\n    },\r\n    reset: () => clearForm(),\r\n  };\r\n};\r\n\r\nexport default useCepManager;\r\n","import { Basic } from 'summer';\r\nimport { CepBairro } from '../ger/cepBairro';\r\nimport { CepLocalidade } from '../ger/cepLocalidade';\r\nimport { CepTitulo } from '../ger/cepTitulo';\r\nimport { CepUF } from '../ger/cepUF';\r\n\r\nexport interface InstituicaoEnsino extends Basic {\r\n  nome?: string;\r\n  cnpj?: string;\r\n  codigo?: number;\r\n  logradouro?: string;\r\n  numero?: string;\r\n  complemento?: string;\r\n  cep?: string;\r\n  cepUf?: CepUF;\r\n  cepBairro?: CepBairro;\r\n  cepTitulo?: CepTitulo;\r\n  cepLocalidade?: CepLocalidade;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.instituicaoensino';\r\n"],"sourceRoot":""}
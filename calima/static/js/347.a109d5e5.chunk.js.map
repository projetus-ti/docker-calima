{"version":3,"sources":["models/dtos/mcg/planoContaAnaliseFinanceira.ts","views/pages/mcg/analiseFinanceira/AnaliseFinanceiraConfigView.tsx","dependencies/grupoEmpresaConfigDependency.ts","views/components/mcg/planoContaIS/PlanoContaIS.tsx","models/dtos/ger/planoConta.ts"],"names":["CLASS_NAME","AnaliseFinanceiraConfigView","props","globalReducer","useSelector","state","selectedItem","getSelectedItem","_useForm","useForm","defaultValues","mode","reset","formProps","Object","objectWithoutProperties","useEffect","planoContaAnaliseFinanceiraExample","empresa","id","globalParameter","findByExample","thenFunction","result","planoContaAtivoNaoCirculante","planoContaAtivoTotal","planoContaAtvCirculante","planoContaDisponivel","planoContaEstq","planoContaPassivoCirculante","planoContaPassivoNaoCirculante","planoContaPatrimonioLiquido","planoContaRLP","react_default","a","createElement","summer_esm","title","useGlobalParameter","dependencies","hasGrupoEmpresaConfig","wikiId","editViewProps","dtoClassName","hidden","PlanoContaIS","objectSpread2","validation","required","label","grupoEmpresaRaiz","grupoEmpresaConfig","grupoEmpresa","__webpack_require__","d","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_3__","assign","isPrependLabel","searchViewProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","filtroContaResultado","hideExtraFields","useDefaultSelectRow","inputSearchProps","columns","dataField","text","searchExpressions","expressions","analitica","alias","conditionalGroup","fieldName","value","sintetica","push","idGrupoPlanoConta","grupoPlanoConta","forEach","filtro","searchViewId","placeholder","type","InputType","INPUT_SEARCH"],"mappings":"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","file":"static/js/347.a109d5e5.chunk.js","sourcesContent":["import { Basic } from 'summer';\r\nimport { Empresa } from '../ger/empresa';\r\nimport { PlanoConta } from '../ger/planoConta';\r\n\r\nexport interface PlanoContaAnaliseFinanceira extends Basic {\r\n  empresa?: Empresa;\r\n  planoContaAtivoTotal?: PlanoConta;\r\n  planoContaAtvCirculante?: PlanoConta;\r\n  planoContaAtivoNaoCirculante?: PlanoConta;\r\n  planoContaPassivoCirculante?: PlanoConta;\r\n  planoContaPassivoNaoCirculante?: PlanoConta;\r\n  planoContaEstq?: PlanoConta;\r\n  planoContaRLP?: PlanoConta;\r\n  planoContaPatrimonioLiquido?: PlanoConta;\r\n  planoContaDisponivel?: PlanoConta;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mcg.model.dto.planocontaanalisefinanceira';\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { EditForm, EditViewProps, findByExample, getSelectedItem, InputGroupInline, WindowComponent } from 'summer';\r\nimport { hasGrupoEmpresaConfig } from '../../../../dependencies/grupoEmpresaConfigDependency';\r\nimport { CLASS_NAME, PlanoContaAnaliseFinanceira } from '../../../../models/dtos/mcg/planoContaAnaliseFinanceira';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport PlanoContaIS from '../../../components/mcg/planoContaIS/PlanoContaIS';\r\n\r\ninterface AnaliseFinanceiraConfigViewProps extends EditViewProps<PlanoContaAnaliseFinanceira> {}\r\n\r\nconst AnaliseFinanceiraConfigView: FC<AnaliseFinanceiraConfigViewProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const selectedItem = getSelectedItem(props);\r\n  const { reset, ...formProps } = useForm<PlanoContaAnaliseFinanceira>({\r\n    defaultValues: selectedItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  useEffect(\r\n    () => {\r\n      const planoContaAnaliseFinanceiraExample: PlanoContaAnaliseFinanceira = { empresa: { id: globalReducer.globalParameter.empresa.id } };\r\n\r\n      findByExample(planoContaAnaliseFinanceiraExample, CLASS_NAME, {\r\n        thenFunction: (result: PlanoContaAnaliseFinanceira) => {\r\n          reset({\r\n            empresa: { id: globalReducer.globalParameter.empresa.id },\r\n            id: result.id,\r\n            planoContaAtivoNaoCirculante: result.planoContaAtivoNaoCirculante,\r\n            planoContaAtivoTotal: result.planoContaAtivoTotal,\r\n            planoContaAtvCirculante: result.planoContaAtvCirculante,\r\n            planoContaDisponivel: result.planoContaDisponivel,\r\n            planoContaEstq: result.planoContaEstq,\r\n            planoContaPassivoCirculante: result.planoContaPassivoCirculante,\r\n            planoContaPassivoNaoCirculante: result.planoContaPassivoNaoCirculante,\r\n            planoContaPatrimonioLiquido: result.planoContaPatrimonioLiquido,\r\n            planoContaRLP: result.planoContaRLP,\r\n          });\r\n        },\r\n      });\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Classificação de Análise Financeira - Plano Contas\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasGrupoEmpresaConfig(globalReducer.globalParameter)]}\r\n      wikiId={1049}\r\n    >\r\n      <EditForm formProps={formProps} editViewProps={props} dtoClassName={CLASS_NAME}>\r\n        <InputGroupInline id=\"empresa.id\" formProps={formProps} hidden={true} />\r\n        <PlanoContaIS id=\"planoContaAtivoTotal\" formProps={{ ...formProps, validation: { required: true } }} label=\"Ativo Total\" />\r\n        <PlanoContaIS id=\"planoContaAtvCirculante\" formProps={{ ...formProps, validation: { required: true } }} label=\"Ativo Circulante\" />\r\n        <PlanoContaIS id=\"planoContaAtivoNaoCirculante\" formProps={{ ...formProps, validation: { required: true } }} label=\"Ativo NÃO Circulante\" />\r\n        <PlanoContaIS id=\"planoContaPassivoCirculante\" formProps={{ ...formProps, validation: { required: true } }} label=\"Passivo Circulante\" />\r\n        <PlanoContaIS\r\n          id=\"planoContaPassivoNaoCirculante\"\r\n          formProps={{ ...formProps, validation: { required: true } }}\r\n          label=\"Passivo NÃO Circulante\"\r\n        />\r\n        <PlanoContaIS id=\"planoContaEstq\" formProps={{ ...formProps, validation: { required: true } }} label=\"Estoques\" />\r\n        <PlanoContaIS id=\"planoContaRLP\" formProps={{ ...formProps, validation: { required: true } }} label=\"Realizável a Longo Prazo\" />\r\n        <PlanoContaIS id=\"planoContaPatrimonioLiquido\" formProps={{ ...formProps, validation: { required: true } }} label=\"Patrimônio Líquido\" />\r\n        <PlanoContaIS id=\"planoContaDisponivel\" formProps={{ ...formProps, validation: { required: true } }} label=\"Disponível\" />\r\n      </EditForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default AnaliseFinanceiraConfigView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasGrupoEmpresaConfig(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n\r\n  const msg: string =\r\n    'O Grupo de empresas não está configurado para a empresa selecionada. Para configurar acesse:\\n' +\r\n    'Modulo Principal > Manutenção > Configurações > Grupo de Empresa';\r\n\r\n  if (\r\n    !globalParameter.empresa ||\r\n    !globalParameter.empresa.grupoEmpresaRaiz.grupoEmpresaConfig ||\r\n    !globalParameter.empresa.grupoEmpresa.grupoEmpresaConfig\r\n  ) {\r\n    result = msg;\r\n  }\r\n\r\n  return result;\r\n}\r\n","import React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/planoConta';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\nexport interface PlanoContaInputSearchProps extends InputProps {\r\n  analitica?: boolean;\r\n  sintetica?: boolean;\r\n  idGrupoPlanoConta?: number;\r\n  filtroContaResultado?: SearchExpression[];\r\n}\r\n\r\nconst PlanoContaIS: FC<PlanoContaInputSearchProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  function getSearchExpression(): SearchExpression[] {\r\n    let expressions = [];\r\n    if (props.analitica) {\r\n      expressions = [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'analitica',\r\n          value: true,\r\n        },\r\n      ];\r\n    }\r\n    if (props.sintetica) {\r\n      expressions = [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'analitica',\r\n          value: false,\r\n        },\r\n      ];\r\n    }\r\n\r\n    expressions.push({\r\n      alias: 'g',\r\n      conditionalGroup: 'g_',\r\n      fieldName: 'grupoPlanoConta.id',\r\n      value: props.idGrupoPlanoConta || globalReducer.globalParameter.grupoPlanoConta.id,\r\n    });\r\n\r\n    if (props.filtroContaResultado) {\r\n      props.filtroContaResultado.forEach(filtro => {\r\n        expressions.push(filtro);\r\n      });\r\n    }\r\n\r\n    return expressions;\r\n  }\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      searchViewProps={{\r\n        ...props.searchViewProps,\r\n        filtroContaResultado: props.filtroContaResultado,\r\n        hideExtraFields: true,\r\n        useDefaultSelectRow: true,\r\n      }}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'conta',\r\n            text: 'Conta',\r\n          },\r\n          {\r\n            dataField: 'analitica',\r\n            text: 'Analítica',\r\n          },\r\n          {\r\n            dataField: 'codigoReduzido',\r\n            text: 'C.R.',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressions: getSearchExpression,\r\n        searchViewId: 'PlanoContaSearchView',\r\n      }} // TODO Implementar as regras do IS\r\n      label={props.label ? props.label : 'Plano de Contas'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Plano de Contas'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PlanoContaIS;\r\n","import { Basic } from 'summer';\r\nimport { PlanoContaMCG } from '../mcg/planoContaMCG';\r\nimport { SaldoAnterior } from '../mcg/saldoAnterior';\r\nimport { PlanoContaMCP } from '../mcp/planoContaMCP';\r\nimport { GrupoPlanoConta } from './grupoPlanoConta';\r\n\r\nexport interface PlanoConta extends Basic {\r\n  analitica?: boolean;\r\n  conta?: string;\r\n  codigoReduzido?: number;\r\n  descricao?: string;\r\n  grupoPlanoConta?: GrupoPlanoConta;\r\n  mcgPlanoConta?: PlanoContaMCG;\r\n  mcpPlanoConta?: PlanoContaMCP;\r\n  saldoAnterior?: SaldoAnterior;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.planoconta';\r\n"],"sourceRoot":""}
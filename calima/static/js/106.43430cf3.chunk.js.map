{"version":3,"sources":["views/pages/ger/logradouro/CepLogradouroEditView.tsx","models/dtos/ger/cepUF.ts","models/dtos/ger/cepLocalidade.ts","views/components/ger/cepUFIS/CepUFIS.tsx","views/components/ger/cepLocalidadeIS/CepLocalidadeIS.tsx","models/dtos/ger/cepBairro.ts","models/dtos/ger/cepLogradouro.ts","models/dtos/ger/cepTitulo.ts","views/components/ger/cepBairroIS/CepBairroIS.tsx","views/components/ger/cepTituloIS/CepTituloIS.tsx"],"names":["CepLogradouroEditView","props","selectedItem","getSelectedItem","formProps","useForm","defaultValues","mode","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_5__","title","editViewProps","dtoClassName","CLASS_NAME","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","id","isPrependLabel","Object","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","validation","required","maxLength","label","labelWidth","placeholder","_components_ger_cepUFIS_CepUFIS__WEBPACK_IMPORTED_MODULE_10__","inputSearchProps","selectProps","isMulti","_components_ger_cepLocalidadeIS_CepLocalidadeIS__WEBPACK_IMPORTED_MODULE_8__","_components_ger_cepBairroIS_CepBairroIS__WEBPACK_IMPORTED_MODULE_7__","_components_ger_cepTituloIS_CepTituloIS__WEBPACK_IMPORTED_MODULE_9__","type","InputType","CEP","__webpack_require__","d","__webpack_exports__","CepUFIS","summer__WEBPACK_IMPORTED_MODULE_2__","assign","columns","dataField","text","searchViewId","INPUT_SEARCH","onChange","value","searchFilter","setFilter","CepLocalidadeIS","searchExpressionsFull","defaultExpressions","expressions","item","getFilter","CLASS_NAME_UF","push","fieldName","length","CepBairroIS","localidade","CLASS_NAME_LOCALIDADE","uf","CepTituloIS"],"mappings":"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","file":"static/js/106.43430cf3.chunk.js","sourcesContent":["import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { EditForm, EditViewProps, getSelectedItem, InputGroupInline, InputType, WindowComponent } from 'summer';\r\nimport { CepLogradouro, CLASS_NAME } from '../../../../models/dtos/ger/cepLogradouro';\r\nimport CepBairroIS from '../../../components/ger/cepBairroIS/CepBairroIS';\r\nimport CepLocalidadeIS from '../../../components/ger/cepLocalidadeIS/CepLocalidadeIS';\r\nimport CepTituloIS from '../../../components/ger/cepTituloIS/CepTituloIS';\r\nimport CepUFIS from '../../../components/ger/cepUFIS/CepUFIS';\r\n\r\ninterface LogradouroEditViewProps extends EditViewProps<CepLogradouro> {}\r\n\r\nconst CepLogradouroEditView: FC<LogradouroEditViewProps & RouteComponentProps> = props => {\r\n  const selectedItem = getSelectedItem(props);\r\n\r\n  const formProps = useForm<CepLogradouro>({ defaultValues: selectedItem, mode: 'onBlur' });\r\n\r\n  const defaultWidth: number = 90;\r\n\r\n  return (\r\n    <WindowComponent title=\"Manutenção de Logradouro\">\r\n      <EditForm formProps={formProps} editViewProps={props} dtoClassName={CLASS_NAME}>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"nome\"\r\n              isPrependLabel={true}\r\n              formProps={{ ...formProps, validation: { required: true, maxLength: 100 } }}\r\n              label=\"Nome\"\r\n              labelWidth={defaultWidth}\r\n              placeholder=\"Informe o Nome\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <CepUFIS\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              id=\"uf\"\r\n              isPrependLabel={true}\r\n              labelWidth={defaultWidth}\r\n              inputSearchProps={{ selectProps: { isMulti: false } }}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <CepLocalidadeIS\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              id=\"localidade\"\r\n              isPrependLabel={true}\r\n              labelWidth={defaultWidth}\r\n              inputSearchProps={{ selectProps: { isMulti: false } }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <CepBairroIS\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              id=\"bairro\"\r\n              isPrependLabel={true}\r\n              labelWidth={defaultWidth}\r\n              inputSearchProps={{ selectProps: { isMulti: false } }}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <CepTituloIS formProps={{ ...formProps, validation: { required: true } }} id=\"titulo\" isPrependLabel={true} labelWidth={defaultWidth} />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"cep\"\r\n              isPrependLabel={true}\r\n              formProps={{ ...formProps, validation: { required: true, maxLength: 60 } }}\r\n              label=\"CEP\"\r\n              labelWidth={defaultWidth}\r\n              placeholder=\"Informe o CEP\"\r\n              type={InputType.CEP}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"complemento\"\r\n              isPrependLabel={true}\r\n              formProps={{ ...formProps, validation: { maxLength: 100 } }}\r\n              label=\"Complemento\"\r\n              placeholder=\"Informe o Complemento\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </EditForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default CepLogradouroEditView;\r\n","import { Basic } from 'summer';\r\nimport { CepPais } from './cepPais';\r\n\r\nexport interface CepUF extends Basic {\r\n  codigo?: string;\r\n  sigla?: string;\r\n  nome?: string;\r\n  exterior?: boolean;\r\n  pais?: CepPais;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.cepuf';\r\n","import { Basic } from 'summer';\r\nimport { CepUF } from './cepUF';\r\n\r\nexport interface CepLocalidade extends Basic {\r\n  nome?: string;\r\n  cep?: string;\r\n  tipo?: string;\r\n  codigoMunicipio?: string;\r\n  uf?: CepUF;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.ceplocalidade';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { SearchFilterProps } from '../../../../hooks/useSearchFilter';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepUF';\r\n\r\nexport interface CepUFISProps extends InputProps {\r\n  searchFilter?: SearchFilterProps;\r\n}\r\n\r\nconst CepUFIS: FC<CepUFISProps> = props => {\r\n  const onChange = value => {\r\n    if (props.searchFilter) {\r\n      props.searchFilter.setFilter(CLASS_NAME, value);\r\n    }\r\n    if (props.onChange) {\r\n      props.onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'sigla',\r\n            text: 'Sigla',\r\n          },\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'CepUFSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'UF'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a UF'}\r\n      type={InputType.INPUT_SEARCH}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepUFIS;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { SearchFilterProps } from '../../../../hooks/useSearchFilter';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepLocalidade';\r\nimport { CLASS_NAME as CLASS_NAME_UF } from '../../../../models/dtos/ger/cepUF';\r\n\r\nexport interface CepLocalidadeISProps extends InputProps {\r\n  searchFilter?: SearchFilterProps;\r\n}\r\n\r\nconst CepLocalidadeIS: FC<CepLocalidadeISProps> = props => {\r\n  const searchExpressionsFull = defaultExpressions => {\r\n    const expressions = [];\r\n\r\n    if (props.searchFilter) {\r\n      const item = props.searchFilter.getFilter(CLASS_NAME_UF);\r\n      if (item) {\r\n        expressions.push({\r\n          fieldName: 'uf.id',\r\n          value: item.id,\r\n        });\r\n      }\r\n    }\r\n\r\n    if (expressions.length > 0) {\r\n      expressions[0].expressions = defaultExpressions;\r\n    } else {\r\n      expressions.push(...defaultExpressions);\r\n    }\r\n\r\n    return expressions;\r\n  };\r\n\r\n  const onChange = value => {\r\n    if (props.searchFilter) {\r\n      props.searchFilter.setFilter(CLASS_NAME, value);\r\n    }\r\n    if (props.onChange) {\r\n      props.onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'cep',\r\n            text: 'CEP',\r\n          },\r\n          {\r\n            dataField: 'codigoMunicipio',\r\n            text: 'Código do Município',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressionsFull,\r\n        searchViewId: 'CepLocalidadeSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Cidade'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Cidade'}\r\n      type={InputType.INPUT_SEARCH}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepLocalidadeIS;\r\n","import { Basic } from 'summer';\r\nimport { CepLocalidade } from './cepLocalidade';\r\n\r\nexport interface CepBairro extends Basic {\r\n  bairro?: string;\r\n  localidade?: CepLocalidade;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.cepbairro';\r\n","import { Basic } from 'summer';\r\nimport { CepBairro } from './cepBairro';\r\nimport { CepLocalidade } from './cepLocalidade';\r\nimport { CepTitulo } from './cepTitulo';\r\nimport { CepUF } from './cepUF';\r\n\r\nexport interface CepLogradouro extends Basic {\r\n  bairro?: CepBairro;\r\n  cep?: string;\r\n  complemento?: string;\r\n  localidade?: CepLocalidade;\r\n  nome?: string;\r\n  titulo?: CepTitulo;\r\n  uf?: CepUF;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.ceplogradouro';\r\n","import { Basic } from 'summer';\r\n\r\nexport interface CepTitulo extends Basic {\r\n  nome?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.ceptitulo';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { SearchFilterProps } from '../../../../hooks/useSearchFilter';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepBairro';\r\nimport { CLASS_NAME as CLASS_NAME_LOCALIDADE } from '../../../../models/dtos/ger/cepLocalidade';\r\nimport { CLASS_NAME as CLASS_NAME_UF } from '../../../../models/dtos/ger/cepUF';\r\n\r\nexport interface CepBairroISProps extends InputProps {\r\n  searchFilter?: SearchFilterProps;\r\n}\r\n\r\nconst CepBairroIS: FC<CepBairroISProps> = props => {\r\n  const searchExpressionsFull = defaultExpressions => {\r\n    let expressions = [];\r\n\r\n    if (props.searchFilter) {\r\n      const localidade = props.searchFilter.getFilter(CLASS_NAME_LOCALIDADE);\r\n      const uf = props.searchFilter.getFilter(CLASS_NAME_UF);\r\n      if (localidade) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'localidade.id',\r\n            value: localidade.id,\r\n          },\r\n        ];\r\n      } else if (uf) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'localidade.uf.id',\r\n            value: uf.id,\r\n          },\r\n        ];\r\n      }\r\n    }\r\n\r\n    if (expressions.length > 0) {\r\n      expressions[0].expressions = defaultExpressions;\r\n    } else {\r\n      expressions.push(...defaultExpressions);\r\n    }\r\n\r\n    return expressions;\r\n  };\r\n\r\n  const onChange = value => {\r\n    if (props.searchFilter) {\r\n      props.searchFilter.setFilter(CLASS_NAME, value);\r\n    }\r\n    if (props.onChange) {\r\n      props.onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'bairro',\r\n            text: 'Nome do Bairro',\r\n          },\r\n          {\r\n            dataField: 'localidade.nome',\r\n            text: 'Nome da cidade',\r\n          },\r\n          {\r\n            dataField: 'localidade.uf.sigla',\r\n            text: 'Sigla da UF',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressionsFull,\r\n        searchViewId: 'CepBairroSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Bairro'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Bairro'}\r\n      type={InputType.INPUT_SEARCH}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepBairroIS;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepTitulo';\r\n\r\nconst CepTituloIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'CepTituloSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Tipo'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Tipo de Logradouro'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepTituloIS;\r\n"],"sourceRoot":""}
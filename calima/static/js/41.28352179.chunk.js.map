{"version":3,"sources":["models/dtos/mfp/sindicato.ts","models/enumerated/mfp/formaApuracao13Enum.ts","models/enumerated/mfp/formaApuracaoFeriasEnum.ts","models/enumerated/mfp/formaCalculoEnum.ts","models/enumerated/mfp/onusRemuneracaoEnum.ts","views/pages/mfp/sindicato/SindicatoEmailEditView.tsx","views/pages/mfp/sindicato/SindicatoEnderecoEditView.tsx","views/pages/mfp/sindicato/SindicatoTelefoneEditView.tsx","views/pages/mfp/sindicato/SindicatoEditView.tsx","models/dtos/ger/cepUF.ts","models/dtos/ger/cepLocalidade.ts","views/components/ger/cepUFIS/CepUFIS.tsx","views/components/ger/cepLocalidadeIS/CepLocalidadeIS.tsx","models/dtos/ger/cepBairro.ts","models/dtos/ger/cepLogradouro.ts","models/dtos/ger/cepTitulo.ts","views/components/ger/cepBairroIS/CepBairroIS.tsx","views/components/ger/cepTituloIS/CepTituloIS.tsx","views/components/ger/cepLogradouro/CepLogradouroIS.tsx","hooks/useCepManager.ts","utilities/tipoTelefoneFormatter.ts"],"names":["__webpack_require__","d","__webpack_exports__","CLASS_NAME","FORMA_APURACAO_13_ENUM_VALUES","label","value","FORMA_APURACAO_FERIAS_ENUM_VALUES","CONVENCIONADO","FORMA_CALCULO_ENUM_VALUES","ONUS_REMUNERACAO_ENUM_VALUES","SindicatoEmailEditView","props","formProps","useForm","defaultValues","selectedItem","mode","react_default","a","createElement","summer_esm","handleSubmit","handleCancel","Row","Col","Object","objectSpread2","validation","maxLength","id","isPrependLabel","placeholder","required","type","InputType","EMAIL","SindicatoEnderecoEditView","cepManager","useCepManager","cep","titulo","nome","uf","localidade","bairro","useEffect","setTimeout","setValue","CepLogradouroIS","name","ref","register","CepTituloIS","CepUFIS","CepLocalidadeIS","CepBairroIS","style","marginBottom","title","SindicatoTelefoneEditView","TELEFONE","SindicatoEditView","getSelectedItem","_useState","useState","_useState2","slicedToArray","apuracaoCLTFerias","setApuracaoCLTFerias","_useState3","_useState4","apuracaoCLTDecimoTerceiro","setApuracaoCLTDecimoTerceiro","_useState5","_useState6","apuracaoCLTAvisoPrevio","setApuracaoCLTAvisoPrevio","horaFim","Date","horaInicio","percentualAcrescimo","defaultSortPropsEndereco","dataField","order","OrderType","ASC","defaultSortPropsTelefone","defaultSortPropsEmail","sindicatoEnderecoFormProps","columns","text","formatter","cepFormatter","detailView","propName","sindicatoTelefoneFormProps","phoneWithDDDFormatter","tipoTelefoneFormatter","sindicatoEmailFormProps","editViewProps","dtoClassName","validateExtras","sindicato","erros","msgEndereco","enderecos","length","push","undefined","find","endereco","tipoEnderecoPrincipal","validateEnderecoPrincipal","telefones","telefone","tipoTelefonePrincipal","validateTelefonePrincipal","dia","mes","indexOf","Number","maioresFerias","mesesApuracaoFerias","maiores13","mesesApuracao13","maioresAviso","mesesApuracaoAviso","CNPJ","onlyNumber","NUMBER","className","assign","defaultSortDirection","defaultSorted","keyField","inputDropDownProps","optionsProvider","DROP_DOWN","onChange","inputProps","disabled","TIME","tooltipProps","message","min","max","Label","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","inputSearchProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","searchViewId","INPUT_SEARCH","searchFilter","setFilter","searchExpressionsFull","defaultExpressions","expressions","item","getFilter","CLASS_NAME_UF","fieldName","CLASS_NAME_LOCALIDADE","result","manage","CLASS_NAME_BAIRRO","fillForm","logradouro","keys","forEach","key","getProp","clearForm","reset","tipoTelefoneSelection","tiposTelefone","tipoTelefoneCelular","tipoTelefoneComercial","tipoTelefoneFax","tipoTelefoneResidencial","tipoTelefone","resultado","campo","join","cell","row"],"mappings":"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","file":"static/js/41.28352179.chunk.js","sourcesContent":["import { SindicatoEmail } from './sindicatoEmail';\r\nimport { SindicatoEndereco } from './sindicatoEndereco';\r\nimport { SindicatoExample } from './sindicatoExample';\r\nimport { SindicatoTelefone } from './sindicatoTelefone';\r\n\r\nexport interface Sindicato extends SindicatoExample {\r\n  emails?: SindicatoEmail[];\r\n  enderecos?: SindicatoEndereco[];\r\n  /** campo utiliza o enum FormaApuracao13 */\r\n  formaApuracaoBase13?: string;\r\n  /** campo utiliza o enum FormaApuracaoFerias */\r\n  formaApuracaoBaseFerias?: string;\r\n  /** campo utiliza o enum FormaCalculoEnum */\r\n  formaCalculo13?: string;\r\n  /** campo utiliza o enum FormaCalculoEnum */\r\n  formaCalculoAviso?: string;\r\n  /** campo utiliza o enum FormaCalculoEnum */\r\n  formaCalculoFerias?: string;\r\n  horaFim?: Date;\r\n  horaInicio?: Date;\r\n  maiores13?: number;\r\n  maioresAviso?: number;\r\n  maioresFerias?: number;\r\n  mesesApuracao13?: number;\r\n  mesesApuracaoAviso?: number;\r\n  mesesApuracaoFerias?: number;\r\n  observacao?: string;\r\n  percentualAcrescimo?: number;\r\n  telefones?: SindicatoTelefone[];\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.sindicato';\r\n","export const ULTIMOS_MESES = { label: 'Últimos Meses', value: 'ULTIMOS_MESES' };\r\nexport const ANO_CORRENTE = { label: 'Ano Corrente', value: 'ANO_CORRENTE' };\r\n\r\nexport const FORMA_APURACAO_13_ENUM_VALUES = [ULTIMOS_MESES, ANO_CORRENTE];\r\n","export const ULTIMOS_MESES = { label: 'Últimos Meses', value: 'ULTIMOS_MESES' };\r\nexport const PERIODO_AQUISITIVO = { label: 'Período Aquisitivo', value: 'PERIODO_AQUISITIVO' };\r\n\r\nexport const FORMA_APURACAO_FERIAS_ENUM_VALUES = [ULTIMOS_MESES, PERIODO_AQUISITIVO];\r\n","export const CLT = { label: 'CLT', value: 'CLT' };\r\nexport const CONVENCIONADO = { label: 'Convencionado', value: 'CONVENCIONADO' };\r\n\r\nexport const FORMA_CALCULO_ENUM_VALUES = [CLT, CONVENCIONADO];\r\n","export const APENAS_EMPREGADOR = { label: 'Apenas do Empregador', value: 'APENAS_EMPREGADOR' };\r\nexport const APENAS_SINDICATO = { label: 'Apenas do Sindicato', value: 'APENAS_SINDICATO' };\r\nexport const EMPREGADOR_SINDICATO = {\r\n  label: 'Parte do Empregador, sendo a diferença e/ou complementação salarial paga pelo Sindicato',\r\n  value: 'EMPREGADOR_SINDICATO',\r\n};\r\n\r\nexport const ONUS_REMUNERACAO_ENUM_VALUES = [APENAS_EMPREGADOR, APENAS_SINDICATO, EMPREGADOR_SINDICATO];\r\n","import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline, InputType } from 'summer';\r\nimport { SindicatoEmail } from '../../../../models/dtos/mfp/sindicatoEmail';\r\n\r\nconst SindicatoEmailEditView: FC<DetailEditViewFormProps<SindicatoEmail>> = props => {\r\n  const formProps = useForm<SindicatoEmail>({ defaultValues: props.selectedItem || {}, mode: 'onBlur' });\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps}>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { maxLength: 120 } }}\r\n            id=\"contato\"\r\n            isPrependLabel={true}\r\n            label=\"Contato\"\r\n            placeholder=\"Informe o contato\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { maxLength: 120, required: true } }}\r\n            id=\"email\"\r\n            isPrependLabel={true}\r\n            label=\"Email\"\r\n            placeholder=\"Informe o email\"\r\n            type={InputType.EMAIL}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default SindicatoEmailEditView;\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { Box, Checkbox, DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport useCepManager from '../../../../hooks/useCepManager';\r\nimport { SindicatoEndereco } from '../../../../models/dtos/mfp/sindicatoEndereco';\r\nimport CepBairroIS from '../../../components/ger/cepBairroIS/CepBairroIS';\r\nimport CepLocalidadeIS from '../../../components/ger/cepLocalidadeIS/CepLocalidadeIS';\r\nimport CepLogradouroIS from '../../../components/ger/cepLogradouro/CepLogradouroIS';\r\nimport CepTituloIS from '../../../components/ger/cepTituloIS/CepTituloIS';\r\nimport CepUFIS from '../../../components/ger/cepUFIS/CepUFIS';\r\n\r\nconst SindicatoEnderecoEditView: FC<DetailEditViewFormProps<SindicatoEndereco>> = props => {\r\n  const formProps = useForm<SindicatoEndereco>({ defaultValues: props.selectedItem || {}, mode: 'onBlur' });\r\n  const cepManager = useCepManager(formProps, { cep: true, titulo: true, nome: 'logradouro', uf: true, localidade: 'cidade', bairro: true });\r\n\r\n  useEffect(\r\n    () => {\r\n      if (props.selectedItem && props.selectedItem.id) {\r\n        setTimeout(() => {\r\n          // @ts-ignore\r\n          formProps.setValue('cepFmt', { cep: props.selectedItem.cep, label: props.selectedItem.cep });\r\n        }, 500);\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps}>\r\n      <Row>\r\n        <Col>\r\n          <CepLogradouroIS\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            id=\"cepFmt\"\r\n            isPrependLabel={true}\r\n            label=\"CEP\"\r\n            placeholder=\"Informe o CEP\"\r\n            cepManager={cepManager}\r\n          />\r\n          <input type=\"hidden\" name=\"cep\" ref={formProps.register} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <CepTituloIS id=\"titulo\" isPrependLabel={true} formProps={{ ...formProps, validation: { required: true } }} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { required: true, maxLength: 150 } }}\r\n            id=\"logradouro\"\r\n            isPrependLabel={true}\r\n            label=\"Logradouro\"\r\n            placeholder=\"Informe o logradouro\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { required: true, maxLength: 10 } }}\r\n            id=\"numero\"\r\n            isPrependLabel={true}\r\n            label=\"Numero\"\r\n            placeholder=\"Informe o número\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { maxLength: 60 } }}\r\n            id=\"complemento\"\r\n            isPrependLabel={true}\r\n            label=\"Complemento\"\r\n            placeholder=\"Informe o complemento\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <CepUFIS formProps={{ ...formProps, validation: { required: true } }} id=\"uf\" />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <CepLocalidadeIS formProps={{ ...formProps, validation: { required: true } }} id=\"cidade\" />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <CepBairroIS formProps={{ ...formProps, validation: { required: true } }} id=\"bairro\" />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col style={{ marginBottom: '30px' }}>\r\n          <Box title=\"Tipo de Endereço\">\r\n            <Row>\r\n              <Col style={{ marginBottom: '10px' }}>\r\n                <Checkbox formProps={formProps} id=\"tipoEnderecoPrincipal\" label=\"Principal\" />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col style={{ marginBottom: '10px' }}>\r\n                <Checkbox formProps={formProps} id=\"tipoEnderecoCobranca\" label=\"Cobrança\" />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Checkbox formProps={formProps} id=\"tipoEnderecoComercial\" label=\"Comercial\" />\r\n              </Col>\r\n            </Row>\r\n          </Box>\r\n        </Col>\r\n      </Row>\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default SindicatoEnderecoEditView;\r\n","import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { Box, Checkbox, DetailEditForm, DetailEditViewFormProps, InputGroupInline, InputType } from 'summer';\r\nimport { SindicatoTelefone } from '../../../../models/dtos/mfp/sindicatoTelefone';\r\n\r\nconst SindicatoTelefoneEditView: FC<DetailEditViewFormProps<SindicatoTelefone>> = props => {\r\n  const formProps = useForm<SindicatoTelefone>({ defaultValues: props.selectedItem || {}, mode: 'onBlur' });\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps}>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline formProps={formProps} id=\"contato\" isPrependLabel={true} label=\"Contato\" />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            id=\"numero\"\r\n            isPrependLabel={true}\r\n            label=\"Telefone\"\r\n            type={InputType.TELEFONE}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Box title=\"Tipo\">\r\n            <Row style={{ marginBottom: '10px' }}>\r\n              <Col>\r\n                <Checkbox formProps={formProps} id=\"tipoTelefonePrincipal\" label=\"Principal\" />\r\n              </Col>\r\n              <Col>\r\n                <Checkbox formProps={formProps} id=\"tipoTelefoneResidencial\" label=\"Residencial\" />\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ marginBottom: '10px' }}>\r\n              <Col>\r\n                <Checkbox formProps={formProps} id=\"tipoTelefoneComercial\" label=\"Comercial\" />\r\n              </Col>\r\n              <Col>\r\n                <Checkbox formProps={formProps} id=\"tipoTelefoneCelular\" label=\"Celular\" />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Checkbox formProps={formProps} id=\"tipoTelefoneFax\" label=\"Fax\" />\r\n              </Col>\r\n            </Row>\r\n          </Box>\r\n        </Col>\r\n      </Row>\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default SindicatoTelefoneEditView;\r\n","import React, { FC, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, Label, Row } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  Box,\r\n  cepFormatter,\r\n  DefaultSortProps,\r\n  DetailManagerForm,\r\n  DetailManagerFormProps,\r\n  EditForm,\r\n  EditViewProps,\r\n  getSelectedItem,\r\n  InputGroupInline,\r\n  InputType,\r\n  onlyNumber,\r\n  OrderType,\r\n  phoneWithDDDFormatter,\r\n  Tab,\r\n  TabGroup,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { CLASS_NAME, Sindicato } from '../../../../models/dtos/mfp/sindicato';\r\nimport { SindicatoEndereco } from '../../../../models/dtos/mfp/sindicatoEndereco';\r\nimport { SindicatoTelefone } from '../../../../models/dtos/mfp/sindicatoTelefone';\r\nimport { FORMA_APURACAO_13_ENUM_VALUES } from '../../../../models/enumerated/mfp/formaApuracao13Enum';\r\nimport { FORMA_APURACAO_FERIAS_ENUM_VALUES } from '../../../../models/enumerated/mfp/formaApuracaoFeriasEnum';\r\nimport { CONVENCIONADO, FORMA_CALCULO_ENUM_VALUES } from '../../../../models/enumerated/mfp/formaCalculoEnum';\r\nimport { ONUS_REMUNERACAO_ENUM_VALUES } from '../../../../models/enumerated/mfp/onusRemuneracaoEnum';\r\nimport { tipoTelefoneFormatter } from '../../../../utilities/tipoTelefoneFormatter';\r\nimport SindicatoEmailEditView from './SindicatoEmailEditView';\r\nimport SindicatoEnderecoEditView from './SindicatoEnderecoEditView';\r\nimport SindicatoTelefoneEditView from './SindicatoTelefoneEditView';\r\n\r\ninterface SindicatoEditViewProps extends EditViewProps<Sindicato> {}\r\n\r\nconst SindicatoEditView: FC<SindicatoEditViewProps & RouteComponentProps> = props => {\r\n  const defaultHoraInicio = 22;\r\n  const defaultHoraFim = 5;\r\n\r\n  const selectedItem = getSelectedItem(props);\r\n\r\n  const [apuracaoCLTFerias, setApuracaoCLTFerias] = useState(true);\r\n  const [apuracaoCLTDecimoTerceiro, setApuracaoCLTDecimoTerceiro] = useState(true);\r\n  const [apuracaoCLTAvisoPrevio, setApuracaoCLTAvisoPrevio] = useState(true);\r\n\r\n  const formProps = useForm<Sindicato>({\r\n    defaultValues: {\r\n      horaFim: new Date(null, null, null, defaultHoraFim),\r\n      horaInicio: new Date(null, null, null, defaultHoraInicio),\r\n      percentualAcrescimo: 14.285,\r\n      ...selectedItem,\r\n    },\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formaCalculoFeriasChange = value => {\r\n    setApuracaoCLTFerias(value !== CONVENCIONADO.value);\r\n\r\n    if (apuracaoCLTFerias) {\r\n      formProps.setValue('formaApuracaoBaseFerias', null);\r\n      formProps.setValue('mesesApuracaoFerias', 0);\r\n      formProps.setValue('maioresFerias', 0);\r\n    }\r\n  };\r\n\r\n  const formaCalculoDecimoTerceiroChange = value => {\r\n    setApuracaoCLTDecimoTerceiro(value !== CONVENCIONADO.value);\r\n\r\n    if (apuracaoCLTDecimoTerceiro) {\r\n      formProps.setValue('formaApuracaoBase13', null);\r\n      formProps.setValue('mesesApuracao13', 0);\r\n      formProps.setValue('maiores13', 0);\r\n    }\r\n  };\r\n\r\n  const formaCalculoAvisoChange = value => {\r\n    setApuracaoCLTAvisoPrevio(value !== CONVENCIONADO.value);\r\n\r\n    if (apuracaoCLTAvisoPrevio) {\r\n      formProps.setValue('mesesApuracaoAviso', 0);\r\n      formProps.setValue('maioresAviso', 0);\r\n    }\r\n  };\r\n\r\n  const validateEnderecoPrincipal = (enderecos: SindicatoEndereco[]) => {\r\n    return enderecos.find(endereco => endereco.tipoEnderecoPrincipal) !== undefined;\r\n  };\r\n\r\n  const validateTelefonePrincipal = (telefones: SindicatoTelefone[]) => {\r\n    return telefones.find(telefone => telefone.tipoTelefonePrincipal) !== undefined;\r\n  };\r\n\r\n  const validateExtras = (sindicato: Sindicato): string[] => {\r\n    const erros = [];\r\n\r\n    const msgEndereco = 'Pelo menos um endereço deve ser cadastrado';\r\n\r\n    // Validação do endereço obrigatório\r\n    if (sindicato.enderecos.length === 0) {\r\n      erros.push(msgEndereco + '.');\r\n    } else {\r\n      // Validação do endereço principal obrigatório\r\n      if (!validateEnderecoPrincipal(sindicato.enderecos)) {\r\n        erros.push(msgEndereco + ' como principal.');\r\n      }\r\n    }\r\n\r\n    // Validação do telefone principal\r\n    if (sindicato.telefones.length > 0 && !validateTelefonePrincipal(sindicato.telefones)) {\r\n      erros.push('Pelo menos um telefone deve ser cadastrado como principal.');\r\n    }\r\n\r\n    // Validação do dia do mês\r\n    if (sindicato.dia < 1 || sindicato.dia > 31) {\r\n      erros.push('Dia inválido');\r\n    }\r\n\r\n    // Validação do mês\r\n    if (sindicato.mes < 1 || sindicato.mes > 12) {\r\n      erros.push('Mês inválido');\r\n    }\r\n\r\n    // Validação de meses com 30 dias\r\n    if ([4, 6, 9, 11].indexOf(Number(sindicato.mes)) !== -1 && sindicato.dia > 30) {\r\n      erros.push('Dia inválido');\r\n    }\r\n\r\n    // Validação do mês de fevereiro\r\n    if (sindicato.mes === 2 && sindicato.dia > 28) {\r\n      erros.push('Dia inválido');\r\n    }\r\n\r\n    // Ferias\r\n    if (sindicato.maioresFerias > sindicato.mesesApuracaoFerias) {\r\n      erros.push(\"'Maiores valores' não pode ser maior que os meses para apuração de Ferias\");\r\n    }\r\n\r\n    // Décimo Terceiro\r\n    if (sindicato.maiores13 > sindicato.mesesApuracao13) {\r\n      erros.push(\"'Maiores valores' não pode ser maior que os meses para apuração do 13º Salário\");\r\n    }\r\n\r\n    // Aviso Prévio\r\n    if (sindicato.maioresAviso > sindicato.mesesApuracaoAviso) {\r\n      erros.push(\"'Maiores valores' não pode ser maior que os meses para apuração do Aviso Prévio\");\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  const defaultSortPropsEndereco: DefaultSortProps[] = [\r\n    {\r\n      dataField: 'logradouro',\r\n      order: OrderType.ASC,\r\n    },\r\n  ];\r\n\r\n  const defaultSortPropsTelefone: DefaultSortProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      order: OrderType.ASC,\r\n    },\r\n  ];\r\n\r\n  const defaultSortPropsEmail: DefaultSortProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      order: OrderType.ASC,\r\n    },\r\n  ];\r\n\r\n  const sindicatoEnderecoFormProps: DetailManagerFormProps = {\r\n    columns: [\r\n      {\r\n        dataField: 'logradouro',\r\n        text: 'Logradouro',\r\n      },\r\n      {\r\n        dataField: 'numero',\r\n        text: 'Número',\r\n      },\r\n      {\r\n        dataField: 'cep',\r\n        formatter: cepFormatter,\r\n        text: 'CEP',\r\n      },\r\n      {\r\n        dataField: 'bairro.bairro',\r\n        text: 'Bairro',\r\n      },\r\n      {\r\n        dataField: 'cidade.nome',\r\n        text: 'Cidade',\r\n      },\r\n    ],\r\n    detailView: SindicatoEnderecoEditView,\r\n    formProps,\r\n    propName: 'enderecos',\r\n    title: 'Manutenção de Endereços',\r\n  };\r\n\r\n  const sindicatoTelefoneFormProps: DetailManagerFormProps = {\r\n    columns: [\r\n      {\r\n        dataField: 'contato',\r\n        text: 'Contato',\r\n      },\r\n      {\r\n        dataField: 'numero',\r\n        formatter: phoneWithDDDFormatter,\r\n        text: 'Telefone',\r\n      },\r\n      {\r\n        dataField: 'tipos',\r\n        formatter: tipoTelefoneFormatter,\r\n        text: 'Tipos',\r\n      },\r\n    ],\r\n    detailView: SindicatoTelefoneEditView,\r\n    formProps,\r\n    propName: 'telefones',\r\n    title: 'Manutenção de Telefones',\r\n  };\r\n\r\n  const sindicatoEmailFormProps: DetailManagerFormProps = {\r\n    columns: [\r\n      {\r\n        dataField: 'contato',\r\n        text: 'Contato',\r\n      },\r\n      {\r\n        dataField: 'email',\r\n        text: 'Email',\r\n      },\r\n    ],\r\n    detailView: SindicatoEmailEditView,\r\n    formProps,\r\n    propName: 'emails',\r\n    title: 'Manutenção de Emails',\r\n  };\r\n\r\n  return (\r\n    <WindowComponent title=\"Manutenção de Sindicato\">\r\n      <EditForm formProps={formProps} editViewProps={props} dtoClassName={CLASS_NAME} validateExtras={validateExtras}>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { maxLength: 8, validation: /[0-9]/ } }}\r\n              isPrependLabel={true}\r\n              placeholder=\"Preenchimento Opcional - Codificação Automática\"\r\n              id=\"codigo\"\r\n              label=\"Código\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { maxLength: 120, required: true } }}\r\n              isPrependLabel={true}\r\n              id=\"razaoSocial\"\r\n              label=\"Razão Social\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <TabGroup formProps={formProps}>\r\n              <Tab title=\"Dados Principais\">\r\n                <Row>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      formProps={{ ...formProps, validation: { required: true } }}\r\n                      isPrependLabel={true}\r\n                      id=\"cnpj\"\r\n                      label=\"C.N.P.J.\"\r\n                      type={InputType.CNPJ}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      formProps={{ ...formProps, validation: { required: true, validation: /[0-9]/, maxLength: 15 } }}\r\n                      isPrependLabel={true}\r\n                      id=\"codigoEntidadeSindical\"\r\n                      label=\"Cód. Entidade Sindical\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <Box title=\"Data Base\">\r\n                      <Row>\r\n                        <Col>\r\n                          <InputGroupInline\r\n                            formProps={{ ...formProps, validation: { ...onlyNumber(1, 31) } }}\r\n                            isPrependLabel={true}\r\n                            id=\"dia\"\r\n                            label=\"Dia\"\r\n                            type={InputType.NUMBER}\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <InputGroupInline\r\n                            formProps={{ ...formProps, validation: { ...onlyNumber(1, 12) } }}\r\n                            isPrependLabel={true}\r\n                            id=\"mes\"\r\n                            label=\"Mês\"\r\n                            type={InputType.NUMBER}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Box>\r\n                  </Col>\r\n                  <Col className=\"col-6\" />\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <Accordion formProps={formProps}>\r\n                      <AccordionItem title=\"Endereços\">\r\n                        <DetailManagerForm\r\n                          {...props}\r\n                          defaultSortDirection={OrderType.ASC}\r\n                          defaultSorted={defaultSortPropsEndereco}\r\n                          {...sindicatoEnderecoFormProps}\r\n                          keyField=\"rowIndex\"\r\n                        />\r\n                      </AccordionItem>\r\n                      <AccordionItem title=\"Telefones\">\r\n                        <DetailManagerForm\r\n                          {...props}\r\n                          defaultSortDirection={OrderType.ASC}\r\n                          defaultSorted={defaultSortPropsTelefone}\r\n                          {...sindicatoTelefoneFormProps}\r\n                          keyField=\"rowIndex\"\r\n                        />\r\n                      </AccordionItem>\r\n                      <AccordionItem title=\"E-mails\">\r\n                        <DetailManagerForm\r\n                          {...props}\r\n                          defaultSortDirection={OrderType.ASC}\r\n                          defaultSorted={defaultSortPropsEmail}\r\n                          {...sindicatoEmailFormProps}\r\n                          keyField=\"rowIndex\"\r\n                        />\r\n                      </AccordionItem>\r\n                    </Accordion>\r\n                  </Col>\r\n                </Row>\r\n              </Tab>\r\n              <Tab title=\"Férias\">\r\n                <Row>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      id=\"formaCalculoFerias\"\r\n                      label=\"Forma de Cálculo\"\r\n                      formProps={{ ...formProps, validation: { required: true } }}\r\n                      isPrependLabel={true}\r\n                      placeholder=\"Informe a forma de Cálculo\"\r\n                      inputDropDownProps={{ optionsProvider: FORMA_CALCULO_ENUM_VALUES }}\r\n                      type={InputType.DROP_DOWN}\r\n                      onChange={formaCalculoFeriasChange}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      id=\"formaApuracaoBaseFerias\"\r\n                      label=\"Forma de Apuração\"\r\n                      formProps={formProps}\r\n                      isPrependLabel={true}\r\n                      placeholder=\"Informe a forma de apuração\"\r\n                      inputDropDownProps={{ optionsProvider: FORMA_APURACAO_FERIAS_ENUM_VALUES }}\r\n                      type={InputType.DROP_DOWN}\r\n                      inputProps={{ disabled: apuracaoCLTFerias }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      formProps={{ ...formProps, validation: { ...onlyNumber(0, 100) } }}\r\n                      id=\"mesesApuracaoFerias\"\r\n                      label=\"Meses para Apuração\"\r\n                      isPrependLabel={true}\r\n                      type={InputType.NUMBER}\r\n                      inputProps={{ disabled: apuracaoCLTFerias }}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      formProps={{ ...formProps, validation: { ...onlyNumber(0, 100) } }}\r\n                      id=\"maioresFerias\"\r\n                      label=\"Meses a considerar maiores valores\"\r\n                      isPrependLabel={true}\r\n                      type={InputType.NUMBER}\r\n                      inputProps={{ disabled: apuracaoCLTFerias }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Tab>\r\n              <Tab title=\"13º Salário\">\r\n                <Row>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      id=\"formaCalculo13\"\r\n                      label=\"Forma de Cálculo\"\r\n                      formProps={{ ...formProps, validation: { required: true } }}\r\n                      isPrependLabel={true}\r\n                      placeholder=\"Informe a forma de Cálculo\"\r\n                      inputDropDownProps={{ optionsProvider: FORMA_CALCULO_ENUM_VALUES }}\r\n                      type={InputType.DROP_DOWN}\r\n                      onChange={formaCalculoDecimoTerceiroChange}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      id=\"formaApuracaoBase13\"\r\n                      label=\"Forma de Apuração\"\r\n                      formProps={formProps}\r\n                      isPrependLabel={true}\r\n                      placeholder=\"Informe a forma de apuração\"\r\n                      inputDropDownProps={{ optionsProvider: FORMA_APURACAO_13_ENUM_VALUES }}\r\n                      type={InputType.DROP_DOWN}\r\n                      inputProps={{ disabled: apuracaoCLTDecimoTerceiro }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      formProps={{ ...formProps, validation: { ...onlyNumber(0, 100) } }}\r\n                      id=\"mesesApuracao13\"\r\n                      label=\"Meses para Apuração\"\r\n                      isPrependLabel={true}\r\n                      type={InputType.NUMBER}\r\n                      inputProps={{ disabled: apuracaoCLTDecimoTerceiro }}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      formProps={{ ...formProps, validation: { ...onlyNumber(0, 100) } }}\r\n                      id=\"maiores13\"\r\n                      label=\"Meses a considerar maiores valores\"\r\n                      isPrependLabel={true}\r\n                      type={InputType.NUMBER}\r\n                      inputProps={{ disabled: apuracaoCLTDecimoTerceiro }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Tab>\r\n              <Tab title=\"Aviso Prévio\">\r\n                <Row>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      id=\"formaCalculoAviso\"\r\n                      label=\"Forma de Cálculo\"\r\n                      formProps={{ ...formProps, validation: { required: true } }}\r\n                      isPrependLabel={true}\r\n                      placeholder=\"Informe a forma de Cálculo\"\r\n                      inputDropDownProps={{ optionsProvider: FORMA_CALCULO_ENUM_VALUES }}\r\n                      type={InputType.DROP_DOWN}\r\n                      onChange={formaCalculoAvisoChange}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      formProps={{ ...formProps, validation: { ...onlyNumber(0, 100) } }}\r\n                      id=\"mesesApuracaoAviso\"\r\n                      label=\"Meses para Apuração\"\r\n                      isPrependLabel={true}\r\n                      type={InputType.NUMBER}\r\n                      inputProps={{ disabled: apuracaoCLTAvisoPrevio }}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      formProps={{ ...formProps, validation: { ...onlyNumber(0, 100) } }}\r\n                      id=\"maioresAviso\"\r\n                      label=\"Meses a considerar maiores valores\"\r\n                      isPrependLabel={true}\r\n                      type={InputType.NUMBER}\r\n                      inputProps={{ disabled: apuracaoCLTAvisoPrevio }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Tab>\r\n              <Tab title=\"Horário Noturno\">\r\n                <Row>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      formProps={formProps}\r\n                      id=\"horaInicio\"\r\n                      label=\"Hora de Início\"\r\n                      isPrependLabel={true}\r\n                      type={InputType.TIME}\r\n                      tooltipProps={{ message: 'Informe o horário de início noturno, no formato de 24 horas. Ex.: 18:15:00' }}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      formProps={formProps}\r\n                      id=\"horaFim\"\r\n                      label=\"Hora de Término\"\r\n                      isPrependLabel={true}\r\n                      type={InputType.TIME}\r\n                      tooltipProps={{ message: 'Informe o horário de término noturno, no formato de 24 horas. Ex.: 18:15:00' }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      formProps={{ ...formProps, validation: { min: 0, max: 100 } }}\r\n                      id=\"percentualAcrescimo\"\r\n                      label=\"Percentual de Acréscimo\"\r\n                      isPrependLabel={true}\r\n                      type={InputType.NUMBER}\r\n                      tooltipProps={{\r\n                        message:\r\n                          'Informe o percentual de acréscimo por hora noturna. A hora normal tem a duração de ' +\r\n                          '60 (sessenta) minutos e a hora noturna, por disposição legal, nas atividades urbanas,' +\r\n                          ' é computada como sendo de 52 (cinquenta e dois) minutos e 30 (trinta) segundos. Ou ' +\r\n                          'seja, cada hora noturna sofre a redução de 7 minutos e 30 segundos ou ainda 12,5% ' +\r\n                          'sobre o valor da hora diurna de acordo com o art. 73 Consolidação das Leis do ' +\r\n                          'Trabalho. Caso não seja informado o valor padrão de 14,285% será usado para os ' +\r\n                          'Quadros de Horários do eSocial.',\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  <Col />\r\n                </Row>\r\n              </Tab>\r\n              <Tab title=\"Mandato Sindical\">\r\n                <Row>\r\n                  <Col>\r\n                    <Label>Informação Complementar do afastamento para exercício de mandato sindical.</Label>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      id=\"onusRemuneracaoAfast\"\r\n                      label=\"Ônus da Remuneração\"\r\n                      formProps={formProps}\r\n                      isPrependLabel={true}\r\n                      inputDropDownProps={{ optionsProvider: ONUS_REMUNERACAO_ENUM_VALUES }}\r\n                      type={InputType.DROP_DOWN}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Tab>\r\n            </TabGroup>\r\n          </Col>\r\n        </Row>\r\n      </EditForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default SindicatoEditView;\r\n","import { Basic } from 'summer';\r\nimport { CepPais } from './cepPais';\r\n\r\nexport interface CepUF extends Basic {\r\n  codigo?: string;\r\n  sigla?: string;\r\n  nome?: string;\r\n  exterior?: boolean;\r\n  pais?: CepPais;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.cepuf';\r\n","import { Basic } from 'summer';\r\nimport { CepUF } from './cepUF';\r\n\r\nexport interface CepLocalidade extends Basic {\r\n  nome?: string;\r\n  cep?: string;\r\n  tipo?: string;\r\n  codigoMunicipio?: string;\r\n  uf?: CepUF;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.ceplocalidade';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { SearchFilterProps } from '../../../../hooks/useSearchFilter';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepUF';\r\n\r\nexport interface CepUFISProps extends InputProps {\r\n  searchFilter?: SearchFilterProps;\r\n}\r\n\r\nconst CepUFIS: FC<CepUFISProps> = props => {\r\n  const onChange = value => {\r\n    if (props.searchFilter) {\r\n      props.searchFilter.setFilter(CLASS_NAME, value);\r\n    }\r\n    if (props.onChange) {\r\n      props.onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'sigla',\r\n            text: 'Sigla',\r\n          },\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'CepUFSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'UF'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a UF'}\r\n      type={InputType.INPUT_SEARCH}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepUFIS;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { SearchFilterProps } from '../../../../hooks/useSearchFilter';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepLocalidade';\r\nimport { CLASS_NAME as CLASS_NAME_UF } from '../../../../models/dtos/ger/cepUF';\r\n\r\nexport interface CepLocalidadeISProps extends InputProps {\r\n  searchFilter?: SearchFilterProps;\r\n}\r\n\r\nconst CepLocalidadeIS: FC<CepLocalidadeISProps> = props => {\r\n  const searchExpressionsFull = defaultExpressions => {\r\n    const expressions = [];\r\n\r\n    if (props.searchFilter) {\r\n      const item = props.searchFilter.getFilter(CLASS_NAME_UF);\r\n      if (item) {\r\n        expressions.push({\r\n          fieldName: 'uf.id',\r\n          value: item.id,\r\n        });\r\n      }\r\n    }\r\n\r\n    if (expressions.length > 0) {\r\n      expressions[0].expressions = defaultExpressions;\r\n    } else {\r\n      expressions.push(...defaultExpressions);\r\n    }\r\n\r\n    return expressions;\r\n  };\r\n\r\n  const onChange = value => {\r\n    if (props.searchFilter) {\r\n      props.searchFilter.setFilter(CLASS_NAME, value);\r\n    }\r\n    if (props.onChange) {\r\n      props.onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'cep',\r\n            text: 'CEP',\r\n          },\r\n          {\r\n            dataField: 'codigoMunicipio',\r\n            text: 'Código do Município',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressionsFull,\r\n        searchViewId: 'CepLocalidadeSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Cidade'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Cidade'}\r\n      type={InputType.INPUT_SEARCH}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepLocalidadeIS;\r\n","import { Basic } from 'summer';\r\nimport { CepLocalidade } from './cepLocalidade';\r\n\r\nexport interface CepBairro extends Basic {\r\n  bairro?: string;\r\n  localidade?: CepLocalidade;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.cepbairro';\r\n","import { Basic } from 'summer';\r\nimport { CepBairro } from './cepBairro';\r\nimport { CepLocalidade } from './cepLocalidade';\r\nimport { CepTitulo } from './cepTitulo';\r\nimport { CepUF } from './cepUF';\r\n\r\nexport interface CepLogradouro extends Basic {\r\n  bairro?: CepBairro;\r\n  cep?: string;\r\n  complemento?: string;\r\n  localidade?: CepLocalidade;\r\n  nome?: string;\r\n  titulo?: CepTitulo;\r\n  uf?: CepUF;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.ceplogradouro';\r\n","import { Basic } from 'summer';\r\n\r\nexport interface CepTitulo extends Basic {\r\n  nome?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.ceptitulo';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { SearchFilterProps } from '../../../../hooks/useSearchFilter';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepBairro';\r\nimport { CLASS_NAME as CLASS_NAME_LOCALIDADE } from '../../../../models/dtos/ger/cepLocalidade';\r\nimport { CLASS_NAME as CLASS_NAME_UF } from '../../../../models/dtos/ger/cepUF';\r\n\r\nexport interface CepBairroISProps extends InputProps {\r\n  searchFilter?: SearchFilterProps;\r\n}\r\n\r\nconst CepBairroIS: FC<CepBairroISProps> = props => {\r\n  const searchExpressionsFull = defaultExpressions => {\r\n    let expressions = [];\r\n\r\n    if (props.searchFilter) {\r\n      const localidade = props.searchFilter.getFilter(CLASS_NAME_LOCALIDADE);\r\n      const uf = props.searchFilter.getFilter(CLASS_NAME_UF);\r\n      if (localidade) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'localidade.id',\r\n            value: localidade.id,\r\n          },\r\n        ];\r\n      } else if (uf) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'localidade.uf.id',\r\n            value: uf.id,\r\n          },\r\n        ];\r\n      }\r\n    }\r\n\r\n    if (expressions.length > 0) {\r\n      expressions[0].expressions = defaultExpressions;\r\n    } else {\r\n      expressions.push(...defaultExpressions);\r\n    }\r\n\r\n    return expressions;\r\n  };\r\n\r\n  const onChange = value => {\r\n    if (props.searchFilter) {\r\n      props.searchFilter.setFilter(CLASS_NAME, value);\r\n    }\r\n    if (props.onChange) {\r\n      props.onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'bairro',\r\n            text: 'Nome do Bairro',\r\n          },\r\n          {\r\n            dataField: 'localidade.nome',\r\n            text: 'Nome da cidade',\r\n          },\r\n          {\r\n            dataField: 'localidade.uf.sigla',\r\n            text: 'Sigla da UF',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressionsFull,\r\n        searchViewId: 'CepBairroSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Bairro'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Bairro'}\r\n      type={InputType.INPUT_SEARCH}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepBairroIS;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepTitulo';\r\n\r\nconst CepTituloIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'CepTituloSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Tipo'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Tipo de Logradouro'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepTituloIS;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CepManagerProps } from '../../../../hooks/useCepManager';\r\nimport { SearchFilterProps } from '../../../../hooks/useSearchFilter';\r\nimport { CLASS_NAME as CLASS_NAME_BAIRRO } from '../../../../models/dtos/ger/cepBairro';\r\nimport { CLASS_NAME as CLASS_NAME_LOCALIDADE } from '../../../../models/dtos/ger/cepLocalidade';\r\nimport { CepLogradouro, CLASS_NAME } from '../../../../models/dtos/ger/cepLogradouro';\r\nimport { CLASS_NAME as CLASS_NAME_UF } from '../../../../models/dtos/ger/cepUF';\r\n\r\nexport interface CepLogradouroProps {\r\n  cepManager?: CepManagerProps;\r\n  searchFilter?: SearchFilterProps;\r\n}\r\n\r\nconst CepLogradouroIS: FC<InputProps & CepLogradouroProps> = props => {\r\n  const searchExpressionsFull = defaultExpressions => {\r\n    let expressions = [];\r\n\r\n    if (props.searchFilter) {\r\n      const bairro = props.searchFilter.getFilter(CLASS_NAME_BAIRRO);\r\n      const localidade = props.searchFilter.getFilter(CLASS_NAME_LOCALIDADE);\r\n      const uf = props.searchFilter.getFilter(CLASS_NAME_UF);\r\n      if (bairro) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'bairro.id',\r\n            value: bairro.id,\r\n          },\r\n        ];\r\n      } else if (localidade) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'localidade.id',\r\n            value: localidade.id,\r\n          },\r\n        ];\r\n      } else if (uf) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'uf.id',\r\n            value: uf.id,\r\n          },\r\n        ];\r\n      }\r\n    }\r\n\r\n    if (expressions.length > 0) {\r\n      expressions[0].expressions = defaultExpressions;\r\n    } else {\r\n      expressions.push(...defaultExpressions);\r\n    }\r\n\r\n    return expressions;\r\n  };\r\n\r\n  const onChangeHandle = (result: CepLogradouro) => {\r\n    if (props.cepManager) {\r\n      props.cepManager.manage(result);\r\n    }\r\n    if (props.searchFilter) {\r\n      props.searchFilter.setFilter(CLASS_NAME, result);\r\n    }\r\n    if (props.onChange) {\r\n      props.onChange(result);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      onChange={onChangeHandle}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'bairro.bairro',\r\n            text: 'Bairro',\r\n          },\r\n          {\r\n            dataField: 'cep',\r\n            text: 'CEP',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressionsFull,\r\n        searchViewId: 'CepLogradouroSearchView',\r\n      }}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepLogradouroIS;\r\n","import { UseFormProps } from 'summer';\r\nimport { CepLogradouro } from '../models/dtos/ger/cepLogradouro';\r\n\r\nexport interface CepManagerOptions {\r\n  bairro?: boolean | string;\r\n  cep?: boolean | string;\r\n  localidade?: boolean | string;\r\n  nome?: boolean | string;\r\n  titulo?: boolean | string;\r\n  uf?: boolean | string;\r\n}\r\n\r\nexport interface CepManagerProps {\r\n  manage: (logradouro: CepLogradouro) => void;\r\n  reset: () => void;\r\n}\r\n\r\nconst useCepManager = (formProps: UseFormProps, props: CepManagerOptions): CepManagerProps => {\r\n  const getProp = (name: string): string => {\r\n    let result = null;\r\n\r\n    if (props[name] !== undefined) {\r\n      result = typeof props[name] === 'boolean' ? name : props[name];\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const fillForm = (logradouro: CepLogradouro) => {\r\n    const keyList = Object.keys(props);\r\n    keyList.forEach(key => {\r\n      const name = getProp(key);\r\n      if (name) {\r\n        formProps.setValue(name, logradouro[key]);\r\n      }\r\n    });\r\n  };\r\n\r\n  const clearForm = () => {\r\n    fillForm({\r\n      bairro: null,\r\n      cep: null,\r\n      localidade: null,\r\n      nome: null,\r\n      titulo: null,\r\n      uf: null,\r\n    });\r\n  };\r\n\r\n  return {\r\n    manage: (logradouro: CepLogradouro) => {\r\n      if (logradouro) {\r\n        fillForm(logradouro);\r\n      } else {\r\n        clearForm();\r\n      }\r\n    },\r\n    reset: () => clearForm(),\r\n  };\r\n};\r\n\r\nexport default useCepManager;\r\n","const tiposTelefone = {\r\n  tipoTelefoneCelular: 'Celular',\r\n  tipoTelefoneComercial: 'Comercial',\r\n  tipoTelefoneFax: 'Fax',\r\n  tipoTelefonePrincipal: 'Principal',\r\n  tipoTelefoneResidencial: 'Residencial',\r\n};\r\n\r\nexport function tipoTelefoneSelection(tipoTelefone: any): any {\r\n  const resultado = [];\r\n  // tslint:disable-next-line:forin\r\n  for (const campo in tiposTelefone) {\r\n    // tslint:disable-next-line:no-unused-expression\r\n    tipoTelefone[campo] && resultado.push(tiposTelefone[campo]);\r\n  }\r\n  return resultado.join(', ');\r\n}\r\n\r\nexport function tipoTelefoneFormatter(cell, row) {\r\n  return tipoTelefoneSelection(row);\r\n}\r\n"],"sourceRoot":""}
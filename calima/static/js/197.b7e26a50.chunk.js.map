{"version":3,"sources":["models/enumerated/ger/codigoFinalidadeArquivoEnum.ts","models/enumerated/ger/exigibilidadeEscrituracaoICMSEnum.ts","models/enumerated/ger/exigibilidadeEscrituracaoISSEnum.ts","models/enumerated/ger/indicadorConteudoGuiaEnum.ts","models/enumerated/ger/indicadorEntradaDadosEnum.ts","models/enumerated/ger/indicadorEscrituracaoContabilEnum.ts","views/pages/mlf/report/analiseDeSTDA/analiseDeSTDARelRV.ts","views/pages/mlf/report/analiseDeSTDA/AnaliseDeSTDAReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","dependencies/empresaMLFDependency.ts"],"names":["ARQUIVO_ORIGINAL","value","label","CODIGO_FINALIDADE_ARQUIVO_ENUM_VALUES","EXIGIBILIDADE_ESCRITURACAO_ICMS_ENUM_VALUES","NAO_OBRIGADO_ESCRITURAR","EXIGIBILIDADE_ESCRITURACAO_ISS_ENUM_VALUES","GUIA_INFORMACOES_OPERACOES_ISS","INDICADOR_CONTEUDO_GUIA_ENUM_VALUES","ADICAO_DOCS_ARQUIVO_TEXTO","INDICADOR_ENTRADA_DADOS_ENUM_VALUES","COMPLETA_ARQUIVO_DIGITAL","INDICADOR_ESCRITURACAO_CONTABIL_ENUM_VALUES","DEFAULT_VALUES","Object","objectSpread2","getDefaultReportBasicValues","codigoFinalidadeArquivo","exigibilidadeEscrituracaoICMS","exigibilidadeEscrituracaoISS","gerarCabecalhoPadraoAdministradora","indicadorConteudoGuia","indicadorEntradaDados","indicadorEscrituracaoContabil","DEFAULT_OPTIONS","getDefaultReportViewOptions","DATES","exibirConfiguracaoDadosEmpresa","AnaliseDeSTDAReportView","props","globalReducer","useSelector","state","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","objectWithoutProperties","react_default","a","createElement","summer_esm","title","useGlobalParameter","globalParameter","dependencies","hasEmpresa","hasEmpresaMLF","wikiId","ReportForm","assign","localStorageKey","routeProps","reportBasicValues","reportViewOptions","Row","Col","xs","id","isPrependLabel","placeholder","validation","required","inputDropDownProps","optionsProvider","selectProps","isClearable","type","InputType","DROP_DOWN","FormGroup","tag","CustomInput","name","innerRef","register","result","empresa","__webpack_require__","d","__webpack_exports__","NATUREZA","SALDO_REPORT_ENUM","EmpresaIS","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","inputSearchProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","empresasSelecionadas","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","virtualization","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","errors","getValues","setValue","triggerValidation","handleCancel","validateExtras","currentItem","currentValues","parentObject","EnvioEmail","Fragment","sort","detailView","keyField","propName","className","maxLength","TEXT_AREA","ReportInputs","_useState","useState","_useState2","slicedToArray","activeTab","setActiveTab","useEffect","_props$reportViewOpti","printingTypes","resetObject","length","idGerEmpresa","current","currentMomentDate","endDate","DATE","dtInicial","formatDate","toDate","dtFinal","endOf","REFERENCE","referenciaInicial","format","REF_PATTERN","REFERENCES","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dtInicialRequired","dateComponent","datesComponent","dtFinalRequired","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","NUMBER","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","inputProps","disabled","gerarPorEmpresas","style","marginBottom","size","isMulti","segmentacaoFolhaComponent","exibirSegmentacaoFolha","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","exibirImprimirValoresColoridos","firstOpen","extraConfigOpened","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","hidden","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","erros","params","message","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history","empresaMLF"],"mappings":"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","file":"static/js/197.b7e26a50.chunk.js","sourcesContent":["export const ARQUIVO_ORIGINAL = { value: '0', label: 'Arquivo Original' };\r\nexport const ARQUIVO_SUBSTITUTO = { value: '1', label: 'Arquivo Substituto' };\r\n\r\nexport const CODIGO_FINALIDADE_ARQUIVO_ENUM_VALUES = [ARQUIVO_ORIGINAL, ARQUIVO_SUBSTITUTO];\r\n","export const SIM_MODO_SIMPLIFICADO = {\r\n  label: 'Sim, no modo simplificado de escrituração do imposto',\r\n  value: 'simModoSimplificadoEscrituracaoImposto',\r\n};\r\nexport const SIM_MODO_INTERMEDIARIO = {\r\n  label: 'Sim, no modo intermediário de escrituração do regime normal de apuração do imposto',\r\n  value: 'simModoIntermediarioEscrituracaoRegimeNormalApuracaoImposto',\r\n};\r\nexport const SIM_MODO_INTEGRAL = {\r\n  label: 'Sim, no modo integral de escrituração do regime normal de apuração do imposto',\r\n  value: 'simModoIntegralEscrituracaoRegimeNormalApuracaoImposto',\r\n};\r\nexport const NAO_OBRIGADO_ESCRITURAR = {\r\n  label: 'Não obrigado a escriturar',\r\n  value: 'naoObrigadoEscriturar',\r\n};\r\n\r\nexport const EXIGIBILIDADE_ESCRITURACAO_ICMS_ENUM_VALUES = [\r\n  NAO_OBRIGADO_ESCRITURAR,\r\n  SIM_MODO_INTERMEDIARIO,\r\n  SIM_MODO_INTEGRAL,\r\n  SIM_MODO_SIMPLIFICADO,\r\n];\r\n","export const NAO_OBRIGADO_ESCRITURAR = { label: 'Não obrigado a escriturar', value: 'naoObrigadoEscriturar' };\r\nexport const SIM_MODO_INTEGRAL = {\r\n  label: 'Sim, no modo integral de escrituração do regime normal de apuração do imposto',\r\n  value: 'simModoIntegralEscrituracaoRegimeNormalApuracaoImposto',\r\n};\r\nexport const SIM_MODO_SIMPLIFICADO = {\r\n  label: 'Sim, no modo simplificado de escrituração do imposto',\r\n  value: 'simModoSimplificadoEscrituracaoImposto',\r\n};\r\n\r\nexport const EXIGIBILIDADE_ESCRITURACAO_ISS_ENUM_VALUES = [NAO_OBRIGADO_ESCRITURAR, SIM_MODO_INTEGRAL, SIM_MODO_SIMPLIFICADO];\r\n","export const GUIA_INFORMACOES_OPERACOES_ISS = { label: '0 - Guia com informações de operações do ISS', value: 'guiaInformacoesOperacoesISS' };\r\nexport const GUIA_INFORMACOES_OPERACOES_ICMS = { label: '1 - Guia com informações de operações do ICMS', value: 'guiaInformacoesOperacoesICMS' };\r\nexport const GUIA_INFORMACOES_OPERACOES_SIMPLES_NACIONAL = {\r\n  label: '2 - Guia com informações de operações do Simples Nacional',\r\n  value: 'guiaInformacoesOperacoesSimplesNacional',\r\n};\r\nexport const RESULTADO_RECALCULO_ADICIONADO_OPERACOES_ICMS = {\r\n  label: '8 - Resultado do recálculo do valor adicionado em operações do ICMS',\r\n  value: 'resultadoRecalculoAdicionadoOperacoesICMS',\r\n};\r\nexport const GUIA_SEM_DADOS_INFORMADOS = { label: '9 - Guia sem dados informados', value: 'guiaSemDadosInformados' };\r\n\r\nexport const INDICADOR_CONTEUDO_GUIA_ENUM_VALUES = [\r\n  GUIA_INFORMACOES_OPERACOES_ISS,\r\n  GUIA_INFORMACOES_OPERACOES_ICMS,\r\n  GUIA_INFORMACOES_OPERACOES_SIMPLES_NACIONAL,\r\n  RESULTADO_RECALCULO_ADICIONADO_OPERACOES_ICMS,\r\n  GUIA_SEM_DADOS_INFORMADOS,\r\n];\r\n","export const DIGITACAO_DADOS = { value: 'digitacaoDados', label: 'Digitação de dados' };\r\nexport const IMPORTACAO_ARQUIVO_TEXTO = { value: 'importacaoArquivoTexto', label: 'Importação de arquivo-texto' };\r\nexport const ADICAO_DOCS_ARQUIVO_TEXTO = { value: 'adicaoDocumentosArquivoTexto', label: 'Adição de documentos/arquivo-texto' };\r\nexport const EXPORTACAO_ARQUIVO_TEXTO = { value: 'exportacaoArquivoTexto', label: 'Exportação de arquivo-texto' };\r\n\r\nexport const INDICADOR_ENTRADA_DADOS_ENUM_VALUES = [ADICAO_DOCS_ARQUIVO_TEXTO, DIGITACAO_DADOS, EXPORTACAO_ARQUIVO_TEXTO, IMPORTACAO_ARQUIVO_TEXTO];\r\n","export const COMPLETA_ARQUIVO_DIGITAL = {\r\n  label: 'Completa registrada em arquivo digital',\r\n  value: 'completaRegistradaArquivoDigital',\r\n};\r\nexport const COMPLETA_FICHA_AVULSA = {\r\n  label: 'Completa registrada em papel, microfilme, fichas avulsas, ou fichas/folhas contínuas',\r\n  value: 'completaRegistradaPapelFichaAvulsaContinua',\r\n};\r\nexport const SIMPLIFICADA_ARQUIVO_DIGITAL = {\r\n  label: 'Simplificada registrada em arquivo digital',\r\n  value: 'simplificadaRegistradaArquivoDigital',\r\n};\r\nexport const SIMPLIFICADA_FICHA_AVULSA = {\r\n  label: 'Simplificada registrada papel, microfilme, fichas avulsas, ou fichas/folhas contínuas',\r\n  value: 'simplificadaRegistradaPapelFichaAvulsaContinua',\r\n};\r\nexport const LIVRO_CAIXA_ARQUIVO_DIGITAL = {\r\n  label: 'Livro Caixa registrado em arquivo digital',\r\n  value: 'livroCaixaRegistradoArquivoDigital',\r\n};\r\nexport const LIVRO_CAIXA_FICHA_AVULSA = {\r\n  label: 'Livro Caixa registrado papel, microfilme, fichas avulsas, ou fichas/folhas contínuas',\r\n  value: 'livroCaixaRegistradoPapelFichaAvulsaContinua',\r\n};\r\nexport const NAO_OBRIGADO_ESCRITURAR = {\r\n  label: 'Não obrigado a escriturar',\r\n  value: 'naoObrigadoEscriturar',\r\n};\r\n\r\nexport const INDICADOR_ESCRITURACAO_CONTABIL_ENUM_VALUES = [\r\n  COMPLETA_ARQUIVO_DIGITAL,\r\n  COMPLETA_FICHA_AVULSA,\r\n  LIVRO_CAIXA_ARQUIVO_DIGITAL,\r\n  LIVRO_CAIXA_FICHA_AVULSA,\r\n  SIMPLIFICADA_ARQUIVO_DIGITAL,\r\n  NAO_OBRIGADO_ESCRITURAR,\r\n  SIMPLIFICADA_FICHA_AVULSA,\r\n];\r\n","import { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\n\r\nexport interface AnaliseDeSTDARelRV extends ReportBasicValues {\r\n  /** Campo utiliza o ExigibilidadeEscrituracaoISSEnum */\r\n  exigibilidadeEscrituracaoISS?: string;\r\n  /** Campo utiliza o ExigibilidadeEscrituracaoICMSEnum */\r\n  exigibilidadeEscrituracaoICMS?: string;\r\n  /** Campo utiliza o IndicadorEscrituracaoContabilEnum */\r\n  indicadorEscrituracaoContabil?: string;\r\n  /** Campo utiliza o CodigoFinalidadeArquivoEnum */\r\n  codigoFinalidadeArquivo?: string;\r\n  /** Campo utiliza o IndicadorConteudoGuiaEnum */\r\n  indicadorConteudoGuia?: string;\r\n  /** Campo utiliza o  IndicadorEntradaDadosEnum */\r\n  indicadorEntradaDados?: string;\r\n  impressaoDocsFiscais?: boolean;\r\n  utilizacaoDocsFiscais?: boolean;\r\n  movimentacaoDocsFiscais?: boolean;\r\n  registroVeiculo?: boolean;\r\n  registroInventario?: boolean;\r\n  operacoesSujeitasISS?: boolean;\r\n  operacoesSujeitasRetencaoTributariaISS?: boolean;\r\n  operacoesSujeitasICMS?: boolean;\r\n  operacoesSujeitasSubstituicaoTributariaICMS?: boolean;\r\n  operacoesSujeitasAntecipacaoTributariaICMS?: boolean;\r\n  operacoesSujeitasIPI?: boolean;\r\n  apresentacaoAvulsaRegistroInventario?: boolean;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'analisedestdarelrv';\r\nexport const REPORT_EVENT: string = 'printAnaliseDeSTDA';\r\nexport const REPORT_TITLE: string = 'Relatório DeSTDA';\r\n","import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, CustomInput, FormGroup, Row } from 'reactstrap';\r\nimport { DATES, InputGroupInline, InputType, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMLF } from '../../../../../dependencies/empresaMLFDependency';\r\nimport { getDefaultReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport { ARQUIVO_ORIGINAL, CODIGO_FINALIDADE_ARQUIVO_ENUM_VALUES } from '../../../../../models/enumerated/ger/codigoFinalidadeArquivoEnum';\r\nimport { EXIGIBILIDADE_ESCRITURACAO_ICMS_ENUM_VALUES } from '../../../../../models/enumerated/ger/exigibilidadeEscrituracaoICMSEnum';\r\nimport {\r\n  EXIGIBILIDADE_ESCRITURACAO_ISS_ENUM_VALUES,\r\n  NAO_OBRIGADO_ESCRITURAR,\r\n} from '../../../../../models/enumerated/ger/exigibilidadeEscrituracaoISSEnum';\r\nimport { GUIA_INFORMACOES_OPERACOES_ISS, INDICADOR_CONTEUDO_GUIA_ENUM_VALUES } from '../../../../../models/enumerated/ger/indicadorConteudoGuiaEnum';\r\nimport { ADICAO_DOCS_ARQUIVO_TEXTO, INDICADOR_ENTRADA_DADOS_ENUM_VALUES } from '../../../../../models/enumerated/ger/indicadorEntradaDadosEnum';\r\nimport {\r\n  COMPLETA_ARQUIVO_DIGITAL,\r\n  INDICADOR_ESCRITURACAO_CONTABIL_ENUM_VALUES,\r\n} from '../../../../../models/enumerated/ger/indicadorEscrituracaoContabilEnum';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { AnaliseDeSTDARelRV, CLASS_KEY, REPORT_EVENT, REPORT_TITLE } from './analiseDeSTDARelRV';\r\n\r\nconst DEFAULT_VALUES: AnaliseDeSTDARelRV = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n  codigoFinalidadeArquivo: ARQUIVO_ORIGINAL.value,\r\n  exigibilidadeEscrituracaoICMS: EXIGIBILIDADE_ESCRITURACAO_ICMS_ENUM_VALUES[0].value,\r\n  exigibilidadeEscrituracaoISS: NAO_OBRIGADO_ESCRITURAR.value,\r\n  gerarCabecalhoPadraoAdministradora: true,\r\n  indicadorConteudoGuia: GUIA_INFORMACOES_OPERACOES_ISS.value,\r\n  indicadorEntradaDados: ADICAO_DOCS_ARQUIVO_TEXTO.value,\r\n  indicadorEscrituracaoContabil: COMPLETA_ARQUIVO_DIGITAL.value,\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT, DATES.value),\r\n  exibirConfiguracaoDadosEmpresa: true,\r\n};\r\n\r\nconst AnaliseDeSTDAReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const { handleSubmit, ...formProps } = useForm<AnaliseDeSTDARelRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Análise DeSTDA\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMLF(globalReducer.globalParameter)]}\r\n      wikiId={948}\r\n    >\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n      >\r\n        <Row>\r\n          <Col xs={5}>\r\n            <InputGroupInline\r\n              id=\"codigoFinalidadeArquivo\"\r\n              label=\"Finalidade do arquivo\"\r\n              isPrependLabel={true}\r\n              placeholder=\"Informe a Finalidade do arquivo\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              inputDropDownProps={{\r\n                optionsProvider: CODIGO_FINALIDADE_ARQUIVO_ENUM_VALUES,\r\n                selectProps: { isClearable: false },\r\n              }}\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"indicadorConteudoGuia\"\r\n              label=\"Indicador de conteúdo da guia\"\r\n              isPrependLabel={true}\r\n              placeholder=\"Informe o Indicador de conteúdo da guia\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              inputDropDownProps={{\r\n                optionsProvider: INDICADOR_CONTEUDO_GUIA_ENUM_VALUES,\r\n                selectProps: { isClearable: false },\r\n              }}\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"indicadorEntradaDados\"\r\n              label=\"Indicador de entrada de dados\"\r\n              isPrependLabel={true}\r\n              placeholder=\"Informe o Indicador de entrada de dados\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              inputDropDownProps={{\r\n                optionsProvider: INDICADOR_ENTRADA_DADOS_ENUM_VALUES,\r\n                selectProps: { isClearable: false },\r\n              }}\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"exigibilidadeEscrituracaoISS\"\r\n              label=\"Exigibilidade da escrituração do ISS\"\r\n              isPrependLabel={true}\r\n              placeholder=\"Informe a Exigibilidade da escrituração do ISS\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              inputDropDownProps={{\r\n                optionsProvider: EXIGIBILIDADE_ESCRITURACAO_ISS_ENUM_VALUES,\r\n                selectProps: { isClearable: false },\r\n              }}\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"exigibilidadeEscrituracaoICMS\"\r\n              label=\"Exigibilidade da escrituração do ICMS\"\r\n              isPrependLabel={true}\r\n              placeholder=\"Informe a Exigibilidade da escrituração do ICMS\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              inputDropDownProps={{\r\n                optionsProvider: EXIGIBILIDADE_ESCRITURACAO_ICMS_ENUM_VALUES,\r\n                selectProps: { isClearable: false },\r\n              }}\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"indicadorEscrituracaoContabil\"\r\n              label=\"Indicador de escrituração contábil\"\r\n              isPrependLabel={true}\r\n              placeholder=\"Informe o Indicador de escrituração contábil\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              inputDropDownProps={{\r\n                optionsProvider: INDICADOR_ESCRITURACAO_CONTABIL_ENUM_VALUES,\r\n                selectProps: { isClearable: false },\r\n              }}\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <FormGroup tag={Row}>\r\n          <Col>\r\n            <CustomInput\r\n              id=\"checkImpressaoDocsFiscais\"\r\n              label=\"Exigibilidade do Registro de Impressão de Documentos Fiscais\"\r\n              name=\"impressaoDocsFiscais\"\r\n              innerRef={formProps.register}\r\n              type=\"switch\"\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <CustomInput\r\n              id=\"checkUtilizacaoDocsFiscais\"\r\n              label=\"Exigibilidade do Registro de Utilização de Documentos Fiscais\"\r\n              name=\"utilizacaoDocsFiscais\"\r\n              innerRef={formProps.register}\r\n              type=\"switch\"\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup tag={Row}>\r\n          <Col>\r\n            <CustomInput\r\n              id=\"checkMovimentacaoDocsFiscaisl\"\r\n              label=\"Exigibilidade do Livro de Movimentação de Combustíveis\"\r\n              name=\"movimentacaoDocsFiscais\"\r\n              innerRef={formProps.register}\r\n              type=\"switch\"\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <CustomInput\r\n              id=\"checkRegistroVeiculo\"\r\n              label=\"Exigibilidade do Registro de Veículos\"\r\n              name=\"registroVeiculo\"\r\n              innerRef={formProps.register}\r\n              type=\"switch\"\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup tag={Row}>\r\n          <Col>\r\n            <CustomInput\r\n              id=\"checkRegistroInventario\"\r\n              label=\"Exigibilidade anual do Registro de Inventário\"\r\n              name=\"registroInventario\"\r\n              innerRef={formProps.register}\r\n              type=\"switch\"\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <CustomInput\r\n              id=\"checkImprimirDataInicialFinal\"\r\n              label=\"Trocar campo referência do cabeçalho para data inicial/final\"\r\n              name=\"imprimirDataInicialFinal\"\r\n              innerRef={formProps.register}\r\n              type=\"switch\"\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup tag={Row}>\r\n          <Col>\r\n            <CustomInput\r\n              id=\"checkOperacoesSujeitasISS\"\r\n              label=\"Operações sujeitas ao ISS\"\r\n              name=\"operacoesSujeitasISS\"\r\n              innerRef={formProps.register}\r\n              type=\"switch\"\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <CustomInput\r\n              id=\"checkOperacoesSujeitasRetencaoTributariaISS\"\r\n              label=\"Operações sujeitas à retenção tributária do ISS, na condição de contribuinte-substituído\"\r\n              name=\"operacoesSujeitasRetencaoTributariaISS\"\r\n              innerRef={formProps.register}\r\n              type=\"switch\"\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup tag={Row}>\r\n          <Col>\r\n            <CustomInput\r\n              id=\"checkOperacoesSujeitasICMS\"\r\n              label=\"Operações sujeitas ao ICMS\"\r\n              name=\"operacoesSujeitasICMS\"\r\n              innerRef={formProps.register}\r\n              type=\"switch\"\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <CustomInput\r\n              id=\"checkOperacoesSujeitasAntecipacaoTributariaICMS\"\r\n              label=\"Operações sujeitas à antecipação tributária do ICMS, nas entradas\"\r\n              name=\"operacoesSujeitasAntecipacaoTributariaICMS\"\r\n              innerRef={formProps.register}\r\n              type=\"switch\"\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup tag={Row}>\r\n          <Col>\r\n            <CustomInput\r\n              id=\"checkOperacoesSujeitasIPI\"\r\n              label=\"Operações sujeitas ao IPI\"\r\n              name=\"operacoesSujeitasIPI\"\r\n              innerRef={formProps.register}\r\n              type=\"switch\"\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <CustomInput\r\n              id=\"checkOpresentacaoAvulsaRegistroInventario\"\r\n              label=\"Apresentação avulsa do Registro de Inventário\"\r\n              name=\"apresentacaoAvulsaRegistroInventario\"\r\n              innerRef={formProps.register}\r\n              type=\"switch\"\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup tag={Row}>\r\n          <Col>\r\n            <CustomInput\r\n              id=\"checkOperacoesSujeitasSubstituicaoTributariaICMS\"\r\n              label=\"Operações sujeitas à substituição tributária do ICMS, na condição de contribuinte-substituto\"\r\n              name=\"operacoesSujeitasSubstituicaoTributariaICMS\"\r\n              innerRef={formProps.register}\r\n              type=\"switch\"\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n      </ReportForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default AnaliseDeSTDAReportView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMLF(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMLF) {\r\n    result =\r\n      'A empresa fiscal da empresa selecionada deve estar configurada. Para configurar acesse:\\n' +\r\n      'Módulo Fiscal > Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["views/pages/mfp/evento/EventoSearchView.tsx","dependencies/empresaDependency.ts","dependencies/empresaMFPDependency.ts","dependencies/grupoEmpresaConfigDependency.ts","models/dtos/mfp/eventoExample.ts","models/enumerated/mfp/tipoEventoEnum.ts","models/dtos/mfp/evento.ts"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","summer__WEBPACK_IMPORTED_MODULE_2__","_dependencies_empresaDependency__WEBPACK_IMPORTED_MODULE_3__","_dependencies_empresaMFPDependency__WEBPACK_IMPORTED_MODULE_4__","_dependencies_grupoEmpresaConfigDependency__WEBPACK_IMPORTED_MODULE_5__","_models_dtos_mfp_evento__WEBPACK_IMPORTED_MODULE_6__","_models_dtos_mfp_eventoExample__WEBPACK_IMPORTED_MODULE_7__","_models_enumerated_mfp_tipoEventoEnum__WEBPACK_IMPORTED_MODULE_8__","defaultSorted","dataField","order","OrderType","ASC","EventoSearchView","props","globalReducer","useSelector","state","columns","filter","type","FilterType","NUMBER","sort","text","TEXT","enumColumn","TIPO_EVENTO_ENUM_VALUES","boolColumn","a","createElement","title","useGlobalParameter","globalParameter","dependencies","hasEmpresa","hasEmpresaMFP","hasGrupoEmpresaConfig","Object","assign","searchDataGridProps","dtoClassName","CLASS_NAME_EXAMPLE","extraData","getExtraData","CLASS_NAME","searchExpressions","expressions","fieldName","operation","OperationEnum","EQUAL","value","grupoEmpresaConfig","grupoEvento","id","result","empresa","d","empresaMFP","grupoEmpresaRaiz","grupoEmpresa","EVENTOS_INFORMATIVOS_VALUES","INFORMATIVO","label","INFORMATIVO_DEDUTOR"],"mappings":"6FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,IAAAO,EAAAP,EAAA,GAAAQ,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,KAyBA,MAAMc,EAAoC,CACxC,CACEC,UAAW,SACXC,MAAOC,IAAUC,MAuFNC,UAnFuCC,KACpD,MAAMC,EAAgBC,YAAmCC,GAASA,EAAMF,eAIlEG,EAA0B,CAC9B,CACET,UAAW,SACXU,OAAQ,CACNC,KAAMC,IAAWC,QAEnBC,MAAM,EACNC,KAAM,aAER,CACEf,UAAW,YACXU,OAAQ,CACNC,KAAMC,IAAWI,MAEnBF,MAAM,EACNC,KAAM,mBAERE,aACE,CACEjB,UAAW,OACXe,KAAM,QAERG,KAEF,CACElB,UAAW,UACXe,KAAM,cAERI,aAAW,CACTnB,UAAW,aACXe,KAAM,mBAERI,aAAW,CACTnB,UAAW,kBACXe,KAAM,uBAoBV,OACE1B,EAAA+B,EAAAC,cAAC7B,EAAA,GAAD,CACE8B,MAAM,8BACNC,oBAAoB,EACpBC,gBAAiBlB,EAAckB,gBAC/BC,aAAc,CACZ,IAAMC,YAAWpB,EAAckB,iBAC/B,IAAMG,YAAcrB,EAAckB,iBAClC,IAAMI,YAAsBtB,EAAckB,mBAG5CnC,EAAA+B,EAAAC,cAAC7B,EAAA,EAADqC,OAAAC,OAAA,GACMzB,EACAA,EAAM0B,oBAFZ,CAGEtB,QAASA,EACTV,cAAeA,EACfiC,aAAcC,IACdC,UAAWC,aAAa9B,EAAO,iBAAkB+B,KACjDC,kBAlCsB,IACnB,CACL,CACEC,YAAa,CACX,CACEC,UAAW,YACXC,UAAWC,IAAcC,MACzBC,OAAO,IAGXJ,UAAW,WACXI,MAAOrC,EAAckB,gBAAgBoB,mBAAmBC,YAAYC,6CCpFrE,SAASpB,EAAWF,GACzB,IAAIuB,EAAS,KAIb,OAHKvB,EAAgBwB,UACnBD,EAAS,kDAEJA,EALT9D,EAAAgE,EAAA9D,EAAA,sBAAAuC,sCCAO,SAASC,EAAcH,GAC5B,IAAIuB,EAAS,KAKb,OAJKvB,EAAgB0B,aACnBH,EACE,sKAEGA,EANT9D,EAAAgE,EAAA9D,EAAA,sBAAAwC,sCCAO,SAASC,EAAsBJ,GACpC,IAAIuB,EAAS,KAcb,OAPGvB,EAAgBwB,SAChBxB,EAAgBwB,QAAQG,iBAAiBP,oBACzCpB,EAAgBwB,QAAQI,aAAaR,qBAEtCG,EARA,oLAWKA,EAfT9D,EAAAgE,EAAA9D,EAAA,sBAAAyC,sCCmBA3C,EAAAgE,EAAA9D,EAAA,sBAAAiD,IAAO,MAAMA,EAAa,kGCrB1BnD,EAAAgE,EAAA9D,EAAA,sBAAA+B,IAAAjC,EAAAgE,EAAA9D,EAAA,sBAAAkE,IAAO,MAGMC,EAAc,CAAEC,MAAO,cAAeZ,MAAO,eAC7Ca,EAAsB,CAAED,MAAO,sBAAuBZ,MAAO,uBAE7DzB,EAA0B,CANd,CAAEqC,MAAO,aAAcZ,MAAO,aAC/B,CAAEY,MAAO,WAAYZ,MAAO,YAC3B,CAAEY,MAAO,YAAaZ,MAAO,aAIkBW,EAAaE,GACxEH,EAA8B,CAACC,EAAaE,qCCwDzDvE,EAAAgE,EAAA9D,EAAA,sBAAAiD,IAAO,MAAMA,EAAa","file":"static/js/219.692dae6b.chunk.js","sourcesContent":["import React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  boolColumn,\r\n  ColumnsProps,\r\n  DefaultSortProps,\r\n  enumColumn,\r\n  FilterType,\r\n  getExtraData,\r\n  OperationEnum,\r\n  OrderType,\r\n  SearchDataGrid,\r\n  SearchExpression,\r\n  SearchViewProps,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMFP } from '../../../../dependencies/empresaMFPDependency';\r\nimport { hasGrupoEmpresaConfig } from '../../../../dependencies/grupoEmpresaConfigDependency';\r\nimport { CLASS_NAME, Evento } from '../../../../models/dtos/mfp/evento';\r\nimport { CLASS_NAME as CLASS_NAME_EXAMPLE } from '../../../../models/dtos/mfp/eventoExample';\r\nimport { TIPO_EVENTO_ENUM_VALUES } from '../../../../models/enumerated/mfp/tipoEventoEnum';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\nconst defaultSorted: DefaultSortProps[] = [\r\n  {\r\n    dataField: 'codigo',\r\n    order: OrderType.ASC,\r\n  },\r\n];\r\n\r\nconst EventoSearchView: FC<SearchViewProps<Evento>> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  // TODO Implementar regras de negócio, filtros e legendas\r\n\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'codigo',\r\n      filter: {\r\n        type: FilterType.NUMBER,\r\n      },\r\n      sort: true,\r\n      text: 'Código',\r\n    },\r\n    {\r\n      dataField: 'descricao',\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      sort: true,\r\n      text: 'Descrição',\r\n    },\r\n    enumColumn(\r\n      {\r\n        dataField: 'tipo',\r\n        text: 'Tipo',\r\n      },\r\n      TIPO_EVENTO_ENUM_VALUES\r\n    ),\r\n    {\r\n      dataField: 'formula',\r\n      text: 'Fórmula',\r\n    },\r\n    boolColumn({\r\n      dataField: 'subFormula',\r\n      text: 'Sub-fórmula',\r\n    }),\r\n    boolColumn({\r\n      dataField: 'isEnviarEsocial',\r\n      text: 'Enviar ao eSocial',\r\n    }),\r\n  ];\r\n\r\n  const getSearchExpression = (): SearchExpression[] => {\r\n    return [\r\n      {\r\n        expressions: [\r\n          {\r\n            fieldName: 'constante',\r\n            operation: OperationEnum.EQUAL,\r\n            value: false,\r\n          },\r\n        ],\r\n        fieldName: 'grupo.id',\r\n        value: globalReducer.globalParameter.grupoEmpresaConfig.grupoEvento.id,\r\n      },\r\n    ];\r\n  };\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Manutenção de Eventos\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[\r\n        () => hasEmpresa(globalReducer.globalParameter),\r\n        () => hasEmpresaMFP(globalReducer.globalParameter),\r\n        () => hasGrupoEmpresaConfig(globalReducer.globalParameter),\r\n      ]}\r\n    >\r\n      <SearchDataGrid\r\n        {...props}\r\n        {...props.searchDataGridProps}\r\n        columns={columns}\r\n        defaultSorted={defaultSorted}\r\n        dtoClassName={CLASS_NAME_EXAMPLE}\r\n        extraData={getExtraData(props, 'EventoEditView', CLASS_NAME)}\r\n        searchExpressions={getSearchExpression}\r\n      />\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default EventoSearchView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMFP(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMFP) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o Módulo Folha de Pagamento. Para configurá-la acesse Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasGrupoEmpresaConfig(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n\r\n  const msg: string =\r\n    'O Grupo de empresas não está configurado para a empresa selecionada. Para configurar acesse:\\n' +\r\n    'Modulo Principal > Manutenção > Configurações > Grupo de Empresa';\r\n\r\n  if (\r\n    !globalParameter.empresa ||\r\n    !globalParameter.empresa.grupoEmpresaRaiz.grupoEmpresaConfig ||\r\n    !globalParameter.empresa.grupoEmpresa.grupoEmpresaConfig\r\n  ) {\r\n    result = msg;\r\n  }\r\n\r\n  return result;\r\n}\r\n","import { Basic } from 'summer';\r\nimport { GrupoEvento } from './grupoEvento';\r\n\r\nexport interface EventoExample extends Basic {\r\n  codigo?: number;\r\n  constante?: boolean;\r\n  descricao?: string;\r\n  fixo?: boolean;\r\n  formula?: string;\r\n  grupo?: GrupoEvento;\r\n  insideSalarioComposto?: boolean;\r\n  isEnviarEsocial?: boolean;\r\n  logEsocialStr?: string;\r\n  logStr?: string;\r\n  /** campo utiliza o enum NaturezaEventoEnum */\r\n  naturezaEvento?: string;\r\n  subFormula?: boolean;\r\n  /** campo utiliza o enum TipoEventoEnum */\r\n  tipo?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.eventoexample';\r\n","export const REDIMENTO = { label: 'Rendimento', value: 'REDIMENTO' };\r\nexport const DESCONTO = { label: 'Desconto', value: 'DESCONTO' };\r\nexport const CALCULADO = { label: 'Calculado', value: 'CALCULADO' };\r\nexport const INFORMATIVO = { label: 'Informativo', value: 'INFORMATIVO' };\r\nexport const INFORMATIVO_DEDUTOR = { label: 'Informativo Dedutor', value: 'INFORMATIVO_DEDUTOR' };\r\n\r\nexport const TIPO_EVENTO_ENUM_VALUES = [REDIMENTO, DESCONTO, CALCULADO, INFORMATIVO, INFORMATIVO_DEDUTOR];\r\nexport const EVENTOS_INFORMATIVOS_VALUES = [INFORMATIVO, INFORMATIVO_DEDUTOR];\r\n","import { EventoExample } from './eventoExample';\r\nimport { NaturezaRubrica } from './naturezaRubrica';\r\nimport { Rubrica } from './rubrica';\r\n\r\nexport interface Evento extends EventoExample {\r\n  acumula13Salario?: boolean;\r\n  acumulaAvisoPrevio?: boolean;\r\n  acumulaFeriasRescisao?: boolean;\r\n  acumulaInfRendimentos?: boolean;\r\n  fatorESocial?: string;\r\n  fatorESocialVrManual?: number;\r\n  forcarRecalculoSubFormula?: boolean;\r\n  habilitadoConnect?: boolean;\r\n  horaAula?: boolean;\r\n  horaExtraRais?: boolean;\r\n  incidenciaSobreSalarioMaternidade?: boolean;\r\n  incidenciaSobreSeguroDesemprego?: boolean;\r\n  /** campo utiliza o enum IncidenciaTributariaContribuicaoSindicalEnum */\r\n  incidenciaTributariaContribuicaoSindicalLaboral?: string;\r\n  /** campo utiliza o enum IncidenciaTributariaFGTSEnum */\r\n  incidenciaTributariaFGTSDecimoTerceiro?: string;\r\n  /** campo utiliza o enum IncidenciaTributariaFGTSEnum */\r\n  incidenciaTributariaFGTSFolha?: string;\r\n  /** campo utiliza o enum IncidenciaTributariaIRRFEnum */\r\n  incidenciaTributariaIRRFDecimoTerceiro?: string;\r\n  /** campo utiliza o enum IncidenciaTributariaIRRFEnum */\r\n  incidenciaTributariaIRRFFerias?: string;\r\n  /** campo utiliza o enum IncidenciaTributariaIRRFEnum */\r\n  incidenciaTributariaIRRFFolha?: string;\r\n  /** campo utiliza o enum IncidenciaTributariaIRRFEnum */\r\n  incidenciaTributariaIRRFPLR?: string;\r\n  /** campo utiliza o enum IncidenciaTributariaPrevidenciaSocialEnum */\r\n  incidenciaTributariaPrevidenciaDecimoTerceiro?: string;\r\n  /** campo utiliza o enum IncidenciaTributariaPrevidenciaSocialEnum */\r\n  incidenciaTributariaPrevidenciaFolha?: string;\r\n  insideDarfPIS?: boolean;\r\n  insideFGTS?: boolean;\r\n  insideINSS?: boolean;\r\n  /** campo utiliza o enum InssIrrfSobreEnum */\r\n  insideINSSSobre?: string;\r\n  insideIRRF?: boolean;\r\n  /** campo utiliza o enum InssIrrfSobreEnum */\r\n  insideIRRFSobre?: string;\r\n  isCalcularEventoFeriasProporcionalNaFolha?: boolean;\r\n  isVrManualfatorESocial?: boolean;\r\n  isVrManualReferenciaESocial?: boolean;\r\n  mediaSobreHoras?: boolean;\r\n  naturezaRubrica?: NaturezaRubrica;\r\n  nroMesesAcumulacao13?: number;\r\n  nroMesesAcumulacaoAvisoPrevio?: number;\r\n  nroMesesAcumulacaoFeriasRecisao?: number;\r\n  percentualRubrica?: number;\r\n  referenciaESocial?: string;\r\n  referenciaESocialVrManual?: number;\r\n  referenciaFormula?: string;\r\n  rubrica?: Rubrica;\r\n  /** campo utiliza o enum RubicaHomolognetDescontoEnum */\r\n  rubricaHomolognetDesconto?: string;\r\n  /** campo utiliza o enum TipoArredondamentoEnum */\r\n  tipoArredondamento?: string;\r\n  usadoRais?: boolean;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.evento';\r\n"],"sourceRoot":""}
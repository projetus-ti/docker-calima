{"version":3,"sources":["views/pages/mlf/report/conferenciaNotaEntradaSaida/conferenciaNotasRV.ts","views/pages/mlf/report/conferenciaNotaEntradaSaida/ConferenciaNotasEntradaReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","dependencies/empresaMLFDependency.ts","models/enumerated/mlf/tipoMovimentoEnum.ts","models/dtos/ger/cfop.ts","views/components/ger/cfopIS/CFOPIS.tsx"],"names":["__webpack_require__","d","__webpack_exports__","CLASS_KEY","REPORT_EVENT","REPORT_TITLE","DEFAULT_VALUES","Object","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__","getDefaultReportBasicValues","concat","cfops","entrada","gerarCabecalhoPadraoAdministradora","DEFAULT_OPTIONS","getDefaultReportViewOptions","DATES","value","exibirConfiguracaoDadosEmpresa","ConferenciaNotasEntradaReportView","props","globalReducer","useSelector","state","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_5__","title","useGlobalParameter","globalParameter","dependencies","hasEmpresa","hasEmpresaMLF","wikiId","_components_ger_cfopIS_CFOPIS__WEBPACK_IMPORTED_MODULE_11__","id","inputSearchProps","selectProps","isMulti","tipoMovimento","ENTRADA","tooltipProps","message","hidden","_components_report_ReportForm__WEBPACK_IMPORTED_MODULE_12__","assign","localStorageKey","routeProps","reportBasicValues","reportViewOptions","result","empresa","NATUREZA","label","SALDO_REPORT_ENUM","EmpresaIS","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","isPrependLabel","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","placeholder","type","InputType","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","empresasSelecionadas","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","virtualization","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","errors","getValues","register","setValue","triggerValidation","react_default","summer_esm","handleCancel","validateExtras","currentItem","currentValues","parentObject","objectSpread2","validation","required","EnvioEmail","Fragment","sort","detailView","keyField","propName","Row","className","Col","CustomInput","name","innerRef","maxLength","TEXT_AREA","ReportInputs","_useState","useState","_useState2","slicedToArray","activeTab","setActiveTab","useEffect","_props$reportViewOpti","printingTypes","resetObject","length","idGerEmpresa","current","currentMomentDate","endDate","DATE","dtInicial","formatDate","toDate","dtFinal","endOf","REFERENCE","referenciaInicial","format","REF_PATTERN","REFERENCES","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dtInicialRequired","dateComponent","datesComponent","dtFinalRequired","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","NUMBER","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","inputProps","disabled","gerarPorEmpresas","style","marginBottom","size","segmentacaoFolhaComponent","exibirSegmentacaoFolha","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","exibirImprimirValoresColoridos","inputDropDownProps","optionsProvider","isClearable","DROP_DOWN","firstOpen","extraConfigOpened","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","ReportForm","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","erros","params","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history","empresaMLF","SAIDA","TIPO_MOVIMENTO_INTERNO_ENUM_VALUES","CFOPIS","customInputSearchProps","searchExpressions","expressions","_step","_iterator","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__","s","n","done","tipo","alias","fieldName","push","comparator","ComparatorEnum","LIKE","conditionalGroup","operation","ordered","err","e","f","summer__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"static/js/75.7b46e7dc.chunk.js","sourcesContent":["import { Cfop } from '../../../../../models/dtos/ger/cfop';\r\nimport { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\n\r\nexport interface ConferenciaNotasRV extends ReportBasicValues {\r\n  apresentarforcenedorEntrada?: boolean;\r\n  cfops?: Cfop[];\r\n  entrada?: boolean;\r\n  industria?: boolean;\r\n  totalAPrazo?: number;\r\n  totalAVista?: number;\r\n  totalBaseCalculoIcms?: number;\r\n  totalBaseCalculoIpi?: number;\r\n  totalBaseIcmsST?: number;\r\n  totalDiferida?: number;\r\n  totalIcmsNaoTributado?: number;\r\n  totalIcmsSTPago?: number;\r\n  totalIcmsSTRecolher?: number;\r\n  totalIcmsSTRetido?: number;\r\n  totalImpostoDebitadoIcms?: number;\r\n  totalImpostoDebitadoIpi?: number;\r\n  totalIpiNaoTributado?: number;\r\n  totalIsentoIcms?: number;\r\n  totalIsentoIpi?: number;\r\n  totalOutrasIcms?: number;\r\n  totalOutrasIpi?: number;\r\n  totalParcBaseCalReduzida?: number;\r\n  totalSemPgto?: number;\r\n  totalSuspensa?: number;\r\n  totalVrContabil?: number;\r\n  totalVrICMSSTContabil?: number;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'conferencianotasrv';\r\nexport const REPORT_EVENT: string = 'printConferenciaNotas';\r\nexport const REPORT_TITLE: string = 'Conferência de Notas';\r\n","import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { DATES, InputGroupInline, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMLF } from '../../../../../dependencies/empresaMLFDependency';\r\nimport { getDefaultReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport { ENTRADA } from '../../../../../models/enumerated/mlf/tipoMovimentoEnum';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport CFOPIS from '../../../../components/ger/cfopIS/CFOPIS';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { CLASS_KEY, ConferenciaNotasRV, REPORT_EVENT, REPORT_TITLE } from './conferenciaNotasRV';\r\n\r\nconst DEFAULT_VALUES: ConferenciaNotasRV = {\r\n  ...getDefaultReportBasicValues(`${REPORT_TITLE} de Entradas`),\r\n  cfops: [],\r\n  entrada: true,\r\n  gerarCabecalhoPadraoAdministradora: true,\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT, DATES.value),\r\n  exibirConfiguracaoDadosEmpresa: true,\r\n};\r\n\r\nconst ConferenciaNotasEntradaReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const { handleSubmit, ...formProps } = useForm<ConferenciaNotasRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Conferência de Notas\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMLF(globalReducer.globalParameter)]}\r\n      wikiId={4108}\r\n    >\r\n      <CFOPIS\r\n        formProps={formProps}\r\n        id=\"cfops\"\r\n        inputSearchProps={{ selectProps: { isMulti: true } }}\r\n        tipoMovimento={ENTRADA.cfops}\r\n        tooltipProps={{ message: 'Caso não seja informado, o sistema irá considerar todas as CFOPs' }}\r\n      />\r\n      <InputGroupInline formProps={formProps} id=\"entrada\" hidden={true} />\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n      />\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default ConferenciaNotasEntradaReportView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMLF(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMLF) {\r\n    result =\r\n      'A empresa fiscal da empresa selecionada deve estar configurada. Para configurar acesse:\\n' +\r\n      'Módulo Fiscal > Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n","export const ENTRADA = { cfops: [1, 2, 3], label: 'Entrada', value: 'entrada' };\r\nexport const SAIDA = { cfops: [5, 6, 7], label: 'Saída', value: 'saida' };\r\nexport const ENTRADA_TIPO_MOVIMENTO_INTERNO = { label: 'Entrada', value: 'E' };\r\nexport const SAIDA_TIPO_MOVIMENTO_INTERNO = { label: 'Saída', value: 'S' };\r\nexport const DEVOLUCAO_SAIDA = { cfops: [1202].concat(SAIDA.cfops), label: 'Saída ou Devolução', value: 'devolucao_saida' };\r\n\r\nexport const TIPO_MOVIMENTO_ENUM_VALUES = [ENTRADA, SAIDA, DEVOLUCAO_SAIDA];\r\nexport const TIPO_MOVIMENTO_INTERNO_ENUM_VALUES = [ENTRADA_TIPO_MOVIMENTO_INTERNO, SAIDA_TIPO_MOVIMENTO_INTERNO];\r\n","import { Basic } from 'summer';\r\nimport { CfopMLF } from '../mlf/cfopMLF';\r\n\r\nexport interface Cfop extends Basic {\r\n  codigo?: string;\r\n  descricao?: string;\r\n  cfopMLF?: CfopMLF;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.cfop';\r\n","import React, { FC } from 'react';\r\nimport { ComparatorEnum, InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { InputSearchProps } from 'summer/dist/views/components/inputSearch/InputSearch';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cfop';\r\n\r\ninterface CfopIsProps extends InputProps {\r\n  tipoMovimento: any[];\r\n}\r\n\r\nconst CFOPIS: FC<CfopIsProps> = props => {\r\n  function searchExpressions(): SearchExpression[] {\r\n    const expressions: SearchExpression[] = [];\r\n\r\n    if (props.tipoMovimento) {\r\n      for (const tipo of props.tipoMovimento) {\r\n        const alias = `c${tipo}`;\r\n        const fieldName = 'codigo';\r\n        expressions.push({\r\n          alias,\r\n          comparator: ComparatorEnum.LIKE,\r\n          conditionalGroup: 'c_',\r\n          fieldName,\r\n          operation: `${fieldName} ${ComparatorEnum.LIKE} :${alias}`,\r\n          ordered: false,\r\n          value: `${tipo}%`,\r\n        });\r\n      }\r\n    }\r\n\r\n    return expressions;\r\n  }\r\n\r\n  const customInputSearchProps: InputSearchProps<any> = {\r\n    ...props.inputSearchProps,\r\n    columns: [\r\n      {\r\n        dataField: 'codigo',\r\n        text: 'Código',\r\n      },\r\n      {\r\n        dataField: 'descricao',\r\n        text: 'Descrição',\r\n      },\r\n    ],\r\n    dtoClassName: CLASS_NAME,\r\n    searchExpressions,\r\n    searchViewId: 'CFOPSearchView',\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      inputSearchProps={customInputSearchProps}\r\n      isPrependLabel={true}\r\n      label={props.label ? props.label : 'CFOP'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o CFOP'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CFOPIS;\r\n"],"sourceRoot":""}
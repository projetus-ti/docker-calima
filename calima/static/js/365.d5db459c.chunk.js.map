{"version":3,"sources":["views/pages/mcg/verificarErros/VerificarErroMCGProcessView.tsx","views/pages/mcg/fechamentoRestauracaoMCG/FechamentoRestauracaoMCGProcessView.tsx","../node_modules/reactstrap/es/CardTitle.js","models/enumerated/mcg/lalurBMCGTipoEmissaoEnum.ts"],"names":["VerificarErroMCGProcessView","props","globalReducer","useSelector","state","idEmpresa","globalParameter","empresa","id","formProps","useForm","defaultValues","dtFinal","format","parseRefToDate","empresaMCG","refFinal","DATE_MONTH_YEAR_PATTERN","dtInicial","refAtual","idGerEmpresa","mode","_useState","useState","_useState2","Object","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","isErros","setIsErros","_useState3","_useState4","isShowGridOrAlert","setisShowGridOrAlert","dispatch","useDispatch","errosColumns","dataField","hidden","text","formatter","cell","row","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__","icon","mensagem","style","color","reactstrap__WEBPACK_IMPORTED_MODULE_7__","index","onClick","className","openLancamentoEdit","idMcgLancamentoLote","openConciliacao","dtLancamento","planoConta","openLancamentoSearch","CALIMA_ORANGE","reactstrap__WEBPACK_IMPORTED_MODULE_8__","target","placement","conciliacaoBancaria","headerAlign","headerStyle","width","textAlign","verifyError","erros","validateExtras","length","params","message","summer__WEBPACK_IMPORTED_MODULE_13__","type","AlertType","WARNING","alertManager","emit","ACTION_EVENTS","SHOW","verificarErros","getValues","errorFunction","showToast","ERROR","thenFunction","result","map","item","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","useEffect","executeSearch","openMultiPage","componente","isFromVerifyError","Page","pageProps","editItemProps","history","location","match","selectedItem","multiPageActions","showPage","LancamentoSaldoEditView","ConciliacaoBancariaView","LancamentoSaldoSearchView","errors","compare","push","title","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMCG","wikiId","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","xs","validation","required","isPrependLabel","labelWidth","label","placeholder","InputType","DATE","reactstrap__WEBPACK_IMPORTED_MODULE_12__","name","innerRef","register","CALIMA_WARNING","CALIMA_INFO","CALIMA_DANGER","CALIMA_PRIMARY","handleSubmit","goBack","dispatchClose","onClose","Fragment","react_bootstrap_table_next__WEBPACK_IMPORTED_MODULE_4___default","bootstrap4","bordered","columns","condensed","data","hover","keyField","noDataIndication","responsive","striped","tabIndexCell","key","role","data-dismiss","aria-label","aria-hidden","alterarLivroFolha","FechamentoRestauracaoMCGProcessView","formPropsInterface","isRestauracao","setIsRestauracao","refAtualEmpresa","idUsuario","usuario","emissaoLalurEmpresa","emissaoLalur","permitirPeriodoFechado","perfil","permitirRestauracaoPeriodoFechado","startScreen","isEmpty","setTimeout","setValue","parseDateToRef","add","atualizarReferencia","atualizarGlobalParameter","setGlobalParameter","reset","atualizarParametros","changeLivroFolha","closeProgressBar","progressActions","hideProgress","openProgressBar","showProgress","animated","value","callFechamento","force","validarConfigLivroFolha","fecharRestaurar","concat","fechamentoRestauracao","onOkClick","forceFecharRestaurar","callForceFecharRestaurar","WARNING_YES_NO","INFORMATION","callFecharRestaurar","REF_PATTERN","periodoFiscalErrosMsg","anoEmpresa","Number","anoDesejado","ANUAL","TRIMESTRAL","trimestreEmpresa","getTrimestre","trimestreDesejado","ref","substring","openVerificarErros","react__WEBPACK_IMPORTED_MODULE_2___default","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","disabled","REFERENCE","tag","Row","inline","onChange","referenciaRestauracao","marginBottom","borderWidth","verifyChangeLivroFolha","verify","verifyErrorBeforeClousure","handleClose","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","string","cssModule","object","CardTitle","Tag","attributes","classes","defaultProps","__webpack_exports__","d","LALURB_MCG_TIPO_EMISSAO_ENUM_VALUES"],"mappings":"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","file":"static/js/365.d5db459c.chunk.js","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Button, Col, CustomInput, Form, Row, UncontrolledTooltip } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  Box,\r\n  CALIMA_DANGER,\r\n  CALIMA_INFO,\r\n  CALIMA_ORANGE,\r\n  CALIMA_PRIMARY,\r\n  CALIMA_WARNING,\r\n  ColumnsProps,\r\n  compare,\r\n  DATE_MONTH_YEAR_PATTERN,\r\n  dispatchClose,\r\n  EditViewProps,\r\n  ErroList,\r\n  ERROR,\r\n  format,\r\n  InputGroupInline,\r\n  InputType,\r\n  parseRefToDate,\r\n  showToast,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../dependencies/empresaMCGDependency';\r\nimport { PlanoConta } from '../../../../models/dtos/ger/planoConta';\r\nimport { Erros } from '../../../../models/dtos/mcg/erros';\r\nimport { VerificarErros } from '../../../../models/dtos/mcg/verificarErros';\r\nimport { verificarErros } from '../../../../services/mcg.service';\r\nimport { multiPageActions, Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport ConciliacaoBancariaView from '../conciliacaoBancaria/ConciliacaoBancariaView';\r\nimport LancamentoSaldoEditView from '../lancamentoSaldo/LancamentoSaldoEditView';\r\nimport LancamentoSaldoSearchView from '../lancamentoSaldo/LancamentoSaldoSearchView';\r\n\r\nconst maxWidth = 120;\r\n\r\ninterface VerificarErroMCGProcessView extends EditViewProps<VerificarErros> {}\r\n\r\ninterface OpenFromFechamentoRestauracao {\r\n  executeSearch: true;\r\n}\r\n\r\nconst VerificarErroMCGProcessView: FC<VerificarErroMCGProcessView & RouteComponentProps & OpenFromFechamentoRestauracao> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const idEmpresa = globalReducer.globalParameter.empresa.id;\r\n  const formProps = useForm<VerificarErros>({\r\n    defaultValues: {\r\n      dtFinal: format(parseRefToDate(globalReducer.globalParameter.empresaMCG.refFinal, 0), DATE_MONTH_YEAR_PATTERN),\r\n      dtInicial: format(parseRefToDate(globalReducer.globalParameter.empresaMCG.refAtual, 1), DATE_MONTH_YEAR_PATTERN),\r\n      idGerEmpresa: idEmpresa,\r\n    },\r\n    mode: 'onBlur',\r\n  });\r\n  const [isErros, setIsErros] = useState([]);\r\n  const [isShowGridOrAlert, setisShowGridOrAlert] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const errosColumns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'rowNumber',\r\n      hidden: true,\r\n      text: 'Row Number',\r\n    },\r\n    {\r\n      dataField: 'mensagem',\r\n      formatter: (cell, row) => {\r\n        return (\r\n          <div>\r\n            <FontAwesomeIcon icon={row.icon} /> {row.mensagem}\r\n          </div>\r\n        );\r\n      },\r\n      style: (cell, row) => {\r\n        return { color: row.color };\r\n      },\r\n      text: 'Mensagens',\r\n    },\r\n    {\r\n      dataField: 'actions',\r\n      formatter: (cell, row) => {\r\n        const handleClick = () => {\r\n          if (row.className === 'DebitoDiferenteCreditoDTO' || row.className === 'PlanoContaDebitoIgualCreditoDTO') {\r\n            openLancamentoEdit(row.idMcgLancamentoLote);\r\n          } else if (row.className === 'ConciliadoValorDiferenteDTO') {\r\n            openConciliacao(row.dtLancamento, row.planoConta);\r\n          } else {\r\n            openLancamentoSearch(row.dtLancamento, row.planoConta);\r\n          }\r\n        };\r\n\r\n        return (\r\n          <Button\r\n            id={'buttonEdit' + row.index}\r\n            color=\"neutral-secondary\"\r\n            onClick={handleClick}\r\n            className=\"btn-pill d-30 p-0 align-top btn-animated-icon btn-animated-icon--secondary\"\r\n          >\r\n            <span className=\"btn-wrapper--icon\">\r\n              <FontAwesomeIcon color={CALIMA_ORANGE} icon={'pen'} />\r\n            </span>\r\n            <UncontrolledTooltip target={'buttonEdit' + row.index} placement=\"top\">\r\n              {row.conciliacaoBancaria ? 'Editar - Consulta Movimentação' : 'Editar - Lançamento/Conciliação Bancária'}:\r\n            </UncontrolledTooltip>\r\n          </Button>\r\n        );\r\n      },\r\n      headerAlign: () => {\r\n        return 'center';\r\n      },\r\n      headerStyle: () => {\r\n        return { width: '7%' };\r\n      },\r\n      style: (cell, row) => {\r\n        return { color: '#f4772e', textAlign: 'center' };\r\n      },\r\n      text: 'Ações',\r\n    },\r\n  ];\r\n\r\n  const verifyError = () => {\r\n    const erros = validateExtras();\r\n\r\n    if (erros.length > 0) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.WARNING,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      verificarErros(formProps.getValues(), {\r\n        errorFunction: mensagem => {\r\n          showToast(mensagem, ERROR);\r\n        },\r\n        thenFunction: (result: Erros[]) => {\r\n          setIsErros(result.map((item, index) => ({ ...item, index })));\r\n          setisShowGridOrAlert(true);\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const onClose = (goBack: boolean = true) => {\r\n    dispatchClose(props, props.history, goBack);\r\n  };\r\n\r\n  const handleCancel = () => onClose();\r\n\r\n  useEffect(\r\n    () => {\r\n      if (props.executeSearch) {\r\n        verifyError();\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const openMultiPage = (\r\n    componente: any,\r\n    isFromVerifyError: boolean,\r\n    idMcgLancamentoLote?: number,\r\n    dtLancamento?: string,\r\n    planoConta?: PlanoConta\r\n  ) => {\r\n    const Page = componente as FC<any>;\r\n    const pageProps = {\r\n      dtLancamento,\r\n      editItemProps: props.editItemProps,\r\n      history: props.history,\r\n      idMcgLancamentoLote,\r\n      isFromVerifyError,\r\n      location: props.location,\r\n      match: props.match,\r\n      planoConta,\r\n      selectedItem: formProps.getValues(),\r\n    };\r\n    dispatch(multiPageActions.showPage(<Page {...pageProps} />));\r\n  };\r\n\r\n  const openLancamentoEdit = (idMcgLancamentoLote: number): void => openMultiPage(LancamentoSaldoEditView, true, idMcgLancamentoLote);\r\n\r\n  const openConciliacao = (dtLancamento, planoConta): void => openMultiPage(ConciliacaoBancariaView, true, null, dtLancamento, planoConta);\r\n\r\n  const openLancamentoSearch = (dtLancamento, planoConta): void => {\r\n    openMultiPage(LancamentoSaldoSearchView, true, null, dtLancamento, planoConta);\r\n  };\r\n\r\n  const validateExtras = () => {\r\n    const errors = [];\r\n    if (compare(formProps.getValues().dtFinal, formProps.getValues().dtInicial) === -1) {\r\n      errors.push('Data Final não pode ser menor que a Data Inicial');\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Manutenção de Verificar Erros/Avisos\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMCG(globalReducer.globalParameter)]}\r\n      wikiId={173}\r\n    >\r\n      <Form>\r\n        <InputGroupInline formProps={formProps} id=\"idGerEmpresa\" hidden={true} />\r\n        <Row>\r\n          <Col xs={3} className=\"mt-3 ml-3\">\r\n            <Row>\r\n              <InputGroupInline\r\n                formProps={{ ...formProps, validation: { required: true } }}\r\n                id=\"dtInicial\"\r\n                isPrependLabel={true}\r\n                labelWidth={maxWidth}\r\n                label=\"Data Inicial\"\r\n                placeholder=\"Informe a data Inicial.\"\r\n                type={InputType.DATE}\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <InputGroupInline\r\n                formProps={{ ...formProps, validation: { required: true } }}\r\n                id=\"dtFinal\"\r\n                isPrependLabel={true}\r\n                labelWidth={maxWidth}\r\n                label=\"Data Final\"\r\n                placeholder=\"Informe a data Final.\"\r\n                type={InputType.DATE}\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <CustomInput\r\n                type=\"switch\"\r\n                label=\"Mostrar Avisos de Conciliação\"\r\n                name=\"conciliacaoBancaria\"\r\n                id=\"conciliacaoBancaria\"\r\n                innerRef={formProps.register}\r\n              />\r\n            </Row>\r\n          </Col>\r\n          <Col xs={8} className=\"ml-3\">\r\n            <Box title=\"Legenda\">\r\n              <Row>\r\n                <Col>\r\n                  <FontAwesomeIcon color={CALIMA_WARNING} icon=\"exclamation-triangle\" /> Débito Difere do Crédito\r\n                </Col>\r\n                <Col>\r\n                  <FontAwesomeIcon color={CALIMA_INFO} icon=\"info\" /> Conta Crédito e Débito iguais\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <FontAwesomeIcon color={CALIMA_DANGER} icon=\"ban\" /> Conta Caixa Com Saldo Credor\r\n                </Col>\r\n                <Col>\r\n                  <FontAwesomeIcon color={CALIMA_PRIMARY} icon=\"exclamation-circle\" /> Lançamento Conciliado Com Valor Diferente\r\n                </Col>\r\n              </Row>\r\n            </Box>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <Button className=\"ml-0\" color=\"primary\" onClick={formProps.handleSubmit(verifyError)}>\r\n              <FontAwesomeIcon icon=\"sync\" /> Consultar\r\n            </Button>\r\n          </Col>\r\n          <Col>\r\n            <Button className=\"float-right\" onClick={formProps.handleSubmit(handleCancel)} color=\"danger\">\r\n              <FontAwesomeIcon icon=\"check-circle\" /> Fechar\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        {isShowGridOrAlert && (\r\n          <div>\r\n            {isErros.length > 0 ? (\r\n              <>\r\n                <div className=\"table-area\">\r\n                  <BootstrapTable\r\n                    bootstrap4={true}\r\n                    bordered={true}\r\n                    columns={errosColumns}\r\n                    condensed={true}\r\n                    className=\"table-scroll\"\r\n                    data={isErros}\r\n                    hover={true}\r\n                    keyField=\"index\"\r\n                    noDataIndication=\"Nenhum registro a ser exibido.\"\r\n                    responsive={true}\r\n                    striped={true}\r\n                    tabIndexCell={true}\r\n                  />\r\n                </div>\r\n                <div key=\"divFotterKey\" className=\"text-left\">\r\n                  Total de Registros: {isErros.length}\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div className=\"alert d-flex align-items-center pl-2 align-content-center alert-success alert-dismissible fade show\" role=\"alert\">\r\n                <span className=\"font-size-lg d-block d-40 mr-2 text-center\">\r\n                  <FontAwesomeIcon icon=\"check-circle\" />\r\n                </span>\r\n                <span>\r\n                  <strong className=\"d-block\">Não Existem Erros!</strong> Nossas buscas não encontraram nenhum erro em seus lançamentos.{' '}\r\n                  <FontAwesomeIcon icon=\"smile\" />\r\n                </span>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">×</span>\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </Form>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default VerificarErroMCGProcessView;\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Card, CardBody, CardTitle, Col, CustomInput, Form, FormGroup, Row } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  add,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  compare,\r\n  DATE_MONTH_YEAR_PATTERN,\r\n  dispatchClose,\r\n  EditViewProps,\r\n  ErroList,\r\n  ERROR,\r\n  format,\r\n  InputGroupInline,\r\n  InputType,\r\n  isEmpty,\r\n  parseDateToRef,\r\n  parseRefToDate,\r\n  ProcessBar,\r\n  progressActions,\r\n  REF_PATTERN,\r\n  showToast,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../dependencies/empresaMCGDependency';\r\nimport { RuleMessage } from '../../../../models/dtos/ger/ruleMessage';\r\nimport { Erros } from '../../../../models/dtos/mcg/erros';\r\nimport { FechamentoRestauracaoInterface, FechamentoRestauracaoMCG } from '../../../../models/dtos/mcg/fechamentoRestauracaoMCG';\r\nimport { VerificarErros } from '../../../../models/dtos/mcg/verificarErros';\r\nimport { ANUAL, TRIMESTRAL } from '../../../../models/enumerated/mcg/lalurBMCGTipoEmissaoEnum';\r\nimport { atualizarGlobalParameter } from '../../../../services/ger.service';\r\nimport { changeLivroFolha, fecharRestaurar, forceFecharRestaurar, validarConfigLivroFolha, verificarErros } from '../../../../services/mcg.service';\r\nimport { multiPageActions, Reducers } from '../../../../store/ducks';\r\nimport { GlobalState, setGlobalParameter } from '../../../../store/ducks/global.duck';\r\nimport VerificarErroMCGProcessView from '../verificarErros/VerificarErroMCGProcessView';\r\n\r\ninterface FechamentoRestauracaoMCGProcessViewProps extends EditViewProps<FechamentoRestauracaoMCG> {}\r\n\r\nlet alterarLivroFolha = false;\r\n\r\nconst FechamentoRestauracaoMCGProcessView: FC<FechamentoRestauracaoMCGProcessViewProps & RouteComponentProps> = props => {\r\n  const formProps = useForm<FechamentoRestauracaoMCG>({ mode: 'onBlur' });\r\n\r\n  const formPropsInterface = useForm<FechamentoRestauracaoInterface>({ mode: 'onBlur' });\r\n\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const [isRestauracao, setIsRestauracao] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onClose = (goBack: boolean = true) => {\r\n    dispatchClose(props, props.history, goBack);\r\n  };\r\n\r\n  const handleCancel = () => onClose();\r\n\r\n  const refAtualEmpresa = globalReducer.globalParameter.empresaMCG.refAtual;\r\n\r\n  const idUsuario = globalReducer.globalParameter.usuario.id;\r\n\r\n  const emissaoLalurEmpresa = globalReducer.globalParameter.empresaMCG.emissaoLalur;\r\n\r\n  const permitirPeriodoFechado = globalReducer.globalParameter.perfil.permitirRestauracaoPeriodoFechado;\r\n\r\n  useEffect(\r\n    () => {\r\n      startScreen();\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [globalReducer.globalParameter]\r\n  );\r\n\r\n  function startScreen() {\r\n    const { empresaMCG } = globalReducer.globalParameter;\r\n    if (!isEmpty(empresaMCG)) {\r\n      const {\r\n        empresa: { id },\r\n      } = globalReducer.globalParameter;\r\n      setTimeout(() => {\r\n        formPropsInterface.setValue('referenciaInicialEmpresa', refAtualEmpresa);\r\n        formPropsInterface.setValue('referenciaFinalEmpresa', empresaMCG.refFinal);\r\n        formPropsInterface.setValue('fechamentoRestauracao', 'true');\r\n        formProps.setValue('refAtual', parseDateToRef(add(parseRefToDate(refAtualEmpresa, 1), 1, 'month')));\r\n        formProps.setValue('idGerEmpresa', id);\r\n      }, 800);\r\n    }\r\n  }\r\n\r\n  function resetScreen() {\r\n    formProps.reset();\r\n    formPropsInterface.reset();\r\n    setIsRestauracao(false);\r\n    setTimeout(() => startScreen(), 500);\r\n  }\r\n\r\n  const refPlusOneHandler = (): void => {\r\n    if (formPropsInterface.getValues().fechamentoRestauracao === 'true') {\r\n      setIsRestauracao(false);\r\n      formProps.setValue('refAtual', parseDateToRef(add(parseRefToDate(refAtualEmpresa, 1), 1, 'month')));\r\n    }\r\n  };\r\n\r\n  const refMinusOneHandler = (): void => {\r\n    if (formPropsInterface.getValues().fechamentoRestauracao === 'false') {\r\n      setIsRestauracao(true);\r\n      const referenciaRestauracao = parseDateToRef(add(parseRefToDate(refAtualEmpresa, 1), -1, 'month'));\r\n\r\n      formProps.reset({\r\n        ...formProps.getValues(),\r\n        refAtual: referenciaRestauracao,\r\n        refFinal: referenciaRestauracao,\r\n      });\r\n      formPropsInterface.setValue('fechamentoRestauracao', 'false');\r\n    }\r\n  };\r\n\r\n  function verifyChangeLivroFolha(): void {\r\n    const anoDesejado = Number(format(parseRefToDate(formProps.getValues().refAtual, 1), 'YYYY'));\r\n    const anoEmpresa = Number(format(parseRefToDate(refAtualEmpresa, 1), 'YYYY'));\r\n    const trimestreDesejado = getTrimestre(formProps.getValues().refAtual);\r\n    const trimestreEmpresa = getTrimestre(refAtualEmpresa);\r\n\r\n    if (formPropsInterface.getValues().fechamentoRestauracao === 'true') {\r\n      if (emissaoLalurEmpresa === ANUAL.value) {\r\n        if (anoDesejado === anoEmpresa + 1) {\r\n          alterarLivroFolha = true;\r\n        }\r\n      } else if (emissaoLalurEmpresa === TRIMESTRAL.value) {\r\n        if (trimestreDesejado === trimestreEmpresa + 1) {\r\n          alterarLivroFolha = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function afterFecharRestaurar(): void {\r\n    if (alterarLivroFolha) {\r\n      changeLivroFolha(formProps.getValues().idGerEmpresa, {\r\n        errorFunction: mensagem => {\r\n          showToast(mensagem, ERROR);\r\n        },\r\n        thenFunction: result => {\r\n          alterarLivroFolha = false;\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  function atualizarReferencia(): void {\r\n    atualizarGlobalParameter(\r\n      { id: idUsuario },\r\n      {\r\n        thenFunction: globalParameter => {\r\n          dispatch(setGlobalParameter(globalParameter));\r\n          resetScreen();\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  function atualizarParametros(): void {\r\n    afterFecharRestaurar();\r\n    atualizarReferencia();\r\n  }\r\n\r\n  function closeProgressBar(): void {\r\n    dispatch(progressActions.hideProgress());\r\n  }\r\n\r\n  function openProgressBar(): void {\r\n    dispatch(\r\n      progressActions.showProgress({\r\n        animated: true,\r\n        className: 'progress-bar-rounded progress-animated-alt',\r\n        color: 'first',\r\n        label: 'Aguarde processando...',\r\n        striped: true,\r\n        value: 100,\r\n      })\r\n    );\r\n  }\r\n\r\n  function callFechamento(data: FechamentoRestauracaoMCG): void {\r\n    data.force = false;\r\n    openProgressBar();\r\n    validarConfigLivroFolha(formProps.getValues().idGerEmpresa, {\r\n      errorFunction: mensagem => {\r\n        showToast(mensagem, ERROR);\r\n        closeProgressBar();\r\n      },\r\n      thenFunction: result => {\r\n        if (result) {\r\n          callFecharRestaurar(data);\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  function callForceFecharRestaurar(data: FechamentoRestauracaoMCG): void {\r\n    data.force = true;\r\n    openProgressBar();\r\n    forceFecharRestaurar(data, {\r\n      errorFunction: mensagem => {\r\n        showToast(mensagem, ERROR);\r\n        closeProgressBar();\r\n      },\r\n      thenFunction: result => {\r\n        closeProgressBar();\r\n        atualizarParametros();\r\n      },\r\n    });\r\n  }\r\n\r\n  function callFecharRestaurar(data: FechamentoRestauracaoMCG): void {\r\n    fecharRestaurar(data, {\r\n      errorFunction: mensagem => {\r\n        showToast(mensagem, ERROR);\r\n        closeProgressBar();\r\n      },\r\n      thenFunction: (result: RuleMessage) => {\r\n        closeProgressBar();\r\n        if (result.message === 'PERIODO_ENCERRADO') {\r\n          const params: AlertProps = {\r\n            message: `Existem contas de resultado encerradas no período de ${\r\n              formPropsInterface.getValues().fechamentoRestauracao === 'true' ? 'Fechamento.' : 'Restauração.'\r\n            } Realizar uma alteração nesta data ocasionará a abertura das contas. Deseja continuar?`,\r\n            onOkClick: () => callForceFecharRestaurar(data),\r\n            type: AlertType.WARNING_YES_NO,\r\n          };\r\n          alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n        } else {\r\n          const params: AlertProps = {\r\n            message: `${\r\n              formPropsInterface.getValues().fechamentoRestauracao === 'true' ? 'Fechamento realizado' : 'Restauração realizado'\r\n            } com sucesso.`,\r\n            onOkClick: () => atualizarParametros(),\r\n            type: AlertType.INFORMATION,\r\n          };\r\n          alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  function handleImport(data: FechamentoRestauracaoMCG): void {\r\n    const erros = validateExtras();\r\n    if (erros.length > 0) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.WARNING,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    }\r\n    verifyChangeLivroFolha();\r\n    if (formPropsInterface.getValues().fechamentoRestauracao === 'true') {\r\n      verifyErrorBeforeClousure(data);\r\n    } else {\r\n      callFechamento(data);\r\n    }\r\n  }\r\n\r\n  const validateExtras = () => {\r\n    const erros = [];\r\n    if (formPropsInterface.getValues().fechamentoRestauracao === 'false') {\r\n      if (compare(formProps.getValues().refFinal, formProps.getValues().refAtual, REF_PATTERN) === -1) {\r\n        erros.push('Referência Atual não pode ser maior que a Referência Final');\r\n      }\r\n\r\n      if (compare(formProps.getValues().refAtual, refAtualEmpresa, REF_PATTERN) === 0) {\r\n        erros.push('A restauração não pode ser para um período igual ou posterior ao atual.');\r\n      }\r\n    }\r\n\r\n    if (formPropsInterface.getValues().fechamentoRestauracao === 'true' && !isEmpty(formProps.getValues().refAtual)) {\r\n      const periodoFiscalErrosMsg = 'Só é permitido o fechamento para um período fiscal imediatamente superior ao atual.';\r\n\r\n      const anoEmpresa = Number(format(parseRefToDate(refAtualEmpresa, 1), 'YYYY'));\r\n      const anoDesejado = Number(format(parseRefToDate(formProps.getValues().refAtual, 1), 'YYYY'));\r\n\r\n      if (emissaoLalurEmpresa === ANUAL.value) {\r\n        if (anoDesejado !== anoEmpresa && anoDesejado !== anoEmpresa + 1) {\r\n          erros.push(periodoFiscalErrosMsg);\r\n        }\r\n      } else if (emissaoLalurEmpresa === TRIMESTRAL.value) {\r\n        const trimestreEmpresa = getTrimestre(refAtualEmpresa);\r\n        const trimestreDesejado = getTrimestre(formProps.getValues().refAtual);\r\n        if (anoDesejado === anoEmpresa) {\r\n          if (trimestreDesejado !== trimestreEmpresa && trimestreDesejado !== trimestreEmpresa + 1) {\r\n            erros.push(periodoFiscalErrosMsg);\r\n          }\r\n        } else if (anoDesejado < anoEmpresa) {\r\n          erros.push(periodoFiscalErrosMsg);\r\n        }\r\n      }\r\n    }\r\n    return erros;\r\n  };\r\n\r\n  function getTrimestre(ref: string): number {\r\n    const mes = Number(ref.substring(4, 6));\r\n    switch (mes) {\r\n      case 1:\r\n      case 2:\r\n      case 3:\r\n        return 1;\r\n      case 4:\r\n      case 5:\r\n      case 6:\r\n        return 2;\r\n      case 7:\r\n      case 8:\r\n      case 9:\r\n        return 3;\r\n      case 10:\r\n      case 11:\r\n      case 12:\r\n        return 4;\r\n    }\r\n  }\r\n\r\n  const openMultiPage = (componente: any, executeSearch: boolean) => {\r\n    const Page = componente as FC<any>;\r\n    const pageProps = {\r\n      editItemProps: props.editItemProps,\r\n      executeSearch,\r\n      history: props.history,\r\n      location: props.location,\r\n      match: props.match,\r\n      selectedItem: formProps.getValues(),\r\n    };\r\n    dispatch(multiPageActions.showPage(<Page {...pageProps} />));\r\n  };\r\n\r\n  const openVerificarErros = () => openMultiPage(VerificarErroMCGProcessView, true);\r\n\r\n  function verifyErrorBeforeClousure(data: FechamentoRestauracaoMCG) {\r\n    const verify: VerificarErros = {\r\n      conciliacaoBancaria: false,\r\n      dtFinal: format(parseRefToDate(refAtualEmpresa, 0), DATE_MONTH_YEAR_PATTERN),\r\n      dtInicial: format(parseRefToDate(refAtualEmpresa, 1), DATE_MONTH_YEAR_PATTERN),\r\n      idGerEmpresa: data.idGerEmpresa,\r\n    };\r\n    verificarErros(verify, {\r\n      errorFunction: mensagem => {\r\n        showToast(mensagem, ERROR);\r\n      },\r\n      thenFunction: (result: Erros[]) => {\r\n        if (result.length > 0) {\r\n          const params: AlertProps = {\r\n            message: 'Existem erros na Empresa corrente. Deseja Visualizá-los?',\r\n            onOkClick: () => openVerificarErros(),\r\n            type: AlertType.WARNING_YES_NO,\r\n          };\r\n          alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n        } else {\r\n          callFechamento(data);\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Fechamento/Restauração\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMCG(globalReducer.globalParameter)]}\r\n    >\r\n      <Form>\r\n        <InputGroupInline formProps={formProps} id=\"idGerEmpresa\" hidden={true} />\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={formPropsInterface}\r\n              id=\"referenciaInicialEmpresa\"\r\n              isPrependLabel={true}\r\n              label=\"Referência Atual\"\r\n              disabled={true}\r\n              type={InputType.REFERENCE}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={formPropsInterface}\r\n              id=\"referenciaFinalEmpresa\"\r\n              isPrependLabel={true}\r\n              label=\"Referência Final\"\r\n              disabled={true}\r\n              type={InputType.REFERENCE}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <FormGroup tag={Row}>\r\n          <Col>\r\n            <CustomInput\r\n              id=\"fechamentoRestauracaoTrue\"\r\n              inline={true}\r\n              innerRef={formPropsInterface.register}\r\n              label=\"Fechamento\"\r\n              name=\"fechamentoRestauracao\"\r\n              onChange={refPlusOneHandler}\r\n              type=\"radio\"\r\n              value={'true'}\r\n            />\r\n\r\n            <CustomInput\r\n              disabled={!permitirPeriodoFechado}\r\n              id=\"fechamentoRestauracaoFalse\"\r\n              inline={true}\r\n              innerRef={formPropsInterface.register}\r\n              label=\"Restauração\"\r\n              name=\"fechamentoRestauracao\"\r\n              onChange={refMinusOneHandler}\r\n              type=\"radio\"\r\n              value={'false'}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <Card style={{ marginBottom: '16px', borderWidth: 'thin' }}>\r\n          <CardBody>\r\n            <CardTitle>Informe a nova referência de processamento</CardTitle>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={{ ...formProps, validation: { required: true } }}\r\n                  id=\"refAtual\"\r\n                  isPrependLabel={true}\r\n                  label=\"Referência Atual\"\r\n                  type={InputType.REFERENCE}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            {isRestauracao ? (\r\n              <Row>\r\n                <Col>\r\n                  <InputGroupInline\r\n                    formProps={{ ...formProps, validation: { required: true } }}\r\n                    id=\"refFinal\"\r\n                    isPrependLabel={true}\r\n                    label=\"Referência Final\"\r\n                    type={InputType.REFERENCE}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            ) : null}\r\n          </CardBody>\r\n        </Card>\r\n        <ProcessBar handleSubmit={formProps.handleSubmit(handleImport)} handleClose={handleCancel} />\r\n      </Form>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default FechamentoRestauracaoMCGProcessView;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","export const ANUAL = { label: 'Anual', value: 'A' };\r\nexport const TRIMESTRAL = { label: 'Trimestral', value: 'T' };\r\n\r\nexport const LALURB_MCG_TIPO_EMISSAO_ENUM_VALUES = [ANUAL, TRIMESTRAL];\r\n"],"sourceRoot":""}
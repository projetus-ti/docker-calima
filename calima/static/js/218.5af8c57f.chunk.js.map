{"version":3,"sources":["models/dtos/mho/contabilizacaoEventoMHO.ts","views/pages/mho/contabilizacaoEventoMHO/ContabilizacaoEventoSearchView.tsx","dependencies/empresaDependency.ts","dependencies/grupoEmpresaConfigDependency.ts","dependencies/administradoraMHODependency.ts","models/dtos/mho/empresaMHO.ts","views/components/mho/empresaMHOIS/EmpresaMHOIS.tsx"],"names":["__webpack_require__","d","__webpack_exports__","CLASS_NAME","cellEditProps","blurToSave","mode","ClickEnum","CLICK","defaultSorted","dataField","order","OrderType","ASC","ContabilizacaoEventoSearchView","props","globalReducer","useSelector","state","_useState","useState","undefined","_useState2","Object","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","expressions","setExpressions","formProps","useForm","searchRef","useRef","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_6__","title","useGlobalParameter","globalParameter","dependencies","hasEmpresa","hasGrupoEmpresaConfig","hasAdministradoraMHO","wikiId","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","_components_mho_empresaMHOIS_EmpresaMHOIS__WEBPACK_IMPORTED_MODULE_11__","id","onChange","getValues","empresaMHO","fieldName","value","empresa","current","notifySearchExpressionChange","assign","searchDataGridProps","dtoClassName","columns","editable","sort","text","extraData","getExtraData","searchExpressionsProps","defaultSearchExpressions","ref","result","grupoEmpresaRaiz","grupoEmpresaConfig","grupoEmpresa","administradora","administradoraMHO","EmpresaMHOIS","summer__WEBPACK_IMPORTED_MODULE_2__","isPrependLabel","inputSearchProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","searchViewId","label","placeholder","type","InputType","INPUT_SEARCH"],"mappings":"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","file":"static/js/218.5af8c57f.chunk.js","sourcesContent":["import { Basic } from 'summer';\r\nimport { CentroCusto } from '../ger/centroCusto';\r\nimport { Historico } from '../ger/historico';\r\nimport { PlanoConta } from '../ger/planoConta';\r\nimport { EmpresaMHO } from './empresaMHO';\r\nimport { EventoMHO } from './eventoMHO';\r\n\r\nexport interface ContabilizacaoEventoMHO extends Basic {\r\n  centroCustoCredito?: CentroCusto;\r\n  centroCustoDebito?: CentroCusto;\r\n  contaCredito?: PlanoConta;\r\n  contaDebito?: PlanoConta;\r\n  empresaMHO?: EmpresaMHO;\r\n  eventoMHO?: EventoMHO;\r\n  historicoPadrao?: Historico;\r\n  historicoVariavel?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mho.model.dto.contabilizacaoeventomho';\r\n","import React, { FC, useRef, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, Row } from 'reactstrap';\r\nimport {\r\n  CellEditProps,\r\n  ClickEnum,\r\n  ColumnsProps,\r\n  DefaultSortProps,\r\n  getExtraData,\r\n  OrderType,\r\n  SearchDataGrid,\r\n  SearchDataGridRefProps,\r\n  SearchExpression,\r\n  SearchViewProps,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { hasAdministradoraMHO } from '../../../../dependencies/administradoraMHODependency';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasGrupoEmpresaConfig } from '../../../../dependencies/grupoEmpresaConfigDependency';\r\nimport { CLASS_NAME, ContabilizacaoEventoMHO } from '../../../../models/dtos/mho/contabilizacaoEventoMHO';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport EmpresaMHOIS from '../../../components/mho/empresaMHOIS/EmpresaMHOIS';\r\n\r\nconst cellEditProps: CellEditProps = {\r\n  blurToSave: true,\r\n  mode: ClickEnum.CLICK,\r\n};\r\n\r\nconst defaultSorted: DefaultSortProps[] = [\r\n  {\r\n    dataField: 'eventoMHO.descricao',\r\n    order: OrderType.ASC,\r\n  },\r\n];\r\n\r\nconst ContabilizacaoEventoSearchView: FC<SearchViewProps<ContabilizacaoEventoMHO>> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [expressions, setExpressions] = useState<SearchExpression[]>(undefined);\r\n  const formProps = useForm<ContabilizacaoEventoMHO>({ mode: 'onBlur' });\r\n  const searchRef = useRef<SearchDataGridRefProps>();\r\n\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'empresaMHO.empresa.razaoSocial',\r\n      editable: false,\r\n      sort: true,\r\n      text: 'Empresa',\r\n    },\r\n    {\r\n      dataField: 'eventoMHO.descricao',\r\n      editable: false,\r\n      sort: true,\r\n      text: 'Evento',\r\n    },\r\n    {\r\n      dataField: 'contaDebito.descricao',\r\n      editable: false,\r\n      sort: true,\r\n      text: 'Conta de Débito',\r\n    },\r\n    {\r\n      dataField: 'contaCredito.descricao',\r\n      editable: false,\r\n      sort: true,\r\n      text: 'Conta de Crédito',\r\n    },\r\n    {\r\n      dataField: 'centroCustoDebito.descricao',\r\n      editable: false,\r\n      sort: true,\r\n      text: 'C.C. de Débito',\r\n    },\r\n    {\r\n      dataField: 'centroCustoCredito.descricao',\r\n      editable: false,\r\n      sort: true,\r\n      text: 'C.C. de Crédito',\r\n    },\r\n  ];\r\n\r\n  function getSearchExpression(): SearchExpression[] {\r\n    return [\r\n      {\r\n        fieldName: 'empresaMHO.empresa.id',\r\n        value: formProps.getValues().empresaMHO.empresa.id,\r\n      },\r\n    ];\r\n  }\r\n\r\n  const onChangeEmpresaMHO = () => {\r\n    if (formProps.getValues().empresaMHO) {\r\n      setExpressions(getSearchExpression());\r\n      searchRef.current.notifySearchExpressionChange();\r\n    }\r\n  };\r\n\r\n  function defaultSearchExpression(): SearchExpression[] {\r\n    return [\r\n      {\r\n        fieldName: 'empresaMHO.empresa.id',\r\n        value: globalReducer.globalParameter.empresa.id,\r\n      },\r\n    ];\r\n  }\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Manutenção de Contabilização de Eventos\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[\r\n        () => hasEmpresa(globalReducer.globalParameter),\r\n        () => hasGrupoEmpresaConfig(globalReducer.globalParameter),\r\n        () => hasAdministradoraMHO(globalReducer.globalParameter),\r\n      ]}\r\n      wikiId={2611}\r\n    >\r\n      <Row>\r\n        <Col>\r\n          <EmpresaMHOIS id=\"empresaMHO\" formProps={formProps} onChange={onChangeEmpresaMHO} />\r\n        </Col>\r\n      </Row>\r\n      <SearchDataGrid\r\n        {...props}\r\n        {...props.searchDataGridProps}\r\n        dtoClassName={CLASS_NAME}\r\n        columns={columns}\r\n        cellEditProps={cellEditProps}\r\n        defaultSorted={defaultSorted}\r\n        extraData={getExtraData(props, 'ContabilizacaoEventoEditView', CLASS_NAME)}\r\n        searchExpressionsProps={expressions}\r\n        defaultSearchExpressions={defaultSearchExpression}\r\n        ref={searchRef}\r\n      />\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default ContabilizacaoEventoSearchView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasGrupoEmpresaConfig(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n\r\n  const msg: string =\r\n    'O Grupo de empresas não está configurado para a empresa selecionada. Para configurar acesse:\\n' +\r\n    'Modulo Principal > Manutenção > Configurações > Grupo de Empresa';\r\n\r\n  if (\r\n    !globalParameter.empresa ||\r\n    !globalParameter.empresa.grupoEmpresaRaiz.grupoEmpresaConfig ||\r\n    !globalParameter.empresa.grupoEmpresa.grupoEmpresaConfig\r\n  ) {\r\n    result = msg;\r\n  }\r\n\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasAdministradoraMHO(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.administradora.administradoraMHO) {\r\n    result =\r\n      'A administradora deve ser configurada no módulo de Honorários. Para configurar acesse:\\n' +\r\n      'Módulo Honorários > Configurações > Administradora';\r\n  }\r\n\r\n  return result;\r\n}\r\n","import { Basic } from 'summer';\r\nimport { Empresa } from '../ger/empresa';\r\nimport { Banco } from '../mfp/banco';\r\nimport { ConfiguracaoBoletoMHO } from './configuracaoBoletoMHO';\r\nimport { EmpresaEventoFixoMHO } from './empresaEventoFixoMHO';\r\n\r\nexport interface EmpresaMHO extends Basic {\r\n  agenciaDebitoAutomatico?: string;\r\n  bancoInstituicaoDebitoAutomatico?: Banco;\r\n  configuracaoBoletoMHO: ConfiguracaoBoletoMHO;\r\n  contaCorrenteDebitoAutomatico?: string;\r\n  dentroMes?: boolean;\r\n  diaVencimento?: number;\r\n  digitoAgenciaDebitoAutomatico?: string;\r\n  dvContaCorrenteDebitoAutomatico?: string;\r\n  empresa?: Empresa;\r\n  empresaEventosFixos?: EmpresaEventoFixoMHO[];\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mho.model.dto.empresamho';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mho/empresaMHO';\r\n\r\nconst EmpresaMHOIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'empresa.codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'empresa.razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'diaVencimento',\r\n            text: 'Dia de Vencimento',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'EmpresaMHOSearchView',\r\n      }}\r\n      label=\"Empresa\"\r\n      placeholder=\"Informe a Empresa\"\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\nexport default EmpresaMHOIS;\r\n"],"sourceRoot":""}
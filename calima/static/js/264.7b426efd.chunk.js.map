{"version":3,"sources":["views/pages/ger/empresa/EmpresaRemoveConfirmationView.tsx","views/pages/ger/empresa/EmpresaSearchView.tsx","../node_modules/reactstrap/es/Alert.js","models/dtos/ger/empresa.ts","models/enumerated/ger/perfilEnum.ts"],"names":["EmpresaRemoveConfirmationView","props","formProps","useForm","mode","_useState","useState","_useState2","Object","slicedToArray","hasCNPJ","setHasCNPJ","_useState3","_useState4","hasCPF","setHasCPF","useEffect","selectedItem","cpf","react_default","a","createElement","Fragment","Row","Col","className","style","color","CALIMA_DANGER","label","summer_esm","objectSpread2","validation","required","isPrependLabel","id","type","InputType","CNPJ","CPF","handleSubmit","_formProps$getValues","getValues","cnpj","mensagem","done","params","message","AlertType","ERROR","alertManager","emit","ACTION_EVENTS","SHOW","handleClose","btnSubmitIcon","btnSubmitLabel","defaultSorted","dataField","order","OrderType","ASC","EmpresaSearchView","globalReducer","useSelector","state","existeEmpresasErroCadastro","setExisteEmpresasErroCadastro","undefined","expressions","setExpressions","getExpressions","value","ATIVAS","searchExpressions","usuario","globalParameter","TODAS","push","fieldName","administrador","empresas","ids","map","it","length","operation","register","name","setValue","existeEmpresaCadastroInvalido","errorFunction","showToast","thenFunction","result","setTimeout","columns","editable","filter","FilterType","NUMBER","sort","text","TEXT","formatter","cnpjFormatter","cpfFormatter","title","wikiId","Alert","placeholder","inputDropDownProps","optionsProvider","PERFIL_ENUM_FEMALE_VALUES","selectProps","isClearable","DROP_DOWN","onChange","assign","searchDataGridProps","dtoClassName","CLASS_NAME_VIEW","extraData","getExtraData","CLASS_NAME","removeConfirmationView","searchExpressionsProps","rowClasses","row","rowIndex","inativa","isEmpty","isCNPJ","isCPF","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","n","prop_types__WEBPACK_IMPORTED_MODULE_4__","prop_types__WEBPACK_IMPORTED_MODULE_4___default","classnames__WEBPACK_IMPORTED_MODULE_5__","classnames__WEBPACK_IMPORTED_MODULE_5___default","_utils__WEBPACK_IMPORTED_MODULE_6__","_Fade__WEBPACK_IMPORTED_MODULE_7__","propTypes","children","node","string","closeClassName","closeAriaLabel","cssModule","object","fade","bool","isOpen","toggle","func","tag","transition","shape","innerRef","oneOfType","defaultProps","unmountOnExit","Tag","attributes","classes","alert-dismissible","closeClasses","alertTransition","baseClass","timeout","in","role","aria-label","onClick","aria-hidden","__webpack_exports__","d","TODOS","ATIVOS","INATIVOS","PERFIL_ENUM_MALE_VALUES"],"mappings":"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","file":"static/js/264.7b426efd.chunk.js","sourcesContent":["import React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { ACTION_EVENTS, alertManager, AlertProps, AlertType, CALIMA_DANGER, ConfirmationView, InputGroupInline, InputType, ProcessBar } from 'summer';\r\n\r\ninterface EmpresaRemoveFields {\r\n  cnpj?: string;\r\n  cpf?: string;\r\n}\r\n\r\nconst EmpresaRemoveConfirmationView: FC<ConfirmationView> = props => {\r\n  const formProps = useForm<EmpresaRemoveFields>({ mode: 'onBlur' });\r\n  const [hasCNPJ, setHasCNPJ] = useState(false);\r\n  const [hasCPF, setHasCPF] = useState(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (props.selectedItem.cpf) {\r\n        setHasCPF(true);\r\n      } else {\r\n        setHasCNPJ(true);\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const handleSubmit = () => {\r\n    const { cnpj, cpf } = formProps.getValues();\r\n    let mensagem = '';\r\n    if (cnpj) {\r\n      if (cnpj === props.selectedItem.cnpj) {\r\n        props.done(true);\r\n      } else {\r\n        mensagem = 'O CNPJ Informado não corresponde ao CNPJ da Empresa';\r\n      }\r\n    } else {\r\n      if (cpf === props.selectedItem.cpf) {\r\n        props.done(true);\r\n      } else {\r\n        mensagem = 'O CPF Informado não corresponde ao CPF da Empresa';\r\n      }\r\n    }\r\n\r\n    const params: AlertProps = {\r\n      message: mensagem,\r\n      type: AlertType.ERROR,\r\n    };\r\n    alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n  };\r\n\r\n  const handleCancel = () => props.done(false);\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col className=\"text-center font-weight-bold mb-2\" style={{ color: CALIMA_DANGER }}>\r\n          ATENÇÃO: Este procedimento é irreversível!\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"text-center font-weight-bold mb-3\">Empresa: {props.selectedItem.label}</Col>\r\n      </Row>\r\n      <Row>\r\n        {hasCNPJ ? (\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              isPrependLabel={true}\r\n              id=\"cnpj\"\r\n              label=\"CNPJ\"\r\n              type={InputType.CNPJ}\r\n            />\r\n          </Col>\r\n        ) : null}\r\n        {hasCPF ? (\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              isPrependLabel={true}\r\n              id=\"cpf\"\r\n              label=\"CPF\"\r\n              type={InputType.CPF}\r\n            />\r\n          </Col>\r\n        ) : null}\r\n      </Row>\r\n      <ProcessBar handleSubmit={formProps.handleSubmit(handleSubmit)} handleClose={handleCancel} btnSubmitIcon=\"check\" btnSubmitLabel=\"Confirmar\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmpresaRemoveConfirmationView;\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { Alert, Col, Row } from 'reactstrap';\r\nimport {\r\n  cnpjFormatter,\r\n  ColumnsProps,\r\n  cpfFormatter,\r\n  DefaultSortProps,\r\n  ERROR,\r\n  FilterType,\r\n  getExtraData,\r\n  InputGroupInline,\r\n  InputType,\r\n  isCNPJ,\r\n  isCPF,\r\n  isEmpty,\r\n  OrderType,\r\n  SearchDataGrid,\r\n  SearchExpression,\r\n  SearchViewProps,\r\n  showToast,\r\n  WindowComponent,\r\n} from 'summer';\r\n\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresa';\r\nimport { CLASS_NAME as CLASS_NAME_VIEW, EmpresaVW } from '../../../../models/dtos/ger/empresaVW';\r\nimport { ATIVAS, PERFIL_ENUM_FEMALE_VALUES, TODAS } from '../../../../models/enumerated/ger/perfilEnum';\r\nimport { existeEmpresaCadastroInvalido } from '../../../../services/ger.service';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport EmpresaRemoveConfirmationView from './EmpresaRemoveConfirmationView';\r\nimport './EmpresaStyle.css';\r\n\r\nconst defaultSorted: DefaultSortProps[] = [\r\n  {\r\n    dataField: 'codigo',\r\n    order: OrderType.ASC,\r\n  },\r\n];\r\n\r\nconst EmpresaSearchView: FC<SearchViewProps<EmpresaVW>> = props => {\r\n  const formProps = useForm<EmpresaVW & { perfil: string }>({ mode: 'onBlur' });\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const [existeEmpresasErroCadastro, setExisteEmpresasErroCadastro] = useState(false);\r\n  const [expressions, setExpressions] = useState<SearchExpression[]>(undefined);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { usuario } = globalReducer.globalParameter;\r\n      formProps.register({ name: 'perfil' });\r\n      formProps.setValue('perfil', ATIVAS.value);\r\n      setExpressions(getExpressions());\r\n\r\n      if (usuario.administrador) {\r\n        existeEmpresaCadastroInvalido(usuario, {\r\n          errorFunction: mensagem => {\r\n            showToast(mensagem, ERROR);\r\n          },\r\n          thenFunction: result => {\r\n            if (result) {\r\n              setTimeout(() => setExisteEmpresasErroCadastro(true), 800);\r\n            }\r\n          },\r\n        });\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  /**\r\n   * Função que verifica qual a cor deve ser usada para apresentar a empresa.\r\n   * Preto -> Empresa normal\r\n   * Vermelho -> Empresa sem CNPJ e CPF ou com 1 deles inválido\r\n   */\r\n  function getRowClass(row, rowIndex) {\r\n    if (!row.inativa) {\r\n      if ((!isEmpty(row.cnpj) && !isCNPJ(row.cnpj)) || (isEmpty(row.cnpj) && !isCPF(row.cpf))) {\r\n        return 'cor-empresa-erro';\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Filtra as empresas do usuário configuradas no perfil do usuário\r\n   * Caso nenhuma empresa seja selecionada ou o usuário seja adminstrador mostra todas as empresas\r\n   */\r\n  function getExpressions(value = ATIVAS.value) {\r\n    const searchExpressions: SearchExpression[] = [];\r\n    const { usuario } = globalReducer.globalParameter;\r\n\r\n    if (value !== TODAS.value) {\r\n      searchExpressions.push({\r\n        fieldName: 'inativa',\r\n        value: value !== ATIVAS.value,\r\n      });\r\n    }\r\n\r\n    if (usuario.administrador || !usuario.empresas) {\r\n      return searchExpressions;\r\n    }\r\n\r\n    const ids = usuario.empresas.map(it => it.id);\r\n\r\n    if (ids.length > 0) {\r\n      searchExpressions[0].expressions = [\r\n        {\r\n          fieldName: 'id',\r\n          operation: '_field in _value',\r\n          value: ids,\r\n        },\r\n      ];\r\n    }\r\n\r\n    return searchExpressions;\r\n  }\r\n\r\n  const onChangeSituacao = value => {\r\n    setExpressions(getExpressions(value));\r\n  };\r\n\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'codigo',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.NUMBER,\r\n      },\r\n      sort: true,\r\n      text: 'Código',\r\n    },\r\n    {\r\n      dataField: 'razaoSocial',\r\n      editable: true,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      sort: true,\r\n      text: 'Razão Social',\r\n    },\r\n    {\r\n      dataField: 'nomeFantasia',\r\n      editable: true,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      sort: true,\r\n      text: 'Nome Fantasia',\r\n    },\r\n    {\r\n      dataField: 'cnpj',\r\n      editable: true,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      formatter: cnpjFormatter,\r\n      sort: true,\r\n      text: 'CNPJ',\r\n    },\r\n    {\r\n      dataField: 'cpf',\r\n      editable: true,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      formatter: cpfFormatter,\r\n      sort: true,\r\n      text: 'CPF',\r\n    },\r\n    {\r\n      dataField: 'cei',\r\n      editable: true,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      sort: true,\r\n      text: 'CEI',\r\n    },\r\n    {\r\n      dataField: 'ie',\r\n      editable: true,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      sort: true,\r\n      text: 'IE',\r\n    },\r\n    {\r\n      dataField: 'im',\r\n      editable: true,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      sort: true,\r\n      text: 'IM',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <WindowComponent title=\"Manutenção de Empresas\" wikiId={4394}>\r\n      {existeEmpresasErroCadastro ? (\r\n        <Alert color=\"danger\" className=\"text-center\">\r\n          Atenção: as Empresas em vermelho precisam ser atualizadas, pois estão com dados cadastrais inválidos.\r\n          <br />\r\n          Para fazer a correção, clique em editar na Empresa ajuste os dados e salve a mesma!\r\n        </Alert>\r\n      ) : null}\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"perfil\"\r\n            label=\"Situação\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            isPrependLabel={true}\r\n            placeholder=\"Informe quais as Empresas que deseja visualizar.\"\r\n            inputDropDownProps={{\r\n              optionsProvider: PERFIL_ENUM_FEMALE_VALUES,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n            onChange={onChangeSituacao}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <SearchDataGrid\r\n        {...props}\r\n        {...props.searchDataGridProps}\r\n        columns={columns}\r\n        defaultSorted={defaultSorted}\r\n        dtoClassName={CLASS_NAME_VIEW}\r\n        extraData={getExtraData(props, 'EmpresaEditView', CLASS_NAME, { removeConfirmationView: EmpresaRemoveConfirmationView })}\r\n        searchExpressionsProps={expressions}\r\n        rowClasses={getRowClass}\r\n      />\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default EmpresaSearchView;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _objectSpread2 from \"@babel/runtime/helpers/esm/objectSpread\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Fade from './Fade';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  closeClassName: PropTypes.string,\n  closeAriaLabel: PropTypes.string,\n  cssModule: PropTypes.object,\n  color: PropTypes.string,\n  fade: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  tag: tagPropType,\n  transition: PropTypes.shape(Fade.propTypes),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  color: 'success',\n  isOpen: true,\n  tag: 'div',\n  closeAriaLabel: 'Close',\n  fade: true,\n  transition: _objectSpread2({}, Fade.defaultProps, {\n    unmountOnExit: true\n  })\n};\n\nfunction Alert(props) {\n  var className = props.className,\n      closeClassName = props.closeClassName,\n      closeAriaLabel = props.closeAriaLabel,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      color = props.color,\n      isOpen = props.isOpen,\n      toggle = props.toggle,\n      children = props.children,\n      transition = props.transition,\n      fade = props.fade,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"closeClassName\", \"closeAriaLabel\", \"cssModule\", \"tag\", \"color\", \"isOpen\", \"toggle\", \"children\", \"transition\", \"fade\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'alert', \"alert-\" + color, {\n    'alert-dismissible': toggle\n  }), cssModule);\n  var closeClasses = mapToCssModules(classNames('close', closeClassName), cssModule);\n\n  var alertTransition = _objectSpread2({}, Fade.defaultProps, {}, transition, {\n    baseClass: fade ? transition.baseClass : '',\n    timeout: fade ? transition.timeout : 0\n  });\n\n  return React.createElement(Fade, _extends({}, attributes, alertTransition, {\n    tag: Tag,\n    className: classes,\n    in: isOpen,\n    role: \"alert\",\n    innerRef: innerRef\n  }), toggle ? React.createElement(\"button\", {\n    type: \"button\",\n    className: closeClasses,\n    \"aria-label\": closeAriaLabel,\n    onClick: toggle\n  }, React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\")) : null, children);\n}\n\nAlert.propTypes = propTypes;\nAlert.defaultProps = defaultProps;\nexport default Alert;","import { EmpresaMCG } from '../mcg/empresaMCG';\r\nimport { EmpresaMCP } from '../mcp/empresaMCP';\r\nimport { EmpresaMFP } from '../mfp/empresaMFP';\r\nimport { EmpresaMLF } from '../mlf/empresaMLF';\r\nimport { EmpresaEmail } from './empresaEmail';\r\nimport { EmpresaTelefone } from './empresaTelefone';\r\nimport { Endereco } from './endereco';\r\nimport { GrupoEmpresa } from './grupoEmpresa';\r\nimport { Pessoa } from './pessoa';\r\nimport { Responsavel } from './responsavel';\r\n\r\nexport interface Empresa extends Pessoa {\r\n  acordoIsencaoMulta?: boolean;\r\n  /** Este campo utiliza o apropriacaoCreditoEnum */\r\n  apropriacaoCredito?: string;\r\n  caepf?: string;\r\n  centralizar?: boolean;\r\n  /** Este campo utiliza o classificacaoTributariaEnum */\r\n  classificacaoTributaria?: string;\r\n  cnaef?: string;\r\n  cnaefDesmembramento?: string;\r\n  codigo?: number;\r\n  codigoAcessoSimplesNacional?: string;\r\n  /** Este campo utiliza o contribuicaoPrevidenciariaProdutorRuralEnum */\r\n  contribPrevidenciariaProdutorRural?: string;\r\n  criarGrupoEmpPersistir?: boolean;\r\n  dataEmissaoCertificado?: string;\r\n  dataEncerramentoAtividade?: string;\r\n  dataInicioAtividade?: string;\r\n  dataProtocoloRenovacao?: string;\r\n  dataPublicacaoDiarioOficial?: string;\r\n  dataRegistro?: string;\r\n  dataVencimentoCertificado?: string;\r\n  dtInicioPrestServCont?: string;\r\n  dtInicioServAdm?: string;\r\n  dtSimplesEmpresarial?: string;\r\n  dtVencimentoAlvaraLocalizacao?: string;\r\n  /** Este campo utiliza o enquadramentoSimplesNacionalEnum */\r\n  enquadramentoSimplesNacional?: string;\r\n  emails?: EmpresaEmail[];\r\n  empresaMCG?: EmpresaMCG;\r\n  empresaMCP?: EmpresaMCP;\r\n  empresaMFP?: EmpresaMFP;\r\n  empresaMLF?: EmpresaMLF;\r\n  enderecos?: Endereco[];\r\n  fator13?: number;\r\n  fatorMes?: number;\r\n  /** Este campo utiliza o tipoTributacaoRealFCONTEnum */\r\n  forTribFCONT?: string;\r\n  grupoEmpresa?: GrupoEmpresa;\r\n  grupoEmpresaRaiz?: GrupoEmpresa;\r\n  idEmpresaApi?: string;\r\n  idGrupoEmpresaRaiz?: number;\r\n  inativa?: boolean;\r\n  /** Este campo utiliza o incidenciaTributariaEnum */\r\n  incidenciaTributaria?: string;\r\n  /** Este campo utiliza o indicativoSubstituicaoContribuicaoEnum */\r\n  indicadorContribuicaoPatronal?: string;\r\n  /** Este campo utiliza o indicativoContribuicaoEnum */\r\n  indicadorContribuicaoSubstituida?: string;\r\n  indicadorEmpresaGrandePorte?: boolean;\r\n  indicadorNire?: boolean;\r\n  matriz?: Empresa;\r\n  mei?: boolean;\r\n  ministerioLeiCertificado?: string;\r\n  /** Este campo utiliza o naturezaJuridicaEnum */\r\n  naturezaJuridica?: string;\r\n  nroLivro?: string;\r\n  numeroCertificado?: string;\r\n  numeroPaginaDiarioOficial?: number;\r\n  numeroProtocoloRenovacao?: string;\r\n  numIdentOrgao?: string;\r\n  orgaoRegistro?: string;\r\n  percentualReducaoContribuicao?: number;\r\n  /** Este campo utiliza o qualificacaoPJEnum */\r\n  qualificacaoPJ?: string;\r\n  responsavel?: Responsavel;\r\n  responsavelContador?: Responsavel;\r\n  suframa?: string;\r\n  telefones?: EmpresaTelefone[];\r\n  /** Este campo utiliza o tipoCAEPFEnum */\r\n  tipoCaepf?: string;\r\n  /** Este campo utiliza o tipoContribuicaoEnum */\r\n  tipoContribuicao?: string;\r\n  tipoEmpresaAtividadeImobiliaria?: boolean;\r\n  tipoEmpresaComercio?: boolean;\r\n  tipoEmpresaCondominio?: boolean;\r\n  tipoEmpresaConstrutora?: boolean;\r\n  tipoEmpresaIndustria?: boolean;\r\n  tipoEmpresaPessoaFisica?: boolean;\r\n  tipoEmpresaPrestacaoServico?: boolean;\r\n  tipoEmpresaProdutorRural?: boolean;\r\n  tipoEmpresaTerceiroSetor?: boolean;\r\n  /** Este campo utiliza o tipoTributacaoEnum */\r\n  tipoTributacao?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.empresa';\r\n","export const TODOS = { value: 'TODOS', label: 'Todos' };\r\nexport const ATIVOS = { value: 'ATIVOS', label: 'Ativos' };\r\nexport const INATIVOS = { value: 'INATIVOS', label: 'Inativos' };\r\n\r\nexport const TODAS = { value: 'TODAS', label: 'Todas' };\r\nexport const ATIVAS = { value: 'ATIVAS', label: 'Ativas' };\r\nexport const INATIVAS = { value: 'INATIVOS', label: 'Inativas' };\r\n\r\nexport const PERFIL_ENUM_MALE_VALUES = [TODOS, ATIVOS, INATIVOS];\r\n\r\nexport const PERFIL_ENUM_FEMALE_VALUES = [TODAS, ATIVAS, INATIVAS];\r\n"],"sourceRoot":""}
{"version":3,"sources":["hooks/useBrowserPreferences.ts","models/dtos/mcg/lancamentoSaldo.ts","views/pages/mcg/lancamentoSaldo/LancamentoExclusaoPeriodoModalView.tsx","views/pages/mcg/report/relacaoLancamentoSaldo/relacaoLancamentoSaldoRV.ts","views/pages/mcg/report/relacaoLancamentoSaldo/RelacaoLancamentoSaldoReportView.tsx","views/pages/mcg/lancamentoSaldo/LancamentoMovimentacaoDataGrid.tsx","views/pages/mcg/lancamentoSaldo/LancamentoSaldoSearchView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","dependencies/empresaMCGDependency.ts","models/enumerated/mcg/consolidarEnum.ts","dependencies/grupoPlanoContasDependency.ts"],"names":["useBrowserPreferences","settedPrefs","window","localStorage","getItem","prefs","JSON","parse","writePrefs","setItem","stringify","checkKey","key","search","has","Object","keys","indexOf","set","value","result","get","del","CLASS_NAME","checkBoxEnumMap","conciliacaoBancaria","contabilidade","controlePatrimonial","folhaPagamento","folhaPagamento131","folhaPagamento132","folhaPagamentoAdiantamento","folhaPagamentoDarf","folhaPagamentoFerias","folhaPagamentoGps132","folhaPagamentoGpsCooperativa","folhaPagamentoGpsGeral","folhaPagamentoGpsProdutor","folhaPagamentoGpsTerceiros","folhaPagamentoRescisao","folhaPagamentoResilicao","honorarios","importacao","integracao","livrosFiscais","sinf","LancamentoExclusaoPeriodoModalView","props","formProps","useForm","defaultValues","mode","useEffect","setTimeout","values","expressions","map","it","[object Object]","alias","fieldName","reduce","objectSpread2","setValue","dtInicial","dtLancamentoInicio","dtFinal","dtLancamentoFinal","onClose","execRemoverLancamentos","formData","origens","filter","EnumUtil","find","ORIGEM_LANCAMENTO_MCG_ENUM_VALUES","item","extraFields","intValue","removeLancamentoPeriodo","dtFinalStr","dtInicialStr","idGerEmpresa","globalParameter","empresa","id","thenFunction","res","alertManager","emit","ACTION_EVENTS","SHOW","message","type","AlertType","ERROR","react_default","a","createElement","Modal","isOpen","centered","backdrop","toggle","size","ModalHeader","ModalBody","Row","Col","summer_esm","validation","required","isPrependLabel","label","InputType","DATE","title","className","onChange","getValues","todas","labelProps","style","fontWeight","marginBottom","ModalFooter","handleSubmit","erros","isEmpty","push","compare","keysCheckboxes","length","validateExtras","bloqueio","validatePeriodoConfig","concat","onOkClick","params","data","isDataEncerrada","isEncerrado","abrirContas","WARNING_YES_NO","removerLancamentos","handleClose","DEFAULT_OPTIONS","getDefaultReportViewOptions","RelacaoLancamentoSaldoReportView","reportValues","ReportForm","afterSubmit","localStorageKey","reportBasicValues","reportViewOptions","extraConfigOpened","addExtraParameters","forEach","LancamentoMovimentacaoDataGrid","forwardRef","ref","globalReducer","useSelector","state","tableRef","useRef","_useState","useState","_useState2","slicedToArray","dados","setDados","_useState3","_useState4","dadosPaginados","setDadosPaginados","_useState5","page","sizePerPage","totalSize","_useState6","pagination","setPagination","_useState7","columns","_useState8","setColumns","_useState9","_useState10","currentCriteria","setCurrentCriteria","_useState11","_useState12","modalContent","setModalContent","c","splice","dataField","formatter","formatSaldo","sort","text","closeModal","doSearch","criteria","consolidar","conta","dtAte","formatDate","dtDe","idGerGrupoEmpresaAtual","grupoEmpresa","idGerPlanoConta","centroCusto","idGerCentroCusto","consultarMovimentacao","saldoAtual","totalCredito","totalDebito","saldo","contaCredito","valor","contaDebito","decimalFormatter","getSaldoAnterior","afterSearch","p","imprimir","descConta","descCentroCusto","getDefaultReportBasicValues","codigoReduzido","empresaMCG","tipoLancamentoConta","CODIGO_REDUZIDO_PLANO","idConta","toString","idGerGrupoEmpresa","numConta","saldos","idCentroCusto","numCentroCusto","relacaoLancamentoSaldo_RelacaoLancamentoSaldoReportView","useImperativeHandle","begin","Array","from","_","i","undefined","onPageChange","current","scroll","selectRow","clickToSelect","SelectModeEnum","RADIO","Fragment","react_bootstrap_table2_toolkit_lib_default","keyField","bootstrap4","toolkitProps","lib_default","assign","baseProps","striped","bordered","hover","responsive","tabIndexCell","filterFactory","position","left","rc_pagination_es","showQuickJumper","locale","localeInfo","pageSize","total","Card","body","FormGroup","Label","Input","name","innerRef","register","disabled","bsSize","defaultSorted","order","OrderType","ASC","LancamentoSaldoSearchView","browserPrefs","referencia","refAtual","searchRef","movimentacaoRef","isSearchOpen","setIsSearchOpen","modoBusca","setModoBusca","openFromMenu","setOpenFromMenu","openFromVerifyError","setOpenFromVerifyError","defaultSearchExpression","isFromVerifyError","dtLancamento","planoConta","NORMAL","notifySearchExpressionChange","toggleSearch","contaDebitoOuCRFormatter","cell","row","codigoReduzidoDebito","contaCreditoOuCRFormatter","codigoReduzidoCredito","centroCustoCreditoOuCRFormatter","tipoLancamentoCentroCusto","CODIGO_REDUZIDO_CENTRO","codigoReduzidoCentroCustoCredito","codigoCentroCustoCredito","centroCustoDebitoOuCRFormatter","codigoReduzidoCentroCustoDebito","codigoCentroCustoDebito","zerarDatas","dataInicial","dataFinal","zerarReferencia","zerarContaSaldo","planoContaSaldo","centroCustoSaldo","zerarConta","origemLancamento","changeContaSaldo","analitica","INFORMATION","getSearchExpressions","operation","OperationEnum","GREATER_THAN_EQUAL","parseRefToDate","LESS_THAN_EQUAL","parseLastDay","buildRefExpression","toDate","EQUAL","consolidacaoSaldo","codigo","CONTAINS","descricao","onCloseModal","update","excluirPeriodo","lancamentoSaldo_LancamentoExclusaoPeriodoModalView","execRemoverLancamento","selectedItem","success","refExclusao","formatRef","removerLancamentoLote","listItem","removerLote","onNoClick","atualizaCalculoIrpjCsll","execAtualizaCalculoIrpjCsll","QUESTION","hiddenCentroCusto","lancamentoMCGConfig","utilizarCentroCusto","hidden","getExtraSearchButtons","Button","color","onClick","index_es","icon","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMCG","hasGrupoPlanoContas","wikiId","cx","searchDataGridProps","dtoClassName","extraData","getExtraData","customRemove","error","cancel","hideCustomSearch","searchExpressions","customHeaderContent","pb-4","pt-0","rotate-arrow","openAddView","Collapse","pt-4","mb-4","REFERENCE","inputProps","onFocus","md","paddingTop","open","PlanoContaIS","placeholder","inputDropDownProps","optionsProvider","DROP_DOWN","tooltipProps","width","marginLeft","CONSOLIDAR_ENUM_VALUES","CentroCustoIS","customFooterContent","onAfterSearch","dtDeStr","dtAteStr","idPlanoContaDebito","idPlanoContaCredito","totalizadorLancamento","totalSaldo","saldoTotal","totalGridDebito","totalGridCredito","searchProps","extraButtons","onSelect","descCredito","descDebito","descCustoCredito","descCustoDebito","descricaoCredito","descricaoDebito","descricaoCentroCustoCredito","descricaoCentroCustoDebito","d-none","lancamentoSaldo_LancamentoMovimentacaoDataGrid","__webpack_require__","d","__webpack_exports__","NATUREZA","SALDO_REPORT_ENUM","EmpresaIS","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","inputSearchProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","searchViewId","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","empresasSelecionadas","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","gerarCabecalhoPadraoAdministradora","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","virtualization","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDadosEmpresa","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","_useForm","errors","triggerValidation","handleCancel","currentItem","currentValues","parentObject","EnvioEmail","detailView","propName","CustomInput","maxLength","TEXT_AREA","ReportInputs","activeTab","setActiveTab","_props$reportViewOpti","printingTypes","resetObject","currentMomentDate","endDate","DATES","endOf","referenciaInicial","format","REF_PATTERN","REFERENCES","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dtInicialRequired","dateComponent","datesComponent","dtFinalRequired","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","NUMBER","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","gerarPorEmpresas","selectProps","isMulti","segmentacaoFolhaComponent","exibirSegmentacaoFolha","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","exibirImprimirValoresColoridos","isClearable","firstOpen","Nav","tabs","NavItem","NavLink","active","TabContent","TabPane","tabId","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","headerDrawerToggle","dispatch","useDispatch","finishSubmit","gerarReport","errorFunction","mensagem","showToast","toggleHeaderDrawer","Form","noValidate","children","report_ReportInputs","event","preventDefault","routeProps","dispatchClose","history","NORMAL_NUMBER","GRUPO_ATUAL_NUMBER","CONSOLIDAR_NUMBER_ENUM_VALUES","grupoEmpresaConfig","grupoPlanoConta","mascara","digitoAtivo","digitoPassivo","digitoReceita","digitoDespesa"],"mappings":"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","file":"static/js/2.d4b2fd0a.chunk.js","sourcesContent":["export interface BrowserPrefsProps {\r\n  set: (key: string, value: any) => boolean;\r\n  get: (key: string) => any;\r\n  has: (key: string) => boolean;\r\n  del: (key: string) => boolean;\r\n}\r\n\r\nexport const BROWSER_PREFERENCES_KEY_NAME = 'userPreferences';\r\n\r\nconst useBrowserPreferences = (): BrowserPrefsProps => {\r\n  const settedPrefs = window.localStorage.getItem(BROWSER_PREFERENCES_KEY_NAME);\r\n  const prefs = settedPrefs ? JSON.parse(settedPrefs) : {};\r\n\r\n  const writePrefs = () => {\r\n    window.localStorage.setItem(BROWSER_PREFERENCES_KEY_NAME, JSON.stringify(prefs));\r\n  };\r\n\r\n  const checkKey = key => typeof key === 'string' && key.search(/\\s/g) === -1;\r\n\r\n  const get = (key: string): any => checkKey(key) && prefs[key];\r\n  const has = (key: string): boolean => checkKey(key) && Object.keys(prefs).indexOf(key) !== -1;\r\n\r\n  const set = (key: string, value: any): boolean => {\r\n    const result = checkKey(key);\r\n    if (result) {\r\n      prefs[key] = value;\r\n      writePrefs();\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const del = (key: string): boolean => {\r\n    const result = checkKey(key) && has(key);\r\n    if (result) {\r\n      delete prefs[key];\r\n      writePrefs();\r\n    }\r\n    return result;\r\n  };\r\n\r\n  return { set, get, has, del };\r\n};\r\n\r\nexport default useBrowserPreferences;\r\n","import { LancamentoVW } from './lancamentoVW';\r\n\r\nexport interface LancamentoSaldo extends LancamentoVW {\r\n  saldo?: number;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mcg.model.dto.lancamentosaldo';\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Col, Modal, ModalBody, ModalFooter, ModalHeader, Row } from 'reactstrap';\r\nimport { ACTION_EVENTS, alertManager, AlertType, Box, Checkbox, compare, ErroList, InputGroupInline, InputType, isEmpty, ProcessBar } from 'summer';\r\nimport { GlobalParameter } from '../../../../models/dtos/ger/globalParameter';\r\nimport { ORIGEM_LANCAMENTO_MCG_ENUM_VALUES } from '../../../../models/enumerated/mcg/origemLancamentoMCGEnum';\r\nimport { abrirContas, isDataEncerrada, removeLancamentoPeriodo } from '../../../../services/mcg.service';\r\nimport EnumUtil from '../../../../utilities/enum.util';\r\nimport { validatePeriodoConfig } from '../../../../utilities/mcg.util';\r\n\r\nimport './LancamentoExclusaoPeriodoModalView.css';\r\n\r\ninterface LancamentoExclusaoPeriodoModalViewProps {\r\n  onClose: (update: boolean) => void;\r\n  globalParameter: GlobalParameter;\r\n  expressions: any[];\r\n}\r\n\r\ninterface ScreenFields {\r\n  dtInicial?: string;\r\n  dtFinal?: string;\r\n  todas?: boolean;\r\n  conciliacaoBancaria?: boolean;\r\n  contabilidade?: boolean;\r\n  controlePatrimonial?: boolean;\r\n  folhaPagamento?: boolean;\r\n  folhaPagamento131?: boolean;\r\n  folhaPagamento132?: boolean;\r\n  folhaPagamentoAdiantamento?: boolean;\r\n  folhaPagamentoDarf?: boolean;\r\n  folhaPagamentoFerias?: boolean;\r\n  folhaPagamentoGps132?: boolean;\r\n  folhaPagamentoGpsCooperativa?: boolean;\r\n  folhaPagamentoGpsGeral?: boolean;\r\n  folhaPagamentoGpsProdutor?: boolean;\r\n  folhaPagamentoGpsTerceiros?: boolean;\r\n  folhaPagamentoRescisao?: boolean;\r\n  folhaPagamentoResilicao?: boolean;\r\n  honorarios?: boolean;\r\n  importacao?: boolean;\r\n  integracao?: boolean;\r\n  livrosFiscais?: boolean;\r\n  sinf?: boolean;\r\n}\r\n\r\nconst checkBoxEnumMap = {\r\n  conciliacaoBancaria: 'CONCILIACAO',\r\n  contabilidade: 'CONTABILIDADE',\r\n  controlePatrimonial: 'CONTROLE_PATRIMONIAL',\r\n  folhaPagamento: 'FOLHA_DE_PAGAMENTO_FOLHA',\r\n  folhaPagamento131: 'FOLHA_DE_PAGAMENTO_13_PARCELA_1',\r\n  folhaPagamento132: 'FOLHA_DE_PAGAMENTO_13_PARCELA_2',\r\n  folhaPagamentoAdiantamento: 'FOLHA_DE_PAGAMENTO_ADIANTAMENTO',\r\n  folhaPagamentoDarf: 'FOLHA_DE_PAGAMENTO_DARF',\r\n  folhaPagamentoFerias: 'FOLHA_DE_PAGAMENTO_FERIAS',\r\n  folhaPagamentoGps132: 'FOLHA_DE_PAGAMENTO_GPS_13_PARCELA_2',\r\n  folhaPagamentoGpsCooperativa: 'FOLHA_DE_PAGAMENTO_GPS_COOPERATIVA',\r\n  folhaPagamentoGpsGeral: 'FOLHA_DE_PAGAMENTO_GPS_GERAL',\r\n  folhaPagamentoGpsProdutor: 'FOLHA_DE_PAGAMENTO_GPS_PRODUTOR_RURAL',\r\n  folhaPagamentoGpsTerceiros: 'FOLHA_DE_PAGAMENTO_GPS_TERCEIROS_TRANSPORTADOR',\r\n  folhaPagamentoRescisao: 'FOLHA_DE_PAGAMENTO_RESCISAO',\r\n  folhaPagamentoResilicao: 'FOLHA_DE_PAGAMENTO_RESILICAO',\r\n  honorarios: 'HONORARIOS',\r\n  importacao: 'IMPORTACAO',\r\n  integracao: 'INTEGRACAOREST',\r\n  livrosFiscais: 'LIVRO_FISCAL',\r\n  sinf: 'SINF',\r\n};\r\n\r\nconst LancamentoExclusaoPeriodoModalView: FC<LancamentoExclusaoPeriodoModalViewProps> = props => {\r\n  const formProps = useForm<ScreenFields>({ defaultValues: { contabilidade: true }, mode: 'onBlur' });\r\n\r\n  useEffect(\r\n    () => {\r\n      setTimeout(() => {\r\n        const values = props.expressions[0].expressions\r\n          .map(it => ({ [it.alias || it.fieldName]: it.value }))\r\n          .reduce((result, it) => ({ ...result, ...it }));\r\n\r\n        formProps.setValue([{ dtInicial: values.dtLancamentoInicio }, { dtFinal: values.dtLancamentoFinal }]);\r\n      }, 700);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const onClose = () => {\r\n    if (props.onClose) {\r\n      props.onClose(false);\r\n    }\r\n  };\r\n\r\n  const toggleTodas = () => {\r\n    const values = formProps.getValues();\r\n    formProps.setValue(Object.keys(checkBoxEnumMap).map(key => ({ [key]: values.todas })));\r\n  };\r\n\r\n  const validateExtras = formData => {\r\n    const erros = [];\r\n\r\n    if (isEmpty(formData.dtInicial)) {\r\n      erros.push('Dt. Inicial: Campo não pode estar em branco');\r\n    }\r\n\r\n    if (isEmpty(formData.dtFinal)) {\r\n      erros.push('Dt. Final: Campo não pode estar em branco');\r\n    }\r\n\r\n    if (compare(formData.dtInicial, formData.dtFinal) > 0) {\r\n      erros.push('Dt. Inicial não pode ser posterior á Dt. Final.');\r\n    }\r\n\r\n    const keysCheckboxes = Object.keys(checkBoxEnumMap);\r\n\r\n    if (Object.keys(formData).filter(key => keysCheckboxes.indexOf(key) !== -1).length === 0) {\r\n      erros.push('Pelo menos uma origem deve ser selecionada.');\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  const execRemoverLancamentos = formData => {\r\n    const keys = Object.keys(checkBoxEnumMap);\r\n    const origens = Object.keys(formData)\r\n      .filter(key => keys.indexOf(key) !== -1 && formData[key] === true)\r\n      .map(key => EnumUtil.find(ORIGEM_LANCAMENTO_MCG_ENUM_VALUES, checkBoxEnumMap[key]))\r\n      .map(item => item.extraFields.intValue);\r\n\r\n    removeLancamentoPeriodo(\r\n      {\r\n        dtFinalStr: formData.dtFinal,\r\n        dtInicialStr: formData.dtInicial,\r\n        idGerEmpresa: props.globalParameter.empresa.id,\r\n        origens,\r\n      },\r\n      {\r\n        thenFunction: res => {\r\n          if (res) {\r\n            alertManager.emit(ACTION_EVENTS.SHOW, {\r\n              message: res,\r\n              type: AlertType.ERROR,\r\n            });\r\n          } else {\r\n            props.onClose(true);\r\n          }\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  const removerLancamentos = formData => {\r\n    const params = {\r\n      data: formData.dtInicial,\r\n      idGerEmpresa: props.globalParameter.empresa.id,\r\n    };\r\n\r\n    isDataEncerrada(params, {\r\n      thenFunction: isEncerrado => {\r\n        if (isEncerrado) {\r\n          alertManager.emit(ACTION_EVENTS.SHOW, {\r\n            message:\r\n              'Existem contas de resultado encerradas neste período. Continuar com essa operação ocasionará ' +\r\n              'a abertura das mesmas. Deseja continuar?',\r\n            onOkClick: () => {\r\n              abrirContas(params, {\r\n                thenFunction: () => {\r\n                  execRemoverLancamentos(formData);\r\n                },\r\n              });\r\n            },\r\n            type: AlertType.WARNING_YES_NO,\r\n          });\r\n        } else {\r\n          execRemoverLancamentos(formData);\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    const values = formProps.getValues();\r\n    const erros = validateExtras(values);\r\n\r\n    if (erros.length > 0) {\r\n      alertManager.emit(ACTION_EVENTS.SHOW, {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      });\r\n    } else {\r\n      const bloqueio = validatePeriodoConfig(values.dtInicial, props.globalParameter) || validatePeriodoConfig(values.dtFinal, props.globalParameter);\r\n      if (bloqueio) {\r\n        alertManager.emit(ACTION_EVENTS.SHOW, {\r\n          message: 'Não é possível excluir lançamentos ' + bloqueio,\r\n          type: AlertType.ERROR,\r\n        });\r\n      } else {\r\n        alertManager.emit(ACTION_EVENTS.SHOW, {\r\n          message: `Confirma a exclusão dos lançamentos no período de ${values.dtInicial} à ${values.dtFinal}?`,\r\n          onOkClick: () => removerLancamentos(values),\r\n          type: AlertType.WARNING_YES_NO,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={true} centered={true} backdrop=\"static\" toggle={onClose} size=\"xl\">\r\n      <ModalHeader toggle={onClose}>Lançamento - Exclusão por Período</ModalHeader>\r\n      <ModalBody>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              isPrependLabel={true}\r\n              id=\"dtInicial\"\r\n              label=\"Dt. Inicial\"\r\n              type={InputType.DATE}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              isPrependLabel={true}\r\n              id=\"dtFinal\"\r\n              label=\"Dt. Final\"\r\n              type={InputType.DATE}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Box title=\"Origem\" className=\"checkbox-box\">\r\n              <Row>\r\n                <Col>\r\n                  <Checkbox\r\n                    formProps={formProps}\r\n                    id=\"todas\"\r\n                    label=\"Todos\"\r\n                    onChange={toggleTodas}\r\n                    labelProps={{ style: { fontWeight: 'bold', marginBottom: 0 } }}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Checkbox formProps={formProps} id=\"contabilidade\" label=\"Contabilidade\" />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Checkbox formProps={formProps} id=\"conciliacaoBancaria\" label=\"Conciliação Bancária\" />\r\n                </Col>\r\n                <Col>\r\n                  <Checkbox formProps={formProps} id=\"controlePatrimonial\" label=\"Controle de Patrimônial\" />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Checkbox formProps={formProps} id=\"folhaPagamento\" label=\"Folha de Pagamento\" />\r\n                </Col>\r\n                <Col>\r\n                  <Checkbox formProps={formProps} id=\"folhaPagamento131\" label=\"Folha de Pagamento - 13º - 1ª Parcela\" />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Checkbox formProps={formProps} id=\"folhaPagamento132\" label=\"Folha de Pagamento - 13º - 1ª Parcela\" />\r\n                </Col>\r\n                <Col>\r\n                  <Checkbox formProps={formProps} id=\"folhaPagamentoAdiantamento\" label=\"Folha de Pagamento - Adiantamento\" />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Checkbox formProps={formProps} id=\"folhaPagamentoFerias\" label=\"Folha de Pagamento - Férias\" />\r\n                </Col>\r\n                <Col>\r\n                  <Checkbox formProps={formProps} id=\"folhaPagamentoRescisao\" label=\"Folha de Pagamento - Rescisão\" />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Checkbox formProps={formProps} id=\"folhaPagamentoResilicao\" label=\"Folha de Pagamento - Rescisão\" />\r\n                </Col>\r\n                <Col>\r\n                  <Checkbox formProps={formProps} id=\"folhaPagamentoGpsGeral\" label=\"Folha de Pagamento - Gps - Geral\" />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Checkbox formProps={formProps} id=\"folhaPagamentoGps132\" label=\"Folha de Pagamento - Gps -  13º - 2ª Parcela\" />\r\n                </Col>\r\n                <Col>\r\n                  <Checkbox formProps={formProps} id=\"folhaPagamentoGpsCooperativa\" label=\"Folha de Pagamento - Gps - Cooperativa\" />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Checkbox formProps={formProps} id=\"folhaPagamentoGpsProdutor\" label=\"Folha de Pagamento - Gps -  Produtor Rural\" />\r\n                </Col>\r\n                <Col>\r\n                  <Checkbox formProps={formProps} id=\"folhaPagamentoGpsTerceiros\" label=\"Folha de Pagamento - Gps - Terceiros Transportador\" />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Checkbox formProps={formProps} id=\"folhaPagamentoDarf\" label=\"Folha de Pagamento - DARF\" />\r\n                </Col>\r\n                <Col>\r\n                  <Checkbox formProps={formProps} id=\"honorarios\" label=\"Honorários\" />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Checkbox formProps={formProps} id=\"importacao\" label=\"Importação\" />\r\n                </Col>\r\n                <Col>\r\n                  <Checkbox formProps={formProps} id=\"integracao\" label=\"Integração (JSON)\" />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Checkbox formProps={formProps} id=\"livrosFiscais\" label=\"Livros Fiscais\" />\r\n                </Col>\r\n                <Col>\r\n                  <Checkbox formProps={formProps} id=\"sinf\" label=\"SINF\" />\r\n                </Col>\r\n              </Row>\r\n            </Box>\r\n          </Col>\r\n        </Row>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <ProcessBar handleSubmit={formProps.handleSubmit(onSubmit)} handleClose={onClose} />\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default LancamentoExclusaoPeriodoModalView;\r\n","import { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\n\r\nexport interface RelacaoLancamentoSaldoRV extends ReportBasicValues {\r\n  codigoReduzido?: boolean;\r\n  consolidar?: number;\r\n  descCentroCusto?: string;\r\n  descConta?: string;\r\n  exibirHistoricoCompl?: boolean;\r\n  exibirLinBranco?: number;\r\n  idCentroCusto?: number;\r\n  idConta?: number;\r\n  idGerGrupoEmpresa?: number;\r\n  numCentroCusto?: string;\r\n  numConta?: string;\r\n  numLinhas?: number;\r\n  saldos?: any[];\r\n}\r\n\r\nexport const CLASS_KEY = 'relacaolancamentosaldo';\r\nexport const REPORT_TITLE = 'Relação de Lançamentos e Saldos';\r\nexport const REPORT_EVENT = 'printRelacaoLancamentoSaldo';\r\n","import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Modal, ModalBody, ModalHeader } from 'reactstrap';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { CLASS_KEY, RelacaoLancamentoSaldoRV, REPORT_EVENT, REPORT_TITLE } from './relacaoLancamentoSaldoRV';\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT),\r\n};\r\n\r\ninterface RelacaoLancamentoSaldoReportViewProps {\r\n  reportValues?: RelacaoLancamentoSaldoRV;\r\n  onClose?: () => void;\r\n}\r\n\r\nconst RelacaoLancamentoSaldoReportView: FC<RelacaoLancamentoSaldoReportViewProps> = props => {\r\n  const formProps = useForm<RelacaoLancamentoSaldoRV>({ defaultValues: props.reportValues, mode: 'onBlur' });\r\n\r\n  const addExtraParameters = data => {\r\n    const keys = Object.keys(data);\r\n    Object.keys(props.reportValues).forEach(key => {\r\n      if (keys.indexOf(key) === -1) {\r\n        data[key] = props.reportValues[key];\r\n      }\r\n    });\r\n    return data;\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={true} centered={true} backdrop=\"static\" toggle={props.onClose} size=\"lg\">\r\n      <ModalHeader toggle={props.onClose}>{REPORT_TITLE}</ModalHeader>\r\n      <ModalBody>\r\n        <ReportForm\r\n          handleClose={props.onClose}\r\n          handleSubmit={formProps.handleSubmit}\r\n          afterSubmit={props.onClose}\r\n          formProps={formProps}\r\n          localStorageKey={CLASS_KEY}\r\n          reportBasicValues={props.reportValues}\r\n          reportViewOptions={DEFAULT_OPTIONS}\r\n          extraConfigOpened={true}\r\n          addExtraParameters={addExtraParameters}\r\n        />\r\n      </ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RelacaoLancamentoSaldoReportView;\r\n","import Pagination from 'rc-pagination';\r\nimport localeInfo from 'rc-pagination/lib/locale/pt_BR';\r\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport filterFactory from 'react-bootstrap-table2-filter';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { Card, Col, FormGroup, Input, Label, Row } from 'reactstrap';\r\nimport { ColumnsProps, decimalFormatter, formatDate, formatSaldo, SearchExpression, SelectModeEnum } from 'summer';\r\nimport { getDefaultReportBasicValues } from '../../../../models/dtos/ger/reportBasicValues';\r\nimport { SaldoCriteria } from '../../../../models/dtos/mcg/saldoCriteria';\r\nimport { CODIGO_REDUZIDO as CODIGO_REDUZIDO_PLANO } from '../../../../models/enumerated/ger/planoContaGERTipoLancamentoContaEnum';\r\nimport { consultarMovimentacao, getSaldoAnterior } from '../../../../services/mcg.service';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport RelacaoLancamentoSaldoReportView from '../report/relacaoLancamentoSaldo/RelacaoLancamentoSaldoReportView';\r\nimport { RelacaoLancamentoSaldoRV, REPORT_TITLE } from '../report/relacaoLancamentoSaldo/relacaoLancamentoSaldoRV';\r\n\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css';\r\nimport './LancamentoMovimentacaoDataGrid.css';\r\n\r\ninterface LancamentoMovimentacaoDataGridProps {\r\n  expressions: () => SearchExpression[];\r\n  columns: ColumnsProps[];\r\n}\r\n\r\nexport interface LancamentoMovimentacaoDataGridRefProps {\r\n  doSearch?: () => void;\r\n  imprimir?: (descConta?: string, descCentroCusto?: string) => void;\r\n}\r\n\r\ninterface ScreenFields {\r\n  saldoAnterior?: string;\r\n  totalDebito?: string;\r\n  totalCredito?: string;\r\n  saldoAtual?: string;\r\n}\r\n\r\nconst LancamentoMovimentacaoDataGrid = forwardRef<LancamentoMovimentacaoDataGridRefProps, LancamentoMovimentacaoDataGridProps>((props, ref) => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const formProps = useForm<ScreenFields>({ mode: 'onBlur' });\r\n  const tableRef = useRef<HTMLDivElement>();\r\n\r\n  const [dados, setDados] = useState([]);\r\n  const [dadosPaginados, setDadosPaginados] = useState([]);\r\n  const [pagination, setPagination] = useState({ page: 1, sizePerPage: 10, totalSize: 0 });\r\n  const [columns, setColumns] = useState(props.columns);\r\n  const [currentCriteria, setCurrentCriteria] = useState<SaldoCriteria>(null);\r\n  const [modalContent, setModalContent] = useState(null);\r\n\r\n  useEffect(\r\n    () => {\r\n      setColumns(c => {\r\n        c.splice(8, 0, {\r\n          dataField: 'saldo',\r\n          formatter: formatSaldo,\r\n          sort: true,\r\n          text: 'Saldo',\r\n        });\r\n        return [...c];\r\n      });\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const closeModal = () => setModalContent(null);\r\n\r\n  const afterSearch = (data, criteria) => {\r\n    let saldoAtual = 0;\r\n    let totalCredito = 0;\r\n    let totalDebito = 0;\r\n\r\n    if (data.length > 0) {\r\n      saldoAtual = data[data.length - 1].saldo;\r\n      data.forEach(item => {\r\n        if (criteria.conta === item.contaCredito) {\r\n          totalCredito += item.valor;\r\n        }\r\n        if (criteria.conta === item.contaDebito) {\r\n          totalDebito += item.valor;\r\n        }\r\n      });\r\n    }\r\n\r\n    formProps.setValue([\r\n      { saldoAtual: formatSaldo(saldoAtual) },\r\n      { totalCredito: decimalFormatter(totalCredito, null) },\r\n      { totalDebito: decimalFormatter(totalDebito, null) },\r\n    ]);\r\n\r\n    getSaldoAnterior(criteria, {\r\n      thenFunction: res => {\r\n        formProps.setValue('saldoAnterior', formatSaldo(res));\r\n        if (saldoAtual === 0) {\r\n          formProps.setValue('saldoAtual', formatSaldo(res));\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  const doSearch = () => {\r\n    const values = props\r\n      .expressions()[0]\r\n      .expressions.map(it => ({ [it.alias || it.fieldName]: it.value }))\r\n      .reduce((result, it) => ({ ...result, ...it }));\r\n    const criteria: SaldoCriteria = {\r\n      consolidar: values.consolidar,\r\n      conta: values.conta,\r\n      dtAte: formatDate(values.dtLancamentoFinal),\r\n      dtDe: formatDate(values.dtLancamentoInicio),\r\n      idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n      idGerGrupoEmpresaAtual: globalReducer.globalParameter.empresa.grupoEmpresa.id,\r\n      idGerPlanoConta: values.idGerPlanoConta,\r\n    };\r\n\r\n    if (values.centroCusto) {\r\n      criteria.idGerCentroCusto = values.idGerCentroCusto;\r\n      criteria.centroCusto = values.centroCusto;\r\n    }\r\n\r\n    setCurrentCriteria(criteria);\r\n    consultarMovimentacao(criteria, {\r\n      thenFunction: res => {\r\n        afterSearch(res, criteria);\r\n        setDados(res);\r\n        setPagination(p => ({ ...p, totalSize: res.length }));\r\n      },\r\n    });\r\n  };\r\n\r\n  const imprimir = (descConta = null, descCentroCusto = null) => {\r\n    const reportValues: RelacaoLancamentoSaldoRV = {\r\n      ...getDefaultReportBasicValues(REPORT_TITLE),\r\n      codigoReduzido: globalReducer.globalParameter.empresaMCG.tipoLancamentoConta === CODIGO_REDUZIDO_PLANO.value,\r\n      consolidar: currentCriteria.consolidar,\r\n      descConta,\r\n      dtFinal: currentCriteria.dtAte,\r\n      dtInicial: currentCriteria.dtDe,\r\n      idConta: currentCriteria.idGerPlanoConta,\r\n      idGerEmpresa: globalReducer.globalParameter.empresa.id.toString(),\r\n      idGerGrupoEmpresa: globalReducer.globalParameter.empresa.grupoEmpresa.id,\r\n      numConta: currentCriteria.conta,\r\n      saldos: dados,\r\n    };\r\n\r\n    if (currentCriteria.centroCusto) {\r\n      reportValues.idCentroCusto = currentCriteria.idGerCentroCusto;\r\n      reportValues.numCentroCusto = currentCriteria.centroCusto;\r\n      reportValues.descCentroCusto = descCentroCusto;\r\n    }\r\n\r\n    setModalContent(<RelacaoLancamentoSaldoReportView reportValues={reportValues} onClose={closeModal} />);\r\n  };\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    doSearch,\r\n    imprimir,\r\n  }));\r\n\r\n  useEffect(\r\n    () => {\r\n      const begin = pagination.sizePerPage * (pagination.page - 1);\r\n      setDadosPaginados(Array.from(Array(pagination.sizePerPage), (_, i) => dados[begin + i]).filter(it => it !== undefined));\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [pagination]\r\n  );\r\n\r\n  const onPageChange = page => {\r\n    setPagination(p => ({ ...p, page }));\r\n    tableRef.current.scroll(0, 0);\r\n  };\r\n\r\n  const selectRow = {\r\n    clickToSelect: true,\r\n    mode: SelectModeEnum.RADIO,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {modalContent}\r\n      <ToolkitProvider keyField=\"id\" columns={columns} data={dadosPaginados} bootstrap4={true} search={true}>\r\n        {toolkitProps => [\r\n          <div key=\"TableMovimentacao\" className=\"table-area table-movimentacao\" ref={tableRef}>\r\n            <BootstrapTable\r\n              {...toolkitProps.baseProps}\r\n              striped={true}\r\n              bordered={true}\r\n              hover={true}\r\n              responsive={true}\r\n              tabIndexCell={true}\r\n              filter={filterFactory()}\r\n              selectRow={selectRow}\r\n            />\r\n          </div>,\r\n          <div key=\"pgMovimentacao\" className=\"p-3 rounded bg-secondary d-flex justify-content-center align-items-center mt-3 position-relative\">\r\n            <div style={{ position: 'absolute', left: '1rem' }}>Registros: {pagination.totalSize}</div>\r\n            <Pagination\r\n              showQuickJumper={true}\r\n              locale={localeInfo}\r\n              pageSize={pagination.sizePerPage}\r\n              current={pagination.page}\r\n              total={pagination.totalSize}\r\n              onChange={onPageChange}\r\n            />\r\n          </div>,\r\n          <Card className=\"custom-footer mt-4\" body={true} key=\"footerMovimentacao\">\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>Saldo Anterior:</Label>\r\n                  <Input name=\"saldoAnterior\" innerRef={formProps.register} disabled={true} bsSize=\"sm\" />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>Total de Débito:</Label>\r\n                  <Input name=\"totalDebito\" innerRef={formProps.register} disabled={true} bsSize=\"sm\" />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>Total de Crédito:</Label>\r\n                  <Input name=\"totalCredito\" innerRef={formProps.register} disabled={true} bsSize=\"sm\" />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>Saldo Atual:</Label>\r\n                  <Input name=\"saldoAtual\" innerRef={formProps.register} disabled={true} bsSize=\"sm\" />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Card>,\r\n        ]}\r\n      </ToolkitProvider>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default LancamentoMovimentacaoDataGrid;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport cx from 'clsx';\r\nimport React, { FC, useEffect, useRef, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { Button, Card, Col, Collapse, FormGroup, Input, Label, Row } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertType,\r\n  ColumnsProps,\r\n  decimalFormatter,\r\n  DefaultSortProps,\r\n  formatDate,\r\n  formatRef,\r\n  getExtraData,\r\n  InputGroupInline,\r\n  InputType,\r\n  isEmpty,\r\n  OperationEnum,\r\n  OrderType,\r\n  parseLastDay,\r\n  parseRefToDate,\r\n  SearchDataGrid,\r\n  SearchDataGridRefProps,\r\n  SearchExpression,\r\n  SearchViewProps,\r\n  SelectModeEnum,\r\n  toDate,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../dependencies/empresaMCGDependency';\r\nimport { hasGrupoPlanoContas } from '../../../../dependencies/grupoPlanoContasDependency';\r\nimport useBrowserPreferences from '../../../../hooks/useBrowserPreferences';\r\nimport { CentroCusto } from '../../../../models/dtos/ger/centroCusto';\r\nimport { PlanoConta } from '../../../../models/dtos/ger/planoConta';\r\nimport { ConsultaTotalLancamento } from '../../../../models/dtos/mcg/consultaTotalLancamento';\r\nimport { CLASS_NAME, LancamentoSaldo } from '../../../../models/dtos/mcg/lancamentoSaldo';\r\nimport { CODIGO_REDUZIDO as CODIGO_REDUZIDO_CENTRO } from '../../../../models/enumerated/ger/centroCustoGERTipoLancamentoCentroCustoEnum';\r\nimport { CODIGO_REDUZIDO as CODIGO_REDUZIDO_PLANO } from '../../../../models/enumerated/ger/planoContaGERTipoLancamentoContaEnum';\r\nimport { CONSOLIDAR_ENUM_VALUES, NORMAL } from '../../../../models/enumerated/mcg/consolidarEnum';\r\nimport { ORIGEM_LANCAMENTO_MCG_ENUM_VALUES } from '../../../../models/enumerated/mcg/origemLancamentoMCGEnum';\r\nimport {\r\n  abrirContas,\r\n  atualizaCalculoIrpjCsll,\r\n  isDataEncerrada,\r\n  removerLancamentoLote,\r\n  totalizadorLancamento,\r\n} from '../../../../services/mcg.service';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport EnumUtil from '../../../../utilities/enum.util';\r\nimport { validatePeriodoConfig } from '../../../../utilities/mcg.util';\r\nimport CentroCustoIS from '../../../components/mcg/centroCustoIS/CentroCustoIS';\r\nimport PlanoContaIS from '../../../components/mcg/planoContaIS/PlanoContaIS';\r\nimport LancamentoExclusaoPeriodoModalView from './LancamentoExclusaoPeriodoModalView';\r\nimport LancamentoMovimentacaoDataGrid, { LancamentoMovimentacaoDataGridRefProps } from './LancamentoMovimentacaoDataGrid';\r\n\r\nimport './LancamentoSaldoSearchView.css';\r\n\r\ninterface LancamentoSaldoSearchViewProps extends SearchViewProps<LancamentoSaldo> {}\r\n\r\ninterface SearchFields {\r\n  referencia?: string;\r\n  dataInicial?: string;\r\n  dataFinal?: string;\r\n  contaDebito?: PlanoConta;\r\n  contaCredito?: PlanoConta;\r\n  origemLancamento?: string;\r\n  planoContaSaldo?: PlanoConta;\r\n  consolidacaoSaldo?: string;\r\n  centroCustoSaldo?: CentroCusto;\r\n  descDebito?: string;\r\n  descCredito?: string;\r\n  descCustoDebito?: string;\r\n  descCustoCredito?: string;\r\n  totalSaldo?: string;\r\n  totalGridDebito?: string;\r\n  totalGridCredito?: string;\r\n}\r\n\r\ninterface OpenFromVerifyError {\r\n  isFromVerifyError: boolean;\r\n  planoConta: PlanoConta;\r\n  dtLancamento: string;\r\n}\r\n\r\nconst defaultSorted: DefaultSortProps[] = [\r\n  {\r\n    dataField: 'data',\r\n    order: OrderType.ASC,\r\n  },\r\n];\r\n\r\nconst BROWSER_BUSCA_KEY = 'lancamentoBuscaExpandida';\r\n\r\nconst LancamentoSaldoSearchView: FC<LancamentoSaldoSearchViewProps & OpenFromVerifyError> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const browserPrefs = useBrowserPreferences();\r\n\r\n  const formProps = useForm<SearchFields>({\r\n    defaultValues: {\r\n      referencia: globalReducer.globalParameter.empresaMCG.refAtual,\r\n    },\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const searchRef = useRef<SearchDataGridRefProps>();\r\n  const movimentacaoRef = useRef<LancamentoMovimentacaoDataGridRefProps>();\r\n\r\n  const [isSearchOpen, setIsSearchOpen] = useState(browserPrefs.get(BROWSER_BUSCA_KEY) || false);\r\n  const [modoBusca, setModoBusca] = useState('lancamentos');\r\n  const [modalContent, setModalContent] = useState(null);\r\n  const [openFromMenu, setOpenFromMenu] = useState(true);\r\n  const [openFromVerifyError, setOpenFromVerifyError] = useState(false);\r\n\r\n  const defaultSearchExpression: SearchExpression = {\r\n    expressions: [],\r\n    fieldName: 'idEmpresa',\r\n    value: globalReducer.globalParameter.empresa.id,\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (props.isFromVerifyError) {\r\n        setOpenFromMenu(false);\r\n        setOpenFromVerifyError(true);\r\n        setTimeout(() => {\r\n          formProps.setValue('referencia', null);\r\n          formProps.setValue('dataInicial', props.dtLancamento);\r\n          formProps.setValue('dataFinal', props.dtLancamento);\r\n          formProps.setValue('planoContaSaldo', props.planoConta);\r\n          formProps.setValue('consolidacaoSaldo', NORMAL.value, true);\r\n        }, 800);\r\n      } else {\r\n        setTimeout(() => {\r\n          if (searchRef.current) {\r\n            searchRef.current.notifySearchExpressionChange();\r\n          }\r\n        }, 800);\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const buildRefExpression = ref => {\r\n    return [\r\n      {\r\n        alias: 'dtLancamentoInicio',\r\n        fieldName: 'dtLancamento',\r\n        operation: OperationEnum.GREATER_THAN_EQUAL,\r\n        value: parseRefToDate(ref, 1),\r\n      },\r\n      {\r\n        alias: 'dtLancamentoFinal',\r\n        fieldName: 'dtLancamento',\r\n        operation: OperationEnum.LESS_THAN_EQUAL,\r\n        value: parseLastDay(ref),\r\n      },\r\n    ];\r\n  };\r\n\r\n  const toggleSearch = () =>\r\n    setIsSearchOpen(state => {\r\n      browserPrefs.set(BROWSER_BUSCA_KEY, !state);\r\n      return !state;\r\n    });\r\n\r\n  const contaDebitoOuCRFormatter = (cell, row) => {\r\n    let result = '';\r\n    if (globalReducer.globalParameter.empresaMCG.tipoLancamentoConta === CODIGO_REDUZIDO_PLANO.value) {\r\n      if (row.codigoReduzidoDebito) {\r\n        result = row.codigoReduzidoDebito;\r\n      }\r\n    } else {\r\n      if (row.contaDebito) {\r\n        result = row.contaDebito;\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const contaCreditoOuCRFormatter = (cell, row) => {\r\n    let result = '';\r\n    if (globalReducer.globalParameter.empresaMCG.tipoLancamentoConta === CODIGO_REDUZIDO_PLANO.value) {\r\n      if (row.codigoReduzidoCredito) {\r\n        result = row.codigoReduzidoCredito;\r\n      }\r\n    } else {\r\n      if (row.contaCredito) {\r\n        result = row.contaCredito;\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const centroCustoCreditoOuCRFormatter = (cell, row) => {\r\n    let result = '';\r\n    if (globalReducer.globalParameter.empresaMCG.tipoLancamentoCentroCusto === CODIGO_REDUZIDO_CENTRO.value) {\r\n      if (row.codigoReduzidoCentroCustoCredito) {\r\n        result = row.codigoReduzidoCentroCustoCredito;\r\n      }\r\n    } else {\r\n      if (row.codigoCentroCustoCredito) {\r\n        result = row.codigoCentroCustoCredito;\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const centroCustoDebitoOuCRFormatter = (cell, row) => {\r\n    let result = '';\r\n    if (globalReducer.globalParameter.empresaMCG.tipoLancamentoCentroCusto === CODIGO_REDUZIDO_CENTRO.value) {\r\n      if (row.codigoReduzidoCentroCustoDebito) {\r\n        result = row.codigoReduzidoCentroCustoDebito;\r\n      }\r\n    } else {\r\n      if (row.codigoCentroCustoDebito) {\r\n        result = row.codigoCentroCustoDebito;\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const origemFormatter = cell => EnumUtil.find(ORIGEM_LANCAMENTO_MCG_ENUM_VALUES, cell, 'intValue').label;\r\n\r\n  const zerarDatas = () => formProps.setValue([{ dataInicial: null }, { dataFinal: null }]);\r\n  const zerarReferencia = () => formProps.setValue('referencia', null);\r\n  const zerarContaSaldo = () => formProps.setValue([{ planoContaSaldo: null }, { centroCustoSaldo: null }]);\r\n  const zerarConta = () => formProps.setValue([{ contaDebito: null }, { contaCredito: null }, { origemLancamento: null }]);\r\n\r\n  const changeContaSaldo = value => {\r\n    zerarConta();\r\n    if (value && !value.analitica) {\r\n      alertManager.emit(ACTION_EVENTS.SHOW, {\r\n        message: 'Conta de Saldo - Conta deve ser analítica',\r\n        type: AlertType.INFORMATION,\r\n      });\r\n      formProps.setValue('planoContaSaldo', null);\r\n    }\r\n  };\r\n\r\n  const getSearchExpressions = () => {\r\n    const expressions = [];\r\n\r\n    const values = formProps.getValues();\r\n\r\n    if (values.referencia) {\r\n      expressions.push(...buildRefExpression(values.referencia));\r\n    } else {\r\n      if (values.dataInicial) {\r\n        expressions.push({\r\n          alias: 'dtLancamentoInicio',\r\n          fieldName: 'dtLancamento',\r\n          operation: OperationEnum.GREATER_THAN_EQUAL,\r\n          value: toDate(values.dataInicial),\r\n        });\r\n      }\r\n      if (values.dataFinal) {\r\n        expressions.push({\r\n          alias: 'dtLancamentoFinal',\r\n          fieldName: 'dtLancamento',\r\n          operation: OperationEnum.LESS_THAN_EQUAL,\r\n          value: toDate(values.dataFinal),\r\n        });\r\n      }\r\n    }\r\n\r\n    if (values.origemLancamento) {\r\n      expressions.push({\r\n        fieldName: 'origem',\r\n        operation: OperationEnum.EQUAL,\r\n        value: values.origemLancamento,\r\n      });\r\n    }\r\n\r\n    if (values.consolidacaoSaldo) {\r\n      expressions.push({\r\n        fieldName: 'consolidar',\r\n        value: values.consolidacaoSaldo,\r\n      });\r\n\r\n      if (values.planoContaSaldo) {\r\n        expressions.push(\r\n          {\r\n            fieldName: 'conta',\r\n            value: values.planoContaSaldo.conta,\r\n          },\r\n          {\r\n            fieldName: 'idGerPlanoConta',\r\n            value: values.planoContaSaldo.id,\r\n          }\r\n        );\r\n      }\r\n\r\n      if (values.centroCustoSaldo) {\r\n        expressions.push(\r\n          {\r\n            fieldName: 'centroCusto',\r\n            value: values.centroCustoSaldo.codigo,\r\n          },\r\n          {\r\n            fieldName: 'idGerCentroCusto',\r\n            value: values.centroCustoSaldo.id,\r\n          }\r\n        );\r\n      }\r\n    } else {\r\n      if (values.contaDebito) {\r\n        expressions.push({\r\n          fieldName: 'contaDebito',\r\n          operation: OperationEnum.CONTAINS,\r\n          value: values.contaDebito.id,\r\n        });\r\n      }\r\n\r\n      if (values.contaCredito) {\r\n        expressions.push({\r\n          fieldName: 'contaCredito',\r\n          operation: OperationEnum.CONTAINS,\r\n          value: values.contaCredito.id,\r\n        });\r\n      }\r\n    }\r\n\r\n    return [{ ...defaultSearchExpression, expressions }];\r\n  };\r\n\r\n  const doSearch = () => {\r\n    const values = formProps.getValues();\r\n\r\n    let result = true;\r\n\r\n    if (values.planoContaSaldo || values.consolidacaoSaldo) {\r\n      if (isEmpty(values.planoContaSaldo)) {\r\n        result = false;\r\n        alertManager.emit(ACTION_EVENTS.SHOW, {\r\n          message: 'Conta - Campo não pode estar vazio',\r\n          type: AlertType.INFORMATION,\r\n        });\r\n      }\r\n\r\n      if (result && isEmpty(values.consolidacaoSaldo)) {\r\n        result = false;\r\n        alertManager.emit(ACTION_EVENTS.SHOW, {\r\n          message: 'Consolidação - Campo não pode estar vazio',\r\n          type: AlertType.INFORMATION,\r\n        });\r\n      }\r\n    } else {\r\n      if (isEmpty(values.referencia) && isEmpty(values.dataInicial) && isEmpty(values.dataFinal)) {\r\n        result = false;\r\n        alertManager.emit(ACTION_EVENTS.SHOW, {\r\n          message: 'Referência, Data Inicial e Data Final - Um dos campos deve ser preeenchido',\r\n          type: AlertType.INFORMATION,\r\n        });\r\n      }\r\n    }\r\n\r\n    if (result) {\r\n      if (values.planoContaSaldo || values.consolidacaoSaldo) {\r\n        setModoBusca('movimentacao');\r\n        movimentacaoRef.current.doSearch();\r\n      } else {\r\n        setModoBusca('lancamentos');\r\n        searchRef.current.notifySearchExpressionChange();\r\n      }\r\n    }\r\n  };\r\n\r\n  const afterSearch = () => {\r\n    const values = formProps.getValues();\r\n\r\n    const dtDeStr = values.referencia ? formatDate(parseRefToDate(values.referencia, 1)) : values.dataInicial;\r\n    const dtAteStr = values.referencia ? formatDate(parseLastDay(values.referencia)) : values.dataFinal;\r\n\r\n    const params: ConsultaTotalLancamento = {\r\n      dtAteStr,\r\n      dtDeStr,\r\n      idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n    };\r\n\r\n    if (values.contaDebito) {\r\n      params.idPlanoContaDebito = values.contaDebito.id;\r\n    }\r\n\r\n    if (values.contaCredito) {\r\n      params.idPlanoContaCredito = values.contaCredito.id;\r\n    }\r\n\r\n    if (values.origemLancamento) {\r\n      params.origemLancamento = values.origemLancamento;\r\n    }\r\n\r\n    totalizadorLancamento(params, {\r\n      thenFunction: res =>\r\n        formProps.setValue([{ totalSaldo: res.saldoTotal }, { totalGridDebito: res.totalDebito }, { totalGridCredito: res.totalCredito }]),\r\n    });\r\n  };\r\n\r\n  const onSelect = row => {\r\n    const descCredito = contaCreditoOuCRFormatter(null, row);\r\n    const descDebito = contaDebitoOuCRFormatter(null, row);\r\n    const descCustoCredito = centroCustoCreditoOuCRFormatter(null, row);\r\n    const descCustoDebito = centroCustoDebitoOuCRFormatter(null, row);\r\n\r\n    formProps.setValue([\r\n      { descCredito: descCredito ? descCredito + ' - ' + row.descricaoCredito : null },\r\n      { descDebito: descDebito ? descDebito + ' - ' + row.descricaoDebito : null },\r\n      { descCustoCredito: descCustoCredito ? descCustoCredito + ' - ' + row.descricaoCentroCustoCredito : null },\r\n      { descCustoDebito: descCustoDebito ? descCustoDebito + ' - ' + row.descricaoCentroCustoDebito : null },\r\n    ]);\r\n  };\r\n\r\n  const imprimir = () => {\r\n    const values = formProps.getValues();\r\n\r\n    const descConta = values.planoContaSaldo ? values.planoContaSaldo.descricao : null;\r\n    const descCentroCusto = values.centroCustoSaldo ? values.centroCustoSaldo.descricao : null;\r\n\r\n    movimentacaoRef.current.imprimir(descConta, descCentroCusto);\r\n  };\r\n\r\n  const onCloseModal = (update = false) => {\r\n    setModalContent(null);\r\n    if (update) {\r\n      if (modoBusca === 'lancamentos') {\r\n        searchRef.current.notifySearchExpressionChange();\r\n      } else {\r\n        movimentacaoRef.current.doSearch();\r\n      }\r\n    }\r\n  };\r\n\r\n  const excluirPeriodo = () =>\r\n    setModalContent(\r\n      <LancamentoExclusaoPeriodoModalView\r\n        onClose={onCloseModal}\r\n        globalParameter={globalReducer.globalParameter}\r\n        expressions={getSearchExpressions()}\r\n      />\r\n    );\r\n\r\n  const execAtualizaCalculoIrpjCsll = (referencia, success) => {\r\n    atualizaCalculoIrpjCsll(\r\n      {\r\n        empresaMCG: globalReducer.globalParameter.empresaMCG,\r\n        referencia,\r\n      },\r\n      {\r\n        thenFunction: () => {\r\n          alertManager.emit(ACTION_EVENTS.SHOW, {\r\n            message: 'Atualização de calculo IRPJ e CSLL efetuado com sucesso',\r\n            onOkClick: () => {\r\n              success();\r\n            },\r\n            type: AlertType.INFORMATION,\r\n          });\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  const execRemoverLancamento = (selectedItem, success) => {\r\n    const refExclusao = formatRef(toDate(selectedItem.dtLancamento));\r\n    removerLancamentoLote(\r\n      {\r\n        empresaMCG: globalReducer.globalParameter.empresaMCG,\r\n        listItem: [selectedItem],\r\n        referencia: refExclusao,\r\n        removerLote: false,\r\n      },\r\n      {\r\n        thenFunction: res => {\r\n          if (res) {\r\n            alertManager.emit(ACTION_EVENTS.SHOW, {\r\n              message:\r\n                'O lançamento excluído interfere no cálculo de IRPJ ou CSLL já calculado no sistema. É possível que o ' +\r\n                'procedimento de recalculo possa ser demorado. Deseja recalcular o IRPJ e CSLL desse ano já apurado no sistema ?',\r\n              onNoClick: () => {\r\n                success();\r\n              },\r\n              onOkClick: () => {\r\n                execAtualizaCalculoIrpjCsll(refExclusao, success);\r\n              },\r\n              type: AlertType.QUESTION,\r\n            });\r\n          } else {\r\n            success();\r\n          }\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  const removerLancamento = (selectedItem, success, error, cancel) => {\r\n    const bloqueio = validatePeriodoConfig(selectedItem.dtLancamento, globalReducer.globalParameter);\r\n    if (bloqueio) {\r\n      alertManager.emit(ACTION_EVENTS.SHOW, {\r\n        message: 'Não é possível excluir o lançamento ' + bloqueio,\r\n        type: AlertType.ERROR,\r\n      });\r\n      cancel();\r\n    } else {\r\n      const params = {\r\n        data: selectedItem.dtLancamento,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n      };\r\n      isDataEncerrada(params, {\r\n        thenFunction: isEncerrado => {\r\n          if (isEncerrado) {\r\n            alertManager.emit(ACTION_EVENTS.SHOW, {\r\n              message:\r\n                'Existem contas de resultado encerradas neste período. Continuar com essa operação ocasionará a abertura ' +\r\n                'das mesmas. Deseja continuar?',\r\n              onNoClick: () => {\r\n                cancel();\r\n              },\r\n              onOkClick: () => {\r\n                abrirContas(params, {\r\n                  thenFunction: () => {\r\n                    execRemoverLancamento(selectedItem, success);\r\n                  },\r\n                });\r\n              },\r\n              type: AlertType.WARNING_YES_NO,\r\n            });\r\n          } else {\r\n            execRemoverLancamento(selectedItem, success);\r\n          }\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const hiddenCentroCusto = () => {\r\n    let result = true;\r\n    if (globalReducer && globalReducer.globalParameter && globalReducer.globalParameter.lancamentoMCGConfig) {\r\n      result = globalReducer.globalParameter.lancamentoMCGConfig.utilizarCentroCusto === false;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'dtLancamento',\r\n      sort: true,\r\n      text: 'Data',\r\n    },\r\n    {\r\n      dataField: 'nroLote',\r\n      sort: true,\r\n      text: 'Nº Lote',\r\n    },\r\n    {\r\n      dataField: 'nroLancamento',\r\n      sort: true,\r\n      text: 'Nº Lançamento',\r\n    },\r\n    {\r\n      dataField: 'contaDebitoOuCR',\r\n      formatter: contaDebitoOuCRFormatter,\r\n      sort: false,\r\n      text: 'Conta de Débito',\r\n    },\r\n    {\r\n      dataField: 'descricaoCentroCustoDebito',\r\n      formatter: centroCustoCreditoOuCRFormatter,\r\n      hidden: hiddenCentroCusto(),\r\n      sort: true,\r\n      text: 'Centro de Custo Débito',\r\n    },\r\n    {\r\n      dataField: 'contaCreditoOuCR',\r\n      formatter: contaCreditoOuCRFormatter,\r\n      sort: false,\r\n      text: 'Conta de Crédito',\r\n    },\r\n    {\r\n      dataField: 'descricaoCentroCustoCredito',\r\n      formatter: centroCustoDebitoOuCRFormatter,\r\n      hidden: hiddenCentroCusto(),\r\n      sort: true,\r\n      text: 'Centro de Custo Crédito',\r\n    },\r\n    {\r\n      dataField: 'valor',\r\n      formatter: decimalFormatter,\r\n      sort: true,\r\n      text: 'Valor',\r\n    },\r\n    {\r\n      dataField: 'historicoCompleto',\r\n      sort: true,\r\n      text: 'Histórico',\r\n    },\r\n    {\r\n      dataField: 'origem',\r\n      formatter: origemFormatter,\r\n      sort: true,\r\n      text: 'Origem',\r\n    },\r\n  ];\r\n\r\n  const getExtraSearchButtons = () => (\r\n    <>\r\n      {modoBusca === 'movimentacao' && (\r\n        <Button color=\"first\" onClick={imprimir} className=\"mr-2\">\r\n          <FontAwesomeIcon icon=\"print\" /> Imprimir\r\n        </Button>\r\n      )}\r\n      <Button color=\"danger\" onClick={excluirPeriodo} className=\"mr-2\">\r\n        <FontAwesomeIcon icon=\"times\" /> Excluir por Período\r\n      </Button>\r\n    </>\r\n  );\r\n\r\n  const getCustomHeader = () => (\r\n    <div className={cx({ 'pb-4': modoBusca === 'movimentacao' })}>\r\n      <div className=\"d-flex justify-content-between\">\r\n        <Button onClick={toggleSearch} color=\"link\" className={cx('pl-0 advanced-search-button', { 'pt-0': modoBusca === 'lancamentos' })}>\r\n          Pesquisa Avançada\r\n          <span className={cx({ 'rotate-arrow': isSearchOpen })}>&nbsp;&raquo;</span>\r\n        </Button>\r\n        {modoBusca === 'movimentacao' && (\r\n          <div>\r\n            {getExtraSearchButtons()}\r\n            <Button color=\"success\" onClick={searchRef.current.openAddView}>\r\n              <FontAwesomeIcon icon=\"plus\" /> Incluir\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Collapse isOpen={isSearchOpen} className={cx({ 'pt-4': modoBusca === 'movimentacao', 'mb-4': modoBusca === 'lancamentos' })}>\r\n        <Card body={true} className=\"card-search\">\r\n          <Row>\r\n            <Col>\r\n              <InputGroupInline\r\n                formProps={formProps}\r\n                isPrependLabel={true}\r\n                id=\"referencia\"\r\n                label=\"Referência\"\r\n                type={InputType.REFERENCE}\r\n                inputProps={{ onFocus: zerarDatas }}\r\n              />\r\n            </Col>\r\n            <Col md={1} className=\"text-center\" style={{ paddingTop: 10 }}>\r\n              OU\r\n            </Col>\r\n            <Col>\r\n              <InputGroupInline\r\n                formProps={formProps}\r\n                isPrependLabel={true}\r\n                id=\"dataInicial\"\r\n                label=\"Data Inicial\"\r\n                type={InputType.DATE}\r\n                inputProps={{ onFocus: zerarReferencia }}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <InputGroupInline\r\n                formProps={formProps}\r\n                isPrependLabel={true}\r\n                id=\"dataFinal\"\r\n                label=\"Data Final\"\r\n                type={InputType.DATE}\r\n                inputProps={{ onFocus: zerarReferencia }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n        <Accordion>\r\n          <AccordionItem title=\"Consulta Lançamento\" open={openFromMenu}>\r\n            <Row>\r\n              <Col>\r\n                <PlanoContaIS id=\"contaDebito\" formProps={formProps} label=\"Conta de Débito\" onChange={zerarContaSaldo} />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <PlanoContaIS id=\"contaCredito\" formProps={formProps} label=\"Conta de Crédito\" onChange={zerarContaSaldo} />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  id=\"origemLancamento\"\r\n                  label=\"Origem de Lançamento\"\r\n                  formProps={formProps}\r\n                  isPrependLabel={true}\r\n                  placeholder=\"Selecione a Origem do Lançamento\"\r\n                  inputDropDownProps={{ optionsProvider: ORIGEM_LANCAMENTO_MCG_ENUM_VALUES }}\r\n                  type={InputType.DROP_DOWN}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </AccordionItem>\r\n          <AccordionItem title=\"Consulta Movimentação\" open={openFromVerifyError}>\r\n            <div className=\"d-flex\">\r\n              <div className=\"flex-grow-1\">\r\n                <PlanoContaIS\r\n                  id=\"planoContaSaldo\"\r\n                  formProps={formProps}\r\n                  label=\"Conta\"\r\n                  tooltipProps={{\r\n                    message: 'A conta selecionada será utilizada para o cálculo do saldo anterior, débito, crédito e saldo atual presente no rodapé',\r\n                  }}\r\n                  onChange={changeContaSaldo}\r\n                />\r\n              </div>\r\n              <div style={{ width: 400, marginLeft: 20 }}>\r\n                <InputGroupInline\r\n                  id=\"consolidacaoSaldo\"\r\n                  label=\"Consolidação\"\r\n                  formProps={formProps}\r\n                  isPrependLabel={true}\r\n                  inputDropDownProps={{ optionsProvider: CONSOLIDAR_ENUM_VALUES }}\r\n                  type={InputType.DROP_DOWN}\r\n                />\r\n              </div>\r\n            </div>\r\n            <Row>\r\n              <Col>\r\n                <CentroCustoIS id=\"centroCustoSaldo\" formProps={formProps} label=\"Centro de Custo\" onChange={zerarConta} />\r\n              </Col>\r\n            </Row>\r\n          </AccordionItem>\r\n        </Accordion>\r\n        <div className=\"text-right\">\r\n          <Button color=\"first\" onClick={doSearch}>\r\n            <FontAwesomeIcon icon=\"search\" /> Consultar\r\n          </Button>\r\n        </div>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n\r\n  const getCustomFooter = () => (\r\n    <Card className=\"custom-footer mt-4\" body={true}>\r\n      <Row>\r\n        <Col>\r\n          <FormGroup>\r\n            <Label>Descrição Conta Débito:</Label>\r\n            <Input name=\"descDebito\" innerRef={formProps.register} disabled={true} bsSize=\"sm\" />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col>\r\n          <FormGroup>\r\n            <Label>Descrição Conta Crédito:</Label>\r\n            <Input name=\"descCredito\" innerRef={formProps.register} disabled={true} bsSize=\"sm\" />\r\n          </FormGroup>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <FormGroup>\r\n            <Label>Descrição Centro de Custo Débito:</Label>\r\n            <Input name=\"descCustoDebito\" innerRef={formProps.register} disabled={true} bsSize=\"sm\" />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col>\r\n          <FormGroup>\r\n            <Label>Descrição Centro de Custo Crédito:</Label>\r\n            <Input name=\"descCustoCredito\" innerRef={formProps.register} disabled={true} bsSize=\"sm\" />\r\n          </FormGroup>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <FormGroup>\r\n            <Label>Total:</Label>\r\n            <Input name=\"totalSaldo\" innerRef={formProps.register} disabled={true} bsSize=\"sm\" />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col>\r\n          <FormGroup>\r\n            <Label>Total de Débito:</Label>\r\n            <Input name=\"totalGridDebito\" innerRef={formProps.register} disabled={true} bsSize=\"sm\" />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col>\r\n          <FormGroup>\r\n            <Label>Total de Crédito:</Label>\r\n            <Input name=\"totalGridCredito\" innerRef={formProps.register} disabled={true} bsSize=\"sm\" />\r\n          </FormGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Lançamento e Consulta de Movimentação\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[\r\n        () => hasEmpresa(globalReducer.globalParameter),\r\n        () => hasEmpresaMCG(globalReducer.globalParameter),\r\n        () => hasGrupoPlanoContas(globalReducer.globalParameter),\r\n      ]}\r\n      wikiId={2302}\r\n    >\r\n      {modalContent}\r\n      <div className={cx('grid-lancamentos', { hidden: modoBusca !== 'lancamentos' })}>\r\n        <SearchDataGrid\r\n          {...props}\r\n          {...props.searchDataGridProps}\r\n          ref={searchRef}\r\n          columns={columns}\r\n          defaultSorted={defaultSorted}\r\n          dtoClassName={CLASS_NAME}\r\n          extraData={getExtraData(props, 'LancamentoSaldoEditView', CLASS_NAME, {\r\n            customRemove: removerLancamento,\r\n            hideCustomSearch: modoBusca === 'movimentacao',\r\n          })}\r\n          searchExpressions={getSearchExpressions}\r\n          customHeaderContent={getCustomHeader()}\r\n          customFooterContent={getCustomFooter()}\r\n          onAfterSearch={afterSearch}\r\n          searchProps={{ extraButtons: getExtraSearchButtons() }}\r\n          selectRow={{ mode: SelectModeEnum.RADIO, onSelect, clickToSelect: true }}\r\n        />\r\n      </div>\r\n      <div className={cx({ 'd-none': modoBusca !== 'movimentacao' })}>\r\n        <LancamentoMovimentacaoDataGrid ref={movimentacaoRef} columns={columns} expressions={getSearchExpressions} />\r\n      </div>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default LancamentoSaldoSearchView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMCG(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMCG) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o módulo Contábil. Para configurá-la acesse:\\n' +\r\n      'Módulo Contábil > Manutenção > Configurações > Empresa.';\r\n  }\r\n  return result;\r\n}\r\n","export const NORMAL = { value: '1', label: 'Normal' };\r\nexport const GRUPO_ATUAL = { value: '2', label: 'Grupo Atual' };\r\nexport const HIERARQUIA_INFERIOR = { value: '3', label: 'Hierarquia Inferior' };\r\n\r\nexport const CONSOLIDAR_ENUM_VALUES = [NORMAL, GRUPO_ATUAL, HIERARQUIA_INFERIOR];\r\n\r\nexport const NORMAL_NUMBER = { value: 1, label: 'Normal' };\r\nexport const GRUPO_ATUAL_NUMBER = { value: 2, label: 'Grupo Atual' };\r\nexport const HIERARQUIA_INFERIOR_NUMBER = { value: 3, label: 'Hierarquia Inferior' };\r\n\r\nexport const CONSOLIDAR_NUMBER_ENUM_VALUES = [NORMAL_NUMBER, GRUPO_ATUAL_NUMBER, HIERARQUIA_INFERIOR_NUMBER];\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasGrupoPlanoContas(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n\r\n  const msg: string =\r\n    ' O Grupo de Plano de Contas selecionado não está configurado. Para configuar acesse:' +\r\n    'Módulo Contábil > Manutenção > Grupos > Plano de Contas - \\n' +\r\n    'E configure os seguintes campos: Máscara, Dígito: Ativo, Passivo, Receita e Despesa.';\r\n\r\n  if (\r\n    !globalParameter.grupoEmpresaConfig &&\r\n    !globalParameter.grupoPlanoConta &&\r\n    !globalParameter.grupoPlanoConta.mascara &&\r\n    !globalParameter.grupoPlanoConta.digitoAtivo &&\r\n    !globalParameter.grupoPlanoConta.digitoPassivo &&\r\n    !globalParameter.grupoPlanoConta.digitoReceita &&\r\n    !globalParameter.grupoPlanoConta.digitoDespesa\r\n  ) {\r\n    result = msg;\r\n  }\r\n\r\n  return result;\r\n}\r\n"],"sourceRoot":""}
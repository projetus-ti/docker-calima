{"version":3,"sources":["models/dtos/mfp/trabalhador.ts","models/enumerated/mfp/categoriaCNHEnum.ts","models/enumerated/mfp/condicaoTrabalhadorEstrangeiroEnum.ts","models/enumerated/mfp/deficienciaEnum.ts","models/enumerated/mfp/grauInstrucaoEnum.ts","models/enumerated/mfp/racaEnum.ts","models/enumerated/mfp/sexoEnum.ts","views/pages/mfp/trabalhador/TrabalhadorEmailEditView.tsx","views/pages/mfp/trabalhador/TrabalhadorEnderecoEditView.tsx","views/pages/mfp/trabalhador/TrabalhadorTelefoneEditView.tsx","views/pages/mfp/trabalhador/TrabalhadorEditView.tsx","models/dtos/ger/cepUF.ts","models/dtos/ger/cepLocalidade.ts","views/components/ger/cepUFIS/CepUFIS.tsx","views/components/ger/cepLocalidadeIS/CepLocalidadeIS.tsx","models/dtos/ger/cepBairro.ts","services/mfp.service.ts","models/dtos/ger/cepLogradouro.ts","models/dtos/ger/cepTitulo.ts","views/components/ger/cepBairroIS/CepBairroIS.tsx","views/components/ger/cepTituloIS/CepTituloIS.tsx","views/components/ger/cepLogradouro/CepLogradouroIS.tsx","hooks/useCepManager.ts","utilities/enum.util.ts","utilities/tipoTelefoneFormatter.ts","models/enumerated/mfp/estadoCivilEnum.ts","models/enumerated/mfp/nacionalidadeEnum.ts"],"names":["__webpack_require__","d","__webpack_exports__","CLASS_NAME","CATEGORIA_CNH_ENUM_VALUES","value","label","RESIDENTE_FORA_BRASIL","CONDICAO_TRABALHADOR_ESTRANGEIRO_ENUM_VALUES","DEFICIENCIA_ENUM_VALUES","GRAU_INSTRUCAO_ENUM_VALUES","RACA_ENUM_VALUES","SEXO_ENUM_VALUES","TrabalhadorEmailEditView","props","formProps","useForm","defaultValues","selectedItem","mode","react_default","a","createElement","summer_esm","handleSubmit","handleCancel","Row","Col","Object","objectSpread2","validation","maxLength","id","isPrependLabel","placeholder","required","type","InputType","EMAIL","TrabalhadorEnderecoEditView","cepManager","useCepManager","cep","titulo","nome","uf","localidade","bairro","useEffect","setTimeout","setValue","CepLogradouroIS","name","ref","register","CepTituloIS","CepUFIS","CepLocalidadeIS","CepBairroIS","style","marginBottom","title","TrabalhadorTelefoneEditView","TELEFONE","TrabalhadorEditView","globalReducer","useSelector","state","getSelectedItem","_useState","useState","_useState2","slicedToArray","isNotExtrangeiro","setIsNotExtrangeiro","emails","enderecos","telefones","enderecoDefaultSortProps","dataField","order","OrderType","ASC","telefoneDefaultSortProps","emailDefaultSortProps","enderecoFormProps","columns","text","formatter","cepFormatter","detailView","propName","telefoneFormProps","phoneWithDDDFormatter","tipoTelefoneFormatter","emailFormProps","trabalhador","getValues","empresaMFP","globalParameter","loadFotoTrabalhador","thenFunction","result","isEmpty","limparCamposCtps","preencherCamposCtps","cpf","substr","naturalidadeUF","Date","completarNumero","ajustarCamposCtps","ctpsDigital","validOne","carteiraTrabalhoNumero","carteiraTrabalhoSerie","validTwo","carteiraTrabalhoDataEmissao","carteiraTrabalhoUF","existeCtps","alertManager","emit","ACTION_EVENTS","SHOW","message","onNoClick","onOkClick","AlertType","WARNING_YES_NO","campo","tamanho","execFn","formatFn","padStart","promisedAlert","Promise","resolve","wikiId","editViewProps","dtoClassName","beforePersist","done","warnings","push","promise","length","Fragment","className","textAlign","ListGroup","variant","map","item","ListGroupItem","key","marginTop","nascimento","moment","toDate","dataNascimento","diff","duration","years","msg","then","async","validateExtras","erros","now","formatDate","currentDate","msgEndereco","undefined","find","endereco","tipoEnderecoPrincipal","validateEnderecoPrincipal","telefone","tipoTelefonePrincipal","validateTelefonePrincipal","compare","identidadeDataEmissao","validarDataNascimento","mensagem","cnhDataExpedicao","cnhDataValidade","exterior","condicaoTrabalhadorEstrangeiro","dataChegadaBrasil","EnumUtil","getFile","formData","foto","md","onlyNumber","tooltipProps","inputDropDownProps","optionsProvider","DROP_DOWN","ESTADO_CIVIL_ENUM_VALUES","DATE","NACIONALIDADE_ENUM_VALUES","xs","propImageName","onChange","disabled","CPF","onBlur","onlyAlphaNum","INFORMATION","pageId","assign","defaultSortDirection","defaultSorted","keyField","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","inputSearchProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","searchViewId","INPUT_SEARCH","searchFilter","setFilter","searchExpressionsFull","defaultExpressions","expressions","getFilter","CLASS_NAME_UF","fieldName","copiarValorImpostoAnteriorAReferencia","validarSalarioVinculo","verificarQuadroHorarioESocial","validarVinculoBeforePersist","verificarSituacaoAfastamento","existeCalculoVinculoTomadorServico","perdeuPeriodoAquisitivoFerias","obterDataFinalGozoFerias","ajustarPeriodoAquisitivoFeriasPerdidoPorAfastamentos","getDiaUtil","simularFerias","definirAvisoPrevio","obterFeriasRescisao","rescisaoCalculada","simularRescisao","apagarRescisao","validarEventoVinculo","transferirVinculo","reintegrarVinculo","criarEventosPadroes","gerarManad","gerarRais","gerarDirf","gerarCaged","summer__WEBPACK_IMPORTED_MODULE_0__","getService","create","reference","param","send","get","concat","post","vinculo","salario","valor","data","quadroHorario","situacaoAfastamento","existeCalculoParams","ferias","diaUtilParams","rescisao","idRescisao","delete","vinculoEvento","transferencia","reintegracao","grupo","manadParam","raisParam","dirfParam","cagedParam","CLASS_NAME_LOCALIDADE","manage","CLASS_NAME_BAIRRO","fillForm","logradouro","keys","forEach","getProp","clearForm","reset","contains","list","search","extraField","extraFields","tipoTelefoneSelection","tiposTelefone","tipoTelefoneCelular","tipoTelefoneComercial","tipoTelefoneFax","tipoTelefoneResidencial","tipoTelefone","resultado","join","cell","row","codIBGE"],"mappings":"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","file":"static/js/22.010fc0ff.chunk.js","sourcesContent":["import { CepLocalidade } from '../ger/cepLocalidade';\r\nimport { CepUF } from '../ger/cepUF';\r\nimport { Dependente } from './dependente';\r\nimport { TrabalhadorEmail } from './trabalhadorEmail';\r\nimport { TrabalhadorEndereco } from './trabalhadorEndereco';\r\nimport { TrabalhadorExample } from './trabalhadorExample';\r\nimport { TrabalhadorTelefone } from './trabalhadorTelefone';\r\nimport { Vinculo } from './vinculo';\r\n\r\nexport interface Trabalhador extends TrabalhadorExample {\r\n  casadoBrasileiro?: boolean;\r\n  /** este campo utiliza o enum CategoriaCNHEnum */\r\n  cnhCategoria?: string;\r\n  cnhDataExpedicao?: string;\r\n  cnhDataPrimeiraHabilitacao?: string;\r\n  cnhDataValidade?: string;\r\n  cnhNumero?: string;\r\n  cnhUF?: CepUF;\r\n  /** este campo utiliza o enum CondicaoTrabalhadorEstrangeiroEnum */\r\n  condicaoTrabalhadorEstrangeiro?: string;\r\n  ctpsDigital?: boolean;\r\n  dataChegadaBrasil?: string;\r\n  /** este campo utiliza o enum DeficienciaEnum */\r\n  deficiencia?: string;\r\n  dependentes?: Dependente[];\r\n  emails?: TrabalhadorEmail[];\r\n  enderecos?: TrabalhadorEndereco[];\r\n  filhoBrasileiro?: boolean;\r\n  /** este campo utiliza o enum GrauInstrucaoEnum */\r\n  grauInstrucao?: string;\r\n  naturalidadeCidade?: CepLocalidade;\r\n  naturalidadeUF?: CepUF;\r\n  nomeMae?: string;\r\n  nomePai?: string;\r\n  preencheCotaDeficiencia?: boolean;\r\n  proprietario?: boolean;\r\n  /** este campo utiliza o enum RacaEnum */\r\n  raca?: string;\r\n  /** este campo utiliza o enum SexoEnum */\r\n  sexo?: string;\r\n  telefones?: TrabalhadorTelefone[];\r\n  vinculos?: Vinculo[];\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.trabalhador';\r\n","export const A = { value: 'A', label: 'A' };\r\nexport const B = { value: 'B', label: 'B' };\r\nexport const C = { value: 'C', label: 'C' };\r\nexport const D = { value: 'D', label: 'D' };\r\nexport const E = { value: 'E', label: 'E' };\r\nexport const AB = { value: 'AB', label: 'A/B' };\r\nexport const AC = { value: 'AC', label: 'A/C' };\r\nexport const AD = { value: 'AD', label: 'A/D' };\r\nexport const AE = { value: 'AE', label: 'A/E' };\r\nexport const ACC = { value: 'ACC', label: 'ACC' };\r\nexport const MC = { value: 'MC', label: 'MOTOR CASA' };\r\n\r\nexport const CATEGORIA_CNH_ENUM_VALUES = [A, B, C, D, E, AB, AC, AD, AE, ACC, MC];\r\n","export const VISTO_PERMANENTE = { label: 'Visto permanente', value: 'VISTO_PERMANENTE' };\r\nexport const VISTO_TEMPORARIO = { label: 'Visto temporário', value: 'VISTO_TEMPORARIO' };\r\nexport const ASILADO = { label: 'Asilado', value: 'ASILADO' };\r\nexport const REFUGIADO = { label: 'Refugiado', value: 'REFUGIADO' };\r\nexport const SOLICITANTE_REFUGIO = { label: 'Solicitante de Refúgio', value: 'SOLICITANTE_REFUGIO' };\r\nexport const RESIDENTE_FORA_BRASIL = { label: 'Residente fora do Brasil', value: 'RESIDENTE_FORA_BRASIL' };\r\nexport const DEFICIENTE_51_ANOS = { label: 'Deficiente físico e com mais de 51 anos', value: 'DEFICIENTE_51_ANOS' };\r\nexport const RESIDENCIA_PROVISORIA_IRREGULAR = {\r\n  label: 'Com residência provisória e anistiado, em situação irregular',\r\n  value: 'RESIDENCIA_PROVISORIA_IRREGULAR',\r\n};\r\nexport const PERMANENCIA_RAZAO_FILHOS_CONJUGE = {\r\n  label: 'Permanência no Brasil em razão de filhos ou cônjuge brasileiros',\r\n  value: 'PERMANENCIA_RAZAO_FILHOS_CONJUGE',\r\n};\r\nexport const BENEFICIADO_ACORDO_MERCOSUL = {\r\n  label: 'Beneficiado pelo acordo entre países do Mercosul',\r\n  value: 'BENEFICIADO_ACORDO_MERCOSUL',\r\n};\r\nexport const DEPENDENTE_CONV_RECIPROCIDADE = {\r\n  label:\r\n    'Dependente de agente diplomático e/ou consular de países que mantém convênio de reciprocidade para o exercício de atividade remunerada no Brasil',\r\n  value: 'DEPENDENTE_CONV_RECIPROCIDADE',\r\n};\r\nexport const BENEFICIADO_TRATADO_AMIZADE = {\r\n  label: 'Beneficiado pelo Tratado de Amizade, Cooperação e Consulta entre a República Federativa do Brasil e a República Portuguesa',\r\n  value: 'BENEFICIADO_TRATADO_AMIZADE',\r\n};\r\n\r\nexport const CONDICAO_TRABALHADOR_ESTRANGEIRO_ENUM_VALUES = [\r\n  VISTO_PERMANENTE,\r\n  VISTO_TEMPORARIO,\r\n  ASILADO,\r\n  REFUGIADO,\r\n  SOLICITANTE_REFUGIO,\r\n  RESIDENTE_FORA_BRASIL,\r\n  DEFICIENTE_51_ANOS,\r\n  RESIDENCIA_PROVISORIA_IRREGULAR,\r\n  PERMANENCIA_RAZAO_FILHOS_CONJUGE,\r\n  BENEFICIADO_ACORDO_MERCOSUL,\r\n  DEPENDENTE_CONV_RECIPROCIDADE,\r\n  BENEFICIADO_TRATADO_AMIZADE,\r\n];\r\n","export const FISICA = { label: 'Física', value: 'FISICA' };\r\nexport const AUDITIVA = { label: 'Auditiva', value: 'AUDITIVA' };\r\nexport const VISUAL = { label: 'Visual', value: 'VISUAL' };\r\nexport const MENTAL = { label: 'Mental', value: 'MENTAL' };\r\nexport const MULTIPLA = { label: 'Múltipla', value: 'MULTIPLA' };\r\nexport const REABILITADO = { label: 'Reabilitado', value: 'REABILITADO' };\r\nexport const INTELECTUAL = { label: 'Intelectual', value: 'INTELECTUAL' };\r\n\r\nexport const DEFICIENCIA_ENUM_VALUES = [FISICA, AUDITIVA, VISUAL, MENTAL, MULTIPLA, REABILITADO, INTELECTUAL];\r\n","export const ANALFABETO = { label: 'Analfabeto', value: 'ANALFABETO' };\r\nexport const ANO5_INCOMPLETO_ANTIGA4_SERIE = { label: '5º Ano Incompleto - Antiga 4ª Série', value: 'ANO5_INCOMPLETO_ANTIGA4_SERIE' };\r\nexport const ANO5_COMPLETO = { label: '5º Ano Completo', value: 'ANO5_COMPLETO' };\r\nexport const ANO6AO9_INCOMPLETO = { label: '6º ao 9º Ano Incompleto', value: 'ANO6AO9_INCOMPLETO' };\r\nexport const ENSINO_FUNDAMENTAL_COMPLETO = { label: 'Ensino Fundamental Completo', value: 'ENSINO_FUNDAMENTAL_COMPLETO' };\r\nexport const ENSINO_MEDIO_INCOMPLETO = { label: 'Ensino Médio Incompleto', value: 'ENSINO_MEDIO_INCOMPLETO' };\r\nexport const ENSINO_MEDIO_COMPLETO = { label: 'Ensino Médio Completo', value: 'ENSINO_MEDIO_COMPLETO' };\r\nexport const SUPERIOR_INCOMPLETO = { label: 'Superior Incompleto', value: 'SUPERIOR_INCOMPLETO' };\r\nexport const SUPERIOR_COMPLETO = { label: 'Superior Completo', value: 'SUPERIOR_COMPLETO' };\r\nexport const MESTRADO = { label: 'Mestrado', value: 'MESTRADO' };\r\nexport const DOUTORADO = { label: 'Doutorado', value: 'DOUTORADO' };\r\nexport const POS_GRADUACAO_COMPLETA = { label: 'Pós Graduação Completa', value: 'POS_GRADUACAO_COMPLETA' };\r\n\r\nexport const GRAU_INSTRUCAO_ENUM_VALUES = [\r\n  ANALFABETO,\r\n  ANO5_INCOMPLETO_ANTIGA4_SERIE,\r\n  ANO5_COMPLETO,\r\n  ANO6AO9_INCOMPLETO,\r\n  ENSINO_FUNDAMENTAL_COMPLETO,\r\n  ENSINO_MEDIO_INCOMPLETO,\r\n  ENSINO_MEDIO_COMPLETO,\r\n  SUPERIOR_INCOMPLETO,\r\n  SUPERIOR_COMPLETO,\r\n  POS_GRADUACAO_COMPLETA,\r\n  MESTRADO,\r\n  DOUTORADO,\r\n];\r\n","export const BRANCA = { label: 'Branca', value: 'BRANCA' };\r\nexport const NEGRA = { label: 'Negra', value: 'NEGRA' };\r\nexport const AMARELA = { label: 'Amarela', value: 'AMARELA' };\r\nexport const PARDA = { label: 'Parda', value: 'PARDA' };\r\nexport const INDIGENA = { label: 'Indígena', value: 'INDIGENA' };\r\nexport const NAOINFORMADO = { label: 'Não Informado', value: 'NAOINFORMADO' };\r\n\r\nexport const RACA_ENUM_VALUES = [BRANCA, NEGRA, AMARELA, PARDA, INDIGENA, NAOINFORMADO];\r\n","export const FEMININO = { label: 'Feminino', value: 'FEMININO' };\r\nexport const MASCULINO = { label: 'Masculino', value: 'MASCULINO' };\r\n\r\nexport const SEXO_ENUM_VALUES = [FEMININO, MASCULINO];\r\n","import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline, InputType } from 'summer';\r\nimport { TrabalhadorEmail } from '../../../../models/dtos/mfp/trabalhadorEmail';\r\n\r\nconst TrabalhadorEmailEditView: FC<DetailEditViewFormProps<TrabalhadorEmail>> = props => {\r\n  const formProps = useForm<TrabalhadorEmail>({ defaultValues: props.selectedItem || {}, mode: 'onBlur' });\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps}>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { maxLength: 120 } }}\r\n            id=\"contato\"\r\n            isPrependLabel={true}\r\n            label=\"Contato\"\r\n            placeholder=\"Informe o contato\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { maxLength: 120, required: true } }}\r\n            id=\"email\"\r\n            isPrependLabel={true}\r\n            label=\"Email\"\r\n            placeholder=\"Informe o email\"\r\n            type={InputType.EMAIL}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default TrabalhadorEmailEditView;\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { Box, Checkbox, DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport useCepManager from '../../../../hooks/useCepManager';\r\nimport { TrabalhadorEndereco } from '../../../../models/dtos/mfp/trabalhadorEndereco';\r\nimport CepBairroIS from '../../../components/ger/cepBairroIS/CepBairroIS';\r\nimport CepLocalidadeIS from '../../../components/ger/cepLocalidadeIS/CepLocalidadeIS';\r\nimport CepLogradouroIS from '../../../components/ger/cepLogradouro/CepLogradouroIS';\r\nimport CepTituloIS from '../../../components/ger/cepTituloIS/CepTituloIS';\r\nimport CepUFIS from '../../../components/ger/cepUFIS/CepUFIS';\r\n\r\nconst TrabalhadorEnderecoEditView: FC<DetailEditViewFormProps<TrabalhadorEndereco>> = props => {\r\n  const formProps = useForm<TrabalhadorEndereco>({ defaultValues: props.selectedItem || {}, mode: 'onBlur' });\r\n  const cepManager = useCepManager(formProps, { cep: true, titulo: true, nome: 'logradouro', uf: true, localidade: 'cidade', bairro: true });\r\n\r\n  useEffect(() => {\r\n    if (props.selectedItem && props.selectedItem.id) {\r\n      setTimeout(() => {\r\n        // @ts-ignore\r\n        formProps.setValue('cepFmt', { cep: props.selectedItem.cep, label: props.selectedItem.cep });\r\n      }, 500);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps}>\r\n      <Row>\r\n        <Col>\r\n          <CepLogradouroIS\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            id=\"cepFmt\"\r\n            isPrependLabel={true}\r\n            label=\"CEP\"\r\n            placeholder=\"Informe o CEP\"\r\n            cepManager={cepManager}\r\n          />\r\n          <input type=\"hidden\" name=\"cep\" ref={formProps.register} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <CepTituloIS id=\"titulo\" isPrependLabel={true} formProps={{ ...formProps, validation: { required: true } }} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { required: true, maxLength: 150 } }}\r\n            id=\"logradouro\"\r\n            isPrependLabel={true}\r\n            label=\"Logradouro\"\r\n            placeholder=\"Informe o logradouro\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { required: true, maxLength: 10 } }}\r\n            id=\"numero\"\r\n            isPrependLabel={true}\r\n            label=\"Numero\"\r\n            placeholder=\"Informe o número\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { maxLength: 60 } }}\r\n            id=\"complemento\"\r\n            isPrependLabel={true}\r\n            label=\"Complemento\"\r\n            placeholder=\"Informe o complemento\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <CepUFIS formProps={{ ...formProps, validation: { required: true } }} id=\"uf\" />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <CepLocalidadeIS formProps={{ ...formProps, validation: { required: true } }} id=\"cidade\" />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <CepBairroIS formProps={{ ...formProps, validation: { required: true } }} id=\"bairro\" />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col style={{ marginBottom: '30px' }}>\r\n          <Box title=\"Tipo de Endereço\">\r\n            <Row>\r\n              <Col style={{ marginBottom: '10px' }}>\r\n                <Checkbox id=\"tipoEnderecoPrincipal\" formProps={formProps} label=\"Principal\" />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col style={{ marginBottom: '10px' }}>\r\n                <Checkbox id=\"tipoEnderecoResidencial\" formProps={formProps} label=\"Residencial\" />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col style={{ marginBottom: '10px' }}>\r\n                <Checkbox id=\"tipoEnderecoCobranca\" formProps={formProps} label=\"Cobrança\" />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Checkbox id=\"tipoEnderecoComercial\" formProps={formProps} label=\"Comercial\" />\r\n              </Col>\r\n            </Row>\r\n          </Box>\r\n        </Col>\r\n      </Row>\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default TrabalhadorEnderecoEditView;\r\n","import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { Box, Checkbox, DetailEditForm, DetailEditViewFormProps, InputGroupInline, InputType } from 'summer';\r\nimport { TrabalhadorTelefone } from '../../../../models/dtos/mfp/trabalhadorTelefone';\r\n\r\nconst TrabalhadorTelefoneEditView: FC<DetailEditViewFormProps<TrabalhadorTelefone>> = props => {\r\n  const formProps = useForm<TrabalhadorTelefone>({ defaultValues: props.selectedItem || {}, mode: 'onBlur' });\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps}>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline formProps={formProps} id=\"contato\" isPrependLabel={true} label=\"Contato\" />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            id=\"numero\"\r\n            isPrependLabel={true}\r\n            label=\"Telefone\"\r\n            type={InputType.TELEFONE}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col style={{ marginBottom: '30px' }}>\r\n          <Box title=\"Tipo\">\r\n            <Row style={{ marginBottom: '10px' }}>\r\n              <Col>\r\n                <Checkbox id=\"tipoTelefonePrincipal\" formProps={formProps} label=\"Principal\" />\r\n              </Col>\r\n              <Col>\r\n                <Checkbox id=\"tipoTelefoneResidencial\" formProps={formProps} label=\"Residencial\" />\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ marginBottom: '10px' }}>\r\n              <Col>\r\n                <Checkbox id=\"tipoTelefoneComercial\" formProps={formProps} label=\"Comercial\" />\r\n              </Col>\r\n              <Col>\r\n                <Checkbox id=\"tipoTelefoneCelular\" formProps={formProps} label=\"Celular\" />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Checkbox id=\"tipoTelefoneFax\" formProps={formProps} label=\"Fax\" />\r\n              </Col>\r\n            </Row>\r\n          </Box>\r\n        </Col>\r\n      </Row>\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default TrabalhadorTelefoneEditView;\r\n","import moment from 'moment';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, ListGroup, ListGroupItem, Row } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertType,\r\n  Box,\r\n  cepFormatter,\r\n  Checkbox,\r\n  compare,\r\n  currentDate,\r\n  DefaultSortProps,\r\n  DetailManagerForm,\r\n  DetailManagerFormProps,\r\n  EditForm,\r\n  EditViewProps,\r\n  formatDate,\r\n  getSelectedItem,\r\n  ImageInputPreview,\r\n  InputGroupInline,\r\n  InputType,\r\n  isEmpty,\r\n  onlyAlphaNum,\r\n  onlyNumber,\r\n  OrderType,\r\n  phoneWithDDDFormatter,\r\n  Tab,\r\n  TabGroup,\r\n  toDate,\r\n  WikiButton,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { CepUF } from '../../../../models/dtos/ger/cepUF';\r\nimport { CLASS_NAME, Trabalhador } from '../../../../models/dtos/mfp/trabalhador';\r\nimport { TrabalhadorEndereco } from '../../../../models/dtos/mfp/trabalhadorEndereco';\r\nimport { TrabalhadorTelefone } from '../../../../models/dtos/mfp/trabalhadorTelefone';\r\nimport { CATEGORIA_CNH_ENUM_VALUES } from '../../../../models/enumerated/mfp/categoriaCNHEnum';\r\nimport {\r\n  CONDICAO_TRABALHADOR_ESTRANGEIRO_ENUM_VALUES,\r\n  RESIDENTE_FORA_BRASIL,\r\n} from '../../../../models/enumerated/mfp/condicaoTrabalhadorEstrangeiroEnum';\r\nimport { DEFICIENCIA_ENUM_VALUES } from '../../../../models/enumerated/mfp/deficienciaEnum';\r\nimport { ESTADO_CIVIL_ENUM_VALUES } from '../../../../models/enumerated/mfp/estadoCivilEnum';\r\nimport { GRAU_INSTRUCAO_ENUM_VALUES } from '../../../../models/enumerated/mfp/grauInstrucaoEnum';\r\nimport { NACIONALIDADE_ENUM_VALUES } from '../../../../models/enumerated/mfp/nacionalidadeEnum';\r\nimport { RACA_ENUM_VALUES } from '../../../../models/enumerated/mfp/racaEnum';\r\nimport { SEXO_ENUM_VALUES } from '../../../../models/enumerated/mfp/sexoEnum';\r\nimport { loadFotoTrabalhador } from '../../../../services/mfp.service';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport EnumUtil from '../../../../utilities/enum.util';\r\nimport { tipoTelefoneFormatter } from '../../../../utilities/tipoTelefoneFormatter';\r\nimport CepLocalidadeIS from '../../../components/ger/cepLocalidadeIS/CepLocalidadeIS';\r\nimport CepUFIS from '../../../components/ger/cepUFIS/CepUFIS';\r\nimport TrabalhadorEmailEditView from './TrabalhadorEmailEditView';\r\nimport TrabalhadorEnderecoEditView from './TrabalhadorEnderecoEditView';\r\nimport TrabalhadorTelefoneEditView from './TrabalhadorTelefoneEditView';\r\n\r\ninterface TrabalhadorEditViewProps extends EditViewProps<Trabalhador> {}\r\n\r\ninterface ScreenFields {\r\n  foto?: File | string;\r\n}\r\n\r\nconst TrabalhadorEditView: FC<TrabalhadorEditViewProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const selectedItem = getSelectedItem(props);\r\n\r\n  const [isNotExtrangeiro, setIsNotExtrangeiro] = useState(true);\r\n\r\n  const formProps = useForm<Trabalhador & ScreenFields>({\r\n    defaultValues: {\r\n      emails: [],\r\n      enderecos: [],\r\n      telefones: [],\r\n      ...selectedItem,\r\n    },\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const enderecoDefaultSortProps: DefaultSortProps[] = [\r\n    {\r\n      dataField: 'logradouro',\r\n      order: OrderType.ASC,\r\n    },\r\n  ];\r\n\r\n  const telefoneDefaultSortProps: DefaultSortProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      order: OrderType.ASC,\r\n    },\r\n  ];\r\n\r\n  const emailDefaultSortProps: DefaultSortProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      order: OrderType.ASC,\r\n    },\r\n  ];\r\n\r\n  const enderecoFormProps: DetailManagerFormProps = {\r\n    columns: [\r\n      {\r\n        dataField: 'logradouro',\r\n        text: 'Logradouro',\r\n      },\r\n      {\r\n        dataField: 'numero',\r\n        text: 'Número',\r\n      },\r\n      {\r\n        dataField: 'cep',\r\n        formatter: cepFormatter,\r\n        text: 'CEP',\r\n      },\r\n      {\r\n        dataField: 'bairro.bairro',\r\n        text: 'Bairro',\r\n      },\r\n      {\r\n        dataField: 'cidade.nome',\r\n        text: 'Cidade',\r\n      },\r\n    ],\r\n    detailView: TrabalhadorEnderecoEditView,\r\n    formProps,\r\n    propName: 'enderecos',\r\n    title: 'Manutenção de Endereços',\r\n  };\r\n\r\n  const telefoneFormProps: DetailManagerFormProps = {\r\n    columns: [\r\n      {\r\n        dataField: 'contato',\r\n        text: 'Contato',\r\n      },\r\n      {\r\n        dataField: 'numero',\r\n        formatter: phoneWithDDDFormatter,\r\n        text: 'Telefone',\r\n      },\r\n      {\r\n        dataField: 'tipos',\r\n        formatter: tipoTelefoneFormatter,\r\n        text: 'Tipos',\r\n      },\r\n    ],\r\n    detailView: TrabalhadorTelefoneEditView,\r\n    formProps,\r\n    propName: 'telefones',\r\n    title: 'Manutenção de Telefones',\r\n  };\r\n\r\n  const emailFormProps: DetailManagerFormProps = {\r\n    columns: [\r\n      {\r\n        dataField: 'contato',\r\n        text: 'Contato',\r\n      },\r\n      {\r\n        dataField: 'email',\r\n        text: 'Email',\r\n      },\r\n    ],\r\n    detailView: TrabalhadorEmailEditView,\r\n    formProps,\r\n    propName: 'emails',\r\n    title: 'Manutenção de Emails',\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      setTimeout(() => {\r\n        formProps.register({ name: 'empresaMFP' });\r\n\r\n        const trabalhador: Trabalhador = formProps.getValues();\r\n\r\n        if (!trabalhador.empresaMFP) {\r\n          trabalhador.empresaMFP = {\r\n            id: globalReducer.globalParameter.empresaMFP.id,\r\n          };\r\n        }\r\n\r\n        if (trabalhador.id) {\r\n          loadFotoTrabalhador(trabalhador, {\r\n            thenFunction: (result: string) => {\r\n              if (!isEmpty(result)) {\r\n                formProps.setValue('foto', result);\r\n              }\r\n            },\r\n          });\r\n        }\r\n      }, 500);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const changeUfNaturalidade = (uf: CepUF) => {\r\n    setIsNotExtrangeiro(uf.exterior === false);\r\n  };\r\n\r\n  const limparCamposCtps = () => {\r\n    formProps.setValue('carteiraTrabalhoNumero', null);\r\n    formProps.setValue('carteiraTrabalhoSerie', null);\r\n    formProps.setValue('carteiraTrabalhoUF', null);\r\n    formProps.setValue('carteiraTrabalhoDataEmissao', null);\r\n  };\r\n\r\n  const ajustarCtps = () => {\r\n    const trabalhador: Trabalhador = formProps.getValues();\r\n    if (trabalhador && isEmpty(trabalhador.cpf) && trabalhador.ctpsDigital) {\r\n      formProps.setValue('ctpsDigital', false);\r\n      limparCamposCtps();\r\n    }\r\n  };\r\n\r\n  const existeCtps = (trabalhador: Trabalhador) => {\r\n    const validOne = !isEmpty(trabalhador.carteiraTrabalhoNumero) || !isEmpty(trabalhador.carteiraTrabalhoSerie);\r\n    const validTwo = !isEmpty(trabalhador.carteiraTrabalhoDataEmissao) || !isEmpty(trabalhador.carteiraTrabalhoUF);\r\n    return validOne || validTwo;\r\n  };\r\n\r\n  const preencherCamposCtps = (trabalhador: Trabalhador) => {\r\n    formProps.setValue('carteiraTrabalhoNumero', trabalhador.cpf.substr(0, 7));\r\n    formProps.setValue('carteiraTrabalhoSerie', trabalhador.cpf.substr(7, 11));\r\n    formProps.setValue('carteiraTrabalhoUF', trabalhador.naturalidadeUF);\r\n    formProps.setValue('carteiraTrabalhoDataEmissao', new Date());\r\n\r\n    completarNumero('carteiraTrabalhoNumero', 10, true);\r\n    completarNumero('carteiraTrabalhoSerie', 4, true);\r\n  };\r\n\r\n  const ajustarCamposCtps = (trabalhador: Trabalhador) => {\r\n    if (trabalhador.ctpsDigital) {\r\n      if (existeCtps(trabalhador)) {\r\n        alertManager.emit(ACTION_EVENTS.SHOW, {\r\n          message: 'A CTPS já possui campo(s) preenchido(s)! Deseja substituir o(s) mesmo(s) com a informação da CTPS Digital?',\r\n          onNoClick: () => {\r\n            formProps.setValue('ctpsDigital', false);\r\n          },\r\n          onOkClick: () => {\r\n            preencherCamposCtps(trabalhador);\r\n          },\r\n          type: AlertType.WARNING_YES_NO,\r\n        });\r\n      } else {\r\n        preencherCamposCtps(trabalhador);\r\n      }\r\n    } else {\r\n      limparCamposCtps();\r\n    }\r\n  };\r\n\r\n  const verificarCtpsDigital = () => {\r\n    const trabalhador: Trabalhador = formProps.getValues();\r\n    if (trabalhador.cpf) {\r\n      ajustarCamposCtps(trabalhador);\r\n    } else {\r\n      formProps.setValue('ctpsDigital', false);\r\n      alertManager.emit(ACTION_EVENTS.SHOW, {\r\n        message: 'Para que o sistema considere a CTPS Digital é necessário informar o número do CPF do trabalhador. Aba Geral campo CPF.',\r\n        type: AlertType.INFORMATION,\r\n      });\r\n    }\r\n  };\r\n\r\n  const completarNumero = (campo, tamanho, execFn = false) => {\r\n    const formatFn = () => {\r\n      const trabalhador: Trabalhador = formProps.getValues();\r\n      if (trabalhador[campo]) {\r\n        formProps.setValue(campo, trabalhador[campo].padStart(tamanho, '0'));\r\n      }\r\n    };\r\n\r\n    if (execFn) {\r\n      formatFn();\r\n    }\r\n\r\n    return execFn ? () => null : formatFn;\r\n  };\r\n\r\n  const validateEnderecoPrincipal = (enderecos: TrabalhadorEndereco[]) => enderecos.find(endereco => endereco.tipoEnderecoPrincipal) !== undefined;\r\n  const validateTelefonePrincipal = (telefones: TrabalhadorTelefone[]) => telefones.find(telefone => telefone.tipoTelefonePrincipal) !== undefined;\r\n\r\n  const validateExtras = trabalhador => {\r\n    const erros = [];\r\n\r\n    const now = formatDate(currentDate());\r\n\r\n    const msgEndereco = 'Pelo menos um endereço deve ser cadastrado';\r\n\r\n    // Validação do endereço obrigatório\r\n    if (trabalhador.enderecos.length === 0) {\r\n      erros.push(msgEndereco + '.');\r\n    } else {\r\n      // Validação do endereço principal obrigatório\r\n      if (!validateEnderecoPrincipal(trabalhador.enderecos)) {\r\n        erros.push(msgEndereco + ' como principal.');\r\n      }\r\n    }\r\n\r\n    // Validação do telefone principal\r\n    if (trabalhador.telefones.length > 0 && !validateTelefonePrincipal(trabalhador.telefones)) {\r\n      erros.push('Pelo menos um telefone deve ser cadastrado como principal.');\r\n    }\r\n\r\n    if (compare(trabalhador.dataNascimento, now) > 0) {\r\n      erros.push('A Data de Nascimento não pode ser uma data futura.');\r\n    }\r\n\r\n    if (compare(trabalhador.identidadeDataEmissao, now) > 0) {\r\n      erros.push('A Emissão da identidade não pode ser uma data futura.');\r\n    }\r\n\r\n    if (trabalhador.dataNascimento) {\r\n      const validarDataNascimento = (campo, mensagem) => {\r\n        if (trabalhador[campo] && compare(trabalhador.dataNascimento, trabalhador[campo]) > 0) {\r\n          erros.push(mensagem);\r\n        }\r\n      };\r\n\r\n      validarDataNascimento('identidadeDataEmissao', 'A Data de emissão da R.G deve ser posterior a data de nascimento.');\r\n      validarDataNascimento('cnhDataValidade', 'A Data de validade da CNH deve ser posterior a data de nascimento.');\r\n      validarDataNascimento('cnhDataExpedicao', 'A Data de expedição da CNH deve ser posterior a data de nascimento.');\r\n      validarDataNascimento('cnhDataPrimeiraHabilitacao', 'A Data da primeira habilitação deve ser posterior a data de nascimento.');\r\n      validarDataNascimento('carteiraTrabalhoDataEmissao', 'A Data de Emissão da Carteira de Trabalho deve ser posterior a data de nascimento.');\r\n      validarDataNascimento('dataValidadeVisto', 'A Data de Validade do visto deve ser posterior a data de nascimento.');\r\n      validarDataNascimento('dataChegadaBrasil', 'A Data de chegada ao Brasil deve ser posterior a data de nascimento.');\r\n    }\r\n\r\n    if (trabalhador.cnhDataExpedicao && trabalhador.cnhDataValidade && compare(trabalhador.cnhDataValidade, trabalhador.cnhDataExpedicao) <= 0) {\r\n      erros.push('A Data de Validade da CNH deve ser posterior a data de expedição.');\r\n    }\r\n\r\n    if (trabalhador.carteiraTrabalhoDataEmissao && compare(trabalhador.carteiraTrabalhoDataEmissao, now) > 0) {\r\n      erros.push('A Data de Emissão da Carteira de Trabalho não pode ser uma data futura.');\r\n    }\r\n\r\n    if (trabalhador.naturalidadeUF && trabalhador.naturalidadeUF.exterior) {\r\n      if (trabalhador.condicaoTrabalhadorEstrangeiro) {\r\n        if (trabalhador.condicaoTrabalhadorEstrangeiro !== RESIDENTE_FORA_BRASIL.value && !trabalhador.dataChegadaBrasil) {\r\n          erros.push(\r\n            'É obrigatório o preenchimento da Data de Chegada ao Brasil quando a Situação for ' +\r\n              EnumUtil.find(CONDICAO_TRABALHADOR_ESTRANGEIRO_ENUM_VALUES, trabalhador.condicaoTrabalhadorEstrangeiro).label\r\n          );\r\n        }\r\n      } else {\r\n        erros.push('É obrigatório o preenchimento do campo Situação nas informações sobre Naturalidade para Trabalhadores estrangeiros.');\r\n      }\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  const promisedAlert = message =>\r\n    new Promise(resolve => {\r\n      alertManager.emit(ACTION_EVENTS.SHOW, {\r\n        message,\r\n        onOkClick: () => resolve(),\r\n        type: AlertType.WARNING_YES_NO,\r\n      });\r\n    });\r\n\r\n  const beforePersist = (trabalhador, done) => {\r\n    const warnings = [];\r\n\r\n    if (isEmpty(trabalhador.carteiraTrabalhoNumero)) {\r\n      warnings.push('Número da CTPS');\r\n    }\r\n\r\n    if (isEmpty(trabalhador.carteiraTrabalhoSerie)) {\r\n      warnings.push('Série da CTPS');\r\n    }\r\n\r\n    if (isEmpty(trabalhador.carteiraTrabalhoDataEmissao)) {\r\n      warnings.push('Data de emissão da CTPS');\r\n    }\r\n\r\n    if (isEmpty(trabalhador.carteiraTrabalhoUF)) {\r\n      warnings.push('UF da CTPS');\r\n    }\r\n\r\n    let promise = null;\r\n\r\n    if (warnings.length > 0) {\r\n      promise = promisedAlert(\r\n        <>\r\n          <p className=\"lead\" style={{ textAlign: 'justify' }}>\r\n            A CTPS é necessária na emissão de arquivos digitais como SEFIP e GRRF. Recomendamos que preencha os seguintes campos:\r\n          </p>\r\n          <ListGroup variant=\"flush\">\r\n            {warnings.map(item => (\r\n              <ListGroupItem key={item}>{item}</ListGroupItem>\r\n            ))}\r\n          </ListGroup>\r\n          <p className=\"lead text-center\" style={{ marginTop: 16, marginBottom: 0 }}>\r\n            Deseja salvar mesmo assim?\r\n          </p>\r\n        </>\r\n      );\r\n    }\r\n\r\n    const nascimento = moment(toDate(trabalhador.dataNascimento));\r\n    const diff = moment.duration(moment().diff(nascimento));\r\n\r\n    if (diff.years() < 14) {\r\n      const msg = 'Trabalhador com ' + diff.years() + ' anos (Menor que 14 anos). Confirma a gravação?';\r\n\r\n      if (promise) {\r\n        promise = promise.then(() => promisedAlert(msg));\r\n      } else {\r\n        promise = promisedAlert(msg);\r\n      }\r\n    }\r\n\r\n    if (promise) {\r\n      promise.then(() => done(trabalhador));\r\n    } else {\r\n      done(trabalhador);\r\n    }\r\n\r\n    return { async: true };\r\n  };\r\n\r\n  const getFilesToSubmit = formData => {\r\n    const result = formData.foto;\r\n    delete formData.foto;\r\n    return typeof result === 'string' ? null : result;\r\n  };\r\n\r\n  // TODO implementar funcionalidades do eSocial\r\n  // TODO implementar aba de vínculo após a criação da VinculoSearchView/VinculoEditView\r\n  // TODO implementar funcionalidade de copiar trabalhador\r\n\r\n  return (\r\n    <WindowComponent title=\"Manutenção de Trabalhador - Dados Pessoais\" wikiId={2983}>\r\n      <EditForm\r\n        formProps={formProps}\r\n        editViewProps={props}\r\n        dtoClassName={CLASS_NAME}\r\n        beforePersist={beforePersist}\r\n        validateExtras={validateExtras}\r\n        getFile={getFilesToSubmit}\r\n      >\r\n        <Row>\r\n          <Col md={4}>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { ...onlyNumber(0, 8) } }}\r\n              isPrependLabel={true}\r\n              id=\"codigo\"\r\n              label=\"Código\"\r\n              tooltipProps={{ message: 'Preenchimento Opcional - Codificação Automática' }}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { maxLength: 120, required: true } }}\r\n              isPrependLabel={true}\r\n              id=\"nome\"\r\n              label=\"Nome\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <TabGroup formProps={formProps}>\r\n              <Tab title=\"Dados Principais\">\r\n                <Row>\r\n                  <Col>\r\n                    <Box title=\"Informações Pessoais\">\r\n                      <Row>\r\n                        <Col>\r\n                          <Row>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"sexo\"\r\n                                label=\"Sexo\"\r\n                                formProps={{ ...formProps, validation: { required: true } }}\r\n                                isPrependLabel={true}\r\n                                placeholder=\"Informe o Sexo\"\r\n                                inputDropDownProps={{ optionsProvider: SEXO_ENUM_VALUES }}\r\n                                type={InputType.DROP_DOWN}\r\n                              />\r\n                            </Col>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"raca\"\r\n                                label=\"Raça\"\r\n                                formProps={formProps}\r\n                                isPrependLabel={true}\r\n                                placeholder=\"Informe o Raça\"\r\n                                inputDropDownProps={{ optionsProvider: RACA_ENUM_VALUES }}\r\n                                type={InputType.DROP_DOWN}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"estadoCivil\"\r\n                                label=\"Estado Civil\"\r\n                                formProps={{ ...formProps, validation: { required: true } }}\r\n                                isPrependLabel={true}\r\n                                placeholder=\"Informe o Estado Civil\"\r\n                                inputDropDownProps={{ optionsProvider: ESTADO_CIVIL_ENUM_VALUES }}\r\n                                type={InputType.DROP_DOWN}\r\n                              />\r\n                            </Col>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"deficiencia\"\r\n                                label=\"Deficiência\"\r\n                                formProps={formProps}\r\n                                isPrependLabel={true}\r\n                                placeholder=\"Informe a Deficiência\"\r\n                                inputDropDownProps={{ optionsProvider: DEFICIENCIA_ENUM_VALUES }}\r\n                                type={InputType.DROP_DOWN}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"dataNascimento\"\r\n                                label=\"Data de Nascimento\"\r\n                                formProps={{ ...formProps, validation: { required: true } }}\r\n                                isPrependLabel={true}\r\n                                type={InputType.DATE}\r\n                              />\r\n                            </Col>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"nacionalidade\"\r\n                                label=\"Nacionalidade\"\r\n                                formProps={{ ...formProps, validation: { required: true } }}\r\n                                isPrependLabel={true}\r\n                                placeholder=\"Informe a Nacionalidade\"\r\n                                inputDropDownProps={{ optionsProvider: NACIONALIDADE_ENUM_VALUES }}\r\n                                type={InputType.DROP_DOWN}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                        <Col xs=\"2\" className=\"d-flex justify-content-center\">\r\n                          <ImageInputPreview formProps={formProps} propImageName=\"foto\" />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>\r\n                          <InputGroupInline\r\n                            id=\"grauInstrucao\"\r\n                            label=\"Grau Instrução\"\r\n                            formProps={{ ...formProps, validation: { required: true } }}\r\n                            isPrependLabel={true}\r\n                            placeholder=\"Informe o Grau Instrução\"\r\n                            inputDropDownProps={{ optionsProvider: GRAU_INSTRUCAO_ENUM_VALUES }}\r\n                            type={InputType.DROP_DOWN}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>\r\n                          <InputGroupInline\r\n                            id=\"nomeMae\"\r\n                            label=\"Nome da Mãe\"\r\n                            formProps={{ ...formProps, validation: { maxLength: 120 } }}\r\n                            isPrependLabel={true}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>\r\n                          <InputGroupInline\r\n                            id=\"nomePai\"\r\n                            label=\"Nome do Pai\"\r\n                            formProps={{ ...formProps, validation: { maxLength: 120 } }}\r\n                            isPrependLabel={true}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col style={{ marginTop: '10px', marginBottom: '20px' }}>\r\n                          <Checkbox\r\n                            id=\"preencheCotaDeficiencia\"\r\n                            formProps={formProps}\r\n                            label=\"Preenche cota de pessoas com deficiência\"\r\n                            tooltipProps={{ message: 'Preenche cota de pessoas com deficiência habilitadas ou de beneficiários reabilitados.' }}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>\r\n                          <Checkbox\r\n                            id=\"proprietario\"\r\n                            formProps={formProps}\r\n                            label=\"Proprietário\"\r\n                            tooltipProps={{ message: 'Trabalhador em questáo é o proprietário da empresa' }}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Box>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <Box title=\"Naturalidade\">\r\n                      <Row>\r\n                        <Col>\r\n                          <CepUFIS id=\"naturalidadeUF\" formProps={formProps} onChange={changeUfNaturalidade} />\r\n                        </Col>\r\n                        <Col>\r\n                          <CepLocalidadeIS id=\"naturalidadeCidade\" formProps={formProps} />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>\r\n                          <InputGroupInline\r\n                            id=\"dataChegadaBrasil\"\r\n                            label=\"Dt. Chegada Brasil\"\r\n                            formProps={formProps}\r\n                            isPrependLabel={true}\r\n                            type={InputType.DATE}\r\n                            tooltipProps={{ message: 'Preencha com a data de chegada do Trabalhador estrangeiro ao Brasil.' }}\r\n                            disabled={isNotExtrangeiro}\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <InputGroupInline\r\n                            id=\"condicaoTrabalhadorEstrangeiro\"\r\n                            label=\"Situação\"\r\n                            formProps={formProps}\r\n                            isPrependLabel={true}\r\n                            placeholder=\"Informe a Situação\"\r\n                            inputDropDownProps={{ optionsProvider: CONDICAO_TRABALHADOR_ESTRANGEIRO_ENUM_VALUES }}\r\n                            type={InputType.DROP_DOWN}\r\n                            tooltipProps={{ message: 'Selecione a situação em que se encontra o Trabalhador estrangeiro.' }}\r\n                            disabled={isNotExtrangeiro}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col style={{ marginTop: '10px', marginBottom: '20px' }}>\r\n                          <Checkbox\r\n                            id=\"casadoBrasileiro\"\r\n                            formProps={formProps}\r\n                            label=\"Casado com Brasileiro(a)\"\r\n                            disabled={isNotExtrangeiro}\r\n                            tooltipProps={{ message: 'Selecione essa opção caso o Trabalhador estrangeiro seja casado com Brasileiro(a).' }}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>\r\n                          <Checkbox\r\n                            id=\"filhoBrasileiro\"\r\n                            formProps={formProps}\r\n                            label=\"Possui filhos(as) Brasileiros\"\r\n                            disabled={isNotExtrangeiro}\r\n                            tooltipProps={{ message: 'Selecione essa opção caso o Trabalhador estrangeiro possua filhos(as) Brasileiros.' }}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Box>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <Box title=\"Documentos\">\r\n                      <Accordion formProps={formProps}>\r\n                        <AccordionItem title=\"Geral\">\r\n                          <Row>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"cpf\"\r\n                                label=\"CPF\"\r\n                                formProps={{ ...formProps, validation: { required: true } }}\r\n                                isPrependLabel={true}\r\n                                type={InputType.CPF}\r\n                                onBlur={ajustarCtps}\r\n                              />\r\n                            </Col>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"pis\"\r\n                                label=\"PIS/NIS\"\r\n                                formProps={{ ...formProps, validation: { ...onlyNumber(0, 11) } }}\r\n                                isPrependLabel={true}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                        </AccordionItem>\r\n                        <AccordionItem title=\"Identidade\">\r\n                          <Row>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"identidade\"\r\n                                label=\"Número\"\r\n                                formProps={{ ...formProps, validation: { required: true, ...onlyAlphaNum(0, 14) } }}\r\n                                isPrependLabel={true}\r\n                              />\r\n                            </Col>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"identidadeComplemento\"\r\n                                label=\"Complemento\"\r\n                                formProps={{ ...formProps, validation: { ...onlyAlphaNum(0, 20) } }}\r\n                                isPrependLabel={true}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"identidadeDataEmissao\"\r\n                                label=\"Emissão\"\r\n                                formProps={{ ...formProps, validation: { required: true } }}\r\n                                isPrependLabel={true}\r\n                                type={InputType.DATE}\r\n                              />\r\n                            </Col>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"identidadeOrgaoExpedidor\"\r\n                                label=\"Expedidor\"\r\n                                formProps={{ ...formProps, validation: { required: true, ...onlyAlphaNum(0, 18) } }}\r\n                                isPrependLabel={true}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col>\r\n                              <CepUFIS id=\"identidadeUF\" formProps={{ ...formProps, validation: { required: true } }} />\r\n                            </Col>\r\n                          </Row>\r\n                        </AccordionItem>\r\n                        <AccordionItem title=\"Titulo de Eleitor\">\r\n                          <Row>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"tituloEleitor\"\r\n                                label=\"Título de Eleitor\"\r\n                                formProps={{ ...formProps, validation: { ...onlyNumber(0, 13) } }}\r\n                                isPrependLabel={true}\r\n                              />\r\n                            </Col>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"secaoEleitoral\"\r\n                                label=\"Seção\"\r\n                                formProps={{ ...formProps, validation: { ...onlyNumber(0, 10) } }}\r\n                                isPrependLabel={true}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"zonaEleitoral\"\r\n                                label=\"Zona Eleitoral\"\r\n                                formProps={{ ...formProps, validation: { ...onlyNumber(0, 10) } }}\r\n                                isPrependLabel={true}\r\n                              />\r\n                            </Col>\r\n                            <Col />\r\n                          </Row>\r\n                        </AccordionItem>\r\n                        <AccordionItem title=\"Carteira de Habilitação\">\r\n                          <Row>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"cnhNumero\"\r\n                                label=\"Número\"\r\n                                formProps={{ ...formProps, validation: { ...onlyNumber(0, 11) } }}\r\n                                isPrependLabel={true}\r\n                              />\r\n                            </Col>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"cnhCategoria\"\r\n                                label=\"Categoria\"\r\n                                formProps={formProps}\r\n                                isPrependLabel={true}\r\n                                placeholder=\"Informe a Categoria da CNH\"\r\n                                inputDropDownProps={{ optionsProvider: CATEGORIA_CNH_ENUM_VALUES }}\r\n                                type={InputType.DROP_DOWN}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"cnhDataPrimeiraHabilitacao\"\r\n                                label=\"Dt. Primeira Habilitação\"\r\n                                formProps={formProps}\r\n                                isPrependLabel={true}\r\n                                type={InputType.DATE}\r\n                                tooltipProps={{ message: 'Data da primeira habilitação.' }}\r\n                              />\r\n                            </Col>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"cnhDataExpedicao\"\r\n                                label=\"Expedição\"\r\n                                formProps={formProps}\r\n                                isPrependLabel={true}\r\n                                type={InputType.DATE}\r\n                                tooltipProps={{ message: 'Data de expedição da CNH.' }}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col>\r\n                              <CepUFIS id=\"cnhUF\" formProps={formProps} tooltipProps={{ message: 'Estado da Federação emissor da CNH.' }} />\r\n                            </Col>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"cnhDataValidade\"\r\n                                label=\"Dt. Validade\"\r\n                                formProps={formProps}\r\n                                isPrependLabel={true}\r\n                                type={InputType.DATE}\r\n                                tooltipProps={{ message: 'Data de validade da CNH.' }}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                        </AccordionItem>\r\n                        <AccordionItem title=\"Carteira de Trabalho\">\r\n                          <Row>\r\n                            <Col style={{ marginBottom: '20px', marginTop: '10px' }}>\r\n                              <Checkbox\r\n                                id=\"ctpsDigital\"\r\n                                formProps={formProps}\r\n                                label=\"Informar CTPS Digital\"\r\n                                onChange={verificarCtpsDigital}\r\n                                tooltipProps={{\r\n                                  message:\r\n                                    'Preenche os dados da Carteira de Trabalho da seguinte forma: Para o campo Número da Carteira utiliza os primeiros 7 dígitos do CPF, para o campo Série os 4 dígitos restantes.',\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                            <Col>\r\n                              <WikiButton pageId={6032} />\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"carteiraTrabalhoNumero\"\r\n                                label=\"Número\"\r\n                                formProps={{ ...formProps, validation: { ...onlyAlphaNum(0, 11) } }}\r\n                                isPrependLabel={true}\r\n                                onBlur={completarNumero('carteiraTrabalhoNumero', 10)}\r\n                              />\r\n                            </Col>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"carteiraTrabalhoSerie\"\r\n                                label=\"Série\"\r\n                                formProps={{ ...formProps, validation: { ...onlyNumber(0, 5) } }}\r\n                                isPrependLabel={true}\r\n                                onBlur={completarNumero('carteiraTrabalhoSerie', 4)}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"carteiraTrabalhoDataEmissao\"\r\n                                label=\"Emissão\"\r\n                                formProps={formProps}\r\n                                isPrependLabel={true}\r\n                                type={InputType.DATE}\r\n                              />\r\n                            </Col>\r\n                            <Col>\r\n                              <CepUFIS id=\"carteiraTrabalhoUF\" formProps={formProps} />\r\n                            </Col>\r\n                          </Row>\r\n                        </AccordionItem>\r\n                        <AccordionItem title=\"Passaporte\">\r\n                          <Row>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"passaporteNumero\"\r\n                                label=\"Número\"\r\n                                formProps={{ ...formProps, validation: { ...onlyAlphaNum(0, 8) } }}\r\n                                isPrependLabel={true}\r\n                              />\r\n                            </Col>\r\n                            <Col>\r\n                              <InputGroupInline\r\n                                id=\"dataValidadeVisto\"\r\n                                label=\"Validade do Visto\"\r\n                                formProps={formProps}\r\n                                isPrependLabel={true}\r\n                                type={InputType.DATE}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                        </AccordionItem>\r\n                      </Accordion>\r\n                    </Box>\r\n                  </Col>\r\n                </Row>\r\n              </Tab>\r\n              <Tab title=\"Dados Complementares\">\r\n                <Row>\r\n                  <Col>\r\n                    <Accordion>\r\n                      <AccordionItem title=\"Endereços\">\r\n                        <DetailManagerForm\r\n                          {...props}\r\n                          defaultSortDirection={OrderType.ASC}\r\n                          defaultSorted={enderecoDefaultSortProps}\r\n                          {...enderecoFormProps}\r\n                          keyField=\"rowIndex\"\r\n                        />\r\n                      </AccordionItem>\r\n                      <AccordionItem title=\"Telefones\">\r\n                        <DetailManagerForm\r\n                          {...props}\r\n                          defaultSortDirection={OrderType.ASC}\r\n                          defaultSorted={telefoneDefaultSortProps}\r\n                          {...telefoneFormProps}\r\n                          keyField=\"rowIndex\"\r\n                        />\r\n                      </AccordionItem>\r\n                      <AccordionItem title=\"E-mails\">\r\n                        <DetailManagerForm\r\n                          {...props}\r\n                          defaultSortDirection={OrderType.ASC}\r\n                          defaultSorted={emailDefaultSortProps}\r\n                          {...emailFormProps}\r\n                          keyField=\"rowIndex\"\r\n                        />\r\n                      </AccordionItem>\r\n                    </Accordion>\r\n                  </Col>\r\n                </Row>\r\n              </Tab>\r\n              <Tab title=\"Vínculos\" />\r\n            </TabGroup>\r\n          </Col>\r\n        </Row>\r\n      </EditForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default TrabalhadorEditView;\r\n","import { Basic } from 'summer';\r\nimport { CepPais } from './cepPais';\r\n\r\nexport interface CepUF extends Basic {\r\n  codigo?: string;\r\n  sigla?: string;\r\n  nome?: string;\r\n  exterior?: boolean;\r\n  pais?: CepPais;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.cepuf';\r\n","import { Basic } from 'summer';\r\nimport { CepUF } from './cepUF';\r\n\r\nexport interface CepLocalidade extends Basic {\r\n  nome?: string;\r\n  cep?: string;\r\n  tipo?: string;\r\n  codigoMunicipio?: string;\r\n  uf?: CepUF;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.ceplocalidade';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { SearchFilterProps } from '../../../../hooks/useSearchFilter';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepUF';\r\n\r\nexport interface CepUFISProps extends InputProps {\r\n  searchFilter?: SearchFilterProps;\r\n}\r\n\r\nconst CepUFIS: FC<CepUFISProps> = props => {\r\n  const onChange = value => {\r\n    if (props.searchFilter) {\r\n      props.searchFilter.setFilter(CLASS_NAME, value);\r\n    }\r\n    if (props.onChange) {\r\n      props.onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'sigla',\r\n            text: 'Sigla',\r\n          },\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'CepUFSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'UF'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a UF'}\r\n      type={InputType.INPUT_SEARCH}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepUFIS;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { SearchFilterProps } from '../../../../hooks/useSearchFilter';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepLocalidade';\r\nimport { CLASS_NAME as CLASS_NAME_UF } from '../../../../models/dtos/ger/cepUF';\r\n\r\nexport interface CepLocalidadeISProps extends InputProps {\r\n  searchFilter?: SearchFilterProps;\r\n}\r\n\r\nconst CepLocalidadeIS: FC<CepLocalidadeISProps> = props => {\r\n  const searchExpressionsFull = defaultExpressions => {\r\n    const expressions = [];\r\n\r\n    if (props.searchFilter) {\r\n      const item = props.searchFilter.getFilter(CLASS_NAME_UF);\r\n      if (item) {\r\n        expressions.push({\r\n          fieldName: 'uf.id',\r\n          value: item.id,\r\n        });\r\n      }\r\n    }\r\n\r\n    if (expressions.length > 0) {\r\n      expressions[0].expressions = defaultExpressions;\r\n    } else {\r\n      expressions.push(...defaultExpressions);\r\n    }\r\n\r\n    return expressions;\r\n  };\r\n\r\n  const onChange = value => {\r\n    if (props.searchFilter) {\r\n      props.searchFilter.setFilter(CLASS_NAME, value);\r\n    }\r\n    if (props.onChange) {\r\n      props.onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'cep',\r\n            text: 'CEP',\r\n          },\r\n          {\r\n            dataField: 'codigoMunicipio',\r\n            text: 'Código do Município',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressionsFull,\r\n        searchViewId: 'CepLocalidadeSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Cidade'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Cidade'}\r\n      type={InputType.INPUT_SEARCH}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepLocalidadeIS;\r\n","import { Basic } from 'summer';\r\nimport { CepLocalidade } from './cepLocalidade';\r\n\r\nexport interface CepBairro extends Basic {\r\n  bairro?: string;\r\n  localidade?: CepLocalidade;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.cepbairro';\r\n","import { AxiosInstance } from 'axios';\r\nimport { AxiosParam, create, send } from 'summer';\r\nimport { Cfop } from '../models/dtos/ger/cfop';\r\nimport { CagedParam } from '../models/dtos/mfp/cagedParam';\r\nimport { DiaUtil } from '../models/dtos/mfp/diaUtil';\r\nimport { DirfParam } from '../models/dtos/mfp/dirfParam';\r\nimport { ExisteCalculoVinculoTomador } from '../models/dtos/mfp/existeCalculoVinculoTomador';\r\nimport { Ferias } from '../models/dtos/mfp/ferias';\r\nimport { FeriasRescisao } from '../models/dtos/mfp/feriasRescisao';\r\nimport { GrupoEvento } from '../models/dtos/mfp/grupoEvento';\r\nimport { ManadParam } from '../models/dtos/mfp/manadParam';\r\nimport { QuadroHorario } from '../models/dtos/mfp/quadroHorario';\r\nimport { RaisParam } from '../models/dtos/mfp/raisParam';\r\nimport { ReintegracaoVinculo } from '../models/dtos/mfp/reintegracaoVinculo';\r\nimport { Rescisao } from '../models/dtos/mfp/rescisao';\r\nimport { SimulacaoRescisao } from '../models/dtos/mfp/simulacaoRescisao';\r\nimport { SituacaoAfastamento } from '../models/dtos/mfp/situacaoAfastamento';\r\nimport { Trabalhador } from '../models/dtos/mfp/trabalhador';\r\nimport { TransferenciaVinculo } from '../models/dtos/mfp/transferenciaVinculo';\r\nimport { ValorImposto } from '../models/dtos/mfp/valorImposto';\r\nimport { Vinculo } from '../models/dtos/mfp/vinculo';\r\nimport { VinculoEvento } from '../models/dtos/mfp/vinculoEvento';\r\nimport { VinculoSalario } from '../models/dtos/mfp/vinculoSalario';\r\n\r\nfunction getService(): AxiosInstance {\r\n  return create('/mfp');\r\n}\r\n\r\nexport function copiarValorImpostoAnteriorAReferencia(reference: string, param: AxiosParam<Cfop>) {\r\n  send(getService().get<ValorImposto>(`/copiarValorImpostoAnteriorAReferencia/${reference}`), param);\r\n}\r\n\r\nexport function loadFotoTrabalhador(trabalhador: Trabalhador, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/loadFotoTrabalhador', trabalhador), param);\r\n}\r\n\r\nexport function validarSalarioVinculo(vinculo: number, salario: VinculoSalario, param: AxiosParam<boolean>) {\r\n  send(\r\n    getService().post<boolean>(`/validarSalarioVinculo/${vinculo}`, { valor: salario.valor, data: salario.data }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function verificarQuadroHorarioESocial(quadroHorario: QuadroHorario, param: AxiosParam<string>) {\r\n  send(getService().post<string>(`/verificarQuadroHorarioESocial`, quadroHorario), param);\r\n}\r\n\r\nexport function validarVinculoBeforePersist(vinculo: Vinculo, param: AxiosParam<any>) {\r\n  send(getService().post<any>('/validarVinculoBeforePersist', vinculo), param);\r\n}\r\n\r\nexport function verificarSituacaoAfastamento(situacaoAfastamento: SituacaoAfastamento, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/verificarSituacaoAfastamento', situacaoAfastamento), param);\r\n}\r\n\r\nexport function existeCalculoVinculoTomadorServico(existeCalculoParams: ExisteCalculoVinculoTomador, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/existeCalculoVinculoTomadorServico', existeCalculoParams), param);\r\n}\r\n\r\nexport function perdeuPeriodoAquisitivoFerias(ferias: Ferias, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/perdeuPeriodoAquisitivoFerias', ferias), param);\r\n}\r\n\r\nexport function obterDataFinalGozoFerias(ferias: Ferias, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/obterDataFinalGozoFerias', ferias), param);\r\n}\r\n\r\nexport function ajustarPeriodoAquisitivoFeriasPerdidoPorAfastamentos(ferias: Ferias, param: AxiosParam<any>) {\r\n  send(getService().post<any>('/ajustarPeriodoAquisitivoFeriasPerdidoPorAfastamentos', ferias), param);\r\n}\r\n\r\nexport function getDiaUtil(diaUtilParams: DiaUtil, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/getDiaUtil', diaUtilParams), param);\r\n}\r\n\r\nexport function simularFerias(vinculo: Vinculo, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/simularFerias', vinculo), param);\r\n}\r\n\r\nexport function definirAvisoPrevio(rescisao: Rescisao, param: AxiosParam<Rescisao>) {\r\n  send(getService().post<Rescisao>('/definirAvisoPrevio', rescisao), param);\r\n}\r\n\r\nexport function obterFeriasRescisao(rescisao: Rescisao, param: AxiosParam<FeriasRescisao[]>) {\r\n  send(getService().post<Rescisao[]>('/obterFeriasRescisao', rescisao), param);\r\n}\r\n\r\nexport function rescisaoCalculada(rescisao: Rescisao, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/rescisaoCalculada', rescisao), param);\r\n}\r\n\r\nexport function simularRescisao(rescisao: Rescisao, param: AxiosParam<SimulacaoRescisao>) {\r\n  send(getService().post<SimulacaoRescisao>('/simularRescisao', rescisao), param);\r\n}\r\n\r\nexport function apagarRescisao(idRescisao: number, param: AxiosParam<void>) {\r\n  send(getService().delete<void>(`/apagarRescisao/${idRescisao}`), param);\r\n}\r\n\r\nexport function validarEventoVinculo(vinculoEvento: VinculoEvento, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarEventoVinculo', vinculoEvento), param);\r\n}\r\n\r\nexport function transferirVinculo(transferencia: TransferenciaVinculo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/transferirVinculo', transferencia), param);\r\n}\r\n\r\nexport function reintegrarVinculo(reintegracao: ReintegracaoVinculo, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/reintegrarVinculo', reintegracao), param);\r\n}\r\n\r\nexport function criarEventosPadroes(grupo: GrupoEvento, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/criarEventosPadroes', grupo), param);\r\n}\r\n\r\nexport function gerarManad(manadParam: ManadParam, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/gerarManad', manadParam), param);\r\n}\r\n\r\nexport function gerarRais(raisParam: RaisParam, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/gerarRais', raisParam), param);\r\n}\r\n\r\nexport function gerarDirf(dirfParam: DirfParam, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/gerarDirf', dirfParam), param);\r\n}\r\nexport function gerarCaged(cagedParam: CagedParam, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/gerarCaged', cagedParam), param);\r\n}\r\n","import { Basic } from 'summer';\r\nimport { CepBairro } from './cepBairro';\r\nimport { CepLocalidade } from './cepLocalidade';\r\nimport { CepTitulo } from './cepTitulo';\r\nimport { CepUF } from './cepUF';\r\n\r\nexport interface CepLogradouro extends Basic {\r\n  bairro?: CepBairro;\r\n  cep?: string;\r\n  complemento?: string;\r\n  localidade?: CepLocalidade;\r\n  nome?: string;\r\n  titulo?: CepTitulo;\r\n  uf?: CepUF;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.ceplogradouro';\r\n","import { Basic } from 'summer';\r\n\r\nexport interface CepTitulo extends Basic {\r\n  nome?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.ceptitulo';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { SearchFilterProps } from '../../../../hooks/useSearchFilter';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepBairro';\r\nimport { CLASS_NAME as CLASS_NAME_LOCALIDADE } from '../../../../models/dtos/ger/cepLocalidade';\r\nimport { CLASS_NAME as CLASS_NAME_UF } from '../../../../models/dtos/ger/cepUF';\r\n\r\nexport interface CepBairroISProps extends InputProps {\r\n  searchFilter?: SearchFilterProps;\r\n}\r\n\r\nconst CepBairroIS: FC<CepBairroISProps> = props => {\r\n  const searchExpressionsFull = defaultExpressions => {\r\n    let expressions = [];\r\n\r\n    if (props.searchFilter) {\r\n      const localidade = props.searchFilter.getFilter(CLASS_NAME_LOCALIDADE);\r\n      const uf = props.searchFilter.getFilter(CLASS_NAME_UF);\r\n      if (localidade) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'localidade.id',\r\n            value: localidade.id,\r\n          },\r\n        ];\r\n      } else if (uf) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'localidade.uf.id',\r\n            value: uf.id,\r\n          },\r\n        ];\r\n      }\r\n    }\r\n\r\n    if (expressions.length > 0) {\r\n      expressions[0].expressions = defaultExpressions;\r\n    } else {\r\n      expressions.push(...defaultExpressions);\r\n    }\r\n\r\n    return expressions;\r\n  };\r\n\r\n  const onChange = value => {\r\n    if (props.searchFilter) {\r\n      props.searchFilter.setFilter(CLASS_NAME, value);\r\n    }\r\n    if (props.onChange) {\r\n      props.onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'bairro',\r\n            text: 'Nome do Bairro',\r\n          },\r\n          {\r\n            dataField: 'localidade.nome',\r\n            text: 'Nome da cidade',\r\n          },\r\n          {\r\n            dataField: 'localidade.uf.sigla',\r\n            text: 'Sigla da UF',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressionsFull,\r\n        searchViewId: 'CepBairroSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Bairro'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Bairro'}\r\n      type={InputType.INPUT_SEARCH}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepBairroIS;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepTitulo';\r\n\r\nconst CepTituloIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'CepTituloSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Tipo'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Tipo de Logradouro'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepTituloIS;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CepManagerProps } from '../../../../hooks/useCepManager';\r\nimport { SearchFilterProps } from '../../../../hooks/useSearchFilter';\r\nimport { CLASS_NAME as CLASS_NAME_BAIRRO } from '../../../../models/dtos/ger/cepBairro';\r\nimport { CLASS_NAME as CLASS_NAME_LOCALIDADE } from '../../../../models/dtos/ger/cepLocalidade';\r\nimport { CepLogradouro, CLASS_NAME } from '../../../../models/dtos/ger/cepLogradouro';\r\nimport { CLASS_NAME as CLASS_NAME_UF } from '../../../../models/dtos/ger/cepUF';\r\n\r\nexport interface CepLogradouroProps {\r\n  cepManager?: CepManagerProps;\r\n  searchFilter?: SearchFilterProps;\r\n}\r\n\r\nconst CepLogradouroIS: FC<InputProps & CepLogradouroProps> = props => {\r\n  const searchExpressionsFull = defaultExpressions => {\r\n    let expressions = [];\r\n\r\n    if (props.searchFilter) {\r\n      const bairro = props.searchFilter.getFilter(CLASS_NAME_BAIRRO);\r\n      const localidade = props.searchFilter.getFilter(CLASS_NAME_LOCALIDADE);\r\n      const uf = props.searchFilter.getFilter(CLASS_NAME_UF);\r\n      if (bairro) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'bairro.id',\r\n            value: bairro.id,\r\n          },\r\n        ];\r\n      } else if (localidade) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'localidade.id',\r\n            value: localidade.id,\r\n          },\r\n        ];\r\n      } else if (uf) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'uf.id',\r\n            value: uf.id,\r\n          },\r\n        ];\r\n      }\r\n    }\r\n\r\n    if (expressions.length > 0) {\r\n      expressions[0].expressions = defaultExpressions;\r\n    } else {\r\n      expressions.push(...defaultExpressions);\r\n    }\r\n\r\n    return expressions;\r\n  };\r\n\r\n  const onChangeHandle = (result: CepLogradouro) => {\r\n    if (props.cepManager) {\r\n      props.cepManager.manage(result);\r\n    }\r\n    if (props.searchFilter) {\r\n      props.searchFilter.setFilter(CLASS_NAME, result);\r\n    }\r\n    if (props.onChange) {\r\n      props.onChange(result);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      onChange={onChangeHandle}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'bairro.bairro',\r\n            text: 'Bairro',\r\n          },\r\n          {\r\n            dataField: 'cep',\r\n            text: 'CEP',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressionsFull,\r\n        searchViewId: 'CepLogradouroSearchView',\r\n      }}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepLogradouroIS;\r\n","import { UseFormProps } from 'summer';\r\nimport { CepLogradouro } from '../models/dtos/ger/cepLogradouro';\r\n\r\nexport interface CepManagerOptions {\r\n  bairro?: boolean | string;\r\n  cep?: boolean | string;\r\n  localidade?: boolean | string;\r\n  nome?: boolean | string;\r\n  titulo?: boolean | string;\r\n  uf?: boolean | string;\r\n}\r\n\r\nexport interface CepManagerProps {\r\n  manage: (logradouro: CepLogradouro) => void;\r\n  reset: () => void;\r\n}\r\n\r\nconst useCepManager = (formProps: UseFormProps, props: CepManagerOptions): CepManagerProps => {\r\n  const getProp = (name: string): string => {\r\n    let result = null;\r\n\r\n    if (props[name] !== undefined) {\r\n      result = typeof props[name] === 'boolean' ? name : props[name];\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const fillForm = (logradouro: CepLogradouro) => {\r\n    const keyList = Object.keys(props);\r\n    keyList.forEach(key => {\r\n      const name = getProp(key);\r\n      if (name) {\r\n        formProps.setValue(name, logradouro[key]);\r\n      }\r\n    });\r\n  };\r\n\r\n  const clearForm = () => {\r\n    fillForm({\r\n      bairro: null,\r\n      cep: null,\r\n      localidade: null,\r\n      nome: null,\r\n      titulo: null,\r\n      uf: null,\r\n    });\r\n  };\r\n\r\n  return {\r\n    manage: (logradouro: CepLogradouro) => {\r\n      if (logradouro) {\r\n        fillForm(logradouro);\r\n      } else {\r\n        clearForm();\r\n      }\r\n    },\r\n    reset: () => clearForm(),\r\n  };\r\n};\r\n\r\nexport default useCepManager;\r\n","import { BasicEnum } from '../models/enumerated/basicEnum';\r\n\r\ninterface EnumWithExtraFields extends BasicEnum {\r\n  extraFields?: any;\r\n}\r\n\r\nconst EnumUtil = {\r\n  contains: (list: EnumWithExtraFields[], search: EnumWithExtraFields | string, extraField: string = null) =>\r\n    EnumUtil.find(list, search, extraField) !== undefined,\r\n  find: (list: EnumWithExtraFields[], search: EnumWithExtraFields | string, extraField: string = null) => {\r\n    let result;\r\n\r\n    if (search) {\r\n      result = list.find(item => (extraField ? item.extraFields[extraField] : item.value) === (typeof search === 'object' ? search.value : search));\r\n    }\r\n\r\n    return result;\r\n  },\r\n};\r\n\r\nexport default EnumUtil;\r\n","const tiposTelefone = {\r\n  tipoTelefoneCelular: 'Celular',\r\n  tipoTelefoneComercial: 'Comercial',\r\n  tipoTelefoneFax: 'Fax',\r\n  tipoTelefonePrincipal: 'Principal',\r\n  tipoTelefoneResidencial: 'Residencial',\r\n};\r\n\r\nexport function tipoTelefoneSelection(tipoTelefone: any): any {\r\n  const resultado = [];\r\n  // tslint:disable-next-line:forin\r\n  for (const campo in tiposTelefone) {\r\n    // tslint:disable-next-line:no-unused-expression\r\n    tipoTelefone[campo] && resultado.push(tiposTelefone[campo]);\r\n  }\r\n  return resultado.join(', ');\r\n}\r\n\r\nexport function tipoTelefoneFormatter(cell, row) {\r\n  return tipoTelefoneSelection(row);\r\n}\r\n","export const CASADO = { value: 'CASADO', label: 'Casado' };\r\nexport const SOLTEIRO = { value: 'SOLTEIRO', label: 'Solteiro' };\r\nexport const VIUVO = { value: 'VIUVO', label: 'Viúvo' };\r\nexport const SEPARADO = { value: 'SEPARADO', label: 'Separado' };\r\nexport const DIVORCIADO = { value: 'DIVORCIADO', label: 'Divorciado' };\r\nexport const MARITAL = { value: 'MARITAL', label: 'Marital' };\r\n\r\nexport const ESTADO_CIVIL_ENUM_VALUES = [CASADO, SOLTEIRO, VIUVO, SEPARADO, DIVORCIADO, MARITAL];\r\n\r\nexport const CASADO_NUMBER = { value: 1, label: 'Casado' };\r\nexport const SOLTEIRO_NUMBER = { value: 2, label: 'Solteiro' };\r\nexport const VIUVO_NUMBER = { value: 3, label: 'Viúvo' };\r\nexport const SEPARADO_NUMBER = { value: 4, label: 'Separado' };\r\nexport const DIVORCIADO_NUMBER = { value: 5, label: 'Divorciado' };\r\nexport const MARITAL_NUMBER = { value: 6, label: 'Marital' };\r\n\r\nexport const ESTADO_CIVIL_NUMBER_ENUM_VALUES = [CASADO_NUMBER, SOLTEIRO_NUMBER, VIUVO_NUMBER, SEPARADO_NUMBER, DIVORCIADO_NUMBER, MARITAL_NUMBER];\r\n","export const BRASILEIRO = { value: 'BRASILEIRO', label: 'Brasileiro', codIBGE: '1058' };\r\nexport const NATURALIZADO = { value: 'NATURALIZADO', label: 'Naturalizado', codIBGE: '' };\r\nexport const ARGENTINO = { value: 'ARGENTINO', label: 'Argentino', codIBGE: '639' };\r\nexport const BOLIVIANO = { value: 'BOLIVIANO', label: 'Boliviano', codIBGE: '973' };\r\nexport const CHILENO = { value: 'CHILENO', label: 'Chileno', codIBGE: '1589' };\r\nexport const PARAGUAIO = { value: 'PARAGUAIO', label: 'Paraguaio', codIBGE: '5860' };\r\nexport const URUGUAIO = { value: 'URUGUAIO', label: 'Uruguaio', codIBGE: '8451' };\r\nexport const ALEMAO = { value: 'ALEMAO', label: 'Alemão', codIBGE: '230' };\r\nexport const BELGA = { value: 'BELGA', label: 'Belga', codIBGE: '876' };\r\nexport const BRITANICO = { value: 'BRITANICO', label: 'Britânico', codIBGE: '826' };\r\nexport const CANADENSE = { value: 'CANADENSE', label: 'Canadense', codIBGE: '1490' };\r\nexport const ESPANHOL = { value: 'ESPANHOL', label: 'Espanhol', codIBGE: '2453' };\r\nexport const NORTE_AMERICANO = { value: 'NORTE_AMERICANO', label: 'Norte Americano', codIBGE: '840' };\r\nexport const FRANCES = { value: 'FRANCES', label: 'Francês', codIBGE: '2755' };\r\nexport const SUICO = { value: 'SUICO', label: 'Suiço', codIBGE: '7676' };\r\nexport const ITALIANO = { value: 'ITALIANO', label: 'Italiano', codIBGE: '3867' };\r\nexport const JAPONES = { value: 'JAPONES', label: 'Japonês', codIBGE: '3999' };\r\nexport const CHINES = { value: 'CHINES', label: 'Chinês', codIBGE: '156' };\r\nexport const COREANO = { value: 'COREANO', label: 'Coreano', codIBGE: '410' };\r\nexport const PORTUGUES = { value: 'PORTUGUES', label: 'Português', codIBGE: '620' };\r\nexport const HAITIANO = { value: 'HAITIANO', label: 'Haitiana', codIBGE: '332' };\r\nexport const OUTROS_LATINO = { value: 'OUTROS_LATINO', label: 'Outros Latino', codIBGE: '' };\r\nexport const OUTROS_ASIATICOS = { value: 'OUTROS_ASIATICOS', label: 'Outros Asiáticos', codIBGE: '' };\r\nexport const OUTROS = { value: 'OUTROS', label: 'Outros', codIBGE: '' };\r\n\r\nexport const NACIONALIDADE_ENUM_VALUES = [\r\n  BRASILEIRO,\r\n  NATURALIZADO,\r\n  ARGENTINO,\r\n  BOLIVIANO,\r\n  CHILENO,\r\n  PARAGUAIO,\r\n  URUGUAIO,\r\n  ALEMAO,\r\n  BELGA,\r\n  BRITANICO,\r\n  CANADENSE,\r\n  ESPANHOL,\r\n  NORTE_AMERICANO,\r\n  FRANCES,\r\n  SUICO,\r\n  ITALIANO,\r\n  JAPONES,\r\n  CHINES,\r\n  COREANO,\r\n  PORTUGUES,\r\n  HAITIANO,\r\n  OUTROS_LATINO,\r\n  OUTROS_ASIATICOS,\r\n  OUTROS,\r\n];\r\n"],"sourceRoot":""}
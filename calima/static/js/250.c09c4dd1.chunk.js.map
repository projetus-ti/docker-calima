{"version":3,"sources":["dependencies/empresaDependency.ts","dependencies/empresaMCGDependency.ts","views/components/mcg/planoContaIS/PlanoContaIS.tsx","models/dtos/ger/planoConta.ts","models/dtos/mcg/contaHistorico.ts","views/pages/mcg/historicoExtratoPlanoConta/HistoricoExtratoPlanoContaEditView.tsx"],"names":["hasEmpresa","globalParameter","result","empresa","__webpack_require__","d","__webpack_exports__","hasEmpresaMCG","empresaMCG","PlanoContaIS","props","globalReducer","useSelector","state","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_3__","Object","assign","isPrependLabel","searchViewProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","filtroContaResultado","hideExtraFields","useDefaultSelectRow","inputSearchProps","columns","dataField","text","dtoClassName","CLASS_NAME","searchExpressions","expressions","analitica","alias","conditionalGroup","fieldName","value","sintetica","push","idGrupoPlanoConta","grupoPlanoConta","id","forEach","filtro","searchViewId","label","placeholder","type","InputType","INPUT_SEARCH","HistoricoExtratoPlanoContaEditView","_useForm","useForm","mode","reset","formProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","useEffect","setTimeout","historicoExtrato","selectedItem","react__WEBPACK_IMPORTED_MODULE_2___default","summer__WEBPACK_IMPORTED_MODULE_7__","useGlobalParameter","title","dependencies","editViewProps","hidden","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","_components_mcg_planoContaIS_PlanoContaIS__WEBPACK_IMPORTED_MODULE_11__","validation","required","maxLength","tooltipProps","message"],"mappings":"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","file":"static/js/250.c09c4dd1.chunk.js","sourcesContent":["import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMCG(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMCG) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o módulo Contábil. Para configurá-la acesse:\\n' +\r\n      'Módulo Contábil > Manutenção > Configurações > Empresa.';\r\n  }\r\n  return result;\r\n}\r\n","import React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/planoConta';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\nexport interface PlanoContaInputSearchProps extends InputProps {\r\n  analitica?: boolean;\r\n  sintetica?: boolean;\r\n  idGrupoPlanoConta?: number;\r\n  filtroContaResultado?: SearchExpression[];\r\n}\r\n\r\nconst PlanoContaIS: FC<PlanoContaInputSearchProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  function getSearchExpression(): SearchExpression[] {\r\n    let expressions = [];\r\n    if (props.analitica) {\r\n      expressions = [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'analitica',\r\n          value: true,\r\n        },\r\n      ];\r\n    }\r\n    if (props.sintetica) {\r\n      expressions = [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'analitica',\r\n          value: false,\r\n        },\r\n      ];\r\n    }\r\n\r\n    expressions.push({\r\n      alias: 'g',\r\n      conditionalGroup: 'g_',\r\n      fieldName: 'grupoPlanoConta.id',\r\n      value: props.idGrupoPlanoConta || globalReducer.globalParameter.grupoPlanoConta.id,\r\n    });\r\n\r\n    if (props.filtroContaResultado) {\r\n      props.filtroContaResultado.forEach(filtro => {\r\n        expressions.push(filtro);\r\n      });\r\n    }\r\n\r\n    return expressions;\r\n  }\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      searchViewProps={{\r\n        ...props.searchViewProps,\r\n        filtroContaResultado: props.filtroContaResultado,\r\n        hideExtraFields: true,\r\n        useDefaultSelectRow: true,\r\n      }}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'conta',\r\n            text: 'Conta',\r\n          },\r\n          {\r\n            dataField: 'analitica',\r\n            text: 'Analítica',\r\n          },\r\n          {\r\n            dataField: 'codigoReduzido',\r\n            text: 'C.R.',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressions: getSearchExpression,\r\n        searchViewId: 'PlanoContaSearchView',\r\n      }} // TODO Implementar as regras do IS\r\n      label={props.label ? props.label : 'Plano de Contas'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Plano de Contas'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PlanoContaIS;\r\n","import { Basic } from 'summer';\r\nimport { PlanoContaMCG } from '../mcg/planoContaMCG';\r\nimport { SaldoAnterior } from '../mcg/saldoAnterior';\r\nimport { PlanoContaMCP } from '../mcp/planoContaMCP';\r\nimport { GrupoPlanoConta } from './grupoPlanoConta';\r\n\r\nexport interface PlanoConta extends Basic {\r\n  analitica?: boolean;\r\n  conta?: string;\r\n  codigoReduzido?: number;\r\n  descricao?: string;\r\n  grupoPlanoConta?: GrupoPlanoConta;\r\n  mcgPlanoConta?: PlanoContaMCG;\r\n  mcpPlanoConta?: PlanoContaMCP;\r\n  saldoAnterior?: SaldoAnterior;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.planoconta';\r\n","import { Basic } from 'summer';\r\nimport { Empresa } from '../ger/empresa';\r\nimport { PlanoConta } from '../ger/planoConta';\r\n\r\nexport interface ContaHistorico extends Basic {\r\n  empresa?: Empresa;\r\n  historicoExtrato?: string;\r\n  planoConta?: PlanoConta;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mcg.model.dto.contahistorico';\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { EditForm, EditViewProps, InputGroupInline, WindowComponent } from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../dependencies/empresaMCGDependency';\r\nimport { CLASS_NAME, ContaHistorico } from '../../../../models/dtos/mcg/contaHistorico';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport PlanoContaIS from '../../../components/mcg/planoContaIS/PlanoContaIS';\r\n\r\ninterface HistoricoExtratoPlanoContaEditView extends EditViewProps<ContaHistorico> {}\r\n\r\ninterface OpenFromFechamentoRestauracao {\r\n  executeSearch: true;\r\n}\r\n\r\nconst HistoricoExtratoPlanoContaEditView: FC<HistoricoExtratoPlanoContaEditView & RouteComponentProps & OpenFromFechamentoRestauracao> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const { reset, ...formProps } = useForm<ContaHistorico>({ mode: 'onBlur' });\r\n  useEffect(\r\n    () => {\r\n      if (globalReducer.globalParameter.empresa !== null) {\r\n        const { empresa } = globalReducer.globalParameter;\r\n        setTimeout(() => {\r\n          reset({\r\n            empresa: {\r\n              id: empresa.id,\r\n            },\r\n            historicoExtrato: props.selectedItem,\r\n          });\r\n        }, 500);\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  return (\r\n    <WindowComponent\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      title=\"Histórico - Plano Contas Extratos\"\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMCG(globalReducer.globalParameter)]}\r\n    >\r\n      <EditForm formProps={formProps} editViewProps={props} dtoClassName={CLASS_NAME}>\r\n        <InputGroupInline formProps={formProps} id=\"empresa.id\" hidden={true} />\r\n        <Row>\r\n          <Col>\r\n            <PlanoContaIS id=\"planoConta\" formProps={{ ...formProps, validation: { required: true } }} />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true, maxLength: 500 } }}\r\n              isPrependLabel={true}\r\n              id=\"historicoExtrato\"\r\n              label=\"Histórico de Extrato\"\r\n              placeholder=\"Informe o Histórico de Extrato\"\r\n              tooltipProps={{\r\n                message: 'Informar a parte fixa do histórico, com isso os históricos que possuem a parte fixa será relacionada a mesma conta. ',\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </EditForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default HistoricoExtratoPlanoContaEditView;\r\n"],"sourceRoot":""}
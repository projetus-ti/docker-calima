{"version":3,"sources":["models/dtos/ger/listaServico.ts","views/pages/mho/listaServico/ListaServicoEditView.tsx","dependencies/empresaDependency.ts","dependencies/grupoEmpresaConfigDependency.ts"],"names":["__webpack_require__","d","__webpack_exports__","CLASS_NAME","ListaServicoEditView","props","selectedItem","getSelectedItem","globalReducer","useSelector","state","formProps","useForm","defaultValues","mode","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_6__","title","dependencies","hasEmpresa","globalParameter","hasGrupoEmpresaConfig","editViewProps","dtoClassName","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","Object","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","validation","maxLength","required","id","isPrependLabel","inputProps","autoFocus","label","placeholder","type","InputType","NUMBER","result","empresa","grupoEmpresaRaiz","grupoEmpresaConfig","grupoEmpresa"],"mappings":"6FAOAA,EAAAC,EAAAC,EAAA,sBAAAC,IACO,MAAMA,EAAa,yMCyDXC,UAnDmEC,KAChF,MAAMC,EAAeC,aAAgBF,GAC/BG,EAAgBC,YAAmCC,GAASA,EAAMF,eAClEG,EAAYC,YAAsB,CAAEC,cAAeP,EAAcQ,KAAM,WAE7E,OACEC,EAAAC,EAAAC,cAACC,EAAA,GAAD,CACEC,MAAM,2CACNC,aAAc,CAAC,IAAMC,YAAWb,EAAcc,iBAAkB,IAAMC,YAAsBf,EAAcc,mBAE1GP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUP,UAAWA,EAAWa,cAAenB,EAAOoB,aAActB,KAClEY,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEP,UAASiB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAOjB,GAAP,IAAkBmB,WAAY,CAAEC,UAAW,GAAIC,UAAU,KAClEC,GAAG,SACHC,gBAAgB,EAChBC,WAAY,CAAEC,WAAW,GACzBC,MAAM,YACNC,YAAY,yCAIlBvB,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEP,UAASiB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAOjB,GAAP,IAAkBmB,WAAY,CAAEC,UAAW,OACpDE,GAAG,YACHC,gBAAgB,EAChBG,MAAM,kBACNC,YAAY,0CAIlBvB,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEP,UAASiB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAOjB,GAAP,IAAkBmB,WAAY,CAAEC,UAAW,KACpDE,GAAG,OACHC,gBAAgB,EAChBG,MAAM,OACNC,YAAY,kBACZC,KAAMC,IAAUC,iDCtDvB,SAASpB,EAAWC,GACzB,IAAIoB,EAAS,KAIb,OAHKpB,EAAgBqB,UACnBD,EAAS,kDAEJA,EALT1C,EAAAC,EAAAC,EAAA,sBAAAmB,sCCAO,SAASE,EAAsBD,GACpC,IAAIoB,EAAS,KAcb,OAPGpB,EAAgBqB,SAChBrB,EAAgBqB,QAAQC,iBAAiBC,oBACzCvB,EAAgBqB,QAAQG,aAAaD,qBAEtCH,EARA,oLAWKA,EAfT1C,EAAAC,EAAAC,EAAA,sBAAAqB","file":"static/js/340.28f80872.chunk.js","sourcesContent":["import { Basic } from 'summer';\r\n\r\nexport interface ListaServico extends Basic {\r\n  codigo?: string;\r\n  descricao?: string;\r\n  cnae?: string;\r\n}\r\n// TODO REACT - Sem DTO\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.listaservico';\r\n","import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { EditForm, EditViewProps, getSelectedItem, InputGroupInline, InputType, WindowComponent } from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasGrupoEmpresaConfig } from '../../../../dependencies/grupoEmpresaConfigDependency';\r\nimport { CLASS_NAME, ListaServico } from '../../../../models/dtos/ger/listaServico';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\ninterface ListaServicoEditViewProps extends EditViewProps<ListaServico> {}\r\n\r\nconst ListaServicoEditView: FC<ListaServicoEditViewProps & RouteComponentProps> = props => {\r\n  const selectedItem = getSelectedItem(props);\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const formProps = useForm<ListaServico>({ defaultValues: selectedItem, mode: 'onBlur' });\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Manutenção de Lista de Serviços\"\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasGrupoEmpresaConfig(globalReducer.globalParameter)]}\r\n    >\r\n      <EditForm formProps={formProps} editViewProps={props} dtoClassName={CLASS_NAME}>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { maxLength: 10, required: true } }}\r\n              id=\"codigo\"\r\n              isPrependLabel={true}\r\n              inputProps={{ autoFocus: true }}\r\n              label=\"Código\"\r\n              placeholder=\"Informe o Código do Serviço.\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { maxLength: 100 } }}\r\n              id=\"descricao\"\r\n              isPrependLabel={true}\r\n              label=\"Descrição\"\r\n              placeholder=\"Informe a Descrição da Lista.\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { maxLength: 7 } }}\r\n              id=\"cnae\"\r\n              isPrependLabel={true}\r\n              label=\"CNAE\"\r\n              placeholder=\"Informe o CNAE.\"\r\n              type={InputType.NUMBER}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </EditForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default ListaServicoEditView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasGrupoEmpresaConfig(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n\r\n  const msg: string =\r\n    'O Grupo de empresas não está configurado para a empresa selecionada. Para configurar acesse:\\n' +\r\n    'Modulo Principal > Manutenção > Configurações > Grupo de Empresa';\r\n\r\n  if (\r\n    !globalParameter.empresa ||\r\n    !globalParameter.empresa.grupoEmpresaRaiz.grupoEmpresaConfig ||\r\n    !globalParameter.empresa.grupoEmpresa.grupoEmpresaConfig\r\n  ) {\r\n    result = msg;\r\n  }\r\n\r\n  return result;\r\n}\r\n"],"sourceRoot":""}
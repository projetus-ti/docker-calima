{"version":3,"sources":["views/pages/mfp/report/cartaSuspensao/cartaSuspensaoRV.ts","views/pages/mfp/report/cartaSuspensao/CartaSuspensaoReportView.tsx","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","views/components/mfp/customizacaoTermoIS/CustomizacaoTermoIS.tsx","models/dtos/mfp/trabalhadorExample.ts","views/components/mfp/trabalhadorIS/TrabalhadorIS.tsx"],"names":["DEFAULT_VALUES","Object","objectSpread2","getDefaultReportBasicValues","DEFAULT_OPTIONS","getDefaultReportViewOptions","exibirConfiguracaoDadosEmpresa","CartaSuspensaoReportView","props","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","objectWithoutProperties","react_default","a","createElement","summer_esm","title","wikiId","ReportForm","assign","localStorageKey","routeProps","reportBasicValues","reportViewOptions","validateExtras","erros","moment","getValues","dataFimSuspensao","isSameOrBefore","dataInicioSuspensao","push","trabalhadorResponsavel","cpf","trabalhadorSuspenso","Row","Col","CustomizacaoTermoIS","labelWidth","validation","required","label","apenasCartaSuspensao","placeholder","id","isPrependLabel","inputSearchProps","size","TrabalhadorIS","tooltipProps","message","selectProps","isMulti","type","InputType","DATE","__webpack_require__","d","__webpack_exports__","NATUREZA","value","SALDO_REPORT_ENUM","EmpresaIS","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","empresasSelecionadas","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","gerarCabecalhoPadraoAdministradora","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","virtualization","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","errors","register","setValue","triggerValidation","handleCancel","currentItem","currentValues","parentObject","EnvioEmail","Fragment","sort","detailView","keyField","propName","className","CustomInput","name","innerRef","maxLength","TEXT_AREA","ReportInputs","globalReducer","useSelector","state","_useState","useState","_useState2","slicedToArray","activeTab","setActiveTab","useEffect","_props$reportViewOpti","printingTypes","resetObject","length","idGerEmpresa","globalParameter","empresa","current","currentMomentDate","endDate","dtInicial","formatDate","toDate","DATES","dtFinal","endOf","REFERENCE","referenciaInicial","format","REF_PATTERN","REFERENCES","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dtInicialRequired","dateComponent","datesComponent","dtFinalRequired","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","NUMBER","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","inputProps","disabled","gerarPorEmpresas","style","marginBottom","segmentacaoFolhaComponent","exibirSegmentacaoFolha","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","exibirImprimirValoresColoridos","inputDropDownProps","optionsProvider","isClearable","DROP_DOWN","firstOpen","extraConfigOpened","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","hidden","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","params","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history","searchExpressions","apenasAbonoPecuniario","alias","conditionalGroup","fieldName","ABONO_PECUNIARIO","apenasTipo","AVISO_PREVIO_TRABALHADO","AVISO_PREVIO_INDENIZADO","PEDIDO_DEMISSAO","apenasAcordo","AVISO_PREVIO_ACORDO_TRABALHADO","AVISO_PREVIO_ACORDO_INDENIZADO","PEDIDO_DEMISSAO_ACORDO","apenasTermosCompensacaoHoras","TERMO_COMPENSACAO_HORAS","apenasTermoAditivo","TERMO_ADITIVO","apenasCartaRecomendacao","CARTA_RECOMENDACAO","apenasAvisoFerias","AVISO_FERIAS","apenasReciboEntregaCtps","RECIBO_CARTEIRA_DE_TRABALHO_ENTREGA","apenasReciboDevolucaoCtps","RECIBO_CARTEIRA_DE_TRABALHO_DEVOLUCAO","apenasReciboCestaBasica","RECIBO_CESTA_BASICA","apenasReciboValeTransporte","VALE_TRANSPORTE_RECIBO","apenasDeclaracaoOpcaoFgts","DECLARACAO_OPCAO_FGTS","apenasValeAlimentacaoRefeicaoRecibo","VALE_ALIMENTACAO_RECIBO","VALE_REFEICAO_RECIBO","apenasProrrogacaoHoraExtra","ACORDO_PRORROGACAO_HORA_EXTRA","CARTA_SUSPENSAO","apenasCartaPreposicao","CARTA_PREPOSICAO","apenasMsgContraCheque","MSG_CONTRA_CHEQUE","apenasMsgAniversario","MSG_ANIVERSARIO","apenasReciboProLabore","RECIBO_PRO_LABORE","summer__WEBPACK_IMPORTED_MODULE_3__","result","empresaMFP"],"mappings":"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","file":"static/js/144.fe299ad4.chunk.js","sourcesContent":["import { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { Responsavel } from '../../../../../models/dtos/ger/responsavel';\r\nimport { CustomizacaoTermos } from '../../../../../models/dtos/mfp/customizacaoTermos';\r\nimport { TrabalhadorExample } from '../../../../../models/dtos/mfp/trabalhadorExample';\r\n\r\nexport interface CartaSuspensaoRV extends ReportBasicValues {\r\n  trabalhadorSuspenso?: TrabalhadorExample;\r\n  trabalhadorResponsavel?: Responsavel;\r\n  termo?: CustomizacaoTermos;\r\n  dataRecebimentoCarta?: string;\r\n  dataInicioSuspensao?: string;\r\n  dataFimSuspensao?: string;\r\n  quantidadeDias?: number;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'cartasuspensaorv';\r\nexport const REPORT_EVENT: string = 'printCartaSuspensao';\r\nexport const REPORT_TITLE: string = 'Carta de Suspensão';\r\n","import moment from 'moment';\r\nimport React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { InputGroupInline, InputType, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { getDefaultReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport CustomizacaoTermoIS from '../../../../components/mfp/customizacaoTermoIS/CustomizacaoTermoIS';\r\nimport TrabalhadorIS from '../../../../components/mfp/trabalhadorIS/TrabalhadorIS';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { CartaSuspensaoRV, CLASS_KEY, REPORT_EVENT, REPORT_TITLE } from './cartaSuspensaoRV';\r\n\r\nconst DEFAULT_VALUES: CartaSuspensaoRV = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT),\r\n  exibirConfiguracaoDadosEmpresa: false,\r\n};\r\n\r\nconst CartaSuspensaoReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const { handleSubmit, ...formProps } = useForm<CartaSuspensaoRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n  const labelWidth = 200;\r\n\r\n  const validateExtras = () => {\r\n    const erros = [];\r\n\r\n    if (\r\n      moment(formProps.getValues().dataFimSuspensao, 'DD/MM/YYYY').isSameOrBefore(moment(formProps.getValues().dataInicioSuspensao, 'DD/MM/YYYY'))\r\n    ) {\r\n      erros.push('A Data Início deve ser anterior a Data Fim.');\r\n    }\r\n\r\n    if (formProps.getValues().trabalhadorResponsavel.cpf === formProps.getValues().trabalhadorSuspenso.cpf) {\r\n      erros.push('O Responsável selecionado não pode ser igual ao Trabalhador Suspenso.');\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  return (\r\n    <WindowComponent title=\"Carta de Suspensão\" wikiId={1926}>\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n        validateExtras={validateExtras}\r\n      >\r\n        <Row>\r\n          <Col>\r\n            <CustomizacaoTermoIS\r\n              labelWidth={labelWidth}\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              label=\"Termo\"\r\n              apenasCartaSuspensao={true}\r\n              placeholder=\"Selecione o Termo\"\r\n              id=\"termo\"\r\n              isPrependLabel={true}\r\n              inputSearchProps={{ size: 'xl' }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <TrabalhadorIS\r\n              labelWidth={labelWidth}\r\n              id=\"trabalhadorSuspenso\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              isPrependLabel={true}\r\n              label=\"Trabalhador Suspenso\"\r\n              placeholder=\"Selecione o trabalhador suspenso\"\r\n              tooltipProps={{ message: 'Trabalhador Suspenso da Carta de Suspensão.' }}\r\n              inputSearchProps={{ selectProps: { isMulti: false } }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <TrabalhadorIS\r\n              labelWidth={labelWidth}\r\n              id=\"trabalhadorResponsavel\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              isPrependLabel={true}\r\n              label=\"Responsável\"\r\n              placeholder=\"Selecione o responsável\"\r\n              tooltipProps={{ message: 'Responsável da Carta de Suspensão.' }}\r\n              inputSearchProps={{ selectProps: { isMulti: false } }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              labelWidth={labelWidth}\r\n              id=\"dataInicioSuspensao\"\r\n              label=\"Início da Suspensão\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              isPrependLabel={true}\r\n              type={InputType.DATE}\r\n              tooltipProps={{ message: 'Data de início da suspensão do trabalhador da carta de suspensão' }}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <InputGroupInline\r\n              labelWidth={labelWidth}\r\n              id=\"dataFimSuspensao\"\r\n              label=\"Fim da Suspensão\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              isPrependLabel={true}\r\n              type={InputType.DATE}\r\n              tooltipProps={{ message: 'Data de fim da suspensão do trabalhador da carta de suspensão' }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </ReportForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default CartaSuspensaoReportView;\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { InputSearchProps } from 'summer/dist/views/components/inputSearch/InputSearch';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mfp/customizacaoTermos';\r\nimport {\r\n  ABONO_PECUNIARIO,\r\n  ACORDO_PRORROGACAO_HORA_EXTRA,\r\n  AVISO_FERIAS,\r\n  AVISO_PREVIO_ACORDO_INDENIZADO,\r\n  AVISO_PREVIO_ACORDO_TRABALHADO,\r\n  AVISO_PREVIO_INDENIZADO,\r\n  AVISO_PREVIO_TRABALHADO,\r\n  CARTA_PREPOSICAO,\r\n  CARTA_RECOMENDACAO,\r\n  CARTA_SUSPENSAO,\r\n  DECLARACAO_OPCAO_FGTS,\r\n  MSG_ANIVERSARIO,\r\n  MSG_CONTRA_CHEQUE,\r\n  PEDIDO_DEMISSAO,\r\n  PEDIDO_DEMISSAO_ACORDO,\r\n  RECIBO_CARTEIRA_DE_TRABALHO_DEVOLUCAO,\r\n  RECIBO_CARTEIRA_DE_TRABALHO_ENTREGA,\r\n  RECIBO_CESTA_BASICA,\r\n  RECIBO_PRO_LABORE,\r\n  TERMO_ADITIVO,\r\n  TERMO_COMPENSACAO_HORAS,\r\n  VALE_ALIMENTACAO_RECIBO,\r\n  VALE_REFEICAO_RECIBO,\r\n  VALE_TRANSPORTE_RECIBO,\r\n} from '../../../../models/enumerated/mfp/customizacaoTermosTipoEnum';\r\n\r\nexport interface CustomizacaoTermoSearchViewProps extends InputProps {\r\n  apenasAbonoPecuniario?: boolean;\r\n  apenasTipo?: boolean;\r\n  apenasAcordo?: boolean;\r\n  apenasTermosCompensacaoHoras?: boolean;\r\n  apenasTermoAditivo?: boolean;\r\n  apenasCartaRecomendacao?: boolean;\r\n  apenasAvisoFerias?: boolean;\r\n  apenasReciboEntregaCtps?: boolean;\r\n  apenasReciboDevolucaoCtps?: boolean;\r\n  apenasReciboCestaBasica?: boolean;\r\n  apenasReciboValeTransporte?: boolean;\r\n  apenasDeclaracaoOpcaoFgts?: boolean;\r\n  apenasValeAlimentacaoRefeicaoRecibo?: boolean;\r\n  apenasProrrogacaoHoraExtra?: boolean;\r\n  apenasCartaSuspensao?: boolean;\r\n  apenasCartaPreposicao?: boolean;\r\n  apenasMsgContraCheque?: boolean;\r\n  apenasMsgAniversario?: boolean;\r\n  apenasReciboProLabore?: boolean;\r\n}\r\n\r\nconst CustomizacaoTermoIS: FC<CustomizacaoTermoSearchViewProps> = props => {\r\n  function getSearchExpression(): SearchExpression[] {\r\n    if (props.apenasAbonoPecuniario) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: ABONO_PECUNIARIO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasTipo) {\r\n      return [\r\n        {\r\n          alias: 'c1',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: AVISO_PREVIO_TRABALHADO.value,\r\n        },\r\n        {\r\n          alias: 'c2',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: AVISO_PREVIO_INDENIZADO.value,\r\n        },\r\n        {\r\n          alias: 'c3',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: PEDIDO_DEMISSAO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasAcordo) {\r\n      return [\r\n        {\r\n          alias: 'c1',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: AVISO_PREVIO_ACORDO_TRABALHADO.value,\r\n        },\r\n        {\r\n          alias: 'c2',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: AVISO_PREVIO_ACORDO_INDENIZADO.value,\r\n        },\r\n        {\r\n          alias: 'c3',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: PEDIDO_DEMISSAO_ACORDO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasTermosCompensacaoHoras) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: TERMO_COMPENSACAO_HORAS.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasTermoAditivo) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: TERMO_ADITIVO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasCartaRecomendacao) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: CARTA_RECOMENDACAO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasAvisoFerias) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: AVISO_FERIAS.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasReciboEntregaCtps) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: RECIBO_CARTEIRA_DE_TRABALHO_ENTREGA.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasReciboDevolucaoCtps) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: RECIBO_CARTEIRA_DE_TRABALHO_DEVOLUCAO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasReciboCestaBasica) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: RECIBO_CESTA_BASICA.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasReciboValeTransporte) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: VALE_TRANSPORTE_RECIBO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasDeclaracaoOpcaoFgts) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: DECLARACAO_OPCAO_FGTS.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasValeAlimentacaoRefeicaoRecibo) {\r\n      return [\r\n        {\r\n          alias: 'c1',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: VALE_ALIMENTACAO_RECIBO.value,\r\n        },\r\n        {\r\n          alias: 'c2',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: VALE_REFEICAO_RECIBO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasProrrogacaoHoraExtra) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: ACORDO_PRORROGACAO_HORA_EXTRA.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasCartaSuspensao) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: CARTA_SUSPENSAO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasCartaPreposicao) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: CARTA_PREPOSICAO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasMsgContraCheque) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: MSG_CONTRA_CHEQUE.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasMsgAniversario) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: MSG_ANIVERSARIO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasReciboProLabore) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: RECIBO_PRO_LABORE.value,\r\n        },\r\n      ];\r\n    }\r\n    return [];\r\n  }\r\n\r\n  const inputSearchProps: InputSearchProps<any> = {\r\n    ...props.inputSearchProps,\r\n    columns: [\r\n      {\r\n        dataField: 'descricao',\r\n        text: 'Descrição',\r\n      },\r\n      {\r\n        dataField: 'termo',\r\n        text: 'Termo',\r\n      },\r\n    ],\r\n    dtoClassName: CLASS_NAME,\r\n    searchExpressions: getSearchExpression,\r\n    searchViewId: 'CustomizacaoTermosSearchView',\r\n  };\r\n\r\n  return <InputGroupInline {...props} type={InputType.INPUT_SEARCH} inputSearchProps={inputSearchProps} />;\r\n};\r\n\r\nexport default CustomizacaoTermoIS;\r\n","import { Basic } from 'summer';\r\nimport { CepUF } from '../ger/cepUF';\r\nimport { EmpresaMFP } from './empresaMFP';\r\n\r\nexport interface TrabalhadorExample extends Basic {\r\n  carteiraTrabalhoDataEmissao?: Date;\r\n  carteiraTrabalhoNumero?: string;\r\n  carteiraTrabalhoSerie?: string;\r\n  carteiraTrabalhoUF?: CepUF;\r\n  codigo?: number;\r\n  cpf?: string;\r\n  dataNascimento?: Date;\r\n  dataValidadeVisto?: Date;\r\n  empresaMFP?: EmpresaMFP;\r\n  /** este campo utiliza o enum EstadoCivilEnum */\r\n  estadoCivil?: string;\r\n  identidade?: string;\r\n  identidadeComplemento?: string;\r\n  identidadeDataEmissao?: Date;\r\n  identidadeOrgaoExpedidor?: string;\r\n  identidadeUF?: CepUF;\r\n  /** este campo utiliza o enum NacionalidadeEnum */\r\n  nacionalidade?: string;\r\n  nome?: string;\r\n  passaporteNumero?: string;\r\n  pis?: string;\r\n  secaoEleitoral?: string;\r\n  tituloEleitor?: string;\r\n  zonaEleitoral?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.trabalhadorexample';\r\n","import React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mfp/trabalhadorExample';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\nconst TrabalhadorIS: FC<InputProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const getSearchExpressions = (): SearchExpression[] => {\r\n    let result = null;\r\n\r\n    if (props.inputSearchProps.searchExpressions) {\r\n      result = props.inputSearchProps.searchExpressions();\r\n    } else {\r\n      result = [\r\n        {\r\n          fieldName: 'empresaMFP.id',\r\n          value: globalReducer.globalParameter.empresaMFP.id,\r\n        },\r\n      ];\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      type={InputType.INPUT_SEARCH}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'identidade',\r\n            text: 'RG',\r\n          },\r\n          {\r\n            dataField: 'carteiraTrabalhoNumero',\r\n            text: 'Nº Carteira Trab.',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressions: getSearchExpressions,\r\n        searchViewId: 'TrabalhadorSearchView',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TrabalhadorIS;\r\n"],"sourceRoot":""}
{"version":3,"sources":["models/dtos/mcg/configECFRemuneracaoSocio.ts","views/pages/mcg/configECFRemuneracaoSocio/ConfigECFRemuneracaoSocioEditView.tsx","dependencies/empresaDependency.ts","dependencies/empresaMCGDependency.ts","services/mcg.service.ts","models/dtos/ger/responsavel.ts","views/components/ger/responsavelIS/ResponsavelIS.tsx","../node_modules/reactstrap/es/CardDeck.js"],"names":["__webpack_require__","d","__webpack_exports__","CLASS_NAME","ConfigECFRemuneracaoSocioEditView","props","globalReducer","useSelector","state","selectedItem","getSelectedItem","formProps","useForm","defaultValues","Object","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","empresaMCG","globalParameter","mode","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_10__","title","useGlobalParameter","dependencies","hasEmpresaMCG","hasEmpresa","editViewProps","dtoClassName","validateExtras","erros","_formProps$getValues","getValues","referenciaInicial","referenciaFinal","toDate","YEAR_MONTH_DATE_TIME_PATTERN","push","beforePersist","formData","done","params","message","type","AlertType","WARNING","validarRefRemuneracaoSocio","thenFunction","result","alertManager","emit","ACTION_EVENTS","SHOW","async","id","hidden","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","_components_ger_responsavelIS_ResponsavelIS__WEBPACK_IMPORTED_MODULE_15__","labelWidth","validation","required","label","placeholder","isPrependLabel","InputType","REFERENCE","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","className","cx","maxLength","NUMBER","empresa","getService","create","gerarLancamentosFolhaPagamento","integracaoFolhaParam","param","send","post","integrarFolhaPagamento","lancamentoIntegracaoFolha","integrarMCP","importarParam","importarLancamentoCSV","data","formDataSend","FormData","append","String","importarDuplicados","importarLancamentosCardinal","_step","_iterator","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__","arquivos","s","n","arquivo","value","file","nomeArquivo","err","e","f","importarLancamentoPadraoCSV","_step2","_iterator2","importarHistoricoCSV","grupoHistoricoDestino","_step3","_iterator3","importarPlanoContaCSV","idEmpresa","grupoPlanoContaDestino","_step4","_iterator4","importarHistorico","importacaoHistorico","importarPlanoConta","importacaoPlanoContaParam","buscarConfigLivroFolhaMCG","get","integracaoFiscalContabil","encerrarContas","contaResultadoEncerramento","force","getDataUltimaContaEncerrada","idGerEmpresa","limparEncerramentoContaResultado","contaResultadoLimpeza","validarReferenciaSPEDECFIrpjCsll","configECFIrpjCsll","validarReferenciaSPEDECFImuneIsenta","configECFImuneIsenta","configECFRemuneracaoSocio","validarQuadroSocietario","configQuadro","obterLucroPrejuizoClassificacao","idGrupoPlanoConta","getSaldo","saldo","validarDadosSpedECF","ecfExportacaoParam","gerarSpedECF","usuario","getArquivoDigitalService","recuperarLancamentoConta","transferenciaLancamentoConta","transferirLancamentoConta","obterBancoPlanoConta","bancoPlanoContaDTO","validarConfigLivroFolha","changeLivroFolha","fecharRestaurar","fechamentoRestauracao","forceFecharRestaurar","verificarErros","gerarSpedContabil","selecaoSped","arquivoRTFEscrituracaoSubstituida","_step5","_iterator5","atributoSelecaoSped","salvarLucroPrejuizoClassificacao","lucroPrejuizoClassificacao","consultarMovimentacao","saldoCriteria","totalizadorLancamento","consulta","getSaldoAnterior","isDataEncerrada","parametros","abrirContas","removeLancamentoPeriodo","obterContasClassificacaoIndireto","salvarClassificacaoIndireto","contaFluxoCaixaIndireto","obterMutacaoPatrimonioLiquido","salvarMutacaoPatrimonioLiquido","mutacaoPatrimonioLiquido","salvarContaResultado","contaResultado","excluirContaResultado","obterContasClassificacaoDireto","salvarClassificacaoDireto","contaFluxoCaixa","findSubGrupo","planoContaSubGrupoParam","removerTodosPlanosConta","removeList","listaPlanoConta","apagarFilha","listSubGrupo","planoConta","referenciarContas","idsPlanoConta","idPlanoContaReferencial","idPlanoContaReferencialECF","desvincularContas","existeLancamentoEmContaAnalitica","idPlanoConta","importarLancamentoMCG","tipoImportacao","sobescrever","versaoSuperiorA2","isEmpty","dtInicial","dtFinal","importarSpedContabil","_step6","_iterator6","gerarManadContabil","refInicial","refFinal","arquivoSFP","evolucaoContaContabilGraf","evolucaoContaContabilGrafParam","composicaoReceitaDespesasGraf","compReceitaDespesasGrafParam","gerarFCONTContabil","fContContabilCrit","obterDadosArquivoExtrato","arquivoSelecionado","idBancoMCG","obterDadosConciliacaoBancariaPeriodo","obterBancoListPlanoConta","conciliarLancamentosExtrato","listConciliacaoBancaria","removerConciliarLancamentosExtrato","listaRemover","removerLancamentosExtratoBancario","obterLancamentosSaldoPeriodo","historico","valor","operacaoConsultaValor","conciliarLancamentosConta","listaConciliacao","removerConciliarLancamentosConta","listaConciliarRemover","eLalurAContas","eLacsAContas","getSaldoDebito","getSaldoCredito","removerLancamentoLote","atualizaCalculoIrpjCsll","buscarLancamentosHonorarios","integracaoHonorariosParam","integrarHonorarios","lancamentos","isAlteraCalculoIRPJorCSLL","alterarPlanoContaNaturezaConfig","enumPlanoContaNaturezaConta","prepararContaResultado","ResponsavelIS","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","assign","inputSearchProps","columns","dataField","text","searchViewId","INPUT_SEARCH","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","string","cssModule","object","CardDeck","Tag","attributes","classes","defaultProps"],"mappings":"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","file":"static/js/158.a04622c0.chunk.js","sourcesContent":["import { Basic } from 'summer';\r\nimport { Responsavel } from '../ger/responsavel';\r\nimport { EmpresaMCG } from './empresaMCG';\r\n\r\nexport interface ConfigECFRemuneracaoSocio extends Basic {\r\n  empresaMCG?: EmpresaMCG;\r\n  referenciaFinal?: string;\r\n  referenciaInicial?: string;\r\n  socio?: Responsavel;\r\n  vrDemaisRendimentos?: number;\r\n  vrIRRetidoFonte?: number;\r\n  vrJurosCapitalProprio?: number;\r\n  vrLucrosDividendos?: number;\r\n  vrRemuneracaoTrabalho?: number;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mcg.model.dto.configecfremuneracaosocio';\r\n","import cx from 'clsx';\r\nimport React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Card, CardBody, CardDeck, Col, Row } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  EditForm,\r\n  EditViewProps,\r\n  getSelectedItem,\r\n  InputGroupInline,\r\n  InputType,\r\n  toDate,\r\n  WindowComponent,\r\n  YEAR_MONTH_DATE_TIME_PATTERN,\r\n} from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../dependencies/empresaMCGDependency';\r\nimport { CLASS_NAME, ConfigECFRemuneracaoSocio } from '../../../../models/dtos/mcg/configECFRemuneracaoSocio';\r\nimport { validarRefRemuneracaoSocio } from '../../../../services/mcg.service';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport ResponsavelIS from '../../../components/ger/responsavelIS/ResponsavelIS';\r\n\r\ninterface ConfigECFRemuneracaoSocioEditViewProps extends EditViewProps<ConfigECFRemuneracaoSocio> {}\r\n\r\nconst ConfigECFRemuneracaoSocioEditView: FC<ConfigECFRemuneracaoSocioEditViewProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const selectedItem = getSelectedItem(props);\r\n  const labelWidth = 240;\r\n\r\n  const formProps = useForm<ConfigECFRemuneracaoSocio>({\r\n    defaultValues: {\r\n      empresaMCG: globalReducer.globalParameter.empresaMCG,\r\n      ...selectedItem,\r\n    },\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const validateExtras = () => {\r\n    const erros = [];\r\n    const { referenciaInicial, referenciaFinal } = formProps.getValues();\r\n\r\n    if (toDate(referenciaInicial + '01', YEAR_MONTH_DATE_TIME_PATTERN) > toDate(referenciaFinal + '01', YEAR_MONTH_DATE_TIME_PATTERN)) {\r\n      erros.push('A Referência Final deve ser posterior à Referência Inicial.');\r\n    }\r\n    return erros;\r\n  };\r\n\r\n  const beforePersist = (formData: ConfigECFRemuneracaoSocio, done: any) => {\r\n    const params: AlertProps = {\r\n      message: 'O período selecionado está sobrepondo um período de remuneração já cadastrado anteriormente para este Sócio.',\r\n      type: AlertType.WARNING,\r\n    };\r\n    validarRefRemuneracaoSocio(formData, {\r\n      thenFunction: (result: boolean) => {\r\n        if (result) {\r\n          done(formData);\r\n        } else {\r\n          alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n        }\r\n      },\r\n    });\r\n    return { async: true };\r\n  };\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Manutenção SPED ECF - Registro Y600 Remuneração dos Sócios\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresaMCG(globalReducer.globalParameter), () => hasEmpresa(globalReducer.globalParameter)]}\r\n    >\r\n      <EditForm formProps={formProps} editViewProps={props} dtoClassName={CLASS_NAME} validateExtras={validateExtras} beforePersist={beforePersist}>\r\n        <InputGroupInline id=\"empresaMCG.id\" formProps={formProps} hidden={true} />\r\n        <Row>\r\n          <Col>\r\n            <ResponsavelIS\r\n              labelWidth={labelWidth}\r\n              id=\"socio\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              label=\"Responsável (Sócio)\"\r\n              placeholder=\"Selecione um Responsável\"\r\n              isPrependLabel={true}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              labelWidth={labelWidth}\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              id=\"referenciaInicial\"\r\n              isPrependLabel={true}\r\n              label=\"Referência Inicial\"\r\n              type={InputType.REFERENCE}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <InputGroupInline\r\n              labelWidth={labelWidth}\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              id=\"referenciaFinal\"\r\n              isPrependLabel={true}\r\n              label=\"Referência Final\"\r\n              type={InputType.REFERENCE}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <CardDeck>\r\n          <Card>\r\n            <CardBody className={cx('bg-light')}>\r\n              <Row>\r\n                <Col>\r\n                  <InputGroupInline\r\n                    labelWidth={labelWidth}\r\n                    formProps={{ ...formProps, validation: { maxLength: 15 } }}\r\n                    id=\"vrRemuneracaoTrabalho\"\r\n                    isPrependLabel={true}\r\n                    label=\"Remuneração do Trabalho\"\r\n                    type={InputType.NUMBER}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <InputGroupInline\r\n                    labelWidth={labelWidth}\r\n                    formProps={{ ...formProps, validation: { maxLength: 15 } }}\r\n                    id=\"vrJurosCapitalProprio\"\r\n                    isPrependLabel={true}\r\n                    label=\"Juros Sobre o Capital Próprio\"\r\n                    type={InputType.NUMBER}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <InputGroupInline\r\n                    labelWidth={labelWidth}\r\n                    formProps={{ ...formProps, validation: { maxLength: 15 } }}\r\n                    id=\"vrLucrosDividendos\"\r\n                    isPrependLabel={true}\r\n                    label=\"Lucros/Dividendos\"\r\n                    type={InputType.NUMBER}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <InputGroupInline\r\n                    labelWidth={labelWidth}\r\n                    formProps={{ ...formProps, validation: { maxLength: 15 } }}\r\n                    id=\"vrIRRetidoFonte\"\r\n                    isPrependLabel={true}\r\n                    label=\"IR Retido na Fonte\"\r\n                    type={InputType.NUMBER}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <InputGroupInline\r\n                    labelWidth={labelWidth}\r\n                    formProps={{ ...formProps, validation: { maxLength: 15 } }}\r\n                    id=\"vrDemaisRendimentos\"\r\n                    isPrependLabel={true}\r\n                    label=\"Demais Rendimentos\"\r\n                    type={InputType.NUMBER}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </CardBody>\r\n          </Card>\r\n        </CardDeck>\r\n      </EditForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default ConfigECFRemuneracaoSocioEditView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMCG(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMCG) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o módulo Contábil. Para configurá-la acesse:\\n' +\r\n      'Módulo Contábil > Manutenção > Configurações > Empresa.';\r\n  }\r\n  return result;\r\n}\r\n","import { AxiosInstance } from 'axios';\r\nimport { ArquivoSelecionado, AxiosParam, create, isEmpty, send } from 'summer';\r\nimport { PlanoConta } from '../models/dtos/ger/planoConta';\r\nimport { PlanoContaSubGrupoParam } from '../models/dtos/ger/planoContaSubGrupoParam';\r\nimport { RuleMessage } from '../models/dtos/ger/ruleMessage';\r\nimport { Usuario } from '../models/dtos/ger/usuario';\r\nimport { BancoExtrato } from '../models/dtos/mcg/bancoExtrato';\r\nimport { BancoMCG } from '../models/dtos/mcg/bancoMCG';\r\nimport { BancoPlanoConta } from '../models/dtos/mcg/bancoPlanoConta';\r\nimport { CalculoIrpjCsll } from '../models/dtos/mcg/calculoIrpjCsll';\r\nimport { ComposicaoReceitaDespesasGrafParam } from '../models/dtos/mcg/composicaoReceitaDespesasGrafParam';\r\nimport { ComposicaoReceitaDespesasGrafReturn } from '../models/dtos/mcg/composicaoReceitaDespesasGrafReturn';\r\nimport { ConciliacaoBancaria } from '../models/dtos/mcg/conciliacaoBancaria';\r\nimport { ConciliacaoConta } from '../models/dtos/mcg/conciliacaoConta';\r\nimport { ConfigECFImuneIsenta } from '../models/dtos/mcg/configECFImuneIsenta';\r\nimport { ConfigECFIrpjCsll } from '../models/dtos/mcg/configECFIrpjCsll';\r\nimport { ConfigECFRemuneracaoSocio } from '../models/dtos/mcg/configECFRemuneracaoSocio';\r\nimport { ConsultaTotalLancamento } from '../models/dtos/mcg/consultaTotalLancamento';\r\nimport { ContaFluxoCaixa } from '../models/dtos/mcg/contaFluxoCaixa';\r\nimport { ContaFluxoCaixaIndireto } from '../models/dtos/mcg/contaFluxoCaixaIndireto';\r\nimport { ContaResultado } from '../models/dtos/mcg/contaResultado';\r\nimport { ContaResultadoLimpeza } from '../models/dtos/mcg/contaResultadoLimpeza';\r\nimport { ContaResultadoMCGEncerramento } from '../models/dtos/mcg/contaResultadoMCGEncerramento';\r\nimport { DataEncerradaParam } from '../models/dtos/mcg/dataEncerradaParam';\r\nimport { ECFExportacaoParam } from '../models/dtos/mcg/ecfExportacaoParam';\r\nimport { Erros } from '../models/dtos/mcg/erros';\r\nimport { EvolucaoContaContabilGrafParam } from '../models/dtos/mcg/evolucaoContaContabilGrafParam';\r\nimport { EvolucaoContaContabilGrafReturn } from '../models/dtos/mcg/evolucaoContaContabilGrafReturn';\r\nimport { FCONTContabilCrit } from '../models/dtos/mcg/fContContabilCrit';\r\nimport { FechamentoRestauracaoMCG } from '../models/dtos/mcg/fechamentoRestauracaoMCG';\r\nimport { ImportacaoFiscalContabil, ImportacaoFiscalContabilResult } from '../models/dtos/mcg/importacaoFiscalContabil';\r\nimport { ImportacaoHistorico } from '../models/dtos/mcg/importacaoHistorico';\r\nimport { ImportacaoHistoricoCSVParam } from '../models/dtos/mcg/importacaoHistoricoCSVParam';\r\nimport { ImportacaoLancamentoCSVParam } from '../models/dtos/mcg/importacaoLancamentoCSVParam';\r\nimport { ImportacaoLancamentoMCGRetornoValidacao } from '../models/dtos/mcg/importacaoLancamentoMCGRetornoValidacao';\r\nimport { ImportacaoLancamentoMCGSelecao } from '../models/dtos/mcg/importacaoLancamentoMCGSelecao';\r\nimport { ImportacaoLancamentoPadraoCSVParam } from '../models/dtos/mcg/importacaoLancamentoPadraoCSVParam';\r\nimport { ImportacaoPlanoConta } from '../models/dtos/mcg/importacaoPlanoConta';\r\nimport { ImportacaoPlanoContaCSVParam } from '../models/dtos/mcg/importacaoPlanoContaCSVParam';\r\nimport { ImportacaoSpedContabil } from '../models/dtos/mcg/importacaoSpedContabil';\r\nimport { ImportacaoResult, ImportarMCP } from '../models/dtos/mcg/importarMCP';\r\nimport { InfoConciliacaoBancaria } from '../models/dtos/mcg/infoConciliacaoBancaria';\r\nimport { IntegracaoFolhaParam } from '../models/dtos/mcg/integracaoFolhaParam';\r\nimport { IntegracaoHonorariosParam } from '../models/dtos/mcg/integracaoHonorariosParam';\r\nimport { Lancamento } from '../models/dtos/mcg/lancamento';\r\nimport { LancamentoConciliacao } from '../models/dtos/mcg/lancamentoConciliacao';\r\nimport { LancamentoIntegracaoFolha } from '../models/dtos/mcg/lancamentoIntegracaoFolha';\r\nimport { LancamentoIntegracaoHonorarios } from '../models/dtos/mcg/lancamentoIntegracaoHonorarios';\r\nimport { LancamentoSaldo } from '../models/dtos/mcg/lancamentoSaldo';\r\nimport { LivroFolha } from '../models/dtos/mcg/livroFolha';\r\nimport { LucroPrejuizoClassificacao } from '../models/dtos/mcg/lucroPrejuizoClassificacao';\r\nimport { MANADContabilCrit } from '../models/dtos/mcg/manadContabilCrit';\r\nimport { MutacaoPatrimonioLiquido } from '../models/dtos/mcg/mutacaoPatrimonioLiquido';\r\nimport { QuadroSocietario } from '../models/dtos/mcg/quadroSocietario';\r\nimport { RemoveLancamentoLote } from '../models/dtos/mcg/removeLancamentoLote';\r\nimport { RemoveLancamentoPeriodo } from '../models/dtos/mcg/removeLancamentoPeriodo';\r\nimport { Saldo } from '../models/dtos/mcg/saldo';\r\nimport { SaldoCriteria } from '../models/dtos/mcg/saldoCriteria';\r\nimport { SelecaoSpedContabil } from '../models/dtos/mcg/selecaoSpedContabil';\r\nimport { SomaSaldo } from '../models/dtos/mcg/somaSaldo';\r\nimport { TotalizadorLancamento } from '../models/dtos/mcg/totalizadorLancamento';\r\nimport { TransferenciaLancamentoConta } from '../models/dtos/mcg/transferenciaLancamentoConta';\r\nimport { VerificarErros } from '../models/dtos/mcg/verificarErros';\r\nimport { getArquivoDigitalService } from './ger.service';\r\n\r\nfunction getService(): AxiosInstance {\r\n  return create('/mcg');\r\n}\r\n\r\nexport function gerarLancamentosFolhaPagamento(integracaoFolhaParam: IntegracaoFolhaParam, param: AxiosParam<LancamentoIntegracaoFolha[]>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/gerarLancamentosFolhaPagamento', integracaoFolhaParam), param);\r\n}\r\n\r\nexport function integrarFolhaPagamento(lancamentoIntegracaoFolha: LancamentoIntegracaoFolha[], param: AxiosParam<any>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/integrarFolhaPagamento', lancamentoIntegracaoFolha), param);\r\n}\r\n\r\nexport function integrarMCP(importarParam: ImportarMCP, param: AxiosParam<ImportacaoResult>) {\r\n  send(getService().post<ImportacaoResult>('/importar', importarParam), param);\r\n}\r\n\r\nexport function importarLancamentoCSV(data: ImportacaoLancamentoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('importarDuplicados', String(data.importarDuplicados));\r\n  formDataSend.append('importarLancamentosCardinal', String(data.importarLancamentosCardinal));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarLancamentoPadraoCSV(data: ImportacaoLancamentoPadraoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoPadraoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistoricoCSV(data: ImportacaoHistoricoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('grupoHistoricoDestino.id', String(data.grupoHistoricoDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarHistoricoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarPlanoContaCSV(data: ImportacaoPlanoContaCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idEmpresa', String(data.idEmpresa));\r\n  formDataSend.append('grupoPlanoContaDestino.id', String(data.grupoPlanoContaDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarPlanoContaCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistorico(importacaoHistorico: ImportacaoHistorico, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarHistorico', importacaoHistorico), param);\r\n}\r\n\r\nexport function importarPlanoConta(importacaoPlanoContaParam: ImportacaoPlanoConta, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarPlanoConta', importacaoPlanoContaParam), param);\r\n}\r\n\r\nexport function buscarConfigLivroFolhaMCG(idEmpresa: number, param: AxiosParam<LivroFolha>) {\r\n  send(getService().get<LivroFolha>('/buscarConfigLivroFolhaMCG/' + idEmpresa), param);\r\n}\r\n\r\nexport function integracaoFiscalContabil(importarParam: ImportacaoFiscalContabil, param: AxiosParam<ImportacaoFiscalContabilResult>) {\r\n  send(getService().post<ImportacaoFiscalContabilResult>('/integracaoFiscalContabil', importarParam), param);\r\n}\r\n\r\nexport function encerrarContas(\r\n  contaResultadoEncerramento: ContaResultadoMCGEncerramento,\r\n  force: boolean,\r\n  param: AxiosParam<ContaResultadoMCGEncerramento>\r\n) {\r\n  send(\r\n    getService().post<ContaResultadoMCGEncerramento>('/encerrarContas', { contaResultadoEncerramento, force }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function getDataUltimaContaEncerrada(idGerEmpresa: number, param: AxiosParam<Date>) {\r\n  send(getService().get<Date>('/getDataUltimaContaEncerrada/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function limparEncerramentoContaResultado(contaResultadoLimpeza: ContaResultadoLimpeza, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/limparEncerramentoContaResultadoApos', contaResultadoLimpeza), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFIrpjCsll(configECFIrpjCsll: ConfigECFIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFIrpjCsll', configECFIrpjCsll), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFImuneIsenta(configECFImuneIsenta: ConfigECFImuneIsenta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFImuneIsenta', configECFImuneIsenta), param);\r\n}\r\n\r\nexport function validarRefRemuneracaoSocio(configECFRemuneracaoSocio: ConfigECFRemuneracaoSocio, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarRefRemuneracaoSocio', configECFRemuneracaoSocio), param);\r\n}\r\n\r\nexport function validarQuadroSocietario(configQuadro: QuadroSocietario, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/validarQuadroSocietario', configQuadro), param);\r\n}\r\n\r\nexport function obterLucroPrejuizoClassificacao(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterLucroPrejuizoClassificacao/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function getSaldo(saldo: Saldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldo', saldo), param);\r\n}\r\n\r\nexport function validarDadosSpedECF(ecfExportacaoParam: ECFExportacaoParam, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/validarDadosSpedECF', ecfExportacaoParam), param);\r\n}\r\n\r\nexport function gerarSpedECF(usuario: Usuario, ecfExportacaoParam: ECFExportacaoParam, param?: AxiosParam<string>) {\r\n  send(\r\n    getArquivoDigitalService().post<string>('/gerarSpedECF', { usuario, ecfExportacaoParam }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function recuperarLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<Lancamento[]>) {\r\n  send(getService().post<Lancamento[]>('/recuperarLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function transferirLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/transferirLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function obterBancoPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG>) {\r\n  send(getService().post<BancoMCG>('/obterBancoPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function validarConfigLivroFolha(idGerEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(getService().get<boolean>('/validarConfigLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function changeLivroFolha(idGerEmpresa: number, param: AxiosParam<void>) {\r\n  send(getService().get<void>('/changeLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function fecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<RuleMessage>) {\r\n  send(getService().post<RuleMessage>('/fecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function forceFecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/forceFecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function verificarErros(erros: VerificarErros, param: AxiosParam<Erros[]>) {\r\n  send(getService().post<Erros[]>('/verificarErros', erros), param);\r\n}\r\n\r\nexport function gerarSpedContabil(selecaoSped: SelecaoSpedContabil, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('usuario.id', String(selecaoSped.usuario.id));\r\n\r\n  if (selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n    for (const arquivo of selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n      formDataSend.append('arquivoRTFEscrituracaoSubstituida', arquivo.file, arquivo.nomeArquivo);\r\n    }\r\n  }\r\n\r\n  for (const atributoSelecaoSped in selecaoSped) {\r\n    if (\r\n      atributoSelecaoSped !== 'arquivoRTFEscrituracaoSubstituida' &&\r\n      atributoSelecaoSped !== 'usuario' &&\r\n      selecaoSped[atributoSelecaoSped] !== null\r\n    ) {\r\n      formDataSend.append(atributoSelecaoSped, selecaoSped[atributoSelecaoSped]);\r\n    }\r\n  }\r\n  send(getService().post<string>('/gerarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function salvarLucroPrejuizoClassificacao(\r\n  lucroPrejuizoClassificacao: LucroPrejuizoClassificacao,\r\n  param: AxiosParam<LucroPrejuizoClassificacao>\r\n) {\r\n  send(getService().post<LucroPrejuizoClassificacao>('/salvarLucroPrejuizoClassificacao', lucroPrejuizoClassificacao), param);\r\n}\r\n\r\nexport function consultarMovimentacao(saldoCriteria: SaldoCriteria, param: AxiosParam<LancamentoSaldo[]>) {\r\n  send(getService().post<LancamentoSaldo[]>('/consultarMovimentacao', saldoCriteria), param);\r\n}\r\n\r\nexport function totalizadorLancamento(consulta: ConsultaTotalLancamento, param: AxiosParam<TotalizadorLancamento>) {\r\n  send(getService().post<TotalizadorLancamento>('/totalizadorLancamento', consulta), param);\r\n}\r\n\r\nexport function getSaldoAnterior(saldoCriteria: SaldoCriteria, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoAnterior', saldoCriteria), param);\r\n}\r\n\r\nexport function isDataEncerrada(parametros: DataEncerradaParam, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isDataEncerrada', parametros), param);\r\n}\r\n\r\nexport function abrirContas(parametros: DataEncerradaParam, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/abrirContas', parametros), param);\r\n}\r\n\r\nexport function removeLancamentoPeriodo(parametros: RemoveLancamentoPeriodo, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removeLancamentoPeriodo', parametros), param);\r\n}\r\n\r\nexport function obterContasClassificacaoIndireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixaIndireto[]>) {\r\n  send(getService().get<ContaFluxoCaixaIndireto[]>('/obterContasClassificacaoIndireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoIndireto(contaFluxoCaixaIndireto: ContaFluxoCaixaIndireto, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoIndireto', contaFluxoCaixaIndireto), param);\r\n}\r\n\r\nexport function obterMutacaoPatrimonioLiquido(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterMutacaoPatrimonioLiquido/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarMutacaoPatrimonioLiquido(mutacaoPatrimonioLiquido: MutacaoPatrimonioLiquido, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarMutacaoPatrimonioLiquido', mutacaoPatrimonioLiquido), param);\r\n}\r\n\r\nexport function salvarContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function excluirContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/excluirContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function obterContasClassificacaoDireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixa[]>) {\r\n  send(getService().get<ContaFluxoCaixa[]>('/obterContasClassificacaoDireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoDireto(contaFluxoCaixa: ContaFluxoCaixa, param?: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoDireto', contaFluxoCaixa), param);\r\n}\r\n\r\nexport function findSubGrupo(planoContaSubGrupoParam: PlanoContaSubGrupoParam, param: AxiosParam<any>) {\r\n  send(getService().post<any>('/findSubGrupo', planoContaSubGrupoParam), param);\r\n}\r\n\r\nexport function removerTodosPlanosConta(idGrupoPlanoConta: number, usuario: Usuario, param: AxiosParam<void>) {\r\n  send(\r\n    getService().post<void>('/removerTodosPlanosConta', { idGrupoPlanoConta, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function removeList(listaPlanoConta: PlanoConta[], apagarFilha: boolean, usuario: Usuario, param: AxiosParam<any>) {\r\n  send(\r\n    getService().post<any>('/removeList', { listaPlanoConta, apagarFilha, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function listSubGrupo(planoConta: PlanoConta, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().post<PlanoConta[]>('/listSubGrupo', planoConta), param);\r\n}\r\n\r\nexport function referenciarContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<void>\r\n) {\r\n  send(\r\n    getService().post<void>('/referenciarContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function desvincularContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<any>\r\n) {\r\n  send(\r\n    getService().post<void>('/desvincularContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function existeLancamentoEmContaAnalitica(idPlanoConta: number, idEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(\r\n    getService().post<boolean>('/existeLancamentoEmContaAnalitica', { idPlanoConta, idEmpresa }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function importarLancamentoMCG(data: ImportacaoLancamentoMCGSelecao, param: AxiosParam<ImportacaoLancamentoMCGRetornoValidacao>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('tipoImportacao', String(data.tipoImportacao));\r\n  formDataSend.append('sobescrever', String(data.sobescrever));\r\n  formDataSend.append('versaoSuperiorA2', String(data.versaoSuperiorA2));\r\n  formDataSend.append('arquivo', data.arquivo[0].file, data.arquivo[0].nomeArquivo);\r\n\r\n  if (data.versaoSuperiorA2 === false && !isEmpty(data.dtInicial) && !isEmpty(data.dtFinal)) {\r\n    formDataSend.append('dtInicial', data.dtInicial);\r\n    formDataSend.append('dtFinal', data.dtFinal);\r\n  }\r\n\r\n  send(getService().post<ImportacaoLancamentoMCGRetornoValidacao>('/importarLancamentoMCG', formDataSend), param);\r\n}\r\n\r\nexport function importarSpedContabil(data: ImportacaoSpedContabil, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function gerarManadContabil(data: MANADContabilCrit, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('refInicial', data.refInicial);\r\n  formDataSend.append('refFinal', data.refFinal);\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  if (!isEmpty(data.arquivoSFP)) {\r\n    formDataSend.append('arquivoSFP', data.arquivoSFP[0].file, data.arquivoSFP[0].nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<string>('/gerarManadContabil', formDataSend), param);\r\n}\r\n\r\nexport function evolucaoContaContabilGraf(\r\n  evolucaoContaContabilGrafParam: EvolucaoContaContabilGrafParam,\r\n  param: AxiosParam<EvolucaoContaContabilGrafReturn>\r\n) {\r\n  send(getService().post<EvolucaoContaContabilGrafReturn>('/evolucaoContaContabilGraf', evolucaoContaContabilGrafParam), param);\r\n}\r\n\r\nexport function composicaoReceitaDespesasGraf(\r\n  compReceitaDespesasGrafParam: ComposicaoReceitaDespesasGrafParam,\r\n  param: AxiosParam<ComposicaoReceitaDespesasGrafReturn>\r\n) {\r\n  send(getService().post<ComposicaoReceitaDespesasGrafReturn>('/composicaoReceitaDespesasGraf', compReceitaDespesasGrafParam), param);\r\n}\r\n\r\nexport function gerarFCONTContabil(fContContabilCrit: FCONTContabilCrit, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/gerarFCONTContabil', fContContabilCrit), param);\r\n}\r\n\r\nexport function obterDadosArquivoExtrato(arquivoSelecionado: ArquivoSelecionado, idBancoMCG, param: AxiosParam<BancoExtrato[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idBancoMCG', idBancoMCG);\r\n\r\n  formDataSend.append('arquivoSelecionado', arquivoSelecionado[0].file, arquivoSelecionado[0].nomeArquivo);\r\n\r\n  send(getService().post<BancoExtrato[]>('/obterDadosArquivoExtrato', formDataSend), param);\r\n}\r\n\r\nexport function obterDadosConciliacaoBancariaPeriodo(\r\n  idGrupoPlanoConta,\r\n  idEmpresa,\r\n  idBancoMCG,\r\n  dtInicial,\r\n  dtFinal,\r\n  param: AxiosParam<InfoConciliacaoBancaria>\r\n) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGrupoPlanoConta', String(idGrupoPlanoConta));\r\n  formDataSend.append('idEmpresa', String(idEmpresa));\r\n  formDataSend.append('idBancoMCG', String(idBancoMCG));\r\n  formDataSend.append('dtInicial', String(dtInicial));\r\n  formDataSend.append('dtFinal', String(dtFinal));\r\n\r\n  send(getService().post<InfoConciliacaoBancaria>('/obterDadosConciliacaoBancariaPeriodo', formDataSend), param);\r\n}\r\n\r\nexport function obterBancoListPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG[]>) {\r\n  send(getService().post<BancoMCG[]>('/obterBancoListPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function conciliarLancamentosExtrato(listConciliacaoBancaria: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/conciliarLancamentosExtrato', listConciliacaoBancaria), param);\r\n}\r\n\r\nexport function removerConciliarLancamentosExtrato(listaRemover: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerConciliarLancamentosExtrato', listaRemover), param);\r\n}\r\n\r\nexport function removerLancamentosExtratoBancario(listaRemover: BancoExtrato[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerLancamentosExtratoBancario', listaRemover), param);\r\n}\r\nexport function obterLancamentosSaldoPeriodo(\r\n  idGrupoPlanoConta,\r\n  idEmpresa,\r\n  dtInicial,\r\n  dtFinal,\r\n  historico,\r\n  valor,\r\n  operacaoConsultaValor,\r\n  param: AxiosParam<LancamentoConciliacao[]>\r\n) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGrupoPlanoConta', String(idGrupoPlanoConta));\r\n  formDataSend.append('idEmpresa', String(idEmpresa));\r\n  formDataSend.append('dtInicial', String(dtInicial));\r\n  formDataSend.append('dtFinal', String(dtFinal));\r\n  formDataSend.append('historico', String(historico));\r\n  formDataSend.append('valor', String(valor));\r\n  formDataSend.append('operacaoConsultaValor', String(operacaoConsultaValor));\r\n\r\n  send(getService().post<LancamentoConciliacao[]>('/obterLancamentosSaldoPeriodo', formDataSend), param);\r\n}\r\n\r\nexport function conciliarLancamentosConta(listaConciliacao: ConciliacaoConta[], param: AxiosParam<void>) {\r\n  send(getService().post<void>('/conciliarLancamentosConta', listaConciliacao), param);\r\n}\r\n\r\nexport function removerConciliarLancamentosConta(listaConciliarRemover: ConciliacaoConta[], param: AxiosParam<void>) {\r\n  send(getService().post<void>('/removerConciliarLancamentosConta', listaConciliarRemover), param);\r\n}\r\n\r\nexport function eLalurAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLalurAContas/' + id), param);\r\n}\r\n\r\nexport function eLacsAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLacsAContas/' + id), param);\r\n}\r\n\r\nexport function getSaldoDebito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoDebito', parametros), param);\r\n}\r\n\r\nexport function getSaldoCredito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoCredito', parametros), param);\r\n}\r\n\r\nexport function removerLancamentoLote(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/removerLancamentoLote', parametros), param);\r\n}\r\n\r\nexport function atualizaCalculoIrpjCsll(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/atualizaCalculoIrpjCsll', parametros), param);\r\n}\r\n\r\nexport function buscarLancamentosHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  param: AxiosParam<LancamentoIntegracaoHonorarios[]>\r\n) {\r\n  send(getService().post<LancamentoIntegracaoHonorarios[]>('/buscarLancamentosHonorarios', integracaoHonorariosParam), param);\r\n}\r\n\r\nexport function integrarHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  lancamentos: LancamentoIntegracaoHonorarios[],\r\n  param: AxiosParam<number>\r\n) {\r\n  send(\r\n    getService().post<number>('/integrarHonorarios', { integracaoHonorariosParam, lancamentos }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function isAlteraCalculoIRPJorCSLL(parametros: CalculoIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isAlteraCalculoIRPJorCSLL', parametros), param);\r\n}\r\n\r\nexport function alterarPlanoContaNaturezaConfig(idsPlanoConta: number[], enumPlanoContaNaturezaConta: number, param: AxiosParam<void>) {\r\n  send(\r\n    getService().post<void>('/alterarPlanoContaNaturezaConfig', { idsPlanoConta, enumPlanoContaNaturezaConta }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function prepararContaResultado(idGrupoPlanoConta: number, param: AxiosParam<void>) {\r\n  send(getService().get<void>('/prepararContaResultado/' + idGrupoPlanoConta), param);\r\n}\r\n","import { Basic } from 'summer';\r\nimport { CepBairro } from './cepBairro';\r\nimport { CepLocalidade } from './cepLocalidade';\r\nimport { CepTitulo } from './cepTitulo';\r\nimport { CepUF } from './cepUF';\r\n\r\nexport interface Responsavel extends Basic {\r\n  cargo?: string;\r\n  cei?: string;\r\n  cep?: string;\r\n  cnpj?: string;\r\n  cpf?: string;\r\n  cepBairro?: CepBairro;\r\n  /** Campo referente a cidade */\r\n  cepLocalidade?: CepLocalidade;\r\n  /** tipo do logradouro ex: rua, avenida */\r\n  cepTitulo?: CepTitulo;\r\n  cepUf?: CepUF;\r\n  complemento?: string;\r\n  dataNascimento?: Date;\r\n  dataValidadeCRC?: Date;\r\n  email?: string;\r\n  /** Este campo utiliza o estadoCivilEnum */\r\n  estadoCivil?: string;\r\n  logradouro?: string;\r\n  numeroConselho?: string;\r\n  /** Este campo utiliza o nacionalidadeEnum */\r\n  nacionalidade?: string;\r\n  nome?: string;\r\n  numero?: string;\r\n  orgaoEmissor?: string;\r\n  rg?: string;\r\n  telefone?: string;\r\n  /** Este campo utiliza o responsavelTipoEnum */\r\n  tipo?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.responsavel';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/responsavel';\r\n\r\nconst ResponsavelIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'tipo',\r\n            text: 'Tipo',\r\n          },\r\n          {\r\n            dataField: 'telefone',\r\n            text: 'Telefone',\r\n          },\r\n          {\r\n            dataField: 'email',\r\n            text: 'E-mail',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'ResponsavelSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Responsável'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Responsável'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ResponsavelIS;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardDeck = function CardDeck(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-deck'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardDeck.propTypes = propTypes;\nCardDeck.defaultProps = defaultProps;\nexport default CardDeck;"],"sourceRoot":""}
{"version":3,"sources":["views/components/mfp/agenciaIS/AgenciaIS.tsx","views/pages/mfp/report/valoresPagosGps/valoresPagosGpsRV.ts","views/pages/mfp/report/valoresPagosGps/ValoresPagosGpsReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","dependencies/empresaMFPDependency.ts","models/dtos/mfp/guiaGps.ts","models/dtos/ger/agencia.ts","views/components/mfp/guiaGpsIS/GuiaGpsIS.tsx"],"names":["AgenciaIS","props","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_2__","Object","assign","type","InputType","INPUT_SEARCH","inputSearchProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","DEFAULT_VALUES","objectSpread2","getDefaultReportBasicValues","DEFAULT_OPTIONS","getDefaultReportViewOptions","exibirConfiguracaoDadosEmpresa","ValoresPagosGpsReportView","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","objectWithoutProperties","globalParameter","useSelector","state","globalReducer","react_default","summer_esm","title","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMFP","ReportForm","localStorageKey","routeProps","reportBasicValues","reportViewOptions","Row","Col","GuiaGpsIS","id","validation","required","label","isPrependLabel","placeholder","CPF","inputProps","onlyNumber","NUMBER","result","empresa","__webpack_require__","d","__webpack_exports__","NATUREZA","value","SALDO_REPORT_ENUM","EmpresaIS","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","empresasSelecionadas","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","gerarCabecalhoPadraoAdministradora","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","virtualization","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","errors","getValues","register","setValue","triggerValidation","handleCancel","validateExtras","currentItem","currentValues","parentObject","EnvioEmail","Fragment","sort","detailView","keyField","propName","className","CustomInput","name","innerRef","maxLength","TEXT_AREA","ReportInputs","_useState","useState","_useState2","slicedToArray","activeTab","setActiveTab","useEffect","_props$reportViewOpti","printingTypes","resetObject","length","idGerEmpresa","current","currentMomentDate","endDate","DATE","dtInicial","formatDate","toDate","DATES","dtFinal","endOf","REFERENCE","referenciaInicial","format","REF_PATTERN","REFERENCES","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dtInicialRequired","dateComponent","datesComponent","dtFinalRequired","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","disabled","gerarPorEmpresas","style","marginBottom","size","selectProps","isMulti","segmentacaoFolhaComponent","exibirSegmentacaoFolha","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","exibirImprimirValoresColoridos","inputDropDownProps","optionsProvider","isClearable","DROP_DOWN","firstOpen","extraConfigOpened","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","hidden","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","erros","params","message","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history","empresaMFP"],"mappings":"uIAgCeA,IA5BmBC,IAE9BC,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,GACMN,EADN,CAEEO,KAAMC,IAAUC,aAChBC,iBAAgBL,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAA,GACXL,EAAMU,kBADK,IAEdE,QAAS,CACP,CACEC,UAAW,SACXC,KAAM,aAER,CACED,UAAW,OACXC,KAAM,QAER,CACED,UAAW,aACXC,KAAM,UAGVC,aAAcC,IACdC,aAAc,iNCff,MCMDC,EAAiCb,OAAAc,EAAA,EAAAd,CAAA,GAClCe,YDL+B,+CCQ9BC,EAAkChB,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAA,GACnCiB,YDV+B,yBCSI,IAEtCC,gCAAgC,IAsDnBC,UAnDmExB,KAAS,MAAAyB,EAClDC,YAA2B,CAAEC,cAAeT,EAAgBU,KAAM,WAAjGC,EADiFJ,EACjFI,aAAiBC,EADgEzB,OAAA0B,EAAA,EAAA1B,CAAAoB,EAAA,kBAEjFO,EAAoBC,YAAmCC,GAASA,EAAMC,eAAtEH,gBAER,OACEI,EAAAlC,EAAAC,cAACkC,EAAA,GAAD,CACEC,MAAM,6CACNC,oBAAoB,EACpBP,gBAAiBA,EACjBQ,aAAc,CAAC,IAAMC,YAAWT,GAAkB,IAAMU,YAAcV,KAEtEI,EAAAlC,EAAAC,cAACwC,EAAA,EAADtC,OAAAC,OAAA,GACMN,EADN,CAEE6B,aAAcA,EACdC,UAAWA,EACXc,gBD9ByB,oBC+BzBC,WAAY7C,EACZ8C,kBAAmB5B,EACnB6B,kBAAmB1B,IAEnBe,EAAAlC,EAAAC,cAAC6C,EAAA,EAAD,KACEZ,EAAAlC,EAAAC,cAAC8C,EAAA,EAAD,KACEb,EAAAlC,EAAAC,cAAC+C,EAAA,EAAD,CAAWC,GAAG,OAAOrB,UAASzB,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAA,GAAOyB,GAAP,IAAkBsB,WAAY,CAAEC,UAAU,KAAUC,MAAM,WAG5FlB,EAAAlC,EAAAC,cAAC6C,EAAA,EAAD,KACEZ,EAAAlC,EAAAC,cAAC8C,EAAA,EAAD,KACEb,EAAAlC,EAAAC,cAACkC,EAAA,EAAD,CAAkBP,UAAWA,EAAWqB,GAAG,MAAMI,gBAAgB,EAAMD,MAAM,MAAME,YAAY,gBAAgBjD,KAAMC,IAAUiD,OAEjIrB,EAAAlC,EAAAC,cAAC8C,EAAA,EAAD,KACEb,EAAAlC,EAAAC,cAACkC,EAAA,EAAD,CACEc,GAAG,QACHO,YAAY,EACZJ,MAAM,cACNxB,UAASzB,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAA,GAAOyB,GAAP,IAAkBsB,WAAW/C,OAAAc,EAAA,EAAAd,CAAA,GAAMsD,aAAW,EAAG,MAC1DJ,gBAAgB,EAChBC,YAAY,2BACZjD,KAAMC,IAAUoD,WAItBxB,EAAAlC,EAAAC,cAAC6C,EAAA,EAAD,KACEZ,EAAAlC,EAAAC,cAAC8C,EAAA,EAAD,KACEb,EAAAlC,EAAAC,cAACJ,EAAA,EAAD,CAAWoD,GAAG,UAAUrB,UAAWA,EAAWyB,gBAAgB,EAAMD,MAAM,uDCnE/E,SAASb,EAAWT,GACzB,IAAI6B,EAAS,KAIb,OAHK7B,EAAgB8B,UACnBD,EAAS,kDAEJA,EALTE,EAAAC,EAAAC,EAAA,sBAAAxB,sCCFAsB,EAAAC,EAAAC,EAAA,sBAAAC,IAAO,MAEMA,EAAW,CAAEZ,MAAO,6BAA8Ba,MAAO,YAEhEC,EAAoB,CAJJ,CAAEd,MAAO,4CAA6Ca,MAAO,UAC1D,CAAEb,MAAO,qDAAmDa,MAAO,aAG9CD,GAE/BE,mFCyDAC,IAvDgCrE,IAE3CC,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,GACMN,EADN,CAEEuD,gBAAgB,EAChB7C,iBAAgBL,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAA,GACXL,EAAMU,kBADK,IAEdE,QAAS,CACP,CACEC,UAAW,SACXC,KAAM,aAER,CACED,UAAW,cACXC,KAAM,mBAER,CACED,UAAW,eACXC,KAAM,iBAER,CACED,UAAW,OACXC,KAAM,QAER,CACED,UAAW,MACXC,KAAM,OAER,CACED,UAAW,MACXC,KAAM,OAER,CACED,UAAW,KACXC,KAAM,MAER,CACED,UAAW,KACXC,KAAM,MAER,CACED,UAAW,QACXC,KAAM,UAGVC,aAAcf,EAAMe,cAAgBC,IACpCC,aAAc,sBAEhBqC,MAAOtD,EAAMsD,MAAQtD,EAAMsD,MAAQ,UACnCE,YAAaxD,EAAMwD,YAAcxD,EAAMwD,YAAc,oBACrDjD,KAAMC,IAAUC,mDC1DtBsD,EAAAC,EAAAC,EAAA,sBAAA7C,IAAA,IAAAkD,EAAAP,EAAA,GAAAQ,EAAAR,EAAA,KAyDO,SAAS3C,EAA4BkB,EAAgB,KAAMkC,EAA6B,KAAMC,EAA4B,MAC/H,MAAO,CACLC,WAAYC,IAAQR,MACpBS,qBAAsB,GACtBC,WAAY,CACVC,OAAQ,GACRC,QAASzC,EACT0C,cAAe,IAEjBC,uBAAuB,EACvBC,UAAU,EACVC,sBAAsB,EACtBC,oCAAoC,EACpCZ,qBACAC,oBACAY,uBAAuB,EACvBC,kBAAkB,EAClBC,0BAA0B,EAC1BC,mBAAoB,GACpBC,gBAAiBvB,IAASC,MAC1BuB,aAAa,EACbC,kBAAkB,EAClBC,wBAAwB,EACxBC,UAAW,IACXvD,QACAwD,gBAAgB,sCCpEb,SAASxE,EAA4ByE,EAAyBC,EAAyB,MAC5F,MAAO,CACLC,SAAU,MACVC,aAAc,aACdC,eAAgB,eAChB5E,gCAAgC,EAChC6E,6BAA6B,EAC7BC,sCAAsC,EACtCC,sBAAsB,EACtBC,qBAAqB,EACrBC,cAAe,sBACfC,gBAAiB,wBACjBV,kBACAC,kBAbJjC,EAAAC,EAAAC,EAAA,sBAAA3C,mNCTA,MAAMoF,EAA+B,CACnCC,QAAS,GACTC,MAAO,IAoDMC,MAjD+E7G,IAAS,MAAAyB,EAChCC,YAA2B,CAC9FC,cAAe3B,EAAM8G,cAAgBJ,EACrC9E,KAAM,WAGFE,EAAY,CAChBiF,OAPmGtF,EAC7FsF,OAONC,UARmGvF,EACrFuF,UAQdC,SATmGxF,EAC1EwF,SASzBC,SAVmGzF,EAChEyF,SAUnCC,kBAXmG1F,EACtD0F,mBAiB/C,OACE/E,EAAAlC,EAAAC,cAACkC,EAAA,EAAD,CAAgBR,aAAc7B,EAAM6B,aAAcuF,aAAcpH,EAAMoH,aAActF,UAAWA,EAAWuF,eALrF,CAACC,EAAkBC,EAAsBC,IACvD,IAKLpF,EAAAlC,EAAAC,cAACkC,EAAA,EAAD,CACEc,GAAG,UACHI,gBAAgB,EAChBzB,UAASzB,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAA,GACJyB,GADI,IAEPsB,WAAY,CACVC,UAAU,KAGdC,MAAM,UACNE,YAAY,8BAGdpB,EAAAlC,EAAAC,cAACkC,EAAA,EAAD,CACEc,GAAG,QACHI,gBAAgB,EAChBzB,UAASzB,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAA,GACJyB,GADI,IAEPsB,WAAY,CACVC,UAAU,KAGdC,MAAM,SACNE,YAAY,kCCsCLiE,MA/EyBzH,IActC,OACEoC,EAAAlC,EAAAC,cAAAiC,EAAAlC,EAAAwH,SAAA,KACEtF,EAAAlC,EAAAC,cAAA,uCACAiC,EAAAlC,EAAAC,cAACkC,EAAA,EAAD,CACEc,GAAG,qBACHG,MAAM,UACNC,gBAAgB,EAChBC,YAAY,UACZ1B,UAASzB,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAA,GACJL,EAAM8B,WADF,IAEPsB,WAAY,CACVC,UAAU,OAKhBjB,EAAAlC,EAAAC,cAACkC,EAAA,EAADhC,OAAAC,OAAA,CACEM,QA9B0B,CAC9B,CACEC,UAAW,UACX8G,MAAM,EACN7G,KAAM,WAER,CACED,UAAW,QACX8G,MAAM,EACN7G,KAAM,WAsBJwB,MAAM,yBACNsF,WAAYf,EACZgB,SAAS,QACT/F,UAAW9B,EAAM8B,UACjBgG,SAAS,4BACL9H,IAGNoC,EAAAlC,EAAAC,cAAA,yBACAiC,EAAAlC,EAAAC,cAAC6C,EAAA,EAAD,CAAK+E,UAAU,QACb3F,EAAAlC,EAAAC,cAAC8C,EAAA,EAAD,KACEb,EAAAlC,EAAAC,cAAC6H,EAAA,EAAD,CACEzH,KAAK,SACL4C,GAAG,4BACH8E,KAAK,uCACL3E,MAAM,iBACN4E,SAAUlI,EAAM8B,UAAUmF,YAG9B7E,EAAAlC,EAAAC,cAAC8C,EAAA,EAAD,KACEb,EAAAlC,EAAAC,cAAC6H,EAAA,EAAD,CACEzH,KAAK,SACL4C,GAAG,2BACH8E,KAAK,sCACL3E,MAAM,oBACN4E,SAAUlI,EAAM8B,UAAUmF,aAKhC7E,EAAAlC,EAAAC,cAACkC,EAAA,EAAD,CACEc,GAAG,sBACHG,MAAM,WACNC,gBAAgB,EAChBC,YAAY,WACZ1B,UAASzB,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAA,GACJL,EAAM8B,WADF,IAEPsB,WAAY,CACV+E,UAAW,OAGf5H,KAAMC,IAAU4H,uBC6WTC,MAzZuBrI,IACpC,MAAMmC,EAAgBF,YAAmCC,GAASA,EAAMC,eAD3BmG,EAEXC,mBAAS,GAFEC,EAAAnI,OAAAoI,EAAA,EAAApI,CAAAiI,EAAA,GAEtCI,EAFsCF,EAAA,GAE3BG,EAF2BH,EAAA,GAI7CI,oBACE,KAAM,MAAAC,EACsC7I,EAAM+C,kBAAxC+F,EADJD,EACIC,cAAe9C,EADnB6C,EACmB7C,eACvB,IAAI+C,EAAgB1I,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAA,GACfL,EAAM8C,mBADS,IAElB4B,WAAYoE,GAAiBA,EAAcE,OAAS,EAAIF,EAAc,GAAKnE,IAAQR,MACnF8E,aAAc9G,EAAcH,gBAAgB8B,QAAQX,GACpD0C,UAAW,IAEb,MAAMqD,EAAUC,eACVC,EAAUD,eAChB,OAAQnD,GACN,KAAKqD,IAAKlF,MACR4E,EAAW1I,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAA,GACN0I,GADM,IAETO,UAAWC,aAAWL,EAAQM,YAEhC,MACF,KAAKC,IAAMtF,MACT4E,EAAW1I,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAA,GACN0I,GADM,IAETW,QAASH,aAAWH,EAAQO,MAAM,SAASH,UAC3CF,UAAWC,aAAWL,EAAQM,YAEhC,MACF,KAAKI,IAAUzF,MACb4E,EAAW1I,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAA,GACN0I,GADM,IAETc,kBAAmBC,aAAOZ,EAAQM,SAAUO,OAE9C,MACF,KAAKC,IAAW7F,MACd4E,EAAW1I,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAA,GACN0I,GADM,IAETkB,gBAAiBH,aAAOZ,EAAQM,SAAUO,KAC1CF,kBAAmBC,aAAOV,EAAQI,SAAUO,OAE9C,MACF,KAAKG,IAAI/F,MACP4E,EAAW1I,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAA,GACN0I,GADM,IAEToB,IAAKC,OAAOlB,EAAQmB,UAM1BrK,EAAM8B,UAAUwI,MAAMvB,IAExB,CAAC/I,EAAM+C,kBAAmBZ,EAAcH,gBAAgB8B,UAG1D,MAAMyG,EAAY,EAAGC,aAAyB,MACpCC,EAAaD,EAAbC,SACJ/B,IAAc+B,GAChB9B,EAAa8B,IAQXC,EACJtI,EAAAlC,EAAAC,cAACkC,EAAA,EAAD,CACEc,GAAG,YACHG,MAAOtD,EAAM+C,kBAAkBoD,eAC/B5C,gBAAgB,EAChBzB,UAASzB,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAA,GAAOL,EAAM8B,WAAb,IAAwBsB,WAAY,CAAEC,SAAUrD,EAAM+C,kBAAkB4H,qBACjFpK,KAAMC,IAAU6I,OAIduB,EAAgB5K,EAAM+C,kBAAkBiD,iBAAmBqD,IAAKlF,MAAQuG,EAAc,KAEtFG,EACJ7K,EAAM+C,kBAAkBiD,iBAAmByD,IAAMtF,MAC/C/B,EAAAlC,EAAAC,cAAAiC,EAAAlC,EAAAwH,SAAA,KACGgD,EAEDtI,EAAAlC,EAAAC,cAACkC,EAAA,EAAD,CACEc,GAAG,UACHG,MAAOtD,EAAM+C,kBAAkBmD,aAC/B3C,gBAAgB,EAChBzB,UAASzB,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAA,GAAOL,EAAM8B,WAAb,IAAwBsB,WAAY,CAAEC,SAAUrD,EAAM+C,kBAAkB+H,mBACjFvK,KAAMC,IAAU6I,QAGlB,KAEA0B,EACJ3I,EAAAlC,EAAAC,cAACkC,EAAA,EAAD,CACEc,GAAG,oBACHG,MAAOtD,EAAM+C,kBAAkB0D,gBAC/BlD,gBAAgB,EAChBzB,UAASzB,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAA,GAAOL,EAAM8B,WAAb,IAAwBsB,WAAY,CAAEC,SAAUrD,EAAM+C,kBAAkBiI,sBACjFzK,KAAMC,IAAUoJ,YAIdqB,EAAqBjL,EAAM+C,kBAAkBiD,iBAAmB4D,IAAUzF,MAAQ4G,EAAmB,KAErGG,EACJlL,EAAM+C,kBAAkBiD,iBAAmBgE,IAAW7F,MACpD/B,EAAAlC,EAAAC,cAAAiC,EAAAlC,EAAAwH,SAAA,KACGqD,EAED3I,EAAAlC,EAAAC,cAACkC,EAAA,EAAD,CACEc,GAAG,kBACHG,MAAOtD,EAAM+C,kBAAkByD,cAC/BjD,gBAAgB,EAChBzB,UAASzB,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAA,GAAOL,EAAM8B,WAAb,IAAwBsB,WAAY,CAAEC,SAAUrD,EAAM+C,kBAAkBoI,oBACjF5K,KAAMC,IAAUoJ,aAGlB,KAEAwB,EACJpL,EAAM+C,kBAAkBiD,iBAAmBkE,IAAI/F,MAC7C/B,EAAAlC,EAAAC,cAACkC,EAAA,EAAD,CACEc,GAAG,MACHG,MAAOtD,EAAM+C,kBAAkBkD,SAC/B1C,gBAAgB,EAChBzB,UAASzB,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAA,GAAOL,EAAM8B,WAAb,IAAwBsB,WAAY,CAAEC,SAAUrD,EAAM+C,kBAAkBsI,eACjFC,iBAAkB,CAAEC,KAAM,QAC1BhL,KAAMC,IAAUgL,OAEhB,KAEAC,EAAqBzL,EAAM+C,kBAAkBwD,oBACjDnE,EAAAlC,EAAAC,cAACkC,EAAA,EAAD,CACEc,GAAG,YACHG,MAAM,oBACNC,gBAAgB,EAChBC,YAAY,oBACZ1B,UAASzB,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAA,GACJL,EAAM8B,WADF,IAEPsB,WAAY,CACVsI,IAAK,EACLrI,UAAU,KAGd9C,KAAMC,IAAUoD,SAEhB,KAEE+H,EAA6B3L,EAAM+C,kBAAkB6I,oCACzDxJ,EAAAlC,EAAAC,cAAAiC,EAAAlC,EAAAwH,SAAA,KACEtF,EAAAlC,EAAAC,cAAC6C,EAAA,EAAD,CAAK+E,UAAU,sBACb3F,EAAAlC,EAAAC,cAAC8C,EAAA,EAAD,CAAK4I,GAAI,GACPzJ,EAAAlC,EAAAC,cAAC6H,EAAA,EAAD,CAAazH,KAAK,SAAS4C,GAAG,mBAAmB8E,KAAK,mBAAmB3E,MAAM,qBAAqB4E,SAAUlI,EAAM8B,UAAUmF,YAEhI7E,EAAAlC,EAAAC,cAAC8C,EAAA,EAAD,KACEb,EAAAlC,EAAAC,cAACkE,EAAA,EAAD,CACEvC,UAAW9B,EAAM8B,UACjBwB,MAAM,aACNE,YAAY,sCACZL,GAAG,uBACHI,gBAAgB,EAChBG,WAAY,CAAEoI,SAAU9L,EAAM8B,UAAUkF,YAAY+E,iBAAkBC,MAAO,CAAEC,aAAc,KAC7FvL,iBAAkB,CAAEwL,KAAM,KAAMC,YAAa,CAAEC,SAAS,SAK9D,KAEEC,EAA4BrM,EAAM+C,kBAAkBuJ,uBACxDlK,EAAAlC,EAAAC,cAAC6C,EAAA,EAAD,CAAK+E,UAAU,QACb3F,EAAAlC,EAAAC,cAAC8C,EAAA,EAAD,KACEb,EAAAlC,EAAAC,cAAC6H,EAAA,EAAD,CACEzH,KAAK,SACL4C,GAAG,mBACH8E,KAAK,mBACL3E,MAAM,8CACN4E,SAAUlI,EAAM8B,UAAUmF,aAI9B,KAEEsF,EAAqBvM,EAAM+C,kBAAkBqD,4BACjDhE,EAAAlC,EAAAC,cAAC6C,EAAA,EAAD,CAAK+E,UAAU,QACb3F,EAAAlC,EAAAC,cAAC8C,EAAA,EAAD,KACEb,EAAAlC,EAAAC,cAAC6H,EAAA,EAAD,CAAazH,KAAK,SAAS4C,GAAG,kBAAkB8E,KAAK,kBAAkB3E,MAAM,wBAAwB4E,SAAUlI,EAAM8B,UAAUmF,aAGjI,KAEEuF,EAAmBxM,EAAM+C,kBAAkBsD,qCAC/CjE,EAAAlC,EAAAC,cAAC6C,EAAA,EAAD,CAAK+E,UAAU,QACb3F,EAAAlC,EAAAC,cAAC8C,EAAA,EAAD,KACEb,EAAAlC,EAAAC,cAAC6H,EAAA,EAAD,CACEzH,KAAK,SACL4C,GAAG,yBACH8E,KAAK,yBACL3E,MAAM,iCACN4E,SAAUlI,EAAM8B,UAAUmF,aAI9B,KAEEwF,EAAwBzM,EAAM+C,kBAAkBxB,+BACpDa,EAAAlC,EAAAC,cAAAiC,EAAAlC,EAAAwH,SAAA,KACEtF,EAAAlC,EAAAC,cAAC6C,EAAA,EAAD,CAAK+E,UAAU,QACb3F,EAAAlC,EAAAC,cAAC8C,EAAA,EAAD,KACEb,EAAAlC,EAAAC,cAAC6H,EAAA,EAAD,CACEzH,KAAK,SACL4C,GAAG,mBACH8E,KAAK,mBACL3E,MAAM,+BACN4E,SAAUlI,EAAM8B,UAAUmF,aAKhC7E,EAAAlC,EAAAC,cAAC6C,EAAA,EAAD,CAAK+E,UAAU,QACb3F,EAAAlC,EAAAC,cAAC8C,EAAA,EAAD,KACEb,EAAAlC,EAAAC,cAAC6H,EAAA,EAAD,CACEzH,KAAK,SACL4C,GAAG,wBACH8E,KAAK,wBACL3E,MAAM,+BACN4E,SAAUlI,EAAM8B,UAAUmF,cAKhC,KAEEyF,EAA6B1M,EAAM8C,kBAAkBmC,sBACzD7C,EAAAlC,EAAAC,cAAAiC,EAAAlC,EAAAwH,SAAA,KACG1H,EAAM+C,kBAAkB4J,gCACvBvK,EAAAlC,EAAAC,cAAC6C,EAAA,EAAD,CAAK+E,UAAU,QACb3F,EAAAlC,EAAAC,cAAC8C,EAAA,EAAD,KACEb,EAAAlC,EAAAC,cAAC6H,EAAA,EAAD,CACEzH,KAAK,SACL4C,GAAG,2BACH8E,KAAK,2BACL3E,MAAM,4DACN4E,SAAUlI,EAAM8B,UAAUmF,aAMlC7E,EAAAlC,EAAAC,cAACkC,EAAA,EAAD,CACEc,GAAG,kBACHG,MAAM,sCACNC,gBAAgB,EAChBC,YAAY,mDACZ1B,UAASzB,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAA,GAAOL,EAAM8B,WAAb,IAAwBsB,WAAY,CAAEC,UAAU,KACzDuJ,mBAAoB,CAClBC,gBAAiBzI,IACjB+H,YAAa,CAAEW,aAAa,IAE9BvM,KAAMC,IAAUuM,aAGlB,KAEJ,OACE3K,EAAAlC,EAAAC,cAACkC,EAAA,EAAD,CAAWP,UAAW9B,EAAM8B,UAAWkL,UAAWhN,EAAMiN,oBAAqB,GAC3E7K,EAAAlC,EAAAC,cAACkC,EAAA,EAAD,CAAeC,MAAM,kDACnBF,EAAAlC,EAAAC,cAAAiC,EAAAlC,EAAAwH,SAAA,KACEtF,EAAAlC,EAAAC,cAAC+M,EAAA,EAAD,CAAKC,MAAM,GACT/K,EAAAlC,EAAAC,cAACiN,EAAA,EAAD,KACEhL,EAAAlC,EAAAC,cAACkN,EAAA,EAAD,CAAStF,UAAWuF,YAAG,CAAEC,OAAsB,IAAd7E,IAAoB+B,SAAU,EAAG+C,QAASjD,GAA3E,+BAIFnI,EAAAlC,EAAAC,cAACiN,EAAA,EAAD,KACEhL,EAAAlC,EAAAC,cAACkN,EAAA,EAAD,CACEtF,UAAWuF,YAAG,CAAEC,OAAsB,IAAd7E,IACxB+B,SAAU,EACV+C,QAASjD,EACTuB,UAAW9L,EAAM+C,kBAAkBuD,sBAJrC,oBASFlE,EAAAlC,EAAAC,cAACiN,EAAA,EAAD,KACEhL,EAAAlC,EAAAC,cAACkN,EAAA,EAAD,CAAStF,UAAWuF,YAAG,CAAEC,OAAsB,IAAd7E,IAAoB+B,SAAU,EAAG+C,QAASjD,EAAWuB,UAAU,GAAhG,aAMJ1J,EAAAlC,EAAAC,cAACsN,EAAA,EAAD,CAAY1F,UAAU,OAAOW,UAAWA,GACtCtG,EAAAlC,EAAAC,cAACuN,EAAA,EAAD,CAASC,MAAO,EAAG5F,UAAU,YAC3B3F,EAAAlC,EAAAC,cAACkC,EAAA,EAAD,CAAkBP,UAAW9B,EAAM8B,UAAWqB,GAAG,eAAeyK,QAAQ,IACxExL,EAAAlC,EAAAC,cAACkC,EAAA,EAAD,CACEc,GAAG,QACHG,MAAM,YACNC,gBAAgB,EAChBC,YAAY,YACZqK,WAAW,WACXC,mBA/OO,KACnB9N,EAAM8B,UAAUoF,SAAS,QAASlH,EAAM8C,kBAAkBR,OAAO,IA+OrDR,UAASzB,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAA,GACJL,EAAM8B,WADF,IAEPsB,WAAY,CACV+E,UAAW,IACX4F,UAAW,EACX1K,UAAU,OAKfoI,EAEAE,EAEAU,EAEAE,EAEAG,EAEAF,EAEAC,EAEA7B,EACAC,EACAI,EACAC,EACAE,EAEDhJ,EAAAlC,EAAAC,cAAA,WAEAiC,EAAAlC,EAAAC,cAAC6C,EAAA,EAAD,CAAK+E,UAAU,QACb3F,EAAAlC,EAAAC,cAAC8C,EAAA,EAAD,KACEb,EAAAlC,EAAAC,cAAC6H,EAAA,EAAD,CACEzH,KAAK,SACL4C,GAAG,uBACH8E,KAAK,uBACL3E,MAAM,sBACN4E,SAAUlI,EAAM8B,UAAUmF,aAKhC7E,EAAAlC,EAAAC,cAAC6C,EAAA,EAAD,CAAK+E,UAAU,QACb3F,EAAAlC,EAAAC,cAAC8C,EAAA,EAAD,KACEb,EAAAlC,EAAAC,cAAC6H,EAAA,EAAD,CACEzH,KAAK,SACL4C,GAAG,iBACH8E,KAAK,iBACL3E,MAAM,2BACN4E,SAAUlI,EAAM8B,UAAUmF,aAKhC7E,EAAAlC,EAAAC,cAACkC,EAAA,EAAD,CACEc,GAAG,aACHG,MAAM,uBACNC,gBAAgB,EAChBC,YAAY,mCACZ1B,UAASzB,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAA,GAAOL,EAAM8B,WAAb,IAAwBsB,WAAY,CAAEC,UAAU,KACzDuJ,mBAAoB,CAClBC,gBAAiB7M,EAAM+C,kBAAkB+F,cAAgB9I,EAAM+C,kBAAkB+F,cAAgBkF,IACjG7B,YAAa,CAAEW,aAAa,IAE9BvM,KAAMC,IAAUuM,YAGlB3K,EAAAlC,EAAAC,cAAC6C,EAAA,EAAD,CAAK+E,UAAU,QACb3F,EAAAlC,EAAAC,cAAC8C,EAAA,EAAD,KACEb,EAAAlC,EAAAC,cAAC6H,EAAA,EAAD,CACEzH,KAAK,SACL4C,GAAG,iBACH8E,KAAK,iBACL3E,MAAM,oBACN4E,SAAUlI,EAAM8B,UAAUmF,aAKhC7E,EAAAlC,EAAAC,cAAC6C,EAAA,EAAD,CAAK+E,UAAU,QACb3F,EAAAlC,EAAAC,cAAC8C,EAAA,EAAD,KACEb,EAAAlC,EAAAC,cAAC6H,EAAA,EAAD,CACEzH,KAAK,SACL4C,GAAG,oBACH8E,KAAK,oBACL3E,MAAM,wBACN4E,SAAUlI,EAAM8B,UAAUmF,cAKlC7E,EAAAlC,EAAAC,cAACuN,EAAA,EAAD,CAASC,MAAO,EAAG5F,UAAU,YAC3B3F,EAAAlC,EAAAC,cAAC8N,EAAD,CAAYnM,UAAW9B,EAAM8B,UAAWoM,eAAgBlO,EAAM8C,kBAAkBR,SAElFF,EAAAlC,EAAAC,cAACuN,EAAA,EAAD,CAASC,MAAO,EAAG5F,UAAU,kBClU1BpF,IAhEyB3C,KAAS,MACvCmO,EAAuBlM,YAAmCC,GAASA,EAAMC,eAAzEgM,mBACFC,EAAWC,cAUjB,MAkBMC,EAAgBC,IAChBvO,EAAMwO,qBACRD,EAAOvO,EAAMwO,mBAAmBD,IAElCA,EAAK7I,aAAc,EAEnB+I,YAAYF,EAAMvO,EAAM+C,kBAAkBgD,gBAAiB,CACzD2I,cAAgBC,GAAqBC,aAAUD,EAAUE,KACzDC,aAAc,KACPX,GACHC,EAASW,eAEP/O,EAAMgP,aACRhP,EAAMgP,kBAMd,OACE5M,EAAAlC,EAAAC,cAAC8O,EAAA,EAAD,CAAMC,YAAY,GACflP,EAAMmP,SACP/M,EAAAlC,EAAAC,cAACiP,EAAD,CACEtM,kBAAmB9C,EAAM8C,kBACzBC,kBAAmB/C,EAAM+C,kBACzBjB,UAAW9B,EAAM8B,UACjBmL,kBAAmBjN,EAAMiN,oBAG3B7K,EAAAlC,EAAAC,cAACkC,EAAA,EAAD,CAAYR,aAAc7B,EAAM6B,aA/CnB,CAAC0M,EAAWc,KAC3BA,EAAMC,iBACN,IAAIC,EAAQ,GAIZ,GAHIvP,EAAMqH,iBACRkI,EAAQvP,EAAMqH,eAAekH,IAE3BgB,GAASA,EAAMvG,OAAQ,CACzB,MAAMwG,EAAqB,CACzBC,QAASrN,EAAAlC,EAAAC,cAACkC,EAAA,EAAD,CAAUkN,MAAOA,IAC1BhP,KAAMmP,IAAUb,OAElBc,KAAaC,KAAKC,IAAcC,KAAMN,QAEtCZ,aAAU,mIAAqHmB,KAC/HzB,EAAaC,KAiC2CyB,YAvD5D,WACMhQ,EAAMgQ,YACRhQ,EAAMgQ,cACGhQ,EAAM6C,YACfoN,aAAcjQ,EAAM6C,WAAY7C,EAAM6C,WAAWqN,iDC5DhD,SAASxN,EAAcV,GAC5B,IAAI6B,EAAS,KAKb,OAJK7B,EAAgBmO,aACnBtM,EACE,sKAEGA,EANTE,EAAAC,EAAAC,EAAA,sBAAAvB,sCCyBAqB,EAAAC,EAAAC,EAAA,sBAAAjD,IAAO,MAAMA,EAAa,4FCA1B+C,EAAAC,EAAAC,EAAA,sBAAAjD,IAAO,MAAMA,EAAa,uICYXkC,IAnCmBlD,IAE9BC,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,GACMN,EADN,CAEEuD,gBAAgB,EAChB7C,iBAAgBL,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAA,GACXL,EAAMU,kBADK,IAEdE,QAAS,CACP,CACEC,UAAW,aACXC,KAAM,iBAER,CACED,UAAW,eACXC,KAAM,qBAER,CACED,UAAW,OACXC,KAAM,QAER,CACED,UAAW,UACXC,KAAM,gBAGVC,aAAcC,IACdC,aAAc,sBAEhBqC,MAAOtD,EAAMsD,MAAQtD,EAAMsD,MAAQ,WACnCE,YAAaxD,EAAMwD,YAAcxD,EAAMwD,YAAc,qBACrDjD,KAAMC,IAAUC","file":"static/js/70.a624451d.chunk.js","sourcesContent":["import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/agencia';\r\n\r\nconst AgenciaIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      type={InputType.INPUT_SEARCH}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'numero',\r\n            text: 'Número',\r\n          },\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'banco.nome',\r\n            text: 'Banco',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'AgenciaSearchView',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AgenciaIS;\r\n","import { Agencia } from '../../../../../models/dtos/ger/agencia';\r\nimport { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { GuiaGpsExample } from '../../../../../models/dtos/mfp/guiaGpsExample';\r\n\r\nexport interface ValoresPagosGpsRV extends ReportBasicValues {\r\n  guia?: GuiaGpsExample;\r\n  cpf?: string;\r\n  conta?: string;\r\n  agencia?: Agencia;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'valorespagosgpsrv';\r\nexport const REPORT_EVENT: string = 'printValoresPagosGps';\r\nexport const REPORT_TITLE: string = 'Declaração de Valores Pagos à GPS';\r\n","import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { InputGroupInline, InputType, onlyNumber, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMFP } from '../../../../../dependencies/empresaMFPDependency';\r\nimport { getDefaultReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport AgenciaIS from '../../../../components/mfp/agenciaIS/AgenciaIS';\r\nimport GuiaGpsIS from '../../../../components/mfp/guiaGpsIS/GuiaGpsIS';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { CLASS_KEY, REPORT_EVENT, REPORT_TITLE, ValoresPagosGpsRV } from './valoresPagosGpsRV';\r\n\r\nconst DEFAULT_VALUES: ValoresPagosGpsRV = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT),\r\n  exibirConfiguracaoDadosEmpresa: false,\r\n};\r\n\r\nconst ValoresPagosGpsReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const { handleSubmit, ...formProps } = useForm<ValoresPagosGpsRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n  const { globalParameter } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Declaração de Valores Pagos à GPS\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalParameter}\r\n      dependencies={[() => hasEmpresa(globalParameter), () => hasEmpresaMFP(globalParameter)]}\r\n    >\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n      >\r\n        <Row>\r\n          <Col>\r\n            <GuiaGpsIS id=\"guia\" formProps={{ ...formProps, validation: { required: true } }} label=\"Guia\" />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline formProps={formProps} id=\"cpf\" isPrependLabel={true} label=\"CPF\" placeholder=\"Informe o CPF\" type={InputType.CPF} />\r\n          </Col>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"conta\"\r\n              inputProps={true}\r\n              label=\"Nº Conta\"\r\n              formProps={{ ...formProps, validation: { ...onlyNumber(0, 9) } }}\r\n              isPrependLabel={true}\r\n              placeholder=\"Informe o Nº da Conta\"\r\n              type={InputType.NUMBER}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <AgenciaIS id=\"agencia\" formProps={formProps} isPrependLabel={true} label=\"Agência\" />\r\n          </Col>\r\n        </Row>\r\n      </ReportForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default ValoresPagosGpsReportView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMFP(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMFP) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o Módulo Folha de Pagamento. Para configurá-la acesse Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n","import { CompensacaoGps } from './compensacaoGps';\r\nimport { Fpas } from './fpas';\r\nimport { Gps } from './gps';\r\nimport { GpsDiversosAnexos } from './gpsDiversosAnexos';\r\nimport { GuiaGpsDetalhe } from './guiaGpsDetalhe';\r\nimport { GuiaGpsExample } from './guiaGpsExample';\r\nimport { PagamentoCooperativa } from './pagamentoCooperativa';\r\nimport { ProducaoRural } from './producaoRural';\r\n\r\nexport interface GuiaGps extends GuiaGpsExample {\r\n  dtVencimentoAtraso?: string;\r\n  vrEmpresa?: number;\r\n  vrINSSDescontado?: number;\r\n  vrSocioAutonomo?: number;\r\n  vrAcidenteTrabalho?: number;\r\n  vrTerceiros?: number;\r\n  vrRecolhimentoMinimo?: number;\r\n  gpsAcumulada?: GuiaGpsExample;\r\n  gps?: Gps;\r\n  fpas?: Fpas;\r\n  pagamentoCooperativa?: PagamentoCooperativa;\r\n  producaoRural?: ProducaoRural;\r\n  compensacoes?: CompensacaoGps[];\r\n  detalhe?: GuiaGpsDetalhe;\r\n  diversosAnexos?: GpsDiversosAnexos;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.guiagps';\r\n","import { Basic } from 'summer';\r\nimport { Banco } from '../mfp/banco';\r\nimport { AgenciaEmail } from './agenciaEmail';\r\nimport { AgenciaTelefone } from './agenciaTelefone';\r\nimport { CepBairro } from './cepBairro';\r\nimport { CepLocalidade } from './cepLocalidade';\r\nimport { CepTitulo } from './cepTitulo';\r\nimport { CepUF } from './cepUF';\r\n\r\nexport interface Agencia extends Basic {\r\n  bairro?: CepBairro;\r\n  banco?: Banco;\r\n  cep?: string;\r\n  cidade?: CepLocalidade;\r\n  complemento?: string;\r\n  digitoVerificador?: string;\r\n  emails?: AgenciaEmail[];\r\n  logradouro?: string;\r\n  nome?: string;\r\n  numero?: string;\r\n  numeroEndereco?: string;\r\n  observacao?: string;\r\n  telefones?: AgenciaTelefone[];\r\n  titulo?: CepTitulo;\r\n  uf?: CepUF;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.agencia';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mfp/guiaGps';\r\n\r\nconst GuiaGpsIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'referencia',\r\n            text: 'Referência',\r\n          },\r\n          {\r\n            dataField: 'dtVencimento',\r\n            text: 'Dt. de Vencimento',\r\n          },\r\n          {\r\n            dataField: 'tipo',\r\n            text: 'Tipo',\r\n          },\r\n          {\r\n            dataField: 'vrTotal',\r\n            text: 'Valor Total',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'GuiaGpsSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Guia Gps'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Guia GPS'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default GuiaGpsIS;\r\n"],"sourceRoot":""}
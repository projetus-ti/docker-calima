{"version":3,"sources":["views/pages/mfp/report/reciboProLabore/reciboProLaboreRV.ts","views/pages/mfp/report/reciboProLabore/ReciboProLaboreReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","dependencies/empresaMFPDependency.ts","dependencies/grupoEmpresaConfigDependency.ts","models/enumerated/mfp/categoriaEnum.ts","views/components/mfp/vinculoIS/VinculoIS.tsx","models/dtos/mfp/vinculoExample.ts","views/components/mfp/customizacaoTermoIS/CustomizacaoTermoIS.tsx","models/dtos/mfp/tomadorServico.ts","views/components/mfp/tomadorServicoIS/TomadorServicoIS.tsx"],"names":["DEFAULT_VALUES","Object","objectSpread2","getDefaultReportBasicValues","DEFAULT_OPTIONS","getDefaultReportViewOptions","exibirConfiguracaoDadosEmpresa","ReciboProLaboreReportView","props","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","objectWithoutProperties","globalParameter","useSelector","state","globalReducer","gerarPorEmpresas","getValues","useEffect","setTimeout","setValue","empresaMFP","referencia","react_default","a","createElement","summer_esm","title","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMFP","hasGrupoEmpresaConfig","wikiId","ReportForm","assign","localStorageKey","routeProps","reportBasicValues","reportViewOptions","validateExtras","erros","empresasSelecionadas","length","push","Row","Col","validation","required","id","label","placeholder","isPrependLabel","type","InputType","REFERENCE","className","CustomInput","name","innerRef","register","onChange","EmpresaIS","inputSearchProps","selectProps","isMulti","tooltipProps","message","disabled","VinculoIS","TomadorServicoIS","CustomizacaoTermoIS","apenasReciboProLabore","result","empresa","__webpack_require__","d","__webpack_exports__","NATUREZA","value","SALDO_REPORT_ENUM","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","gerarCabecalhoPadraoAdministradora","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","virtualization","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","errors","triggerValidation","handleCancel","currentItem","currentValues","parentObject","EnvioEmail","Fragment","sort","detailView","keyField","propName","maxLength","TEXT_AREA","ReportInputs","_useState","useState","_useState2","slicedToArray","activeTab","setActiveTab","_props$reportViewOpti","printingTypes","resetObject","idGerEmpresa","current","currentMomentDate","endDate","DATE","dtInicial","formatDate","toDate","DATES","dtFinal","endOf","referenciaInicial","format","REF_PATTERN","REFERENCES","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dtInicialRequired","dateComponent","datesComponent","dtFinalRequired","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","NUMBER","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","inputProps","style","marginBottom","size","segmentacaoFolhaComponent","exibirSegmentacaoFolha","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","exibirImprimirValoresColoridos","inputDropDownProps","optionsProvider","isClearable","DROP_DOWN","firstOpen","extraConfigOpened","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","hidden","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","params","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history","grupoEmpresaRaiz","grupoEmpresaConfig","grupoEmpresa","EMP_CONTR_PRAZO_DETERMINADO","EMPREGADO_DOMESTICO","MENOR_APRENDIZ","DIRETOR_EMPRESARIO_NAO_EMP_SEM_FGTS","AUTONOMO_CONTRIB_REMUNERACAO","TRABALHADOR_TEMPORARIO","EMPREGADO_TRABALHADOR_INTERMITENTE","CI_EMPRESARIO_SOCIO","ESTAGIARIO","EMPREGADO_CONTRATO_VERDE_AMARELO_SEM_ANT_FGTS","EMPREGADO_CONTRATO_VERDE_AMARELO_COM_ANT_FGTS","CATEGORIA_ENUM_VALUES","SOCIOS_VALUES","AUTONOMOS_VALUES","TRANSPORTADOR_VALUES","SEM_VINCULO_ESOCIAL_VALUES","TRABAVULSO","extraFields","codigoEsocial","codigoSefip","DIRETOR_NAO_EMP_COM_FGTS","AUTONOMO_CONTRIB_SAL_BASE","TRANSPORTADOR_CONTRIB_REMUNERACAO","TRANSPORTADOR_CONTRIB_SAL_BASE","COOPERADO","TRANSPORTADOR_COOPERADO","TRANSP_AUT_CONTRATADO_POR_CI","TRANSP_COOP_PRESTA_SERV_ENTIDADE_BENE","DIRIGENTE_SINDICAL","TRABALHADOR_AVULSO_PORTUARIO","SERVIDOR_PUBLICO_CONSELHO","CONSCRITO","TRABALHADOR_CEDIDO","CI_TRANSP_AUT_PASSAGEIROS","CI_TRANSP_AUT_CARGA","CI_COOPERADO_COOPERATIVA_PRODUCAO","CI_MICROEMPREENDEDOR_INDIVIDUAL","CI_MAGISTRADO_CLASSISTA","CI_ASSOCIADO_ELEITO_COOPERATIVA","CI_MEMBRO_CONSELHO_TUTELAR","MINISTRO_RELIGIOSO","MEDICO_RESIDENTE","BOLSISTA","PARTICIPANTE_CURSO_SEM_VINCULO","ATLETA_NAO_PROFISSIONAL","searchExpressions","expressions","apenasAutonomos","alias","conditionalGroup","fieldName","apenasAprendizes","apenasDomesticos","apenasEstagiarios","apenasSocios","searchViewProps","apenasInativos","apenasAbonoPecuniario","ABONO_PECUNIARIO","apenasTipo","AVISO_PREVIO_TRABALHADO","AVISO_PREVIO_INDENIZADO","PEDIDO_DEMISSAO","apenasAcordo","AVISO_PREVIO_ACORDO_TRABALHADO","AVISO_PREVIO_ACORDO_INDENIZADO","PEDIDO_DEMISSAO_ACORDO","apenasTermosCompensacaoHoras","TERMO_COMPENSACAO_HORAS","apenasTermoAditivo","TERMO_ADITIVO","apenasCartaRecomendacao","CARTA_RECOMENDACAO","apenasAvisoFerias","AVISO_FERIAS","apenasReciboEntregaCtps","RECIBO_CARTEIRA_DE_TRABALHO_ENTREGA","apenasReciboDevolucaoCtps","RECIBO_CARTEIRA_DE_TRABALHO_DEVOLUCAO","apenasReciboCestaBasica","RECIBO_CESTA_BASICA","apenasReciboValeTransporte","VALE_TRANSPORTE_RECIBO","apenasDeclaracaoOpcaoFgts","DECLARACAO_OPCAO_FGTS","apenasValeAlimentacaoRefeicaoRecibo","VALE_ALIMENTACAO_RECIBO","VALE_REFEICAO_RECIBO","apenasProrrogacaoHoraExtra","ACORDO_PRORROGACAO_HORA_EXTRA","apenasCartaSuspensao","CARTA_SUSPENSAO","apenasCartaPreposicao","CARTA_PREPOSICAO","apenasMsgContraCheque","MSG_CONTRA_CHEQUE","apenasMsgAniversario","MSG_ANIVERSARIO","RECIBO_PRO_LABORE"],"mappings":"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","file":"static/js/31.72d2bd51.chunk.js","sourcesContent":["import { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { CustomizacaoTermos } from '../../../../../models/dtos/mfp/customizacaoTermos';\r\nimport { TomadorServico } from '../../../../../models/dtos/mfp/tomadorServico';\r\nimport { VinculoExample } from '../../../../../models/dtos/mfp/vinculoExample';\r\n\r\nexport interface ReciboProLaboreRV extends ReportBasicValues {\r\n  termo?: CustomizacaoTermos;\r\n  socios?: VinculoExample[];\r\n  tomadores?: TomadorServico[];\r\n}\r\n\r\nexport const CLASS_KEY: string = 'reciboprolaborerv';\r\nexport const REPORT_EVENT: string = 'printReciboProLabore';\r\nexport const REPORT_TITLE: string = 'Recibo de Pró-Labore';\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { InputGroupInline, InputType, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMFP } from '../../../../../dependencies/empresaMFPDependency';\r\nimport { hasGrupoEmpresaConfig } from '../../../../../dependencies/grupoEmpresaConfigDependency';\r\nimport { getDefaultReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport EmpresaIS from '../../../../components/ger/empresaIS/EmpresaIS';\r\nimport CustomizacaoTermoIS from '../../../../components/mfp/customizacaoTermoIS/CustomizacaoTermoIS';\r\nimport TomadorServicoIS from '../../../../components/mfp/tomadorServicoIS/TomadorServicoIS';\r\nimport VinculoIS from '../../../../components/mfp/vinculoIS/VinculoIS';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { CLASS_KEY, ReciboProLaboreRV, REPORT_EVENT, REPORT_TITLE } from './reciboProLaboreRV';\r\n\r\nconst DEFAULT_VALUES: ReciboProLaboreRV = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT),\r\n  exibirConfiguracaoDadosEmpresa: false,\r\n};\r\n\r\nconst ReciboProLaboreReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const { handleSubmit, ...formProps } = useForm<ReciboProLaboreRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n  const { globalParameter } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const { gerarPorEmpresas } = formProps.getValues();\r\n\r\n  useEffect(\r\n    () => {\r\n      setTimeout(() => {\r\n        formProps.setValue('referenciaInicial', globalParameter.empresaMFP.referencia);\r\n      }, 200);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const onChangeGerarPorEmpresas = () => {\r\n    formProps.setValue('empresasSelecionadas', []);\r\n    formProps.setValue('socios', []);\r\n    formProps.setValue('tomadores', []);\r\n  };\r\n\r\n  const validateExtras = () => {\r\n    const erros = [];\r\n\r\n    if (gerarPorEmpresas && formProps.getValues().empresasSelecionadas.length === 0) {\r\n      erros.push(\"Campo 'Empresas' não pode estar em branco quando a opção 'Gerar por Empresas' estiver selecionada.\");\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Recibo de Pró-Labore\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalParameter}\r\n      dependencies={[() => hasEmpresa(globalParameter), () => hasEmpresaMFP(globalParameter), () => hasGrupoEmpresaConfig(globalParameter)]}\r\n      wikiId={2667}\r\n    >\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n        validateExtras={validateExtras}\r\n      >\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              id=\"referenciaInicial\"\r\n              label=\"Referência\"\r\n              placeholder=\"Informe a Referência\"\r\n              isPrependLabel={true}\r\n              type={InputType.REFERENCE}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"col-4\">\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"gerarPorEmpresas\"\r\n              name=\"gerarPorEmpresas\"\r\n              label=\"Gerar por Empresas\"\r\n              innerRef={formProps.register}\r\n              onChange={onChangeGerarPorEmpresas}\r\n            />\r\n          </Col>\r\n          <Col className=\"col-8\">\r\n            <EmpresaIS\r\n              formProps={formProps}\r\n              label=\"Empresa(s)\"\r\n              placeholder=\"Selecione no mínimo uma empresa\"\r\n              id=\"empresasSelecionadas\"\r\n              isPrependLabel={true}\r\n              inputSearchProps={{ selectProps: { isMulti: true } }}\r\n              tooltipProps={{ message: 'Empresas podem ser selecionadas.' }}\r\n              disabled={!gerarPorEmpresas}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <VinculoIS\r\n              id=\"socios\"\r\n              formProps={formProps}\r\n              label=\"Sócios\"\r\n              placeholder=\"Selecione os Sócios\"\r\n              isPrependLabel={true}\r\n              inputSearchProps={{ selectProps: { isMulti: true } }}\r\n              tooltipProps={{ message: 'Se nenhum sócio for selecionado todos serão utilizados.' }}\r\n              disabled={gerarPorEmpresas}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <TomadorServicoIS\r\n              id=\"tomadores\"\r\n              formProps={formProps}\r\n              label=\"Tomadores de Serviço\"\r\n              placeholder=\"Selecione os Tomadores\"\r\n              isPrependLabel={true}\r\n              inputSearchProps={{ selectProps: { isMulti: true } }}\r\n              tooltipProps={{ message: 'Se nenhum tomador for selecionado todos serão utilizados.' }}\r\n              disabled={gerarPorEmpresas}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <CustomizacaoTermoIS\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              label=\"Termo\"\r\n              apenasReciboProLabore={true}\r\n              placeholder=\"Selecione o Termo\"\r\n              id=\"termo\"\r\n              isPrependLabel={true}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </ReportForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default ReciboProLaboreReportView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMFP(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMFP) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o Módulo Folha de Pagamento. Para configurá-la acesse Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasGrupoEmpresaConfig(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n\r\n  const msg: string =\r\n    'O Grupo de empresas não está configurado para a empresa selecionada. Para configurar acesse:\\n' +\r\n    'Modulo Principal > Manutenção > Configurações > Grupo de Empresa';\r\n\r\n  if (\r\n    !globalParameter.empresa ||\r\n    !globalParameter.empresa.grupoEmpresaRaiz.grupoEmpresaConfig ||\r\n    !globalParameter.empresa.grupoEmpresa.grupoEmpresaConfig\r\n  ) {\r\n    result = msg;\r\n  }\r\n\r\n  return result;\r\n}\r\n","export const EMPREGADO = {\r\n  extraFields: { codigoEsocial: '101', codigoSefip: '01' },\r\n  label: '01 / 101 - Empregado',\r\n  value: 'EMPREGADO',\r\n};\r\nexport const TRABAVULSO = {\r\n  extraFields: { codigoEsocial: '202', codigoSefip: '02' },\r\n  label: '02 / 202 - Trabalhador Avulso',\r\n  value: 'TRABAVULSO',\r\n};\r\nexport const TRAB_CONTR_NAO_VINC_RGPS = {\r\n  extraFields: { codigoEsocial: '101', codigoSefip: '03' },\r\n  label: '03 / 101 - Trabalhador não vinculado ao RGPS, mas com direito ao FGTS',\r\n  value: 'TRAB_CONTR_NAO_VINC_RGPS',\r\n};\r\nexport const EMP_CONTR_PRAZO_DETERMINADO = {\r\n  extraFields: { codigoEsocial: '105', codigoSefip: '04' },\r\n  label: '04 / 105 - Empregado - Prazo determinado (Lei n° 9.601/98)',\r\n  value: 'EMP_CONTR_PRAZO_DETERMINADO',\r\n};\r\nexport const DIRETOR_NAO_EMP_COM_FGTS = {\r\n  extraFields: { codigoEsocial: '721', codigoSefip: '05' },\r\n  label: '05 / 721 - C.I. - Diretor não empregado com FGTS (Lei nº 8.036/90, art. 16)',\r\n  value: 'DIRETOR_NAO_EMP_COM_FGTS',\r\n};\r\nexport const EMPREGADO_DOMESTICO = {\r\n  extraFields: { codigoEsocial: '104', codigoSefip: '06' },\r\n  label: '06 / 104 - Empregado doméstico',\r\n  value: 'EMPREGADO_DOMESTICO',\r\n};\r\nexport const MENOR_APRENDIZ = {\r\n  extraFields: { codigoEsocial: '103', codigoSefip: '07' },\r\n  label: '07 / 103 - Menor Aprendiz (Lei nº 11.180/2005)',\r\n  value: 'MENOR_APRENDIZ',\r\n};\r\nexport const DIRETOR_EMPRESARIO_NAO_EMP_SEM_FGTS = {\r\n  extraFields: { codigoEsocial: '722', codigoSefip: '11' },\r\n  label: '11 / 722 - C.I. - Diretor não empregado e demais empresários sem FGTS',\r\n  value: 'DIRETOR_EMPRESARIO_NAO_EMP_SEM_FGTS',\r\n};\r\nexport const DEMAIS_AGENTES_PUBLICOS = {\r\n  extraFields: { codigoEsocial: '309', codigoSefip: '12' },\r\n  label: '12 / 309 - Demais agentes públicos',\r\n  value: 'DEMAIS_AGENTES_PUBLICOS',\r\n};\r\nexport const AUTONOMO_CONTRIB_REMUNERACAO = {\r\n  extraFields: { codigoEsocial: '701', codigoSefip: '13' },\r\n  label: '13 / 701 - C.I. – Trabalhador autônomo com contribuição sobre remuneração; trabalhador associado à cooperativa de produção',\r\n  value: 'AUTONOMO_CONTRIB_REMUNERACAO',\r\n};\r\nexport const AUTONOMO_CONTRIB_SAL_BASE = {\r\n  extraFields: { codigoEsocial: '701', codigoSefip: '14' },\r\n  label: '14 / 701 - C.I. - Trabalhador autônomo com contribuição sobre salário base',\r\n  value: 'AUTONOMO_CONTRIB_SAL_BASE',\r\n};\r\nexport const TRANSPORTADOR_CONTRIB_REMUNERACAO = {\r\n  extraFields: { codigoEsocial: '712', codigoSefip: '15' },\r\n  label: '15 / 712 - C.I. - Transportador autônomo, com contribuição sobre remuneração',\r\n  value: 'TRANSPORTADOR_CONTRIB_REMUNERACAO',\r\n};\r\nexport const TRANSPORTADOR_CONTRIB_SAL_BASE = {\r\n  extraFields: { codigoEsocial: '712', codigoSefip: '16' },\r\n  label: '16 / 712 - C.I. - Transportador autônomo, com contribuição sobre salário base',\r\n  value: 'TRANSPORTADOR_CONTRIB_SAL_BASE',\r\n};\r\nexport const COOPERADO = {\r\n  extraFields: { codigoEsocial: '731', codigoSefip: '17' },\r\n  label: '17 / 731 - C.I. - Cooperado que presta serviços a empresas contratantes da cooperativa de trabalho',\r\n  value: 'COOPERADO',\r\n};\r\nexport const TRANSPORTADOR_COOPERADO = {\r\n  extraFields: { codigoEsocial: '734', codigoSefip: '18' },\r\n  label: '18 / 734 - C.I. - Transportador cooperado que presta serviços a empresas contratantes da cooperativa de trabalho',\r\n  value: 'TRANSPORTADOR_COOPERADO',\r\n};\r\nexport const AGENTE_POLITICO = {\r\n  extraFields: { codigoEsocial: '303', codigoSefip: '19' },\r\n  label: '19 / 303 - Agente Político',\r\n  value: 'AGENTE_POLITICO',\r\n};\r\nexport const SERV_PUBLICO_TEMPORARIO = {\r\n  extraFields: { codigoEsocial: '306', codigoSefip: '20' },\r\n  label: '20 / 306 - Servidor Público ocupante, exclusivamente, de cargo em comissão, Servidor Público ocupante de cargo temporário',\r\n  value: 'SERV_PUBLICO_TEMPORARIO',\r\n};\r\nexport const SERV_PUBLICO_EFETIVO = {\r\n  extraFields: { codigoEsocial: '301', codigoSefip: '21' },\r\n  label: '21 / 301 - Servidor Público titular de cargo efetivo, magistrado, membro do Ministério Público e do Tribunal e Conselho de Contas',\r\n  value: 'SERV_PUBLICO_EFETIVO',\r\n};\r\nexport const CI_CONTRATADO_POR_CI = {\r\n  extraFields: { codigoEsocial: '101', codigoSefip: '22' },\r\n  label:\r\n    '22 / 101 - C.I. - Contratado por outro C.I. equiparado a empresa ou por produtor rural pessoa física ou por missão diplomática e repartição consular de carreira estrangeiras',\r\n  value: 'CI_CONTRATADO_POR_CI',\r\n};\r\nexport const TRANSP_AUT_CONTRATADO_POR_CI = {\r\n  extraFields: { codigoEsocial: '101', codigoSefip: '23' },\r\n  label:\r\n    '23 / 101 - C.I. - Transportador autônomo contratado por outro C.I. equiparado à empresa ou por produtor rural pessoa física ou por missão diplomática e ' +\r\n    'repartição consular de carreira estrangeiras',\r\n  value: 'TRANSP_AUT_CONTRATADO_POR_CI',\r\n};\r\nexport const COOPERADO_PRESTA_SERV_ENTIDADE_BENE = {\r\n  extraFields: { codigoEsocial: '101', codigoSefip: '24' },\r\n  label:\r\n    '24 / 101 - C.I. - Cooperado que presta serviços à entidade beneficente de assistência social isenta da cota patronal ou a pessoa física,' +\r\n    ' por intermédioda cooperativa de trabalho',\r\n  value: 'COOPERADO_PRESTA_SERV_ENTIDADE_BENE',\r\n};\r\nexport const TRANSP_COOP_PRESTA_SERV_ENTIDADE_BENE = {\r\n  extraFields: { codigoEsocial: '101', codigoSefip: '25' },\r\n  label:\r\n    '25 / 101 - C.I. - Transportador cooperado que presta serviços a entidade beneficente de assistência social isenta da cota patronal ou a pessoa física, ' +\r\n    'por intermédio da cooperativa de trabalho',\r\n  value: 'TRANSP_COOP_PRESTA_SERV_ENTIDADE_BENE',\r\n};\r\nexport const DIRIGENTE_SINDICAL = {\r\n  extraFields: { codigoEsocial: '401', codigoSefip: '26' },\r\n  label:\r\n    '26 / 401 - Dirigente sindical, em relação ao adicional pago pelo sindicato; magistrado classista temporário da Justiça do Trabalho; magistrado dos Tribunais Eleitorais, ' +\r\n    'quando, nas três situações, for mantida a qualidade de segurado empregado (sem FGTS)',\r\n  value: 'DIRIGENTE_SINDICAL',\r\n};\r\nexport const EMPREGADO_TRABALHADOR_RURAL = {\r\n  extraFields: { codigoEsocial: '102' },\r\n  label: '102 - Empregado - Trabalhador Rural por Pequeno Prazo da Lei 11.718/2008',\r\n  value: 'EMPREGADO_TRABALHADOR_RURAL',\r\n};\r\nexport const TRABALHADOR_TEMPORARIO = {\r\n  extraFields: { codigoEsocial: '106' },\r\n  label: '106 - Trabalhador Temporário - contrato nos termos da Lei 6.019/74',\r\n  value: 'TRABALHADOR_TEMPORARIO',\r\n};\r\nexport const EMPREGADO_TRABALHADOR_INTERMITENTE = {\r\n  extraFields: { codigoEsocial: '111' },\r\n  label: '111 - Empregado - contrato de trabalho intermitente',\r\n  value: 'EMPREGADO_TRABALHADOR_INTERMITENTE',\r\n};\r\nexport const TRABALHADOR_AVULSO_PORTUARIO = {\r\n  extraFields: { codigoEsocial: '201' },\r\n  label: '201 - Trabalhador Avulso Portuário',\r\n  value: 'TRABALHADOR_AVULSO_PORTUARIO',\r\n};\r\nexport const SERVIDOR_PUBLICO_EXCLUSIVO = {\r\n  extraFields: { codigoEsocial: '302' },\r\n  label: '302 - Servidor Público Ocupante de Cargo exclusivo em comissão',\r\n  value: 'SERVIDOR_PUBLICO_EXCLUSIVO',\r\n};\r\nexport const SERVIDOR_PUBLICO_CONSELHO = {\r\n  extraFields: { codigoEsocial: '305' },\r\n  label:\r\n    '305 - Servidor Público indicado para conselho ou órgão deliberativo, na condição de representante do governo, órgão ou entidade da administração pública',\r\n  value: 'SERVIDOR_PUBLICO_CONSELHO',\r\n};\r\nexport const MILITAR_EFETIVO = {\r\n  extraFields: { codigoEsocial: '307' },\r\n  label: '307 - Militar efetivo',\r\n  value: 'MILITAR_EFETIVO',\r\n};\r\nexport const CONSCRITO = {\r\n  extraFields: { codigoEsocial: '308' },\r\n  label: '308 - Conscrito',\r\n  value: 'CONSCRITO',\r\n};\r\nexport const TRABALHADOR_CEDIDO = {\r\n  extraFields: { codigoEsocial: '410' },\r\n  label: '410 - Trabalhador cedido - informação prestada pelo Cessionário',\r\n  value: 'TRABALHADOR_CEDIDO',\r\n};\r\nexport const CI_TRANSP_AUT_PASSAGEIROS = {\r\n  extraFields: { codigoEsocial: '711' },\r\n  label: '711 - Contribuinte individual - Transportador autônomo de passageiros',\r\n  value: 'CI_TRANSP_AUT_PASSAGEIROS',\r\n};\r\nexport const CI_TRANSP_AUT_CARGA = {\r\n  extraFields: { codigoEsocial: '712' },\r\n  label: '712 - Contribuinte individual - Transportador autônomo de carga',\r\n  value: 'CI_TRANSP_AUT_CARGA',\r\n};\r\nexport const CI_EMPRESARIO_SOCIO = {\r\n  extraFields: { codigoEsocial: '723' },\r\n  label: '723 - Contribuinte individual - empresários, sócios e membro de conselho de administração ou fiscal',\r\n  value: 'CI_EMPRESARIO_SOCIO',\r\n};\r\nexport const CI_COOPERADO_COOPERATIVA_PRODUCAO = {\r\n  extraFields: { codigoEsocial: '738' },\r\n  label: '738 - Contribuinte individual - Cooperado filiado a Cooperativa de Produção',\r\n  value: 'CI_COOPERADO_COOPERATIVA_PRODUCAO',\r\n};\r\nexport const CI_MICROEMPREENDEDOR_INDIVIDUAL = {\r\n  extraFields: { codigoEsocial: '741' },\r\n  label: '741 - Contribuinte individual - Microempreendedor Individual',\r\n  value: 'CI_MICROEMPREENDEDOR_INDIVIDUAL',\r\n};\r\nexport const CI_MAGISTRADO_CLASSISTA = {\r\n  extraFields: { codigoEsocial: '751' },\r\n  label:\r\n    '751 - Contribuinte individual - magistrado classista temporário da Justiça do Trabalho ou da Justiça Eleitoral que seja aposentado de qualquer regime previdenciário',\r\n  value: 'CI_MAGISTRADO_CLASSISTA',\r\n};\r\nexport const CI_ASSOCIADO_ELEITO_COOPERATIVA = {\r\n  extraFields: { codigoEsocial: '761' },\r\n  label:\r\n    '761 - Contribuinte individual - Associado eleito para direção de Cooperativa, associação ou entidade de classe qualquer natureza ou finalidade, bem como o síndico ' +\r\n    'ou administrador eleito para exercer atividade de direção condominial, desde que recebam remuneração',\r\n  value: 'CI_ASSOCIADO_ELEITO_COOPERATIVA',\r\n};\r\nexport const CI_MEMBRO_CONSELHO_TUTELAR = {\r\n  extraFields: { codigoEsocial: '771' },\r\n  label: '771 - Contribuinte individual - Membro de conselho tutelar, nos termos da Lei nº 8.069, de 13 julho 1990',\r\n  value: 'CI_MEMBRO_CONSELHO_TUTELAR',\r\n};\r\nexport const MINISTRO_RELIGIOSO = {\r\n  extraFields: { codigoEsocial: '781' },\r\n  label: '781 - Ministro de confissão religiosa ou membro de vida consagrada, de congregação ou de ordem religiosa',\r\n  value: 'MINISTRO_RELIGIOSO',\r\n};\r\nexport const ESTAGIARIO = {\r\n  extraFields: { codigoEsocial: '901', codigoSefip: '45' },\r\n  label: '45 / 901 - Estagiário',\r\n  value: 'ESTAGIARIO',\r\n};\r\nexport const MEDICO_RESIDENTE = {\r\n  extraFields: { codigoEsocial: '902' },\r\n  label: '902 - Médico Residente',\r\n  value: 'MEDICO_RESIDENTE',\r\n};\r\nexport const BOLSISTA = {\r\n  extraFields: { codigoEsocial: '903' },\r\n  label: '903 - Bolsista, nos termos da lei 8958/1994',\r\n  value: 'BOLSISTA',\r\n};\r\nexport const PARTICIPANTE_CURSO_SEM_VINCULO = {\r\n  extraFields: { codigoEsocial: '904' },\r\n  label: '904 - Participante de curso de formação, como etapa de concurso público, sem vínculo de emprego/estatutário',\r\n  value: 'PARTICIPANTE_CURSO_SEM_VINCULO',\r\n};\r\nexport const ATLETA_NAO_PROFISSIONAL = {\r\n  extraFields: { codigoEsocial: '905' },\r\n  label: '905 - Atleta não profissional em formação que receba bolsa',\r\n  value: 'ATLETA_NAO_PROFISSIONAL',\r\n};\r\nexport const EMPREGADO_CONTRATO_VERDE_AMARELO_SEM_ANT_FGTS = {\r\n  extraFields: { codigoEsocial: '107' },\r\n  label: '107 - Empregado - Contrato de trabalho Verde e Amarelo - sem acordo para antecipação mensal da multa rescisória do FGTS',\r\n  value: 'EMPREGADO_CONTRATO_VERDE_AMARELO_SEM_ANT_FGTS',\r\n};\r\nexport const EMPREGADO_CONTRATO_VERDE_AMARELO_COM_ANT_FGTS = {\r\n  extraFields: { codigoEsocial: '108' },\r\n  label: '108 - Empregado - Contrato de trabalho Verde e Amarelo - com acordo para antecipação mensal da multa rescisória do FGTS',\r\n  value: 'EMPREGADO_CONTRATO_VERDE_AMARELO_COM_ANT_FGTS',\r\n};\r\n\r\nexport const CATEGORIA_ENUM_VALUES = [\r\n  EMPREGADO,\r\n  TRABAVULSO,\r\n  TRAB_CONTR_NAO_VINC_RGPS,\r\n  EMP_CONTR_PRAZO_DETERMINADO,\r\n  DIRETOR_NAO_EMP_COM_FGTS,\r\n  EMPREGADO_DOMESTICO,\r\n  MENOR_APRENDIZ,\r\n  DIRETOR_EMPRESARIO_NAO_EMP_SEM_FGTS,\r\n  DEMAIS_AGENTES_PUBLICOS,\r\n  AUTONOMO_CONTRIB_REMUNERACAO,\r\n  AUTONOMO_CONTRIB_SAL_BASE,\r\n  TRANSPORTADOR_CONTRIB_REMUNERACAO,\r\n  TRANSPORTADOR_CONTRIB_SAL_BASE,\r\n  COOPERADO,\r\n  TRANSPORTADOR_COOPERADO,\r\n  AGENTE_POLITICO,\r\n  SERV_PUBLICO_TEMPORARIO,\r\n  SERV_PUBLICO_EFETIVO,\r\n  CI_CONTRATADO_POR_CI,\r\n  TRANSP_AUT_CONTRATADO_POR_CI,\r\n  COOPERADO_PRESTA_SERV_ENTIDADE_BENE,\r\n  TRANSP_COOP_PRESTA_SERV_ENTIDADE_BENE,\r\n  DIRIGENTE_SINDICAL,\r\n  EMPREGADO_TRABALHADOR_RURAL,\r\n  TRABALHADOR_TEMPORARIO,\r\n  EMPREGADO_TRABALHADOR_INTERMITENTE,\r\n  TRABALHADOR_AVULSO_PORTUARIO,\r\n  SERVIDOR_PUBLICO_EXCLUSIVO,\r\n  SERVIDOR_PUBLICO_CONSELHO,\r\n  MILITAR_EFETIVO,\r\n  CONSCRITO,\r\n  TRABALHADOR_CEDIDO,\r\n  CI_TRANSP_AUT_PASSAGEIROS,\r\n  CI_TRANSP_AUT_CARGA,\r\n  CI_EMPRESARIO_SOCIO,\r\n  CI_COOPERADO_COOPERATIVA_PRODUCAO,\r\n  CI_MICROEMPREENDEDOR_INDIVIDUAL,\r\n  CI_MAGISTRADO_CLASSISTA,\r\n  CI_ASSOCIADO_ELEITO_COOPERATIVA,\r\n  CI_MEMBRO_CONSELHO_TUTELAR,\r\n  MINISTRO_RELIGIOSO,\r\n  ESTAGIARIO,\r\n  MEDICO_RESIDENTE,\r\n  BOLSISTA,\r\n  PARTICIPANTE_CURSO_SEM_VINCULO,\r\n  ATLETA_NAO_PROFISSIONAL,\r\n  EMPREGADO_CONTRATO_VERDE_AMARELO_SEM_ANT_FGTS,\r\n  EMPREGADO_CONTRATO_VERDE_AMARELO_COM_ANT_FGTS,\r\n];\r\n\r\nexport const SOCIOS_VALUES = [DIRETOR_NAO_EMP_COM_FGTS, DIRETOR_EMPRESARIO_NAO_EMP_SEM_FGTS, CI_EMPRESARIO_SOCIO];\r\n\r\nexport const AUTONOMOS_VALUES = [\r\n  TRABAVULSO,\r\n  AUTONOMO_CONTRIB_REMUNERACAO,\r\n  TRANSP_COOP_PRESTA_SERV_ENTIDADE_BENE,\r\n  AUTONOMO_CONTRIB_SAL_BASE,\r\n  TRANSPORTADOR_CONTRIB_REMUNERACAO,\r\n  TRANSPORTADOR_COOPERADO,\r\n  COOPERADO,\r\n  TRANSPORTADOR_CONTRIB_SAL_BASE,\r\n  TRANSP_AUT_CONTRATADO_POR_CI,\r\n  CI_TRANSP_AUT_PASSAGEIROS,\r\n  CI_TRANSP_AUT_CARGA,\r\n];\r\n\r\nexport const TRANSPORTADOR_VALUES = [\r\n  TRANSPORTADOR_CONTRIB_REMUNERACAO,\r\n  TRANSPORTADOR_CONTRIB_SAL_BASE,\r\n  TRANSPORTADOR_COOPERADO,\r\n  TRANSP_AUT_CONTRATADO_POR_CI,\r\n  TRANSP_COOP_PRESTA_SERV_ENTIDADE_BENE,\r\n];\r\n\r\nexport const SEM_VINCULO_ESOCIAL_VALUES = [\r\n  TRABALHADOR_AVULSO_PORTUARIO,\r\n  TRABAVULSO,\r\n  SERVIDOR_PUBLICO_CONSELHO,\r\n  CONSCRITO,\r\n  DIRIGENTE_SINDICAL,\r\n  TRABALHADOR_CEDIDO,\r\n  AUTONOMO_CONTRIB_REMUNERACAO,\r\n  AUTONOMO_CONTRIB_SAL_BASE,\r\n  CI_TRANSP_AUT_PASSAGEIROS,\r\n  CI_TRANSP_AUT_CARGA,\r\n  DIRETOR_NAO_EMP_COM_FGTS,\r\n  DIRETOR_EMPRESARIO_NAO_EMP_SEM_FGTS,\r\n  CI_EMPRESARIO_SOCIO,\r\n  COOPERADO,\r\n  TRANSPORTADOR_COOPERADO,\r\n  CI_COOPERADO_COOPERATIVA_PRODUCAO,\r\n  CI_MICROEMPREENDEDOR_INDIVIDUAL,\r\n  CI_MAGISTRADO_CLASSISTA,\r\n  CI_ASSOCIADO_ELEITO_COOPERATIVA,\r\n  CI_MEMBRO_CONSELHO_TUTELAR,\r\n  MINISTRO_RELIGIOSO,\r\n  ESTAGIARIO,\r\n  MEDICO_RESIDENTE,\r\n  BOLSISTA,\r\n  PARTICIPANTE_CURSO_SEM_VINCULO,\r\n  ATLETA_NAO_PROFISSIONAL,\r\n];\r\n\r\nexport const DOMESTICO_TEMPORARIO_VALUES = [EMPREGADO_DOMESTICO, TRABALHADOR_TEMPORARIO];\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { InputSearchProps } from 'summer/dist/views/components/inputSearch/InputSearch';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mfp/vinculoExample';\r\nimport { AUTONOMOS_VALUES, EMPREGADO_DOMESTICO, ESTAGIARIO, MENOR_APRENDIZ, SOCIOS_VALUES } from '../../../../models/enumerated/mfp/categoriaEnum';\r\n\r\nexport interface VinculoInputSearchProps extends InputProps {\r\n  apenasAutonomos?: boolean;\r\n  apenasAprendizes?: boolean;\r\n  apenasDomesticos?: boolean;\r\n  apenasEstagiarios?: boolean;\r\n  apenasInativos?: boolean;\r\n  apenasSocios?: boolean;\r\n}\r\n\r\nconst VinculoIS: FC<VinculoInputSearchProps> = props => {\r\n  function getSearchExpression(): SearchExpression[] {\r\n    let expressions = [];\r\n    if (props.apenasAutonomos) {\r\n      expressions = [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'categoria',\r\n          value: AUTONOMOS_VALUES,\r\n        },\r\n      ];\r\n    }\r\n    if (props.apenasAprendizes) {\r\n      expressions = [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'categoria',\r\n          value: MENOR_APRENDIZ.value,\r\n        },\r\n      ];\r\n    }\r\n    if (props.apenasDomesticos) {\r\n      expressions = [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'categoria',\r\n          value: EMPREGADO_DOMESTICO.value,\r\n        },\r\n      ];\r\n    }\r\n    if (props.apenasEstagiarios) {\r\n      expressions = [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'categoria',\r\n          value: ESTAGIARIO.value,\r\n        },\r\n      ];\r\n    }\r\n    if (props.apenasSocios) {\r\n      expressions = [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'categoria',\r\n          value: SOCIOS_VALUES,\r\n        },\r\n      ];\r\n    }\r\n    return expressions;\r\n  }\r\n\r\n  const inputSearchProps: InputSearchProps<any> = {\r\n    ...props.inputSearchProps,\r\n    columns: [\r\n      {\r\n        dataField: 'matricula',\r\n        text: 'Matrícula',\r\n      },\r\n      {\r\n        dataField: 'nome',\r\n        text: 'Trabalhador',\r\n      },\r\n      {\r\n        dataField: 'categoria',\r\n        text: 'Categoria',\r\n      },\r\n      {\r\n        dataField: 'dataAdmissao',\r\n        text: 'Dt. Admissão',\r\n      },\r\n      {\r\n        dataField: 'dataAfastamentoMovimentacao',\r\n        text: 'Dt. Último Afastamento',\r\n      },\r\n      {\r\n        dataField: 'dataAfastamentoRecisao',\r\n        text: 'Dt. Rescisão',\r\n      },\r\n      {\r\n        dataField: 'cpf',\r\n        text: 'CPF',\r\n      },\r\n    ],\r\n    dtoClassName: CLASS_NAME,\r\n    searchExpressions: getSearchExpression,\r\n    searchViewId: 'VinculoSearchView',\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      type={InputType.INPUT_SEARCH}\r\n      inputSearchProps={inputSearchProps}\r\n      searchViewProps={{ apenasInativos: props.apenasInativos }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default VinculoIS;\r\n","import { Basic } from 'summer';\r\nimport { EmpresaMFP } from './empresaMFP';\r\n\r\nexport interface VinculoExample extends Basic {\r\n  /** este campo utiliza o enum CategoriaEnum */\r\n  categoria?: string;\r\n  codigo?: string;\r\n  cpf?: string;\r\n  dataAdmissao?: string;\r\n  dataAfastamentoMovimentacao?: string;\r\n  dataAfastamentoRecisao?: string;\r\n  dataAfastamentoResilicao?: string;\r\n  dataRetornoMovimentacao?: string;\r\n  empresaMFP?: EmpresaMFP;\r\n  matricula?: number;\r\n  nome?: string;\r\n  pis?: string;\r\n  /** este campo utiliza o enum TipoResilicaoEnum */\r\n  tipoResilicao?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.vinculoexample';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { InputSearchProps } from 'summer/dist/views/components/inputSearch/InputSearch';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mfp/customizacaoTermos';\r\nimport {\r\n  ABONO_PECUNIARIO,\r\n  ACORDO_PRORROGACAO_HORA_EXTRA,\r\n  AVISO_FERIAS,\r\n  AVISO_PREVIO_ACORDO_INDENIZADO,\r\n  AVISO_PREVIO_ACORDO_TRABALHADO,\r\n  AVISO_PREVIO_INDENIZADO,\r\n  AVISO_PREVIO_TRABALHADO,\r\n  CARTA_PREPOSICAO,\r\n  CARTA_RECOMENDACAO,\r\n  CARTA_SUSPENSAO,\r\n  DECLARACAO_OPCAO_FGTS,\r\n  MSG_ANIVERSARIO,\r\n  MSG_CONTRA_CHEQUE,\r\n  PEDIDO_DEMISSAO,\r\n  PEDIDO_DEMISSAO_ACORDO,\r\n  RECIBO_CARTEIRA_DE_TRABALHO_DEVOLUCAO,\r\n  RECIBO_CARTEIRA_DE_TRABALHO_ENTREGA,\r\n  RECIBO_CESTA_BASICA,\r\n  RECIBO_PRO_LABORE,\r\n  TERMO_ADITIVO,\r\n  TERMO_COMPENSACAO_HORAS,\r\n  VALE_ALIMENTACAO_RECIBO,\r\n  VALE_REFEICAO_RECIBO,\r\n  VALE_TRANSPORTE_RECIBO,\r\n} from '../../../../models/enumerated/mfp/customizacaoTermosTipoEnum';\r\n\r\nexport interface CustomizacaoTermoSearchViewProps extends InputProps {\r\n  apenasAbonoPecuniario?: boolean;\r\n  apenasTipo?: boolean;\r\n  apenasAcordo?: boolean;\r\n  apenasTermosCompensacaoHoras?: boolean;\r\n  apenasTermoAditivo?: boolean;\r\n  apenasCartaRecomendacao?: boolean;\r\n  apenasAvisoFerias?: boolean;\r\n  apenasReciboEntregaCtps?: boolean;\r\n  apenasReciboDevolucaoCtps?: boolean;\r\n  apenasReciboCestaBasica?: boolean;\r\n  apenasReciboValeTransporte?: boolean;\r\n  apenasDeclaracaoOpcaoFgts?: boolean;\r\n  apenasValeAlimentacaoRefeicaoRecibo?: boolean;\r\n  apenasProrrogacaoHoraExtra?: boolean;\r\n  apenasCartaSuspensao?: boolean;\r\n  apenasCartaPreposicao?: boolean;\r\n  apenasMsgContraCheque?: boolean;\r\n  apenasMsgAniversario?: boolean;\r\n  apenasReciboProLabore?: boolean;\r\n}\r\n\r\nconst CustomizacaoTermoIS: FC<CustomizacaoTermoSearchViewProps> = props => {\r\n  function getSearchExpression(): SearchExpression[] {\r\n    if (props.apenasAbonoPecuniario) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: ABONO_PECUNIARIO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasTipo) {\r\n      return [\r\n        {\r\n          alias: 'c1',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: AVISO_PREVIO_TRABALHADO.value,\r\n        },\r\n        {\r\n          alias: 'c2',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: AVISO_PREVIO_INDENIZADO.value,\r\n        },\r\n        {\r\n          alias: 'c3',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: PEDIDO_DEMISSAO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasAcordo) {\r\n      return [\r\n        {\r\n          alias: 'c1',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: AVISO_PREVIO_ACORDO_TRABALHADO.value,\r\n        },\r\n        {\r\n          alias: 'c2',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: AVISO_PREVIO_ACORDO_INDENIZADO.value,\r\n        },\r\n        {\r\n          alias: 'c3',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: PEDIDO_DEMISSAO_ACORDO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasTermosCompensacaoHoras) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: TERMO_COMPENSACAO_HORAS.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasTermoAditivo) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: TERMO_ADITIVO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasCartaRecomendacao) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: CARTA_RECOMENDACAO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasAvisoFerias) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: AVISO_FERIAS.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasReciboEntregaCtps) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: RECIBO_CARTEIRA_DE_TRABALHO_ENTREGA.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasReciboDevolucaoCtps) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: RECIBO_CARTEIRA_DE_TRABALHO_DEVOLUCAO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasReciboCestaBasica) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: RECIBO_CESTA_BASICA.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasReciboValeTransporte) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: VALE_TRANSPORTE_RECIBO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasDeclaracaoOpcaoFgts) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: DECLARACAO_OPCAO_FGTS.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasValeAlimentacaoRefeicaoRecibo) {\r\n      return [\r\n        {\r\n          alias: 'c1',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: VALE_ALIMENTACAO_RECIBO.value,\r\n        },\r\n        {\r\n          alias: 'c2',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: VALE_REFEICAO_RECIBO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasProrrogacaoHoraExtra) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: ACORDO_PRORROGACAO_HORA_EXTRA.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasCartaSuspensao) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: CARTA_SUSPENSAO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasCartaPreposicao) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: CARTA_PREPOSICAO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasMsgContraCheque) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: MSG_CONTRA_CHEQUE.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasMsgAniversario) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: MSG_ANIVERSARIO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasReciboProLabore) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: RECIBO_PRO_LABORE.value,\r\n        },\r\n      ];\r\n    }\r\n    return [];\r\n  }\r\n\r\n  const inputSearchProps: InputSearchProps<any> = {\r\n    ...props.inputSearchProps,\r\n    columns: [\r\n      {\r\n        dataField: 'descricao',\r\n        text: 'Descrição',\r\n      },\r\n      {\r\n        dataField: 'termo',\r\n        text: 'Termo',\r\n      },\r\n    ],\r\n    dtoClassName: CLASS_NAME,\r\n    searchExpressions: getSearchExpression,\r\n    searchViewId: 'CustomizacaoTermosSearchView',\r\n  };\r\n\r\n  return <InputGroupInline {...props} type={InputType.INPUT_SEARCH} inputSearchProps={inputSearchProps} />;\r\n};\r\n\r\nexport default CustomizacaoTermoIS;\r\n","import { Basic } from 'summer';\r\nimport { CentroCusto } from '../ger/centroCusto';\r\nimport { Fpas } from './fpas';\r\nimport { Gps } from './gps';\r\nimport { LotacaoTributaria } from './lotacaoTributaria';\r\nimport { TomadorServicoEmail } from './tomadorServicoEmail';\r\nimport { TomadorServicoEndereco } from './tomadorServicoEndereco';\r\nimport { TomadorServicoTelefone } from './tomadorServicoTelefone';\r\n\r\nexport interface TomadorServico extends Basic {\r\n  aliquotaFap?: number;\r\n  aliquotaRat?: number;\r\n  caepf?: string;\r\n  cei?: string;\r\n  centroCusto?: CentroCusto;\r\n  cnaef?: string;\r\n  cnaefDesmembramento?: string;\r\n  cnpj?: string;\r\n  codigo?: number;\r\n  codigoDeducaoTerceiros?: string;\r\n  codigoFpas?: Fpas;\r\n  codigoGps?: Gps;\r\n  codigoGpsTerceiros?: Gps;\r\n  /** este campo utiliza o enum CodigoRecolhimentoEnum */\r\n  codigoRecolhimentoSefip?: string;\r\n  contribuicaoPatronalSubstituida?: boolean;\r\n  /** este campo utiliza o enum TipoControlePontoEnum */\r\n  controlePonto?: string;\r\n  emails?: TomadorServicoEmail[];\r\n  enderecos?: TomadorServicoEndereco[];\r\n  /** este campo utiliza o enum IndicativoContratacaoAprendizEnum */\r\n  indicativoContratacaoAprendiz?: string;\r\n  /** este campo utiliza o enum IndicativoContratacaoPCDEnum */\r\n  indicativoContratacaoPCD?: string;\r\n  isCnpjInscricaoContratante?: boolean;\r\n  isCnpjInscricaoProprietario?: boolean;\r\n  lotacaoTributaria?: LotacaoTributaria;\r\n  nome?: string;\r\n  nrInscricaoProprietario?: string;\r\n  nrInscricaoContratante?: string;\r\n  percentualDesoneracaoGps?: number;\r\n  /** este campo utiliza o enum TipoCAEPFEnum */\r\n  tipoCaepf?: string;\r\n  telefones?: TomadorServicoTelefone[];\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.tomadorservico';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mfp/tomadorServico';\r\n\r\nconst TomadorServicoIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      type={InputType.INPUT_SEARCH}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'TomadorServicoSearchView',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TomadorServicoIS;\r\n"],"sourceRoot":""}
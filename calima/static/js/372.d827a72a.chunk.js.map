{"version":3,"sources":["models/dtos/mcg/lucroPrejuizoMCG.ts","views/pages/mcg/lucroPrejuizo/LucroPrejuizoSearchView.tsx","dependencies/empresaDependency.ts"],"names":["__webpack_require__","d","__webpack_exports__","CLASS_NAME","r","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_hook_form__WEBPACK_IMPORTED_MODULE_1__","react_redux__WEBPACK_IMPORTED_MODULE_2__","summer__WEBPACK_IMPORTED_MODULE_3__","_dependencies_empresaDependency__WEBPACK_IMPORTED_MODULE_4__","_models_dtos_mcg_lucroPrejuizoMCG__WEBPACK_IMPORTED_MODULE_5__","defaultSorted","dataField","order","OrderType","ASC","cellEditProps","blurToSave","mode","ClickEnum","CLICK","LucroPrejuizoSearchView","props","globalReducer","useSelector","state","totalRecursos","cell","row","saldoAnteriorLucroAcumulado","ajusteCredorPeriodoBaseAnterior","correcaoMonetariaLucroAcumulado","reversaoReserva","outroRecurso","lucroLiquidoPeriodoBaseProvIR","saldoAnteriorPrejuizoAcumulado","ajusteDevedorPeridoBaseAnterior","correcMonetariaPrejuizoAcumulado","prejuizoLiquidoPeriodoBaseProvIR","toFixed","totalAplicacoes","transferenciaReserva","divLucroDistribuidoPagoCreditado","impostoLucroLiquido","parcelaLucroIncorporadaCapital","outraAplicacao","formProps","useForm","defaultValues","empresa","globalParameter","columns","referenceColumn","editable","sort","text","filter","type","FilterType","TEXT","formatter","a","createElement","title","useGlobalParameter","dependencies","hasEmpresa","Object","assign","searchDataGridProps","dtoClassName","extraData","getExtraData","searchExpressions","expressions","getValues","push","fieldName","value","id","result"],"mappings":"6FAuBAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAO,MAAMA,EAAa,mGCvB1BH,EAAAI,EAAAF,GAAA,IAAAG,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,IAAAS,EAAAT,EAAA,IAAAU,EAAAV,EAAA,GAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,MAsBA,MAAMa,EAAoC,CACxC,CACEC,UAAW,aACXC,MAAOC,IAAUC,MAIfC,EAA+B,CACnCC,YAAY,EACZC,KAAMC,IAAUC,OA+GHC,UA5GwDC,KACrE,MAAMC,EAAgBC,YAAmCC,GAASA,EAAMF,eAElEG,EAAgB,CAACC,EAAMC,MAExBA,EAAIC,8BACJD,EAAIE,kCACJF,EAAIG,kCACJH,EAAII,kBACJJ,EAAIK,eACJL,EAAIM,gCACHN,EAAIO,iCACHP,EAAIQ,kCACJR,EAAIS,mCACJT,EAAIU,mCACPC,QAAQ,GAGNC,EAAkB,CAACb,EAAMC,MAE1BA,EAAIa,uBACJb,EAAIc,mCACJd,EAAIe,sBACJf,EAAIgB,iCACJhB,EAAIiB,gBACLN,QAAQ,GAONO,EAAYC,YAA0B,CAC1CC,cAAe,CAAEC,QAAS1B,EAAc2B,gBAAgBD,SACxD/B,KAAM,WAeR,MAAMiC,EAA0B,CAC9BC,aAAgB,CACdxC,UAAW,aACXyC,UAAU,EACVC,MAAM,EACNC,KAAM,kBAER,CACE3C,UAAW,gBACXyC,UAAU,EACVG,OAAQ,CACNC,KAAMC,IAAWC,MAEnBC,UAAWlC,EACX4B,MAAM,EACNC,KAAM,qBAER,CACE3C,UAAW,kBACXyC,UAAU,EACVG,OAAQ,CACNC,KAAMC,IAAWC,MAEnBC,UAAWpB,EACXc,MAAM,EACNC,KAAM,6BAER,CACE3C,UAAW,yBACXyC,UAAU,EACVG,OAAQ,CACNC,KAAMC,IAAWC,MAEnBC,UAtD2B,CAACjC,EAAMC,MAC3BF,EAAcC,EAAMC,IAAQY,EAAgBb,EAAMC,IAAMW,QAAQ,GAsDvEe,MAAM,EACNC,KAAM,mCAGV,OACEnD,EAAAyD,EAAAC,cAACtD,EAAA,GAAD,CACEuD,MAAM,0CACNC,oBAAoB,EACpBd,gBAAiB3B,EAAc2B,gBAC/Be,aAAc,CAAC,IAAMC,YAAW3C,EAAc2B,mBAE9C9C,EAAAyD,EAAAC,cAACtD,EAAA,EAAD2D,OAAAC,OAAA,GACM9C,EACAA,EAAM+C,oBAFZ,CAGEC,aAAcrE,IACdkD,QAASA,EACTnC,cAAeA,EACfL,cAAeA,EACf4D,UAAWC,aAAalD,EAAO,wBAAyBrB,KACxDwE,kBAjEN,WACE,MAAMC,EAAkC,GAQxC,OANI5B,EAAU6B,YAAY1B,SACxByB,EAAYE,KAAK,CACfC,UAAW,aACXC,MAAOhC,EAAU6B,YAAY1B,QAAQ8B,KAGlCL,2CC9EJ,SAASR,EAAWhB,GACzB,IAAI8B,EAAS,KAIb,OAHK9B,EAAgBD,UACnB+B,EAAS,kDAEJA,EALTlF,EAAAC,EAAAC,EAAA,sBAAAkE","file":"static/js/372.d827a72a.chunk.js","sourcesContent":["import { Basic } from 'summer';\r\nimport { Empresa } from '../ger/empresa';\r\n\r\nexport interface LucroPrejuizoMCG extends Basic {\r\n  ajusteCredorPeriodoBaseAnterior?: number;\r\n  ajusteDevedorPeridoBaseAnterior?: number;\r\n  correcaoMonetariaLucroAcumulado?: number;\r\n  correcMonetariaPrejuizoAcumulado?: number;\r\n  divLucroDistribuidoPagoCreditado?: number;\r\n  empresa?: Empresa;\r\n  impostoLucroLiquido?: number;\r\n  lucroLiquidoPeriodoBaseProvIR?: number;\r\n  outraAplicacao?: number;\r\n  outroRecurso?: number;\r\n  parcelaLucroIncorporadaCapital?: number;\r\n  prejuizoLiquidoPeriodoBaseProvIR?: number;\r\n  referencia?: string;\r\n  reversaoReserva?: number;\r\n  saldoAnteriorLucroAcumulado?: number;\r\n  saldoAnteriorPrejuizoAcumulado?: number;\r\n  transferenciaReserva?: number;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mcg.model.dto.lucroprejuizo';\r\n","import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  CellEditProps,\r\n  ClickEnum,\r\n  ColumnsProps,\r\n  DefaultSortProps,\r\n  FilterType,\r\n  getExtraData,\r\n  OrderType,\r\n  referenceColumn,\r\n  SearchDataGrid,\r\n  SearchExpression,\r\n  SearchViewProps,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { CLASS_NAME, LucroPrejuizoMCG } from '../../../../models/dtos/mcg/lucroPrejuizoMCG';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\nconst defaultSorted: DefaultSortProps[] = [\r\n  {\r\n    dataField: 'referencia',\r\n    order: OrderType.ASC,\r\n  },\r\n];\r\n\r\nconst cellEditProps: CellEditProps = {\r\n  blurToSave: true,\r\n  mode: ClickEnum.CLICK,\r\n};\r\n\r\nconst LucroPrejuizoSearchView: FC<SearchViewProps<LucroPrejuizoMCG>> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const totalRecursos = (cell, row) => {\r\n    return (\r\n      +row.saldoAnteriorLucroAcumulado +\r\n      +row.ajusteCredorPeriodoBaseAnterior +\r\n      +row.correcaoMonetariaLucroAcumulado +\r\n      +row.reversaoReserva +\r\n      +row.outroRecurso +\r\n      +row.lucroLiquidoPeriodoBaseProvIR -\r\n      (+row.saldoAnteriorPrejuizoAcumulado +\r\n        +row.ajusteDevedorPeridoBaseAnterior +\r\n        +row.correcMonetariaPrejuizoAcumulado +\r\n        +row.prejuizoLiquidoPeriodoBaseProvIR)\r\n    ).toFixed(2);\r\n  };\r\n\r\n  const totalAplicacoes = (cell, row) => {\r\n    return (\r\n      +row.transferenciaReserva +\r\n      +row.divLucroDistribuidoPagoCreditado +\r\n      +row.impostoLucroLiquido +\r\n      +row.parcelaLucroIncorporadaCapital +\r\n      +row.outraAplicacao\r\n    ).toFixed(2);\r\n  };\r\n\r\n  const lucroPrejuizoAcumulado = (cell, row) => {\r\n    return (+totalRecursos(cell, row) - +totalAplicacoes(cell, row)).toFixed(2);\r\n  };\r\n\r\n  const formProps = useForm<LucroPrejuizoMCG>({\r\n    defaultValues: { empresa: globalReducer.globalParameter.empresa },\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  function getSearchExpression(): SearchExpression[] {\r\n    const expressions: SearchExpression[] = [];\r\n\r\n    if (formProps.getValues().empresa) {\r\n      expressions.push({\r\n        fieldName: 'empresa.id',\r\n        value: formProps.getValues().empresa.id,\r\n      });\r\n    }\r\n    return expressions;\r\n  }\r\n\r\n  const columns: ColumnsProps[] = [\r\n    referenceColumn({\r\n      dataField: 'referencia',\r\n      editable: false,\r\n      sort: true,\r\n      text: 'Referência',\r\n    }),\r\n    {\r\n      dataField: 'totalRecursos',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      formatter: totalRecursos,\r\n      sort: true,\r\n      text: 'Soma dos Recursos',\r\n    },\r\n    {\r\n      dataField: 'totalAplicacoes',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      formatter: totalAplicacoes,\r\n      sort: true,\r\n      text: 'Soma das Aplicações',\r\n    },\r\n    {\r\n      dataField: 'lucroPrejuizoAcumulado',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      formatter: lucroPrejuizoAcumulado,\r\n      sort: true,\r\n      text: 'Lucros/Prejuízos Acumulados',\r\n    },\r\n  ];\r\n  return (\r\n    <WindowComponent\r\n      title=\"Manutenção de Lucros/Prejuízos\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter)]}\r\n    >\r\n      <SearchDataGrid\r\n        {...props}\r\n        {...props.searchDataGridProps}\r\n        dtoClassName={CLASS_NAME}\r\n        columns={columns}\r\n        cellEditProps={cellEditProps}\r\n        defaultSorted={defaultSorted}\r\n        extraData={getExtraData(props, 'LucroPrejuizoEditView', CLASS_NAME)}\r\n        searchExpressions={getSearchExpression}\r\n      />\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default LucroPrejuizoSearchView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n"],"sourceRoot":""}
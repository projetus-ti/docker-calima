{"version":3,"sources":["views/pages/ger/report/atividadesDiaTrabalho/atividadesDiaTrabalhoRelRV.ts","views/pages/ger/report/atividadesDiaTrabalho/AtividadesDiaTrabalhoReportView.tsx","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx"],"names":["DEFAULT_OPTIONS","Object","objectSpread2","getDefaultReportViewOptions","DATES","value","dtFinalRequired","dtInicialRequired","exibirConfiguracaoDadosEmpresa","DEFAULT_VALUES","getDefaultReportBasicValues","exibirAtividadesContabil","exibirAtividadesFiscal","exibirAtividadesFolha","gerarCabecalhoPadraoAdministradora","AtividadesDiaTrabalhoReportView","props","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","objectWithoutProperties","react_default","a","createElement","summer_esm","title","useGlobalParameter","Row","className","Col","CustomInput","type","id","name","label","innerRef","register","ReportForm","assign","localStorageKey","routeProps","reportBasicValues","reportViewOptions","validateExtras","erros","isEmpty","getValues","dtInicial","dtFinal","Date","parse","push","__webpack_require__","d","__webpack_exports__","NATUREZA","SALDO_REPORT_ENUM","EmpresaIS","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","isPrependLabel","inputSearchProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","placeholder","InputType","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","empresasSelecionadas","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","virtualization","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","errors","setValue","triggerValidation","handleCancel","currentItem","currentValues","parentObject","validation","required","EnvioEmail","Fragment","sort","detailView","keyField","propName","maxLength","TEXT_AREA","ReportInputs","globalReducer","useSelector","state","_useState","useState","_useState2","slicedToArray","activeTab","setActiveTab","useEffect","_props$reportViewOpti","printingTypes","resetObject","length","idGerEmpresa","globalParameter","empresa","current","currentMomentDate","endDate","DATE","formatDate","toDate","endOf","REFERENCE","referenciaInicial","format","REF_PATTERN","REFERENCES","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dateComponent","datesComponent","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","NUMBER","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","inputProps","disabled","gerarPorEmpresas","style","marginBottom","size","selectProps","isMulti","segmentacaoFolhaComponent","exibirSegmentacaoFolha","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","exibirImprimirValoresColoridos","inputDropDownProps","optionsProvider","isClearable","DROP_DOWN","firstOpen","extraConfigOpened","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","hidden","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","params","message","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history"],"mappings":"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","file":"static/js/267.08a85950.chunk.js","sourcesContent":["import { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\n\r\nexport interface AtividadesDiaTrabalhoRelRV extends ReportBasicValues {\r\n  exibirAtividadesContabil?: boolean;\r\n  exibirAtividadesFiscal?: boolean;\r\n  exibirAtividadesFolha?: boolean;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'atividadesdiatrabalhorelrv';\r\nexport const REPORT_TITLE: string = 'Atividades do Período de Trabalho';\r\nexport const REPORT_EVENT: string = 'printAtividadesDiaTrabalho';\r\n","import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { DATES, isEmpty, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { getDefaultReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { AtividadesDiaTrabalhoRelRV, CLASS_KEY, REPORT_EVENT, REPORT_TITLE } from './atividadesDiaTrabalhoRelRV';\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT, DATES.value),\r\n  dtFinalRequired: true,\r\n  dtInicialRequired: true,\r\n  exibirConfiguracaoDadosEmpresa: true,\r\n};\r\n\r\nconst DEFAULT_VALUES: AtividadesDiaTrabalhoRelRV = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n  exibirAtividadesContabil: true,\r\n  exibirAtividadesFiscal: true,\r\n  exibirAtividadesFolha: true,\r\n  gerarCabecalhoPadraoAdministradora: true,\r\n};\r\n\r\nconst AtividadesDiaTrabalhoReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const { handleSubmit, ...formProps } = useForm<AtividadesDiaTrabalhoRelRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n\r\n  const validateExtras = () => {\r\n    const erros = [];\r\n\r\n    if (\r\n      !isEmpty(formProps.getValues().dtInicial) &&\r\n      !isEmpty(formProps.getValues().dtFinal) &&\r\n      Date.parse(formProps.getValues().dtInicial) > Date.parse(formProps.getValues().dtFinal)\r\n    ) {\r\n      erros.push('A data inicial não pode ser maior ou igual a data final.');\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  return (\r\n    <WindowComponent title=\"Atividades do Periodo de Trabalho\" useGlobalParameter={false}>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput type=\"switch\" id=\"exibirAtividadesFiscal\" name=\"exibirAtividadesFiscal\" label=\"Módulo Fiscal\" innerRef={formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"exibirAtividadesContabil\"\r\n            name=\"exibirAtividadesContabil\"\r\n            label=\"Módulo Contábil\"\r\n            innerRef={formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"exibirAtividadesFolha\"\r\n            name=\"exibirAtividadesFolha\"\r\n            label=\"Módulo Folha de Pagamento\"\r\n            innerRef={formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n        validateExtras={validateExtras}\r\n      />\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default AtividadesDiaTrabalhoReportView;\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n"],"sourceRoot":""}
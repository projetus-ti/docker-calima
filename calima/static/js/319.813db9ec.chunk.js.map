{"version":3,"sources":["views/pages/mcg/bancoExtratoPlanoConta/BancoExtratoPlanoContaSearchView.tsx","dependencies/empresaDependency.ts","dependencies/empresaMCGDependency.ts","models/dtos/mcg/bancoMCG.ts"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","summer__WEBPACK_IMPORTED_MODULE_2__","_dependencies_empresaDependency__WEBPACK_IMPORTED_MODULE_3__","_dependencies_empresaMCGDependency__WEBPACK_IMPORTED_MODULE_4__","_models_dtos_mcg_bancoMCG__WEBPACK_IMPORTED_MODULE_5__","defaultSorted","dataField","order","OrderType","ASC","cellEditProps","blurToSave","mode","ClickEnum","CLICK","BancoExtratoPlanoContaSearchView","props","globalReducer","useSelector","state","columns","editable","sort","text","filter","type","FilterType","TEXT","a","createElement","title","useGlobalParameter","globalParameter","dependencies","hasEmpresa","hasEmpresaMCG","Object","assign","searchDataGridProps","dtoClassName","CLASS_NAME","extraData","getExtraData","searchExpressions","fieldName","operation","OperationEnum","EQUAL","value","empresa","id","result","d","empresaMCG"],"mappings":"6FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,IAAAO,EAAAP,EAAA,GAAAQ,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAsBA,MAAMW,EAAoC,CACxC,CACEC,UAAW,QACXC,MAAOC,IAAUC,MAIfC,EAA+B,CACnCC,YAAY,EACZC,KAAMC,IAAUC,OA+EHC,UA5EyDC,KACtE,MAAMC,EAAgBC,YAAmCC,GAASA,EAAMF,eAElEG,EAA0B,CAC9B,CACEd,UAAW,mBACXe,UAAU,EACVC,MAAM,EACNC,KAAM,eAER,CACEjB,UAAW,uBACXe,UAAU,EACVC,MAAM,EACNC,KAAM,+BAER,CACEjB,UAAW,QACXe,UAAU,EACVG,OAAQ,CACNC,KAAMC,IAAWC,MAEnBL,MAAM,EACNC,KAAM,SAER,CACEjB,UAAW,UACXe,UAAU,EACVG,OAAQ,CACNC,KAAMC,IAAWC,MAEnBL,MAAM,EACNC,KAAM,cAER,CACEjB,UAAW,QACXe,UAAU,EACVG,OAAQ,CACNC,KAAMC,IAAWC,MAEnBL,MAAM,EACNC,KAAM,UAcV,OACEzB,EAAA8B,EAAAC,cAAC5B,EAAA,GAAD,CACE6B,MAAM,gCACNC,oBAAoB,EACpBC,gBAAiBf,EAAce,gBAC/BC,aAAc,CAAC,IAAMC,YAAWjB,EAAce,iBAAkB,IAAMG,YAAclB,EAAce,mBAElGlC,EAAA8B,EAAAC,cAAC5B,EAAA,EAADmC,OAAAC,OAAA,GACMrB,EACAA,EAAMsB,oBAFZ,CAGEC,aAAcC,IACdpB,QAASA,EACTV,cAAeA,EACfL,cAAeA,EACfoC,UAAWC,aAAa1B,EAAO,kCAAmCwB,KAClEG,kBAzBN,WACE,MAAO,CACL,CACEC,UAAW,aACXC,UAAWC,IAAcC,MACzBC,MAAO/B,EAAce,gBAAgBiB,QAAQC,8CClF9C,SAAShB,EAAWF,GACzB,IAAImB,EAAS,KAIb,OAHKnB,EAAgBiB,UACnBE,EAAS,kDAEJA,EALTzD,EAAA0D,EAAAxD,EAAA,sBAAAsC,sCCAO,SAASC,EAAcH,GAC5B,IAAImB,EAAS,KAMb,OALKnB,EAAgBqB,aACnBF,EACE,0LAGGA,EAPTzD,EAAA0D,EAAAxD,EAAA,sBAAAuC,sCCUAzC,EAAA0D,EAAAxD,EAAA,sBAAA4C,IAAO,MAAMA,EAAa","file":"static/js/319.813db9ec.chunk.js","sourcesContent":["import React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  CellEditProps,\r\n  ClickEnum,\r\n  ColumnsProps,\r\n  DefaultSortProps,\r\n  FilterType,\r\n  getExtraData,\r\n  OperationEnum,\r\n  OrderType,\r\n  SearchDataGrid,\r\n  SearchExpression,\r\n  SearchViewProps,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../dependencies/empresaMCGDependency';\r\nimport { BancoMCG, CLASS_NAME } from '../../../../models/dtos/mcg/bancoMCG';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\nconst defaultSorted: DefaultSortProps[] = [\r\n  {\r\n    dataField: 'banco',\r\n    order: OrderType.ASC,\r\n  },\r\n];\r\n\r\nconst cellEditProps: CellEditProps = {\r\n  blurToSave: true,\r\n  mode: ClickEnum.CLICK,\r\n};\r\n\r\nconst BancoExtratoPlanoContaSearchView: FC<SearchViewProps<BancoMCG>> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'planoConta.conta',\r\n      editable: false,\r\n      sort: true,\r\n      text: 'Plano Conta',\r\n    },\r\n    {\r\n      dataField: 'planoConta.descricao',\r\n      editable: false,\r\n      sort: true,\r\n      text: 'Plano Conta Descrição',\r\n    },\r\n    {\r\n      dataField: 'banco',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      sort: true,\r\n      text: 'Banco',\r\n    },\r\n    {\r\n      dataField: 'agencia',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      sort: true,\r\n      text: 'Agência',\r\n    },\r\n    {\r\n      dataField: 'conta',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      sort: true,\r\n      text: 'Conta',\r\n    },\r\n  ];\r\n\r\n  function getSearchExpression(): SearchExpression[] {\r\n    return [\r\n      {\r\n        fieldName: 'empresa.id',\r\n        operation: OperationEnum.EQUAL,\r\n        value: globalReducer.globalParameter.empresa.id,\r\n      },\r\n    ];\r\n  }\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Banco - Plano Contas Extratos\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMCG(globalReducer.globalParameter)]}\r\n    >\r\n      <SearchDataGrid\r\n        {...props}\r\n        {...props.searchDataGridProps}\r\n        dtoClassName={CLASS_NAME}\r\n        columns={columns}\r\n        cellEditProps={cellEditProps}\r\n        defaultSorted={defaultSorted}\r\n        extraData={getExtraData(props, 'BancoExtratoPlanoContaEditView ', CLASS_NAME)}\r\n        searchExpressions={getSearchExpression}\r\n      />\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default BancoExtratoPlanoContaSearchView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMCG(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMCG) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o módulo Contábil. Para configurá-la acesse:\\n' +\r\n      'Módulo Contábil > Manutenção > Configurações > Empresa.';\r\n  }\r\n  return result;\r\n}\r\n","import { Basic } from 'summer';\r\nimport { Empresa } from '../ger/empresa';\r\nimport { PlanoConta } from '../ger/planoConta';\r\n\r\nexport interface BancoMCG extends Basic {\r\n  agencia?: string;\r\n  banco?: string;\r\n  conta?: string;\r\n  empresa?: Empresa;\r\n  planoConta?: PlanoConta;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mcg.model.dto.bancomcg';\r\n"],"sourceRoot":""}
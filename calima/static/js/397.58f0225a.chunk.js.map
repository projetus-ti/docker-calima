{"version":3,"sources":["models/dtos/ger/log.ts","models/enumerated/ger/logOperationTypeEnum.ts","views/pages/ger/log/LogSearchView.tsx"],"names":["CLASS_NAME","LOG_OPERATION_TYPE_ENUM_VALUES","value","label","defaultSorted","dataField","order","OrderType","ASC","cellEditProps","blurToSave","mode","ClickEnum","CLICK","LogSearchView","props","columns","editable","filter","type","FilterType","TEXT","sort","text","DATE","enumColumn","SELECT","preFormatter","result","atributos","split","_step","_iterator","Object","createForOfIteratorHelper","s","n","done","chaveValor","err","e","f","expandRow","expandColumnPosition","PositionEnum","RIGHT","expandColumnRenderer","expanded","icon","react_default","a","createElement","className","index_es","expandHeaderColumnRenderer","onlyOneExpanding","parentClassName","renderer","row","ReactHtmlParser","antes","depois","isEmpty","diff","Diff","txt","main","prettyHtml","formataHtml","showExpandColumn","selectRow","hideSelectColumn","SelectModeEnum","RADIO","foterContent","Row","key","Col","summer_esm","title","assign","searchDataGridProps","addButtonProps","hideAddButton","dtoClassName","extraData","objectSpread2","getExtraData","hideActionColumn","customTableFooterContent"],"mappings":"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","file":"static/js/397.58f0225a.chunk.js","sourcesContent":["import { BasicUser } from 'summer';\r\n\r\nexport interface Log extends BasicUser {\r\n  descricaoTabela: string;\r\n  nomeTabela: string;\r\n  usuario: string;\r\n  data: Date;\r\n  operacao: string;\r\n  antes: string;\r\n  depois: string;\r\n  alteracoes: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.log';\r\n","export const INSERT = { value: 'INSERT', label: 'Inserção' };\r\nexport const UPDATE = { value: 'UPDATE', label: 'Alteração' };\r\nexport const DELETE = { value: 'DELETE', label: 'Exclusão' };\r\nexport const TRUNCATE = { value: 'TRUNCATE', label: 'Outros' };\r\n\r\nexport const LOG_OPERATION_TYPE_ENUM_VALUES = [INSERT, UPDATE, DELETE, TRUNCATE];\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { FC } from 'react';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport { Col, Row } from 'reactstrap';\r\nimport {\r\n  CellEditProps,\r\n  ClickEnum,\r\n  ColumnsProps,\r\n  DefaultSortProps,\r\n  enumColumn,\r\n  FilterType,\r\n  getExtraData,\r\n  isEmpty,\r\n  OrderType,\r\n  PositionEnum,\r\n  SearchDataGrid,\r\n  SearchViewProps,\r\n  SelectModeEnum,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport Diff from 'text-diff';\r\nimport { CLASS_NAME, Log } from '../../../../models/dtos/ger/log';\r\nimport { LOG_OPERATION_TYPE_ENUM_VALUES } from '../../../../models/enumerated/ger/logOperationTypeEnum';\r\nimport './logSearchView.css';\r\n\r\nconst defaultSorted: DefaultSortProps[] = [\r\n  {\r\n    dataField: 'usuario',\r\n    order: OrderType.ASC,\r\n  },\r\n];\r\n\r\nconst cellEditProps: CellEditProps = {\r\n  blurToSave: true,\r\n  mode: ClickEnum.CLICK,\r\n};\r\n\r\nconst LogSearchView: FC<SearchViewProps<Log>> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'descricaoTabela',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      sort: true,\r\n      text: 'Tabela',\r\n    },\r\n    {\r\n      dataField: 'usuario',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      sort: true,\r\n      text: 'Usuário',\r\n    },\r\n    {\r\n      dataField: 'data',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.DATE,\r\n      },\r\n      sort: true,\r\n      text: 'Data',\r\n    },\r\n    enumColumn(\r\n      {\r\n        dataField: 'operacao',\r\n        editable: false,\r\n        filter: {\r\n          type: FilterType.SELECT,\r\n        },\r\n        sort: true,\r\n        text: 'Operação',\r\n      },\r\n      LOG_OPERATION_TYPE_ENUM_VALUES\r\n    ),\r\n  ];\r\n\r\n  function preFormatter(value: string): string {\r\n    let result = '';\r\n    const atributos = value.split(', ');\r\n    for (const atributo of atributos) {\r\n      const chaveValor = atributo.split(': ');\r\n      result += chaveValor[0] + ': ' + chaveValor[1] + '\\n';\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  function formataHtml(antes: string, depois: string): string {\r\n    let result = 'Nenhuma diferença encontrada';\r\n    if (!isEmpty(antes) && !isEmpty(depois)) {\r\n      const diff = new Diff();\r\n      const txt = diff.main(preFormatter(antes), preFormatter(depois));\r\n      result = diff.prettyHtml(txt);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  const expandRow = {\r\n    expandColumnPosition: PositionEnum.RIGHT,\r\n    expandColumnRenderer: ({ expanded }) => {\r\n      const icon = expanded ? 'arrow-up' : 'arrow-down';\r\n      return (\r\n        <div className=\"text-center\">\r\n          <FontAwesomeIcon icon={icon} />\r\n        </div>\r\n      );\r\n    },\r\n    expandHeaderColumnRenderer: () => 'Alterações',\r\n    onlyOneExpanding: true,\r\n    parentClassName: 'expanded-row',\r\n    renderer: row => <div className=\"expanded-row-area\">{ReactHtmlParser(formataHtml(row.antes, row.depois), {})}</div>,\r\n    showExpandColumn: true,\r\n  };\r\n\r\n  const selectRow = {\r\n    hideSelectColumn: true,\r\n    mode: SelectModeEnum.RADIO,\r\n  };\r\n\r\n  const foterContent = (\r\n    <Row key=\"divFotterKey\" className=\"mt-2\">\r\n      <Col className=\"text-right\">\r\n        <Col>\r\n          <span>Legenda</span>\r\n        </Col>\r\n        <Col className=\"d-flex align-items-center justify-content-end\">\r\n          <div className=\"blue-square\" /> Alteração\r\n        </Col>\r\n        <Col className=\"d-flex align-items-center justify-content-end\">\r\n          <div className=\"red-square\" /> Remoção\r\n        </Col>\r\n      </Col>\r\n    </Row>\r\n  );\r\n\r\n  return (\r\n    <WindowComponent title=\"Manutenção de Logs\">\r\n      <SearchDataGrid\r\n        {...props}\r\n        {...props.searchDataGridProps}\r\n        addButtonProps={{ hideAddButton: true }}\r\n        dtoClassName={CLASS_NAME}\r\n        columns={columns}\r\n        cellEditProps={cellEditProps}\r\n        defaultSorted={defaultSorted}\r\n        extraData={{ ...getExtraData(props, '', CLASS_NAME), hideActionColumn: true }}\r\n        expandRow={expandRow}\r\n        selectRow={selectRow}\r\n        customTableFooterContent={foterContent}\r\n      />\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default LogSearchView;\r\n"],"sourceRoot":""}
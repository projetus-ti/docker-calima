{"version":3,"sources":["models/enumerated/mcg/lancamentoConfigHistoricoTypeEnum.ts","models/enumerated/mcg/lancamentoMCGFormaEnum.ts","models/enumerated/mcg/lancamentoMCGTipoValidLancPartidaSimplesEnum.ts","views/components/mcg/lancamentoMCGConfigIS/LancamentoMCGConfigIS.tsx","models/dtos/mcg/lancamentoLote.ts","models/enumerated/mcg/efeitoPatrimonioLiquidoEnum.ts","views/components/mcg/lancamentoPadraoIS/LancamentoPadraoIS.tsx","views/pages/mcg/lancamentoSaldo/HistoricoVariavelDataGrid.tsx","views/pages/mcg/lancamentoSaldo/LancamentoItensDataGrid.tsx","views/pages/mcg/lancamentoSaldo/LancamentoPadraoModalView.tsx","views/pages/mcg/lancamentoSaldo/LancamentoSaldoEditView.tsx","services/mcg.service.ts","views/components/mcg/planoContaIS/PlanoContaIS.tsx","models/dtos/ger/planoConta.ts","models/dtos/ger/centroCusto.ts","views/components/mcg/centroCustoIS/CentroCustoIS.tsx","utilities/enum.util.ts","models/dtos/ger/historico.ts","models/dtos/mcg/lancamentoMCGConfig.ts","models/enumerated/ger/tipoTributacaoEnum.ts","models/enumerated/ger/planoContaGERTipoLancamentoContaEnum.ts","views/components/mcg/historicoIS/HistoricoIS.tsx","utilities/mcg.util.ts","models/enumerated/mlf/tipoApuracaoEnum.ts","models/enumerated/mcg/tipoBloqueioLancamentoEnum.ts","models/dtos/mcg/lotePadrao.ts","models/enumerated/ger/centroCustoGERTipoLancamentoCentroCustoEnum.ts","models/enumerated/mcg/bloqueioLancamentoValidateStringEnum.ts","models/enumerated/mcg/origemLancamentoMCGEnum.ts"],"names":["__webpack_require__","d","__webpack_exports__","LANCAMENTO_UNICO","VARIOS_LANCAMENTOS","LANCAMENTO_CONFIG_HISTORICO_TYPE_ENUM_VALUES","label","value","UM_DEBITO_UM_CREDITO","UM_DEBITO_VARIOS_CREDITOS","UM_CREDITO_VARIOS_DEBITOS","VARIOS_DEBITOS_VARIOS_CREDITOS","LANCAMENTO_MCG_FORMA_ENUM_VALUES","SIM","NAO","LANCAMENTO_MCG_TIPO_VALID_LANC_PARTIDA_SIMPLES_ENUM_VALUES","LancamentoMCGConfigIS","props","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_2__","Object","assign","formProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","isPrependLabel","inputSearchProps","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","placeholder","type","InputType","INPUT_SEARCH","NAO_INTERFERE","extraFields","intValue","EFEITO_PATRIMONIO_LIQUIDO_ENUM_VALUES","LancamentoPadraoIS","react_default","summer_esm","objectSpread2","HistoricoVariavelDataGrid","_useState","useState","_useState2","slicedToArray","selecionado","setSelecionado","historicos","watch","map","it","rowIndex","onSelect","row","_","index","checkSelect","result","alertManager","emit","ACTION_EVENTS","SHOW","message","AlertType","INFORMATION","onEdit","onSort","direction","currIndex","nextIndex","splice","setValue","Card","className","CardHeader","Button","id","size","color","onClick","index_es","icon","UncontrolledTooltip","target","disabled","onRemove","CardBody","react_bootstrap_table2_toolkit_lib_default","keyField","data","bootstrap4","toolkitprops","lib_default","baseProps","striped","bordered","hover","responsive","condensed","key","selectRow","clickToSelect","mode","selected","rowEvents","onDoubleClick","length","LancamentoItensDataGrid","formatter","numeroLote","col","planoContaDebito","empresaMCG","tipoLancamentoConta","CODIGO_REDUZIDO_PLANO","codigoReduzido","conta","centroCustoDebito","CODIGO_REDUZIDO_CENTRO","codigo","hidden","lancamentoConfig","utilizarCentroCusto","planoContaCredito","centroCustoCredito","decimalFormatter","concatenarHistorico","info","credito","debito","diferenca","lancamentos","forEach","valor","LancamentoPadraoModalView","useForm","defaultValues","dtLancamento","dataLancamento","setLancamentos","_useState3","_useState4","indexAtual","setIndexAtual","useEffect","setTimeout","setLancamento","lotePadrao","lotePadraoLancamento","onConfirm","onClose","getDescConta","reduzido","globalParameter","CODIGO_REDUZIDO","lancamento","descricao","historico","Modal","isOpen","backdrop","centered","toggle","ModalHeader","Badge","pill","ModalBody","Row","Col","validation","required","DATE","title","TEXT_AREA","MONEY","ModalFooter","handleSubmit","values","getValues","erros","formData","isEmpty","push","parseFloat","isNaN","validateExtras","ERROR","l","historicoVariavel","handleClose","LancamentoSaldoEditView","globalReducer","useSelector","state","selectedItem","getSelectedItem","somaCredito","somaDebito","lancamentoMCGConfig","setLancamentoConfig","bloquearReferencia","setBloquearReferencia","_useState5","_useState6","patrimonioLiquidoVisible","setPatrimonioLiquidoVisible","_useState7","_useState8","modalContent","setModalContent","_useState9","_useState10","labelDataInclusao","setLabelDataInclusao","_useState11","_useState12","isEdit","setIsEdit","_useState13","_useState14","isEditHistorico","setIsEditHistorico","_useState15","_useState16","loteEdicao","setLoteEdicao","_useState17","_useState18","desabilitarCamposLancamento","setDesabilitarCamposLancamento","_useState19","fixarCentroCustoCredito","fixarCentroCustoDebito","fixarContaCredito","fixarContaDebito","fixarData","fixarHistoricoPadrao","fixarHistoricoVariavel","_useState20","camposFixos","setCamposFixos","_useState21","_useState22","centroCustoDisabled","setCentroCustoDisabled","name","register","refAtual","refToFormat","refFinal","formaLancamento","concat","changeDataLancamento","idLote","carregarLote","keys","[object Object]","reduce","isFromVerifyError","idMcgLancamentoLote","findById","thenFunction","res","numero","dataInclusao","horaInclusao","renderUltimoLancamento","renderLancamento","indexLancamentoAtual","idLancamentoAtual","numeroLancamento","efeitoPatrimonioLiquido","encerrado","renderUltimoHistorico","informarLancamentoEncerramento","changeContaCredito","changeContaDebito","renderHistorico","idHistoricoAtual","indexHistoricoAtual","historicoAtual","load","validatePeriodoConfig","PERIODO_ANTERIOR","loadSaldoDebito","loadSaldoCredito","verificarEfeitoPatrimonio","isVisible","digito","grupoPlanoConta","digitoPatrimonioLiquido","substr","exibirAlerta","formatSaldo","getSaldoDebito","idGerEmpresa","empresa","getSaldoCredito","validarCentroCusto","centroCusto","ativoPassivo","digitoAtivo","digitoPassivo","utilizarAtivoPassivo","utilizarCentroCustoAtivoPassivo","p","validarContasReceitaDespesa","campo","msg","charAt","digitoReceita","digitoDespesa","onNoClick","WARNING_YES_NO","validarLancReceitaDespesa","closeModal","confirmModal","listaFinal","countCreditos","countDebitos","variosHistoricos","config","ajustarTelaViaLancamentoPadrao","submitHistorico","idx","validateLancamento","bloqueio","parseInt","formatDate","toDate","validateDebitoCredito","utilizarHistoricoPadrao","utilizarHistoricoVariavel","validateHistorico","ativo","passivo","validateCentroCusto","checkIndexId","some","validatePartidaDobrada","dataBase","compare","submitLancamento","WARNING","EnumUtil","find","empresaOrigem","origem","CONTABILIDADE","origemLancamento","lote","lancamentoPadrao","zerarCampoFixo","idCampo","idCheck","ajustarHistoricoPersist","indice","ajustarLancamentoPersist","finalizarBeforePersist","done","lockCheckbox","reference","Fragment","onChange","c","placement","wikiId","editViewProps","beforePersist","ok","debitos","creditos","validacaoLancPartidaSimples","onOkClick","async","afterPersist","_globalReducer$global","empresaMLF","lucroReal","contains","TRIBUTACAO_LUCRO_REAL_ENUM_VALUES","tipoTributacao","irpj","configIRPJ","tipoApuracao","CONTABIL","csll","configCSLL","contas","referencia","formatRef","isAlteraCalculoIRPJorCSLL","empresaMFP","nomeContaCreditoDebito","Promise","resolve","atualizaCalculoIrpjCsll","atualizarCalculosIRPJeCSLL","then","hideSubmitButton","style","CALIMA_DANGER","inputDropDownProps","optionsProvider","DROP_DOWN","configuracao","tooltipProps","md","onBlur","cx","bloqueado","lancamentoPadraoIS_LancamentoPadraoIS","parseRefToDate","lancamentoSaldo_LancamentoPadraoModalView","PlanoContaIS","exibirSaldoContas","paddingRight","width","marginLeft","Input","innerRef","CentroCustoIS","HistoricoIS","lancamentoSaldo_HistoricoVariavelDataGrid","filter","paddingTop","lancamentoSaldo_LancamentoItensDataGrid","getService","create","gerarLancamentosFolhaPagamento","integracaoFolhaParam","param","send","post","integrarFolhaPagamento","lancamentoIntegracaoFolha","integrarMCP","importarParam","importarLancamentoCSV","formDataSend","FormData","append","String","importarDuplicados","importarLancamentosCardinal","_step","_iterator","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__","arquivos","s","n","arquivo","file","nomeArquivo","err","e","f","importarLancamentoPadraoCSV","_step2","_iterator2","importarHistoricoCSV","grupoHistoricoDestino","_step3","_iterator3","importarPlanoContaCSV","idEmpresa","grupoPlanoContaDestino","_step4","_iterator4","importarHistorico","importacaoHistorico","importarPlanoConta","importacaoPlanoContaParam","buscarConfigLivroFolhaMCG","get","integracaoFiscalContabil","encerrarContas","contaResultadoEncerramento","force","getDataUltimaContaEncerrada","limparEncerramentoContaResultado","contaResultadoLimpeza","validarReferenciaSPEDECFIrpjCsll","configECFIrpjCsll","validarReferenciaSPEDECFImuneIsenta","configECFImuneIsenta","validarRefRemuneracaoSocio","configECFRemuneracaoSocio","validarQuadroSocietario","configQuadro","obterLucroPrejuizoClassificacao","idGrupoPlanoConta","getSaldo","saldo","validarDadosSpedECF","ecfExportacaoParam","gerarSpedECF","usuario","getArquivoDigitalService","recuperarLancamentoConta","transferenciaLancamentoConta","transferirLancamentoConta","obterBancoPlanoConta","bancoPlanoContaDTO","validarConfigLivroFolha","changeLivroFolha","fecharRestaurar","fechamentoRestauracao","forceFecharRestaurar","verificarErros","gerarSpedContabil","selecaoSped","arquivoRTFEscrituracaoSubstituida","_step5","_iterator5","atributoSelecaoSped","salvarLucroPrejuizoClassificacao","lucroPrejuizoClassificacao","consultarMovimentacao","saldoCriteria","totalizadorLancamento","consulta","getSaldoAnterior","isDataEncerrada","parametros","abrirContas","removeLancamentoPeriodo","obterContasClassificacaoIndireto","salvarClassificacaoIndireto","contaFluxoCaixaIndireto","obterMutacaoPatrimonioLiquido","salvarMutacaoPatrimonioLiquido","mutacaoPatrimonioLiquido","salvarContaResultado","contaResultado","excluirContaResultado","obterContasClassificacaoDireto","salvarClassificacaoDireto","contaFluxoCaixa","findSubGrupo","planoContaSubGrupoParam","removerTodosPlanosConta","removeList","listaPlanoConta","apagarFilha","listSubGrupo","planoConta","referenciarContas","idsPlanoConta","idPlanoContaReferencial","idPlanoContaReferencialECF","desvincularContas","existeLancamentoEmContaAnalitica","idPlanoConta","importarLancamentoMCG","tipoImportacao","sobescrever","versaoSuperiorA2","dtInicial","dtFinal","importarSpedContabil","_step6","_iterator6","gerarManadContabil","refInicial","arquivoSFP","evolucaoContaContabilGraf","evolucaoContaContabilGrafParam","composicaoReceitaDespesasGraf","compReceitaDespesasGrafParam","gerarFCONTContabil","fContContabilCrit","obterDadosArquivoExtrato","arquivoSelecionado","idBancoMCG","obterDadosConciliacaoBancariaPeriodo","obterBancoListPlanoConta","conciliarLancamentosExtrato","listConciliacaoBancaria","removerConciliarLancamentosExtrato","listaRemover","removerLancamentosExtratoBancario","obterLancamentosSaldoPeriodo","operacaoConsultaValor","conciliarLancamentosConta","listaConciliacao","removerConciliarLancamentosConta","listaConciliarRemover","eLalurAContas","eLacsAContas","removerLancamentoLote","buscarLancamentosHonorarios","integracaoHonorariosParam","integrarHonorarios","alterarPlanoContaNaturezaConfig","enumPlanoContaNaturezaConta","prepararContaResultado","summer__WEBPACK_IMPORTED_MODULE_3__","searchViewProps","filtroContaResultado","hideExtraFields","useDefaultSelectRow","searchExpressions","expressions","analitica","alias","conditionalGroup","fieldName","sintetica","filtro","list","search","extraField","undefined","item","LUCRO_REAL","SIMPLES_NACIONAL","TIPO_TRIBUTACAO_ENUM_VALUES","AUTOMATIZACAO_EMPRESA_VALUES","LUCRO_REAL_ARBITRADO","LUCRO_PRESUMIDO_REAL_ARBITRADO","LUCRO_PRESUMIDO","IMUNE","ISENTO","PLANO_CONTA_GER_TIPO_LANCAMENTO_CONTA_ENUM_VALUES","promisedAlertWithCatch","alertInformation","summer__WEBPACK_IMPORTED_MODULE_0__","_models_enumerated_mcg_bloqueioLancamentoValidateStringEnum__WEBPACK_IMPORTED_MODULE_1__","_models_enumerated_mcg_tipoBloqueioLancamentoEnum__WEBPACK_IMPORTED_MODULE_2__","refInicialUltimoDia","parseLastDay","tipoBloqueioLancamento","APENAS_PERIODO_FISCAL","FORA_PERIODO_FISCAL","APENAS_REF_ATUAL","FORA_MES_ATUAL","TODOS","itens","reject","onCancelClick","TIPO_APURACAO_ENUM_VALUES","TIPO_BLOQUEIO_LANCAMENTO_ENUM_VALUES","CENTRO_CUSTO_GER_TIPO_LANCAMENTO_CENTRO_CUSTO_ENUM_VALUES","ORIGEM_LANCAMENTO_MCG_ENUM_VALUES"],"mappings":"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","file":"static/js/1.51a0c8a9.chunk.js","sourcesContent":["export const LANCAMENTO_UNICO = { label: 'Lançamento Único', value: 0 };\r\nexport const VARIOS_LANCAMENTOS = { label: 'Vários Lançamentos', value: 1 };\r\n\r\nexport const LANCAMENTO_CONFIG_HISTORICO_TYPE_ENUM_VALUES = [LANCAMENTO_UNICO, VARIOS_LANCAMENTOS];\r\n","export const UM_DEBITO_UM_CREDITO = { label: 'Um Débito Para Um Crédito', value: 0 };\r\nexport const UM_DEBITO_VARIOS_CREDITOS = { label: 'Um Débito Para Vários créditos', value: 1 };\r\nexport const UM_CREDITO_VARIOS_DEBITOS = { label: 'Um Crédito Para Vários Débitos', value: 2 };\r\nexport const VARIOS_DEBITOS_VARIOS_CREDITOS = { label: 'Vários Débitos Para Vários Créditos', value: 4 };\r\n\r\nexport const LANCAMENTO_MCG_FORMA_ENUM_VALUES = [\r\n  UM_DEBITO_UM_CREDITO,\r\n  UM_DEBITO_VARIOS_CREDITOS,\r\n  UM_CREDITO_VARIOS_DEBITOS,\r\n  VARIOS_DEBITOS_VARIOS_CREDITOS,\r\n];\r\n","export const SIM = { label: 'Sim', value: 'S' };\r\nexport const NAO = { label: 'Não', value: 'N' };\r\nexport const APENAS_AVISAR = { label: 'Apenas Avisar', value: 'A' };\r\n\r\nexport const LANCAMENTO_MCG_TIPO_VALID_LANC_PARTIDA_SIMPLES_ENUM_VALUES = [SIM, NAO, APENAS_AVISAR];\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mcg/lancamentoMCGConfig';\r\n\r\nconst LancamentoMCGConfigIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      formProps={{ ...props.formProps }}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descriçao',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'LancamentoMCGConfigSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Configuração Padrão de Lançamento'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Configuração Padrão de Lançamento'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LancamentoMCGConfigIS;\r\n","import { Basic } from 'summer';\r\nimport { Lancamento } from './lancamento';\r\n\r\nexport interface LancamentoLote extends Basic {\r\n  dataInclusao?: string;\r\n  horaInclusao?: string;\r\n  idGerEmpresa?: number;\r\n  lancamentos?: Lancamento[];\r\n  numero?: number;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mcg.model.dto.lancamentolote';\r\n","export const NAO_INTERFERE = { value: 'NAO_INTERFERE', label: 'Não Interfere no Patrimônio Líquido', extraFields: { intValue: 0 } };\r\nexport const LUCRO_LIQUIDO_EXERCICIO = { value: 'LUCRO_LIQUIDO_EXERCICIO', label: 'Lucro Líquido do Exercício', extraFields: { intValue: 1 } };\r\nexport const PREJUIZO_LIQUIDO_EXERCICIO = {\r\n  extraFields: { intValue: 2 },\r\n  label: 'Prejuízo Líquido do Exercício',\r\n  value: 'PREJUIZO_LIQUIDO_EXERCICIO',\r\n};\r\nexport const REDUCAO_DIVIDENDOS = { value: 'REDUCAO_DIVIDENDOS', label: 'Redução por Dividendos', extraFields: { intValue: 3 } };\r\nexport const ACRESCIMO_REAVALIACAO_ATIVO = {\r\n  extraFields: { intValue: 4 },\r\n  label: 'Acréscimo por Reavaliação de Ativos',\r\n  value: 'ACRESCIMO_REAVALIACAO_ATIVO',\r\n};\r\nexport const ACRESC_DOACAO_SUBVENCAO_INVEST = {\r\n  extraFields: { intValue: 5 },\r\n  label: 'Acréscimo por Doações e Subvenções para Investimentos Recebidos',\r\n  value: 'ACRESC_DOACAO_SUBVENCAO_INVEST',\r\n};\r\nexport const SUBSC_INTEGRALIZACAO_CAPITAL = {\r\n  extraFields: { intValue: 6 },\r\n  label: 'Acréscimo por Subscrição e Integralização de Capital',\r\n  value: 'SUBSC_INTEGRALIZACAO_CAPITAL',\r\n};\r\nexport const ACRESCIMO_EXCEDA_VALOR_NOMINAL = {\r\n  extraFields: { intValue: 7 },\r\n  label:\r\n    'Acréscimo pelo Recebimento de Valor que Exceda o Valor Nominal das Ações \\n Integralizadas ou o  Preço de Emissão das Ações sem Valor Nominal',\r\n  value: 'ACRESCIMO_EXCEDA_VALOR_NOMINAL',\r\n};\r\nexport const ACRESCIMO_VALOR_ALIENACAO = {\r\n  extraFields: { intValue: 8 },\r\n  label: 'Acréscimo pelo Valor da Alienação de Partes Beneficiárias e Bônus de Subscrição',\r\n  value: 'ACRESCIMO_VALOR_ALIENACAO',\r\n};\r\nexport const ACRESCIMO_PREMIO_RECEBIDO = {\r\n  extraFields: { intValue: 9 },\r\n  label: 'Acréscimo por Prêmio Recebido na Emissão de Debêntures',\r\n  value: 'ACRESCIMO_PREMIO_RECEBIDO',\r\n};\r\nexport const REDUC_ACOES_OU_ACRESC_POR_VENDA = {\r\n  extraFields: { intValue: 10 },\r\n  label: 'Redução por Ações Próprias Adquiridas ou Acréscimo por sua Venda',\r\n  value: 'REDUC_ACOES_OU_ACRESC_POR_VENDA',\r\n};\r\nexport const ACRESC_OU_REDUCAO_EXERCICIO_ANT = {\r\n  extraFields: { intValue: 11 },\r\n  label: 'Acréscimo ou Redução por Ajuste de Exercícios Anteriores',\r\n  value: 'ACRESC_OU_REDUCAO_EXERCICIO_ANT',\r\n};\r\n\r\nexport const EFEITO_PATRIMONIO_LIQUIDO_ENUM_VALUES = [\r\n  NAO_INTERFERE,\r\n  LUCRO_LIQUIDO_EXERCICIO,\r\n  PREJUIZO_LIQUIDO_EXERCICIO,\r\n  REDUCAO_DIVIDENDOS,\r\n  ACRESCIMO_REAVALIACAO_ATIVO,\r\n  ACRESC_DOACAO_SUBVENCAO_INVEST,\r\n  SUBSC_INTEGRALIZACAO_CAPITAL,\r\n  ACRESCIMO_EXCEDA_VALOR_NOMINAL,\r\n  ACRESCIMO_VALOR_ALIENACAO,\r\n  ACRESCIMO_PREMIO_RECEBIDO,\r\n  REDUC_ACOES_OU_ACRESC_POR_VENDA,\r\n  ACRESC_OU_REDUCAO_EXERCICIO_ANT,\r\n];\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mcg/lotePadrao';\r\n\r\nconst LancamentoPadraoIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'LancamentoPadraoSearchView',\r\n      }}\r\n      label={props.label}\r\n      placeholder={props.placeholder}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LancamentoPadraoIS;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { FC, useState } from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport { Button, Card, CardBody, CardHeader, UncontrolledTooltip } from 'reactstrap';\r\nimport { ACTION_EVENTS, alertManager, AlertType, UseFormProps } from 'summer';\r\nimport { LancamentoHistorico } from '../../../../models/dtos/mcg/lancamentoHistorico';\r\n\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css';\r\nimport './HistoricoVariavelDataGrid.css';\r\n\r\ninterface HistoricoVariavelDataGridProps {\r\n  formProps: UseFormProps;\r\n  onEdit: (historio: LancamentoHistorico & { rowIndex: number }) => void;\r\n  onRemove: (historio: LancamentoHistorico & { rowIndex: number }) => void;\r\n  disabled: boolean;\r\n}\r\n\r\nconst HistoricoVariavelDataGrid: FC<HistoricoVariavelDataGridProps> = props => {\r\n  const [selecionado, setSelecionado] = useState(null);\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'historico.codigo',\r\n      text: 'Código',\r\n    },\r\n    {\r\n      dataField: 'historico.descricao',\r\n      text: 'Descrição',\r\n    },\r\n    {\r\n      dataField: 'historicoVariavel',\r\n      text: 'Histórico Variável',\r\n    },\r\n  ];\r\n\r\n  const historicos = props.formProps.watch('historicos').map((it, rowIndex) => ({ ...it, rowIndex }));\r\n\r\n  const onSelect = (row, _, index) => setSelecionado({ ...row, rowIndex: index + 1 });\r\n\r\n  const checkSelect = () => {\r\n    const result = selecionado !== null;\r\n    if (result === false) {\r\n      alertManager.emit(ACTION_EVENTS.SHOW, {\r\n        message: 'Selecione um registro',\r\n        type: AlertType.INFORMATION,\r\n      });\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const onEdit = () => {\r\n    if (checkSelect()) {\r\n      props.onEdit(selecionado);\r\n    }\r\n  };\r\n\r\n  const onRemove = () => {\r\n    if (checkSelect()) {\r\n      props.onRemove(selecionado);\r\n    }\r\n  };\r\n\r\n  const onSort = direction => () => {\r\n    if (checkSelect()) {\r\n      const currIndex = selecionado.rowIndex - 1;\r\n      const nextIndex = currIndex + direction;\r\n\r\n      historicos.splice(currIndex, 1);\r\n      historicos.splice(nextIndex, 0, selecionado);\r\n\r\n      setSelecionado({ ...selecionado, rowIndex: nextIndex + 1 });\r\n\r\n      props.formProps.setValue('historicos', [...historicos]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"card-box grid-historicos\">\r\n      <CardHeader className=\"card-header pr-2\">\r\n        <div className=\"card-header--title\">Históricos</div>\r\n        <div className=\"card-header--actions\">\r\n          <Button id=\"moveUpButton\" size=\"sm\" color=\"link\" className=\"text-success\" onClick={onSort(-1)}>\r\n            <FontAwesomeIcon icon=\"long-arrow-alt-up\" />\r\n          </Button>\r\n          <UncontrolledTooltip target=\"moveUpButton\">Mover - Acima</UncontrolledTooltip>\r\n          <Button id=\"moveDownButton\" size=\"sm\" color=\"link\" className=\"text-success\" onClick={onSort(1)}>\r\n            <FontAwesomeIcon icon=\"long-arrow-alt-down\" />\r\n          </Button>\r\n          <UncontrolledTooltip target=\"moveDownButton\">Mover - Abaixo</UncontrolledTooltip>\r\n          <Button id=\"editHistButton\" size=\"sm\" color=\"link\" className=\"text-warning\" onClick={onEdit} disabled={props.disabled}>\r\n            <FontAwesomeIcon icon=\"pen\" />\r\n          </Button>\r\n          <UncontrolledTooltip target=\"editHistButton\">Editar Histórico Selecionado</UncontrolledTooltip>\r\n          <Button id=\"removeHistButton\" size=\"sm\" color=\"link\" className=\"text-danger\" onClick={onRemove} disabled={props.disabled}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n          </Button>\r\n          <UncontrolledTooltip target=\"removeHistButton\">Excluir Histórico Selecionado</UncontrolledTooltip>\r\n        </div>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <ToolkitProvider keyField=\"rowIndex\" columns={columns} data={historicos} bootstrap4={true}>\r\n          {toolkitprops => [\r\n            <BootstrapTable\r\n              {...toolkitprops.baseProps}\r\n              striped={true}\r\n              bordered={true}\r\n              hover={true}\r\n              responsive={true}\r\n              condensed={true}\r\n              key=\"histVariavelDados\"\r\n              selectRow={{\r\n                clickToSelect: true,\r\n                mode: 'radio',\r\n                onSelect,\r\n                selected: selecionado ? [selecionado.rowIndex - 1] : [],\r\n              }}\r\n              rowEvents={{\r\n                onDoubleClick: () => onEdit(),\r\n              }}\r\n            />,\r\n            <div key=\"divFotterKey\" className=\"text-left\">\r\n              Registros: {historicos.length}\r\n            </div>,\r\n          ]}\r\n        </ToolkitProvider>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default HistoricoVariavelDataGrid;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { FC, useState } from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport { Button, Card, CardBody, CardHeader, UncontrolledTooltip } from 'reactstrap';\r\nimport { ACTION_EVENTS, alertManager, AlertType, decimalFormatter, UseFormProps } from 'summer';\r\nimport { EmpresaMCG } from '../../../../models/dtos/mcg/empresaMCG';\r\nimport { Lancamento } from '../../../../models/dtos/mcg/lancamento';\r\nimport { LancamentoMCGConfig } from '../../../../models/dtos/mcg/lancamentoMCGConfig';\r\nimport { CODIGO_REDUZIDO as CODIGO_REDUZIDO_CENTRO } from '../../../../models/enumerated/ger/centroCustoGERTipoLancamentoCentroCustoEnum';\r\nimport { CODIGO_REDUZIDO as CODIGO_REDUZIDO_PLANO } from '../../../../models/enumerated/ger/planoContaGERTipoLancamentoContaEnum';\r\nimport { concatenarHistorico } from '../../../../utilities/mcg.util';\r\n\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css';\r\nimport './LancamentoItensDataGrid.css';\r\n\r\ninterface LancamentoItensDataGridProps {\r\n  lancamentoConfig: LancamentoMCGConfig;\r\n  formProps: UseFormProps;\r\n  empresaMCG: EmpresaMCG;\r\n  onEdit: (lancamento: Lancamento & { rowIndex: number }) => void;\r\n  onRemove: (lancamento: Lancamento & { rowIndex: number }) => void;\r\n  disabled: boolean;\r\n  numeroLote: number;\r\n}\r\n\r\nconst LancamentoItensDataGrid: FC<LancamentoItensDataGridProps> = props => {\r\n  const [selecionado, setSelecionado] = useState(null);\r\n\r\n  const contaDebitoOuCRFormatter = (col, row) => {\r\n    let result = '';\r\n    if (row.planoContaDebito) {\r\n      result =\r\n        props.empresaMCG.tipoLancamentoConta === CODIGO_REDUZIDO_PLANO.value ? row.planoContaDebito.codigoReduzido : row.planoContaDebito.conta;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const contaCreditoOuCRFormatter = (col, row) => {\r\n    let result = '';\r\n    if (row.planoContaCredito) {\r\n      result =\r\n        props.empresaMCG.tipoLancamentoConta === CODIGO_REDUZIDO_PLANO.value ? row.planoContaCredito.codigoReduzido : row.planoContaCredito.conta;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const centroCustoCreditoOuCRFormatter = (col, row) => {\r\n    let result = '';\r\n    if (row.centroCustoCredito) {\r\n      result =\r\n        props.empresaMCG.tipoLancamentoConta === CODIGO_REDUZIDO_CENTRO.value ? row.centroCustoCredito.codigoReduzido : row.centroCustoCredito.codigo;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const centroCustoDebitoOuCRFormatter = (col, row) => {\r\n    let result = '';\r\n    if (row.centroCustoDebito) {\r\n      result =\r\n        props.empresaMCG.tipoLancamentoConta === CODIGO_REDUZIDO_CENTRO.value ? row.centroCustoDebito.codigoReduzido : row.centroCustoDebito.codigo;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'data',\r\n      text: 'Data do Lançamento',\r\n    },\r\n    {\r\n      dataField: 'lote',\r\n      formatter: () => props.numeroLote,\r\n      text: 'Nº Lote',\r\n    },\r\n    {\r\n      dataField: 'numero',\r\n      text: 'Nº Lançamento',\r\n    },\r\n    {\r\n      dataField: 'contaDebitoOuCR',\r\n      formatter: contaDebitoOuCRFormatter,\r\n      text: 'Conta de Débito',\r\n    },\r\n    {\r\n      dataField: 'centroCustoDebitoOuCR',\r\n      formatter: centroCustoDebitoOuCRFormatter,\r\n      hidden: !props.lancamentoConfig || props.lancamentoConfig.utilizarCentroCusto === false,\r\n      text: 'Centro de Custo Débito',\r\n    },\r\n    {\r\n      dataField: 'contaCreditoOuCR',\r\n      formatter: contaCreditoOuCRFormatter,\r\n      text: 'Conta de Crédito',\r\n    },\r\n    {\r\n      dataField: 'centroCustoCreditoOuCR',\r\n      formatter: centroCustoCreditoOuCRFormatter,\r\n      hidden: !props.lancamentoConfig || props.lancamentoConfig.utilizarCentroCusto === false,\r\n      text: 'Centro de Custo Crédito',\r\n    },\r\n    {\r\n      dataField: 'valor',\r\n      formatter: decimalFormatter,\r\n      text: 'Valor',\r\n    },\r\n    {\r\n      dataField: 'historicos',\r\n      formatter: concatenarHistorico,\r\n      text: 'Histórico',\r\n    },\r\n  ];\r\n\r\n  const info = { credito: 0, debito: 0, diferenca: 0 };\r\n\r\n  const lancamentos = props.formProps.watch('lancamentos').map((it, rowIndex) => ({ ...it, rowIndex }));\r\n\r\n  lancamentos.forEach(it => {\r\n    if (it.planoContaCredito) {\r\n      info.credito += it.valor;\r\n    }\r\n    if (it.planoContaDebito) {\r\n      info.debito += it.valor;\r\n    }\r\n  });\r\n\r\n  const onSelect = (row, _, index) => setSelecionado({ ...row, rowIndex: index + 1 });\r\n\r\n  const checkSelect = () => {\r\n    const result = selecionado !== null;\r\n    if (result === false) {\r\n      alertManager.emit(ACTION_EVENTS.SHOW, {\r\n        message: 'Selecione um registro',\r\n        type: AlertType.INFORMATION,\r\n      });\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const onEdit = () => {\r\n    if (checkSelect()) {\r\n      props.onEdit(selecionado);\r\n    }\r\n  };\r\n\r\n  const onRemove = () => {\r\n    if (checkSelect()) {\r\n      props.onRemove(selecionado);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"card-box grid-lancamentos\">\r\n      <CardHeader className=\"card-header pr-2\">\r\n        <div className=\"card-header--title\">Lançamentos</div>\r\n        <div className=\"card-header--actions\">\r\n          <Button id=\"editLancButton\" size=\"sm\" color=\"link\" className=\"text-warning\" onClick={onEdit} disabled={props.disabled}>\r\n            <FontAwesomeIcon icon=\"pen\" />\r\n          </Button>\r\n          <UncontrolledTooltip target=\"editLancButton\">Editar Lançamento Selecionado</UncontrolledTooltip>\r\n          <Button id=\"removeLancButton\" size=\"sm\" color=\"link\" className=\"text-danger\" onClick={onRemove} disabled={props.disabled}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n          </Button>\r\n          <UncontrolledTooltip target=\"removeLancButton\">Excluir Lançamento Selecionado</UncontrolledTooltip>\r\n        </div>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <ToolkitProvider keyField=\"rowIndex\" columns={columns} data={lancamentos} bootstrap4={true}>\r\n          {toolkitprops => [\r\n            <BootstrapTable\r\n              {...toolkitprops.baseProps}\r\n              striped={true}\r\n              bordered={true}\r\n              hover={true}\r\n              responsive={true}\r\n              condensed={true}\r\n              key=\"histVariavelDados\"\r\n              selectRow={{\r\n                clickToSelect: true,\r\n                mode: 'radio',\r\n                onSelect,\r\n              }}\r\n              rowEvents={{\r\n                onDoubleClick: () => onEdit(),\r\n              }}\r\n            />,\r\n            <div key=\"divFotterKey\" className=\"d-flex justify-content-between\">\r\n              <span>Registros: {lancamentos.length}</span>\r\n              <div className=\"footer\">\r\n                <span>Débito: {decimalFormatter(info.debito, null)}</span>\r\n                <span>Crédito: {decimalFormatter(info.credito, null)}</span>\r\n                <span>Diferença: {decimalFormatter(info.credito - info.credito, null)}</span>\r\n              </div>\r\n            </div>,\r\n          ]}\r\n        </ToolkitProvider>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default LancamentoItensDataGrid;\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Badge, Col, Modal, ModalBody, ModalFooter, ModalHeader, Row } from 'reactstrap';\r\nimport { ACTION_EVENTS, alertManager, AlertType, Box, ErroList, InputGroupInline, InputType, isEmpty, ProcessBar } from 'summer';\r\nimport { GlobalParameter } from '../../../../models/dtos/ger/globalParameter';\r\nimport { LancamentoMCGConfig } from '../../../../models/dtos/mcg/lancamentoMCGConfig';\r\nimport { LotePadrao } from '../../../../models/dtos/mcg/lotePadrao';\r\nimport { CODIGO_REDUZIDO } from '../../../../models/enumerated/ger/planoContaGERTipoLancamentoContaEnum';\r\nimport { concatenarHistorico } from '../../../../utilities/mcg.util';\r\n\r\ninterface LancamentoPadraoModalViewProps {\r\n  dataLancamento: string;\r\n  globalParameter: GlobalParameter;\r\n  lancamentoConfig: LancamentoMCGConfig;\r\n  lotePadrao: LotePadrao;\r\n  onClose: () => void;\r\n  onConfirm: (lancamentos) => void;\r\n}\r\n\r\ninterface FormFields {\r\n  centroCustoCredito?: string;\r\n  centroCustoDebito?: string;\r\n  credito?: string;\r\n  debito?: string;\r\n  dtLancamento?: string;\r\n  historico?: string;\r\n  valor?: number;\r\n}\r\n\r\nconst LancamentoPadraoModalView: FC<LancamentoPadraoModalViewProps> = props => {\r\n  const formProps = useForm<FormFields>({\r\n    defaultValues: {\r\n      dtLancamento: props.dataLancamento,\r\n    },\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const [lancamentos, setLancamentos] = useState([]);\r\n  const [indexAtual, setIndexAtual] = useState(-1);\r\n\r\n  useEffect(\r\n    () => {\r\n      setTimeout(() => {\r\n        setLancamento(0);\r\n      }, 700);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      const nextIndex = indexAtual + 1;\r\n      if (nextIndex < props.lotePadrao.lotePadraoLancamento.length) {\r\n        setLancamento(nextIndex);\r\n      } else {\r\n        props.onConfirm(lancamentos);\r\n        props.onClose();\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [lancamentos]\r\n  );\r\n\r\n  const getDescConta = conta => {\r\n    let result = '';\r\n    const reduzido = props.globalParameter.empresaMCG.tipoLancamentoConta === CODIGO_REDUZIDO.value;\r\n    if (conta) {\r\n      result = reduzido ? conta.codigoReduzido : conta.conta;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const setLancamento = index => {\r\n    setIndexAtual(index);\r\n    const lancamento = props.lotePadrao.lotePadraoLancamento[index];\r\n    formProps.setValue([\r\n      { debito: getDescConta(lancamento.planoContaDebito) },\r\n      { credito: getDescConta(lancamento.planoContaCredito) },\r\n      { centroCustoDebito: lancamento.centroCustoDebito && lancamento.centroCustoDebito.descricao },\r\n      { centroCustoCredito: lancamento.centroCustoCredito && lancamento.centroCustoCredito.descricao },\r\n      { historico: concatenarHistorico(lancamento.historico) },\r\n      { valor: null },\r\n    ]);\r\n  };\r\n\r\n  const onClose = () => {\r\n    if (lancamentos.length > 0) {\r\n      props.onConfirm(lancamentos);\r\n    }\r\n    props.onClose();\r\n  };\r\n\r\n  const validateExtras = formData => {\r\n    const erros = [];\r\n\r\n    if (isEmpty(formData.dtLancamento)) {\r\n      erros.push('Data de Lançamento: Campo não pode estar em branco');\r\n    }\r\n\r\n    const valor = parseFloat(formData.valor);\r\n    if (isNaN(valor) || valor <= 0) {\r\n      erros.push('Valor: Valor deve ser maior que 0');\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    const values = formProps.getValues();\r\n    const erros = validateExtras(values);\r\n    if (erros.length > 0) {\r\n      alertManager.emit(ACTION_EVENTS.SHOW, {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      });\r\n    } else {\r\n      const lancamento = props.lotePadrao.lotePadraoLancamento[indexAtual];\r\n      setLancamentos(l => [\r\n        ...l,\r\n        {\r\n          centroCustoCredito: lancamento.centroCustoCredito,\r\n          centroCustoDebito: lancamento.centroCustoDebito,\r\n          data: values.dtLancamento,\r\n          historicos: lancamento.historico.map(it => ({\r\n            codigo: it.historico ? it.historico.codigo : null,\r\n            descricao: it.historico ? it.historico.descricao : null,\r\n            historico: it.historico || null,\r\n            historicoVariavel: it.historicoVariavel,\r\n          })),\r\n          planoContaCredito: lancamento.planoContaCredito,\r\n          planoContaDebito: lancamento.planoContaDebito,\r\n          valor: values.valor,\r\n        },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={true} backdrop=\"static\" centered={true} toggle={props.onClose} size=\"lg\">\r\n      <ModalHeader toggle={props.onClose}>\r\n        <Badge color=\"primary\" pill={true} className=\"mr-2 mt-1 align-top\">\r\n          {indexAtual + 1} / {props.lotePadrao.lotePadraoLancamento.length}\r\n        </Badge>\r\n        Lançamento Padrão\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              isPrependLabel={true}\r\n              id=\"dtLancamento\"\r\n              label=\"Data\"\r\n              type={InputType.DATE}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Box title=\"Débito\">\r\n          <Row>\r\n            <Col>\r\n              <InputGroupInline formProps={formProps} isPrependLabel={true} id=\"debito\" label=\"Conta\" disabled={true} />\r\n            </Col>\r\n          </Row>\r\n          {props.lancamentoConfig.utilizarCentroCusto && (\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline formProps={formProps} isPrependLabel={true} id=\"centroCustoDebito\" label=\"Centro Custo\" disabled={true} />\r\n              </Col>\r\n            </Row>\r\n          )}\r\n        </Box>\r\n        <Box title=\"Crédito\">\r\n          <Row>\r\n            <Col>\r\n              <InputGroupInline formProps={formProps} isPrependLabel={true} id=\"credito\" label=\"Conta\" disabled={true} />\r\n            </Col>\r\n          </Row>\r\n          {props.lancamentoConfig.utilizarCentroCusto && (\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline formProps={formProps} isPrependLabel={true} id=\"centroCustoCredito\" label=\"Centro Custo\" disabled={true} />\r\n              </Col>\r\n            </Row>\r\n          )}\r\n        </Box>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={formProps}\r\n              isPrependLabel={true}\r\n              id=\"historico\"\r\n              label=\"Histórico\"\r\n              type={InputType.TEXT_AREA}\r\n              disabled={true}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline formProps={formProps} isPrependLabel={true} id=\"valor\" label=\"Valor\" type={InputType.MONEY} />\r\n          </Col>\r\n        </Row>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <ProcessBar handleSubmit={formProps.handleSubmit(onSubmit)} handleClose={onClose} />\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default LancamentoPadraoModalView;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport cx from 'clsx';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Button, Card, CardBody, CardHeader, Col, Input, Row, UncontrolledTooltip } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertType,\r\n  Box,\r\n  CALIMA_DANGER,\r\n  Checkbox,\r\n  compare,\r\n  EditForm,\r\n  EditViewProps,\r\n  ErroList,\r\n  findById,\r\n  formatDate,\r\n  formatRef,\r\n  formatSaldo,\r\n  getSelectedItem,\r\n  InputGroupInline,\r\n  InputType,\r\n  isEmpty,\r\n  parseRefToDate,\r\n  refToFormat,\r\n  toDate,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { CentroCusto } from '../../../../models/dtos/ger/centroCusto';\r\nimport { PlanoConta } from '../../../../models/dtos/ger/planoConta';\r\nimport { Lancamento } from '../../../../models/dtos/mcg/lancamento';\r\nimport { LancamentoHistorico } from '../../../../models/dtos/mcg/lancamentoHistorico';\r\nimport { CLASS_NAME, LancamentoLote } from '../../../../models/dtos/mcg/lancamentoLote';\r\nimport { LancamentoMCGConfig } from '../../../../models/dtos/mcg/lancamentoMCGConfig';\r\nimport { LotePadrao } from '../../../../models/dtos/mcg/lotePadrao';\r\nimport { TRIBUTACAO_LUCRO_REAL_ENUM_VALUES } from '../../../../models/enumerated/ger/tipoTributacaoEnum';\r\nimport { PERIODO_ANTERIOR } from '../../../../models/enumerated/mcg/bloqueioLancamentoValidateStringEnum';\r\nimport { EFEITO_PATRIMONIO_LIQUIDO_ENUM_VALUES, NAO_INTERFERE } from '../../../../models/enumerated/mcg/efeitoPatrimonioLiquidoEnum';\r\nimport { LANCAMENTO_UNICO, VARIOS_LANCAMENTOS } from '../../../../models/enumerated/mcg/lancamentoConfigHistoricoTypeEnum';\r\nimport {\r\n  LANCAMENTO_MCG_FORMA_ENUM_VALUES,\r\n  UM_CREDITO_VARIOS_DEBITOS,\r\n  UM_DEBITO_UM_CREDITO,\r\n  UM_DEBITO_VARIOS_CREDITOS,\r\n  VARIOS_DEBITOS_VARIOS_CREDITOS,\r\n} from '../../../../models/enumerated/mcg/lancamentoMCGFormaEnum';\r\nimport { NAO, SIM } from '../../../../models/enumerated/mcg/lancamentoMCGTipoValidLancPartidaSimplesEnum';\r\nimport { CONTABILIDADE } from '../../../../models/enumerated/mcg/origemLancamentoMCGEnum';\r\nimport { CONTABIL } from '../../../../models/enumerated/mlf/tipoApuracaoEnum';\r\nimport { atualizaCalculoIrpjCsll, getSaldoCredito, getSaldoDebito, isAlteraCalculoIRPJorCSLL } from '../../../../services/mcg.service';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport EnumUtil from '../../../../utilities/enum.util';\r\nimport { concatenarHistorico, validatePeriodoConfig } from '../../../../utilities/mcg.util';\r\nimport CentroCustoIS from '../../../components/mcg/centroCustoIS/CentroCustoIS';\r\nimport HistoricoIS from '../../../components/mcg/historicoIS/HistoricoIS';\r\nimport LancamentoMCGConfigIS from '../../../components/mcg/lancamentoMCGConfigIS/LancamentoMCGConfigIS';\r\nimport LancamentoPadraoIS from '../../../components/mcg/lancamentoPadraoIS/LancamentoPadraoIS';\r\nimport PlanoContaIS from '../../../components/mcg/planoContaIS/PlanoContaIS';\r\nimport HistoricoVariavelDataGrid from './HistoricoVariavelDataGrid';\r\nimport LancamentoItensDataGrid from './LancamentoItensDataGrid';\r\nimport LancamentoPadraoModalView from './LancamentoPadraoModalView';\r\n\r\nimport './LancamentoSaldoEditView.css';\r\n\r\ninterface LancamentoSaldoEditViewProps extends EditViewProps<LancamentoLote> {}\r\n\r\ninterface ScreenFields {\r\n  centroCustoCredito?: CentroCusto;\r\n  centroCustoDebito?: CentroCusto;\r\n  configuracao?: LancamentoMCGConfig & { label?: string };\r\n  data?: string;\r\n  efeitoPatrimonioLiquido?: string;\r\n  encerrado?: boolean;\r\n  formaLancamento?: number;\r\n  historicoAtual?: LancamentoHistorico;\r\n  historicos?: LancamentoHistorico[];\r\n  historicoVariavel?: string;\r\n  lancamentoPadrao?: LotePadrao;\r\n  numeroLancamento?: string;\r\n  planoContaCredito?: PlanoConta;\r\n  planoContaDebito?: PlanoConta;\r\n  referencia?: string;\r\n  somaCredito?: string;\r\n  somaDebito?: string;\r\n  idLancamentoAtual?: number;\r\n  indexLancamentoAtual?: number;\r\n  idHistoricoAtual?: number;\r\n  indexHistoricoAtual?: number;\r\n  valor?: number;\r\n}\r\n\r\ninterface CamposFixos {\r\n  fixarCentroCustoCredito?: boolean;\r\n  fixarCentroCustoDebito?: boolean;\r\n  fixarContaCredito?: boolean;\r\n  fixarContaDebito?: boolean;\r\n  fixarData?: boolean;\r\n  fixarHistoricoPadrao?: boolean;\r\n  fixarHistoricoVariavel?: boolean;\r\n}\r\n\r\ninterface OpenFromVerifyError {\r\n  idMcgLancamentoLote: number;\r\n  isFromVerifyError: true;\r\n}\r\n\r\nconst LancamentoSaldoEditView: FC<LancamentoSaldoEditViewProps & RouteComponentProps & OpenFromVerifyError> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const selectedItem = props.selectedItem || getSelectedItem(props);\r\n\r\n  const formProps = useForm<LancamentoLote & ScreenFields & CamposFixos>({\r\n    defaultValues: {\r\n      historicos: [],\r\n      lancamentos: [],\r\n      somaCredito: '0,00',\r\n      somaDebito: '0,00',\r\n    },\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const [lancamentoConfig, setLancamentoConfig] = useState<LancamentoMCGConfig>(globalReducer.globalParameter.lancamentoMCGConfig);\r\n  const [bloquearReferencia, setBloquearReferencia] = useState(null);\r\n  const [patrimonioLiquidoVisible, setPatrimonioLiquidoVisible] = useState(false);\r\n  const [modalContent, setModalContent] = useState(null);\r\n  const [labelDataInclusao, setLabelDataInclusao] = useState(null);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [isEditHistorico, setIsEditHistorico] = useState(false);\r\n  const [loteEdicao, setLoteEdicao] = useState(null);\r\n  const [desabilitarCamposLancamento, setDesabilitarCamposLancamento] = useState(false);\r\n\r\n  const [camposFixos, setCamposFixos] = useState<CamposFixos>({\r\n    fixarCentroCustoCredito: false,\r\n    fixarCentroCustoDebito: false,\r\n    fixarContaCredito: false,\r\n    fixarContaDebito: false,\r\n    fixarData: false,\r\n    fixarHistoricoPadrao: false,\r\n    fixarHistoricoVariavel: false,\r\n  });\r\n\r\n  const [centroCustoDisabled, setCentroCustoDisabled] = useState({\r\n    centroCustoCredito: true,\r\n    centroCustoDebito: true,\r\n  });\r\n\r\n  useEffect(\r\n    () => {\r\n      ['historicos', 'lancamentos', 'idLancamentoAtual', 'idHistoricoAtual', 'indexLancamentoAtual', 'indexHistoricoAtual'].forEach(name =>\r\n        formProps.register({ name })\r\n      );\r\n\r\n      setTimeout(() => {\r\n        const refAtual = refToFormat(globalReducer.globalParameter.empresaMCG.refAtual);\r\n        const refFinal = refToFormat(globalReducer.globalParameter.empresaMCG.refFinal);\r\n\r\n        formProps.setValue('configuracao', { ...lancamentoConfig, label: lancamentoConfig.descricao });\r\n        formProps.setValue('formaLancamento', lancamentoConfig.formaLancamento);\r\n        formProps.setValue('referencia', `${refAtual} à ${refFinal}`);\r\n\r\n        changeDataLancamento();\r\n\r\n        if (selectedItem && !isEmpty(selectedItem.idLote)) {\r\n          carregarLote();\r\n        }\r\n      }, 700);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      setCamposFixos(\r\n        Object.keys(camposFixos)\r\n          .map(key => ({ [key]: camposFixos[key] && lancamentoConfig[key] }))\r\n          .reduce((result, it) => ({ ...result, ...it }))\r\n      );\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [lancamentoConfig]\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      if (props.isFromVerifyError && !isEmpty(props.idMcgLancamentoLote)) {\r\n        selectedItem.idLote = props.idMcgLancamentoLote;\r\n        carregarLote();\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const carregarLote = () => {\r\n    findById({ id: selectedItem.idLote }, CLASS_NAME, {\r\n      thenFunction: (res: LancamentoLote) => {\r\n        setLoteEdicao(res);\r\n\r\n        formProps.setValue([{ lancamentos: res.lancamentos }, { numero: res.numero }]);\r\n\r\n        if (res.dataInclusao && res.horaInclusao) {\r\n          setLabelDataInclusao(`${res.dataInclusao} ${res.horaInclusao}`);\r\n        }\r\n\r\n        const values = formProps.getValues();\r\n        if (res.lancamentos.length > 1 && values.formaLancamento === UM_DEBITO_UM_CREDITO.value) {\r\n          const formaLancamento = VARIOS_DEBITOS_VARIOS_CREDITOS.value;\r\n          formProps.setValue('formaLancamento', formaLancamento);\r\n          setLancamentoConfig({\r\n            ...lancamentoConfig,\r\n            formaLancamento,\r\n          });\r\n        }\r\n\r\n        renderUltimoLancamento();\r\n      },\r\n    });\r\n  };\r\n\r\n  const renderUltimoLancamento = () => {\r\n    const values = formProps.getValues();\r\n    if (values.lancamentos.length > 0) {\r\n      renderLancamento(values.lancamentos[values.lancamentos.length - 1]);\r\n    }\r\n  };\r\n\r\n  const renderLancamento = lancamento => {\r\n    setIsEdit(true);\r\n    formProps.setValue([\r\n      { indexLancamentoAtual: lancamento.rowIndex || null },\r\n      { idLancamentoAtual: lancamento.id },\r\n      { planoContaCredito: lancamento.planoContaCredito },\r\n      { planoContaDebito: lancamento.planoContaDebito },\r\n      { numeroLancamento: lancamento.numero },\r\n      { centroCustoCredito: lancamento.centroCustoCredito },\r\n      { centroCustoDebito: lancamento.centroCustoDebito },\r\n      { data: lancamento.data },\r\n      { efeitoPatrimonioLiquido: lancamento.efeitoPatrimonioLiquido },\r\n      { historicos: lancamento.historicos },\r\n      { encerrado: lancamento.encerrado },\r\n      { valor: lancamento.valor },\r\n    ]);\r\n    renderUltimoHistorico(lancamento);\r\n    changeDataLancamento(false);\r\n\r\n    setDesabilitarCamposLancamento(!lancamentoConfig.informarLancamentoEncerramento && lancamento.encerrado);\r\n\r\n    setTimeout(() => {\r\n      changeContaCredito(lancamento.planoContaCredito);\r\n      changeContaDebito(lancamento.planoContaDebito);\r\n    }, 200);\r\n  };\r\n\r\n  const renderUltimoHistorico = lancamento => {\r\n    if (lancamento.historicos.length > 0) {\r\n      renderHistorico({ ...lancamento.historicos[lancamento.historicos.length - 1], rowIndex: lancamento.historicos.length });\r\n    }\r\n  };\r\n\r\n  const renderHistorico = historico => {\r\n    setIsEditHistorico(true);\r\n    formProps.setValue([\r\n      { idHistoricoAtual: historico.id },\r\n      { indexHistoricoAtual: historico.rowIndex || null },\r\n      { historicoAtual: historico.historico },\r\n      { historicoVariavel: historico.historicoVariavel },\r\n    ]);\r\n  };\r\n\r\n  const changeConfig = () => {\r\n    const values = formProps.getValues();\r\n    if (values.configuracao) {\r\n      setLancamentoConfig(values.configuracao);\r\n      formProps.setValue('formaLancamento', values.configuracao.formaLancamento);\r\n    }\r\n  };\r\n\r\n  const changeFormaLancamento = value => {\r\n    setLancamentoConfig({\r\n      ...lancamentoConfig,\r\n      formaLancamento: value,\r\n    });\r\n  };\r\n\r\n  const changeDataLancamento = (load = true) => {\r\n    const values = formProps.getValues();\r\n    setBloquearReferencia(values.data ? validatePeriodoConfig(values.data, globalReducer.globalParameter) : PERIODO_ANTERIOR.label);\r\n    if (load) {\r\n      loadSaldoDebito();\r\n      loadSaldoCredito();\r\n    }\r\n  };\r\n\r\n  const verificarEfeitoPatrimonio = () => {\r\n    let isVisible = false;\r\n    const digito = globalReducer.globalParameter.grupoPlanoConta.digitoPatrimonioLiquido;\r\n    if (digito) {\r\n      const values = formProps.getValues();\r\n      if (values.planoContaDebito) {\r\n        isVisible = values.planoContaDebito.conta.substr(0, digito.length) === digito;\r\n      }\r\n      if (!isVisible && values.planoContaCredito) {\r\n        isVisible = values.planoContaCredito.conta.substr(0, digito.length) === digito;\r\n      }\r\n    }\r\n    setPatrimonioLiquidoVisible(isVisible);\r\n  };\r\n\r\n  const loadSaldoDebito = (value = null, exibirAlerta: boolean = false) => {\r\n    verificarEfeitoPatrimonio();\r\n    const values = formProps.getValues();\r\n    formProps.setValue('somaDebito', formatSaldo(0));\r\n    if (values.planoContaDebito && values.data) {\r\n      getSaldoDebito(\r\n        {\r\n          conta: value ? value.conta : values.planoContaDebito.conta,\r\n          data: values.data,\r\n          idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        },\r\n        {\r\n          thenFunction: res => {\r\n            formProps.setValue('somaDebito', formatSaldo(res));\r\n            if (exibirAlerta) {\r\n              alertManager.emit(ACTION_EVENTS.SHOW, {\r\n                message: 'Saldo Débito: ' + formatSaldo(res),\r\n                type: AlertType.INFORMATION,\r\n              });\r\n            }\r\n          },\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const loadSaldoCredito = (value = null, exibirAlerta: boolean = false) => {\r\n    verificarEfeitoPatrimonio();\r\n    const values = formProps.getValues();\r\n    formProps.setValue('somaCredito', formatSaldo(0));\r\n    if (values.planoContaCredito && values.data) {\r\n      getSaldoCredito(\r\n        {\r\n          conta: value ? value.conta : values.planoContaCredito.conta,\r\n          data: values.data,\r\n          idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        },\r\n        {\r\n          thenFunction: res => {\r\n            formProps.setValue('somaCredito', formatSaldo(res));\r\n            if (exibirAlerta) {\r\n              alertManager.emit(ACTION_EVENTS.SHOW, {\r\n                message: 'Saldo Crédito: ' + formatSaldo(res),\r\n                type: AlertType.INFORMATION,\r\n              });\r\n            }\r\n          },\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const validarCentroCusto = (value, centroCusto) => {\r\n    const ativoPassivo =\r\n      value &&\r\n      value.conta.substr(0, 1) !== globalReducer.globalParameter.grupoPlanoConta.digitoAtivo &&\r\n      value.conta.substr(0, 1) !== globalReducer.globalParameter.grupoPlanoConta.digitoPassivo;\r\n\r\n    const utilizarAtivoPassivo = lancamentoConfig && lancamentoConfig.utilizarCentroCustoAtivoPassivo;\r\n\r\n    if (value && (utilizarAtivoPassivo || ativoPassivo)) {\r\n      setCentroCustoDisabled(p => ({ ...p, [centroCusto]: false }));\r\n    } else {\r\n      formProps.setValue(centroCusto, null);\r\n      setCentroCustoDisabled(p => ({ ...p, [centroCusto]: true }));\r\n    }\r\n  };\r\n\r\n  const validarContasReceitaDespesa = (value, campo) => {\r\n    let msg = null;\r\n    if (value) {\r\n      if (campo === 'planoContaDebito') {\r\n        if (value.conta && value.conta.charAt(0) === globalReducer.globalParameter.grupoPlanoConta.digitoReceita) {\r\n          msg = 'Deseja realmente informar uma Conta de Receita para Débito?';\r\n        }\r\n      } else if (campo === 'planoContaCredito') {\r\n        if (value.conta && value.conta.charAt(0) === globalReducer.globalParameter.grupoPlanoConta.digitoDespesa) {\r\n          msg = 'Deseja realmente informar uma Conta de Despesa para Crédito?';\r\n        }\r\n      }\r\n    }\r\n\r\n    if (msg) {\r\n      alertManager.emit(ACTION_EVENTS.SHOW, {\r\n        message: msg,\r\n        onNoClick: () => formProps.setValue(campo, null),\r\n        type: AlertType.WARNING_YES_NO,\r\n      });\r\n    }\r\n  };\r\n\r\n  const changeContaDebito = value => {\r\n    loadSaldoDebito(value);\r\n    validarCentroCusto(value, 'centroCustoDebito');\r\n    if (lancamentoConfig && lancamentoConfig.validarLancReceitaDespesa) {\r\n      validarContasReceitaDespesa(value, 'planoContaDebito');\r\n    }\r\n  };\r\n\r\n  const changeContaCredito = value => {\r\n    loadSaldoCredito(value);\r\n    validarCentroCusto(value, 'centroCustoCredito');\r\n    if (lancamentoConfig && lancamentoConfig.validarLancReceitaDespesa) {\r\n      validarContasReceitaDespesa(value, 'planoContaCredito');\r\n    }\r\n  };\r\n\r\n  const ajustarTelaViaLancamentoPadrao = lancamentos => {\r\n    let countCreditos = 0;\r\n    let countDebitos = 0;\r\n    let variosHistoricos = 0;\r\n\r\n    lancamentos.forEach(it => {\r\n      if (it.planoContaCredito) {\r\n        countCreditos++;\r\n      }\r\n\r\n      if (it.planoContaDebito) {\r\n        countDebitos++;\r\n      }\r\n\r\n      if (it.historicos.length > 1) {\r\n        variosHistoricos++;\r\n      }\r\n    });\r\n\r\n    const config = { ...lancamentoConfig };\r\n\r\n    config.historico = variosHistoricos > 0 ? VARIOS_LANCAMENTOS.value : LANCAMENTO_UNICO.value;\r\n\r\n    if (countCreditos > 0 && countDebitos > 0) {\r\n      if (countCreditos === 1 && countDebitos === 1 && lancamentos.length === 1) {\r\n        config.formaLancamento = UM_DEBITO_UM_CREDITO.value;\r\n      } else if (countCreditos === 1 && countDebitos > 1) {\r\n        config.formaLancamento = UM_CREDITO_VARIOS_DEBITOS.value;\r\n      } else if (countDebitos === 1 && countCreditos > 1) {\r\n        config.formaLancamento = UM_DEBITO_VARIOS_CREDITOS.value;\r\n      } else {\r\n        config.formaLancamento = VARIOS_DEBITOS_VARIOS_CREDITOS.value;\r\n      }\r\n    }\r\n\r\n    setLancamentoConfig(config);\r\n    formProps.setValue('formaLancamento', config.formaLancamento);\r\n  };\r\n\r\n  const closeModal = () => setModalContent(null);\r\n\r\n  const confirmModal = lancamentos => {\r\n    const values = formProps.getValues();\r\n    const listaFinal = [...values.lancamentos, ...lancamentos];\r\n\r\n    formProps.setValue(\r\n      'lancamentos',\r\n      listaFinal.map((it, index) => ({ ...it, rowIndex: index + 1 }))\r\n    );\r\n\r\n    ajustarTelaViaLancamentoPadrao(listaFinal);\r\n    renderUltimoLancamento();\r\n  };\r\n\r\n  const changeLancamentoPadrao = value => {\r\n    if (value) {\r\n      const values = formProps.getValues();\r\n      const dataLancamento = values.data || formatDate(parseRefToDate(globalReducer.globalParameter.empresaMCG.refAtual, 1));\r\n      setModalContent(\r\n        <LancamentoPadraoModalView\r\n          dataLancamento={dataLancamento}\r\n          globalParameter={globalReducer.globalParameter}\r\n          lancamentoConfig={lancamentoConfig}\r\n          lotePadrao={value}\r\n          onClose={closeModal}\r\n          onConfirm={confirmModal}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const showSaldoDebito = () => loadSaldoDebito(null, true);\r\n  const showSaldoCredito = () => loadSaldoCredito(null, true);\r\n\r\n  const onEditLancamento = lancamento => renderLancamento(lancamento);\r\n  const onEditHistorico = historico => renderHistorico(historico);\r\n\r\n  const onRemoveLancamento = lancamento => {\r\n    alertManager.emit(ACTION_EVENTS.SHOW, {\r\n      message: 'Deseja mesmo remover este lancamento?',\r\n      onOkClick: () => {\r\n        const values = formProps.getValues();\r\n        formProps.setValue(\r\n          'lancamentos',\r\n          values.lancamentos.filter((it, index) => {\r\n            const id = lancamento.id && it.id && lancamento.id === it.id;\r\n            const idx = lancamento.rowIndex && lancamento.rowIndex - 1 === index;\r\n            return !id && !idx;\r\n          })\r\n        );\r\n      },\r\n      type: AlertType.WARNING_YES_NO,\r\n    });\r\n  };\r\n\r\n  const onRemoveHistorico = historico => {\r\n    alertManager.emit(ACTION_EVENTS.SHOW, {\r\n      message: 'Deseja mesmo remover este histórico?',\r\n      onOkClick: () => {\r\n        const values = formProps.getValues();\r\n        formProps.setValue(\r\n          'historicos',\r\n          values.historicos.filter((it, index) => {\r\n            const id = historico.id && it.id && historico.id === it.id;\r\n            const idx = historico.rowIndex && historico.rowIndex - 1 === index;\r\n            return !id && !idx;\r\n          })\r\n        );\r\n      },\r\n      type: AlertType.WARNING_YES_NO,\r\n    });\r\n  };\r\n\r\n  const showHistoricoConcat = () => {\r\n    const values = formProps.getValues();\r\n    alertManager.emit(ACTION_EVENTS.SHOW, {\r\n      message: concatenarHistorico(values.historicos),\r\n      type: AlertType.INFORMATION,\r\n    });\r\n  };\r\n\r\n  const submitHistorico = () => {\r\n    const values = formProps.getValues();\r\n    if (!isEmpty(values.historicoAtual) || !isEmpty(values.historicoVariavel)) {\r\n      const historico = {\r\n        codigo: values.historicoAtual ? values.historicoAtual.codigo : null,\r\n        descricao: values.historicoAtual ? values.historicoAtual.descricao : null,\r\n        historico: values.historicoAtual,\r\n        historicoVariavel: values.historicoVariavel,\r\n      };\r\n\r\n      if (values.idHistoricoAtual || values.indexHistoricoAtual) {\r\n        formProps.setValue(\r\n          'historicos',\r\n          values.historicos.map((it, index) => {\r\n            let result = it;\r\n            const id = values.idHistoricoAtual && values.idHistoricoAtual === it.id;\r\n            const idx = values.indexHistoricoAtual && values.indexHistoricoAtual - 1 === index;\r\n            if (id || idx) {\r\n              result = { ...it, ...historico };\r\n            }\r\n            return result;\r\n          })\r\n        );\r\n      } else {\r\n        formProps.setValue('historicos', [...values.historicos, historico]);\r\n      }\r\n\r\n      setIsEditHistorico(false);\r\n\r\n      formProps.setValue([{ idHistoricoAtual: null }, { indexHistoricoAtual: null }]);\r\n\r\n      if (!values.fixarHistoricoPadrao) {\r\n        formProps.setValue('historicoAtual', null);\r\n      }\r\n\r\n      if (!values.fixarHistoricoVariavel) {\r\n        formProps.setValue('historicoVariavel', null);\r\n      }\r\n    }\r\n  };\r\n\r\n  const validateDebitoCredito = formData => {\r\n    const erros = [];\r\n\r\n    if (isEmpty(formData.planoContaDebito) && isEmpty(formData.planoContaCredito)) {\r\n      erros.push('Contas: Nenhuma conta informada.');\r\n    }\r\n\r\n    if (\r\n      !isEmpty(formData.planoContaDebito) &&\r\n      !isEmpty(formData.planoContaCredito) &&\r\n      formData.planoContaDebito.id === formData.planoContaCredito.id\r\n    ) {\r\n      erros.push('Contas: Débito e Crédito não podem ser iguais.');\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  const validateHistorico = formData => {\r\n    const erros = [];\r\n\r\n    if (formData.historicos.length === 0) {\r\n      if (lancamentoConfig.utilizarHistoricoPadrao && lancamentoConfig.utilizarHistoricoVariavel) {\r\n        if (isEmpty(formData.historicoAtual) && isEmpty(formData.historicoVariavel)) {\r\n          erros.push('Histórico Padrão/Variável: É necessário ter pelo menos um histórico para o lançamento.');\r\n        }\r\n      } else {\r\n        if (lancamentoConfig.utilizarHistoricoPadrao && isEmpty(formData.historicoAtual)) {\r\n          erros.push('Histórico Padrão: Campo não pode estar em branco.');\r\n        }\r\n\r\n        if (lancamentoConfig.utilizarHistoricoVariavel && isEmpty(formData.historicoVariavel)) {\r\n          erros.push('Histórico Variável: Campo não pode estar em branco.');\r\n        }\r\n      }\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  const validateCentroCusto = formData => {\r\n    const erros = [];\r\n\r\n    const ativo = globalReducer.globalParameter.grupoPlanoConta.digitoAtivo;\r\n    const passivo = globalReducer.globalParameter.grupoPlanoConta.digitoPassivo;\r\n\r\n    if (\r\n      !isEmpty(formData.planoContaDebito) &&\r\n      formData.planoContaDebito.conta.charAt(0) !== ativo &&\r\n      formData.planoContaDebito.conta.charAt(0) !== passivo\r\n    ) {\r\n      if (isEmpty(formData.centroCustoDebito)) {\r\n        erros.push('Centro de Custo Débito não pode estar em branco.');\r\n      }\r\n    }\r\n\r\n    if (\r\n      !isEmpty(formData.planoContaCredito) &&\r\n      formData.planoContaCredito.conta.charAt(0) !== ativo &&\r\n      formData.planoContaCredito.conta.charAt(0) !== passivo\r\n    ) {\r\n      if (isEmpty(formData.centroCustoCredito)) {\r\n        erros.push('Centro de Custo Credito não pode estar em branco.');\r\n      }\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  const validatePartidaDobrada = formData => {\r\n    const erros = [];\r\n\r\n    if (formData.lancamentos.length > 1 && (isEmpty(selectedItem.id) || !formData.encerrado)) {\r\n      const checkIndexId = (it, index) => {\r\n        let result = false;\r\n        if (formData.idLancamentoAtual) {\r\n          result = formData.idLancamentoAtual !== it.id;\r\n        } else if (formData.indexLancamentoAtual) {\r\n          result = formData.indexLancamentoAtual - 1 !== index;\r\n        }\r\n        return result;\r\n      };\r\n      const partidaDobrada = formData.lancamentos.some(\r\n        (it, index) => !isEmpty(it.planoContaDebito) && !isEmpty(it.planoContaCredito) && checkIndexId(it, index)\r\n      );\r\n      if (partidaDobrada) {\r\n        erros.push('O lançamento de partida dobrada deve ser o único do lote.');\r\n      }\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  const validateLancamento = () => {\r\n    const formData = formProps.getValues();\r\n    const erros = [];\r\n\r\n    if (isEmpty(formData.data)) {\r\n      erros.push('Data de lançamento é de preenchimento obrigatório');\r\n    } else {\r\n      const bloqueio = validatePeriodoConfig(formData.data, globalReducer.globalParameter);\r\n      if (bloqueio === null || bloqueio === PERIODO_ANTERIOR.label) {\r\n        if (parseInt(formatDate(toDate(formData.data), 'YYYY'), 10) < 1000) {\r\n          erros.push('Lançamento deve ser posterior ao ano 1000');\r\n        }\r\n      } else {\r\n        erros.push('Lançamento ' + bloqueio);\r\n      }\r\n    }\r\n\r\n    if (isEmpty(formData.valor)) {\r\n      erros.push('Valor deve ser maior que 0');\r\n    }\r\n\r\n    erros.push(...validateDebitoCredito(formData));\r\n    erros.push(...validateHistorico(formData));\r\n    erros.push(...validateCentroCusto(formData));\r\n    erros.push(...validatePartidaDobrada(formData));\r\n\r\n    if (patrimonioLiquidoVisible && isEmpty(formData.efeitoPatrimonioLiquido)) {\r\n      erros.push('Motivo de Modificação do Patrimônio Líquido - Campo não pode estar em branco');\r\n    }\r\n\r\n    const dataBase = formData.lancamentos.length > 0 ? formData.lancamentos[0].data : formData.data;\r\n\r\n    if (compare(dataBase, formData.data) !== 0) {\r\n      erros.push('As datas dos lançamentos de mesmo lote não podem ser diferentes.');\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  const submitLancamento = () => {\r\n    let result = true;\r\n\r\n    const erros = validateLancamento();\r\n\r\n    if (erros.length > 0) {\r\n      result = false;\r\n      alertManager.emit(ACTION_EVENTS.SHOW, {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.WARNING,\r\n      });\r\n    } else {\r\n      submitHistorico();\r\n\r\n      const values = formProps.getValues();\r\n      let lancamentos = values.lancamentos;\r\n\r\n      const numero = parseFloat(values.numeroLancamento);\r\n\r\n      const lancamento: Lancamento = {\r\n        centroCustoCredito: values.centroCustoCredito,\r\n        centroCustoDebito: values.centroCustoDebito,\r\n        data: values.data,\r\n        efeitoPatrimonioLiquido: patrimonioLiquidoVisible\r\n          ? EnumUtil.find(EFEITO_PATRIMONIO_LIQUIDO_ENUM_VALUES, values.efeitoPatrimonioLiquido).extraFields.intValue\r\n          : NAO_INTERFERE.extraFields.intValue,\r\n        empresa: globalReducer.globalParameter.empresa,\r\n        empresaOrigem: globalReducer.globalParameter.empresa,\r\n        encerrado: values.encerrado,\r\n        historicos: values.historicos,\r\n        numero: isNaN(numero) ? null : numero,\r\n        origem: CONTABILIDADE.extraFields.intValue,\r\n        origemLancamento: CONTABILIDADE.extraFields.intValue,\r\n        planoContaCredito: values.planoContaCredito,\r\n        planoContaDebito: values.planoContaDebito,\r\n        valor: values.valor,\r\n      };\r\n\r\n      if (values.idLancamentoAtual || values.indexLancamentoAtual) {\r\n        lancamentos = lancamentos.map((it, index) => {\r\n          const id = values.idLancamentoAtual && values.idLancamentoAtual === it.id;\r\n          const idx = values.indexLancamentoAtual && values.indexLancamentoAtual - 1 === index;\r\n          let res = it;\r\n          if (id || idx) {\r\n            res = { ...it, ...lancamento };\r\n          }\r\n          return res;\r\n        });\r\n      } else {\r\n        lancamento.lote = { numero: values.numero };\r\n        lancamentos.push(lancamento);\r\n      }\r\n\r\n      setIsEdit(false);\r\n\r\n      formProps.setValue([\r\n        { lancamentos },\r\n        { numeroLancamento: null },\r\n        { lancamentoPadrao: null },\r\n        { efeitoPatrimonioLiquido: null },\r\n        { historicos: [] },\r\n        { valor: null },\r\n        { encerrado: false },\r\n        { idLancamentoAtual: null },\r\n        { indexLancamentoAtual: null },\r\n        { idHistoricoAtual: null },\r\n        { indexHistoricoAtual: null },\r\n      ]);\r\n\r\n      const zerarCampoFixo = (idCampo, idCheck) => {\r\n        if (!values[idCheck]) {\r\n          formProps.setValue(idCampo, null);\r\n        }\r\n      };\r\n\r\n      zerarCampoFixo('data', 'fixarData');\r\n      zerarCampoFixo('planoContaDebito', 'fixarContaDebito');\r\n      zerarCampoFixo('centroCustoDebito', 'fixarCentroCustoDebito');\r\n      zerarCampoFixo('planoContaCredito', 'fixarContaCredito');\r\n      zerarCampoFixo('centroCustoCredito', 'fixarCentroCustoCredito');\r\n      zerarCampoFixo('historicoAtual', 'fixarHistoricoPadrao');\r\n      zerarCampoFixo('historicoVariavel', 'fixarHistoricoVariavel');\r\n\r\n      changeDataLancamento();\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const ajustarHistoricoPersist = (historico, index) => {\r\n    historico.indice = index;\r\n    return historico;\r\n  };\r\n\r\n  const ajustarLancamentoPersist = (lancamento, index) => {\r\n    lancamento.indice = index;\r\n    lancamento.historicos = lancamento.historicos.map(ajustarHistoricoPersist);\r\n    delete lancamento.lote;\r\n    return lancamento;\r\n  };\r\n\r\n  const finalizarBeforePersist = (formData, done) => {\r\n    const lote: LancamentoLote = {\r\n      idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n      lancamentos: formData.lancamentos.map(ajustarLancamentoPersist),\r\n    };\r\n\r\n    if (loteEdicao) {\r\n      lote.id = loteEdicao.id;\r\n      lote.numero = loteEdicao.numero;\r\n    }\r\n\r\n    done(lote);\r\n  };\r\n\r\n  const beforePersist = (_, done) => {\r\n    let ok = true;\r\n\r\n    if (formProps.getValues().valor > 0) {\r\n      ok = submitLancamento();\r\n    }\r\n\r\n    const formData = formProps.getValues();\r\n\r\n    if (ok) {\r\n      if (formData.lancamentos.length === 0) {\r\n        alertManager.emit(ACTION_EVENTS.SHOW, {\r\n          message: 'Lista de lançamentos não pode estar vazia',\r\n          type: AlertType.INFORMATION,\r\n        });\r\n        ok = false;\r\n      }\r\n    }\r\n\r\n    if (ok) {\r\n      let debitos = 0;\r\n      let creditos = 0;\r\n\r\n      formData.lancamentos.forEach(lancamento => {\r\n        if (lancamento.planoContaDebito) {\r\n          debitos += lancamento.valor;\r\n        }\r\n        if (lancamento.planoContaCredito) {\r\n          creditos += lancamento.valor;\r\n        }\r\n      });\r\n\r\n      if (debitos === creditos) {\r\n        finalizarBeforePersist(formData, done);\r\n      } else {\r\n        if (lancamentoConfig.validacaoLancPartidaSimples === NAO.value) {\r\n          alertManager.emit(ACTION_EVENTS.SHOW, {\r\n            message: 'A soma dos valores à Débito diferem dos valores à Crédito.',\r\n            type: AlertType.ERROR,\r\n          });\r\n        } else if (lancamentoConfig.validacaoLancPartidaSimples === SIM.value) {\r\n          finalizarBeforePersist(formData, done);\r\n        } else {\r\n          alertManager.emit(ACTION_EVENTS.SHOW, {\r\n            message: 'A soma dos valores à Débito diferem dos valores à Crédito. Deseja continuar?',\r\n            onOkClick: () => {\r\n              finalizarBeforePersist(formData, done);\r\n            },\r\n            type: AlertType.WARNING_YES_NO,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    return { async: true };\r\n  };\r\n\r\n  const atualizarCalculosIRPJeCSLL = referencia =>\r\n    new Promise(resolve => {\r\n      alertManager.emit(ACTION_EVENTS.SHOW, {\r\n        message:\r\n          'O lançamento interfere no cálculo de IRPJ ou CSLL já calculado no sistema. É possível que o procedimento de recalculo ' +\r\n          'possa ser demorado. Deseja recalcular o IRPJ e CSLL desse ano já apurado no sistema?',\r\n        onNoClick: () => resolve(),\r\n        onOkClick: () => {\r\n          atualizaCalculoIrpjCsll(\r\n            {\r\n              empresaMCG: globalReducer.globalParameter.empresaMCG,\r\n              referencia,\r\n            },\r\n            {\r\n              thenFunction: () => {\r\n                resolve();\r\n              },\r\n            }\r\n          );\r\n        },\r\n        type: AlertType.WARNING_YES_NO,\r\n      });\r\n    });\r\n\r\n  const afterPersist = (lote: LancamentoLote, done) => {\r\n    const { empresa, empresaMLF } = globalReducer.globalParameter;\r\n    const lucroReal = EnumUtil.contains(TRIBUTACAO_LUCRO_REAL_ENUM_VALUES, empresa.tipoTributacao);\r\n    const irpj = empresaMLF.configIRPJ && empresaMLF.configIRPJ.tipoApuracao === CONTABIL.value;\r\n    const csll = empresaMLF.configCSLL && empresaMLF.configCSLL.tipoApuracao === CONTABIL.value;\r\n\r\n    if (lucroReal && irpj && csll) {\r\n      const contas = [];\r\n\r\n      lote.lancamentos.forEach(it => {\r\n        if (it.planoContaDebito) {\r\n          contas.push(it.planoContaDebito.conta);\r\n        }\r\n        if (it.planoContaCredito) {\r\n          contas.push(it.planoContaCredito.conta);\r\n        }\r\n      });\r\n\r\n      if (contas.length > 0) {\r\n        const referencia = formatRef(toDate(lote.lancamentos[0].data));\r\n        isAlteraCalculoIRPJorCSLL(\r\n          {\r\n            empresaMCG: globalReducer.globalParameter.empresaMFP,\r\n            nomeContaCreditoDebito: contas,\r\n            referencia,\r\n          },\r\n          {\r\n            thenFunction: res => {\r\n              if (res) {\r\n                atualizarCalculosIRPJeCSLL(referencia).then(() => done());\r\n              } else {\r\n                done();\r\n              }\r\n            },\r\n          }\r\n        );\r\n      } else {\r\n        done();\r\n      }\r\n    } else {\r\n      done();\r\n    }\r\n    return { async: true };\r\n  };\r\n\r\n  const lockCheckbox = (id, reference, label = null) => {\r\n    const changeLockCheckbox = () => {\r\n      const values = formProps.getValues();\r\n      setCamposFixos(c => {\r\n        c[id] = values[id];\r\n        return { ...c };\r\n      });\r\n    };\r\n\r\n    return (\r\n      lancamentoConfig &&\r\n      lancamentoConfig[id] && (\r\n        <>\r\n          <div id={'box-' + id} className=\"lock-checkbox\">\r\n            <Checkbox id={id} formProps={formProps} onChange={changeLockCheckbox} />\r\n            <FontAwesomeIcon icon={camposFixos[id] ? 'lock' : 'lock-open'} />\r\n          </div>\r\n          <UncontrolledTooltip placement=\"bottom\" target={'box-' + id}>\r\n            Fixar {label}\r\n          </UncontrolledTooltip>\r\n        </>\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <WindowComponent title=\"Manutenção de Lançamentos\" wikiId={2302}>\r\n      <EditForm\r\n        formProps={formProps}\r\n        editViewProps={props}\r\n        dtoClassName={CLASS_NAME}\r\n        beforePersist={beforePersist}\r\n        afterPersist={afterPersist}\r\n        hideSubmitButton={desabilitarCamposLancamento}\r\n      >\r\n        {modalContent}\r\n        {desabilitarCamposLancamento && (\r\n          <p style={{ color: CALIMA_DANGER }} className=\"text-center\">\r\n            Atenção: Lançamento Automático de Encerramento de Resultado. Esse lançamento não pode ser alterado.\r\n          </p>\r\n        )}\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={formProps}\r\n              id=\"formaLancamento\"\r\n              inputDropDownProps={{ optionsProvider: LANCAMENTO_MCG_FORMA_ENUM_VALUES }}\r\n              isPrependLabel={true}\r\n              label=\"Fórmula\"\r\n              placeholder=\"Informe o Tipo de Fórmula\"\r\n              type={InputType.DROP_DOWN}\r\n              onChange={changeFormaLancamento}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <LancamentoMCGConfigIS id=\"configuracao\" formProps={formProps} label=\"Configuração\" onChange={changeConfig} />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={formProps}\r\n              isPrependLabel={true}\r\n              id=\"numero\"\r\n              label=\"Nº Lote\"\r\n              tooltipProps={{ message: 'Preenchimento Opcional - Codificação Automática' }}\r\n              disabled={desabilitarCamposLancamento}\r\n            />\r\n          </Col>\r\n          <Col md={4}>\r\n            <InputGroupInline\r\n              formProps={formProps}\r\n              isPrependLabel={true}\r\n              id=\"numeroLancamento\"\r\n              label=\"Nº Lançamento\"\r\n              tooltipProps={{ message: 'Preenchimento Opcional - Codificação Automática' }}\r\n              disabled={desabilitarCamposLancamento}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={formProps}\r\n              isPrependLabel={true}\r\n              id=\"data\"\r\n              label=\"Data do Lançamento\"\r\n              type={InputType.DATE}\r\n              disabled={camposFixos.fixarData || desabilitarCamposLancamento}\r\n              onBlur={changeDataLancamento}\r\n            />\r\n          </Col>\r\n          {lockCheckbox('fixarData', 'data', 'Data de Lançamento')}\r\n          <Col className={cx({ bloqueado: !!bloquearReferencia })}>\r\n            <InputGroupInline\r\n              formProps={formProps}\r\n              isPrependLabel={true}\r\n              id=\"referencia\"\r\n              label=\"Referencia\"\r\n              disabled={true}\r\n              tooltipProps={bloquearReferencia && { message: 'Lançamento ' + bloquearReferencia }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <LancamentoPadraoIS\r\n              id=\"lancamentoPadrao\"\r\n              formProps={formProps}\r\n              label=\"Lançamento Padrão\"\r\n              onChange={changeLancamentoPadrao}\r\n              disabled={desabilitarCamposLancamento}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Box title=\"Débito\">\r\n          <Row>\r\n            <Col>\r\n              <PlanoContaIS\r\n                id=\"planoContaDebito\"\r\n                formProps={formProps}\r\n                label=\"Conta\"\r\n                disabled={camposFixos.fixarContaDebito || desabilitarCamposLancamento}\r\n                onChange={changeContaDebito}\r\n              />\r\n            </Col>\r\n            {lockCheckbox('fixarContaDebito', 'planoContaDebito', 'Conta de Débito')}\r\n            {lancamentoConfig && lancamentoConfig.exibirSaldoContas ? (\r\n              <div style={{ paddingRight: 20, width: 200, marginLeft: 15 }}>\r\n                <Input innerRef={formProps.register} name=\"somaDebito\" id=\"somaDebito\" disabled={true} />\r\n              </div>\r\n            ) : (\r\n              <div style={{ paddingRight: 20, marginLeft: 15 }}>\r\n                <Button id=\"somaDebito\" style={{ width: 80 }} onClick={showSaldoDebito}>\r\n                  Saldo\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </Row>\r\n          {lancamentoConfig && lancamentoConfig.utilizarCentroCusto && (\r\n            <Row>\r\n              <Col>\r\n                <CentroCustoIS\r\n                  id=\"centroCustoDebito\"\r\n                  formProps={formProps}\r\n                  label=\"Centro de Custo\"\r\n                  disabled={camposFixos.fixarCentroCustoDebito || centroCustoDisabled.centroCustoDebito || desabilitarCamposLancamento}\r\n                />\r\n              </Col>\r\n              {lockCheckbox('fixarCentroCustoDebito', 'centroCustoDebito', 'Centro de Custo')}\r\n            </Row>\r\n          )}\r\n        </Box>\r\n        <Box title=\"Crédito\">\r\n          <Row>\r\n            <Col>\r\n              <PlanoContaIS\r\n                id=\"planoContaCredito\"\r\n                formProps={formProps}\r\n                label=\"Conta\"\r\n                disabled={camposFixos.fixarContaCredito || desabilitarCamposLancamento}\r\n                onChange={changeContaCredito}\r\n              />\r\n            </Col>\r\n            {lockCheckbox('fixarContaCredito', 'planoContaCredito', 'Conta de Crédito')}\r\n            {lancamentoConfig && lancamentoConfig.exibirSaldoContas ? (\r\n              <div style={{ paddingRight: 20, width: 200, marginLeft: 15 }}>\r\n                <Input innerRef={formProps.register} name=\"somaCredito\" id=\"somaCredito\" disabled={true} />\r\n              </div>\r\n            ) : (\r\n              <div style={{ paddingRight: 20, marginLeft: 15 }}>\r\n                <Button id=\"somaCredito\" style={{ width: 80 }} onClick={showSaldoCredito}>\r\n                  Saldo\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </Row>\r\n          {lancamentoConfig && lancamentoConfig.utilizarCentroCusto && (\r\n            <Row>\r\n              <Col>\r\n                <CentroCustoIS\r\n                  id=\"centroCustoCredito\"\r\n                  formProps={formProps}\r\n                  label=\"Centro de Custo\"\r\n                  disabled={camposFixos.fixarCentroCustoCredito || centroCustoDisabled.centroCustoCredito || desabilitarCamposLancamento}\r\n                />\r\n              </Col>\r\n              {lockCheckbox('fixarCentroCustoCredito', 'centroCustoCredito', 'Centro de Custo')}\r\n            </Row>\r\n          )}\r\n        </Box>\r\n        {patrimonioLiquidoVisible && (\r\n          <Row>\r\n            <Col>\r\n              <InputGroupInline\r\n                formProps={formProps}\r\n                id=\"efeitoPatrimonioLiquido\"\r\n                inputDropDownProps={{ optionsProvider: EFEITO_PATRIMONIO_LIQUIDO_ENUM_VALUES }}\r\n                isPrependLabel={true}\r\n                label=\"Motivo de Modificação do Patrimônio Líquido\"\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        )}\r\n        <Row>\r\n          <Col>\r\n            <HistoricoIS\r\n              id=\"historicoAtual\"\r\n              formProps={formProps}\r\n              label=\"Histórico Padrão\"\r\n              disabled={camposFixos.fixarHistoricoPadrao || desabilitarCamposLancamento}\r\n            />\r\n          </Col>\r\n          {lockCheckbox('fixarHistoricoPadrao', 'historicoAtual', 'Histórico')}\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Card className=\"historico-variavel\">\r\n              <CardHeader className=\"card-header pr-2\">\r\n                <div className=\"card-header--title\">Histórico Variável</div>\r\n                <div className=\"card-header--actions\">\r\n                  {lancamentoConfig && lancamentoConfig.historico === VARIOS_LANCAMENTOS.value && (\r\n                    <>\r\n                      <Button\r\n                        id=\"incluirHistorico\"\r\n                        size=\"sm\"\r\n                        color=\"link\"\r\n                        className={isEditHistorico ? 'text-primary' : 'text-success'}\r\n                        onClick={submitHistorico}\r\n                      >\r\n                        <FontAwesomeIcon icon={isEditHistorico ? 'save' : 'plus'} />\r\n                      </Button>\r\n                      <UncontrolledTooltip placement=\"bottom\" target=\"incluirHistorico\">\r\n                        {isEditHistorico ? 'Salvar Alterações' : 'Incluir Histórico'}\r\n                      </UncontrolledTooltip>\r\n                    </>\r\n                  )}\r\n                  <Button id=\"exibirHistorico\" size=\"sm\" color=\"link\" className=\"text-warning\" onClick={showHistoricoConcat}>\r\n                    <FontAwesomeIcon icon=\"link\" />\r\n                  </Button>\r\n                  <UncontrolledTooltip placement=\"bottom\" target=\"exibirHistorico\">\r\n                    Exibir histórico concatenado\r\n                  </UncontrolledTooltip>\r\n                  {lockCheckbox('fixarHistoricoVariavel', 'historicoVariavel', 'Histórico Variável')}\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  name=\"historicoVariavel\"\r\n                  innerRef={formProps.register}\r\n                  disabled={camposFixos.fixarHistoricoVariavel || desabilitarCamposLancamento}\r\n                  placeholder=\"Histórico Variável\"\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        {lancamentoConfig && lancamentoConfig.historico === VARIOS_LANCAMENTOS.value && (\r\n          <Row>\r\n            <Col>\r\n              <HistoricoVariavelDataGrid\r\n                formProps={formProps}\r\n                onEdit={onEditHistorico}\r\n                onRemove={onRemoveHistorico}\r\n                disabled={desabilitarCamposLancamento}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        )}\r\n        <Row>\r\n          <Col md={4}>\r\n            <InputGroupInline\r\n              formProps={formProps}\r\n              isPrependLabel={true}\r\n              id=\"valor\"\r\n              label=\"Valor\"\r\n              type={InputType.MONEY}\r\n              disabled={desabilitarCamposLancamento}\r\n            />\r\n          </Col>\r\n          {lancamentoConfig && lancamentoConfig.formaLancamento !== UM_DEBITO_UM_CREDITO.value && (\r\n            <div>\r\n              <Button color={isEdit ? 'primary' : 'success'} onClick={submitLancamento} disabled={desabilitarCamposLancamento}>\r\n                {isEdit ? 'Alterar' : 'Incluir'}\r\n              </Button>\r\n            </div>\r\n          )}\r\n          <Col style={{ paddingTop: 10 }} className=\"text-right\">\r\n            {labelDataInclusao && (\r\n              <p className=\"d-inline-block pr-4\" style={{ color: CALIMA_DANGER }}>\r\n                Registro incluído em {labelDataInclusao}\r\n              </p>\r\n            )}\r\n            <Checkbox id=\"encerrado\" formProps={formProps} label=\"Conta de Encerramento\" />\r\n          </Col>\r\n        </Row>\r\n        {lancamentoConfig && lancamentoConfig.formaLancamento !== UM_DEBITO_UM_CREDITO.value && (\r\n          <Row>\r\n            <Col>\r\n              <LancamentoItensDataGrid\r\n                formProps={formProps}\r\n                lancamentoConfig={lancamentoConfig}\r\n                empresaMCG={globalReducer.globalParameter.empresaMCG}\r\n                onEdit={onEditLancamento}\r\n                onRemove={onRemoveLancamento}\r\n                disabled={desabilitarCamposLancamento}\r\n                numeroLote={(loteEdicao && loteEdicao.numero) || null}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </EditForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default LancamentoSaldoEditView;\r\n","import { AxiosInstance } from 'axios';\r\nimport { ArquivoSelecionado, AxiosParam, create, isEmpty, send } from 'summer';\r\nimport { PlanoConta } from '../models/dtos/ger/planoConta';\r\nimport { PlanoContaSubGrupoParam } from '../models/dtos/ger/planoContaSubGrupoParam';\r\nimport { RuleMessage } from '../models/dtos/ger/ruleMessage';\r\nimport { Usuario } from '../models/dtos/ger/usuario';\r\nimport { BancoExtrato } from '../models/dtos/mcg/bancoExtrato';\r\nimport { BancoMCG } from '../models/dtos/mcg/bancoMCG';\r\nimport { BancoPlanoConta } from '../models/dtos/mcg/bancoPlanoConta';\r\nimport { CalculoIrpjCsll } from '../models/dtos/mcg/calculoIrpjCsll';\r\nimport { ComposicaoReceitaDespesasGrafParam } from '../models/dtos/mcg/composicaoReceitaDespesasGrafParam';\r\nimport { ComposicaoReceitaDespesasGrafReturn } from '../models/dtos/mcg/composicaoReceitaDespesasGrafReturn';\r\nimport { ConciliacaoBancaria } from '../models/dtos/mcg/conciliacaoBancaria';\r\nimport { ConciliacaoConta } from '../models/dtos/mcg/conciliacaoConta';\r\nimport { ConfigECFImuneIsenta } from '../models/dtos/mcg/configECFImuneIsenta';\r\nimport { ConfigECFIrpjCsll } from '../models/dtos/mcg/configECFIrpjCsll';\r\nimport { ConfigECFRemuneracaoSocio } from '../models/dtos/mcg/configECFRemuneracaoSocio';\r\nimport { ConsultaTotalLancamento } from '../models/dtos/mcg/consultaTotalLancamento';\r\nimport { ContaFluxoCaixa } from '../models/dtos/mcg/contaFluxoCaixa';\r\nimport { ContaFluxoCaixaIndireto } from '../models/dtos/mcg/contaFluxoCaixaIndireto';\r\nimport { ContaResultado } from '../models/dtos/mcg/contaResultado';\r\nimport { ContaResultadoLimpeza } from '../models/dtos/mcg/contaResultadoLimpeza';\r\nimport { ContaResultadoMCGEncerramento } from '../models/dtos/mcg/contaResultadoMCGEncerramento';\r\nimport { DataEncerradaParam } from '../models/dtos/mcg/dataEncerradaParam';\r\nimport { ECFExportacaoParam } from '../models/dtos/mcg/ecfExportacaoParam';\r\nimport { Erros } from '../models/dtos/mcg/erros';\r\nimport { EvolucaoContaContabilGrafParam } from '../models/dtos/mcg/evolucaoContaContabilGrafParam';\r\nimport { EvolucaoContaContabilGrafReturn } from '../models/dtos/mcg/evolucaoContaContabilGrafReturn';\r\nimport { FCONTContabilCrit } from '../models/dtos/mcg/fContContabilCrit';\r\nimport { FechamentoRestauracaoMCG } from '../models/dtos/mcg/fechamentoRestauracaoMCG';\r\nimport { ImportacaoFiscalContabil, ImportacaoFiscalContabilResult } from '../models/dtos/mcg/importacaoFiscalContabil';\r\nimport { ImportacaoHistorico } from '../models/dtos/mcg/importacaoHistorico';\r\nimport { ImportacaoHistoricoCSVParam } from '../models/dtos/mcg/importacaoHistoricoCSVParam';\r\nimport { ImportacaoLancamentoCSVParam } from '../models/dtos/mcg/importacaoLancamentoCSVParam';\r\nimport { ImportacaoLancamentoMCGRetornoValidacao } from '../models/dtos/mcg/importacaoLancamentoMCGRetornoValidacao';\r\nimport { ImportacaoLancamentoMCGSelecao } from '../models/dtos/mcg/importacaoLancamentoMCGSelecao';\r\nimport { ImportacaoLancamentoPadraoCSVParam } from '../models/dtos/mcg/importacaoLancamentoPadraoCSVParam';\r\nimport { ImportacaoPlanoConta } from '../models/dtos/mcg/importacaoPlanoConta';\r\nimport { ImportacaoPlanoContaCSVParam } from '../models/dtos/mcg/importacaoPlanoContaCSVParam';\r\nimport { ImportacaoSpedContabil } from '../models/dtos/mcg/importacaoSpedContabil';\r\nimport { ImportacaoResult, ImportarMCP } from '../models/dtos/mcg/importarMCP';\r\nimport { InfoConciliacaoBancaria } from '../models/dtos/mcg/infoConciliacaoBancaria';\r\nimport { IntegracaoFolhaParam } from '../models/dtos/mcg/integracaoFolhaParam';\r\nimport { IntegracaoHonorariosParam } from '../models/dtos/mcg/integracaoHonorariosParam';\r\nimport { Lancamento } from '../models/dtos/mcg/lancamento';\r\nimport { LancamentoConciliacao } from '../models/dtos/mcg/lancamentoConciliacao';\r\nimport { LancamentoIntegracaoFolha } from '../models/dtos/mcg/lancamentoIntegracaoFolha';\r\nimport { LancamentoIntegracaoHonorarios } from '../models/dtos/mcg/lancamentoIntegracaoHonorarios';\r\nimport { LancamentoSaldo } from '../models/dtos/mcg/lancamentoSaldo';\r\nimport { LivroFolha } from '../models/dtos/mcg/livroFolha';\r\nimport { LucroPrejuizoClassificacao } from '../models/dtos/mcg/lucroPrejuizoClassificacao';\r\nimport { MANADContabilCrit } from '../models/dtos/mcg/manadContabilCrit';\r\nimport { MutacaoPatrimonioLiquido } from '../models/dtos/mcg/mutacaoPatrimonioLiquido';\r\nimport { QuadroSocietario } from '../models/dtos/mcg/quadroSocietario';\r\nimport { RemoveLancamentoLote } from '../models/dtos/mcg/removeLancamentoLote';\r\nimport { RemoveLancamentoPeriodo } from '../models/dtos/mcg/removeLancamentoPeriodo';\r\nimport { Saldo } from '../models/dtos/mcg/saldo';\r\nimport { SaldoCriteria } from '../models/dtos/mcg/saldoCriteria';\r\nimport { SelecaoSpedContabil } from '../models/dtos/mcg/selecaoSpedContabil';\r\nimport { SomaSaldo } from '../models/dtos/mcg/somaSaldo';\r\nimport { TotalizadorLancamento } from '../models/dtos/mcg/totalizadorLancamento';\r\nimport { TransferenciaLancamentoConta } from '../models/dtos/mcg/transferenciaLancamentoConta';\r\nimport { VerificarErros } from '../models/dtos/mcg/verificarErros';\r\nimport { getArquivoDigitalService } from './ger.service';\r\n\r\nfunction getService(): AxiosInstance {\r\n  return create('/mcg');\r\n}\r\n\r\nexport function gerarLancamentosFolhaPagamento(integracaoFolhaParam: IntegracaoFolhaParam, param: AxiosParam<LancamentoIntegracaoFolha[]>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/gerarLancamentosFolhaPagamento', integracaoFolhaParam), param);\r\n}\r\n\r\nexport function integrarFolhaPagamento(lancamentoIntegracaoFolha: LancamentoIntegracaoFolha[], param: AxiosParam<any>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/integrarFolhaPagamento', lancamentoIntegracaoFolha), param);\r\n}\r\n\r\nexport function integrarMCP(importarParam: ImportarMCP, param: AxiosParam<ImportacaoResult>) {\r\n  send(getService().post<ImportacaoResult>('/importar', importarParam), param);\r\n}\r\n\r\nexport function importarLancamentoCSV(data: ImportacaoLancamentoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('importarDuplicados', String(data.importarDuplicados));\r\n  formDataSend.append('importarLancamentosCardinal', String(data.importarLancamentosCardinal));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarLancamentoPadraoCSV(data: ImportacaoLancamentoPadraoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoPadraoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistoricoCSV(data: ImportacaoHistoricoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('grupoHistoricoDestino.id', String(data.grupoHistoricoDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarHistoricoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarPlanoContaCSV(data: ImportacaoPlanoContaCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idEmpresa', String(data.idEmpresa));\r\n  formDataSend.append('grupoPlanoContaDestino.id', String(data.grupoPlanoContaDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarPlanoContaCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistorico(importacaoHistorico: ImportacaoHistorico, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarHistorico', importacaoHistorico), param);\r\n}\r\n\r\nexport function importarPlanoConta(importacaoPlanoContaParam: ImportacaoPlanoConta, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarPlanoConta', importacaoPlanoContaParam), param);\r\n}\r\n\r\nexport function buscarConfigLivroFolhaMCG(idEmpresa: number, param: AxiosParam<LivroFolha>) {\r\n  send(getService().get<LivroFolha>('/buscarConfigLivroFolhaMCG/' + idEmpresa), param);\r\n}\r\n\r\nexport function integracaoFiscalContabil(importarParam: ImportacaoFiscalContabil, param: AxiosParam<ImportacaoFiscalContabilResult>) {\r\n  send(getService().post<ImportacaoFiscalContabilResult>('/integracaoFiscalContabil', importarParam), param);\r\n}\r\n\r\nexport function encerrarContas(\r\n  contaResultadoEncerramento: ContaResultadoMCGEncerramento,\r\n  force: boolean,\r\n  param: AxiosParam<ContaResultadoMCGEncerramento>\r\n) {\r\n  send(\r\n    getService().post<ContaResultadoMCGEncerramento>('/encerrarContas', { contaResultadoEncerramento, force }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function getDataUltimaContaEncerrada(idGerEmpresa: number, param: AxiosParam<Date>) {\r\n  send(getService().get<Date>('/getDataUltimaContaEncerrada/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function limparEncerramentoContaResultado(contaResultadoLimpeza: ContaResultadoLimpeza, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/limparEncerramentoContaResultadoApos', contaResultadoLimpeza), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFIrpjCsll(configECFIrpjCsll: ConfigECFIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFIrpjCsll', configECFIrpjCsll), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFImuneIsenta(configECFImuneIsenta: ConfigECFImuneIsenta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFImuneIsenta', configECFImuneIsenta), param);\r\n}\r\n\r\nexport function validarRefRemuneracaoSocio(configECFRemuneracaoSocio: ConfigECFRemuneracaoSocio, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarRefRemuneracaoSocio', configECFRemuneracaoSocio), param);\r\n}\r\n\r\nexport function validarQuadroSocietario(configQuadro: QuadroSocietario, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/validarQuadroSocietario', configQuadro), param);\r\n}\r\n\r\nexport function obterLucroPrejuizoClassificacao(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterLucroPrejuizoClassificacao/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function getSaldo(saldo: Saldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldo', saldo), param);\r\n}\r\n\r\nexport function validarDadosSpedECF(ecfExportacaoParam: ECFExportacaoParam, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/validarDadosSpedECF', ecfExportacaoParam), param);\r\n}\r\n\r\nexport function gerarSpedECF(usuario: Usuario, ecfExportacaoParam: ECFExportacaoParam, param?: AxiosParam<string>) {\r\n  send(\r\n    getArquivoDigitalService().post<string>('/gerarSpedECF', { usuario, ecfExportacaoParam }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function recuperarLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<Lancamento[]>) {\r\n  send(getService().post<Lancamento[]>('/recuperarLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function transferirLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/transferirLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function obterBancoPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG>) {\r\n  send(getService().post<BancoMCG>('/obterBancoPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function validarConfigLivroFolha(idGerEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(getService().get<boolean>('/validarConfigLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function changeLivroFolha(idGerEmpresa: number, param: AxiosParam<void>) {\r\n  send(getService().get<void>('/changeLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function fecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<RuleMessage>) {\r\n  send(getService().post<RuleMessage>('/fecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function forceFecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/forceFecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function verificarErros(erros: VerificarErros, param: AxiosParam<Erros[]>) {\r\n  send(getService().post<Erros[]>('/verificarErros', erros), param);\r\n}\r\n\r\nexport function gerarSpedContabil(selecaoSped: SelecaoSpedContabil, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('usuario.id', String(selecaoSped.usuario.id));\r\n\r\n  if (selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n    for (const arquivo of selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n      formDataSend.append('arquivoRTFEscrituracaoSubstituida', arquivo.file, arquivo.nomeArquivo);\r\n    }\r\n  }\r\n\r\n  for (const atributoSelecaoSped in selecaoSped) {\r\n    if (\r\n      atributoSelecaoSped !== 'arquivoRTFEscrituracaoSubstituida' &&\r\n      atributoSelecaoSped !== 'usuario' &&\r\n      selecaoSped[atributoSelecaoSped] !== null\r\n    ) {\r\n      formDataSend.append(atributoSelecaoSped, selecaoSped[atributoSelecaoSped]);\r\n    }\r\n  }\r\n  send(getService().post<string>('/gerarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function salvarLucroPrejuizoClassificacao(\r\n  lucroPrejuizoClassificacao: LucroPrejuizoClassificacao,\r\n  param: AxiosParam<LucroPrejuizoClassificacao>\r\n) {\r\n  send(getService().post<LucroPrejuizoClassificacao>('/salvarLucroPrejuizoClassificacao', lucroPrejuizoClassificacao), param);\r\n}\r\n\r\nexport function consultarMovimentacao(saldoCriteria: SaldoCriteria, param: AxiosParam<LancamentoSaldo[]>) {\r\n  send(getService().post<LancamentoSaldo[]>('/consultarMovimentacao', saldoCriteria), param);\r\n}\r\n\r\nexport function totalizadorLancamento(consulta: ConsultaTotalLancamento, param: AxiosParam<TotalizadorLancamento>) {\r\n  send(getService().post<TotalizadorLancamento>('/totalizadorLancamento', consulta), param);\r\n}\r\n\r\nexport function getSaldoAnterior(saldoCriteria: SaldoCriteria, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoAnterior', saldoCriteria), param);\r\n}\r\n\r\nexport function isDataEncerrada(parametros: DataEncerradaParam, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isDataEncerrada', parametros), param);\r\n}\r\n\r\nexport function abrirContas(parametros: DataEncerradaParam, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/abrirContas', parametros), param);\r\n}\r\n\r\nexport function removeLancamentoPeriodo(parametros: RemoveLancamentoPeriodo, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removeLancamentoPeriodo', parametros), param);\r\n}\r\n\r\nexport function obterContasClassificacaoIndireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixaIndireto[]>) {\r\n  send(getService().get<ContaFluxoCaixaIndireto[]>('/obterContasClassificacaoIndireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoIndireto(contaFluxoCaixaIndireto: ContaFluxoCaixaIndireto, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoIndireto', contaFluxoCaixaIndireto), param);\r\n}\r\n\r\nexport function obterMutacaoPatrimonioLiquido(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterMutacaoPatrimonioLiquido/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarMutacaoPatrimonioLiquido(mutacaoPatrimonioLiquido: MutacaoPatrimonioLiquido, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarMutacaoPatrimonioLiquido', mutacaoPatrimonioLiquido), param);\r\n}\r\n\r\nexport function salvarContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function excluirContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/excluirContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function obterContasClassificacaoDireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixa[]>) {\r\n  send(getService().get<ContaFluxoCaixa[]>('/obterContasClassificacaoDireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoDireto(contaFluxoCaixa: ContaFluxoCaixa, param?: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoDireto', contaFluxoCaixa), param);\r\n}\r\n\r\nexport function findSubGrupo(planoContaSubGrupoParam: PlanoContaSubGrupoParam, param: AxiosParam<any>) {\r\n  send(getService().post<any>('/findSubGrupo', planoContaSubGrupoParam), param);\r\n}\r\n\r\nexport function removerTodosPlanosConta(idGrupoPlanoConta: number, usuario: Usuario, param: AxiosParam<void>) {\r\n  send(\r\n    getService().post<void>('/removerTodosPlanosConta', { idGrupoPlanoConta, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function removeList(listaPlanoConta: PlanoConta[], apagarFilha: boolean, usuario: Usuario, param: AxiosParam<any>) {\r\n  send(\r\n    getService().post<any>('/removeList', { listaPlanoConta, apagarFilha, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function listSubGrupo(planoConta: PlanoConta, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().post<PlanoConta[]>('/listSubGrupo', planoConta), param);\r\n}\r\n\r\nexport function referenciarContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<void>\r\n) {\r\n  send(\r\n    getService().post<void>('/referenciarContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function desvincularContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<any>\r\n) {\r\n  send(\r\n    getService().post<void>('/desvincularContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function existeLancamentoEmContaAnalitica(idPlanoConta: number, idEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(\r\n    getService().post<boolean>('/existeLancamentoEmContaAnalitica', { idPlanoConta, idEmpresa }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function importarLancamentoMCG(data: ImportacaoLancamentoMCGSelecao, param: AxiosParam<ImportacaoLancamentoMCGRetornoValidacao>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('tipoImportacao', String(data.tipoImportacao));\r\n  formDataSend.append('sobescrever', String(data.sobescrever));\r\n  formDataSend.append('versaoSuperiorA2', String(data.versaoSuperiorA2));\r\n  formDataSend.append('arquivo', data.arquivo[0].file, data.arquivo[0].nomeArquivo);\r\n\r\n  if (data.versaoSuperiorA2 === false && !isEmpty(data.dtInicial) && !isEmpty(data.dtFinal)) {\r\n    formDataSend.append('dtInicial', data.dtInicial);\r\n    formDataSend.append('dtFinal', data.dtFinal);\r\n  }\r\n\r\n  send(getService().post<ImportacaoLancamentoMCGRetornoValidacao>('/importarLancamentoMCG', formDataSend), param);\r\n}\r\n\r\nexport function importarSpedContabil(data: ImportacaoSpedContabil, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function gerarManadContabil(data: MANADContabilCrit, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('refInicial', data.refInicial);\r\n  formDataSend.append('refFinal', data.refFinal);\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  if (!isEmpty(data.arquivoSFP)) {\r\n    formDataSend.append('arquivoSFP', data.arquivoSFP[0].file, data.arquivoSFP[0].nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<string>('/gerarManadContabil', formDataSend), param);\r\n}\r\n\r\nexport function evolucaoContaContabilGraf(\r\n  evolucaoContaContabilGrafParam: EvolucaoContaContabilGrafParam,\r\n  param: AxiosParam<EvolucaoContaContabilGrafReturn>\r\n) {\r\n  send(getService().post<EvolucaoContaContabilGrafReturn>('/evolucaoContaContabilGraf', evolucaoContaContabilGrafParam), param);\r\n}\r\n\r\nexport function composicaoReceitaDespesasGraf(\r\n  compReceitaDespesasGrafParam: ComposicaoReceitaDespesasGrafParam,\r\n  param: AxiosParam<ComposicaoReceitaDespesasGrafReturn>\r\n) {\r\n  send(getService().post<ComposicaoReceitaDespesasGrafReturn>('/composicaoReceitaDespesasGraf', compReceitaDespesasGrafParam), param);\r\n}\r\n\r\nexport function gerarFCONTContabil(fContContabilCrit: FCONTContabilCrit, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/gerarFCONTContabil', fContContabilCrit), param);\r\n}\r\n\r\nexport function obterDadosArquivoExtrato(arquivoSelecionado: ArquivoSelecionado, idBancoMCG, param: AxiosParam<BancoExtrato[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idBancoMCG', idBancoMCG);\r\n\r\n  formDataSend.append('arquivoSelecionado', arquivoSelecionado[0].file, arquivoSelecionado[0].nomeArquivo);\r\n\r\n  send(getService().post<BancoExtrato[]>('/obterDadosArquivoExtrato', formDataSend), param);\r\n}\r\n\r\nexport function obterDadosConciliacaoBancariaPeriodo(\r\n  idGrupoPlanoConta,\r\n  idEmpresa,\r\n  idBancoMCG,\r\n  dtInicial,\r\n  dtFinal,\r\n  param: AxiosParam<InfoConciliacaoBancaria>\r\n) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGrupoPlanoConta', String(idGrupoPlanoConta));\r\n  formDataSend.append('idEmpresa', String(idEmpresa));\r\n  formDataSend.append('idBancoMCG', String(idBancoMCG));\r\n  formDataSend.append('dtInicial', String(dtInicial));\r\n  formDataSend.append('dtFinal', String(dtFinal));\r\n\r\n  send(getService().post<InfoConciliacaoBancaria>('/obterDadosConciliacaoBancariaPeriodo', formDataSend), param);\r\n}\r\n\r\nexport function obterBancoListPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG[]>) {\r\n  send(getService().post<BancoMCG[]>('/obterBancoListPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function conciliarLancamentosExtrato(listConciliacaoBancaria: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/conciliarLancamentosExtrato', listConciliacaoBancaria), param);\r\n}\r\n\r\nexport function removerConciliarLancamentosExtrato(listaRemover: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerConciliarLancamentosExtrato', listaRemover), param);\r\n}\r\n\r\nexport function removerLancamentosExtratoBancario(listaRemover: BancoExtrato[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerLancamentosExtratoBancario', listaRemover), param);\r\n}\r\nexport function obterLancamentosSaldoPeriodo(\r\n  idGrupoPlanoConta,\r\n  idEmpresa,\r\n  dtInicial,\r\n  dtFinal,\r\n  historico,\r\n  valor,\r\n  operacaoConsultaValor,\r\n  param: AxiosParam<LancamentoConciliacao[]>\r\n) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGrupoPlanoConta', String(idGrupoPlanoConta));\r\n  formDataSend.append('idEmpresa', String(idEmpresa));\r\n  formDataSend.append('dtInicial', String(dtInicial));\r\n  formDataSend.append('dtFinal', String(dtFinal));\r\n  formDataSend.append('historico', String(historico));\r\n  formDataSend.append('valor', String(valor));\r\n  formDataSend.append('operacaoConsultaValor', String(operacaoConsultaValor));\r\n\r\n  send(getService().post<LancamentoConciliacao[]>('/obterLancamentosSaldoPeriodo', formDataSend), param);\r\n}\r\n\r\nexport function conciliarLancamentosConta(listaConciliacao: ConciliacaoConta[], param: AxiosParam<void>) {\r\n  send(getService().post<void>('/conciliarLancamentosConta', listaConciliacao), param);\r\n}\r\n\r\nexport function removerConciliarLancamentosConta(listaConciliarRemover: ConciliacaoConta[], param: AxiosParam<void>) {\r\n  send(getService().post<void>('/removerConciliarLancamentosConta', listaConciliarRemover), param);\r\n}\r\n\r\nexport function eLalurAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLalurAContas/' + id), param);\r\n}\r\n\r\nexport function eLacsAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLacsAContas/' + id), param);\r\n}\r\n\r\nexport function getSaldoDebito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoDebito', parametros), param);\r\n}\r\n\r\nexport function getSaldoCredito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoCredito', parametros), param);\r\n}\r\n\r\nexport function removerLancamentoLote(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/removerLancamentoLote', parametros), param);\r\n}\r\n\r\nexport function atualizaCalculoIrpjCsll(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/atualizaCalculoIrpjCsll', parametros), param);\r\n}\r\n\r\nexport function buscarLancamentosHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  param: AxiosParam<LancamentoIntegracaoHonorarios[]>\r\n) {\r\n  send(getService().post<LancamentoIntegracaoHonorarios[]>('/buscarLancamentosHonorarios', integracaoHonorariosParam), param);\r\n}\r\n\r\nexport function integrarHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  lancamentos: LancamentoIntegracaoHonorarios[],\r\n  param: AxiosParam<number>\r\n) {\r\n  send(\r\n    getService().post<number>('/integrarHonorarios', { integracaoHonorariosParam, lancamentos }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function isAlteraCalculoIRPJorCSLL(parametros: CalculoIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isAlteraCalculoIRPJorCSLL', parametros), param);\r\n}\r\n\r\nexport function alterarPlanoContaNaturezaConfig(idsPlanoConta: number[], enumPlanoContaNaturezaConta: number, param: AxiosParam<void>) {\r\n  send(\r\n    getService().post<void>('/alterarPlanoContaNaturezaConfig', { idsPlanoConta, enumPlanoContaNaturezaConta }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function prepararContaResultado(idGrupoPlanoConta: number, param: AxiosParam<void>) {\r\n  send(getService().get<void>('/prepararContaResultado/' + idGrupoPlanoConta), param);\r\n}\r\n","import React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/planoConta';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\nexport interface PlanoContaInputSearchProps extends InputProps {\r\n  analitica?: boolean;\r\n  sintetica?: boolean;\r\n  idGrupoPlanoConta?: number;\r\n  filtroContaResultado?: SearchExpression[];\r\n}\r\n\r\nconst PlanoContaIS: FC<PlanoContaInputSearchProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const getSearchExpression = (): SearchExpression[] => {\r\n    const expressions: SearchExpression[] = [];\r\n    if (props.analitica) {\r\n      expressions.push({\r\n        alias: 'c',\r\n        conditionalGroup: 'c_',\r\n        fieldName: 'analitica',\r\n        value: true,\r\n      });\r\n    }\r\n    if (props.sintetica) {\r\n      expressions.push({\r\n        alias: 'c',\r\n        conditionalGroup: 'c_',\r\n        fieldName: 'analitica',\r\n        value: false,\r\n      });\r\n    }\r\n\r\n    if (props.filtroContaResultado) {\r\n      props.filtroContaResultado.forEach(filtro => {\r\n        expressions.push(filtro);\r\n      });\r\n    }\r\n\r\n    return [\r\n      {\r\n        conditionalGroup: 'g_',\r\n        expressions,\r\n        fieldName: 'grupoPlanoConta.id',\r\n        value: props.idGrupoPlanoConta || globalReducer.globalParameter.grupoPlanoConta.id,\r\n      },\r\n    ];\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      searchViewProps={{\r\n        ...props.searchViewProps,\r\n        filtroContaResultado: props.filtroContaResultado,\r\n        hideExtraFields: true,\r\n        useDefaultSelectRow: true,\r\n      }}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'conta',\r\n            text: 'Conta',\r\n          },\r\n          {\r\n            dataField: 'analitica',\r\n            text: 'Analítica',\r\n          },\r\n          {\r\n            dataField: 'codigoReduzido',\r\n            text: 'C.R.',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressions: getSearchExpression,\r\n        searchViewId: 'PlanoContaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Plano de Contas'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Plano de Contas'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PlanoContaIS;\r\n","import { Basic } from 'summer';\r\nimport { PlanoContaMCG } from '../mcg/planoContaMCG';\r\nimport { SaldoAnterior } from '../mcg/saldoAnterior';\r\nimport { PlanoContaMCP } from '../mcp/planoContaMCP';\r\nimport { GrupoPlanoConta } from './grupoPlanoConta';\r\n\r\nexport interface PlanoConta extends Basic {\r\n  analitica?: boolean;\r\n  conta?: string;\r\n  codigoReduzido?: number;\r\n  descricao?: string;\r\n  grupoPlanoConta?: GrupoPlanoConta;\r\n  mcgPlanoConta?: PlanoContaMCG;\r\n  mcpPlanoConta?: PlanoContaMCP;\r\n  saldoAnterior?: SaldoAnterior;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.planoconta';\r\n","import { Basic } from 'summer';\r\nimport { Bem } from '../mcp/bem';\r\nimport { GrupoCentroCusto } from './grupoCentroCusto';\r\n\r\nexport interface CentroCusto extends Basic {\r\n  codigo?: string;\r\n  codigoReduzido?: number;\r\n  descricao?: string;\r\n  analitica?: boolean;\r\n  grupoCentroCusto?: GrupoCentroCusto;\r\n  bem?: Bem;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.centrocusto';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/centroCusto';\r\n\r\nconst CentroCustoIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'CentroCustoSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Centro de Custo'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Centro de Custo'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CentroCustoIS;\r\n","import { BasicEnum } from '../models/enumerated/basicEnum';\r\n\r\ninterface EnumWithExtraFields extends BasicEnum {\r\n  extraFields?: any;\r\n}\r\n\r\nconst EnumUtil = {\r\n  contains: (list: EnumWithExtraFields[], search: EnumWithExtraFields | string, extraField: string = null) =>\r\n    EnumUtil.find(list, search, extraField) !== undefined,\r\n  find: (list: EnumWithExtraFields[], search: EnumWithExtraFields | string, extraField: string = null) => {\r\n    let result;\r\n\r\n    if (search) {\r\n      result = list.find(item => (extraField ? item.extraFields[extraField] : item.value) === (typeof search === 'object' ? search.value : search));\r\n    }\r\n\r\n    return result;\r\n  },\r\n};\r\n\r\nexport default EnumUtil;\r\n","import { Basic } from 'summer';\r\nimport { GrupoHistorico } from './grupoHistorico';\r\n\r\nexport interface Historico extends Basic {\r\n  codigo?: number;\r\n  descricao?: string;\r\n  grupoHistorico?: GrupoHistorico;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mcg.model.dto.historico';\r\n","import { Basic } from 'summer';\r\n\r\nexport interface LancamentoMCGConfig extends Basic {\r\n  descricao?: string;\r\n  exibirSaldoContas?: boolean;\r\n  fixarCentroCustoCredito?: boolean;\r\n  fixarCentroCustoDebito?: boolean;\r\n  fixarContaCredito?: boolean;\r\n  fixarContaDebito?: boolean;\r\n  fixarData?: boolean;\r\n  fixarHistoricoPadrao?: boolean;\r\n  fixarHistoricoVariavel?: boolean;\r\n  /** este campo utiliza o enum LancamentoMCGFormaEnum */\r\n  formaLancamento?: number;\r\n  /** este campo utiliza o enum LancamentoConfigHistoricoTypeEnum */\r\n  historico?: number;\r\n  informarLancamentoEncerramento?: boolean;\r\n  /** este campo utiliza o enum TipoBloqueioLancamentoEnum */\r\n  tipoBloqueioLancamento?: number;\r\n  utilizarCentroCusto?: boolean;\r\n  utilizarCentroCustoAtivoPassivo?: boolean;\r\n  utilizarHistoricoPadrao?: boolean;\r\n  utilizarHistoricoVariavel?: boolean;\r\n  utilizarLancPadrao?: boolean;\r\n  /** este campo utiliza o enum lancamentoMCGTipoValidLancPartidaSimples */\r\n  validacaoLancPartidaSimples?: string;\r\n  validarLancReceitaDespesa?: boolean;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mcg.model.dto.lancamentomcgconfig';\r\n","export const LUCRO_REAL = { value: 'lucroReal', label: 'Lucro Real' };\r\nexport const LUCRO_REAL_ARBITRADO = { value: 'lucroRealArbitrado', label: 'Lucro Real/Arbitrado' };\r\nexport const LUCRO_PRESUMIDO_REAL = { value: 'lucroPresumidoReal', label: 'Lucro Presumido/Real' };\r\nexport const LUCRO_PRESUMIDO_REAL_ARBITRADO = { value: 'lucroPresumidoRealArbitrado', label: 'Lucro Presumido/Real/Arbitrado' };\r\nexport const LUCRO_PRESUMIDO = { value: 'lucroPresumido', label: 'Lucro Presumido' };\r\nexport const LUCRO_ARBITRADO = { value: 'lucroArbitrado', label: 'Lucro Arbitrado' };\r\nexport const LUCRO_PRESUMIDO_ARBITRADO = { value: 'lucroPresumidoArbitrado', label: 'Lucro Presumido/Arbitrado' };\r\nexport const IMUNE = { value: 'imune', label: 'Imune do IRPJ' };\r\nexport const ISENTO = { value: 'isento', label: 'Isenta do IRPJ' };\r\nexport const SIMPLES_NACIONAL = { value: 'simplesNacional', label: 'Simples Nacional' };\r\n\r\nexport const TIPO_TRIBUTACAO_ENUM_VALUES = [\r\n  IMUNE,\r\n  ISENTO,\r\n  LUCRO_ARBITRADO,\r\n  LUCRO_PRESUMIDO,\r\n  LUCRO_PRESUMIDO_ARBITRADO,\r\n  LUCRO_PRESUMIDO_REAL,\r\n  LUCRO_PRESUMIDO_REAL_ARBITRADO,\r\n  LUCRO_REAL,\r\n  LUCRO_REAL_ARBITRADO,\r\n  SIMPLES_NACIONAL,\r\n];\r\n\r\nexport const AUTOMATIZACAO_EMPRESA_VALUES = [LUCRO_REAL, LUCRO_PRESUMIDO, ISENTO, IMUNE, SIMPLES_NACIONAL];\r\n\r\nexport const TRIBUTACAO_LUCRO_REAL_ENUM_VALUES = [LUCRO_REAL, LUCRO_REAL_ARBITRADO, LUCRO_PRESUMIDO_REAL_ARBITRADO];\r\n","export const CONTA = { label: 'Número da Conta', value: 1 };\r\nexport const CODIGO_REDUZIDO = { label: 'Código Reduzido', value: 2 };\r\n\r\nexport const PLANO_CONTA_GER_TIPO_LANCAMENTO_CONTA_ENUM_VALUES = [CONTA, CODIGO_REDUZIDO];\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/historico';\r\n\r\nconst HistoricoIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      formProps={{ ...props.formProps }}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'HistoricoSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Histórico'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Histórico'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HistoricoIS;\r\n","import { ACTION_EVENTS, alertManager, AlertType, compare, formatDate, parseLastDay, parseRefToDate } from 'summer';\r\nimport { FORA_MES_ATUAL, FORA_PERIODO_FISCAL, PERIODO_ANTERIOR } from '../models/enumerated/mcg/bloqueioLancamentoValidateStringEnum';\r\nimport { APENAS_PERIODO_FISCAL, APENAS_REF_ATUAL, TODOS } from '../models/enumerated/mcg/tipoBloqueioLancamentoEnum';\r\n\r\nexport const validatePeriodoConfig = (data, globalParameter) => {\r\n  const config = globalParameter.lancamentoMCGConfig;\r\n  const refInicial = formatDate(parseRefToDate(globalParameter.empresaMCG.refAtual, 1));\r\n  const refInicialUltimoDia = formatDate(parseLastDay(globalParameter.empresaMCG.refAtual));\r\n  const refFinal = formatDate(parseLastDay(globalParameter.empresaMCG.refFinal));\r\n\r\n  let result = null;\r\n\r\n  if (config.tipoBloqueioLancamento === APENAS_PERIODO_FISCAL.value && (compare(data, refInicial) < 0 || compare(data, refFinal) > 0)) {\r\n    result = FORA_PERIODO_FISCAL.label;\r\n  } else if (config.tipoBloqueioLancamento === APENAS_REF_ATUAL.value && (compare(data, refInicial) < 0 || compare(data, refInicialUltimoDia) > 0)) {\r\n    result = FORA_MES_ATUAL.label;\r\n  } else if (config.tipoBloqueioLancamento === TODOS.value && compare(data, refInicial) < 0) {\r\n    result = PERIODO_ANTERIOR.label;\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nexport const concatenarHistorico = (list: any[]) => {\r\n  const itens = list.map(\r\n    it => ((it.historico ? it.historico.descricao : it.descricao) || '') + (it.historicoVariavel ? ' ' + it.historicoVariavel : '')\r\n  );\r\n  let result = '';\r\n  if (itens.length > 0) {\r\n    result = itens.length > 1 ? itens.reduce((res, it) => res + ' ' + it) : itens[0];\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const promisedAlertWithCatch = (message, type = AlertType.WARNING_YES_NO) =>\r\n  new Promise((resolve, reject) => {\r\n    alertManager.emit(ACTION_EVENTS.SHOW, {\r\n      message,\r\n      onCancelClick: () => reject(),\r\n      onNoClick: () => reject(),\r\n      onOkClick: () => resolve(),\r\n      type,\r\n    });\r\n  });\r\n\r\nexport const alertInformation = (message, type = AlertType.INFORMATION) => {\r\n  alertManager.emit(ACTION_EVENTS.SHOW, {\r\n    message,\r\n    type,\r\n  });\r\n};\r\n","export const CONTABIL = { label: 'Contábil', value: 'CONTABIL' };\r\nexport const FISCAL = { label: 'Fiscal', value: 'FISCAL' };\r\n\r\nexport const TIPO_APURACAO_ENUM_VALUES = [CONTABIL, FISCAL];\r\n","export const APENAS_REF_ATUAL = { label: 'Apenas Mês Atual', value: 0 };\r\nexport const APENAS_PERIODO_FISCAL = { label: 'Apenas Período Fiscal Atual', value: 1 };\r\nexport const TODOS = { label: 'Todos', value: 2 };\r\n\r\nexport const TIPO_BLOQUEIO_LANCAMENTO_ENUM_VALUES = [APENAS_REF_ATUAL, APENAS_PERIODO_FISCAL, TODOS];\r\n","import { Basic } from 'summer';\r\nimport { GrupoPlanoConta } from '../ger/grupoPlanoConta';\r\nimport { LotePadraoLancamento } from './lotePadraoLancamento';\r\n\r\nexport interface LotePadrao extends Basic {\r\n  codigo?: number;\r\n  descricao?: string;\r\n  grupoPlanoConta?: GrupoPlanoConta;\r\n  lotePadraoLancamento?: LotePadraoLancamento[];\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mcg.model.dto.lotepadrao';\r\n","export const CODIGO = { label: 'Código', value: 1 };\r\nexport const CODIGO_REDUZIDO = { label: 'Código Reduzido', value: 2 };\r\n\r\nexport const CENTRO_CUSTO_GER_TIPO_LANCAMENTO_CENTRO_CUSTO_ENUM_VALUES = [CODIGO, CODIGO_REDUZIDO];\r\n","export const FORA_PERIODO_FISCAL = { value: 'fora_periodo_fiscal', label: 'fora do Período Fiscal.' };\r\nexport const FORA_MES_ATUAL = { value: 'fora_mes_atual', label: 'fora da Referência Atual.' };\r\nexport const PERIODO_ANTERIOR = { value: 'periodo_anterior', label: 'em data anterior à Referência atual.' };\r\n\r\nexport const BLOQUEIO_LANCAMENTO_VALIDATE_STRING_ENUM_VALUES = [FORA_PERIODO_FISCAL, FORA_MES_ATUAL, PERIODO_ANTERIOR];\r\n","export const CONTABILIDADE = { value: 'CONTABILIDADE', label: 'Contabilidade', extraFields: { intValue: 1 } };\r\nexport const FOLHA_DE_PAGAMENTO_FOLHA = { value: 'FOLHA_DE_PAGAMENTO_FOLHA', label: 'Folha Pagamento', extraFields: { intValue: 2 } };\r\nexport const CONTROLE_PATRIMONIAL = { value: 'CONTROLE_PATRIMONIAL', label: 'Controle Patrimonial', extraFields: { intValue: 3 } };\r\nexport const LIVRO_FISCAL = { value: 'LIVRO_FISCAL', label: 'Livro Fiscal', extraFields: { intValue: 4 } };\r\nexport const IMPORTACAO = { value: 'IMPORTACAO', label: 'Importação', extraFields: { intValue: 5 } };\r\nexport const SINF = { value: 'SINF', label: 'SINF', extraFields: { intValue: 6 } };\r\nexport const FOLHA_DE_PAGAMENTO_13_PARCELA_1 = {\r\n  extraFields: { intValue: 7 },\r\n  label: 'Folha Pagamento 13 Parcela 1',\r\n  value: 'FOLHA_DE_PAGAMENTO_13_PARCELA_1',\r\n};\r\nexport const FOLHA_DE_PAGAMENTO_13_PARCELA_2 = {\r\n  extraFields: { intValue: 8 },\r\n  label: 'Folha Pagamento 13 Parcela 2',\r\n  value: 'FOLHA_DE_PAGAMENTO_13_PARCELA_2',\r\n};\r\nexport const FOLHA_DE_PAGAMENTO_ADIANTAMENTO = {\r\n  extraFields: { intValue: 9 },\r\n  label: 'Folha Pagamento Adiantamento',\r\n  value: 'FOLHA_DE_PAGAMENTO_ADIANTAMENTO',\r\n};\r\nexport const FOLHA_DE_PAGAMENTO_FERIAS = { value: 'FOLHA_DE_PAGAMENTO_FERIAS', label: 'Folha Pagamento Ferias', extraFields: { intValue: 10 } };\r\nexport const FOLHA_DE_PAGAMENTO_RESCISAO = { value: 'FOLHA_DE_PAGAMENTO_RESCISAO', label: 'Folha Pagamento Rescisão', extraFields: { intValue: 11 } };\r\nexport const FOLHA_DE_PAGAMENTO_GPS_GERAL = {\r\n  extraFields: { intValue: 12 },\r\n  label: 'Folha Pagamento GPS - Geral',\r\n  value: 'FOLHA_DE_PAGAMENTO_GPS_GERAL',\r\n};\r\nexport const FOLHA_DE_PAGAMENTO_GPS_13_PARCELA_2 = {\r\n  extraFields: { intValue: 13 },\r\n  label: 'Folha Pagamento GPS - 13 Parcela 2',\r\n  value: 'FOLHA_DE_PAGAMENTO_GPS_13_PARCELA_2',\r\n};\r\nexport const FOLHA_DE_PAGAMENTO_GPS_COOPERATIVA = {\r\n  extraFields: { intValue: 14 },\r\n  label: 'Folha Pagamento GPS - Cooperativa',\r\n  value: 'FOLHA_DE_PAGAMENTO_GPS_COOPERATIVA',\r\n};\r\nexport const FOLHA_DE_PAGAMENTO_GPS_PRODUTOR_RURAL = {\r\n  extraFields: { intValue: 15 },\r\n  label: 'Folha Pagamento GPS - Produtor Rural',\r\n  value: 'FOLHA_DE_PAGAMENTO_GPS_PRODUTOR_RURAL',\r\n};\r\nexport const FOLHA_DE_PAGAMENTO_DARF = { value: 'FOLHA_DE_PAGAMENTO_DARF', label: 'Folha Pagamento DARF', extraFields: { intValue: 16 } };\r\nexport const INTEGRACAOREST = { value: 'INTEGRACAO (JSON)', label: 'Integração (JSON)', extraFields: { intValue: 17 } };\r\nexport const CONCILIACAO = { value: 'CONCILIACAO', label: 'Conciliação Bancária', extraFields: { intValue: 18 } };\r\nexport const HONORARIOS = { value: 'HONORARIOS', label: 'Honorários', extraFields: { intValue: 19 } };\r\nexport const FOLHA_DE_PAGAMENTO_RESILICAO = {\r\n  extraFields: { intValue: 20 },\r\n  label: 'Folha Pagamento Resilição',\r\n  value: 'FOLHA_DE_PAGAMENTO_RESILICAO',\r\n};\r\nexport const FOLHA_DE_PAGAMENTO_GPS_TERCEIROS_TRANSPORTADOR = {\r\n  extraFields: { intValue: 21 },\r\n  label: 'Folha Pagamento GPS - Terceiros Transportador',\r\n  value: 'FOLHA_DE_PAGAMENTO_GPS_TERCEIROS_TRANSPORTADOR',\r\n};\r\n\r\nexport const FOLHA_DE_PAGAMENTO_PROVISAO_FERIAS = {\r\n  extraFields: { intValue: 22 },\r\n  label: 'Folha Pagamento - Provisão de Férias',\r\n  value: 'FOLHA_DE_PAGAMENTO_PROVISAO_FERIAS',\r\n};\r\nexport const FOLHA_DE_PAGAMENTO_PROVISAO_13 = {\r\n  extraFields: { intValue: 23 },\r\n  label: 'Folha Pagamento - Pagamento de Provisão de 13º',\r\n  value: 'FOLHA_DE_PAGAMENTO_PROVISAO_13',\r\n};\r\nexport const FOLHA_DE_PAGAMENTO_MULTA_GRRF = {\r\n  extraFields: { intValue: 24 },\r\n  label: 'Folha Pagamento - Pagamento de Multa de GRRF',\r\n  value: 'FOLHA_DE_PAGAMENTO_MULTA_GRRF',\r\n};\r\nexport const FOLHA_DE_PAGAMENTO_CSLL_GRRF = {\r\n  extraFields: { intValue: 25 },\r\n  label: 'Folha Pagamento - CSLL da GRRF ',\r\n  value: 'FOLHA_DE_PAGAMENTO_CSLL_GRRF',\r\n};\r\n\r\nexport const ORIGEM_LANCAMENTO_MCG_ENUM_VALUES = [\r\n  CONTABILIDADE,\r\n  FOLHA_DE_PAGAMENTO_FOLHA,\r\n  CONTROLE_PATRIMONIAL,\r\n  LIVRO_FISCAL,\r\n  IMPORTACAO,\r\n  SINF,\r\n  FOLHA_DE_PAGAMENTO_13_PARCELA_1,\r\n  FOLHA_DE_PAGAMENTO_13_PARCELA_2,\r\n  FOLHA_DE_PAGAMENTO_ADIANTAMENTO,\r\n  FOLHA_DE_PAGAMENTO_FERIAS,\r\n  FOLHA_DE_PAGAMENTO_RESCISAO,\r\n  FOLHA_DE_PAGAMENTO_GPS_GERAL,\r\n  FOLHA_DE_PAGAMENTO_GPS_13_PARCELA_2,\r\n  FOLHA_DE_PAGAMENTO_GPS_COOPERATIVA,\r\n  FOLHA_DE_PAGAMENTO_GPS_PRODUTOR_RURAL,\r\n  FOLHA_DE_PAGAMENTO_DARF,\r\n  INTEGRACAOREST,\r\n  CONCILIACAO,\r\n  HONORARIOS,\r\n  FOLHA_DE_PAGAMENTO_RESILICAO,\r\n  FOLHA_DE_PAGAMENTO_GPS_TERCEIROS_TRANSPORTADOR,\r\n  FOLHA_DE_PAGAMENTO_PROVISAO_FERIAS,\r\n  FOLHA_DE_PAGAMENTO_PROVISAO_13,\r\n  FOLHA_DE_PAGAMENTO_MULTA_GRRF,\r\n  FOLHA_DE_PAGAMENTO_CSLL_GRRF,\r\n];\r\n"],"sourceRoot":""}
{"version":3,"sources":["models/dtos/mcg/lalurAConfig.ts","views/pages/mcg/lalurLacsConfig/LalurLacsConfigEditView.tsx","views/pages/mcg/lalurLacsConfig/LalurLacsConfigProcessView.tsx","dependencies/empresaDependency.ts","dependencies/empresaMCGDependency.ts","services/mcg.service.ts","views/components/mcg/planoContaIS/PlanoContaIS.tsx","models/dtos/ger/planoConta.ts","models/enumerated/mcg/tipoLancamentoEnum.ts"],"names":["__webpack_require__","d","__webpack_exports__","CLASS_NAME","LalurLacsConfigEditView","props","formProps","useForm","defaultValues","Object","objectSpread2","selectedItem","mode","useEffect","setTimeout","getOrigemServidorStr","buscaPlanoConta","getValues","origemServidor","setValue","ano","contasCadastradas","abaAtual","eLalurAContas","id","errorFunction","mensagem","showToast","ERROR","thenFunction","result","reset","planoConta","eLacsAContas","react_default","a","createElement","Modal","isOpen","centered","size","toggle","onClose","ModalHeader","ModalBody","summer_esm","validation","required","isPrependLabel","disabled","label","placeholder","type","InputType","NUMBER","inputDropDownProps","optionsProvider","TIPO_LANCAMENTO_ENUM_VALUES","DROP_DOWN","PlanoContaIS","inputSearchProps","selectProps","isMulti","ModalFooter","handleClose","handleSubmit","btnSubmitIcon","btnCloseLabel","btnSubmitLabel","LalurLacsConfigProcessView","globalReducer","useSelector","state","empresaMCG","globalParameter","formatDate","currentDate","_useState","useState","_useState2","slicedToArray","isLalur","setIsLalur","_useState3","_useState4","selected","setSelected","_useState5","_useState6","tabAtual","setTabAtual","setSelectedItem","item","lalurAColumns","dataField","editable","sort","style","cell","row","color","CALIMA_SUCCESS","text","enumColumn","formatter","Button","onClick","className","index_es","icon","UncontrolledTooltip","target","placement","headerAlign","headerStyle","width","backgroundColor","textAlign","title","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMCG","lalurLacsConfig_LalurLacsConfigEditView","Form","Row","Col","searchCriteria","fetchType","max","sortFieldName","start","expressions","adjustExpressions","fieldName","operation","OperationEnum","EQUAL","value","Number","findAllByExpression","content","goBack","dispatchClose","history","onChange","currentTab","lib_default","keyField","data","columns","responsive","striped","JSON","stringify","empresa","getService","create","gerarLancamentosFolhaPagamento","integracaoFolhaParam","param","send","post","integrarFolhaPagamento","lancamentoIntegracaoFolha","integrarMCP","importarParam","importarLancamentoCSV","formDataSend","FormData","append","String","importarDuplicados","importarLancamentosCardinal","_step","_iterator","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__","arquivos","s","n","done","arquivo","file","nomeArquivo","err","e","f","importarLancamentoPadraoCSV","_step2","_iterator2","importarHistoricoCSV","grupoHistoricoDestino","_step3","_iterator3","importarPlanoContaCSV","idEmpresa","grupoPlanoContaDestino","_step4","_iterator4","importarHistorico","importacaoHistorico","importarPlanoConta","importacaoPlanoContaParam","buscarConfigLivroFolhaMCG","get","integracaoFiscalContabil","encerrarContas","contaResultadoEncerramento","force","getDataUltimaContaEncerrada","idGerEmpresa","limparEncerramentoContaResultado","contaResultadoLimpeza","validarReferenciaSPEDECFIrpjCsll","configECFIrpjCsll","validarReferenciaSPEDECFImuneIsenta","configECFImuneIsenta","validarRefRemuneracaoSocio","configECFRemuneracaoSocio","validarQuadroSocietario","configQuadro","obterLucroPrejuizoClassificacao","idGrupoPlanoConta","getSaldo","saldo","validarDadosSpedECF","ecfExportacaoParam","gerarSpedECF","usuario","getArquivoDigitalService","recuperarLancamentoConta","transferenciaLancamentoConta","transferirLancamentoConta","obterBancoPlanoConta","bancoPlanoContaDTO","validarConfigLivroFolha","changeLivroFolha","fecharRestaurar","fechamentoRestauracao","forceFecharRestaurar","verificarErros","erros","gerarSpedContabil","selecaoSped","arquivoRTFEscrituracaoSubstituida","_step5","_iterator5","atributoSelecaoSped","salvarLucroPrejuizoClassificacao","lucroPrejuizoClassificacao","consultarMovimentacao","saldoCriteria","totalizadorLancamento","consulta","getSaldoAnterior","isDataEncerrada","parametros","abrirContas","removeLancamentoPeriodo","obterContasClassificacaoIndireto","salvarClassificacaoIndireto","contaFluxoCaixaIndireto","obterMutacaoPatrimonioLiquido","salvarMutacaoPatrimonioLiquido","mutacaoPatrimonioLiquido","salvarContaResultado","contaResultado","excluirContaResultado","obterContasClassificacaoDireto","salvarClassificacaoDireto","contaFluxoCaixa","findSubGrupo","planoContaSubGrupoParam","removerTodosPlanosConta","removeList","listaPlanoConta","apagarFilha","listSubGrupo","referenciarContas","idsPlanoConta","idPlanoContaReferencial","idPlanoContaReferencialECF","desvincularContas","existeLancamentoEmContaAnalitica","idPlanoConta","importarLancamentoMCG","tipoImportacao","sobescrever","versaoSuperiorA2","isEmpty","dtInicial","dtFinal","importarSpedContabil","_step6","_iterator6","gerarManadContabil","refInicial","refFinal","arquivoSFP","evolucaoContaContabilGraf","evolucaoContaContabilGrafParam","composicaoReceitaDespesasGraf","compReceitaDespesasGrafParam","gerarFCONTContabil","fContContabilCrit","obterDadosArquivoExtrato","arquivoSelecionado","idBancoMCG","obterDadosConciliacaoBancariaPeriodo","obterBancoListPlanoConta","conciliarLancamentosExtrato","listConciliacaoBancaria","removerConciliarLancamentosExtrato","listaRemover","removerLancamentosExtratoBancario","getSaldoDebito","getSaldoCredito","removerLancamentoLote","atualizaCalculoIrpjCsll","buscarLancamentosHonorarios","integracaoHonorariosParam","integrarHonorarios","lancamentos","isAlteraCalculoIRPJorCSLL","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_3__","assign","searchViewProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","filtroContaResultado","hideExtraFields","useDefaultSelectRow","dtoClassName","searchExpressions","analitica","alias","conditionalGroup","sintetica","push","grupoPlanoConta","forEach","filtro","searchViewId","INPUT_SEARCH"],"mappings":"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","file":"static/js/146.95ae4393.chunk.js","sourcesContent":["import { LalurLacsConfig } from './lalurLacsConfig';\r\n\r\nexport interface LalurAConfig extends LalurLacsConfig {}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mcg.model.dto.laluraconfig';\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\r\nimport { ERROR, InputGroupInline, InputType, ProcessBar, showToast } from 'summer';\r\nimport { PlanoConta } from '../../../../models/dtos/ger/planoConta';\r\nimport { TIPO_LANCAMENTO_ENUM_VALUES } from '../../../../models/enumerated/mcg/tipoLancamentoEnum';\r\nimport { eLacsAContas, eLalurAContas } from '../../../../services/mcg.service';\r\nimport PlanoContaIS from '../../../components/mcg/planoContaIS/PlanoContaIS';\r\n\r\ninterface LalurLacsConfigEditViewPorps {\r\n  onClose?: () => void;\r\n  selectedItem?: any;\r\n  abaAtual?: string;\r\n}\r\n\r\nconst LalurLacsConfigEditView: FC<LalurLacsConfigEditViewPorps> = props => {\r\n  const formProps = useForm<any>({ defaultValues: { ...props.selectedItem }, mode: 'onBlur' });\r\n\r\n  useEffect(\r\n    () => {\r\n      setTimeout(() => {\r\n        getOrigemServidorStr();\r\n        buscaPlanoConta();\r\n      }, 500);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const getOrigemServidorStr = () => {\r\n    if (formProps.getValues().origemServidor) {\r\n      formProps.setValue('origemDosDados', 'Padrão da tabela ECF do ano de ' + formProps.getValues().ano, true);\r\n    } else {\r\n      formProps.setValue('origemDosDados', 'Migração de dados do ano ' + (formProps.getValues().ano - 1), true);\r\n    }\r\n  };\r\n\r\n  const buscaPlanoConta = () => {\r\n    if (props.selectedItem.contasCadastradas) {\r\n      if (props.abaAtual === 'lalur') {\r\n        eLalurAContas(props.selectedItem.id, {\r\n          errorFunction: mensagem => {\r\n            showToast(mensagem, ERROR);\r\n          },\r\n          thenFunction: (result: PlanoConta[]) => {\r\n            formProps.reset({\r\n              ...formProps.getValues(),\r\n              planoConta: result,\r\n            });\r\n          },\r\n        });\r\n      } else {\r\n        eLacsAContas(props.selectedItem.id, {\r\n          errorFunction: mensagem => {\r\n            showToast(mensagem, ERROR);\r\n          },\r\n          thenFunction: (result: PlanoConta[]) => {\r\n            formProps.setValue('planoConta', result, true);\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onConfirm = () => {\r\n    showToast('Ajustar', ERROR);\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={true} centered={true} size=\"lg\" toggle={props.onClose}>\r\n      <ModalHeader toggle={props.onClose}>Manutenção de Livro de Apuração parte A</ModalHeader>\r\n      <ModalBody>\r\n        <InputGroupInline\r\n          formProps={{ ...formProps, validation: { required: true } }}\r\n          id=\"codigo\"\r\n          isPrependLabel={true}\r\n          disabled={true}\r\n          label=\"Código\"\r\n          placeholder=\"Informe o código.\"\r\n        />\r\n        <InputGroupInline\r\n          formProps={{ ...formProps, validation: { required: true } }}\r\n          id=\"descricao\"\r\n          isPrependLabel={true}\r\n          disabled={true}\r\n          label=\"Descrição\"\r\n          placeholder=\"Informe o descrição.\"\r\n        />\r\n        <InputGroupInline\r\n          formProps={{ ...formProps, validation: { required: true } }}\r\n          id=\"ano\"\r\n          isPrependLabel={true}\r\n          disabled={true}\r\n          label=\"Ano\"\r\n          placeholder=\"Informe o ano.\"\r\n          type={InputType.NUMBER}\r\n        />\r\n        <InputGroupInline\r\n          formProps={formProps}\r\n          id=\"origemDosDados\"\r\n          isPrependLabel={true}\r\n          disabled={true}\r\n          label=\"Origem dos dados\"\r\n          placeholder=\"Informe a origem dos dados.\"\r\n        />\r\n        <InputGroupInline\r\n          formProps={{ ...formProps, validation: { required: true } }}\r\n          id=\"tipoLancamento\"\r\n          isPrependLabel={true}\r\n          disabled={true}\r\n          label=\"Tipo de Lançamento\"\r\n          placeholder=\"Informe o Tipo de Lançamento\"\r\n          inputDropDownProps={{\r\n            optionsProvider: TIPO_LANCAMENTO_ENUM_VALUES,\r\n          }}\r\n          type={InputType.DROP_DOWN}\r\n        />\r\n        <PlanoContaIS id=\"planoConta\" formProps={formProps} inputSearchProps={{ selectProps: { isMulti: true } }} />\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <ProcessBar handleClose={props.onClose} handleSubmit={onConfirm} btnSubmitIcon=\"check\" btnCloseLabel=\"Cancel\" btnSubmitLabel=\"Confirmar\" />\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default LalurLacsConfigEditView;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Button, Col, Form, Row, UncontrolledTooltip } from 'reactstrap';\r\nimport {\r\n  adjustExpressions,\r\n  CALIMA_SUCCESS,\r\n  ColumnsProps,\r\n  currentDate,\r\n  dispatchClose,\r\n  EditViewProps,\r\n  enumColumn,\r\n  ERROR,\r\n  findAllByExpression,\r\n  formatDate,\r\n  InputGroupInline,\r\n  OperationEnum,\r\n  SearchCriteria,\r\n  SearchExpression,\r\n  showToast,\r\n  Tab,\r\n  TabGroup,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../dependencies/empresaMCGDependency';\r\nimport { EmpresaMCG } from '../../../../models/dtos/mcg/empresaMCG';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mcg/lalurAConfig';\r\nimport { LalurLacsConfig } from '../../../../models/dtos/mcg/lalurLacsConfig';\r\nimport { TIPO_LANCAMENTO_ENUM_VALUES } from '../../../../models/enumerated/mcg/tipoLancamentoEnum';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport LalurLacsConfigEditView from './LalurLacsConfigEditView';\r\n\r\ninterface LalurLacsConfigProcessView extends EditViewProps<LalurLacsConfig> {}\r\n\r\nconst LalurLacsConfigProcessView: FC<LalurLacsConfigProcessView & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const empresaMCG: EmpresaMCG = globalReducer.globalParameter.empresaMCG;\r\n  const formProps = useForm<any>({\r\n    defaultValues: {\r\n      ano: formatDate(currentDate(), 'YYYY'),\r\n    },\r\n    mode: 'onBlur',\r\n  });\r\n  const [isLalur, setIsLalur] = useState(null);\r\n  const [selected, setSelected] = useState(null);\r\n  const [tabAtual, setTabAtual] = useState('lalur');\r\n\r\n  useEffect(\r\n    () => {\r\n      setTimeout(() => {\r\n        formProps.setValue('empresaMCG.id', empresaMCG.id, true);\r\n      }, 500);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const onTabChange = currentTab => {\r\n    setTabAtual(currentTab);\r\n  };\r\n\r\n  const setSelectedItem = item => {\r\n    return () => {\r\n      setSelected(item);\r\n    };\r\n  };\r\n\r\n  function getSearchExpression(): SearchExpression[] {\r\n    return [\r\n      {\r\n        expressions: [\r\n          {\r\n            fieldName: 'ano',\r\n            operation: OperationEnum.EQUAL,\r\n            value: Number(formProps.getValues().ano),\r\n          },\r\n        ],\r\n        fieldName: 'empresaMCG.id',\r\n        value: empresaMCG.id,\r\n      },\r\n    ];\r\n  }\r\n\r\n  const lalurAColumns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'codigo',\r\n      editable: false,\r\n      sort: true,\r\n      style: (cell, row) => {\r\n        return row.contasCadastradas ? { color: CALIMA_SUCCESS } : { color: 'black' };\r\n      },\r\n      text: 'Código',\r\n    },\r\n    {\r\n      dataField: 'descricao',\r\n      editable: false,\r\n      sort: true,\r\n      style: (cell, row) => {\r\n        return row.contasCadastradas ? { color: CALIMA_SUCCESS } : { color: 'black' };\r\n      },\r\n      text: 'Descrição',\r\n    },\r\n    enumColumn(\r\n      {\r\n        dataField: 'tipoLancamento',\r\n        editable: false,\r\n        sort: true,\r\n        style: (cell, row) => {\r\n          return row.contasCadastradas ? { color: CALIMA_SUCCESS } : { color: 'black' };\r\n        },\r\n        text: 'Tipo',\r\n      },\r\n      TIPO_LANCAMENTO_ENUM_VALUES\r\n    ),\r\n    {\r\n      dataField: 'actions',\r\n      formatter: (cell, row) => {\r\n        return (\r\n          <Button\r\n            id={'buttonEdit' + row.id}\r\n            color=\"neutral-secondary\"\r\n            onClick={setSelectedItem(row)}\r\n            className=\"btn-pill d-30 p-0 align-top btn-animated-icon btn-animated-icon--secondary\"\r\n          >\r\n            <span className=\"btn-wrapper--icon\">\r\n              <FontAwesomeIcon color={'black'} icon={'pen'} />\r\n            </span>\r\n            <UncontrolledTooltip target={'buttonEdit' + row.id} placement=\"top\">\r\n              Editar\r\n            </UncontrolledTooltip>\r\n          </Button>\r\n        );\r\n      },\r\n      headerAlign: () => {\r\n        return 'center';\r\n      },\r\n      headerStyle: () => {\r\n        return { width: '7%' };\r\n      },\r\n      style: (cell, row) => {\r\n        return { backgroundColor: row.color, color: 'white', textAlign: 'center' };\r\n      },\r\n      text: 'Ações',\r\n    },\r\n  ];\r\n\r\n  const consultar = () => {\r\n    const searchCriteria: SearchCriteria = {\r\n      className: CLASS_NAME,\r\n      fetchType: 'ALL',\r\n      max: 900,\r\n      sortFieldName: 'ano',\r\n      start: 0,\r\n    };\r\n\r\n    searchCriteria.expressions = adjustExpressions(getSearchExpression());\r\n\r\n    findAllByExpression(searchCriteria, {\r\n      errorFunction: mensagem => {\r\n        showToast(mensagem, ERROR);\r\n      },\r\n      thenFunction: result => {\r\n        setIsLalur(result.content);\r\n      },\r\n    });\r\n  };\r\n\r\n  const onClose = (goBack: boolean = true) => {\r\n    dispatchClose(props, props.history, goBack);\r\n  };\r\n\r\n  const handleCancel = () => onClose();\r\n\r\n  const modalOnClose = () => {\r\n    setSelected(null);\r\n  };\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Lalur A\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMCG(globalReducer.globalParameter)]}\r\n    >\r\n      {selected && <LalurLacsConfigEditView selectedItem={selected} abaAtual={tabAtual} onClose={modalOnClose} />}\r\n      <Form>\r\n        <InputGroupInline\r\n          formProps={{ ...formProps, validation: { required: true } }}\r\n          id=\"ano\"\r\n          isPrependLabel={true}\r\n          label=\"Ano\"\r\n          placeholder=\"Informe o ano.\"\r\n        />\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <Button className=\"ml-0\" color=\"primary\" onClick={consultar}>\r\n              <FontAwesomeIcon icon=\"sync\" /> Consultar\r\n            </Button>\r\n          </Col>\r\n          <Col>\r\n            <Button className=\"float-right\" onClick={formProps.handleSubmit(handleCancel)} color=\"danger\">\r\n              <FontAwesomeIcon icon=\"check-circle\" /> Fechar\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <TabGroup formProps={formProps} onChange={onTabChange}>\r\n          <Tab title=\"e-Lalur A\" id=\"lalur\">\r\n            <BootstrapTable keyField=\"id\" data={isLalur || []} columns={lalurAColumns} responsive={true} striped={true} />\r\n            <pre>{JSON.stringify(formProps.getValues(), null, 2)}</pre>\r\n          </Tab>\r\n          <Tab title=\"e-Lacs B\" id=\"lacs\" />\r\n        </TabGroup>\r\n      </Form>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default LalurLacsConfigProcessView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMCG(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMCG) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o módulo Contábil. Para configurá-la acesse:\\n' +\r\n      'Módulo Contábil > Manutenção > Configurações > Empresa.';\r\n  }\r\n  return result;\r\n}\r\n","import { AxiosInstance } from 'axios';\r\nimport { ArquivoSelecionado, AxiosParam, create, isEmpty, send } from 'summer';\r\nimport { PlanoConta } from '../models/dtos/ger/planoConta';\r\nimport { PlanoContaSubGrupoParam } from '../models/dtos/ger/planoContaSubGrupoParam';\r\nimport { RuleMessage } from '../models/dtos/ger/ruleMessage';\r\nimport { Usuario } from '../models/dtos/ger/usuario';\r\nimport { BancoExtrato } from '../models/dtos/mcg/bancoExtrato';\r\nimport { BancoMCG } from '../models/dtos/mcg/bancoMCG';\r\nimport { BancoPlanoConta } from '../models/dtos/mcg/bancoPlanoConta';\r\nimport { CalculoIrpjCsll } from '../models/dtos/mcg/calculoIrpjCsll';\r\nimport { ComposicaoReceitaDespesasGrafParam } from '../models/dtos/mcg/composicaoReceitaDespesasGrafParam';\r\nimport { ComposicaoReceitaDespesasGrafReturn } from '../models/dtos/mcg/composicaoReceitaDespesasGrafReturn';\r\nimport { ConciliacaoBancaria } from '../models/dtos/mcg/conciliacaoBancaria';\r\nimport { ConfigECFImuneIsenta } from '../models/dtos/mcg/configECFImuneIsenta';\r\nimport { ConfigECFIrpjCsll } from '../models/dtos/mcg/configECFIrpjCsll';\r\nimport { ConfigECFRemuneracaoSocio } from '../models/dtos/mcg/configECFRemuneracaoSocio';\r\nimport { ConsultaTotalLancamento } from '../models/dtos/mcg/consultaTotalLancamento';\r\nimport { ContaFluxoCaixa } from '../models/dtos/mcg/contaFluxoCaixa';\r\nimport { ContaFluxoCaixaIndireto } from '../models/dtos/mcg/contaFluxoCaixaIndireto';\r\nimport { ContaResultado } from '../models/dtos/mcg/contaResultado';\r\nimport { ContaResultadoLimpeza } from '../models/dtos/mcg/contaResultadoLimpeza';\r\nimport { ContaResultadoMCGEncerramento } from '../models/dtos/mcg/contaResultadoMCGEncerramento';\r\nimport { DataEncerradaParam } from '../models/dtos/mcg/dataEncerradaParam';\r\nimport { ECFExportacaoParam } from '../models/dtos/mcg/ecfExportacaoParam';\r\nimport { Erros } from '../models/dtos/mcg/erros';\r\nimport { EvolucaoContaContabilGrafParam } from '../models/dtos/mcg/evolucaoContaContabilGrafParam';\r\nimport { EvolucaoContaContabilGrafReturn } from '../models/dtos/mcg/evolucaoContaContabilGrafReturn';\r\nimport { FCONTContabilCrit } from '../models/dtos/mcg/fContContabilCrit';\r\nimport { FechamentoRestauracaoMCG } from '../models/dtos/mcg/fechamentoRestauracaoMCG';\r\nimport { ImportacaoFiscalContabil, ImportacaoFiscalContabilResult } from '../models/dtos/mcg/importacaoFiscalContabil';\r\nimport { ImportacaoHistorico } from '../models/dtos/mcg/importacaoHistorico';\r\nimport { ImportacaoHistoricoCSVParam } from '../models/dtos/mcg/importacaoHistoricoCSVParam';\r\nimport { ImportacaoLancamentoCSVParam } from '../models/dtos/mcg/importacaoLancamentoCSVParam';\r\nimport { ImportacaoLancamentoMCGRetornoValidacao } from '../models/dtos/mcg/importacaoLancamentoMCGRetornoValidacao';\r\nimport { ImportacaoLancamentoMCGSelecao } from '../models/dtos/mcg/importacaoLancamentoMCGSelecao';\r\nimport { ImportacaoLancamentoPadraoCSVParam } from '../models/dtos/mcg/importacaoLancamentoPadraoCSVParam';\r\nimport { ImportacaoPlanoConta } from '../models/dtos/mcg/importacaoPlanoConta';\r\nimport { ImportacaoPlanoContaCSVParam } from '../models/dtos/mcg/importacaoPlanoContaCSVParam';\r\nimport { ImportacaoSpedContabil } from '../models/dtos/mcg/importacaoSpedContabil';\r\nimport { ImportacaoResult, ImportarMCP } from '../models/dtos/mcg/importarMCP';\r\nimport { InfoConciliacaoBancaria } from '../models/dtos/mcg/infoConciliacaoBancaria';\r\nimport { IntegracaoFolhaParam } from '../models/dtos/mcg/integracaoFolhaParam';\r\nimport { IntegracaoHonorariosParam } from '../models/dtos/mcg/integracaoHonorariosParam';\r\nimport { Lancamento } from '../models/dtos/mcg/lancamento';\r\nimport { LancamentoIntegracaoFolha } from '../models/dtos/mcg/lancamentoIntegracaoFolha';\r\nimport { LancamentoIntegracaoHonorarios } from '../models/dtos/mcg/lancamentoIntegracaoHonorarios';\r\nimport { LancamentoSaldo } from '../models/dtos/mcg/lancamentoSaldo';\r\nimport { LivroFolha } from '../models/dtos/mcg/livroFolha';\r\nimport { LucroPrejuizoClassificacao } from '../models/dtos/mcg/lucroPrejuizoClassificacao';\r\nimport { MANADContabilCrit } from '../models/dtos/mcg/manadContabilCrit';\r\nimport { MutacaoPatrimonioLiquido } from '../models/dtos/mcg/mutacaoPatrimonioLiquido';\r\nimport { QuadroSocietario } from '../models/dtos/mcg/quadroSocietario';\r\nimport { RemoveLancamentoLote } from '../models/dtos/mcg/removeLancamentoLote';\r\nimport { RemoveLancamentoPeriodo } from '../models/dtos/mcg/removeLancamentoPeriodo';\r\nimport { Saldo } from '../models/dtos/mcg/saldo';\r\nimport { SaldoCriteria } from '../models/dtos/mcg/saldoCriteria';\r\nimport { SelecaoSpedContabil } from '../models/dtos/mcg/selecaoSpedContabil';\r\nimport { SomaSaldo } from '../models/dtos/mcg/somaSaldo';\r\nimport { TotalizadorLancamento } from '../models/dtos/mcg/totalizadorLancamento';\r\nimport { TransferenciaLancamentoConta } from '../models/dtos/mcg/transferenciaLancamentoConta';\r\nimport { VerificarErros } from '../models/dtos/mcg/verificarErros';\r\nimport { getArquivoDigitalService } from './ger.service';\r\n\r\nfunction getService(): AxiosInstance {\r\n  return create('/mcg');\r\n}\r\n\r\nexport function gerarLancamentosFolhaPagamento(integracaoFolhaParam: IntegracaoFolhaParam, param: AxiosParam<LancamentoIntegracaoFolha[]>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/gerarLancamentosFolhaPagamento', integracaoFolhaParam), param);\r\n}\r\n\r\nexport function integrarFolhaPagamento(lancamentoIntegracaoFolha: LancamentoIntegracaoFolha[], param: AxiosParam<any>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/integrarFolhaPagamento', lancamentoIntegracaoFolha), param);\r\n}\r\n\r\nexport function integrarMCP(importarParam: ImportarMCP, param: AxiosParam<ImportacaoResult>) {\r\n  send(getService().post<ImportacaoResult>('/importar', importarParam), param);\r\n}\r\n\r\nexport function importarLancamentoCSV(data: ImportacaoLancamentoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('importarDuplicados', String(data.importarDuplicados));\r\n  formDataSend.append('importarLancamentosCardinal', String(data.importarLancamentosCardinal));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarLancamentoPadraoCSV(data: ImportacaoLancamentoPadraoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoPadraoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistoricoCSV(data: ImportacaoHistoricoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('grupoHistoricoDestino.id', String(data.grupoHistoricoDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarHistoricoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarPlanoContaCSV(data: ImportacaoPlanoContaCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idEmpresa', String(data.idEmpresa));\r\n  formDataSend.append('grupoPlanoContaDestino.id', String(data.grupoPlanoContaDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarPlanoContaCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistorico(importacaoHistorico: ImportacaoHistorico, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarHistorico', importacaoHistorico), param);\r\n}\r\n\r\nexport function importarPlanoConta(importacaoPlanoContaParam: ImportacaoPlanoConta, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarPlanoConta', importacaoPlanoContaParam), param);\r\n}\r\n\r\nexport function buscarConfigLivroFolhaMCG(idEmpresa: number, param: AxiosParam<LivroFolha>) {\r\n  send(getService().get<LivroFolha>('/buscarConfigLivroFolhaMCG/' + idEmpresa), param);\r\n}\r\n\r\nexport function integracaoFiscalContabil(importarParam: ImportacaoFiscalContabil, param: AxiosParam<ImportacaoFiscalContabilResult>) {\r\n  send(getService().post<ImportacaoFiscalContabilResult>('/integracaoFiscalContabil', importarParam), param);\r\n}\r\n\r\nexport function encerrarContas(\r\n  contaResultadoEncerramento: ContaResultadoMCGEncerramento,\r\n  force: boolean,\r\n  param: AxiosParam<ContaResultadoMCGEncerramento>\r\n) {\r\n  send(\r\n    getService().post<ContaResultadoMCGEncerramento>('/encerrarContas', { contaResultadoEncerramento, force }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function getDataUltimaContaEncerrada(idGerEmpresa: number, param: AxiosParam<Date>) {\r\n  send(getService().get<Date>('/getDataUltimaContaEncerrada/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function limparEncerramentoContaResultado(contaResultadoLimpeza: ContaResultadoLimpeza, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/limparEncerramentoContaResultadoApos', contaResultadoLimpeza), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFIrpjCsll(configECFIrpjCsll: ConfigECFIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFIrpjCsll', configECFIrpjCsll), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFImuneIsenta(configECFImuneIsenta: ConfigECFImuneIsenta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFImuneIsenta', configECFImuneIsenta), param);\r\n}\r\n\r\nexport function validarRefRemuneracaoSocio(configECFRemuneracaoSocio: ConfigECFRemuneracaoSocio, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarRefRemuneracaoSocio', configECFRemuneracaoSocio), param);\r\n}\r\n\r\nexport function validarQuadroSocietario(configQuadro: QuadroSocietario, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/validarQuadroSocietario', configQuadro), param);\r\n}\r\n\r\nexport function obterLucroPrejuizoClassificacao(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterLucroPrejuizoClassificacao/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function getSaldo(saldo: Saldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldo', saldo), param);\r\n}\r\n\r\nexport function validarDadosSpedECF(ecfExportacaoParam: ECFExportacaoParam, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/validarDadosSpedECF', ecfExportacaoParam), param);\r\n}\r\n\r\nexport function gerarSpedECF(usuario: Usuario, ecfExportacaoParam: ECFExportacaoParam, param?: AxiosParam<string>) {\r\n  send(\r\n    getArquivoDigitalService().post<string>('/gerarSpedECF', { usuario, ecfExportacaoParam }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function recuperarLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<Lancamento[]>) {\r\n  send(getService().post<Lancamento[]>('/recuperarLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function transferirLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/transferirLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function obterBancoPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG>) {\r\n  send(getService().post<BancoMCG>('/obterBancoPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function validarConfigLivroFolha(idGerEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(getService().get<boolean>('/validarConfigLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function changeLivroFolha(idGerEmpresa: number, param: AxiosParam<void>) {\r\n  send(getService().get<void>('/changeLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function fecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<RuleMessage>) {\r\n  send(getService().post<RuleMessage>('/fecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function forceFecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/forceFecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function verificarErros(erros: VerificarErros, param: AxiosParam<Erros[]>) {\r\n  send(getService().post<Erros[]>('/verificarErros', erros), param);\r\n}\r\n\r\nexport function gerarSpedContabil(selecaoSped: SelecaoSpedContabil, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('usuario.id', String(selecaoSped.usuario.id));\r\n\r\n  if (selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n    for (const arquivo of selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n      formDataSend.append('arquivoRTFEscrituracaoSubstituida', arquivo.file, arquivo.nomeArquivo);\r\n    }\r\n  }\r\n\r\n  for (const atributoSelecaoSped in selecaoSped) {\r\n    if (\r\n      atributoSelecaoSped !== 'arquivoRTFEscrituracaoSubstituida' &&\r\n      atributoSelecaoSped !== 'usuario' &&\r\n      selecaoSped[atributoSelecaoSped] !== null\r\n    ) {\r\n      formDataSend.append(atributoSelecaoSped, selecaoSped[atributoSelecaoSped]);\r\n    }\r\n  }\r\n  send(getService().post<string>('/gerarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function salvarLucroPrejuizoClassificacao(\r\n  lucroPrejuizoClassificacao: LucroPrejuizoClassificacao,\r\n  param: AxiosParam<LucroPrejuizoClassificacao>\r\n) {\r\n  send(getService().post<LucroPrejuizoClassificacao>('/salvarLucroPrejuizoClassificacao', lucroPrejuizoClassificacao), param);\r\n}\r\n\r\nexport function consultarMovimentacao(saldoCriteria: SaldoCriteria, param: AxiosParam<LancamentoSaldo[]>) {\r\n  send(getService().post<LancamentoSaldo[]>('/consultarMovimentacao', saldoCriteria), param);\r\n}\r\n\r\nexport function totalizadorLancamento(consulta: ConsultaTotalLancamento, param: AxiosParam<TotalizadorLancamento>) {\r\n  send(getService().post<TotalizadorLancamento>('/totalizadorLancamento', consulta), param);\r\n}\r\n\r\nexport function getSaldoAnterior(saldoCriteria: SaldoCriteria, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoAnterior', saldoCriteria), param);\r\n}\r\n\r\nexport function isDataEncerrada(parametros: DataEncerradaParam, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isDataEncerrada', parametros), param);\r\n}\r\n\r\nexport function abrirContas(parametros: DataEncerradaParam, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/abrirContas', parametros), param);\r\n}\r\n\r\nexport function removeLancamentoPeriodo(parametros: RemoveLancamentoPeriodo, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removeLancamentoPeriodo', parametros), param);\r\n}\r\n\r\nexport function obterContasClassificacaoIndireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixaIndireto[]>) {\r\n  send(getService().get<ContaFluxoCaixaIndireto[]>('/obterContasClassificacaoIndireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoIndireto(contaFluxoCaixaIndireto: ContaFluxoCaixaIndireto, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoIndireto', contaFluxoCaixaIndireto), param);\r\n}\r\n\r\nexport function obterMutacaoPatrimonioLiquido(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterMutacaoPatrimonioLiquido/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarMutacaoPatrimonioLiquido(mutacaoPatrimonioLiquido: MutacaoPatrimonioLiquido, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarMutacaoPatrimonioLiquido', mutacaoPatrimonioLiquido), param);\r\n}\r\n\r\nexport function salvarContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function excluirContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/excluirContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function obterContasClassificacaoDireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixa[]>) {\r\n  send(getService().get<ContaFluxoCaixa[]>('/obterContasClassificacaoDireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoDireto(contaFluxoCaixa: ContaFluxoCaixa, param?: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoDireto', contaFluxoCaixa), param);\r\n}\r\n\r\nexport function findSubGrupo(planoContaSubGrupoParam: PlanoContaSubGrupoParam, param: AxiosParam<any>) {\r\n  send(getService().post<any>('/findSubGrupo', planoContaSubGrupoParam), param);\r\n}\r\n\r\nexport function removerTodosPlanosConta(idGrupoPlanoConta: number, usuario: Usuario, param: AxiosParam<void>) {\r\n  send(\r\n    getService().post<void>('/removerTodosPlanosConta', { idGrupoPlanoConta, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function removeList(listaPlanoConta: PlanoConta[], apagarFilha: boolean, usuario: Usuario, param: AxiosParam<any>) {\r\n  send(\r\n    getService().post<any>('/removeList', { listaPlanoConta, apagarFilha, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function listSubGrupo(planoConta: PlanoConta, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().post<PlanoConta[]>('/listSubGrupo', planoConta), param);\r\n}\r\n\r\nexport function referenciarContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<void>\r\n) {\r\n  send(\r\n    getService().post<void>('/referenciarContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function desvincularContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<any>\r\n) {\r\n  send(\r\n    getService().post<void>('/desvincularContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function existeLancamentoEmContaAnalitica(idPlanoConta: number, idEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(\r\n    getService().post<boolean>('/existeLancamentoEmContaAnalitica', { idPlanoConta, idEmpresa }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function importarLancamentoMCG(data: ImportacaoLancamentoMCGSelecao, param: AxiosParam<ImportacaoLancamentoMCGRetornoValidacao>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('tipoImportacao', String(data.tipoImportacao));\r\n  formDataSend.append('sobescrever', String(data.sobescrever));\r\n  formDataSend.append('versaoSuperiorA2', String(data.versaoSuperiorA2));\r\n  formDataSend.append('arquivo', data.arquivo[0].file, data.arquivo[0].nomeArquivo);\r\n\r\n  if (data.versaoSuperiorA2 === false && !isEmpty(data.dtInicial) && !isEmpty(data.dtFinal)) {\r\n    formDataSend.append('dtInicial', data.dtInicial);\r\n    formDataSend.append('dtFinal', data.dtFinal);\r\n  }\r\n\r\n  send(getService().post<ImportacaoLancamentoMCGRetornoValidacao>('/importarLancamentoMCG', formDataSend), param);\r\n}\r\n\r\nexport function importarSpedContabil(data: ImportacaoSpedContabil, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function gerarManadContabil(data: MANADContabilCrit, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('refInicial', data.refInicial);\r\n  formDataSend.append('refFinal', data.refFinal);\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  if (!isEmpty(data.arquivoSFP)) {\r\n    formDataSend.append('arquivoSFP', data.arquivoSFP[0].file, data.arquivoSFP[0].nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<string>('/gerarManadContabil', formDataSend), param);\r\n}\r\n\r\nexport function evolucaoContaContabilGraf(\r\n  evolucaoContaContabilGrafParam: EvolucaoContaContabilGrafParam,\r\n  param: AxiosParam<EvolucaoContaContabilGrafReturn>\r\n) {\r\n  send(getService().post<EvolucaoContaContabilGrafReturn>('/evolucaoContaContabilGraf', evolucaoContaContabilGrafParam), param);\r\n}\r\n\r\nexport function composicaoReceitaDespesasGraf(\r\n  compReceitaDespesasGrafParam: ComposicaoReceitaDespesasGrafParam,\r\n  param: AxiosParam<ComposicaoReceitaDespesasGrafReturn>\r\n) {\r\n  send(getService().post<ComposicaoReceitaDespesasGrafReturn>('/composicaoReceitaDespesasGraf', compReceitaDespesasGrafParam), param);\r\n}\r\n\r\nexport function gerarFCONTContabil(fContContabilCrit: FCONTContabilCrit, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/gerarFCONTContabil', fContContabilCrit), param);\r\n}\r\n\r\nexport function obterDadosArquivoExtrato(arquivoSelecionado: ArquivoSelecionado, idBancoMCG, param: AxiosParam<BancoExtrato[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idBancoMCG', idBancoMCG);\r\n\r\n  formDataSend.append('arquivoSelecionado', arquivoSelecionado[0].file, arquivoSelecionado[0].nomeArquivo);\r\n\r\n  send(getService().post<BancoExtrato[]>('/obterDadosArquivoExtrato', formDataSend), param);\r\n}\r\n\r\nexport function obterDadosConciliacaoBancariaPeriodo(\r\n  idGrupoPlanoConta,\r\n  idEmpresa,\r\n  idBancoMCG,\r\n  dtInicial,\r\n  dtFinal,\r\n  param: AxiosParam<InfoConciliacaoBancaria>\r\n) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGrupoPlanoConta', String(idGrupoPlanoConta));\r\n  formDataSend.append('idEmpresa', String(idEmpresa));\r\n  formDataSend.append('idBancoMCG', String(idBancoMCG));\r\n  formDataSend.append('dtInicial', String(dtInicial));\r\n  formDataSend.append('dtFinal', String(dtFinal));\r\n\r\n  send(getService().post<InfoConciliacaoBancaria>('/obterDadosConciliacaoBancariaPeriodo', formDataSend), param);\r\n}\r\n\r\nexport function obterBancoListPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG[]>) {\r\n  send(getService().post<BancoMCG[]>('/obterBancoListPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function conciliarLancamentosExtrato(listConciliacaoBancaria: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/conciliarLancamentosExtrato', listConciliacaoBancaria), param);\r\n}\r\n\r\nexport function removerConciliarLancamentosExtrato(listaRemover: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerConciliarLancamentosExtrato', listaRemover), param);\r\n}\r\n\r\nexport function removerLancamentosExtratoBancario(listaRemover: BancoExtrato[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerLancamentosExtratoBancario', listaRemover), param);\r\n}\r\n\r\nexport function eLalurAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLalurAContas/' + id), param);\r\n}\r\n\r\nexport function eLacsAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLacsAContas/' + id), param);\r\n}\r\n\r\nexport function getSaldoDebito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoDebito', parametros), param);\r\n}\r\n\r\nexport function getSaldoCredito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoCredito', parametros), param);\r\n}\r\n\r\nexport function removerLancamentoLote(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/removerLancamentoLote', parametros), param);\r\n}\r\n\r\nexport function atualizaCalculoIrpjCsll(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/atualizaCalculoIrpjCsll', parametros), param);\r\n}\r\n\r\nexport function buscarLancamentosHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  param: AxiosParam<LancamentoIntegracaoHonorarios[]>\r\n) {\r\n  send(getService().post<LancamentoIntegracaoHonorarios[]>('/buscarLancamentosHonorarios', integracaoHonorariosParam), param);\r\n}\r\n\r\nexport function integrarHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  lancamentos: LancamentoIntegracaoHonorarios[],\r\n  param: AxiosParam<number>\r\n) {\r\n  send(\r\n    getService().post<number>('/integrarHonorarios', { integracaoHonorariosParam, lancamentos }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function isAlteraCalculoIRPJorCSLL(parametros: CalculoIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isAlteraCalculoIRPJorCSLL', parametros), param);\r\n}\r\n","import React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/planoConta';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\nexport interface PlanoContaInputSearchProps extends InputProps {\r\n  analitica?: boolean;\r\n  sintetica?: boolean;\r\n  idGrupoPlanoConta?: number;\r\n  filtroContaResultado?: SearchExpression[];\r\n}\r\n\r\nconst PlanoContaIS: FC<PlanoContaInputSearchProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  function getSearchExpression(): SearchExpression[] {\r\n    let expressions = [];\r\n    if (props.analitica) {\r\n      expressions = [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'analitica',\r\n          value: true,\r\n        },\r\n      ];\r\n    }\r\n    if (props.sintetica) {\r\n      expressions = [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'analitica',\r\n          value: false,\r\n        },\r\n      ];\r\n    }\r\n\r\n    expressions.push({\r\n      alias: 'g',\r\n      conditionalGroup: 'g_',\r\n      fieldName: 'grupoPlanoConta.id',\r\n      value: props.idGrupoPlanoConta || globalReducer.globalParameter.grupoPlanoConta.id,\r\n    });\r\n\r\n    if (props.filtroContaResultado) {\r\n      props.filtroContaResultado.forEach(filtro => {\r\n        expressions.push(filtro);\r\n      });\r\n    }\r\n\r\n    return expressions;\r\n  }\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      searchViewProps={{\r\n        ...props.searchViewProps,\r\n        filtroContaResultado: props.filtroContaResultado,\r\n        hideExtraFields: true,\r\n        useDefaultSelectRow: true,\r\n      }}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'conta',\r\n            text: 'Conta',\r\n          },\r\n          {\r\n            dataField: 'analitica',\r\n            text: 'Analítica',\r\n          },\r\n          {\r\n            dataField: 'codigoReduzido',\r\n            text: 'C.R.',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressions: getSearchExpression,\r\n        searchViewId: 'PlanoContaSearchView',\r\n      }} // TODO Implementar as regras do IS\r\n      label={props.label ? props.label : 'Plano de Contas'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Plano de Contas'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PlanoContaIS;\r\n","import { Basic } from 'summer';\r\nimport { PlanoContaMCG } from '../mcg/planoContaMCG';\r\nimport { SaldoAnterior } from '../mcg/saldoAnterior';\r\nimport { PlanoContaMCP } from '../mcp/planoContaMCP';\r\nimport { GrupoPlanoConta } from './grupoPlanoConta';\r\n\r\nexport interface PlanoConta extends Basic {\r\n  analitica?: boolean;\r\n  conta?: string;\r\n  codigoReduzido?: number;\r\n  descricao?: string;\r\n  grupoPlanoConta?: GrupoPlanoConta;\r\n  mcgPlanoConta?: PlanoContaMCG;\r\n  mcpPlanoConta?: PlanoContaMCP;\r\n  saldoAnterior?: SaldoAnterior;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.planoconta';\r\n","export const ADICAO = { label: 'Adição', value: 'ADICAO' };\r\nexport const EXCLUSAO = { label: 'Exclusão', value: 'EXCLUSAO' };\r\nexport const COMPENSACAO = { label: 'Compensação de Prejuizo', value: 'COMPENSACAO' };\r\nexport const LUCRO = { label: 'Lucro', value: 'LUCRO' };\r\nexport const ROTULO = { label: 'Rótulo', value: 'ROTULO' };\r\n\r\nexport const TIPO_LANCAMENTO_ENUM_VALUES = [ADICAO, EXCLUSAO, COMPENSACAO, LUCRO, ROTULO];\r\n"],"sourceRoot":""}
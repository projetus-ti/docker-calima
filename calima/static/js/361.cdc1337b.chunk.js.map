{"version":3,"sources":["models/dtos/mcg/planoContaAnaliseFinanceira.ts","views/pages/mcg/analiseFinanceira/AnaliseFinanceiraConfigView.tsx","dependencies/grupoEmpresaConfigDependency.ts","views/components/mcg/planoContaIS/PlanoContaIS.tsx","models/dtos/ger/planoConta.ts"],"names":["CLASS_NAME","AnaliseFinanceiraConfigView","props","globalParameter","useSelector","state","globalReducer","_useForm","useForm","mode","reset","formProps","Object","objectWithoutProperties","useEffect","planoContaAnaliseFinanceiraExample","empresa","id","findByExample","thenFunction","result","planoContaAtivoNaoCirculante","planoContaAtivoTotal","planoContaAtvCirculante","planoContaDisponivel","planoContaEstq","planoContaPassivoCirculante","planoContaPassivoNaoCirculante","planoContaPatrimonioLiquido","planoContaRLP","react_default","a","createElement","summer_esm","title","useGlobalParameter","dependencies","hasGrupoEmpresaConfig","wikiId","editViewProps","dtoClassName","hideCancelButton","hidden","PlanoContaIS","labelWidth","objectSpread2","validation","required","label","grupoEmpresaRaiz","grupoEmpresaConfig","grupoEmpresa","__webpack_require__","d","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_3__","assign","isPrependLabel","searchViewProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","filtroContaResultado","hideExtraFields","useDefaultSelectRow","inputSearchProps","columns","dataField","text","searchExpressions","expressions","analitica","push","alias","conditionalGroup","fieldName","value","sintetica","forEach","filtro","idGrupoPlanoConta","grupoPlanoConta","searchViewId","placeholder","type","InputType","INPUT_SEARCH"],"mappings":"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","file":"static/js/361.cdc1337b.chunk.js","sourcesContent":["import { Basic } from 'summer';\r\nimport { Empresa } from '../ger/empresa';\r\nimport { PlanoConta } from '../ger/planoConta';\r\n\r\nexport interface PlanoContaAnaliseFinanceira extends Basic {\r\n  empresa?: Empresa;\r\n  planoContaAtivoTotal?: PlanoConta;\r\n  planoContaAtvCirculante?: PlanoConta;\r\n  planoContaAtivoNaoCirculante?: PlanoConta;\r\n  planoContaPassivoCirculante?: PlanoConta;\r\n  planoContaPassivoNaoCirculante?: PlanoConta;\r\n  planoContaEstq?: PlanoConta;\r\n  planoContaRLP?: PlanoConta;\r\n  planoContaPatrimonioLiquido?: PlanoConta;\r\n  planoContaDisponivel?: PlanoConta;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mcg.model.dto.planocontaanalisefinanceira';\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { EditForm, EditViewProps, findByExample, InputGroupInline, WindowComponent } from 'summer';\r\nimport { hasGrupoEmpresaConfig } from '../../../../dependencies/grupoEmpresaConfigDependency';\r\nimport { CLASS_NAME, PlanoContaAnaliseFinanceira } from '../../../../models/dtos/mcg/planoContaAnaliseFinanceira';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport PlanoContaIS from '../../../components/mcg/planoContaIS/PlanoContaIS';\r\n\r\ninterface AnaliseFinanceiraConfigViewProps extends EditViewProps<PlanoContaAnaliseFinanceira> {}\r\n\r\nconst AnaliseFinanceiraConfigView: FC<AnaliseFinanceiraConfigViewProps & RouteComponentProps> = props => {\r\n  const { globalParameter } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const { reset, ...formProps } = useForm<PlanoContaAnaliseFinanceira>({ mode: 'onBlur' });\r\n  const labelWidth = 230;\r\n\r\n  useEffect(\r\n    () => {\r\n      const planoContaAnaliseFinanceiraExample: PlanoContaAnaliseFinanceira = { empresa: { id: globalParameter.empresa.id } };\r\n\r\n      findByExample(planoContaAnaliseFinanceiraExample, CLASS_NAME, {\r\n        thenFunction: (result: PlanoContaAnaliseFinanceira) => {\r\n          reset({\r\n            empresa: { id: globalParameter.empresa.id },\r\n            id: result.id,\r\n            planoContaAtivoNaoCirculante: result.planoContaAtivoNaoCirculante,\r\n            planoContaAtivoTotal: result.planoContaAtivoTotal,\r\n            planoContaAtvCirculante: result.planoContaAtvCirculante,\r\n            planoContaDisponivel: result.planoContaDisponivel,\r\n            planoContaEstq: result.planoContaEstq,\r\n            planoContaPassivoCirculante: result.planoContaPassivoCirculante,\r\n            planoContaPassivoNaoCirculante: result.planoContaPassivoNaoCirculante,\r\n            planoContaPatrimonioLiquido: result.planoContaPatrimonioLiquido,\r\n            planoContaRLP: result.planoContaRLP,\r\n          });\r\n        },\r\n      });\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Classificação de Análise Financeira - Plano Contas\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalParameter}\r\n      dependencies={[() => hasGrupoEmpresaConfig(globalParameter)]}\r\n      wikiId={1049}\r\n    >\r\n      <EditForm formProps={formProps} editViewProps={props} dtoClassName={CLASS_NAME} hideCancelButton={true}>\r\n        <InputGroupInline id=\"empresa.id\" formProps={formProps} hidden={true} />\r\n        <PlanoContaIS\r\n          labelWidth={labelWidth}\r\n          id=\"planoContaAtivoTotal\"\r\n          formProps={{ ...formProps, validation: { required: true } }}\r\n          label=\"Ativo Total\"\r\n        />\r\n        <PlanoContaIS\r\n          labelWidth={labelWidth}\r\n          id=\"planoContaAtvCirculante\"\r\n          formProps={{ ...formProps, validation: { required: true } }}\r\n          label=\"Ativo Circulante\"\r\n        />\r\n        <PlanoContaIS\r\n          labelWidth={labelWidth}\r\n          id=\"planoContaAtivoNaoCirculante\"\r\n          formProps={{ ...formProps, validation: { required: true } }}\r\n          label=\"Ativo NÃO Circulante\"\r\n        />\r\n        <PlanoContaIS\r\n          labelWidth={labelWidth}\r\n          id=\"planoContaPassivoCirculante\"\r\n          formProps={{ ...formProps, validation: { required: true } }}\r\n          label=\"Passivo Circulante\"\r\n        />\r\n        <PlanoContaIS\r\n          labelWidth={labelWidth}\r\n          id=\"planoContaPassivoNaoCirculante\"\r\n          formProps={{ ...formProps, validation: { required: true } }}\r\n          label=\"Passivo NÃO Circulante\"\r\n        />\r\n        <PlanoContaIS labelWidth={labelWidth} id=\"planoContaEstq\" formProps={{ ...formProps, validation: { required: true } }} label=\"Estoques\" />\r\n        <PlanoContaIS\r\n          labelWidth={labelWidth}\r\n          id=\"planoContaRLP\"\r\n          formProps={{ ...formProps, validation: { required: true } }}\r\n          label=\"Realizável a Longo Prazo\"\r\n        />\r\n        <PlanoContaIS\r\n          labelWidth={labelWidth}\r\n          id=\"planoContaPatrimonioLiquido\"\r\n          formProps={{ ...formProps, validation: { required: true } }}\r\n          label=\"Patrimônio Líquido\"\r\n        />\r\n        <PlanoContaIS\r\n          labelWidth={labelWidth}\r\n          id=\"planoContaDisponivel\"\r\n          formProps={{ ...formProps, validation: { required: true } }}\r\n          label=\"Disponível\"\r\n        />\r\n      </EditForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default AnaliseFinanceiraConfigView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasGrupoEmpresaConfig(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n\r\n  const msg: string =\r\n    'O Grupo de empresas não está configurado para a empresa selecionada. Para configurar acesse:\\n' +\r\n    'Modulo Principal > Manutenção > Configurações > Grupo de Empresa';\r\n\r\n  if (\r\n    !globalParameter.empresa ||\r\n    !globalParameter.empresa.grupoEmpresaRaiz.grupoEmpresaConfig ||\r\n    !globalParameter.empresa.grupoEmpresa.grupoEmpresaConfig\r\n  ) {\r\n    result = msg;\r\n  }\r\n\r\n  return result;\r\n}\r\n","import React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/planoConta';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\nexport interface PlanoContaInputSearchProps extends InputProps {\r\n  analitica?: boolean;\r\n  sintetica?: boolean;\r\n  idGrupoPlanoConta?: number;\r\n  filtroContaResultado?: SearchExpression[];\r\n}\r\n\r\nconst PlanoContaIS: FC<PlanoContaInputSearchProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const getSearchExpression = (): SearchExpression[] => {\r\n    const expressions: SearchExpression[] = [];\r\n    if (props.analitica) {\r\n      expressions.push({\r\n        alias: 'c',\r\n        conditionalGroup: 'c_',\r\n        fieldName: 'analitica',\r\n        value: true,\r\n      });\r\n    }\r\n    if (props.sintetica) {\r\n      expressions.push({\r\n        alias: 'c',\r\n        conditionalGroup: 'c_',\r\n        fieldName: 'analitica',\r\n        value: false,\r\n      });\r\n    }\r\n\r\n    if (props.filtroContaResultado) {\r\n      props.filtroContaResultado.forEach(filtro => {\r\n        expressions.push(filtro);\r\n      });\r\n    }\r\n\r\n    return [\r\n      {\r\n        conditionalGroup: 'g_',\r\n        expressions,\r\n        fieldName: 'grupoPlanoConta.id',\r\n        value: props.idGrupoPlanoConta || globalReducer.globalParameter.grupoPlanoConta.id,\r\n      },\r\n    ];\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      searchViewProps={{\r\n        ...props.searchViewProps,\r\n        filtroContaResultado: props.filtroContaResultado,\r\n        hideExtraFields: true,\r\n        useDefaultSelectRow: true,\r\n      }}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'conta',\r\n            text: 'Conta',\r\n          },\r\n          {\r\n            dataField: 'analitica',\r\n            text: 'Analítica',\r\n          },\r\n          {\r\n            dataField: 'codigoReduzido',\r\n            text: 'C.R.',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressions: getSearchExpression,\r\n        searchViewId: 'PlanoContaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Plano de Contas'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Plano de Contas'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PlanoContaIS;\r\n","import { Basic } from 'summer';\r\nimport { PlanoContaMCG } from '../mcg/planoContaMCG';\r\nimport { SaldoAnterior } from '../mcg/saldoAnterior';\r\nimport { PlanoContaMCP } from '../mcp/planoContaMCP';\r\nimport { GrupoPlanoConta } from './grupoPlanoConta';\r\n\r\nexport interface PlanoConta extends Basic {\r\n  analitica?: boolean;\r\n  conta?: string;\r\n  codigoReduzido?: number;\r\n  descricao?: string;\r\n  grupoPlanoConta?: GrupoPlanoConta;\r\n  mcgPlanoConta?: PlanoContaMCG;\r\n  mcpPlanoConta?: PlanoContaMCP;\r\n  saldoAnterior?: SaldoAnterior;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.planoconta';\r\n"],"sourceRoot":""}
{"version":3,"sources":["views/pages/mlf/report/faturamentoBrutoModelo3/faturamentoBrutoModelo3RelRV.ts","views/pages/mlf/report/faturamentoBrutoModelo3/FaturamentoBrutoModelo3ReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","dependencies/empresaMLFDependency.ts","models/enumerated/mlf/faturamentoBrutoTipoEnum.ts"],"names":["DEFAULT_VALUES","Object","objectSpread2","getDefaultReportBasicValues","gerarCabecalhoPadraoAdministradora","tipo","NORMAL","value","DEFAULT_OPTIONS","getDefaultReportViewOptions","REFERENCES","exibirConfiguracaoDadosEmpresa","FaturamentoBrutoModelo3ReportView","props","globalReducer","useSelector","state","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","objectWithoutProperties","react_default","a","createElement","summer_esm","title","useGlobalParameter","globalParameter","dependencies","hasEmpresa","hasEmpresaMLF","wikiId","ReportForm","assign","localStorageKey","routeProps","reportBasicValues","reportViewOptions","id","label","isPrependLabel","placeholder","validation","required","inputDropDownProps","optionsProvider","FATURAMENTO_BRUTO_TIPO_ENUM_VALUES","selectProps","isClearable","type","InputType","DROP_DOWN","result","empresa","__webpack_require__","d","__webpack_exports__","NATUREZA","SALDO_REPORT_ENUM","EmpresaIS","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","inputSearchProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","empresasSelecionadas","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","virtualization","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","errors","getValues","register","setValue","triggerValidation","handleCancel","validateExtras","currentItem","currentValues","parentObject","EnvioEmail","Fragment","sort","detailView","keyField","propName","Row","className","Col","CustomInput","name","innerRef","maxLength","TEXT_AREA","ReportInputs","_useState","useState","_useState2","slicedToArray","activeTab","setActiveTab","useEffect","_props$reportViewOpti","printingTypes","resetObject","length","idGerEmpresa","current","currentMomentDate","endDate","DATE","dtInicial","formatDate","toDate","DATES","dtFinal","endOf","REFERENCE","referenciaInicial","format","REF_PATTERN","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dtInicialRequired","dateComponent","datesComponent","dtFinalRequired","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","NUMBER","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","inputProps","disabled","gerarPorEmpresas","style","marginBottom","size","isMulti","segmentacaoFolhaComponent","exibirSegmentacaoFolha","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","exibirImprimirValoresColoridos","firstOpen","extraConfigOpened","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","hidden","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","erros","params","message","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history","empresaMLF"],"mappings":"qNAWO,MCIDA,EAA4CC,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAC7CE,YDH+B,oDCEc,IAEhDC,oCAAoC,EACpCC,KAAMC,IAAOC,QAGTC,EAAkCP,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACnCQ,YDV+B,+BCUWC,IAAWH,QADlB,IAEtCI,gCAAgC,IAyCnBC,UAtC2EC,KACxF,MAAMC,EAAgBC,YAAmCC,GAASA,EAAMF,eADyBG,EAE1DC,YAAsC,CAAEC,cAAenB,EAAgBoB,KAAM,WAA5GC,EAFyFJ,EAEzFI,aAAiBC,EAFwErB,OAAAsB,EAAA,EAAAtB,CAAAgB,EAAA,kBAIjG,OACEO,EAAAC,EAAAC,cAACC,EAAA,GAAD,CACEC,MAAM,gDACNC,oBAAoB,EACpBC,gBAAiBhB,EAAcgB,gBAC/BC,aAAc,CAAC,IAAMC,YAAWlB,EAAcgB,iBAAkB,IAAMG,YAAcnB,EAAcgB,kBAClGI,OAAQ,MAERV,EAAAC,EAAAC,cAACS,EAAA,EAADlC,OAAAmC,OAAA,GACMvB,EADN,CAEEQ,aAAcA,EACdC,UAAWA,EACXe,gBD/ByB,+BCgCzBC,WAAYzB,EACZ0B,kBAAmBvC,EACnBwC,kBAAmBhC,IAEnBgB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEc,GAAG,OACHC,MAAM,uBACNC,gBAAgB,EAChBC,YAAY,iCACZtB,UAASrB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAOqB,GAAP,IAAkBuB,WAAY,CAAEC,UAAU,KACnDC,mBAAoB,CAClBC,gBAAiBC,IACjBC,YAAa,CAAEC,aAAa,IAE9BC,KAAMC,IAAUC,kDCvDnB,SAAStB,EAAWF,GACzB,IAAIyB,EAAS,KAIb,OAHKzB,EAAgB0B,UACnBD,EAAS,kDAEJA,EALTE,EAAAC,EAAAC,EAAA,sBAAA3B,sCCFAyB,EAAAC,EAAAC,EAAA,sBAAAC,IAAO,MAEMA,EAAW,CAAElB,MAAO,6BAA8BnC,MAAO,YAEhEsD,EAAoB,CAJJ,CAAEnB,MAAO,4CAA6CnC,MAAO,UAC1D,CAAEmC,MAAO,qDAAmDnC,MAAO,aAG9CqD,GAE/BC,mFCyDAC,IAvDgCjD,IAE3CkD,EAAAtC,EAAAC,cAACsC,EAAA,EAAD/D,OAAAmC,OAAA,GACMvB,EADN,CAEE8B,gBAAgB,EAChBsB,iBAAgBhE,OAAAiE,EAAA,EAAAjE,QAAAiE,EAAA,EAAAjE,CAAA,GACXY,EAAMoD,kBADK,IAEdE,QAAS,CACP,CACEC,UAAW,SACXC,KAAM,aAER,CACED,UAAW,cACXC,KAAM,mBAER,CACED,UAAW,eACXC,KAAM,iBAER,CACED,UAAW,OACXC,KAAM,QAER,CACED,UAAW,MACXC,KAAM,OAER,CACED,UAAW,MACXC,KAAM,OAER,CACED,UAAW,KACXC,KAAM,MAER,CACED,UAAW,KACXC,KAAM,MAER,CACED,UAAW,QACXC,KAAM,UAGVC,aAAczD,EAAMyD,cAAgBC,IACpCC,aAAc,sBAEhB9B,MAAO7B,EAAM6B,MAAQ7B,EAAM6B,MAAQ,UACnCE,YAAa/B,EAAM+B,YAAc/B,EAAM+B,YAAc,oBACrDQ,KAAMC,IAAUoB,mDC1DtBhB,EAAAC,EAAAC,EAAA,sBAAAxD,IAAA,IAAAuE,EAAAjB,EAAA,GAAAkB,EAAAlB,EAAA,KAyDO,SAAStD,EAA4ByB,EAAgB,KAAMgD,EAA6B,KAAMC,EAA4B,MAC/H,MAAO,CACLC,WAAYC,IAAQxE,MACpByE,qBAAsB,GACtBC,WAAY,CACVC,OAAQ,GACRC,QAASvD,EACTwD,cAAe,IAEjBC,uBAAuB,EACvBC,UAAU,EACVC,sBAAsB,EACtBnF,oCAAoC,EACpCwE,qBACAC,oBACAW,uBAAuB,EACvBC,kBAAkB,EAClBC,0BAA0B,EAC1BC,mBAAoB,GACpBC,gBAAiBhC,IAASrD,MAC1BsF,aAAa,EACbC,kBAAkB,EAClBC,wBAAwB,EACxBC,UAAW,IACXpE,QACAqE,gBAAgB,sCCpEb,SAASxF,EAA4ByF,EAAyBC,EAAyB,MAC5F,MAAO,CACLC,SAAU,MACVC,aAAc,aACdC,eAAgB,eAChB3F,gCAAgC,EAChC4F,6BAA6B,EAC7BC,sCAAsC,EACtCC,sBAAsB,EACtBC,qBAAqB,EACrBC,cAAe,sBACfC,gBAAiB,wBACjBV,kBACAC,kBAbJ1C,EAAAC,EAAAC,EAAA,sBAAAlD,mNCTA,MAAMoG,EAA+B,CACnCC,QAAS,GACTC,MAAO,IAoDMC,MAjD+EnG,IAAS,MAAAI,EAChCC,YAA2B,CAC9FC,cAAeN,EAAMoG,cAAgBJ,EACrCzF,KAAM,WAGFE,EAAY,CAChB4F,OAPmGjG,EAC7FiG,OAONC,UARmGlG,EACrFkG,UAQdC,SATmGnG,EAC1EmG,SASzBC,SAVmGpG,EAChEoG,SAUnCC,kBAXmGrG,EACtDqG,mBAiB/C,OACE9F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAgBN,aAAcR,EAAMQ,aAAckG,aAAc1G,EAAM0G,aAAcjG,UAAWA,EAAWkG,eALrF,CAACC,EAAkBC,EAAsBC,IACvD,IAKLnG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEc,GAAG,UACHE,gBAAgB,EAChBrB,UAASrB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACJqB,GADI,IAEPuB,WAAY,CACVC,UAAU,KAGdJ,MAAM,UACNE,YAAY,8BAGdpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEc,GAAG,QACHE,gBAAgB,EAChBrB,UAASrB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACJqB,GADI,IAEPuB,WAAY,CACVC,UAAU,KAGdJ,MAAM,SACNE,YAAY,kCCsCLgF,MA/EyB/G,IActC,OACEW,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoG,SAAA,KACErG,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEc,GAAG,qBACHC,MAAM,UACNC,gBAAgB,EAChBC,YAAY,UACZtB,UAASrB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACJY,EAAMS,WADF,IAEPuB,WAAY,CACVC,UAAU,OAKhBtB,EAAAC,EAAAC,cAACC,EAAA,EAAD1B,OAAAmC,OAAA,CACE+B,QA9B0B,CAC9B,CACEC,UAAW,UACX0D,MAAM,EACNzD,KAAM,WAER,CACED,UAAW,QACX0D,MAAM,EACNzD,KAAM,WAsBJzC,MAAM,yBACNmG,WAAYf,EACZgB,SAAS,QACT1G,UAAWT,EAAMS,UACjB2G,SAAS,4BACLpH,IAGNW,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAKC,UAAU,QACb3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,KACE5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CACEjF,KAAK,SACLX,GAAG,4BACH6F,KAAK,uCACL5F,MAAM,iBACN6F,SAAU1H,EAAMS,UAAU8F,YAG9B5F,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,KACE5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CACEjF,KAAK,SACLX,GAAG,2BACH6F,KAAK,sCACL5F,MAAM,oBACN6F,SAAU1H,EAAMS,UAAU8F,aAKhC5F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEc,GAAG,sBACHC,MAAM,WACNC,gBAAgB,EAChBC,YAAY,WACZtB,UAASrB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACJY,EAAMS,WADF,IAEPuB,WAAY,CACV2F,UAAW,OAGfpF,KAAMC,IAAUoF,uBC6WTC,MAzZuB7H,IACpC,MAAMC,EAAgBC,YAAmCC,GAASA,EAAMF,eAD3B6H,EAEXC,mBAAS,GAFEC,EAAA5I,OAAA6I,EAAA,EAAA7I,CAAA0I,EAAA,GAEtCI,EAFsCF,EAAA,GAE3BG,EAF2BH,EAAA,GAI7CI,oBACE,KAAM,MAAAC,EACsCrI,EAAM2B,kBAAxC2G,EADJD,EACIC,cAAehD,EADnB+C,EACmB/C,eACvB,IAAIiD,EAAgBnJ,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACfY,EAAM0B,mBADS,IAElBuC,WAAYqE,GAAiBA,EAAcE,OAAS,EAAIF,EAAc,GAAKpE,IAAQxE,MACnF+I,aAAcxI,EAAcgB,gBAAgB0B,QAAQf,GACpDuD,UAAW,IAEb,MAAMuD,EAAUC,eACVC,EAAUD,eAChB,OAAQrD,GACN,KAAKuD,IAAKnJ,MACR6I,EAAWnJ,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACNmJ,GADM,IAETO,UAAWC,aAAWL,EAAQM,YAEhC,MACF,KAAKC,IAAMvJ,MACT6I,EAAWnJ,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACNmJ,GADM,IAETW,QAASH,aAAWH,EAAQO,MAAM,SAASH,UAC3CF,UAAWC,aAAWL,EAAQM,YAEhC,MACF,KAAKI,IAAU1J,MACb6I,EAAWnJ,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACNmJ,GADM,IAETc,kBAAmBC,aAAOZ,EAAQM,SAAUO,OAE9C,MACF,KAAK1J,IAAWH,MACd6I,EAAWnJ,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACNmJ,GADM,IAETiB,gBAAiBF,aAAOZ,EAAQM,SAAUO,KAC1CF,kBAAmBC,aAAOV,EAAQI,SAAUO,OAE9C,MACF,KAAKE,IAAI/J,MACP6I,EAAWnJ,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACNmJ,GADM,IAETmB,IAAKC,OAAOjB,EAAQkB,UAM1B5J,EAAMS,UAAUoJ,MAAMtB,IAExB,CAACvI,EAAM2B,kBAAmB1B,EAAcgB,gBAAgB0B,UAG1D,MAAMmH,EAAY,EAAGC,aAAyB,MACpCC,EAAaD,EAAbC,SACJ9B,IAAc8B,GAChB7B,EAAa6B,IAQXC,EACJtJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEc,GAAG,YACHC,MAAO7B,EAAM2B,kBAAkB8D,eAC/B3D,gBAAgB,EAChBrB,UAASrB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAOY,EAAMS,WAAb,IAAwBuB,WAAY,CAAEC,SAAUjC,EAAM2B,kBAAkBuI,qBACjF3H,KAAMC,IAAUqG,OAIdsB,EAAgBnK,EAAM2B,kBAAkB2D,iBAAmBuD,IAAKnJ,MAAQuK,EAAc,KAEtFG,EACJpK,EAAM2B,kBAAkB2D,iBAAmB2D,IAAMvJ,MAC/CiB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoG,SAAA,KACGiD,EAEDtJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEc,GAAG,UACHC,MAAO7B,EAAM2B,kBAAkB6D,aAC/B1D,gBAAgB,EAChBrB,UAASrB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAOY,EAAMS,WAAb,IAAwBuB,WAAY,CAAEC,SAAUjC,EAAM2B,kBAAkB0I,mBACjF9H,KAAMC,IAAUqG,QAGlB,KAEAyB,EACJ3J,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEc,GAAG,oBACHC,MAAO7B,EAAM2B,kBAAkBoE,gBAC/BjE,gBAAgB,EAChBrB,UAASrB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAOY,EAAMS,WAAb,IAAwBuB,WAAY,CAAEC,SAAUjC,EAAM2B,kBAAkB4I,sBACjFhI,KAAMC,IAAU4G,YAIdoB,EAAqBxK,EAAM2B,kBAAkB2D,iBAAmB8D,IAAU1J,MAAQ4K,EAAmB,KAErGG,EACJzK,EAAM2B,kBAAkB2D,iBAAmBzF,IAAWH,MACpDiB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoG,SAAA,KACGsD,EAED3J,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEc,GAAG,kBACHC,MAAO7B,EAAM2B,kBAAkBmE,cAC/BhE,gBAAgB,EAChBrB,UAASrB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAOY,EAAMS,WAAb,IAAwBuB,WAAY,CAAEC,SAAUjC,EAAM2B,kBAAkB+I,oBACjFnI,KAAMC,IAAU4G,aAGlB,KAEAuB,EACJ3K,EAAM2B,kBAAkB2D,iBAAmBmE,IAAI/J,MAC7CiB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEc,GAAG,MACHC,MAAO7B,EAAM2B,kBAAkB4D,SAC/BzD,gBAAgB,EAChBrB,UAASrB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAOY,EAAMS,WAAb,IAAwBuB,WAAY,CAAEC,SAAUjC,EAAM2B,kBAAkBiJ,eACjFC,iBAAkB,CAAEC,KAAM,QAC1BvI,KAAMC,IAAUuI,OAEhB,KAEAC,EAAqBhL,EAAM2B,kBAAkBkE,oBACjDlF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEc,GAAG,YACHC,MAAM,oBACNC,gBAAgB,EAChBC,YAAY,oBACZtB,UAASrB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACJY,EAAMS,WADF,IAEPuB,WAAY,CACViJ,IAAK,EACLhJ,UAAU,KAGdM,KAAMC,IAAU0I,SAEhB,KAEEC,EAA6BnL,EAAM2B,kBAAkByJ,oCACzDzK,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoG,SAAA,KACErG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAKC,UAAU,sBACb3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAK8D,GAAI,GACP1K,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAajF,KAAK,SAASX,GAAG,mBAAmB6F,KAAK,mBAAmB5F,MAAM,qBAAqB6F,SAAU1H,EAAMS,UAAU8F,YAEhI5F,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,KACE5G,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CACExC,UAAWT,EAAMS,UACjBoB,MAAM,aACNE,YAAY,sCACZH,GAAG,uBACHE,gBAAgB,EAChBwJ,WAAY,CAAEC,SAAUvL,EAAMS,UAAU6F,YAAYkF,iBAAkBC,MAAO,CAAEC,aAAc,KAC7FtI,iBAAkB,CAAEuI,KAAM,KAAMtJ,YAAa,CAAEuJ,SAAS,SAK9D,KAEEC,EAA4B7L,EAAM2B,kBAAkBmK,uBACxDnL,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAKC,UAAU,QACb3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,KACE5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CACEjF,KAAK,SACLX,GAAG,mBACH6F,KAAK,mBACL5F,MAAM,8CACN6F,SAAU1H,EAAMS,UAAU8F,aAI9B,KAEEwF,EAAqB/L,EAAM2B,kBAAkB+D,4BACjD/E,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAKC,UAAU,QACb3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,KACE5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAajF,KAAK,SAASX,GAAG,kBAAkB6F,KAAK,kBAAkB5F,MAAM,wBAAwB6F,SAAU1H,EAAMS,UAAU8F,aAGjI,KAEEyF,EAAmBhM,EAAM2B,kBAAkBgE,qCAC/ChF,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAKC,UAAU,QACb3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,KACE5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CACEjF,KAAK,SACLX,GAAG,yBACH6F,KAAK,yBACL5F,MAAM,iCACN6F,SAAU1H,EAAMS,UAAU8F,aAI9B,KAEE0F,EAAwBjM,EAAM2B,kBAAkB7B,+BACpDa,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoG,SAAA,KACErG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAKC,UAAU,QACb3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,KACE5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CACEjF,KAAK,SACLX,GAAG,mBACH6F,KAAK,mBACL5F,MAAM,+BACN6F,SAAU1H,EAAMS,UAAU8F,aAKhC5F,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAKC,UAAU,QACb3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,KACE5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CACEjF,KAAK,SACLX,GAAG,wBACH6F,KAAK,wBACL5F,MAAM,+BACN6F,SAAU1H,EAAMS,UAAU8F,cAKhC,KAEE2F,EAA6BlM,EAAM0B,kBAAkB8C,sBACzD7D,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoG,SAAA,KACGhH,EAAM2B,kBAAkBwK,gCACvBxL,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAKC,UAAU,QACb3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,KACE5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CACEjF,KAAK,SACLX,GAAG,2BACH6F,KAAK,2BACL5F,MAAM,4DACN6F,SAAU1H,EAAMS,UAAU8F,aAMlC5F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEc,GAAG,kBACHC,MAAM,sCACNC,gBAAgB,EAChBC,YAAY,mDACZtB,UAASrB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAOY,EAAMS,WAAb,IAAwBuB,WAAY,CAAEC,UAAU,KACzDC,mBAAoB,CAClBC,gBAAiBa,IACjBX,YAAa,CAAEC,aAAa,IAE9BC,KAAMC,IAAUC,aAGlB,KAEJ,OACE9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWL,UAAWT,EAAMS,UAAW2L,UAAWpM,EAAMqM,oBAAqB,GAC3E1L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeC,MAAM,kDACnBJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoG,SAAA,KACErG,EAAAC,EAAAC,cAACyL,EAAA,EAAD,CAAKC,MAAM,GACT5L,EAAAC,EAAAC,cAAC2L,EAAA,EAAD,KACE7L,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAASnF,UAAWoF,YAAG,CAAEC,OAAsB,IAAdzE,IAAoB8B,SAAU,EAAG4C,QAAS9C,GAA3E,+BAIFnJ,EAAAC,EAAAC,cAAC2L,EAAA,EAAD,KACE7L,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CACEnF,UAAWoF,YAAG,CAAEC,OAAsB,IAAdzE,IACxB8B,SAAU,EACV4C,QAAS9C,EACTyB,UAAWvL,EAAM2B,kBAAkBiE,sBAJrC,oBASFjF,EAAAC,EAAAC,cAAC2L,EAAA,EAAD,KACE7L,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAASnF,UAAWoF,YAAG,CAAEC,OAAsB,IAAdzE,IAAoB8B,SAAU,EAAG4C,QAAS9C,EAAWyB,UAAU,GAAhG,aAMJ5K,EAAAC,EAAAC,cAACgM,EAAA,EAAD,CAAYvF,UAAU,OAAOY,UAAWA,GACtCvH,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAASC,MAAO,EAAGzF,UAAU,YAC3B3G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAkBL,UAAWT,EAAMS,UAAWmB,GAAG,eAAeoL,QAAQ,IACxErM,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEc,GAAG,QACHC,MAAM,YACNC,gBAAgB,EAChBC,YAAY,YACZkL,WAAW,WACXC,mBA/OO,KACnBlN,EAAMS,UAAU+F,SAAS,QAASxG,EAAM0B,kBAAkBX,OAAO,IA+OrDN,UAASrB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACJY,EAAMS,WADF,IAEPuB,WAAY,CACV2F,UAAW,IACXwF,UAAW,EACXlL,UAAU,OAKf+I,EAEAG,EAEAU,EAEAE,EAEAG,EAEAF,EAEAC,EAEA9B,EACAC,EACAI,EACAC,EACAE,EAEDhK,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAKC,UAAU,QACb3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,KACE5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CACEjF,KAAK,SACLX,GAAG,uBACH6F,KAAK,uBACL5F,MAAM,sBACN6F,SAAU1H,EAAMS,UAAU8F,aAKhC5F,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAKC,UAAU,QACb3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,KACE5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CACEjF,KAAK,SACLX,GAAG,iBACH6F,KAAK,iBACL5F,MAAM,2BACN6F,SAAU1H,EAAMS,UAAU8F,aAKhC5F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEc,GAAG,aACHC,MAAM,uBACNC,gBAAgB,EAChBC,YAAY,mCACZtB,UAASrB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAOY,EAAMS,WAAb,IAAwBuB,WAAY,CAAEC,UAAU,KACzDC,mBAAoB,CAClBC,gBAAiBnC,EAAM2B,kBAAkB2G,cAAgBtI,EAAM2B,kBAAkB2G,cAAgB8E,IACjG/K,YAAa,CAAEC,aAAa,IAE9BC,KAAMC,IAAUC,YAGlB9B,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAKC,UAAU,QACb3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,KACE5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CACEjF,KAAK,SACLX,GAAG,iBACH6F,KAAK,iBACL5F,MAAM,oBACN6F,SAAU1H,EAAMS,UAAU8F,aAKhC5F,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAKC,UAAU,QACb3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,KACE5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CACEjF,KAAK,SACLX,GAAG,oBACH6F,KAAK,oBACL5F,MAAM,wBACN6F,SAAU1H,EAAMS,UAAU8F,cAKlC5F,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAASC,MAAO,EAAGzF,UAAU,YAC3B3G,EAAAC,EAAAC,cAACwM,EAAD,CAAY5M,UAAWT,EAAMS,UAAW6M,eAAgBtN,EAAM0B,kBAAkBX,SAElFJ,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAASC,MAAO,EAAGzF,UAAU,kBClU1BhG,IAhEyBtB,KAAS,MACvCuN,EAAuBrN,YAAmCC,GAASA,EAAMF,eAAzEsN,mBACFC,EAAWC,cAUjB,MAkBMC,EAAgBC,IAChB3N,EAAM4N,qBACRD,EAAO3N,EAAM4N,mBAAmBD,IAElCA,EAAK3I,aAAc,EAEnB6I,YAAYF,EAAM3N,EAAM2B,kBAAkB0D,gBAAiB,CACzDyI,cAAgBC,GAAqBC,aAAUD,EAAUE,KACzDC,aAAc,KACPX,GACHC,EAASW,eAEPnO,EAAMoO,aACRpO,EAAMoO,kBAMd,OACEzN,EAAAC,EAAAC,cAACwN,EAAA,EAAD,CAAMC,YAAY,GACftO,EAAMuO,SACP5N,EAAAC,EAAAC,cAAC2N,EAAD,CACE9M,kBAAmB1B,EAAM0B,kBACzBC,kBAAmB3B,EAAM2B,kBACzBlB,UAAWT,EAAMS,UACjB4L,kBAAmBrM,EAAMqM,oBAG3B1L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYN,aAAcR,EAAMQ,aA/CnB,CAACmN,EAAWc,KAC3BA,EAAMC,iBACN,IAAIC,EAAQ,GAIZ,GAHI3O,EAAM2G,iBACRgI,EAAQ3O,EAAM2G,eAAegH,IAE3BgB,GAASA,EAAMnG,OAAQ,CACzB,MAAMoG,EAAqB,CACzBC,QAASlO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAU6N,MAAOA,IAC1BpM,KAAMuM,IAAUb,OAElBc,KAAaC,KAAKC,IAAcC,KAAMN,QAEtCZ,aAAU,mIAAqHmB,KAC/HzB,EAAaC,KAiC2CyB,YAvD5D,WACMpP,EAAMoP,YACRpP,EAAMoP,cACGpP,EAAMyB,YACf4N,aAAcrP,EAAMyB,WAAYzB,EAAMyB,WAAW6N,iDC5DhD,SAASlO,EAAcH,GAC5B,IAAIyB,EAAS,KAMb,OALKzB,EAAgBsO,aACnB7M,EACE,gKAGGA,EAPTE,EAAAC,EAAAC,EAAA,sBAAA1B,sCCFAwB,EAAAC,EAAAC,EAAA,sBAAArD,IAAAmD,EAAAC,EAAAC,EAAA,sBAAAV,IAAO,MACM3C,EAAS,CAAEoC,MAAO,SAAUnC,MAAO,KAEnC0C,EAAqC,CAHvB,CAAEP,MAAO,cAAenC,MAAO,KAGMD","file":"static/js/130.270631b6.chunk.js","sourcesContent":["import { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\n\r\nexport interface FaturamentoBrutoModelo3RelRV extends ReportBasicValues {\r\n  /** Campo utiliza o faturamentoBrutoTipoEnum */\r\n  tipo?: string;\r\n  total?: number;\r\n  totalDevolucaoProduto?: number;\r\n  totalSaidaProduto?: number;\r\n  totalSaidaServico?: number;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'faturamentobrutomodelo3relrv';\r\nexport const REPORT_EVENT: string = 'printFaturamentoBrutoModelo3';\r\nexport const REPORT_TITLE: string = 'Relação de Faturamento Bruto das Empresas';\r\n","import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { InputGroupInline, InputType, REFERENCES, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMLF } from '../../../../../dependencies/empresaMLFDependency';\r\nimport { getDefaultReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport { FATURAMENTO_BRUTO_TIPO_ENUM_VALUES, NORMAL } from '../../../../../models/enumerated/mlf/faturamentoBrutoTipoEnum';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { CLASS_KEY, FaturamentoBrutoModelo3RelRV, REPORT_EVENT, REPORT_TITLE } from './faturamentoBrutoModelo3RelRV';\r\n\r\nconst DEFAULT_VALUES: FaturamentoBrutoModelo3RelRV = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n  gerarCabecalhoPadraoAdministradora: true,\r\n  tipo: NORMAL.value,\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT, REFERENCES.value),\r\n  exibirConfiguracaoDadosEmpresa: false,\r\n};\r\n\r\nconst FaturamentoBrutoModelo3ReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const { handleSubmit, ...formProps } = useForm<FaturamentoBrutoModelo3RelRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Relação de Faturamento Bruto - Modelo 3\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMLF(globalReducer.globalParameter)]}\r\n      wikiId={1978}\r\n    >\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n      >\r\n        <InputGroupInline\r\n          id=\"tipo\"\r\n          label=\"Tipo de Relatório\"\r\n          isPrependLabel={true}\r\n          placeholder=\"Informe o Tipo de Relatório\"\r\n          formProps={{ ...formProps, validation: { required: true } }}\r\n          inputDropDownProps={{\r\n            optionsProvider: FATURAMENTO_BRUTO_TIPO_ENUM_VALUES,\r\n            selectProps: { isClearable: false },\r\n          }}\r\n          type={InputType.DROP_DOWN}\r\n        />\r\n      </ReportForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default FaturamentoBrutoModelo3ReportView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMLF(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMLF) {\r\n    result =\r\n      'A empresa fiscal da empresa selecionada deve estar configurada. Para configurar acesse:\\n' +\r\n      'Módulo Fiscal > Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n","export const CONSOLIDADO = { label: 'Consolidado', value: '1' };\r\nexport const NORMAL = { label: 'Normal', value: '0' };\r\n\r\nexport const FATURAMENTO_BRUTO_TIPO_ENUM_VALUES = [CONSOLIDADO, NORMAL];\r\n"],"sourceRoot":""}
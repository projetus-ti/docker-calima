{"version":3,"sources":["models/enumerated/mcg/lucroPrejuizoClassificacaoEnum.ts","views/pages/mcg/lucroPrejuizoClassificacao/LucroPrejuizoClassificacaoSearchView.tsx","dependencies/grupoEmpresaConfigDependency.ts","services/mcg.service.ts","views/components/mcg/planoContaIS/PlanoContaIS.tsx","models/dtos/ger/planoConta.ts","../node_modules/reactstrap/es/Table.js"],"names":["LUCRO_PREJUIZO_CLASSIFICACAO_ENUM_VALUES","label","value","LucroPrejuizoClassificacaoSearchView","globalReducer","useSelector","state","_useForm","useForm","mode","reset","formProps","Object","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","valoresLista","setValoresLista","_useState3","_useState4","tabela","setTabela","_useState5","_useState6","showModalView","setShowModalView","handleCloseModal","handleEditar","item","forEach","it","indice","useEffect","obterLucroPrejuizoClassificacao","globalParameter","grupoPlanoConta","id","thenFunction","result","lista","lucroPrejuizoProps","planoConta","push","montaTabela","dados","map","react_default","a","createElement","key","conta","descricao","UncontrolledTooltip","target","Button","size","color","className","onClick","index_es","icon","summer_esm","title","useGlobalParameter","dependencies","hasGrupoEmpresaConfig","Table","hover","bordered","striped","Modal","isOpen","centered","toggle","ModalHeader","ModalBody","hidden","Row","Col","isPrependLabel","disabled","PlanoContaIS","handleSubmit","lucroPrejuizoClassificacao","getValues","find","element","salvarLucroPrejuizoClassificacao","showToast","SUCCESS","handleClose","empresa","grupoEmpresaRaiz","grupoEmpresaConfig","grupoEmpresa","__webpack_require__","d","__webpack_exports__","getService","create","gerarLancamentosFolhaPagamento","integracaoFolhaParam","param","send","post","integrarFolhaPagamento","lancamentoIntegracaoFolha","integrarMCP","importarParam","importarLancamentoCSV","data","formDataSend","FormData","append","String","importarDuplicados","importarLancamentosCardinal","_step","_iterator","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__","arquivos","s","n","done","arquivo","file","nomeArquivo","err","e","f","importarLancamentoPadraoCSV","_step2","_iterator2","importarHistoricoCSV","grupoHistoricoDestino","_step3","_iterator3","importarPlanoContaCSV","idEmpresa","grupoPlanoContaDestino","_step4","_iterator4","importarHistorico","importacaoHistorico","importarPlanoConta","importacaoPlanoContaParam","buscarConfigLivroFolhaMCG","get","integracaoFiscalContabil","encerrarContas","contaResultadoEncerramento","force","getDataUltimaContaEncerrada","idGerEmpresa","limparEncerramentoContaResultado","contaResultadoLimpeza","validarReferenciaSPEDECFIrpjCsll","configECFIrpjCsll","validarReferenciaSPEDECFImuneIsenta","configECFImuneIsenta","validarRefRemuneracaoSocio","configECFRemuneracaoSocio","validarQuadroSocietario","configQuadro","idGrupoPlanoConta","getSaldo","saldo","validarDadosSpedECF","ecfExportacaoParam","gerarSpedECF","usuario","getArquivoDigitalService","recuperarLancamentoConta","transferenciaLancamentoConta","transferirLancamentoConta","obterBancoPlanoConta","bancoPlanoContaDTO","validarConfigLivroFolha","changeLivroFolha","fecharRestaurar","fechamentoRestauracao","forceFecharRestaurar","verificarErros","erros","gerarSpedContabil","selecaoSped","arquivoRTFEscrituracaoSubstituida","_step5","_iterator5","atributoSelecaoSped","consultarMovimentacao","saldoCriteria","totalizadorLancamento","consulta","getSaldoAnterior","isDataEncerrada","parametros","abrirContas","removeLancamentoPeriodo","obterContasClassificacaoIndireto","salvarClassificacaoIndireto","contaFluxoCaixaIndireto","obterMutacaoPatrimonioLiquido","salvarMutacaoPatrimonioLiquido","mutacaoPatrimonioLiquido","salvarContaResultado","contaResultado","excluirContaResultado","obterContasClassificacaoDireto","salvarClassificacaoDireto","contaFluxoCaixa","findSubGrupo","planoContaSubGrupoParam","removerTodosPlanosConta","removeList","listaPlanoConta","apagarFilha","listSubGrupo","referenciarContas","idsPlanoConta","idPlanoContaReferencial","idPlanoContaReferencialECF","desvincularContas","existeLancamentoEmContaAnalitica","idPlanoConta","importarLancamentoMCG","tipoImportacao","sobescrever","versaoSuperiorA2","isEmpty","dtInicial","dtFinal","importarSpedContabil","_step6","_iterator6","gerarManadContabil","refInicial","refFinal","arquivoSFP","evolucaoContaContabilGraf","evolucaoContaContabilGrafParam","composicaoReceitaDespesasGraf","compReceitaDespesasGrafParam","gerarFCONTContabil","fContContabilCrit","obterDadosArquivoExtrato","arquivoSelecionado","idBancoMCG","obterDadosConciliacaoBancariaPeriodo","obterBancoListPlanoConta","conciliarLancamentosExtrato","listConciliacaoBancaria","removerConciliarLancamentosExtrato","listaRemover","removerLancamentosExtratoBancario","eLalurAContas","eLacsAContas","getSaldoDebito","getSaldoCredito","removerLancamentoLote","atualizaCalculoIrpjCsll","buscarLancamentosHonorarios","integracaoHonorariosParam","integrarHonorarios","lancamentos","isAlteraCalculoIRPJorCSLL","props","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_3__","assign","searchViewProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","filtroContaResultado","hideExtraFields","useDefaultSelectRow","inputSearchProps","columns","dataField","text","dtoClassName","CLASS_NAME","searchExpressions","expressions","analitica","alias","conditionalGroup","fieldName","sintetica","filtro","searchViewId","placeholder","type","InputType","INPUT_SEARCH","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","string","cssModule","object","bool","borderless","dark","responsive","oneOfType","tag","responsiveTag","innerRef","func","Tag","ResponsiveTag","attributes","classes","table","ref","responsiveClassName","defaultProps"],"mappings":"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","file":"static/js/260.51a19fee.chunk.js","sourcesContent":["export const SALDO_ANTERIOR_LUCRO_ACUMULADO = { label: 'Saldo Anterior de Lucros Acumulados', value: 'saldo_anterior_lucro_acumulado' };\r\nexport const AJUSTE_CREDOR_PERIODO_BASE_ANTERIOR = {\r\n  label: 'Ajustes Credores de Períodos Base Anteriores',\r\n  value: 'ajuste_credor_periodo_base_anterior',\r\n};\r\nexport const CORRECAO_MONETARIA_LUCRO_ACUMULADO = { label: 'Correção Monetária dos Lucros Acumulados', value: 'correcao_monetaria_lucro_acumulado' };\r\nexport const REVERSAO_RESERVA = { label: 'Reversão de Reservas', value: 'reversao_reserva' };\r\nexport const OUTRO_RECURSO = { label: 'Outros Recursos', value: 'outro_recurso' };\r\nexport const LUCRO_LIQUIDO_PERIODO_BASE_PROV_IR = {\r\n  label: 'Lucro Líquido do Período Base Depois Prov. p/IR',\r\n  value: 'lucro_liquido_periodo_base_prov_ir',\r\n};\r\nexport const SALDO_ANTERIOR_PREJUIZO_ACUMULADO = { label: 'Saldo Anterior de Prejuízos Acumulados', value: 'saldo_anterior_prejuizo_acumulado' };\r\nexport const AJUSTE_DEVEDOR_PERIDO_BASE_ANTERIOR = {\r\n  label: 'Ajuste Devedores de Período Base Anteriores',\r\n  value: 'ajuste_devedor_perido_base_anterior',\r\n};\r\nexport const CORRECAO_MONETARIA_PREJUIZO_ACUMULADO = {\r\n  label: 'Correção Monetária dos Prejuízos Acumulados',\r\n  value: 'correcao_monetaria_prejuizo_acumulado',\r\n};\r\nexport const PREJUIZO_LIQUIDO_PERIODO_BASE_PROV_IR = {\r\n  label: 'Prejuízos Líquidos do Período Base Depois Prov. p/IR',\r\n  value: 'prejuizo_liquido_periodo_base_prov_ir',\r\n};\r\nexport const TRANSFERENCIA_RESERVA = { label: 'Transferência de Reservas', value: 'transferencia_reserva' };\r\nexport const DIV_LUCRO_DISTRIBUIDO_PAGO_CREDITADO = {\r\n  label: 'Div. Lucros ou Distrubuídos, Pagos, Creditados',\r\n  value: 'div_lucro_distribuido_pago_creditado',\r\n};\r\nexport const IMPOSTO_LUCRO_LIQUIDO = { label: 'Imposto Sobre Lucro Líquido - Art.35 Lei 7713/8', value: 'imposto_lucro_liquido' };\r\nexport const PARCELA_LUCRO_INCORPORADA_CAPITAL = { label: 'Parcelas dos Lucros Incorporadas ao Capital', value: 'parcela_lucro_incorporada_capital' };\r\nexport const OUTRA_APLICACAO = { label: 'Outras Aplicações', value: 'outra_aplicacao' };\r\n\r\nexport const LUCRO_PREJUIZO_CLASSIFICACAO_ENUM_VALUES = [\r\n  SALDO_ANTERIOR_LUCRO_ACUMULADO,\r\n  AJUSTE_CREDOR_PERIODO_BASE_ANTERIOR,\r\n  CORRECAO_MONETARIA_LUCRO_ACUMULADO,\r\n  REVERSAO_RESERVA,\r\n  OUTRO_RECURSO,\r\n  LUCRO_LIQUIDO_PERIODO_BASE_PROV_IR,\r\n  SALDO_ANTERIOR_PREJUIZO_ACUMULADO,\r\n  AJUSTE_DEVEDOR_PERIDO_BASE_ANTERIOR,\r\n  CORRECAO_MONETARIA_PREJUIZO_ACUMULADO,\r\n  PREJUIZO_LIQUIDO_PERIODO_BASE_PROV_IR,\r\n  TRANSFERENCIA_RESERVA,\r\n  DIV_LUCRO_DISTRIBUIDO_PAGO_CREDITADO,\r\n  IMPOSTO_LUCRO_LIQUIDO,\r\n  PARCELA_LUCRO_INCORPORADA_CAPITAL,\r\n  OUTRA_APLICACAO,\r\n];\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { Button, Col, Modal, ModalBody, ModalHeader, Row, Table, UncontrolledTooltip } from 'reactstrap';\r\nimport { InputGroupInline, ProcessBar, SearchViewProps, showToast, SUCCESS, WindowComponent } from 'summer';\r\nimport { hasGrupoEmpresaConfig } from '../../../../dependencies/grupoEmpresaConfigDependency';\r\nimport { LucroPrejuizoClassificacao } from '../../../../models/dtos/mcg/lucroPrejuizoClassificacao';\r\nimport { LUCRO_PREJUIZO_CLASSIFICACAO_ENUM_VALUES } from '../../../../models/enumerated/mcg/lucroPrejuizoClassificacaoEnum';\r\nimport { obterLucroPrejuizoClassificacao, salvarLucroPrejuizoClassificacao } from '../../../../services/mcg.service';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport PlanoContaIS from '../../../components/mcg/planoContaIS/PlanoContaIS';\r\n\r\nconst LucroPrejuizoClassificacaoSearchView: FC<SearchViewProps<LucroPrejuizoClassificacao>> = () => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const { reset, ...formProps } = useForm<LucroPrejuizoClassificacao>({ mode: 'onBlur' });\r\n  const [valoresLista, setValoresLista] = useState<LucroPrejuizoClassificacao[]>([]);\r\n  const [tabela, setTabela] = useState();\r\n  const [showModalView, setShowModalView] = useState(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      obterLucroPrejuizoClassificacao(globalReducer.globalParameter.grupoPlanoConta.id, {\r\n        thenFunction: (result: LucroPrejuizoClassificacao[]) => {\r\n          if (result) {\r\n            const lista = [];\r\n            LUCRO_PREJUIZO_CLASSIFICACAO_ENUM_VALUES.forEach(it => {\r\n              const lucroPrejuizoProps: LucroPrejuizoClassificacao = {\r\n                indice: it.label,\r\n              };\r\n              result.forEach(item => {\r\n                if (item.indice === it.value) {\r\n                  lucroPrejuizoProps.id = item.id;\r\n                  lucroPrejuizoProps.planoConta = item.planoConta;\r\n                }\r\n              });\r\n              lista.push(lucroPrejuizoProps);\r\n            });\r\n            setValoresLista(lista);\r\n          }\r\n        },\r\n      });\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [showModalView]\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      montaTabela(valoresLista);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [valoresLista]\r\n  );\r\n\r\n  function handleCloseModal(): void {\r\n    setShowModalView(false);\r\n  }\r\n\r\n  function handleEditar(item) {\r\n    return () => {\r\n      setShowModalView(true);\r\n      valoresLista.forEach(it => {\r\n        if (it.indice === item) {\r\n          reset(it);\r\n        }\r\n      });\r\n    };\r\n  }\r\n\r\n  const montaTabela = (dados: LucroPrejuizoClassificacao[]) => {\r\n    setTabela(\r\n      dados.map(it => {\r\n        return (\r\n          <tr key={it.indice}>\r\n            <td>{it.indice}</td>\r\n            <td> {it.planoConta && it.planoConta.conta + ' -> ' + it.planoConta.descricao}</td>\r\n            <td>\r\n              <UncontrolledTooltip target=\"buttonActionColumnFormatterEdit\">Clique aqui para alterar</UncontrolledTooltip>\r\n              <Button\r\n                id=\"buttonActionColumnFormatterEdit\"\r\n                size=\"sm\"\r\n                color=\"link\"\r\n                className=\"p-0 d-30 text-warning\"\r\n                onClick={handleEditar(it.indice)}\r\n                value={it.indice}\r\n              >\r\n                <span className=\"btn-wrapper--icon\">\r\n                  <FontAwesomeIcon icon=\"pen\" className=\"font-size-sm\" />\r\n                </span>\r\n              </Button>\r\n            </td>\r\n          </tr>\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  const salvar = () => {\r\n    const lucroPrejuizoClassificacao: LucroPrejuizoClassificacao = {\r\n      grupoPlanoConta: globalReducer.globalParameter.grupoPlanoConta,\r\n      id: formProps.getValues().id,\r\n      indice: LUCRO_PREJUIZO_CLASSIFICACAO_ENUM_VALUES.find(element => element.label === formProps.getValues().indice).value,\r\n      planoConta: formProps.getValues().planoConta,\r\n    };\r\n    salvarLucroPrejuizoClassificacao(lucroPrejuizoClassificacao, {\r\n      thenFunction: () => {\r\n        showToast('Registro alterado com sucesso!', SUCCESS);\r\n        setShowModalView(false);\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Classificação de Lucros/Prejuízos\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasGrupoEmpresaConfig(globalReducer.globalParameter)]}\r\n    >\r\n      <Table hover={true} bordered={true} striped={true}>\r\n        <thead>\r\n          <tr>\r\n            <th>Índice</th>\r\n            <th>Plano de Conta</th>\r\n            <th>Ações</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{tabela}</tbody>\r\n      </Table>\r\n      <Modal isOpen={showModalView} centered={true} toggle={handleCloseModal} size=\"lg\">\r\n        <ModalHeader toggle={handleCloseModal}>Classificação de Lucros/Prejuízos</ModalHeader>\r\n        <ModalBody>\r\n          <InputGroupInline id=\"id\" formProps={formProps} hidden={true} />\r\n          <Row>\r\n            <Col>\r\n              <InputGroupInline formProps={formProps} id=\"indice\" isPrependLabel={true} label=\"Descrição\" disabled={true} />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <PlanoContaIS id=\"planoConta\" formProps={formProps} isPrependLabel={true} />\r\n            </Col>\r\n          </Row>\r\n          <ProcessBar handleSubmit={formProps.handleSubmit(salvar)} handleClose={handleCloseModal} />\r\n        </ModalBody>\r\n      </Modal>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default LucroPrejuizoClassificacaoSearchView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasGrupoEmpresaConfig(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n\r\n  const msg: string =\r\n    'O Grupo de empresas não está configurado para a empresa selecionada. Para configurar acesse:\\n' +\r\n    'Modulo Principal > Manutenção > Configurações > Grupo de Empresa';\r\n\r\n  if (\r\n    !globalParameter.empresa ||\r\n    !globalParameter.empresa.grupoEmpresaRaiz.grupoEmpresaConfig ||\r\n    !globalParameter.empresa.grupoEmpresa.grupoEmpresaConfig\r\n  ) {\r\n    result = msg;\r\n  }\r\n\r\n  return result;\r\n}\r\n","import { AxiosInstance } from 'axios';\r\nimport { ArquivoSelecionado, AxiosParam, create, isEmpty, send } from 'summer';\r\nimport { PlanoConta } from '../models/dtos/ger/planoConta';\r\nimport { PlanoContaSubGrupoParam } from '../models/dtos/ger/planoContaSubGrupoParam';\r\nimport { RuleMessage } from '../models/dtos/ger/ruleMessage';\r\nimport { Usuario } from '../models/dtos/ger/usuario';\r\nimport { BancoExtrato } from '../models/dtos/mcg/bancoExtrato';\r\nimport { BancoMCG } from '../models/dtos/mcg/bancoMCG';\r\nimport { BancoPlanoConta } from '../models/dtos/mcg/bancoPlanoConta';\r\nimport { CalculoIrpjCsll } from '../models/dtos/mcg/calculoIrpjCsll';\r\nimport { ComposicaoReceitaDespesasGrafParam } from '../models/dtos/mcg/composicaoReceitaDespesasGrafParam';\r\nimport { ComposicaoReceitaDespesasGrafReturn } from '../models/dtos/mcg/composicaoReceitaDespesasGrafReturn';\r\nimport { ConciliacaoBancaria } from '../models/dtos/mcg/conciliacaoBancaria';\r\nimport { ConfigECFImuneIsenta } from '../models/dtos/mcg/configECFImuneIsenta';\r\nimport { ConfigECFIrpjCsll } from '../models/dtos/mcg/configECFIrpjCsll';\r\nimport { ConfigECFRemuneracaoSocio } from '../models/dtos/mcg/configECFRemuneracaoSocio';\r\nimport { ConsultaTotalLancamento } from '../models/dtos/mcg/consultaTotalLancamento';\r\nimport { ContaFluxoCaixa } from '../models/dtos/mcg/contaFluxoCaixa';\r\nimport { ContaFluxoCaixaIndireto } from '../models/dtos/mcg/contaFluxoCaixaIndireto';\r\nimport { ContaResultado } from '../models/dtos/mcg/contaResultado';\r\nimport { ContaResultadoLimpeza } from '../models/dtos/mcg/contaResultadoLimpeza';\r\nimport { ContaResultadoMCGEncerramento } from '../models/dtos/mcg/contaResultadoMCGEncerramento';\r\nimport { DataEncerradaParam } from '../models/dtos/mcg/dataEncerradaParam';\r\nimport { ECFExportacaoParam } from '../models/dtos/mcg/ecfExportacaoParam';\r\nimport { Erros } from '../models/dtos/mcg/erros';\r\nimport { EvolucaoContaContabilGrafParam } from '../models/dtos/mcg/evolucaoContaContabilGrafParam';\r\nimport { EvolucaoContaContabilGrafReturn } from '../models/dtos/mcg/evolucaoContaContabilGrafReturn';\r\nimport { FCONTContabilCrit } from '../models/dtos/mcg/fContContabilCrit';\r\nimport { FechamentoRestauracaoMCG } from '../models/dtos/mcg/fechamentoRestauracaoMCG';\r\nimport { ImportacaoFiscalContabil, ImportacaoFiscalContabilResult } from '../models/dtos/mcg/importacaoFiscalContabil';\r\nimport { ImportacaoHistorico } from '../models/dtos/mcg/importacaoHistorico';\r\nimport { ImportacaoHistoricoCSVParam } from '../models/dtos/mcg/importacaoHistoricoCSVParam';\r\nimport { ImportacaoLancamentoCSVParam } from '../models/dtos/mcg/importacaoLancamentoCSVParam';\r\nimport { ImportacaoLancamentoMCGRetornoValidacao } from '../models/dtos/mcg/importacaoLancamentoMCGRetornoValidacao';\r\nimport { ImportacaoLancamentoMCGSelecao } from '../models/dtos/mcg/importacaoLancamentoMCGSelecao';\r\nimport { ImportacaoLancamentoPadraoCSVParam } from '../models/dtos/mcg/importacaoLancamentoPadraoCSVParam';\r\nimport { ImportacaoPlanoConta } from '../models/dtos/mcg/importacaoPlanoConta';\r\nimport { ImportacaoPlanoContaCSVParam } from '../models/dtos/mcg/importacaoPlanoContaCSVParam';\r\nimport { ImportacaoSpedContabil } from '../models/dtos/mcg/importacaoSpedContabil';\r\nimport { ImportacaoResult, ImportarMCP } from '../models/dtos/mcg/importarMCP';\r\nimport { InfoConciliacaoBancaria } from '../models/dtos/mcg/infoConciliacaoBancaria';\r\nimport { IntegracaoFolhaParam } from '../models/dtos/mcg/integracaoFolhaParam';\r\nimport { IntegracaoHonorariosParam } from '../models/dtos/mcg/integracaoHonorariosParam';\r\nimport { Lancamento } from '../models/dtos/mcg/lancamento';\r\nimport { LancamentoIntegracaoFolha } from '../models/dtos/mcg/lancamentoIntegracaoFolha';\r\nimport { LancamentoIntegracaoHonorarios } from '../models/dtos/mcg/lancamentoIntegracaoHonorarios';\r\nimport { LancamentoSaldo } from '../models/dtos/mcg/lancamentoSaldo';\r\nimport { LivroFolha } from '../models/dtos/mcg/livroFolha';\r\nimport { LucroPrejuizoClassificacao } from '../models/dtos/mcg/lucroPrejuizoClassificacao';\r\nimport { MANADContabilCrit } from '../models/dtos/mcg/manadContabilCrit';\r\nimport { MutacaoPatrimonioLiquido } from '../models/dtos/mcg/mutacaoPatrimonioLiquido';\r\nimport { QuadroSocietario } from '../models/dtos/mcg/quadroSocietario';\r\nimport { RemoveLancamentoLote } from '../models/dtos/mcg/removeLancamentoLote';\r\nimport { RemoveLancamentoPeriodo } from '../models/dtos/mcg/removeLancamentoPeriodo';\r\nimport { Saldo } from '../models/dtos/mcg/saldo';\r\nimport { SaldoCriteria } from '../models/dtos/mcg/saldoCriteria';\r\nimport { SelecaoSpedContabil } from '../models/dtos/mcg/selecaoSpedContabil';\r\nimport { SomaSaldo } from '../models/dtos/mcg/somaSaldo';\r\nimport { TotalizadorLancamento } from '../models/dtos/mcg/totalizadorLancamento';\r\nimport { TransferenciaLancamentoConta } from '../models/dtos/mcg/transferenciaLancamentoConta';\r\nimport { VerificarErros } from '../models/dtos/mcg/verificarErros';\r\nimport { getArquivoDigitalService } from './ger.service';\r\n\r\nfunction getService(): AxiosInstance {\r\n  return create('/mcg');\r\n}\r\n\r\nexport function gerarLancamentosFolhaPagamento(integracaoFolhaParam: IntegracaoFolhaParam, param: AxiosParam<LancamentoIntegracaoFolha[]>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/gerarLancamentosFolhaPagamento', integracaoFolhaParam), param);\r\n}\r\n\r\nexport function integrarFolhaPagamento(lancamentoIntegracaoFolha: LancamentoIntegracaoFolha[], param: AxiosParam<any>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/integrarFolhaPagamento', lancamentoIntegracaoFolha), param);\r\n}\r\n\r\nexport function integrarMCP(importarParam: ImportarMCP, param: AxiosParam<ImportacaoResult>) {\r\n  send(getService().post<ImportacaoResult>('/importar', importarParam), param);\r\n}\r\n\r\nexport function importarLancamentoCSV(data: ImportacaoLancamentoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('importarDuplicados', String(data.importarDuplicados));\r\n  formDataSend.append('importarLancamentosCardinal', String(data.importarLancamentosCardinal));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarLancamentoPadraoCSV(data: ImportacaoLancamentoPadraoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoPadraoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistoricoCSV(data: ImportacaoHistoricoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('grupoHistoricoDestino.id', String(data.grupoHistoricoDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarHistoricoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarPlanoContaCSV(data: ImportacaoPlanoContaCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idEmpresa', String(data.idEmpresa));\r\n  formDataSend.append('grupoPlanoContaDestino.id', String(data.grupoPlanoContaDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarPlanoContaCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistorico(importacaoHistorico: ImportacaoHistorico, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarHistorico', importacaoHistorico), param);\r\n}\r\n\r\nexport function importarPlanoConta(importacaoPlanoContaParam: ImportacaoPlanoConta, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarPlanoConta', importacaoPlanoContaParam), param);\r\n}\r\n\r\nexport function buscarConfigLivroFolhaMCG(idEmpresa: number, param: AxiosParam<LivroFolha>) {\r\n  send(getService().get<LivroFolha>('/buscarConfigLivroFolhaMCG/' + idEmpresa), param);\r\n}\r\n\r\nexport function integracaoFiscalContabil(importarParam: ImportacaoFiscalContabil, param: AxiosParam<ImportacaoFiscalContabilResult>) {\r\n  send(getService().post<ImportacaoFiscalContabilResult>('/integracaoFiscalContabil', importarParam), param);\r\n}\r\n\r\nexport function encerrarContas(\r\n  contaResultadoEncerramento: ContaResultadoMCGEncerramento,\r\n  force: boolean,\r\n  param: AxiosParam<ContaResultadoMCGEncerramento>\r\n) {\r\n  send(\r\n    getService().post<ContaResultadoMCGEncerramento>('/encerrarContas', { contaResultadoEncerramento, force }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function getDataUltimaContaEncerrada(idGerEmpresa: number, param: AxiosParam<Date>) {\r\n  send(getService().get<Date>('/getDataUltimaContaEncerrada/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function limparEncerramentoContaResultado(contaResultadoLimpeza: ContaResultadoLimpeza, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/limparEncerramentoContaResultadoApos', contaResultadoLimpeza), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFIrpjCsll(configECFIrpjCsll: ConfigECFIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFIrpjCsll', configECFIrpjCsll), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFImuneIsenta(configECFImuneIsenta: ConfigECFImuneIsenta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFImuneIsenta', configECFImuneIsenta), param);\r\n}\r\n\r\nexport function validarRefRemuneracaoSocio(configECFRemuneracaoSocio: ConfigECFRemuneracaoSocio, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarRefRemuneracaoSocio', configECFRemuneracaoSocio), param);\r\n}\r\n\r\nexport function validarQuadroSocietario(configQuadro: QuadroSocietario, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/validarQuadroSocietario', configQuadro), param);\r\n}\r\n\r\nexport function obterLucroPrejuizoClassificacao(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterLucroPrejuizoClassificacao/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function getSaldo(saldo: Saldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldo', saldo), param);\r\n}\r\n\r\nexport function validarDadosSpedECF(ecfExportacaoParam: ECFExportacaoParam, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/validarDadosSpedECF', ecfExportacaoParam), param);\r\n}\r\n\r\nexport function gerarSpedECF(usuario: Usuario, ecfExportacaoParam: ECFExportacaoParam, param?: AxiosParam<string>) {\r\n  send(\r\n    getArquivoDigitalService().post<string>('/gerarSpedECF', { usuario, ecfExportacaoParam }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function recuperarLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<Lancamento[]>) {\r\n  send(getService().post<Lancamento[]>('/recuperarLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function transferirLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/transferirLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function obterBancoPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG>) {\r\n  send(getService().post<BancoMCG>('/obterBancoPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function validarConfigLivroFolha(idGerEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(getService().get<boolean>('/validarConfigLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function changeLivroFolha(idGerEmpresa: number, param: AxiosParam<void>) {\r\n  send(getService().get<void>('/changeLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function fecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<RuleMessage>) {\r\n  send(getService().post<RuleMessage>('/fecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function forceFecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/forceFecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function verificarErros(erros: VerificarErros, param: AxiosParam<Erros[]>) {\r\n  send(getService().post<Erros[]>('/verificarErros', erros), param);\r\n}\r\n\r\nexport function gerarSpedContabil(selecaoSped: SelecaoSpedContabil, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('usuario.id', String(selecaoSped.usuario.id));\r\n\r\n  if (selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n    for (const arquivo of selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n      formDataSend.append('arquivoRTFEscrituracaoSubstituida', arquivo.file, arquivo.nomeArquivo);\r\n    }\r\n  }\r\n\r\n  for (const atributoSelecaoSped in selecaoSped) {\r\n    if (\r\n      atributoSelecaoSped !== 'arquivoRTFEscrituracaoSubstituida' &&\r\n      atributoSelecaoSped !== 'usuario' &&\r\n      selecaoSped[atributoSelecaoSped] !== null\r\n    ) {\r\n      formDataSend.append(atributoSelecaoSped, selecaoSped[atributoSelecaoSped]);\r\n    }\r\n  }\r\n  send(getService().post<string>('/gerarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function salvarLucroPrejuizoClassificacao(\r\n  lucroPrejuizoClassificacao: LucroPrejuizoClassificacao,\r\n  param: AxiosParam<LucroPrejuizoClassificacao>\r\n) {\r\n  send(getService().post<LucroPrejuizoClassificacao>('/salvarLucroPrejuizoClassificacao', lucroPrejuizoClassificacao), param);\r\n}\r\n\r\nexport function consultarMovimentacao(saldoCriteria: SaldoCriteria, param: AxiosParam<LancamentoSaldo[]>) {\r\n  send(getService().post<LancamentoSaldo[]>('/consultarMovimentacao', saldoCriteria), param);\r\n}\r\n\r\nexport function totalizadorLancamento(consulta: ConsultaTotalLancamento, param: AxiosParam<TotalizadorLancamento>) {\r\n  send(getService().post<TotalizadorLancamento>('/totalizadorLancamento', consulta), param);\r\n}\r\n\r\nexport function getSaldoAnterior(saldoCriteria: SaldoCriteria, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoAnterior', saldoCriteria), param);\r\n}\r\n\r\nexport function isDataEncerrada(parametros: DataEncerradaParam, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isDataEncerrada', parametros), param);\r\n}\r\n\r\nexport function abrirContas(parametros: DataEncerradaParam, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/abrirContas', parametros), param);\r\n}\r\n\r\nexport function removeLancamentoPeriodo(parametros: RemoveLancamentoPeriodo, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removeLancamentoPeriodo', parametros), param);\r\n}\r\n\r\nexport function obterContasClassificacaoIndireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixaIndireto[]>) {\r\n  send(getService().get<ContaFluxoCaixaIndireto[]>('/obterContasClassificacaoIndireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoIndireto(contaFluxoCaixaIndireto: ContaFluxoCaixaIndireto, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoIndireto', contaFluxoCaixaIndireto), param);\r\n}\r\n\r\nexport function obterMutacaoPatrimonioLiquido(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterMutacaoPatrimonioLiquido/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarMutacaoPatrimonioLiquido(mutacaoPatrimonioLiquido: MutacaoPatrimonioLiquido, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarMutacaoPatrimonioLiquido', mutacaoPatrimonioLiquido), param);\r\n}\r\n\r\nexport function salvarContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function excluirContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/excluirContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function obterContasClassificacaoDireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixa[]>) {\r\n  send(getService().get<ContaFluxoCaixa[]>('/obterContasClassificacaoDireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoDireto(contaFluxoCaixa: ContaFluxoCaixa, param?: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoDireto', contaFluxoCaixa), param);\r\n}\r\n\r\nexport function findSubGrupo(planoContaSubGrupoParam: PlanoContaSubGrupoParam, param: AxiosParam<any>) {\r\n  send(getService().post<any>('/findSubGrupo', planoContaSubGrupoParam), param);\r\n}\r\n\r\nexport function removerTodosPlanosConta(idGrupoPlanoConta: number, usuario: Usuario, param: AxiosParam<void>) {\r\n  send(\r\n    getService().post<void>('/removerTodosPlanosConta', { idGrupoPlanoConta, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function removeList(listaPlanoConta: PlanoConta[], apagarFilha: boolean, usuario: Usuario, param: AxiosParam<any>) {\r\n  send(\r\n    getService().post<any>('/removeList', { listaPlanoConta, apagarFilha, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function listSubGrupo(planoConta: PlanoConta, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().post<PlanoConta[]>('/listSubGrupo', planoConta), param);\r\n}\r\n\r\nexport function referenciarContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<void>\r\n) {\r\n  send(\r\n    getService().post<void>('/referenciarContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function desvincularContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<any>\r\n) {\r\n  send(\r\n    getService().post<void>('/desvincularContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function existeLancamentoEmContaAnalitica(idPlanoConta: number, idEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(\r\n    getService().post<boolean>('/existeLancamentoEmContaAnalitica', { idPlanoConta, idEmpresa }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function importarLancamentoMCG(data: ImportacaoLancamentoMCGSelecao, param: AxiosParam<ImportacaoLancamentoMCGRetornoValidacao>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('tipoImportacao', String(data.tipoImportacao));\r\n  formDataSend.append('sobescrever', String(data.sobescrever));\r\n  formDataSend.append('versaoSuperiorA2', String(data.versaoSuperiorA2));\r\n  formDataSend.append('arquivo', data.arquivo[0].file, data.arquivo[0].nomeArquivo);\r\n\r\n  if (data.versaoSuperiorA2 === false && !isEmpty(data.dtInicial) && !isEmpty(data.dtFinal)) {\r\n    formDataSend.append('dtInicial', data.dtInicial);\r\n    formDataSend.append('dtFinal', data.dtFinal);\r\n  }\r\n\r\n  send(getService().post<ImportacaoLancamentoMCGRetornoValidacao>('/importarLancamentoMCG', formDataSend), param);\r\n}\r\n\r\nexport function importarSpedContabil(data: ImportacaoSpedContabil, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function gerarManadContabil(data: MANADContabilCrit, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('refInicial', data.refInicial);\r\n  formDataSend.append('refFinal', data.refFinal);\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  if (!isEmpty(data.arquivoSFP)) {\r\n    formDataSend.append('arquivoSFP', data.arquivoSFP[0].file, data.arquivoSFP[0].nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<string>('/gerarManadContabil', formDataSend), param);\r\n}\r\n\r\nexport function evolucaoContaContabilGraf(\r\n  evolucaoContaContabilGrafParam: EvolucaoContaContabilGrafParam,\r\n  param: AxiosParam<EvolucaoContaContabilGrafReturn>\r\n) {\r\n  send(getService().post<EvolucaoContaContabilGrafReturn>('/evolucaoContaContabilGraf', evolucaoContaContabilGrafParam), param);\r\n}\r\n\r\nexport function composicaoReceitaDespesasGraf(\r\n  compReceitaDespesasGrafParam: ComposicaoReceitaDespesasGrafParam,\r\n  param: AxiosParam<ComposicaoReceitaDespesasGrafReturn>\r\n) {\r\n  send(getService().post<ComposicaoReceitaDespesasGrafReturn>('/composicaoReceitaDespesasGraf', compReceitaDespesasGrafParam), param);\r\n}\r\n\r\nexport function gerarFCONTContabil(fContContabilCrit: FCONTContabilCrit, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/gerarFCONTContabil', fContContabilCrit), param);\r\n}\r\n\r\nexport function obterDadosArquivoExtrato(arquivoSelecionado: ArquivoSelecionado, idBancoMCG, param: AxiosParam<BancoExtrato[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idBancoMCG', idBancoMCG);\r\n\r\n  formDataSend.append('arquivoSelecionado', arquivoSelecionado[0].file, arquivoSelecionado[0].nomeArquivo);\r\n\r\n  send(getService().post<BancoExtrato[]>('/obterDadosArquivoExtrato', formDataSend), param);\r\n}\r\n\r\nexport function obterDadosConciliacaoBancariaPeriodo(\r\n  idGrupoPlanoConta,\r\n  idEmpresa,\r\n  idBancoMCG,\r\n  dtInicial,\r\n  dtFinal,\r\n  param: AxiosParam<InfoConciliacaoBancaria>\r\n) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGrupoPlanoConta', String(idGrupoPlanoConta));\r\n  formDataSend.append('idEmpresa', String(idEmpresa));\r\n  formDataSend.append('idBancoMCG', String(idBancoMCG));\r\n  formDataSend.append('dtInicial', String(dtInicial));\r\n  formDataSend.append('dtFinal', String(dtFinal));\r\n\r\n  send(getService().post<InfoConciliacaoBancaria>('/obterDadosConciliacaoBancariaPeriodo', formDataSend), param);\r\n}\r\n\r\nexport function obterBancoListPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG[]>) {\r\n  send(getService().post<BancoMCG[]>('/obterBancoListPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function conciliarLancamentosExtrato(listConciliacaoBancaria: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/conciliarLancamentosExtrato', listConciliacaoBancaria), param);\r\n}\r\n\r\nexport function removerConciliarLancamentosExtrato(listaRemover: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerConciliarLancamentosExtrato', listaRemover), param);\r\n}\r\n\r\nexport function removerLancamentosExtratoBancario(listaRemover: BancoExtrato[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerLancamentosExtratoBancario', listaRemover), param);\r\n}\r\n\r\nexport function eLalurAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLalurAContas/' + id), param);\r\n}\r\n\r\nexport function eLacsAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLacsAContas/' + id), param);\r\n}\r\n\r\nexport function getSaldoDebito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoDebito', parametros), param);\r\n}\r\n\r\nexport function getSaldoCredito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoCredito', parametros), param);\r\n}\r\n\r\nexport function removerLancamentoLote(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/removerLancamentoLote', parametros), param);\r\n}\r\n\r\nexport function atualizaCalculoIrpjCsll(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/atualizaCalculoIrpjCsll', parametros), param);\r\n}\r\n\r\nexport function buscarLancamentosHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  param: AxiosParam<LancamentoIntegracaoHonorarios[]>\r\n) {\r\n  send(getService().post<LancamentoIntegracaoHonorarios[]>('/buscarLancamentosHonorarios', integracaoHonorariosParam), param);\r\n}\r\n\r\nexport function integrarHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  lancamentos: LancamentoIntegracaoHonorarios[],\r\n  param: AxiosParam<number>\r\n) {\r\n  send(\r\n    getService().post<number>('/integrarHonorarios', { integracaoHonorariosParam, lancamentos }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function isAlteraCalculoIRPJorCSLL(parametros: CalculoIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isAlteraCalculoIRPJorCSLL', parametros), param);\r\n}\r\n","import React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/planoConta';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\nexport interface PlanoContaInputSearchProps extends InputProps {\r\n  analitica?: boolean;\r\n  sintetica?: boolean;\r\n  idGrupoPlanoConta?: number;\r\n  filtroContaResultado?: SearchExpression[];\r\n}\r\n\r\nconst PlanoContaIS: FC<PlanoContaInputSearchProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  function getSearchExpression(): SearchExpression[] {\r\n    let expressions = [];\r\n    if (props.analitica) {\r\n      expressions = [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'analitica',\r\n          value: true,\r\n        },\r\n      ];\r\n    }\r\n    if (props.sintetica) {\r\n      expressions = [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'analitica',\r\n          value: false,\r\n        },\r\n      ];\r\n    }\r\n\r\n    expressions.push({\r\n      alias: 'g',\r\n      conditionalGroup: 'g_',\r\n      fieldName: 'grupoPlanoConta.id',\r\n      value: props.idGrupoPlanoConta || globalReducer.globalParameter.grupoPlanoConta.id,\r\n    });\r\n\r\n    if (props.filtroContaResultado) {\r\n      props.filtroContaResultado.forEach(filtro => {\r\n        expressions.push(filtro);\r\n      });\r\n    }\r\n\r\n    return expressions;\r\n  }\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      searchViewProps={{\r\n        ...props.searchViewProps,\r\n        filtroContaResultado: props.filtroContaResultado,\r\n        hideExtraFields: true,\r\n        useDefaultSelectRow: true,\r\n      }}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'conta',\r\n            text: 'Conta',\r\n          },\r\n          {\r\n            dataField: 'analitica',\r\n            text: 'Analítica',\r\n          },\r\n          {\r\n            dataField: 'codigoReduzido',\r\n            text: 'C.R.',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressions: getSearchExpression,\r\n        searchViewId: 'PlanoContaSearchView',\r\n      }} // TODO Implementar as regras do IS\r\n      label={props.label ? props.label : 'Plano de Contas'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Plano de Contas'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PlanoContaIS;\r\n","import { Basic } from 'summer';\r\nimport { PlanoContaMCG } from '../mcg/planoContaMCG';\r\nimport { SaldoAnterior } from '../mcg/saldoAnterior';\r\nimport { PlanoContaMCP } from '../mcp/planoContaMCP';\r\nimport { GrupoPlanoConta } from './grupoPlanoConta';\r\n\r\nexport interface PlanoConta extends Basic {\r\n  analitica?: boolean;\r\n  conta?: string;\r\n  codigoReduzido?: number;\r\n  descricao?: string;\r\n  grupoPlanoConta?: GrupoPlanoConta;\r\n  mcgPlanoConta?: PlanoContaMCG;\r\n  mcpPlanoConta?: PlanoContaMCP;\r\n  saldoAnterior?: SaldoAnterior;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.planoconta';\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nvar defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nvar Table = function Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive, cssModule);\n    return React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\nexport default Table;"],"sourceRoot":""}
{"version":3,"sources":["views/pages/login/LoginForm.tsx"],"names":["initialState","senha","usuario","ViewStates","REQUIRED_FIELD","LoginRouter","withRouter","history","location","_useLocalStorage","useLocalStorage","_useLocalStorage2","Object","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","codigoClienteStorage","writeCodigoClienteStorage","_useLocalStorage3","_useLocalStorage4","loginTokenStorage","writeLoginTokenStorage","_useState","useState","LOGIN","_useState2","currentState","setCurrentState","codigoCliente","_useForm","useForm","defaultValues","mode","register","errors","handleSubmit","triggerValidation","_useState3","_useState4","isSubmitting","setIsSubmitting","dispatch","useDispatch","onSubmit","_ref","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","data","event","errorFunc","efetuarLogin","wrap","_context","prev","next","preventDefault","mensagem","showToast","ERROR","validarLoginController","login","resultFunc","result","tokenAcesso","environment","production","siteURL","urlSistema","obterGlobalParameter","errorFunction","thenFunction","globalParameter","loginActions","administrador","id","existeEmpresaCadastroInvalido","companyIsValid","setGlobalParameter","push","pathname","warningFunc","urlAcesso","toastComp","onClickHandler","window","open","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","onClick","WARNING","t0","RECUPERAR","TOKEN","recuperarLogin","INFORMATION","abrupt","loginToken","token","stop","_x","_x2","apply","this","arguments","invalidCode","message","invalidUser","invalidPass","backButton","reactstrap__WEBPACK_IMPORTED_MODULE_7__","size","color","block","loginForm","Fragment","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","placeholder","type","name","innerRef","required","invalid","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","target","placement","disabled","className","href","rel","tokenForm","recuperarForm","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","xl","lg","md","xs","src","logo","alt","reactstrap__WEBPACK_IMPORTED_MODULE_14__","noValidate"],"mappings":"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","file":"static/js/518.c60d8256.chunk.js","sourcesContent":["import React, { FC, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { RouteComponentProps, withRouter } from 'react-router';\r\nimport { Button, Col, Form, FormFeedback, FormGroup, Input, Row, UncontrolledTooltip } from 'reactstrap';\r\nimport {\r\n  environment,\r\n  ERROR,\r\n  INFORMATION,\r\n  loginActions,\r\n  loginToken,\r\n  recuperarLogin,\r\n  showToast,\r\n  useLocalStorage,\r\n  validarLoginController,\r\n  WARNING,\r\n} from 'summer';\r\nimport logo from '../../../assets/logo.png';\r\nimport { existeEmpresaCadastroInvalido, obterGlobalParameter } from '../../../services/ger.service';\r\nimport { setGlobalParameter } from '../../../store/ducks/global.duck';\r\n\r\ninterface LoginForm {\r\n  usuario: string;\r\n  senha: string;\r\n  codigoCliente?: string;\r\n}\r\n\r\nconst initialState: LoginForm = {\r\n  senha: '',\r\n  usuario: '',\r\n};\r\n\r\nenum ViewStates {\r\n  LOGIN,\r\n  RECUPERAR,\r\n  TOKEN,\r\n}\r\n\r\nconst REQUIRED_FIELD = 'Campo obrigat√≥rio';\r\n\r\nconst LoginForm: FC<RouteComponentProps> = ({ history, location }) => {\r\n  const [codigoClienteStorage, writeCodigoClienteStorage] = useLocalStorage('codigoCliente');\r\n  const [loginTokenStorage, writeLoginTokenStorage] = useLocalStorage('loginToken');\r\n  const [currentState, setCurrentState] = useState(ViewStates.LOGIN);\r\n\r\n  initialState.codigoCliente = codigoClienteStorage;\r\n  const { register, errors, handleSubmit, triggerValidation } = useForm<LoginForm>({ defaultValues: initialState, mode: 'onBlur' });\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = async (data: LoginForm, event: any) => {\r\n    event.preventDefault();\r\n    setIsSubmitting(true);\r\n\r\n    const errorFunc = mensagem => {\r\n      showToast(mensagem, ERROR);\r\n      setIsSubmitting(false);\r\n    };\r\n    const efetuarLogin = () => {\r\n      validarLoginController({\r\n        codigoCliente: data.codigoCliente,\r\n        errorFunc,\r\n        login: data.usuario,\r\n        resultFunc: (result, tokenAcesso) => {\r\n          writeLoginTokenStorage(tokenAcesso);\r\n          if (environment.production) {\r\n            environment.siteURL = result.urlSistema;\r\n          }\r\n          writeCodigoClienteStorage(data.codigoCliente);\r\n          obterGlobalParameter(\r\n            {\r\n              codigoCliente: data.codigoCliente,\r\n              login: data.usuario,\r\n              senha: data.senha,\r\n            },\r\n            {\r\n              errorFunction: errorFunc,\r\n              thenFunction: globalParameter => {\r\n                dispatch(\r\n                  loginActions.login({\r\n                    codigoCliente: data.codigoCliente,\r\n                    usuario: data.usuario,\r\n                  })\r\n                );\r\n\r\n                if (globalParameter.usuario.administrador || globalParameter.usuario.id === 1) {\r\n                  existeEmpresaCadastroInvalido(globalParameter.usuario, {\r\n                    errorFunction: errorFunc,\r\n                    thenFunction: companyIsValid => {\r\n                      if (companyIsValid) {\r\n                        dispatch(setGlobalParameter(globalParameter));\r\n                        history.push(location.pathname + 'ger/empresaSearchView');\r\n                      } else {\r\n                        dispatch(setGlobalParameter(globalParameter));\r\n                        history.push(location.pathname + 'ger/dashboard');\r\n                      }\r\n                    },\r\n                  });\r\n                } else {\r\n                  dispatch(setGlobalParameter(globalParameter));\r\n                  history.push(location.pathname + 'ger/dashboard');\r\n                }\r\n              },\r\n            }\r\n          );\r\n        },\r\n        senha: data.senha,\r\n        tokenAcesso: loginTokenStorage,\r\n        warningFunc: (mensagem, urlAcesso) => {\r\n          let toastComp: any = null;\r\n          if (urlAcesso) {\r\n            const onClickHandler = () => window.open(urlAcesso, '_blank');\r\n            toastComp = <div onClick={onClickHandler}>${mensagem}</div>;\r\n          } else {\r\n            toastComp = mensagem;\r\n          }\r\n          showToast(toastComp, WARNING);\r\n          setIsSubmitting(false);\r\n        },\r\n      });\r\n    };\r\n    switch (currentState) {\r\n      case ViewStates.RECUPERAR:\r\n        recuperarLogin({\r\n          errorFunc,\r\n          login: data.usuario,\r\n          resultFunc: (result, tokenAcesso) => {\r\n            writeLoginTokenStorage(tokenAcesso);\r\n            setCurrentState(ViewStates.LOGIN);\r\n            showToast('Sua nova senha foi enviada para o e-mail informado. Por favor verifique sua caixa de entrada.', INFORMATION);\r\n          },\r\n          tokenAcesso: loginTokenStorage,\r\n        });\r\n        break;\r\n      case ViewStates.TOKEN:\r\n        loginToken({\r\n          errorFunc,\r\n          resultFunc: (result, tokenAcesso) => {\r\n            writeLoginTokenStorage(tokenAcesso);\r\n            data.senha = result.senha;\r\n            data.usuario = result.usuario;\r\n            efetuarLogin();\r\n          },\r\n          token: data.senha,\r\n          tokenAcesso: loginTokenStorage,\r\n        });\r\n        break;\r\n      default:\r\n        efetuarLogin();\r\n    }\r\n  };\r\n\r\n  const tokenClickHandler = () => {\r\n    setCurrentState(ViewStates.TOKEN);\r\n    triggerValidation();\r\n  };\r\n  const recuperarClickHandler = () => {\r\n    setCurrentState(ViewStates.RECUPERAR);\r\n    triggerValidation();\r\n  };\r\n  const voltarLogin = () => {\r\n    setCurrentState(ViewStates.LOGIN);\r\n    triggerValidation();\r\n  };\r\n\r\n  const invalidCode = !!(errors.codigoCliente && errors.codigoCliente.message);\r\n  const invalidUser = !!(errors.usuario && errors.usuario.message);\r\n  const invalidPass = !!(errors.senha && errors.senha.message);\r\n\r\n  const backButton = (\r\n    <Button size=\"sm\" color=\"link\" block={true} onClick={voltarLogin}>\r\n      Voltar\r\n    </Button>\r\n  );\r\n\r\n  const loginForm =\r\n    currentState === ViewStates.LOGIN ? (\r\n      <>\r\n        <FormGroup>\r\n          <label>C√≥digo</label>\r\n          <Input\r\n            placeholder=\"Informe seu c√≥digo\"\r\n            type=\"number\"\r\n            id=\"codigoCliente\"\r\n            name=\"codigoCliente\"\r\n            innerRef={register({ required: REQUIRED_FIELD })}\r\n            invalid={invalidCode}\r\n          />\r\n          <FormFeedback>{REQUIRED_FIELD}</FormFeedback>\r\n          <UncontrolledTooltip target=\"codigoCliente\" placement=\"bottom\">\r\n            Esse c√≥digo corresponde ao C√≥digo do Cliente no Cadastro da Projetus. Caso tenha esquecido clique em 'Recuperar senha' para obt√™-lo.\r\n          </UncontrolledTooltip>\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <label>Usu√°rio</label>\r\n          <Input\r\n            placeholder=\"Informe seu usu√°rio\"\r\n            type=\"text\"\r\n            name=\"usuario\"\r\n            innerRef={register({ required: REQUIRED_FIELD })}\r\n            invalid={invalidUser}\r\n          />\r\n          <FormFeedback>{REQUIRED_FIELD}</FormFeedback>\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <label>Senha</label>\r\n          <Input\r\n            placeholder=\"Informe sua senha\"\r\n            type=\"password\"\r\n            name=\"senha\"\r\n            innerRef={register({ required: REQUIRED_FIELD })}\r\n            invalid={invalidPass}\r\n          />\r\n          <FormFeedback>{REQUIRED_FIELD}</FormFeedback>\r\n        </FormGroup>\r\n\r\n        <Button size=\"lg\" block={true} color=\"first\" disabled={isSubmitting} className=\"mb-2\">\r\n          Entrar\r\n        </Button>\r\n        <a href=\"https://ajuda.projetusti.com.br/index.php\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-neutral-dark btn-block\">\r\n          Ajuda\r\n        </a>\r\n        <div className=\"d-flex justify-content-between pt-3\">\r\n          <Button size=\"sm\" color=\"link\" className=\"px-0\" onClick={tokenClickHandler}>\r\n            Login via Token\r\n          </Button>\r\n          <Button size=\"sm\" color=\"link\" className=\"px-0\" onClick={recuperarClickHandler}>\r\n            Recuperar senha\r\n          </Button>\r\n        </div>\r\n      </>\r\n    ) : null;\r\n\r\n  const tokenForm =\r\n    currentState === ViewStates.TOKEN ? (\r\n      <>\r\n        <FormGroup>\r\n          <label>C√≥digo</label>\r\n          <Input\r\n            placeholder=\"Informe seu c√≥digo\"\r\n            type=\"number\"\r\n            id=\"codigoCliente\"\r\n            name=\"codigoCliente\"\r\n            innerRef={register({ required: REQUIRED_FIELD })}\r\n            invalid={invalidCode}\r\n          />\r\n          <FormFeedback>{REQUIRED_FIELD}</FormFeedback>\r\n          <UncontrolledTooltip target=\"codigoCliente\" placement=\"bottom\">\r\n            Esse c√≥digo corresponde ao C√≥digo do Cliente do Cadastro da Projetus. Caso tenha esquecido clique em 'Recuperar senha' para obt√™-lo.\r\n          </UncontrolledTooltip>\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <label>Token</label>\r\n          <Input placeholder=\"Informe o token\" type=\"password\" name=\"senha\" innerRef={register({ required: REQUIRED_FIELD })} invalid={invalidPass} />\r\n          <FormFeedback>{REQUIRED_FIELD}</FormFeedback>\r\n        </FormGroup>\r\n\r\n        <Button size=\"lg\" block={true} color=\"first\" disabled={isSubmitting}>\r\n          Entrar\r\n        </Button>\r\n        {backButton}\r\n      </>\r\n    ) : null;\r\n\r\n  const recuperarForm =\r\n    currentState === ViewStates.RECUPERAR ? (\r\n      <>\r\n        <FormGroup>\r\n          <label>Usu√°rio</label>\r\n          <Input\r\n            placeholder=\"Informe seu usu√°rio ou e-mail\"\r\n            type=\"text\"\r\n            name=\"usuario\"\r\n            innerRef={register({ required: REQUIRED_FIELD })}\r\n            invalid={invalidUser}\r\n          />\r\n          <FormFeedback>{REQUIRED_FIELD}</FormFeedback>\r\n        </FormGroup>\r\n\r\n        <Button size=\"lg\" block={true} color=\"first\" disabled={isSubmitting}>\r\n          Recuperar\r\n        </Button>\r\n        {backButton}\r\n      </>\r\n    ) : null;\r\n\r\n  return (\r\n    <div className=\"app-wrapper min-vh-100\">\r\n      <div className=\"app-main min-vh-100\">\r\n        <div className=\"app-content p-0\">\r\n          <div className=\"app-content--inner d-flex align-items-center w-100\">\r\n            <div className=\"container\">\r\n              <Row className=\"justify-content-center\">\r\n                <Col xl={5} lg={6} md={8} xs={12} className=\"w-100 d-flex flex-column\">\r\n                  <div className=\"text-center\">\r\n                    <img src={logo} alt=\"Calima ERP\" />\r\n                  </div>\r\n                  <div className=\"w-100 bg-white rounded p-4 my-4\">\r\n                    <Form noValidate={true} onSubmit={handleSubmit(onSubmit)}>\r\n                      {loginForm}\r\n                      {tokenForm}\r\n                      {recuperarForm}\r\n                    </Form>\r\n                  </div>\r\n                  <div className=\"text-center pt-4 text-black-50\">\r\n                    N√£o possui login?{' '}\r\n                    <strong>\r\n                      <a href=\"https://centraldocliente.projetusti.com.br/#/cadastro\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        Cadastre-se agora!\r\n                      </a>\r\n                    </strong>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst LoginRouter = withRouter(LoginForm);\r\n\r\nexport default LoginRouter;\r\n"],"sourceRoot":""}
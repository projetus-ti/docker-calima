{"version":3,"sources":["models/dtos/mcg/saldoAnteriorCentroCusto.ts","views/pages/mcg/saldoAnteriorCentroCusto/SaldoAnteriorCentroCustoContaDetailEditView.tsx","views/pages/mcg/saldoAnteriorCentroCusto/SaldoAnteriorCentroCustoEditView.tsx","views/components/mcg/planoContaIS/PlanoContaIS.tsx","models/dtos/ger/planoConta.ts","models/dtos/ger/centroCusto.ts","views/components/mcg/centroCustoIS/CentroCustoIS.tsx","models/enumerated/mcg/naturezaCredorDevedorEnum.ts"],"names":["__webpack_require__","d","__webpack_exports__","CLASS_NAME","SaldoAnteriorCentroCustoContaDetailEditView","props","formProps","useForm","defaultValues","Object","objectSpread2","naturezaCredorDevedor","CREDOR","value","valor","selectedItem","mode","useEffect","id","setValue","react_default","a","createElement","summer_esm","handleSubmit","formData","validateExtrasFunc","DEVEDOR","handleCancel","validateExtras","formValues","currentValues","parentObject","erros","getValues","planoConta","analitica","push","listaContas","find","contas","conta","Number","Row","Col","PlanoContaIS","labelWidth","validation","required","min","isPrependLabel","label","placeholder","type","InputType","NUMBER","inputDropDownProps","optionsProvider","NATUREZA_CREDOR_DEVEDOR_ENUM_VALUES","selectProps","isClearable","DROP_DOWN","SaldoAnteriorCentroCustoEditView","getSelectedItem","globalReducer","useSelector","state","empresa","globalParameter","centroCustoContaColumns","dataField","sort","text","formatter","cell","row","enumColumn","title","wikiId","editViewProps","dtoClassName","hidden","CentroCustoIS","assign","columns","detailView","detailViewSize","keyField","propName","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_3__","searchViewProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","filtroContaResultado","hideExtraFields","useDefaultSelectRow","inputSearchProps","searchExpressions","expressions","alias","conditionalGroup","fieldName","sintetica","idGrupoPlanoConta","grupoPlanoConta","forEach","filtro","searchViewId","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"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","file":"static/js/239.6b19b539.chunk.js","sourcesContent":["import { Basic } from 'summer';\r\n\r\nimport { CentroCusto } from '../ger/centroCusto';\r\nimport { Empresa } from '../ger/empresa';\r\nimport { SaldoAnteriorCentroCustoConta } from './saldoAnteriorCentroCustoConta';\r\n\r\nexport interface SaldoAnteriorCentroCusto extends Basic {\r\n  empresa?: Empresa;\r\n  centroCusto?: CentroCusto;\r\n  listaContas?: SaldoAnteriorCentroCustoConta[];\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mcg.model.dto.saldoanteriorcentrocusto';\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline, InputType } from 'summer';\r\nimport { SaldoAnteriorCentroCustoConta } from '../../../../models/dtos/mcg/saldoAnteriorCentroCustoConta';\r\nimport { CREDOR, DEVEDOR, NATUREZA_CREDOR_DEVEDOR_ENUM_VALUES } from '../../../../models/enumerated/mcg/naturezaCredorDevedorEnum';\r\nimport PlanoContaIS from '../../../components/mcg/planoContaIS/PlanoContaIS';\r\n\r\nconst maxWidth = 155;\r\n\r\nconst SaldoAnteriorCentroCustoContaDetailEditView: FC<DetailEditViewFormProps<SaldoAnteriorCentroCustoConta>> = props => {\r\n  const formProps = useForm<SaldoAnteriorCentroCustoConta>({\r\n    defaultValues: {\r\n      naturezaCredorDevedor: CREDOR.value,\r\n      valor: 0,\r\n      ...props.selectedItem,\r\n    },\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  useEffect(\r\n    () => {\r\n      if (props.selectedItem && props.selectedItem.id && props.selectedItem.valor < 0) {\r\n        formProps.setValue('valor', -props.selectedItem.valor);\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const validateExtras = (formValues, currentValues, parentObject) => {\r\n    const erros = [];\r\n\r\n    if (!formProps.getValues().planoConta.analitica) {\r\n      erros.push('A conta selecionada deve ser do tipo analítica.');\r\n    }\r\n\r\n    if (parentObject.listaContas) {\r\n      const foundConta = parentObject.listaContas.find(contas => {\r\n        return contas.planoConta.conta === formValues.planoConta.conta && Number(contas.id) !== Number(formValues.id);\r\n      });\r\n      if (foundConta) {\r\n        erros.push('Este plano de contas já está sendo utilizado.');\r\n      }\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  const handleSubmit = (formData, validateExtrasFunc) => {\r\n    formData.valor = formData.naturezaCredorDevedor === DEVEDOR.value ? -formData.valor : formData.valor;\r\n    props.handleSubmit(formData, validateExtrasFunc);\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <Row>\r\n        <Col>\r\n          <PlanoContaIS id=\"planoConta\" labelWidth={maxWidth} formProps={{ ...formProps, validation: { required: true } }} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { min: 0 } }}\r\n            id=\"valor\"\r\n            labelWidth={maxWidth}\r\n            isPrependLabel={true}\r\n            label=\"Valor\"\r\n            placeholder=\"Informe o Valor\"\r\n            type={InputType.NUMBER}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"naturezaCredorDevedor\"\r\n            label=\"Natureza\"\r\n            labelWidth={maxWidth}\r\n            isPrependLabel={true}\r\n            placeholder=\"Selecione uma Natureza\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            inputDropDownProps={{\r\n              optionsProvider: NATUREZA_CREDOR_DEVEDOR_ENUM_VALUES,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default SaldoAnteriorCentroCustoContaDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, EditForm, EditViewProps, enumColumn, getSelectedItem, InputGroupInline, WindowComponent } from 'summer';\r\nimport { CLASS_NAME, SaldoAnteriorCentroCusto } from '../../../../models/dtos/mcg/saldoAnteriorCentroCusto';\r\nimport { NATUREZA_CREDOR_DEVEDOR_ENUM_VALUES } from '../../../../models/enumerated/mcg/naturezaCredorDevedorEnum';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport CentroCustoIS from '../../../components/mcg/centroCustoIS/CentroCustoIS';\r\nimport SaldoAnteriorCentroCustoContaDetailEditView from './SaldoAnteriorCentroCustoContaDetailEditView';\r\n\r\ninterface SaldoAnteriorCentroCustoEditViewProps extends EditViewProps<SaldoAnteriorCentroCusto> {}\r\n\r\nconst SaldoAnteriorCentroCustoEditView: FC<SaldoAnteriorCentroCustoEditViewProps & RouteComponentProps> = props => {\r\n  const selectedItem = getSelectedItem(props);\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const formProps = useForm<SaldoAnteriorCentroCusto>({\r\n    defaultValues: { empresa: globalReducer.globalParameter.empresa, ...selectedItem },\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const centroCustoContaColumns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'planoConta.conta',\r\n      sort: true,\r\n      text: 'Conta Débito',\r\n    },\r\n    {\r\n      dataField: 'valor',\r\n      formatter: (cell, row) => {\r\n        return row.valor > 0 ? row.valor : -row.valor;\r\n      },\r\n      sort: true,\r\n      text: 'Valor',\r\n    },\r\n    enumColumn(\r\n      {\r\n        dataField: 'naturezaCredorDevedor',\r\n        sort: true,\r\n        text: 'Natureza',\r\n      },\r\n      NATUREZA_CREDOR_DEVEDOR_ENUM_VALUES\r\n    ),\r\n  ];\r\n\r\n  return (\r\n    <WindowComponent title=\"Manutenção de Saldo Anterior - Centro de Custos\" wikiId={2227}>\r\n      <EditForm formProps={formProps} editViewProps={props} dtoClassName={CLASS_NAME}>\r\n        <InputGroupInline formProps={formProps} id=\"empresa.id\" hidden={true} />\r\n        <Row>\r\n          <Col>\r\n            <CentroCustoIS id=\"centroCusto\" formProps={formProps} isPrependLabel={true} label=\"Centro de Custo\" />\r\n          </Col>\r\n        </Row>\r\n        <DetailManagerForm\r\n          {...props}\r\n          columns={centroCustoContaColumns}\r\n          detailView={SaldoAnteriorCentroCustoContaDetailEditView}\r\n          detailViewSize=\"large\"\r\n          formProps={formProps}\r\n          keyField=\"rowIndex\"\r\n          propName=\"listaContas\"\r\n          title=\"Manutenção de Saldo Anterior - Contas\"\r\n        />\r\n      </EditForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default SaldoAnteriorCentroCustoEditView;\r\n","import React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/planoConta';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\nexport interface PlanoContaInputSearchProps extends InputProps {\r\n  analitica?: boolean;\r\n  sintetica?: boolean;\r\n  idGrupoPlanoConta?: number;\r\n  filtroContaResultado?: SearchExpression[];\r\n}\r\n\r\nconst PlanoContaIS: FC<PlanoContaInputSearchProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  function getSearchExpression(): SearchExpression[] {\r\n    let expressions = [];\r\n    if (props.analitica) {\r\n      expressions = [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'analitica',\r\n          value: true,\r\n        },\r\n      ];\r\n    }\r\n    if (props.sintetica) {\r\n      expressions = [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'analitica',\r\n          value: false,\r\n        },\r\n      ];\r\n    }\r\n\r\n    expressions.push({\r\n      alias: 'g',\r\n      conditionalGroup: 'g_',\r\n      fieldName: 'grupoPlanoConta.id',\r\n      value: props.idGrupoPlanoConta || globalReducer.globalParameter.grupoPlanoConta.id,\r\n    });\r\n\r\n    if (props.filtroContaResultado) {\r\n      props.filtroContaResultado.forEach(filtro => {\r\n        expressions.push(filtro);\r\n      });\r\n    }\r\n\r\n    return expressions;\r\n  }\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      searchViewProps={{\r\n        ...props.searchViewProps,\r\n        filtroContaResultado: props.filtroContaResultado,\r\n        hideExtraFields: true,\r\n        useDefaultSelectRow: true,\r\n      }}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'conta',\r\n            text: 'Conta',\r\n          },\r\n          {\r\n            dataField: 'analitica',\r\n            text: 'Analítica',\r\n          },\r\n          {\r\n            dataField: 'codigoReduzido',\r\n            text: 'C.R.',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressions: getSearchExpression,\r\n        searchViewId: 'PlanoContaSearchView',\r\n      }} // TODO Implementar as regras do IS\r\n      label={props.label ? props.label : 'Plano de Contas'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Plano de Contas'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PlanoContaIS;\r\n","import { Basic } from 'summer';\r\nimport { PlanoContaMCG } from '../mcg/planoContaMCG';\r\nimport { SaldoAnterior } from '../mcg/saldoAnterior';\r\nimport { PlanoContaMCP } from '../mcp/planoContaMCP';\r\nimport { GrupoPlanoConta } from './grupoPlanoConta';\r\n\r\nexport interface PlanoConta extends Basic {\r\n  analitica?: boolean;\r\n  conta?: string;\r\n  codigoReduzido?: number;\r\n  descricao?: string;\r\n  grupoPlanoConta?: GrupoPlanoConta;\r\n  mcgPlanoConta?: PlanoContaMCG;\r\n  mcpPlanoConta?: PlanoContaMCP;\r\n  saldoAnterior?: SaldoAnterior;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.planoconta';\r\n","import { Basic } from 'summer';\r\nimport { Bem } from '../mcp/bem';\r\nimport { GrupoCentroCusto } from './grupoCentroCusto';\r\n\r\nexport interface CentroCusto extends Basic {\r\n  codigo?: string;\r\n  codigoReduzido?: number;\r\n  descricao?: string;\r\n  analitica?: boolean;\r\n  grupoCentroCusto?: GrupoCentroCusto;\r\n  bem?: Bem;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.centrocusto';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/centroCusto';\r\n\r\nconst CentroCustoIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'CentroCustoSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Centro de Custo'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Centro de Custo'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CentroCustoIS;\r\n","export const DEVEDOR = { value: 'DEVEDOR', label: 'Devedora' };\r\nexport const CREDOR = { value: 'CREDOR', label: 'Credora' };\r\n\r\nexport const NATUREZA_CREDOR_DEVEDOR_ENUM_VALUES = [DEVEDOR, CREDOR];\r\n"],"sourceRoot":""}
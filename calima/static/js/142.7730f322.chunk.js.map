{"version":3,"sources":["models/enumerated/mcg/planoContaRefOrderEnum.ts","models/enumerated/mcg/planoContaRefTypeEnum.ts","views/pages/mcg/report/planoContaReferencial/planoContaReferencialRV.ts","views/pages/mcg/report/planoContaReferencial/PlanoContaReferencialReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/printerConfigTypeEnum.ts","models/enumerated/ger/printerTypeEnum.ts","dependencies/grupoEmpresaConfigDependency.ts","dependencies/empresaMCGDependency.ts","models/dtos/ger/printerDataBasic.ts","views/pages/report/ReportFormView.tsx"],"names":["NRO_CONTA","label","value","PLANO_CONTA_REF_ORDER_ENUM_VALUES","REFERENCIAL","PLANO_CONTA_REF_TYPE_ENUM_VALUES","REPORT_TITLE","BASIC_DATA","Object","objectSpread2","getDefaultPrinterDataBasic","module","PlanoContaReferencialReportView","props","history","useHistory","formProps","useForm","mode","globalReducer","useSelector","state","_useState","useState","_useState2","slicedToArray","isEnableOrdenar","setIsEnableOrdenar","useEffect","isEmpty","globalParameter","empresa","_globalReducer$global","id","grupoEmpresa","setTimeout","setValue","react_default","a","createElement","summer_esm","assign","title","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMCG","hasGrupoEmpresaConfig","ReportFormView","printerData","hidden","Row","Col","validation","required","inputDropDownProps","optionsProvider","selectProps","isClearable","isPrependLabel","onChange","getValues","tipoImpressao","placeholder","type","InputType","DROP_DOWN","disabled","result","__webpack_require__","d","__webpack_exports__","SIMPLE","DATE","DATES","MONTHYEAR","MONTHYEARS","YEAR","GRAPHIC","PRINTER_TYPE_ENUM","grupoEmpresaRaiz","grupoEmpresaConfig","empresaMCG","_enumerated_ger_printerConfigTypeEnum__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_printerTypeEnum__WEBPACK_IMPORTED_MODULE_1__","reportEventType","classKey","printerConfigTypeEnum","anoLabel","dtFinalLabel","dtInicialLabel","pageNumber","passObj","printerDataEmail","printerTypeEnum","refFinalLabel","refInicialLabel","reportSequence","_props$printerData","resetObject","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","length","current","currentMomentDate","endDate","dtInicial","formatDate","toDate","dtFinal","endOf","referenciaInicial","format","REF_PATTERN","referenciaFinal","ano","String","year","reset","dateInitial","react__WEBPACK_IMPORTED_MODULE_2___default","summer__WEBPACK_IMPORTED_MODULE_7__","dateComponent","datesComponent","Fragment","referenceInitial","REFERENCE","referenceComponent","referencesComponent","anoComponent","inputMaskedProps","mask","MASK","reactstrap__WEBPACK_IMPORTED_MODULE_3__","noValidate","children","firstOpen","extraConfigOpened","iconAppend","appendClickHandler","maxLength","minLength","min","NUMBER","reactstrap__WEBPACK_IMPORTED_MODULE_4__","className","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","name","innerRef","register","handleSubmit","data","event","preventDefault","erros","validateExtras","params","message","AlertType","ERROR","alertManager","emit","ACTION_EVENTS","SHOW","showToast","INFORMATION","delay","gerarOldReport","errorFunction","mensagem","thenFunction","downloadOldReport","response","contentDisposition","headers","filename","slice","lastIndexOf","split","replace","saveAs","hideCancelButton"],"mappings":"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","file":"static/js/142.7730f322.chunk.js","sourcesContent":["export const NRO_CONTA = { label: 'Número da Conta', value: 'false' };\r\nexport const CODIGO_REDUZIDO = { label: 'Código Reduzido', value: 'true' };\r\n\r\nexport const PLANO_CONTA_REF_ORDER_ENUM_VALUES = [NRO_CONTA, CODIGO_REDUZIDO];\r\n","export const REFERENCIAL = { label: 'Plano de Contas Referencial', value: 0 };\r\nexport const PADRAO = { label: 'Plano de Contas da Empresa Completo', value: 1 };\r\nexport const COM_REFERENCIA = { label: 'Plano de Contas da Empresa - Somente Contas COM Referência', value: 2 };\r\nexport const SEM_REFERENCIA = { label: 'Plano de Contas da Empresa - Somente Contas SEM Referência', value: 3 };\r\n\r\nexport const PLANO_CONTA_REF_TYPE_ENUM_VALUES = [REFERENCIAL, PADRAO, COM_REFERENCIA, SEM_REFERENCIA];\r\n","export interface PlanoContaReferencialRV {\r\n  contaCaixa?: boolean;\r\n  idGerEmpresa?: number;\r\n  idGerGrupoEmpresaAtual?: number;\r\n  idsGerGrupoEmpresaPais?: number[];\r\n  impData?: boolean;\r\n  ordenarPeloCodigoReduzido?: string;\r\n  rodape?: boolean;\r\n  tipoConta?: boolean;\r\n  tipoImpressao?: number;\r\n}\r\n\r\nexport const REPORT_TITLE: string = 'Plano de Contas Referencial';\r\nexport const REPORT_EVENT: string = 'printPlanoContaRefRelacao';\r\nexport const CLASS_KEY: string = 'planocontarefrelpass';\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { InputGroupInline, InputType, isEmpty, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../../dependencies/empresaMCGDependency';\r\nimport { hasGrupoEmpresaConfig } from '../../../../../dependencies/grupoEmpresaConfigDependency';\r\nimport { getDefaultPrinterDataBasic, PrinterDataBasic } from '../../../../../models/dtos/ger/printerDataBasic';\r\nimport { NRO_CONTA, PLANO_CONTA_REF_ORDER_ENUM_VALUES } from '../../../../../models/enumerated/mcg/planoContaRefOrderEnum';\r\nimport { PLANO_CONTA_REF_TYPE_ENUM_VALUES, REFERENCIAL } from '../../../../../models/enumerated/mcg/planoContaRefTypeEnum';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport ReportFormView from '../../../report/ReportFormView';\r\nimport { CLASS_KEY, PlanoContaReferencialRV, REPORT_EVENT, REPORT_TITLE } from './planoContaReferencialRV';\r\n\r\nconst BASIC_DATA: PrinterDataBasic = {\r\n  ...getDefaultPrinterDataBasic(REPORT_TITLE, REPORT_EVENT, CLASS_KEY),\r\n  module: 'MCG',\r\n};\r\n\r\nexport default function PlanoContaReferencialReportView(props: WindowComponentProps) {\r\n  const history = useHistory();\r\n  const formProps = useForm<PlanoContaReferencialRV>({ mode: 'onBlur' });\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [isEnableOrdenar, setIsEnableOrdenar] = useState(true);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!isEmpty(globalReducer.globalParameter.empresa)) {\r\n        const {\r\n          empresa: { id, grupoEmpresa },\r\n        } = globalReducer.globalParameter;\r\n        setTimeout(() => {\r\n          formProps.setValue('idGerEmpresa', id);\r\n          formProps.setValue('idGerGrupoEmpresaAtual', grupoEmpresa.id);\r\n          formProps.setValue('tipoImpressao', REFERENCIAL.value, true);\r\n          formProps.setValue('ordenarPeloCodigoReduzido', NRO_CONTA.value);\r\n        }, 800);\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const ordenarHandler = (): void => {\r\n    setIsEnableOrdenar(formProps.getValues().tipoImpressao === 0);\r\n  };\r\n\r\n  return (\r\n    <WindowComponent\r\n      {...props}\r\n      title={REPORT_TITLE}\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[\r\n        () => hasEmpresa(globalReducer.globalParameter),\r\n        () => hasEmpresaMCG(globalReducer.globalParameter),\r\n        () => hasGrupoEmpresaConfig(globalReducer.globalParameter),\r\n      ]}\r\n    >\r\n      <ReportFormView formProps={formProps} printerData={BASIC_DATA} history={history}>\r\n        <InputGroupInline formProps={formProps} id=\"idGerEmpresa\" hidden={true} />\r\n        <InputGroupInline formProps={formProps} id=\"idsGerGrupoEmpresaPais[]\" hidden={true} />\r\n        <InputGroupInline formProps={formProps} id=\"idGerGrupoEmpresaAtual\" hidden={true} />\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              id=\"tipoImpressao\"\r\n              inputDropDownProps={{\r\n                optionsProvider: PLANO_CONTA_REF_TYPE_ENUM_VALUES,\r\n                selectProps: { isClearable: false },\r\n              }}\r\n              isPrependLabel={true}\r\n              label=\"Tipo de Impressão\"\r\n              onChange={ordenarHandler}\r\n              placeholder=\"Selecione o Tipo de Impressão\"\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              disabled={isEnableOrdenar}\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              id=\"ordenarPeloCodigoReduzido\"\r\n              inputDropDownProps={{\r\n                optionsProvider: PLANO_CONTA_REF_ORDER_ENUM_VALUES,\r\n                selectProps: { isClearable: false },\r\n              }}\r\n              isPrependLabel={true}\r\n              label=\"Ordenar Por\"\r\n              placeholder=\"Selecione o Tipo de Ordenação\"\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </ReportFormView>\r\n    </WindowComponent>\r\n  );\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const SIMPLE = { label: '', value: '0' };\r\nexport const DATE = { label: '', value: '1' };\r\nexport const DATES = { label: '', value: '2' };\r\nexport const MONTHYEAR = { label: '', value: '3' };\r\nexport const MONTHYEARS = { label: '', value: '4' };\r\nexport const TINY = { label: '', value: '5' }; // TODO Remover\r\nexport const YEAR = { label: '', value: '6' };\r\nexport const QUARTER_YEAR = { label: '', value: '7' }; // TODO Remover\r\n\r\nconst PRINTER_CONFIG_TYPE_ENUM = [SIMPLE, DATE, DATES, MONTHYEAR, MONTHYEARS, TINY, YEAR, QUARTER_YEAR];\r\n\r\nexport default PRINTER_CONFIG_TYPE_ENUM;\r\n","export const TEXT = { label: 'Texto - CalimaDesk', value: 'texto' };\r\nexport const GRAPHIC = { label: 'Gráfico - PDF', value: 'grafico' };\r\nexport const EMAIL = { label: 'E-mail - PDF', value: 'email' };\r\n\r\nconst PRINTER_TYPE_ENUM = [TEXT, GRAPHIC, EMAIL];\r\n\r\nexport default PRINTER_TYPE_ENUM;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasGrupoEmpresaConfig(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n\r\n  const msg: string =\r\n    'O Grupo de empresas não está configurado para a empresa selecionada. Para configurar acesse:\\n' +\r\n    'Modulo Principal > Manutenção > Configurações > Grupo de Empresa';\r\n\r\n  if (\r\n    !globalParameter.empresa ||\r\n    !globalParameter.empresa.grupoEmpresaRaiz.grupoEmpresaConfig ||\r\n    !globalParameter.empresa.grupoEmpresa.grupoEmpresaConfig\r\n  ) {\r\n    result = msg;\r\n  }\r\n\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMCG(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMCG) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o módulo Contábil. Para configurá-la acesse:\\n' +\r\n      'Módulo Contábil > Manutenção > Configurações > Empresa.';\r\n  }\r\n  return result;\r\n}\r\n","import { SIMPLE } from '../../enumerated/ger/printerConfigTypeEnum';\r\nimport { GRAPHIC } from '../../enumerated/ger/printerTypeEnum';\r\nimport { PrinterDataEmail } from './printerDataEmail';\r\n\r\nexport interface PrinterDataBasic {\r\n  printerTypeEnum?: string;\r\n  dtInicial?: string;\r\n  dtFinal?: string;\r\n  refInicial?: string;\r\n  refFinal?: string;\r\n  reportSequence?: boolean;\r\n  pageNumber?: string;\r\n  title?: string;\r\n  printerDataEmail?: PrinterDataEmail;\r\n  passObj?: any;\r\n  printerConfigTypeEnum?: string;\r\n\r\n  dtInicialLabel?: string;\r\n  dtFinalLabel?: string;\r\n  refInicialLabel?: string;\r\n  refFinalLabel?: string;\r\n  anoLabel?: string;\r\n\r\n  reportEventType: string;\r\n  classKey: string;\r\n  module: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.printerdatabasicdto';\r\n\r\nexport function getDefaultPrinterDataBasic(\r\n  title: string,\r\n  reportEventType: string,\r\n  classKey: string,\r\n  printerConfigTypeEnum: string = SIMPLE.value,\r\n  module: string = 'MLF'\r\n) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    classKey,\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    module,\r\n    pageNumber: '1',\r\n    passObj: {},\r\n    printerConfigTypeEnum,\r\n    printerDataEmail: {},\r\n    printerTypeEnum: GRAPHIC.value,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportSequence: false,\r\n    title,\r\n  };\r\n}\r\n","import { saveAs } from 'file-saver';\r\nimport React, { FC, useEffect } from 'react';\r\nimport { Col, CustomInput, Form, Row } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  currentMomentDate,\r\n  ErroList,\r\n  ERROR,\r\n  format,\r\n  formatDate,\r\n  INFORMATION,\r\n  InputGroupInline,\r\n  InputType,\r\n  ProcessBar,\r\n  REF_PATTERN,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { PrinterDataBasic } from '../../../models/dtos/ger/printerDataBasic';\r\nimport { DATE, DATES, MONTHYEAR, MONTHYEARS, YEAR } from '../../../models/enumerated/ger/printerConfigTypeEnum';\r\nimport PRINTER_TYPE_ENUM, { GRAPHIC } from '../../../models/enumerated/ger/printerTypeEnum';\r\nimport { downloadOldReport, gerarOldReport } from '../../../services/report.service';\r\n\r\nexport interface ReportWindowComponentProps {\r\n  formProps: UseFormProps;\r\n  printerData?: PrinterDataBasic;\r\n  history?: any;\r\n  /** Função de validações extras */\r\n  validateExtras?: (printerData: PrinterDataBasic, formData: any) => string[];\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportFormView: FC<ReportWindowComponentProps> = props => {\r\n  useEffect(\r\n    () => {\r\n      const { printerTypeEnum, printerConfigTypeEnum } = props.printerData;\r\n      let resetObject: any = {\r\n        ...props.printerData,\r\n        printerTypeEnum: printerTypeEnum && printerTypeEnum.length > 0 ? printerTypeEnum[0] : GRAPHIC.value,\r\n      };\r\n\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (printerConfigTypeEnum) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case MONTHYEAR.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case MONTHYEARS.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case YEAR.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      props.formProps.reset(resetObject);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.printerData.printerConfigTypeEnum, props.printerData.printerTypeEnum]\r\n  );\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(props.printerData, data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      props.printerData.passObj = data;\r\n      showToast('Seu relatório está sendo gerado...', { ...INFORMATION, delay: 3000 });\r\n      gerarOldReport(props.printerData, {\r\n        errorFunction: (mensagem: string) => {\r\n          showToast(mensagem, ERROR);\r\n        },\r\n        thenFunction: () => {\r\n          downloadOldReport({\r\n            errorFunction: (mensagem: string) => {\r\n              showToast(mensagem, ERROR);\r\n            },\r\n            thenFunction: (response: any) => {\r\n              const contentDisposition = response.headers['content-disposition'];\r\n              const filename = contentDisposition\r\n                .slice(0, contentDisposition.lastIndexOf(';'))\r\n                .split('filename=')[1]\r\n                .replace(/\"/g, '');\r\n              saveAs(response.data, filename);\r\n            },\r\n          });\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.printerData.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.printerData.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: true } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.printerData.printerConfigTypeEnum === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.printerData.printerConfigTypeEnum === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.printerData.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: true } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"refInicial\"\r\n      label={props.printerData.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: true } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.printerData.printerConfigTypeEnum === MONTHYEAR.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.printerData.printerConfigTypeEnum === MONTHYEARS.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"refFinal\"\r\n          label={props.printerData.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: true } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.printerData.printerConfigTypeEnum === YEAR.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.printerData.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n\r\n      <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n        <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n          <InputGroupInline\r\n            id=\"title\"\r\n            label=\"Título\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Título\"\r\n            iconAppend=\"undo-alt\"\r\n            appendClickHandler={restoreTitle}\r\n            formProps={{\r\n              ...props.formProps,\r\n              validation: {\r\n                maxLength: 120,\r\n                minLength: 5,\r\n                required: true,\r\n              },\r\n            }}\r\n          />\r\n\r\n          <InputGroupInline\r\n            id=\"pageNumber\"\r\n            label=\"Página Inicial\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Página Inicial\"\r\n            formProps={{\r\n              ...props.formProps,\r\n              validation: {\r\n                min: 0,\r\n                required: true,\r\n              },\r\n            }}\r\n            type={InputType.NUMBER}\r\n          />\r\n\r\n          <Row className=\"mb-3 mt-3\">\r\n            <Col>\r\n              <CustomInput\r\n                type=\"switch\"\r\n                label=\"Sequenciar Relatórios\"\r\n                id=\"reportSequence\"\r\n                name=\"reportSequence\"\r\n                innerRef={props.formProps.register}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          {dateComponent}\r\n          {datesComponent}\r\n          {referenceComponent}\r\n          {referencesComponent}\r\n          {anoComponent}\r\n\r\n          <InputGroupInline\r\n            id=\"printerTypeEnum\"\r\n            label=\"Tipo de Impressão\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Selecione o tipo de impressão\"\r\n            formProps={{ ...props.formProps, validation: { required: true } }}\r\n            inputDropDownProps={{\r\n              optionsProvider: PRINTER_TYPE_ENUM,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n        </AccordionItem>\r\n      </Accordion>\r\n\r\n      <ProcessBar handleSubmit={props.formProps.handleSubmit(onSubmit)} hideCancelButton={true} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportFormView;\r\n"],"sourceRoot":""}
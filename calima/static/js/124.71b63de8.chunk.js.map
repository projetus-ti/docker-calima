{"version":3,"sources":["views/pages/mfp/report/conferenciaGRRF/grrfRV.ts","views/pages/mfp/report/conferenciaGRRF/ConferenciaGRRFReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","dependencies/empresaMFPDependency.ts","models/enumerated/mfp/tipoCalculoEnum.ts"],"names":["DEFAULT_VALUES","Object","objectSpread2","getDefaultReportBasicValues","gerarCabecalhoPadraoAdministradora","somenteConferencia","tipoCalculo","RECISAO","value","DEFAULT_OPTIONS","getDefaultReportViewOptions","exibirConfiguracaoDadosEmpresa","ConferenciaGRRFReportView","props","globalReducer","useSelector","state","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","objectWithoutProperties","useEffect","globalParameter","empresaMFP","referencia","setTimeout","setValue","react_default","a","createElement","summer_esm","title","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMFP","wikiId","ReportForm","assign","localStorageKey","routeProps","reportBasicValues","reportViewOptions","type","name","ref","register","Row","Col","id","label","isPrependLabel","inputProps","autoFocus","validation","required","placeholder","InputType","REFERENCE","DATE","tooltipProps","message","inputDropDownProps","optionsProvider","CONFERENCIA_GRRF_REPORT_VALUES","selectProps","isClearable","DROP_DOWN","result","empresa","__webpack_require__","d","__webpack_exports__","NATUREZA","SALDO_REPORT_ENUM","EmpresaIS","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","inputSearchProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","empresasSelecionadas","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","virtualization","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","errors","getValues","triggerValidation","handleCancel","validateExtras","currentItem","currentValues","parentObject","EnvioEmail","Fragment","sort","detailView","keyField","propName","className","CustomInput","innerRef","maxLength","TEXT_AREA","ReportInputs","_useState","useState","_useState2","slicedToArray","activeTab","setActiveTab","_props$reportViewOpti","printingTypes","resetObject","length","idGerEmpresa","current","currentMomentDate","endDate","dtInicial","formatDate","toDate","DATES","dtFinal","endOf","referenciaInicial","format","REF_PATTERN","REFERENCES","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dtInicialRequired","dateComponent","datesComponent","dtFinalRequired","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","NUMBER","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","disabled","gerarPorEmpresas","style","marginBottom","size","isMulti","segmentacaoFolhaComponent","exibirSegmentacaoFolha","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","exibirImprimirValoresColoridos","firstOpen","extraConfigOpened","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","hidden","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","erros","params","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history","FOLHA","ADIANTAMENTO","FERIAS","RECISAO_COMPLEMENTAR","DECIMO_TERCEIRO_PARCELA_1","DECIMO_TERCEIRO_PARCELA_2","RESILICAO","RESILICAO_COMPLEMENTAR","TIPO_CALCULO_ENUM_VALUES"],"mappings":"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","file":"static/js/124.71b63de8.chunk.js","sourcesContent":["import { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { Vinculo } from '../../../../../models/dtos/mfp/vinculo';\r\n\r\nexport interface GrrfRV extends ReportBasicValues {\r\n  dataRecolhimento?: Date;\r\n  dtAtual?: Date;\r\n  referencia?: string;\r\n  somenteConferencia?: boolean;\r\n  /** Campo utiliza o enumerado TipoCalculoEnum */\r\n  tipoCalculo?: string;\r\n  trabalhadores?: Vinculo[];\r\n}\r\n\r\nexport const CLASS_KEY: string = 'grrfrv';\r\nexport const REPORT_EVENT: string = 'printGuiaGrfc';\r\nexport const REPORT_TITLE: string = 'Conferência GRRF';\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { InputGroupInline, InputType, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMFP } from '../../../../../dependencies/empresaMFPDependency';\r\nimport { getDefaultReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport { CONFERENCIA_GRRF_REPORT_VALUES, RECISAO } from '../../../../../models/enumerated/mfp/tipoCalculoEnum';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { CLASS_KEY, GrrfRV, REPORT_EVENT, REPORT_TITLE } from './grrfRV';\r\n\r\nconst DEFAULT_VALUES: GrrfRV = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n  gerarCabecalhoPadraoAdministradora: true,\r\n  somenteConferencia: true,\r\n  tipoCalculo: RECISAO.value,\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT),\r\n  exibirConfiguracaoDadosEmpresa: true,\r\n};\r\n\r\nconst ConferenciaGRRFReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const { handleSubmit, ...formProps } = useForm<GrrfRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n\r\n  useEffect(\r\n    () => {\r\n      if (globalReducer.globalParameter.empresaMFP) {\r\n        const {\r\n          empresaMFP: { referencia },\r\n        } = globalReducer.globalParameter;\r\n        setTimeout(() => {\r\n          formProps.setValue('referencia', referencia);\r\n        }, 800);\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n  return (\r\n    <WindowComponent\r\n      title=\"Conferência GRRF\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMFP(globalReducer.globalParameter)]}\r\n      wikiId={1110}\r\n    >\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n      >\r\n        <input type=\"hidden\" name=\"somenteConferencia\" ref={formProps.register} />\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"referencia\"\r\n              label=\"Referência\"\r\n              isPrependLabel={true}\r\n              inputProps={{ autoFocus: true }}\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              placeholder=\"Informe a Referência\"\r\n              type={InputType.REFERENCE}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"dataRecolhimento\"\r\n              label=\"Data do Pagamento\"\r\n              isPrependLabel={true}\r\n              inputProps={{ autoFocus: true }}\r\n              formProps={formProps}\r\n              placeholder=\"Informe a Data do Pagamento\"\r\n              type={InputType.DATE}\r\n              tooltipProps={{\r\n                message:\r\n                  'Caso seja informada esta será utilizada como data de previsão para pagamento no relatório de conferência. Caso não seja informada a data de previsão para pagamento será a data do pagamento informada na rescisão',\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"tipoCalculo\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              label=\"Tipo de Cálculo\"\r\n              inputDropDownProps={{\r\n                optionsProvider: CONFERENCIA_GRRF_REPORT_VALUES,\r\n                selectProps: { autoFocus: true, isClearable: false },\r\n              }}\r\n              isPrependLabel={true}\r\n              placeholder=\"Informe o Tipo de Cálculo\"\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </ReportForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default ConferenciaGRRFReportView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMFP(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMFP) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o Módulo Folha de Pagamento. Para configurá-la acesse Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n","export const FOLHA = { value: 'FOLHA', label: 'Folha' };\r\nexport const ADIANTAMENTO = { value: 'ADIANTAMENTO', label: 'Adiantamento' };\r\nexport const FERIAS = { value: 'FERIAS', label: 'Férias' };\r\nexport const RECISAO = { value: 'RECISAO', label: 'Rescisão' };\r\nexport const RECISAO_COMPLEMENTAR = { value: 'RECISAO_COMPLEMENTAR', label: 'Rescisão Complementar' };\r\nexport const DECIMO_TERCEIRO_PARCELA_1 = { value: 'DECIMO_TERCEIRO_PARCELA_1', label: '13º 1ª Parcela' };\r\nexport const DECIMO_TERCEIRO_PARCELA_2 = { value: 'DECIMO_TERCEIRO_PARCELA_2', label: '13º 2ª Parcela' };\r\nexport const RESILICAO = { value: 'RESILICAO', label: 'Resilição' };\r\nexport const RESILICAO_COMPLEMENTAR = { value: 'RESILICAO_COMPLEMENTAR', label: 'Resilição Complementar' };\r\n\r\nexport const TIPO_CALCULO_ENUM_VALUES = [\r\n  FOLHA,\r\n  ADIANTAMENTO,\r\n  FERIAS,\r\n  RECISAO,\r\n  RECISAO_COMPLEMENTAR,\r\n  DECIMO_TERCEIRO_PARCELA_1,\r\n  DECIMO_TERCEIRO_PARCELA_2,\r\n  RESILICAO,\r\n  RESILICAO_COMPLEMENTAR,\r\n];\r\n\r\nexport const CONFERENCIA_GRRF_REPORT_VALUES = [RECISAO, RECISAO_COMPLEMENTAR];\r\n"],"sourceRoot":""}
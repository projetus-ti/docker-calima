{"version":3,"sources":["models/dtos/mfp/feriado.ts","views/pages/mfp/feriado/FeriadoEditView.tsx","dependencies/empresaDependency.ts","views/components/ger/empresaIS/EmpresaIS.tsx","dependencies/empresaMFPDependency.ts","models/dtos/ger/cepUF.ts","models/dtos/ger/cepLocalidade.ts","views/components/ger/cepUFIS/CepUFIS.tsx","views/components/ger/cepLocalidadeIS/CepLocalidadeIS.tsx"],"names":["__webpack_require__","d","__webpack_exports__","CLASS_NAME","FeriadoEditView","props","globalReducer","useSelector","state","selectedItem","getSelectedItem","formProps","useForm","defaultValues","Object","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__","empresas","mode","_useState","useState","_useState2","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isUtilizarEmpresas","setIsUtilizarEmpresas","_useState3","_useState4","isEmpresasDisabled","setIsEmpresasDisabled","_useState5","_useState6","isCepDisabled","setIsCepDisabled","_useState7","_useState8","isCepLocalidadeDisabled","setIsCepLocalidadeDisabled","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_9__","title","dependencies","hasEmpresa","globalParameter","hasEmpresaMFP","editViewProps","dtoClassName","validateExtras","feriado","getValues","errors","mes","dia","push","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","validation","required","maxLength","isPrependLabel","id","label","xs","onlyNumber","min","max","type","InputType","NUMBER","_components_ger_cepUFIS_CepUFIS__WEBPACK_IMPORTED_MODULE_14__","disabled","_components_ger_cepLocalidadeIS_CepLocalidadeIS__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","tag","Row","reactstrap__WEBPACK_IMPORTED_MODULE_8__","name","checked","onChange","setValue","_components_ger_empresaIS_EmpresaIS__WEBPACK_IMPORTED_MODULE_15__","placeholder","inputSearchProps","selectProps","isMulti","result","empresa","EmpresaIS","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","assign","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","searchViewId","INPUT_SEARCH","empresaMFP","CepUFIS","value","searchFilter","setFilter","CepLocalidadeIS","searchExpressionsFull","defaultExpressions","expressions","item","getFilter","CLASS_NAME_UF","fieldName","length"],"mappings":"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","file":"static/js/128.c68821aa.chunk.js","sourcesContent":["import { Basic } from 'summer';\r\nimport { CepLocalidade } from '../ger/cepLocalidade';\r\nimport { CepUF } from '../ger/cepUF';\r\nimport { Empresa } from '../ger/empresa';\r\n\r\nexport interface Feriado extends Basic {\r\n  ano?: number;\r\n  cidade?: CepLocalidade;\r\n  descricao?: string;\r\n  dia?: number;\r\n  empresas?: Empresa[];\r\n  mes?: number;\r\n  uf?: CepUF;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.feriado';\r\n","import React, { FC, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, CustomInput, FormGroup, Row } from 'reactstrap';\r\nimport { EditForm, EditViewProps, getSelectedItem, InputGroupInline, InputType, onlyNumber, WindowComponent } from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMFP } from '../../../../dependencies/empresaMFPDependency';\r\nimport { CLASS_NAME, Feriado } from '../../../../models/dtos/mfp/feriado';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport CepLocalidadeIS from '../../../components/ger/cepLocalidadeIS/CepLocalidadeIS';\r\nimport CepUFIS from '../../../components/ger/cepUFIS/CepUFIS';\r\nimport EmpresaIS from '../../../components/ger/empresaIS/EmpresaIS';\r\n\r\ninterface FeriadoEditViewProps extends EditViewProps<Feriado> {}\r\n\r\nconst FeriadoEditView: FC<FeriadoEditViewProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const selectedItem = getSelectedItem(props);\r\n  const formProps = useForm<Feriado>({\r\n    defaultValues: {\r\n      empresas: [],\r\n      ...selectedItem,\r\n    },\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const [isUtilizarEmpresas, setIsUtilizarEmpresas] = useState(false);\r\n\r\n  const [isEmpresasDisabled, setIsEmpresasDisabled] = useState(true);\r\n\r\n  const [isCepDisabled, setIsCepDisabled] = useState(false);\r\n\r\n  const [isCepLocalidadeDisabled, setIsCepLocalidadeDisabled] = useState(false);\r\n\r\n  const onChangeUtilizarEmpresas = () => {\r\n    if (isUtilizarEmpresas) {\r\n      setIsEmpresasDisabled(true);\r\n      setIsUtilizarEmpresas(false);\r\n      setIsCepLocalidadeDisabled(false);\r\n      setIsCepDisabled(false);\r\n      formProps.setValue('empresas', null, true);\r\n    } else {\r\n      setIsEmpresasDisabled(false);\r\n      setIsUtilizarEmpresas(true);\r\n      setIsCepLocalidadeDisabled(true);\r\n      setIsCepDisabled(true);\r\n      formProps.setValue('uf', null, true);\r\n      formProps.setValue('cidade', null, true);\r\n    }\r\n  };\r\n\r\n  const validateExtras = () => {\r\n    const feriado: Feriado = formProps.getValues();\r\n    const errors = [];\r\n\r\n    // Validação de meses com 30 dias  e fevereiro\r\n    if (\r\n      ((feriado.mes === 4 || feriado.mes === 6 || feriado.mes === 9 || feriado.mes === 11) && feriado.dia > 30) ||\r\n      (feriado.mes === 2 && feriado.dia > 28)\r\n    ) {\r\n      errors.push('Dia inválido');\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Manutenção de Feriados\"\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMFP(globalReducer.globalParameter)]}\r\n    >\r\n      <EditForm formProps={formProps} editViewProps={props} dtoClassName={CLASS_NAME} validateExtras={validateExtras}>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true, maxLength: 500 } }}\r\n              isPrependLabel={true}\r\n              id=\"descricao\"\r\n              label=\"Descrição\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={4}>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true, maxLength: 2, ...onlyNumber(1, 31), min: 1, max: 31 } }}\r\n              isPrependLabel={true}\r\n              id=\"dia\"\r\n              label=\"Dia\"\r\n              type={InputType.NUMBER}\r\n            />\r\n          </Col>\r\n          <Col xs={4}>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true, maxLength: 2, ...onlyNumber(1, 12), min: 1, max: 12 } }}\r\n              isPrependLabel={true}\r\n              id=\"mes\"\r\n              label=\"Mês\"\r\n              type={InputType.NUMBER}\r\n            />\r\n          </Col>\r\n          <Col xs={4}>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { maxLength: 4, ...onlyNumber(0, 4), min: 1930, max: 3000 } }}\r\n              isPrependLabel={true}\r\n              id=\"ano\"\r\n              label=\"Ano\"\r\n              type={InputType.NUMBER}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <CepUFIS id=\"uf\" formProps={formProps} disabled={isCepDisabled} />\r\n          </Col>\r\n          <Col>\r\n            <CepLocalidadeIS id=\"cidade\" formProps={formProps} disabled={isCepLocalidadeDisabled} />\r\n          </Col>\r\n        </Row>\r\n        <FormGroup tag={Row}>\r\n          <Col>\r\n            <CustomInput\r\n              id=\"isEmpresasSelecionadas\"\r\n              label=\"Exclusivo por Empresas\"\r\n              name=\"isEmpresasSelecionadas\"\r\n              type=\"switch\"\r\n              checked={isUtilizarEmpresas}\r\n              onChange={onChangeUtilizarEmpresas}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        <Row>\r\n          <Col>\r\n            <EmpresaIS\r\n              id=\"empresas\"\r\n              formProps={formProps}\r\n              label=\"Empresas\"\r\n              isPrependLabel={true}\r\n              placeholder=\"Selecione o Empresa(s)\"\r\n              inputSearchProps={{ selectProps: { isMulti: true } }}\r\n              disabled={isEmpresasDisabled}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </EditForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default FeriadoEditView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMFP(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMFP) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o Módulo Folha de Pagamento. Para configurá-la acesse Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n","import { Basic } from 'summer';\r\nimport { CepPais } from './cepPais';\r\n\r\nexport interface CepUF extends Basic {\r\n  codigo?: string;\r\n  sigla?: string;\r\n  nome?: string;\r\n  exterior?: boolean;\r\n  pais?: CepPais;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.cepuf';\r\n","import { Basic } from 'summer';\r\nimport { CepUF } from './cepUF';\r\n\r\nexport interface CepLocalidade extends Basic {\r\n  nome?: string;\r\n  cep?: string;\r\n  tipo?: string;\r\n  codigoMunicipio?: string;\r\n  uf?: CepUF;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.ceplocalidade';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { SearchFilterProps } from '../../../../hooks/useSearchFilter';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepUF';\r\n\r\nexport interface CepUFISProps extends InputProps {\r\n  searchFilter?: SearchFilterProps;\r\n}\r\n\r\nconst CepUFIS: FC<CepUFISProps> = props => {\r\n  const onChange = value => {\r\n    if (props.searchFilter) {\r\n      props.searchFilter.setFilter(CLASS_NAME, value);\r\n    }\r\n    if (props.onChange) {\r\n      props.onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'sigla',\r\n            text: 'Sigla',\r\n          },\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'CepUFSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'UF'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a UF'}\r\n      type={InputType.INPUT_SEARCH}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepUFIS;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { SearchFilterProps } from '../../../../hooks/useSearchFilter';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepLocalidade';\r\nimport { CLASS_NAME as CLASS_NAME_UF } from '../../../../models/dtos/ger/cepUF';\r\n\r\nexport interface CepLocalidadeISProps extends InputProps {\r\n  searchFilter?: SearchFilterProps;\r\n}\r\n\r\nconst CepLocalidadeIS: FC<CepLocalidadeISProps> = props => {\r\n  const searchExpressionsFull = defaultExpressions => {\r\n    const expressions = [];\r\n\r\n    if (props.searchFilter) {\r\n      const item = props.searchFilter.getFilter(CLASS_NAME_UF);\r\n      if (item) {\r\n        expressions.push({\r\n          fieldName: 'uf.id',\r\n          value: item.id,\r\n        });\r\n      }\r\n    }\r\n\r\n    if (expressions.length > 0) {\r\n      expressions[0].expressions = defaultExpressions;\r\n    } else {\r\n      expressions.push(...defaultExpressions);\r\n    }\r\n\r\n    return expressions;\r\n  };\r\n\r\n  const onChange = value => {\r\n    if (props.searchFilter) {\r\n      props.searchFilter.setFilter(CLASS_NAME, value);\r\n    }\r\n    if (props.onChange) {\r\n      props.onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'cep',\r\n            text: 'CEP',\r\n          },\r\n          {\r\n            dataField: 'codigoMunicipio',\r\n            text: 'Código do Município',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressionsFull,\r\n        searchViewId: 'CepLocalidadeSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Cidade'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Cidade'}\r\n      type={InputType.INPUT_SEARCH}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepLocalidadeIS;\r\n"],"sourceRoot":""}
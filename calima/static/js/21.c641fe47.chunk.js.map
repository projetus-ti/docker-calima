{"version":3,"sources":["views/components/mfp/calculoReferenciaIS/CalculoReferenciaIS.tsx","views/pages/mfp/report/contraCheque/contraChequeRV.ts","views/pages/mfp/report/contraCheque/ContraChequeReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","dependencies/empresaMFPDependency.ts","dependencies/grupoEmpresaConfigDependency.ts","models/enumerated/mfp/categoriaEnum.ts","views/components/mfp/vinculoIS/VinculoIS.tsx","models/dtos/mfp/vinculoExample.ts","views/components/mfp/customizacaoTermoIS/CustomizacaoTermoIS.tsx","models/dtos/ger/centroCusto.ts","models/dtos/mfp/tomadorServico.ts","views/components/mcg/centroCustoIS/CentroCustoIS.tsx","views/components/mfp/tomadorServicoIS/TomadorServicoIS.tsx","models/enumerated/mfp/tipoCalculoEnum.ts","models/enumerated/mfp/ordenacaoTrabalhorEnum.ts","models/enumerated/mfp/tipoPagamentoMFPEnum.ts","models/dtos/mfp/calculoReferencia.ts"],"names":["CalculoReferenciaIS","props","react_default","a","createElement","summer_esm","Object","assign","isPrependLabel","type","InputType","INPUT_SEARCH","inputSearchProps","objectSpread2","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","label","placeholder","DEFAULT_VALUES","getDefaultReportBasicValues","DEFAULT_OPTIONS","getDefaultReportViewOptions","exibirConfiguracaoDadosEmpresa","ContraChequeReportView","globalParameter","useSelector","state","globalReducer","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","isEmpresaPeriodica","setIsEmpresaPeriodica","_useState3","_useState4","labelEnviarEmail","setLabelEnviarEmail","tituloFolha","useEffect","setTimeout","setValue","FOLHA","value","MATRICULA","carregarParametrosEmpresa","empresaMFP","tipoPagamento","PERIODICO","carregarUltimoPeriodo","referencia","searchCriteria","className","expressions","fieldName","id","fetchType","max","sortDescending","sortFieldName","start","findAllByExpression","errorFunction","mensagem","showToast","ERROR","thenFunction","result","calculoEncontrado","content","diaInicial","diaFinal","diasUteis","dtPagamento","tipoCalculo","getTextoTipoVinculo","textLabel","_formProps$getValues","getValues","exibirAutonomos","exibirFuncionarios","exibirSocios","insertAntes","propToolTip","messagem","message","placement","title","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMFP","hasGrupoEmpresaConfig","wikiId","ReportForm","localStorageKey","routeProps","reportBasicValues","reportViewOptions","validateExtras","_formProps$getValues2","gerarPorEmpresas","empresasSelecionadas","erros","length","push","Fragment","Row","Col","calculoReferenciaIS_CalculoReferenciaIS","labelWidth","selectProps","isMulti","tooltipProps","Card","CardHeader","CardBody","disabled","validation","required","REFERENCE","inputDropDownProps","optionsProvider","TIPO_CALCULO_ENUM_VALUES","isClearable","DROP_DOWN","onChange","tipo","titulo","ADIANTAMENTO","FERIAS","RECISAO","RECISAO_COMPLEMENTAR","DECIMO_TERCEIRO_PARCELA_1","DECIMO_TERCEIRO_PARCELA_2","style","marginTop","CustomInput","name","innerRef","register","EmpresaIS","VinculoIS","TomadorServicoIS","CentroCustoIS","inputProps","min","NUMBER","ORDENACAO_TRABALHADOR_ENUM_VALUES","withTooltip","enviarEmailParaTrabahador","CustomizacaoTermoIS","apenasMsgContraCheque","apenasMsgAniversario","empresa","__webpack_require__","d","__webpack_exports__","NATUREZA","SALDO_REPORT_ENUM","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","gerarCabecalhoPadraoAdministradora","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","virtualization","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","errors","triggerValidation","handleCancel","currentItem","currentValues","parentObject","EnvioEmail","sort","detailView","keyField","propName","maxLength","TEXT_AREA","ReportInputs","activeTab","setActiveTab","_props$reportViewOpti","printingTypes","resetObject","idGerEmpresa","current","currentMomentDate","endDate","DATE","dtInicial","formatDate","toDate","DATES","dtFinal","endOf","referenciaInicial","format","REF_PATTERN","REFERENCES","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dtInicialRequired","dateComponent","datesComponent","dtFinalRequired","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","marginBottom","size","segmentacaoFolhaComponent","exibirSegmentacaoFolha","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","exibirImprimirValoresColoridos","firstOpen","extraConfigOpened","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","hidden","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","params","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history","grupoEmpresaRaiz","grupoEmpresaConfig","grupoEmpresa","EMP_CONTR_PRAZO_DETERMINADO","EMPREGADO_DOMESTICO","MENOR_APRENDIZ","DIRETOR_EMPRESARIO_NAO_EMP_SEM_FGTS","AUTONOMO_CONTRIB_REMUNERACAO","TRABALHADOR_TEMPORARIO","EMPREGADO_TRABALHADOR_INTERMITENTE","CI_EMPRESARIO_SOCIO","ESTAGIARIO","EMPREGADO_CONTRATO_VERDE_AMARELO_SEM_ANT_FGTS","EMPREGADO_CONTRATO_VERDE_AMARELO_COM_ANT_FGTS","CATEGORIA_ENUM_VALUES","SOCIOS_VALUES","AUTONOMOS_VALUES","TRANSPORTADOR_VALUES","SEM_VINCULO_ESOCIAL_VALUES","TRABAVULSO","extraFields","codigoEsocial","codigoSefip","DIRETOR_NAO_EMP_COM_FGTS","AUTONOMO_CONTRIB_SAL_BASE","TRANSPORTADOR_CONTRIB_REMUNERACAO","TRANSPORTADOR_CONTRIB_SAL_BASE","COOPERADO","TRANSPORTADOR_COOPERADO","TRANSP_AUT_CONTRATADO_POR_CI","TRANSP_COOP_PRESTA_SERV_ENTIDADE_BENE","DIRIGENTE_SINDICAL","TRABALHADOR_AVULSO_PORTUARIO","SERVIDOR_PUBLICO_CONSELHO","CONSCRITO","TRABALHADOR_CEDIDO","CI_TRANSP_AUT_PASSAGEIROS","CI_TRANSP_AUT_CARGA","CI_COOPERADO_COOPERATIVA_PRODUCAO","CI_MICROEMPREENDEDOR_INDIVIDUAL","CI_MAGISTRADO_CLASSISTA","CI_ASSOCIADO_ELEITO_COOPERATIVA","CI_MEMBRO_CONSELHO_TUTELAR","MINISTRO_RELIGIOSO","MEDICO_RESIDENTE","BOLSISTA","PARTICIPANTE_CURSO_SEM_VINCULO","ATLETA_NAO_PROFISSIONAL","searchExpressions","apenasAutonomos","alias","conditionalGroup","apenasAprendizes","apenasDomesticos","apenasEstagiarios","apenasSocios","searchViewProps","apenasInativos","apenasAbonoPecuniario","ABONO_PECUNIARIO","apenasTipo","AVISO_PREVIO_TRABALHADO","AVISO_PREVIO_INDENIZADO","PEDIDO_DEMISSAO","apenasAcordo","AVISO_PREVIO_ACORDO_TRABALHADO","AVISO_PREVIO_ACORDO_INDENIZADO","PEDIDO_DEMISSAO_ACORDO","apenasTermosCompensacaoHoras","TERMO_COMPENSACAO_HORAS","apenasTermoAditivo","TERMO_ADITIVO","apenasCartaRecomendacao","CARTA_RECOMENDACAO","apenasAvisoFerias","AVISO_FERIAS","apenasReciboEntregaCtps","RECIBO_CARTEIRA_DE_TRABALHO_ENTREGA","apenasReciboDevolucaoCtps","RECIBO_CARTEIRA_DE_TRABALHO_DEVOLUCAO","apenasReciboCestaBasica","RECIBO_CESTA_BASICA","apenasReciboValeTransporte","VALE_TRANSPORTE_RECIBO","apenasDeclaracaoOpcaoFgts","DECLARACAO_OPCAO_FGTS","apenasValeAlimentacaoRefeicaoRecibo","VALE_ALIMENTACAO_RECIBO","VALE_REFEICAO_RECIBO","apenasProrrogacaoHoraExtra","ACORDO_PRORROGACAO_HORA_EXTRA","apenasCartaSuspensao","CARTA_SUSPENSAO","apenasCartaPreposicao","CARTA_PREPOSICAO","MSG_CONTRA_CHEQUE","MSG_ANIVERSARIO","apenasReciboProLabore","RECIBO_PRO_LABORE","RESILICAO","RESILICAO_COMPLEMENTAR","CONFERENCIA_GRRF_REPORT_VALUES","ORDENACAO_TRABALHO_MATRICULA_NOME_ENUM_VALUES","ORDENACAO_TRABALHO_CONTROLE_FERIAS_ENUM_VALUES","NOME","LOTACAO_MATRICULA","LOTACAO_NOME","DATA_VENCIMENTO","MENSAL","TIPO_PAGAMENTO_MFP_ENUM_VALUES"],"mappings":"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","file":"static/js/21.c641fe47.chunk.js","sourcesContent":["import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mfp/calculoReferencia';\r\n\r\nconst CalculoReferenciaIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      type={InputType.INPUT_SEARCH}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'referencia',\r\n            text: 'Referência',\r\n          },\r\n          {\r\n            dataField: 'tipoCalculo',\r\n            text: 'Tipo de Cálculo',\r\n          },\r\n          {\r\n            dataField: 'tipoPagamento',\r\n            text: 'Tipo de Pagamento',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'CalculoReferenciaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Cálculo Referência'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Cálculo Referência'}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CalculoReferenciaIS;\r\n","import { CentroCusto } from '../../../../../models/dtos/ger/centroCusto';\r\nimport { EmpresaVW } from '../../../../../models/dtos/ger/empresaVW';\r\nimport { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { CalculoReferencia } from '../../../../../models/dtos/mfp/calculoReferencia';\r\nimport { TomadorServico } from '../../../../../models/dtos/mfp/tomadorServico';\r\nimport { VinculoExample } from '../../../../../models/dtos/mfp/vinculoExample';\r\n\r\nexport interface ContraChequeRV extends ReportBasicValues {\r\n  trabalhadoresSelecionados?: VinculoExample[];\r\n  centrosCusto?: CentroCusto[];\r\n  tomadoresServico?: TomadorServico[];\r\n  periodo?: CalculoReferencia;\r\n  ordemExibicao?: string;\r\n  numeroVias?: number;\r\n  tipoCalculo?: string;\r\n  referencia?: string;\r\n  exibirFundo?: boolean;\r\n  enviarEmailParaTrabahador?: boolean;\r\n  exibirCargo?: boolean;\r\n  exibirCpf?: boolean;\r\n  exibirPis?: boolean;\r\n  exibirAutonomos?: boolean;\r\n  exibirFuncionarios?: boolean;\r\n  exibirSocios?: boolean;\r\n  exibirDocumentoTomador?: boolean;\r\n  empresasSelecionadas?: EmpresaVW[];\r\n  termoContraCheque?: string;\r\n  termoAniversario?: string;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'contrachequerv';\r\nexport const REPORT_EVENT: string = 'printContraCheque';\r\nexport const REPORT_TITLE: string = 'Recibo de Pagamento';\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Card, CardBody, CardHeader, Col, CustomInput, Row } from 'reactstrap';\r\nimport {\r\n  ERROR,\r\n  findAllByExpression,\r\n  InputGroupInline,\r\n  InputTooltipProps,\r\n  InputType,\r\n  SearchCriteria,\r\n  showToast,\r\n  WindowComponent,\r\n  WindowComponentProps,\r\n  withTooltip,\r\n} from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMFP } from '../../../../../dependencies/empresaMFPDependency';\r\nimport { hasGrupoEmpresaConfig } from '../../../../../dependencies/grupoEmpresaConfigDependency';\r\nimport { getDefaultReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport { CalculoReferencia, CLASS_NAME } from '../../../../../models/dtos/mfp/calculoReferencia';\r\nimport { MATRICULA, ORDENACAO_TRABALHADOR_ENUM_VALUES } from '../../../../../models/enumerated/mfp/ordenacaoTrabalhorEnum';\r\nimport {\r\n  ADIANTAMENTO,\r\n  DECIMO_TERCEIRO_PARCELA_1,\r\n  DECIMO_TERCEIRO_PARCELA_2,\r\n  FERIAS,\r\n  FOLHA,\r\n  RECISAO,\r\n  RECISAO_COMPLEMENTAR,\r\n  TIPO_CALCULO_ENUM_VALUES,\r\n} from '../../../../../models/enumerated/mfp/tipoCalculoEnum';\r\nimport { PERIODICO } from '../../../../../models/enumerated/mfp/tipoPagamentoMFPEnum';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport EmpresaIS from '../../../../components/ger/empresaIS/EmpresaIS';\r\nimport CentroCustoIS from '../../../../components/mcg/centroCustoIS/CentroCustoIS';\r\nimport CalculoReferenciaIS from '../../../../components/mfp/calculoReferenciaIS/CalculoReferenciaIS';\r\nimport CustomizacaoTermoIS from '../../../../components/mfp/customizacaoTermoIS/CustomizacaoTermoIS';\r\nimport TomadorServicoIS from '../../../../components/mfp/tomadorServicoIS/TomadorServicoIS';\r\nimport VinculoIS from '../../../../components/mfp/vinculoIS/VinculoIS';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { CLASS_KEY, ContraChequeRV, REPORT_EVENT, REPORT_TITLE } from './contraChequeRV';\r\n\r\nconst DEFAULT_VALUES: ContraChequeRV = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT),\r\n  exibirConfiguracaoDadosEmpresa: false,\r\n};\r\n\r\nconst ContraChequeReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const { globalParameter } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const { handleSubmit, ...formProps } = useForm<ContraChequeRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n  const [isEmpresaPeriodica, setIsEmpresaPeriodica] = useState();\r\n  const [labelEnviarEmail, setLabelEnviarEmail] = useState('Enviar e-mail para Autônomos, Funcionários, Sócios');\r\n  const tituloFolha = 'Recibo de Pagamento de Salário';\r\n  const labelWidth = 200;\r\n\r\n  useEffect(\r\n    () => {\r\n      setTimeout(() => {\r\n        formProps.setValue('tipoCalculo', FOLHA.value);\r\n        formProps.setValue('title', tituloFolha);\r\n        formProps.setValue('envioEmail.assunto', tituloFolha);\r\n        formProps.setValue('ordemExibicao', MATRICULA.value);\r\n        formProps.setValue('numeroVias', 2);\r\n        formProps.setValue('exibirFundo', true);\r\n        formProps.setValue('exibirDocumentoTomador', true);\r\n        formProps.setValue('trabalhadoresSelecionados', []);\r\n        formProps.setValue('tomadoresServico', []);\r\n        carregarParametrosEmpresa();\r\n      }, 200);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const onChangeTipoCalculo = tipo => {\r\n    let titulo;\r\n\r\n    switch (tipo) {\r\n      case FOLHA.value:\r\n        titulo = tituloFolha;\r\n        break;\r\n      case ADIANTAMENTO.value:\r\n        titulo = 'Recibo de Pgto. de Adiantamento';\r\n        break;\r\n      case FERIAS.value:\r\n        titulo = 'Recibo de Pagamento de Férias';\r\n        break;\r\n      case RECISAO.value:\r\n        titulo = 'Recibo de Pagamento de Rescisão';\r\n        break;\r\n      case RECISAO_COMPLEMENTAR.value:\r\n        titulo = 'Recibo de Pgto de Rescisão Complementar';\r\n        break;\r\n      case DECIMO_TERCEIRO_PARCELA_1.value:\r\n        titulo = 'Recibo da 1ª Parcela do 13º';\r\n        break;\r\n      case DECIMO_TERCEIRO_PARCELA_2.value:\r\n        titulo = 'Recibo da 2ª Parcela do 13º';\r\n        break;\r\n      default:\r\n        titulo = 'Recibo de Pagamento';\r\n    }\r\n\r\n    formProps.setValue('title', titulo);\r\n    formProps.setValue('envioEmail.assunto', titulo);\r\n  };\r\n\r\n  const carregarParametrosEmpresa = () => {\r\n    if (globalParameter.empresaMFP.tipoPagamento === PERIODICO.value) {\r\n      setIsEmpresaPeriodica(true);\r\n      carregarUltimoPeriodo();\r\n    }\r\n    formProps.setValue('referencia', globalParameter.empresaMFP.referencia);\r\n  };\r\n\r\n  const carregarUltimoPeriodo = () => {\r\n    const searchCriteria: SearchCriteria = {\r\n      className: CLASS_NAME,\r\n      expressions: [\r\n        {\r\n          fieldName: 'empresaMFP.id',\r\n          value: globalParameter.empresaMFP.id,\r\n        },\r\n      ],\r\n      fetchType: 'PAGED',\r\n      max: 1,\r\n      sortDescending: true,\r\n      sortFieldName: 'referencia',\r\n      start: 0,\r\n    };\r\n\r\n    findAllByExpression(searchCriteria, {\r\n      errorFunction: mensagem => {\r\n        showToast(mensagem, ERROR);\r\n      },\r\n      thenFunction: result => {\r\n        if (result) {\r\n          const calculoEncontrado: CalculoReferencia = result.content[0];\r\n          formProps.setValue('calculoReferencia', calculoEncontrado);\r\n          formProps.setValue('periodoReferencia', calculoEncontrado.referencia);\r\n          formProps.setValue('periodoDiaInicial', calculoEncontrado.diaInicial);\r\n          formProps.setValue('periodoDiaFinal', calculoEncontrado.diaFinal);\r\n          formProps.setValue('periodoDiasUteis', calculoEncontrado.diasUteis || 0);\r\n          formProps.setValue('periodoDtPagamento', calculoEncontrado.dtPagamento);\r\n          formProps.setValue('periodoTipoCalculo', calculoEncontrado.tipoCalculo);\r\n          formProps.setValue('periodoTipoPagamento', calculoEncontrado.tipoPagamento);\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  const getTextoTipoVinculo = () => {\r\n    let textLabel = 'Enviar e-mail para ';\r\n    const { exibirAutonomos, exibirFuncionarios, exibirSocios } = formProps.getValues();\r\n\r\n    if ((exibirAutonomos && exibirFuncionarios && exibirSocios) || (!exibirAutonomos && !exibirFuncionarios && !exibirSocios)) {\r\n      textLabel += 'Autônomos, Funcionários e Sócios';\r\n    } else {\r\n      let insertAntes = false;\r\n      if (exibirAutonomos) {\r\n        textLabel += 'Autônomos';\r\n        insertAntes = true;\r\n      }\r\n      if (exibirFuncionarios) {\r\n        if (insertAntes) {\r\n          textLabel += ' e ';\r\n        }\r\n        textLabel += 'Funcionários';\r\n        insertAntes = true;\r\n      }\r\n      if (exibirSocios) {\r\n        if (insertAntes) {\r\n          textLabel += ' e ';\r\n        }\r\n        textLabel += 'Sócios';\r\n      }\r\n    }\r\n    setLabelEnviarEmail(textLabel);\r\n  };\r\n\r\n  const onChangeEnviarEmail = () => {\r\n    formProps.setValue('enviarPorEmail', formProps.getValues().enviarEmailParaTrabahador);\r\n  };\r\n\r\n  const onChangeGerarPorEmpresas = () => {\r\n    formProps.setValue('empresasSelecionadas', []);\r\n    formProps.setValue('trabalhadoresSelecionados', []);\r\n    formProps.setValue('centrosCusto', []);\r\n    formProps.setValue('tomadoresServico', []);\r\n  };\r\n\r\n  const propToolTip = (messagem: string): InputTooltipProps => {\r\n    return {\r\n      message: messagem,\r\n      placement: 'top-start',\r\n    };\r\n  };\r\n\r\n  const validateExtras = () => {\r\n    const { gerarPorEmpresas, empresasSelecionadas } = formProps.getValues();\r\n    const erros = [];\r\n\r\n    if (gerarPorEmpresas && empresasSelecionadas.length === 0) {\r\n      erros.push('O Campo Empresas não pode estar em branco quando a opção \"Gerar por Empresas\" estiver selecionada.');\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Recibo de Pagamento\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalParameter}\r\n      dependencies={[() => hasEmpresa(globalParameter), () => hasEmpresaMFP(globalParameter), () => hasGrupoEmpresaConfig(globalParameter)]}\r\n      wikiId={3785}\r\n    >\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n        validateExtras={validateExtras}\r\n      >\r\n        {isEmpresaPeriodica ? (\r\n          <>\r\n            <Row>\r\n              <Col>\r\n                <CalculoReferenciaIS\r\n                  labelWidth={labelWidth}\r\n                  label=\"Período\"\r\n                  id=\"calculoReferencia\"\r\n                  formProps={formProps}\r\n                  inputSearchProps={{ selectProps: { isMulti: false } }}\r\n                  tooltipProps={{ message: 'Escolha o Período em que o cálculo desejado foi efetuado.' }}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Card>\r\n              <CardHeader className=\"font-weight-bold bg-light\">Último Período Calculado pela Empresa Atual</CardHeader>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      labelWidth={labelWidth}\r\n                      id=\"periodoReferencia\"\r\n                      formProps={formProps}\r\n                      disabled={true}\r\n                      label=\"Referência\"\r\n                      isPrependLabel={true}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      labelWidth={labelWidth}\r\n                      id=\"periodoDtPagamento\"\r\n                      formProps={formProps}\r\n                      disabled={true}\r\n                      label=\"Dt. Pagamento\"\r\n                      isPrependLabel={true}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      labelWidth={labelWidth}\r\n                      id=\"periodoDiaInicial\"\r\n                      formProps={formProps}\r\n                      disabled={true}\r\n                      label=\"Dia Inicial\"\r\n                      isPrependLabel={true}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      labelWidth={labelWidth}\r\n                      id=\"periodoDiaFinal\"\r\n                      formProps={formProps}\r\n                      disabled={true}\r\n                      label=\"Dia Final\"\r\n                      isPrependLabel={true}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      labelWidth={labelWidth}\r\n                      id=\"periodoTipoCalculo\"\r\n                      formProps={formProps}\r\n                      disabled={true}\r\n                      label=\"Tipo de Cálc.\"\r\n                      isPrependLabel={true}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      labelWidth={labelWidth}\r\n                      id=\"periodoTipoPagamento\"\r\n                      formProps={formProps}\r\n                      disabled={true}\r\n                      label=\"Tipo de Pag.\"\r\n                      isPrependLabel={true}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      labelWidth={labelWidth}\r\n                      id=\"periodoDiasUteis\"\r\n                      formProps={formProps}\r\n                      disabled={true}\r\n                      label=\"Dias Úteis\"\r\n                      isPrependLabel={true}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n            <br />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Row>\r\n              <Col className=\"col-4\">\r\n                <InputGroupInline\r\n                  labelWidth={labelWidth}\r\n                  formProps={{ ...formProps, validation: { required: true } }}\r\n                  id=\"referencia\"\r\n                  isPrependLabel={true}\r\n                  label=\"Referência\"\r\n                  type={InputType.REFERENCE}\r\n                />\r\n              </Col>\r\n              <Col className=\"col-8\">\r\n                <InputGroupInline\r\n                  labelWidth={labelWidth}\r\n                  id=\"tipoCalculo\"\r\n                  label=\"Tipo de Cálculo\"\r\n                  formProps={formProps}\r\n                  isPrependLabel={true}\r\n                  inputDropDownProps={{ optionsProvider: TIPO_CALCULO_ENUM_VALUES, isClearable: false }}\r\n                  type={InputType.DROP_DOWN}\r\n                  placeholder=\"Selecione o Tipo de Cálculo\"\r\n                  onChange={onChangeTipoCalculo}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"col-4\" style={{ marginTop: '10px' }}>\r\n                <CustomInput\r\n                  labelWidth={labelWidth}\r\n                  type=\"switch\"\r\n                  id=\"gerarPorEmpresas\"\r\n                  name=\"gerarPorEmpresas\"\r\n                  label=\"Gerar por Empresas\"\r\n                  innerRef={formProps.register}\r\n                  onChange={onChangeGerarPorEmpresas}\r\n                />\r\n              </Col>\r\n              <Col className=\"col-8\">\r\n                <EmpresaIS\r\n                  labelWidth={labelWidth}\r\n                  formProps={formProps}\r\n                  label=\"Empresa(s)\"\r\n                  placeholder=\"Selecione uma ou várias empresas\"\r\n                  id=\"empresasSelecionadas\"\r\n                  isPrependLabel={true}\r\n                  disabled={!formProps.getValues().gerarPorEmpresas}\r\n                  inputSearchProps={{ selectProps: { isMulti: true } }}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        )}\r\n        <Row>\r\n          <Col>\r\n            <VinculoIS\r\n              labelWidth={labelWidth}\r\n              id=\"trabalhadoresSelecionados\"\r\n              formProps={formProps}\r\n              label=\"Trabalhadores\"\r\n              placeholder=\"Selecione os Trabalhadores\"\r\n              isPrependLabel={true}\r\n              inputSearchProps={{ selectProps: { isMulti: true } }}\r\n              tooltipProps={{ message: 'Trabalhadores a serem exibidos. Caso nenhum seja selecionado, todos serão exibidos.' }}\r\n              disabled={formProps.getValues().gerarPorEmpresas}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <TomadorServicoIS\r\n              labelWidth={labelWidth}\r\n              id=\"tomadoresServico\"\r\n              formProps={formProps}\r\n              label=\"Tomadores de Serviço\"\r\n              placeholder=\"Selecione os Tomadores\"\r\n              isPrependLabel={true}\r\n              inputSearchProps={{ selectProps: { isMulti: true } }}\r\n              tooltipProps={{ message: 'Tomadores a serem exibidos. Caso nenhum seja selecionado, todos serão exibidos.' }}\r\n              disabled={formProps.getValues().gerarPorEmpresas}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <CentroCustoIS\r\n              labelWidth={labelWidth}\r\n              id=\"centroCusto\"\r\n              formProps={formProps}\r\n              label=\"Centro de Custo\"\r\n              inputSearchProps={{ selectProps: { isMulti: true } }}\r\n              disabled={formProps.getValues().gerarPorEmpresas}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              labelWidth={labelWidth}\r\n              id=\"numeroVias\"\r\n              inputProps={true}\r\n              label=\"Número de Vias\"\r\n              formProps={{ ...formProps, validation: { min: 1 } }}\r\n              isPrependLabel={true}\r\n              placeholder=\"Informe o número de vias\"\r\n              type={InputType.NUMBER}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              labelWidth={labelWidth}\r\n              id=\"ordemExibicao\"\r\n              label=\"Ordem de exibição\"\r\n              isPrependLabel={true}\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              inputDropDownProps={{\r\n                optionsProvider: ORDENACAO_TRABALHADOR_ENUM_VALUES,\r\n                selectProps: { isClearable: false },\r\n              }}\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"idexibirDocumentoTomador\"\r\n              name=\"exibirDocumentoTomador\"\r\n              label=\"Exibir documento (CNPJ/CEI) do Tomador\"\r\n              innerRef={formProps.register}\r\n            />\r\n            {withTooltip(\r\n              propToolTip(\r\n                'Caso exista Tomador associado aos vencimentos do vínculo, o documento do mesmo será apresentado no recibo, caso não exista será apresentado o da empresa.'\r\n              ),\r\n              'exibirDocumentoTomador'\r\n            )}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <CustomInput type=\"switch\" id=\"exibirFundo\" name=\"exibirFundo\" label=\"Exibir Cor de Fundo\" innerRef={formProps.register} />\r\n          </Col>\r\n          <Col>\r\n            <CustomInput type=\"switch\" id=\"exibirCargo\" name=\"exibirCargo\" label=\"Exibir Cargo\" innerRef={formProps.register} />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <CustomInput type=\"switch\" id=\"exibirPis\" name=\"exibirPis\" label=\"Exibir PIS\" innerRef={formProps.register} />\r\n          </Col>\r\n          <Col>\r\n            <CustomInput type=\"switch\" id=\"exibirCpf\" name=\"exibirCpf\" label=\"Exibir CPF\" innerRef={formProps.register} />\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Card>\r\n          <CardHeader className=\"font-weight-bold bg-light\">Gerar apenas para</CardHeader>\r\n          <CardBody>\r\n            <Row>\r\n              <Col>\r\n                <CustomInput\r\n                  onChange={getTextoTipoVinculo}\r\n                  type=\"switch\"\r\n                  id=\"idexibirAutonomos\"\r\n                  name=\"exibirAutonomos\"\r\n                  label=\"Autônomos\"\r\n                  innerRef={formProps.register}\r\n                />\r\n                {withTooltip(\r\n                  propToolTip('Ao selecionar esta opção somente serão gerados recibos de pagamento de trabalhadores de autonômos.'),\r\n                  'exibirAutonomos'\r\n                )}\r\n              </Col>\r\n              <Col>\r\n                <CustomInput\r\n                  onChange={getTextoTipoVinculo}\r\n                  type=\"switch\"\r\n                  id=\"idexibirFuncionarios\"\r\n                  name=\"exibirFuncionarios\"\r\n                  label=\"Funcionários\"\r\n                  innerRef={formProps.register}\r\n                />\r\n                {withTooltip(\r\n                  propToolTip('Ao selecionar esta opção somente serão gerados recibos de pagamento de trabalhadores empregados.'),\r\n                  'exibirFuncionarios'\r\n                )}\r\n              </Col>\r\n              <Col>\r\n                <CustomInput\r\n                  onChange={getTextoTipoVinculo}\r\n                  type=\"switch\"\r\n                  id=\"idexibirSocios\"\r\n                  name=\"exibirSocios\"\r\n                  label=\"Sócios\"\r\n                  innerRef={formProps.register}\r\n                />\r\n                {withTooltip(propToolTip('Ao selecionar esta opção somente serão gerados recibos de pagamento de sócios.'), 'exibirSocios')}\r\n              </Col>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n        <br />\r\n        <Row>\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"enviarEmailParaTrabahador\"\r\n              name=\"enviarEmailParaTrabahador\"\r\n              label={labelEnviarEmail}\r\n              innerRef={formProps.register}\r\n              onChange={onChangeEnviarEmail}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row>\r\n          <Col>\r\n            <CustomizacaoTermoIS\r\n              labelWidth={labelWidth}\r\n              formProps={formProps}\r\n              label=\"Termo Contra-Cheque\"\r\n              apenasMsgContraCheque={true}\r\n              placeholder=\"Selecione o Termo Contra-Cheque\"\r\n              id=\"termoContraCheque\"\r\n              isPrependLabel={true}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <CustomizacaoTermoIS\r\n              labelWidth={labelWidth}\r\n              formProps={formProps}\r\n              label=\"Termo Aniversário\"\r\n              apenasMsgAniversario={true}\r\n              placeholder=\"Selecione o Termo Aniversário\"\r\n              id=\"termoAniversario\"\r\n              isPrependLabel={true}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </ReportForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default ContraChequeReportView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMFP(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMFP) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o Módulo Folha de Pagamento. Para configurá-la acesse Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasGrupoEmpresaConfig(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n\r\n  const msg: string =\r\n    'O Grupo de empresas não está configurado para a empresa selecionada. Para configurar acesse:\\n' +\r\n    'Modulo Principal > Manutenção > Configurações > Grupo de Empresa';\r\n\r\n  if (\r\n    !globalParameter.empresa ||\r\n    !globalParameter.empresa.grupoEmpresaRaiz.grupoEmpresaConfig ||\r\n    !globalParameter.empresa.grupoEmpresa.grupoEmpresaConfig\r\n  ) {\r\n    result = msg;\r\n  }\r\n\r\n  return result;\r\n}\r\n","export const EMPREGADO = {\r\n  extraFields: { codigoEsocial: '101', codigoSefip: '01' },\r\n  label: '01 / 101 - Empregado',\r\n  value: 'EMPREGADO',\r\n};\r\nexport const TRABAVULSO = {\r\n  extraFields: { codigoEsocial: '202', codigoSefip: '02' },\r\n  label: '02 / 202 - Trabalhador Avulso',\r\n  value: 'TRABAVULSO',\r\n};\r\nexport const TRAB_CONTR_NAO_VINC_RGPS = {\r\n  extraFields: { codigoEsocial: '101', codigoSefip: '03' },\r\n  label: '03 / 101 - Trabalhador não vinculado ao RGPS, mas com direito ao FGTS',\r\n  value: 'TRAB_CONTR_NAO_VINC_RGPS',\r\n};\r\nexport const EMP_CONTR_PRAZO_DETERMINADO = {\r\n  extraFields: { codigoEsocial: '105', codigoSefip: '04' },\r\n  label: '04 / 105 - Empregado - Prazo determinado (Lei n° 9.601/98)',\r\n  value: 'EMP_CONTR_PRAZO_DETERMINADO',\r\n};\r\nexport const DIRETOR_NAO_EMP_COM_FGTS = {\r\n  extraFields: { codigoEsocial: '721', codigoSefip: '05' },\r\n  label: '05 / 721 - C.I. - Diretor não empregado com FGTS (Lei nº 8.036/90, art. 16)',\r\n  value: 'DIRETOR_NAO_EMP_COM_FGTS',\r\n};\r\nexport const EMPREGADO_DOMESTICO = {\r\n  extraFields: { codigoEsocial: '104', codigoSefip: '06' },\r\n  label: '06 / 104 - Empregado doméstico',\r\n  value: 'EMPREGADO_DOMESTICO',\r\n};\r\nexport const MENOR_APRENDIZ = {\r\n  extraFields: { codigoEsocial: '103', codigoSefip: '07' },\r\n  label: '07 / 103 - Menor Aprendiz (Lei nº 11.180/2005)',\r\n  value: 'MENOR_APRENDIZ',\r\n};\r\nexport const DIRETOR_EMPRESARIO_NAO_EMP_SEM_FGTS = {\r\n  extraFields: { codigoEsocial: '722', codigoSefip: '11' },\r\n  label: '11 / 722 - C.I. - Diretor não empregado e demais empresários sem FGTS',\r\n  value: 'DIRETOR_EMPRESARIO_NAO_EMP_SEM_FGTS',\r\n};\r\nexport const DEMAIS_AGENTES_PUBLICOS = {\r\n  extraFields: { codigoEsocial: '309', codigoSefip: '12' },\r\n  label: '12 / 309 - Demais agentes públicos',\r\n  value: 'DEMAIS_AGENTES_PUBLICOS',\r\n};\r\nexport const AUTONOMO_CONTRIB_REMUNERACAO = {\r\n  extraFields: { codigoEsocial: '701', codigoSefip: '13' },\r\n  label: '13 / 701 - C.I. – Trabalhador autônomo com contribuição sobre remuneração; trabalhador associado à cooperativa de produção',\r\n  value: 'AUTONOMO_CONTRIB_REMUNERACAO',\r\n};\r\nexport const AUTONOMO_CONTRIB_SAL_BASE = {\r\n  extraFields: { codigoEsocial: '701', codigoSefip: '14' },\r\n  label: '14 / 701 - C.I. - Trabalhador autônomo com contribuição sobre salário base',\r\n  value: 'AUTONOMO_CONTRIB_SAL_BASE',\r\n};\r\nexport const TRANSPORTADOR_CONTRIB_REMUNERACAO = {\r\n  extraFields: { codigoEsocial: '712', codigoSefip: '15' },\r\n  label: '15 / 712 - C.I. - Transportador autônomo, com contribuição sobre remuneração',\r\n  value: 'TRANSPORTADOR_CONTRIB_REMUNERACAO',\r\n};\r\nexport const TRANSPORTADOR_CONTRIB_SAL_BASE = {\r\n  extraFields: { codigoEsocial: '712', codigoSefip: '16' },\r\n  label: '16 / 712 - C.I. - Transportador autônomo, com contribuição sobre salário base',\r\n  value: 'TRANSPORTADOR_CONTRIB_SAL_BASE',\r\n};\r\nexport const COOPERADO = {\r\n  extraFields: { codigoEsocial: '731', codigoSefip: '17' },\r\n  label: '17 / 731 - C.I. - Cooperado que presta serviços a empresas contratantes da cooperativa de trabalho',\r\n  value: 'COOPERADO',\r\n};\r\nexport const TRANSPORTADOR_COOPERADO = {\r\n  extraFields: { codigoEsocial: '734', codigoSefip: '18' },\r\n  label: '18 / 734 - C.I. - Transportador cooperado que presta serviços a empresas contratantes da cooperativa de trabalho',\r\n  value: 'TRANSPORTADOR_COOPERADO',\r\n};\r\nexport const AGENTE_POLITICO = {\r\n  extraFields: { codigoEsocial: '303', codigoSefip: '19' },\r\n  label: '19 / 303 - Agente Político',\r\n  value: 'AGENTE_POLITICO',\r\n};\r\nexport const SERV_PUBLICO_TEMPORARIO = {\r\n  extraFields: { codigoEsocial: '306', codigoSefip: '20' },\r\n  label: '20 / 306 - Servidor Público ocupante, exclusivamente, de cargo em comissão, Servidor Público ocupante de cargo temporário',\r\n  value: 'SERV_PUBLICO_TEMPORARIO',\r\n};\r\nexport const SERV_PUBLICO_EFETIVO = {\r\n  extraFields: { codigoEsocial: '301', codigoSefip: '21' },\r\n  label: '21 / 301 - Servidor Público titular de cargo efetivo, magistrado, membro do Ministério Público e do Tribunal e Conselho de Contas',\r\n  value: 'SERV_PUBLICO_EFETIVO',\r\n};\r\nexport const CI_CONTRATADO_POR_CI = {\r\n  extraFields: { codigoEsocial: '101', codigoSefip: '22' },\r\n  label:\r\n    '22 / 101 - C.I. - Contratado por outro C.I. equiparado a empresa ou por produtor rural pessoa física ou por missão diplomática e repartição consular de carreira estrangeiras',\r\n  value: 'CI_CONTRATADO_POR_CI',\r\n};\r\nexport const TRANSP_AUT_CONTRATADO_POR_CI = {\r\n  extraFields: { codigoEsocial: '101', codigoSefip: '23' },\r\n  label:\r\n    '23 / 101 - C.I. - Transportador autônomo contratado por outro C.I. equiparado à empresa ou por produtor rural pessoa física ou por missão diplomática e ' +\r\n    'repartição consular de carreira estrangeiras',\r\n  value: 'TRANSP_AUT_CONTRATADO_POR_CI',\r\n};\r\nexport const COOPERADO_PRESTA_SERV_ENTIDADE_BENE = {\r\n  extraFields: { codigoEsocial: '101', codigoSefip: '24' },\r\n  label:\r\n    '24 / 101 - C.I. - Cooperado que presta serviços à entidade beneficente de assistência social isenta da cota patronal ou a pessoa física,' +\r\n    ' por intermédioda cooperativa de trabalho',\r\n  value: 'COOPERADO_PRESTA_SERV_ENTIDADE_BENE',\r\n};\r\nexport const TRANSP_COOP_PRESTA_SERV_ENTIDADE_BENE = {\r\n  extraFields: { codigoEsocial: '101', codigoSefip: '25' },\r\n  label:\r\n    '25 / 101 - C.I. - Transportador cooperado que presta serviços a entidade beneficente de assistência social isenta da cota patronal ou a pessoa física, ' +\r\n    'por intermédio da cooperativa de trabalho',\r\n  value: 'TRANSP_COOP_PRESTA_SERV_ENTIDADE_BENE',\r\n};\r\nexport const DIRIGENTE_SINDICAL = {\r\n  extraFields: { codigoEsocial: '401', codigoSefip: '26' },\r\n  label:\r\n    '26 / 401 - Dirigente sindical, em relação ao adicional pago pelo sindicato; magistrado classista temporário da Justiça do Trabalho; magistrado dos Tribunais Eleitorais, ' +\r\n    'quando, nas três situações, for mantida a qualidade de segurado empregado (sem FGTS)',\r\n  value: 'DIRIGENTE_SINDICAL',\r\n};\r\nexport const EMPREGADO_TRABALHADOR_RURAL = {\r\n  extraFields: { codigoEsocial: '102' },\r\n  label: '102 - Empregado - Trabalhador Rural por Pequeno Prazo da Lei 11.718/2008',\r\n  value: 'EMPREGADO_TRABALHADOR_RURAL',\r\n};\r\nexport const TRABALHADOR_TEMPORARIO = {\r\n  extraFields: { codigoEsocial: '106' },\r\n  label: '106 - Trabalhador Temporário - contrato nos termos da Lei 6.019/74',\r\n  value: 'TRABALHADOR_TEMPORARIO',\r\n};\r\nexport const EMPREGADO_TRABALHADOR_INTERMITENTE = {\r\n  extraFields: { codigoEsocial: '111' },\r\n  label: '111 - Empregado - contrato de trabalho intermitente',\r\n  value: 'EMPREGADO_TRABALHADOR_INTERMITENTE',\r\n};\r\nexport const TRABALHADOR_AVULSO_PORTUARIO = {\r\n  extraFields: { codigoEsocial: '201' },\r\n  label: '201 - Trabalhador Avulso Portuário',\r\n  value: 'TRABALHADOR_AVULSO_PORTUARIO',\r\n};\r\nexport const SERVIDOR_PUBLICO_EXCLUSIVO = {\r\n  extraFields: { codigoEsocial: '302' },\r\n  label: '302 - Servidor Público Ocupante de Cargo exclusivo em comissão',\r\n  value: 'SERVIDOR_PUBLICO_EXCLUSIVO',\r\n};\r\nexport const SERVIDOR_PUBLICO_CONSELHO = {\r\n  extraFields: { codigoEsocial: '305' },\r\n  label:\r\n    '305 - Servidor Público indicado para conselho ou órgão deliberativo, na condição de representante do governo, órgão ou entidade da administração pública',\r\n  value: 'SERVIDOR_PUBLICO_CONSELHO',\r\n};\r\nexport const MILITAR_EFETIVO = {\r\n  extraFields: { codigoEsocial: '307' },\r\n  label: '307 - Militar efetivo',\r\n  value: 'MILITAR_EFETIVO',\r\n};\r\nexport const CONSCRITO = {\r\n  extraFields: { codigoEsocial: '308' },\r\n  label: '308 - Conscrito',\r\n  value: 'CONSCRITO',\r\n};\r\nexport const TRABALHADOR_CEDIDO = {\r\n  extraFields: { codigoEsocial: '410' },\r\n  label: '410 - Trabalhador cedido - informação prestada pelo Cessionário',\r\n  value: 'TRABALHADOR_CEDIDO',\r\n};\r\nexport const CI_TRANSP_AUT_PASSAGEIROS = {\r\n  extraFields: { codigoEsocial: '711' },\r\n  label: '711 - Contribuinte individual - Transportador autônomo de passageiros',\r\n  value: 'CI_TRANSP_AUT_PASSAGEIROS',\r\n};\r\nexport const CI_TRANSP_AUT_CARGA = {\r\n  extraFields: { codigoEsocial: '712' },\r\n  label: '712 - Contribuinte individual - Transportador autônomo de carga',\r\n  value: 'CI_TRANSP_AUT_CARGA',\r\n};\r\nexport const CI_EMPRESARIO_SOCIO = {\r\n  extraFields: { codigoEsocial: '723' },\r\n  label: '723 - Contribuinte individual - empresários, sócios e membro de conselho de administração ou fiscal',\r\n  value: 'CI_EMPRESARIO_SOCIO',\r\n};\r\nexport const CI_COOPERADO_COOPERATIVA_PRODUCAO = {\r\n  extraFields: { codigoEsocial: '738' },\r\n  label: '738 - Contribuinte individual - Cooperado filiado a Cooperativa de Produção',\r\n  value: 'CI_COOPERADO_COOPERATIVA_PRODUCAO',\r\n};\r\nexport const CI_MICROEMPREENDEDOR_INDIVIDUAL = {\r\n  extraFields: { codigoEsocial: '741' },\r\n  label: '741 - Contribuinte individual - Microempreendedor Individual',\r\n  value: 'CI_MICROEMPREENDEDOR_INDIVIDUAL',\r\n};\r\nexport const CI_MAGISTRADO_CLASSISTA = {\r\n  extraFields: { codigoEsocial: '751' },\r\n  label:\r\n    '751 - Contribuinte individual - magistrado classista temporário da Justiça do Trabalho ou da Justiça Eleitoral que seja aposentado de qualquer regime previdenciário',\r\n  value: 'CI_MAGISTRADO_CLASSISTA',\r\n};\r\nexport const CI_ASSOCIADO_ELEITO_COOPERATIVA = {\r\n  extraFields: { codigoEsocial: '761' },\r\n  label:\r\n    '761 - Contribuinte individual - Associado eleito para direção de Cooperativa, associação ou entidade de classe qualquer natureza ou finalidade, bem como o síndico ' +\r\n    'ou administrador eleito para exercer atividade de direção condominial, desde que recebam remuneração',\r\n  value: 'CI_ASSOCIADO_ELEITO_COOPERATIVA',\r\n};\r\nexport const CI_MEMBRO_CONSELHO_TUTELAR = {\r\n  extraFields: { codigoEsocial: '771' },\r\n  label: '771 - Contribuinte individual - Membro de conselho tutelar, nos termos da Lei nº 8.069, de 13 julho 1990',\r\n  value: 'CI_MEMBRO_CONSELHO_TUTELAR',\r\n};\r\nexport const MINISTRO_RELIGIOSO = {\r\n  extraFields: { codigoEsocial: '781' },\r\n  label: '781 - Ministro de confissão religiosa ou membro de vida consagrada, de congregação ou de ordem religiosa',\r\n  value: 'MINISTRO_RELIGIOSO',\r\n};\r\nexport const ESTAGIARIO = {\r\n  extraFields: { codigoEsocial: '901', codigoSefip: '45' },\r\n  label: '45 / 901 - Estagiário',\r\n  value: 'ESTAGIARIO',\r\n};\r\nexport const MEDICO_RESIDENTE = {\r\n  extraFields: { codigoEsocial: '902' },\r\n  label: '902 - Médico Residente',\r\n  value: 'MEDICO_RESIDENTE',\r\n};\r\nexport const BOLSISTA = {\r\n  extraFields: { codigoEsocial: '903' },\r\n  label: '903 - Bolsista, nos termos da lei 8958/1994',\r\n  value: 'BOLSISTA',\r\n};\r\nexport const PARTICIPANTE_CURSO_SEM_VINCULO = {\r\n  extraFields: { codigoEsocial: '904' },\r\n  label: '904 - Participante de curso de formação, como etapa de concurso público, sem vínculo de emprego/estatutário',\r\n  value: 'PARTICIPANTE_CURSO_SEM_VINCULO',\r\n};\r\nexport const ATLETA_NAO_PROFISSIONAL = {\r\n  extraFields: { codigoEsocial: '905' },\r\n  label: '905 - Atleta não profissional em formação que receba bolsa',\r\n  value: 'ATLETA_NAO_PROFISSIONAL',\r\n};\r\nexport const EMPREGADO_CONTRATO_VERDE_AMARELO_SEM_ANT_FGTS = {\r\n  extraFields: { codigoEsocial: '107' },\r\n  label: '107 - Empregado - Contrato de trabalho Verde e Amarelo - sem acordo para antecipação mensal da multa rescisória do FGTS',\r\n  value: 'EMPREGADO_CONTRATO_VERDE_AMARELO_SEM_ANT_FGTS',\r\n};\r\nexport const EMPREGADO_CONTRATO_VERDE_AMARELO_COM_ANT_FGTS = {\r\n  extraFields: { codigoEsocial: '108' },\r\n  label: '108 - Empregado - Contrato de trabalho Verde e Amarelo - com acordo para antecipação mensal da multa rescisória do FGTS',\r\n  value: 'EMPREGADO_CONTRATO_VERDE_AMARELO_COM_ANT_FGTS',\r\n};\r\n\r\nexport const CATEGORIA_ENUM_VALUES = [\r\n  EMPREGADO,\r\n  TRABAVULSO,\r\n  TRAB_CONTR_NAO_VINC_RGPS,\r\n  EMP_CONTR_PRAZO_DETERMINADO,\r\n  DIRETOR_NAO_EMP_COM_FGTS,\r\n  EMPREGADO_DOMESTICO,\r\n  MENOR_APRENDIZ,\r\n  DIRETOR_EMPRESARIO_NAO_EMP_SEM_FGTS,\r\n  DEMAIS_AGENTES_PUBLICOS,\r\n  AUTONOMO_CONTRIB_REMUNERACAO,\r\n  AUTONOMO_CONTRIB_SAL_BASE,\r\n  TRANSPORTADOR_CONTRIB_REMUNERACAO,\r\n  TRANSPORTADOR_CONTRIB_SAL_BASE,\r\n  COOPERADO,\r\n  TRANSPORTADOR_COOPERADO,\r\n  AGENTE_POLITICO,\r\n  SERV_PUBLICO_TEMPORARIO,\r\n  SERV_PUBLICO_EFETIVO,\r\n  CI_CONTRATADO_POR_CI,\r\n  TRANSP_AUT_CONTRATADO_POR_CI,\r\n  COOPERADO_PRESTA_SERV_ENTIDADE_BENE,\r\n  TRANSP_COOP_PRESTA_SERV_ENTIDADE_BENE,\r\n  DIRIGENTE_SINDICAL,\r\n  EMPREGADO_TRABALHADOR_RURAL,\r\n  TRABALHADOR_TEMPORARIO,\r\n  EMPREGADO_TRABALHADOR_INTERMITENTE,\r\n  TRABALHADOR_AVULSO_PORTUARIO,\r\n  SERVIDOR_PUBLICO_EXCLUSIVO,\r\n  SERVIDOR_PUBLICO_CONSELHO,\r\n  MILITAR_EFETIVO,\r\n  CONSCRITO,\r\n  TRABALHADOR_CEDIDO,\r\n  CI_TRANSP_AUT_PASSAGEIROS,\r\n  CI_TRANSP_AUT_CARGA,\r\n  CI_EMPRESARIO_SOCIO,\r\n  CI_COOPERADO_COOPERATIVA_PRODUCAO,\r\n  CI_MICROEMPREENDEDOR_INDIVIDUAL,\r\n  CI_MAGISTRADO_CLASSISTA,\r\n  CI_ASSOCIADO_ELEITO_COOPERATIVA,\r\n  CI_MEMBRO_CONSELHO_TUTELAR,\r\n  MINISTRO_RELIGIOSO,\r\n  ESTAGIARIO,\r\n  MEDICO_RESIDENTE,\r\n  BOLSISTA,\r\n  PARTICIPANTE_CURSO_SEM_VINCULO,\r\n  ATLETA_NAO_PROFISSIONAL,\r\n  EMPREGADO_CONTRATO_VERDE_AMARELO_SEM_ANT_FGTS,\r\n  EMPREGADO_CONTRATO_VERDE_AMARELO_COM_ANT_FGTS,\r\n];\r\n\r\nexport const SOCIOS_VALUES = [DIRETOR_NAO_EMP_COM_FGTS, DIRETOR_EMPRESARIO_NAO_EMP_SEM_FGTS, CI_EMPRESARIO_SOCIO];\r\n\r\nexport const AUTONOMOS_VALUES = [\r\n  TRABAVULSO,\r\n  AUTONOMO_CONTRIB_REMUNERACAO,\r\n  TRANSP_COOP_PRESTA_SERV_ENTIDADE_BENE,\r\n  AUTONOMO_CONTRIB_SAL_BASE,\r\n  TRANSPORTADOR_CONTRIB_REMUNERACAO,\r\n  TRANSPORTADOR_COOPERADO,\r\n  COOPERADO,\r\n  TRANSPORTADOR_CONTRIB_SAL_BASE,\r\n  TRANSP_AUT_CONTRATADO_POR_CI,\r\n  CI_TRANSP_AUT_PASSAGEIROS,\r\n  CI_TRANSP_AUT_CARGA,\r\n];\r\n\r\nexport const TRANSPORTADOR_VALUES = [\r\n  TRANSPORTADOR_CONTRIB_REMUNERACAO,\r\n  TRANSPORTADOR_CONTRIB_SAL_BASE,\r\n  TRANSPORTADOR_COOPERADO,\r\n  TRANSP_AUT_CONTRATADO_POR_CI,\r\n  TRANSP_COOP_PRESTA_SERV_ENTIDADE_BENE,\r\n];\r\n\r\nexport const SEM_VINCULO_ESOCIAL_VALUES = [\r\n  TRABALHADOR_AVULSO_PORTUARIO,\r\n  TRABAVULSO,\r\n  SERVIDOR_PUBLICO_CONSELHO,\r\n  CONSCRITO,\r\n  DIRIGENTE_SINDICAL,\r\n  TRABALHADOR_CEDIDO,\r\n  AUTONOMO_CONTRIB_REMUNERACAO,\r\n  AUTONOMO_CONTRIB_SAL_BASE,\r\n  CI_TRANSP_AUT_PASSAGEIROS,\r\n  CI_TRANSP_AUT_CARGA,\r\n  DIRETOR_NAO_EMP_COM_FGTS,\r\n  DIRETOR_EMPRESARIO_NAO_EMP_SEM_FGTS,\r\n  CI_EMPRESARIO_SOCIO,\r\n  COOPERADO,\r\n  TRANSPORTADOR_COOPERADO,\r\n  CI_COOPERADO_COOPERATIVA_PRODUCAO,\r\n  CI_MICROEMPREENDEDOR_INDIVIDUAL,\r\n  CI_MAGISTRADO_CLASSISTA,\r\n  CI_ASSOCIADO_ELEITO_COOPERATIVA,\r\n  CI_MEMBRO_CONSELHO_TUTELAR,\r\n  MINISTRO_RELIGIOSO,\r\n  ESTAGIARIO,\r\n  MEDICO_RESIDENTE,\r\n  BOLSISTA,\r\n  PARTICIPANTE_CURSO_SEM_VINCULO,\r\n  ATLETA_NAO_PROFISSIONAL,\r\n];\r\n\r\nexport const DOMESTICO_TEMPORARIO_VALUES = [EMPREGADO_DOMESTICO, TRABALHADOR_TEMPORARIO];\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { InputSearchProps } from 'summer/dist/views/components/inputSearch/InputSearch';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mfp/vinculoExample';\r\nimport { AUTONOMOS_VALUES, EMPREGADO_DOMESTICO, ESTAGIARIO, MENOR_APRENDIZ, SOCIOS_VALUES } from '../../../../models/enumerated/mfp/categoriaEnum';\r\n\r\nexport interface VinculoInputSearchProps extends InputProps {\r\n  apenasAutonomos?: boolean;\r\n  apenasAprendizes?: boolean;\r\n  apenasDomesticos?: boolean;\r\n  apenasEstagiarios?: boolean;\r\n  apenasInativos?: boolean;\r\n  apenasSocios?: boolean;\r\n}\r\n\r\nconst VinculoIS: FC<VinculoInputSearchProps> = props => {\r\n  function getSearchExpression(): SearchExpression[] {\r\n    let expressions = [];\r\n    if (props.apenasAutonomos) {\r\n      expressions = [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'categoria',\r\n          value: AUTONOMOS_VALUES,\r\n        },\r\n      ];\r\n    }\r\n    if (props.apenasAprendizes) {\r\n      expressions = [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'categoria',\r\n          value: MENOR_APRENDIZ.value,\r\n        },\r\n      ];\r\n    }\r\n    if (props.apenasDomesticos) {\r\n      expressions = [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'categoria',\r\n          value: EMPREGADO_DOMESTICO.value,\r\n        },\r\n      ];\r\n    }\r\n    if (props.apenasEstagiarios) {\r\n      expressions = [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'categoria',\r\n          value: ESTAGIARIO.value,\r\n        },\r\n      ];\r\n    }\r\n    if (props.apenasSocios) {\r\n      expressions = [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'categoria',\r\n          value: SOCIOS_VALUES,\r\n        },\r\n      ];\r\n    }\r\n    return expressions;\r\n  }\r\n\r\n  const inputSearchProps: InputSearchProps<any> = {\r\n    ...props.inputSearchProps,\r\n    columns: [\r\n      {\r\n        dataField: 'matricula',\r\n        text: 'Matrícula',\r\n      },\r\n      {\r\n        dataField: 'nome',\r\n        text: 'Trabalhador',\r\n      },\r\n      {\r\n        dataField: 'categoria',\r\n        text: 'Categoria',\r\n      },\r\n      {\r\n        dataField: 'dataAdmissao',\r\n        text: 'Dt. Admissão',\r\n      },\r\n      {\r\n        dataField: 'dataAfastamentoMovimentacao',\r\n        text: 'Dt. Último Afastamento',\r\n      },\r\n      {\r\n        dataField: 'dataAfastamentoRecisao',\r\n        text: 'Dt. Rescisão',\r\n      },\r\n      {\r\n        dataField: 'cpf',\r\n        text: 'CPF',\r\n      },\r\n    ],\r\n    dtoClassName: CLASS_NAME,\r\n    searchExpressions: getSearchExpression,\r\n    searchViewId: 'VinculoSearchView',\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      type={InputType.INPUT_SEARCH}\r\n      inputSearchProps={inputSearchProps}\r\n      searchViewProps={{ apenasInativos: props.apenasInativos }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default VinculoIS;\r\n","import { Basic } from 'summer';\r\nimport { EmpresaMFP } from './empresaMFP';\r\n\r\nexport interface VinculoExample extends Basic {\r\n  /** este campo utiliza o enum CategoriaEnum */\r\n  categoria?: string;\r\n  codigo?: string;\r\n  cpf?: string;\r\n  dataAdmissao?: string;\r\n  dataAfastamentoMovimentacao?: string;\r\n  dataAfastamentoRecisao?: string;\r\n  dataAfastamentoResilicao?: string;\r\n  dataRetornoMovimentacao?: string;\r\n  empresaMFP?: EmpresaMFP;\r\n  matricula?: number;\r\n  nome?: string;\r\n  pis?: string;\r\n  /** este campo utiliza o enum TipoResilicaoEnum */\r\n  tipoResilicao?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.vinculoexample';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { InputSearchProps } from 'summer/dist/views/components/inputSearch/InputSearch';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mfp/customizacaoTermos';\r\nimport {\r\n  ABONO_PECUNIARIO,\r\n  ACORDO_PRORROGACAO_HORA_EXTRA,\r\n  AVISO_FERIAS,\r\n  AVISO_PREVIO_ACORDO_INDENIZADO,\r\n  AVISO_PREVIO_ACORDO_TRABALHADO,\r\n  AVISO_PREVIO_INDENIZADO,\r\n  AVISO_PREVIO_TRABALHADO,\r\n  CARTA_PREPOSICAO,\r\n  CARTA_RECOMENDACAO,\r\n  CARTA_SUSPENSAO,\r\n  DECLARACAO_OPCAO_FGTS,\r\n  MSG_ANIVERSARIO,\r\n  MSG_CONTRA_CHEQUE,\r\n  PEDIDO_DEMISSAO,\r\n  PEDIDO_DEMISSAO_ACORDO,\r\n  RECIBO_CARTEIRA_DE_TRABALHO_DEVOLUCAO,\r\n  RECIBO_CARTEIRA_DE_TRABALHO_ENTREGA,\r\n  RECIBO_CESTA_BASICA,\r\n  RECIBO_PRO_LABORE,\r\n  TERMO_ADITIVO,\r\n  TERMO_COMPENSACAO_HORAS,\r\n  VALE_ALIMENTACAO_RECIBO,\r\n  VALE_REFEICAO_RECIBO,\r\n  VALE_TRANSPORTE_RECIBO,\r\n} from '../../../../models/enumerated/mfp/customizacaoTermosTipoEnum';\r\n\r\nexport interface CustomizacaoTermoSearchViewProps extends InputProps {\r\n  apenasAbonoPecuniario?: boolean;\r\n  apenasTipo?: boolean;\r\n  apenasAcordo?: boolean;\r\n  apenasTermosCompensacaoHoras?: boolean;\r\n  apenasTermoAditivo?: boolean;\r\n  apenasCartaRecomendacao?: boolean;\r\n  apenasAvisoFerias?: boolean;\r\n  apenasReciboEntregaCtps?: boolean;\r\n  apenasReciboDevolucaoCtps?: boolean;\r\n  apenasReciboCestaBasica?: boolean;\r\n  apenasReciboValeTransporte?: boolean;\r\n  apenasDeclaracaoOpcaoFgts?: boolean;\r\n  apenasValeAlimentacaoRefeicaoRecibo?: boolean;\r\n  apenasProrrogacaoHoraExtra?: boolean;\r\n  apenasCartaSuspensao?: boolean;\r\n  apenasCartaPreposicao?: boolean;\r\n  apenasMsgContraCheque?: boolean;\r\n  apenasMsgAniversario?: boolean;\r\n  apenasReciboProLabore?: boolean;\r\n}\r\n\r\nconst CustomizacaoTermoIS: FC<CustomizacaoTermoSearchViewProps> = props => {\r\n  function getSearchExpression(): SearchExpression[] {\r\n    if (props.apenasAbonoPecuniario) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: ABONO_PECUNIARIO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasTipo) {\r\n      return [\r\n        {\r\n          alias: 'c1',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: AVISO_PREVIO_TRABALHADO.value,\r\n        },\r\n        {\r\n          alias: 'c2',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: AVISO_PREVIO_INDENIZADO.value,\r\n        },\r\n        {\r\n          alias: 'c3',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: PEDIDO_DEMISSAO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasAcordo) {\r\n      return [\r\n        {\r\n          alias: 'c1',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: AVISO_PREVIO_ACORDO_TRABALHADO.value,\r\n        },\r\n        {\r\n          alias: 'c2',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: AVISO_PREVIO_ACORDO_INDENIZADO.value,\r\n        },\r\n        {\r\n          alias: 'c3',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: PEDIDO_DEMISSAO_ACORDO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasTermosCompensacaoHoras) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: TERMO_COMPENSACAO_HORAS.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasTermoAditivo) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: TERMO_ADITIVO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasCartaRecomendacao) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: CARTA_RECOMENDACAO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasAvisoFerias) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: AVISO_FERIAS.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasReciboEntregaCtps) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: RECIBO_CARTEIRA_DE_TRABALHO_ENTREGA.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasReciboDevolucaoCtps) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: RECIBO_CARTEIRA_DE_TRABALHO_DEVOLUCAO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasReciboCestaBasica) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: RECIBO_CESTA_BASICA.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasReciboValeTransporte) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: VALE_TRANSPORTE_RECIBO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasDeclaracaoOpcaoFgts) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: DECLARACAO_OPCAO_FGTS.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasValeAlimentacaoRefeicaoRecibo) {\r\n      return [\r\n        {\r\n          alias: 'c1',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: VALE_ALIMENTACAO_RECIBO.value,\r\n        },\r\n        {\r\n          alias: 'c2',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: VALE_REFEICAO_RECIBO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasProrrogacaoHoraExtra) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: ACORDO_PRORROGACAO_HORA_EXTRA.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasCartaSuspensao) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: CARTA_SUSPENSAO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasCartaPreposicao) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: CARTA_PREPOSICAO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasMsgContraCheque) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: MSG_CONTRA_CHEQUE.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasMsgAniversario) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: MSG_ANIVERSARIO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasReciboProLabore) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: RECIBO_PRO_LABORE.value,\r\n        },\r\n      ];\r\n    }\r\n    return [];\r\n  }\r\n\r\n  const inputSearchProps: InputSearchProps<any> = {\r\n    ...props.inputSearchProps,\r\n    columns: [\r\n      {\r\n        dataField: 'descricao',\r\n        text: 'Descrição',\r\n      },\r\n      {\r\n        dataField: 'termo',\r\n        text: 'Termo',\r\n      },\r\n    ],\r\n    dtoClassName: CLASS_NAME,\r\n    searchExpressions: getSearchExpression,\r\n    searchViewId: 'CustomizacaoTermosSearchView',\r\n  };\r\n\r\n  return <InputGroupInline {...props} type={InputType.INPUT_SEARCH} inputSearchProps={inputSearchProps} />;\r\n};\r\n\r\nexport default CustomizacaoTermoIS;\r\n","import { Basic } from 'summer';\r\nimport { Bem } from '../mcp/bem';\r\nimport { GrupoCentroCusto } from './grupoCentroCusto';\r\n\r\nexport interface CentroCusto extends Basic {\r\n  codigo?: string;\r\n  codigoReduzido?: number;\r\n  descricao?: string;\r\n  analitica?: boolean;\r\n  grupoCentroCusto?: GrupoCentroCusto;\r\n  bem?: Bem;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.centrocusto';\r\n","import { Basic } from 'summer';\r\nimport { CentroCusto } from '../ger/centroCusto';\r\nimport { Fpas } from './fpas';\r\nimport { Gps } from './gps';\r\nimport { LotacaoTributaria } from './lotacaoTributaria';\r\nimport { TomadorServicoEmail } from './tomadorServicoEmail';\r\nimport { TomadorServicoEndereco } from './tomadorServicoEndereco';\r\nimport { TomadorServicoTelefone } from './tomadorServicoTelefone';\r\n\r\nexport interface TomadorServico extends Basic {\r\n  aliquotaFap?: number;\r\n  aliquotaRat?: number;\r\n  caepf?: string;\r\n  cei?: string;\r\n  centroCusto?: CentroCusto;\r\n  cnaef?: string;\r\n  cnaefDesmembramento?: string;\r\n  cnpj?: string;\r\n  codigo?: number;\r\n  codigoDeducaoTerceiros?: string;\r\n  codigoFpas?: Fpas;\r\n  codigoGps?: Gps;\r\n  codigoGpsTerceiros?: Gps;\r\n  /** este campo utiliza o enum CodigoRecolhimentoEnum */\r\n  codigoRecolhimentoSefip?: string;\r\n  contribuicaoPatronalSubstituida?: boolean;\r\n  /** este campo utiliza o enum TipoControlePontoEnum */\r\n  controlePonto?: string;\r\n  emails?: TomadorServicoEmail[];\r\n  enderecos?: TomadorServicoEndereco[];\r\n  /** este campo utiliza o enum IndicativoContratacaoAprendizEnum */\r\n  indicativoContratacaoAprendiz?: string;\r\n  /** este campo utiliza o enum IndicativoContratacaoPCDEnum */\r\n  indicativoContratacaoPCD?: string;\r\n  isCnpjInscricaoContratante?: boolean;\r\n  isCnpjInscricaoProprietario?: boolean;\r\n  lotacaoTributaria?: LotacaoTributaria;\r\n  nome?: string;\r\n  nrInscricaoProprietario?: string;\r\n  nrInscricaoContratante?: string;\r\n  percentualDesoneracaoGps?: number;\r\n  /** este campo utiliza o enum TipoCAEPFEnum */\r\n  tipoCaepf?: string;\r\n  telefones?: TomadorServicoTelefone[];\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.tomadorservico';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/centroCusto';\r\n\r\nconst CentroCustoIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'CentroCustoSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Centro de Custo'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Centro de Custo'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CentroCustoIS;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mfp/tomadorServico';\r\n\r\nconst TomadorServicoIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      type={InputType.INPUT_SEARCH}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'TomadorServicoSearchView',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TomadorServicoIS;\r\n","export const FOLHA = { value: 'FOLHA', label: 'Folha' };\r\nexport const ADIANTAMENTO = { value: 'ADIANTAMENTO', label: 'Adiantamento' };\r\nexport const FERIAS = { value: 'FERIAS', label: 'Férias' };\r\nexport const RECISAO = { value: 'RECISAO', label: 'Rescisão' };\r\nexport const RECISAO_COMPLEMENTAR = { value: 'RECISAO_COMPLEMENTAR', label: 'Rescisão Complementar' };\r\nexport const DECIMO_TERCEIRO_PARCELA_1 = { value: 'DECIMO_TERCEIRO_PARCELA_1', label: '13º 1ª Parcela' };\r\nexport const DECIMO_TERCEIRO_PARCELA_2 = { value: 'DECIMO_TERCEIRO_PARCELA_2', label: '13º 2ª Parcela' };\r\nexport const RESILICAO = { value: 'RESILICAO', label: 'Resilição' };\r\nexport const RESILICAO_COMPLEMENTAR = { value: 'RESILICAO_COMPLEMENTAR', label: 'Resilição Complementar' };\r\n\r\nexport const TIPO_CALCULO_ENUM_VALUES = [\r\n  FOLHA,\r\n  ADIANTAMENTO,\r\n  FERIAS,\r\n  RECISAO,\r\n  RECISAO_COMPLEMENTAR,\r\n  DECIMO_TERCEIRO_PARCELA_1,\r\n  DECIMO_TERCEIRO_PARCELA_2,\r\n  RESILICAO,\r\n  RESILICAO_COMPLEMENTAR,\r\n];\r\n\r\nexport const CONFERENCIA_GRRF_REPORT_VALUES = [RECISAO, RECISAO_COMPLEMENTAR];\r\n","export const MATRICULA = { value: 'MATRICULA', label: 'Matrícula' };\r\nexport const NOME = { value: 'NOME', label: 'Nome' };\r\nexport const LOTACAO_MATRICULA = { value: 'LOTACAO_MATRICULA', label: 'Lotação e Matrícula' };\r\nexport const LOTACAO_NOME = { value: 'LOTACAO_NOME', label: 'Lotação e Nome' };\r\nexport const DATA_VENCIMENTO = { value: 'DATA_VENCIMENTO', label: 'Data de Vencimento' };\r\n\r\nexport const ORDENACAO_TRABALHO_ENUM_VALUES = [MATRICULA, NOME, LOTACAO_MATRICULA, LOTACAO_NOME, DATA_VENCIMENTO];\r\n\r\nexport const ORDENACAO_TRABALHO_MATRICULA_NOME_ENUM_VALUES = [MATRICULA, NOME];\r\n\r\nexport const ORDENACAO_TRABALHO_CONTROLE_FERIAS_ENUM_VALUES = [MATRICULA, NOME, DATA_VENCIMENTO];\r\n\r\nexport const ORDENACAO_TRABALHADOR_ENUM_VALUES = [MATRICULA, NOME, LOTACAO_MATRICULA, LOTACAO_NOME];\r\n","export const MENSAL = { label: 'Mensais', value: 'MENSAL' };\r\nexport const PERIODICO = { label: 'Periódicos', value: 'PERIODICO' };\r\n\r\nexport const TIPO_PAGAMENTO_MFP_ENUM_VALUES = [MENSAL, PERIODICO];\r\n","import { Basic } from 'summer';\r\nimport { CalculoFormula } from './calculoFormula';\r\nimport { EmpresaMFP } from './empresaMFP';\r\nimport { Ferias } from './ferias';\r\n\r\nexport interface CalculoReferencia extends Basic {\r\n  diaFinal?: number;\r\n  diaInicial?: number;\r\n  diasUteis?: number;\r\n  dtPagamento?: string;\r\n  empresaMFP?: EmpresaMFP;\r\n  listaFerias?: Ferias[];\r\n  privatecalculos?: CalculoFormula[];\r\n  referencia?: string;\r\n  /** este campo utiliza o enum TipoCalculoEnum */\r\n  tipoCalculo?: string;\r\n  /** este campo utiliza o enum TipoPagamentoEnum */\r\n  tipoPagamento?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.calculoreferencia';\r\n"],"sourceRoot":""}
{"version":3,"sources":["views/pages/mcg/integracaoMLF/IntegracaoFiscalContabilProcessView.tsx"],"names":["DEFAULT_VALUES","Object","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__","getDefaultReportBasicValues","REPORT_TITLE","cabecalhoTxt","gerarCabecalhoPadraoAdministradora","title","DEFAULT_OPTIONS","getDefaultReportViewOptions","SIMPLE","value","exibirConfiguracaoDadosEmpresa","IntegracaoFiscalContabilProcessView","props","_useState","useState","_useState2","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","activeTab","setActiveTab","globalReducer","useSelector","state","_useForm","useForm","mode","handleSubmit","allFormProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","formProps","defaultValues","contaPagar","contaReceber","gerarCTranspEntrada","gerarCTranspSaida","gerarEntrada","gerarImpostos","gerarSaida","_useState3","_useState4","showResultView","setShowResultView","_useState5","_useState6","showPrintModal","setShowPrintModal","_useState7","undefined","_useState8","listResult","setListResult","dispatch","useDispatch","callImportacao","data","integracaoFiscalContabil","errorFunction","mensagem","showToast","ERROR","progressActions","hideProgress","thenFunction","result","isEmpty","fracasso","length","sucesso","params","message","type","AlertType","INFORMATION","alertManager","emit","ACTION_EVENTS","SHOW","importResultEvent","useEffect","globalParameter","empresa","_globalReducer$global2","id","empresaMCG","setTimeout","setValue","formatDate","parseRefToDate","refAtual","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_18__","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMCG","_components_resultadoIntegracao_ResultadoIntegracao__WEBPACK_IMPORTED_MODULE_25__","assign","errorList","successList","printReport","reactstrap__WEBPACK_IMPORTED_MODULE_7__","hidden","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","label","isPrependLabel","validation","required","InputType","DATE","className","reactstrap__WEBPACK_IMPORTED_MODULE_10__","tabs","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","cx","active","tabIndex","onClick","target","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","tabId","reactstrap__WEBPACK_IMPORTED_MODULE_15__","name","innerRef","register","erros","_formProps$getValues","getValues","_globalReducer$global","matriz","grupoEmpresaRaiz","contasImpostos","docsEntrada","docsSaida","dtInicial","dtFinal","push","centralizar","grupoEmpresaConfig","grupoEmpresa","grupoPlanoConta","validateExtras","WARNING","showProgress","animated","color","striped","btnSubmitLabel","handleClose","goBack","dispatchClose","history","onClose","reactstrap__WEBPACK_IMPORTED_MODULE_16__","isOpen","size","reactstrap__WEBPACK_IMPORTED_MODULE_17__","_components_report_ReportForm__WEBPACK_IMPORTED_MODULE_24__","routeProps","reportBasicValues","reportViewOptions","addExtraParameters","formData","map","it","extraConfigOpened"],"mappings":"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","file":"static/js/533.e7a51d3e.chunk.js","sourcesContent":["import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, CustomInput, Form, Modal, ModalBody, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  EditViewProps,\r\n  ErroList,\r\n  ERROR,\r\n  formatDate,\r\n  InputGroupInline,\r\n  InputType,\r\n  isEmpty,\r\n  parseRefToDate,\r\n  ProcessBar,\r\n  progressActions,\r\n  showToast,\r\n  SIMPLE,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../dependencies/empresaMCGDependency';\r\nimport { getDefaultReportBasicValues } from '../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../models/dtos/ger/reportViewOptions';\r\nimport { ImportacaoFiscalContabil, ImportacaoFiscalContabilResult } from '../../../../models/dtos/mcg/importacaoFiscalContabil';\r\nimport { integracaoFiscalContabil } from '../../../../services/mcg.service';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport ReportForm from '../../../components/report/ReportForm';\r\nimport ResultadoIntegracao from '../../../components/resultadoIntegracao/ResultadoIntegracao';\r\nimport { PendenciasRV, REPORT_TITLE } from '../../mfp/report/pendencias/pendenciasRV';\r\n\r\ninterface ImportacaoFiscalContabilProcessViewProps extends EditViewProps<ImportacaoFiscalContabil> {}\r\n\r\nconst REPORT_EVENT: string = 'printPendenciasIntegracao';\r\n\r\nconst DEFAULT_VALUES: PendenciasRV = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n  cabecalhoTxt: 'Mensagem',\r\n  gerarCabecalhoPadraoAdministradora: true,\r\n  title: 'Resultado da Integração de Módulo Fiscal.',\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT, SIMPLE.value),\r\n  exibirConfiguracaoDadosEmpresa: false,\r\n};\r\n\r\nconst IntegracaoFiscalContabilProcessView: FC<ImportacaoFiscalContabilProcessViewProps & RouteComponentProps> = props => {\r\n  const [activeTab, setActiveTab] = useState(1);\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const { handleSubmit, ...allFormProps } = useForm<PendenciasRV>({ mode: 'onBlur' });\r\n  const formProps = useForm<ImportacaoFiscalContabil>({\r\n    defaultValues: {\r\n      contaPagar: true,\r\n      contaReceber: true,\r\n      gerarCTranspEntrada: true,\r\n      gerarCTranspSaida: true,\r\n      gerarEntrada: true,\r\n      gerarImpostos: true,\r\n      gerarSaida: true,\r\n    },\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const [showResultView, setShowResultView] = useState(false);\r\n  const [showPrintModal, setShowPrintModal] = useState(false);\r\n  const [listResult, setListResult] = useState(undefined);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handlePrint = () => {\r\n    setShowPrintModal(true);\r\n  };\r\n\r\n  const validateExtras = () => {\r\n    const erros = [];\r\n\r\n    const { contaPagar, contaReceber, gerarImpostos, gerarCTranspEntrada, gerarEntrada, gerarCTranspSaida, gerarSaida } = formProps.getValues();\r\n    const { matriz, grupoEmpresaRaiz } = globalReducer.globalParameter.empresa;\r\n\r\n    const contasImpostos = !contaPagar && !contaReceber && !gerarImpostos;\r\n    const docsEntrada = !gerarCTranspEntrada && !gerarEntrada;\r\n    const docsSaida = !gerarCTranspSaida && !gerarSaida;\r\n\r\n    if (formProps.getValues().dtInicial > formProps.getValues().dtFinal) {\r\n      erros.push('Data Final não pode ser menor que a Data Inicial.');\r\n    }\r\n\r\n    if (contasImpostos && docsEntrada && docsSaida) {\r\n      erros.push('Nenhum opção de importação selecionada.');\r\n    }\r\n\r\n    if (\r\n      matriz &&\r\n      matriz.centralizar === true &&\r\n      grupoEmpresaRaiz.grupoEmpresaConfig !== null &&\r\n      matriz.grupoEmpresa.grupoEmpresaConfig !== null &&\r\n      grupoEmpresaRaiz.grupoEmpresaConfig.grupoPlanoConta.id !== matriz.grupoEmpresa.grupoEmpresaConfig.grupoPlanoConta.id\r\n    ) {\r\n      erros.push(\r\n        'A Empresa Atual precisa ter o mesmo Grupo de Plano de Contas da Empresa Matriz para fazer a integração Fiscal.' +\r\n          ' Configure corretamente em Módulo Princial > Manutenção > Configurações > Grupo de Empresas ' +\r\n          '> Grupo de Plano de Contas'\r\n      );\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  const addExtraParameters = (formData: any) => {\r\n    formData.erros = listResult.fracasso.map(it => it.message);\r\n    return formData;\r\n  };\r\n\r\n  const onClose = (goBack: boolean = true) => {\r\n    dispatchClose(props, props.history, goBack);\r\n  };\r\n\r\n  const handleCancel = () => onClose();\r\n\r\n  const importResultEvent = (result: ImportacaoFiscalContabilResult) => {\r\n    if (result && isEmpty(result.fracasso.length > 0) && isEmpty(result.sucesso.length > 0)) {\r\n      const params: AlertProps = {\r\n        message: 'Não existem registros a serem integrados.',\r\n        type: AlertType.INFORMATION,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      setListResult(result);\r\n      setShowResultView(true);\r\n    }\r\n  };\r\n\r\n  const callImportacao = (data: ImportacaoFiscalContabil) => {\r\n    integracaoFiscalContabil(data, {\r\n      errorFunction: mensagem => {\r\n        showToast(mensagem, ERROR);\r\n        dispatch(progressActions.hideProgress());\r\n      },\r\n      thenFunction: (result: ImportacaoFiscalContabilResult) => {\r\n        dispatch(progressActions.hideProgress());\r\n        importResultEvent(result);\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleImport = (data: ImportacaoFiscalContabil) => {\r\n    const erros = validateExtras();\r\n    if (erros.length > 0) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.WARNING,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      dispatch(\r\n        progressActions.showProgress({\r\n          animated: true,\r\n          className: 'progress-bar-rounded progress-animated-alt',\r\n          color: 'first',\r\n          label: 'Aguarde processando...',\r\n          striped: true,\r\n          value: 100,\r\n        })\r\n      );\r\n      callImportacao(data);\r\n    }\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (globalReducer.globalParameter.empresa) {\r\n        const {\r\n          empresa: { id },\r\n          empresaMCG,\r\n        } = globalReducer.globalParameter;\r\n\r\n        setTimeout(() => {\r\n          formProps.setValue('idGerEmpresa', id);\r\n          formProps.setValue('dtInicial', formatDate(parseRefToDate(empresaMCG.refAtual, 1)));\r\n          formProps.setValue('dtFinal', formatDate(parseRefToDate(empresaMCG.refAtual, 0)));\r\n        }, 1000);\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Integração Fiscal\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMCG(globalReducer.globalParameter)]}\r\n    >\r\n      {showResultView ? (\r\n        <ResultadoIntegracao {...props} errorList={listResult.fracasso} successList={listResult.sucesso} printReport={handlePrint} />\r\n      ) : (\r\n        <Form>\r\n          <InputGroupInline formProps={formProps} id=\"idGerEmpresa\" hidden={true} />\r\n          <Row>\r\n            <Col>\r\n              <InputGroupInline\r\n                id=\"dtInicial\"\r\n                label=\"Data Inicial\"\r\n                isPrependLabel={true}\r\n                formProps={{ ...formProps, validation: { required: true } }}\r\n                type={InputType.DATE}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <InputGroupInline\r\n                id=\"dtFinal\"\r\n                label=\"Data final\"\r\n                isPrependLabel={true}\r\n                formProps={{ ...formProps, validation: { required: true } }}\r\n                type={InputType.DATE}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mb-3\">\r\n            <Col>\r\n              <Nav tabs={true}>\r\n                <NavItem>\r\n                  <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                    Opções de Importação\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n                <TabPane tabId={1} className=\"mb-0 p-3\">\r\n                  <Row className=\"mb-3\">\r\n                    <Col>\r\n                      <CustomInput type=\"switch\" id=\"gerarEntrada\" name=\"gerarEntrada\" label=\"Entrada\" innerRef={formProps.register} />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"mb-3\">\r\n                    <Col>\r\n                      <CustomInput type=\"switch\" id=\"gerarSaida\" name=\"gerarSaida\" label=\"Saída\" innerRef={formProps.register} />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"mb-3\">\r\n                    <Col>\r\n                      <CustomInput\r\n                        type=\"switch\"\r\n                        id=\"gerarCTranspEntrada\"\r\n                        name=\"gerarCTranspEntrada\"\r\n                        label=\"Conhecimento de Transp. Entrada\"\r\n                        innerRef={formProps.register}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"mb-3\">\r\n                    <Col>\r\n                      <CustomInput\r\n                        type=\"switch\"\r\n                        id=\"gerarCTranspSaida\"\r\n                        name=\"gerarCTranspSaida\"\r\n                        label=\"Conhecimento de Transp. Saída\"\r\n                        innerRef={formProps.register}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"mb-3\">\r\n                    <Col>\r\n                      <CustomInput type=\"switch\" id=\"gerarImpostos\" name=\"gerarImpostos\" label=\"Impostos\" innerRef={formProps.register} />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"mb-3\">\r\n                    <Col>\r\n                      <CustomInput type=\"switch\" id=\"contaPagar\" name=\"contaPagar\" label=\"Contas a Pagar\" innerRef={formProps.register} />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"mb-3\">\r\n                    <Col>\r\n                      <CustomInput type=\"switch\" id=\"contaReceber\" name=\"contaReceber\" label=\"Contas a Pagar\" innerRef={formProps.register} />\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n              </TabContent>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <ProcessBar handleSubmit={formProps.handleSubmit(handleImport)} btnSubmitLabel={'Integrar'} handleClose={handleCancel} />\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      )}\r\n\r\n      <Modal isOpen={showPrintModal} size=\"lg\">\r\n        <ModalBody>\r\n          <ReportForm\r\n            routeProps={{ ...props }}\r\n            handleSubmit={handleSubmit}\r\n            formProps={{ ...allFormProps }}\r\n            reportBasicValues={DEFAULT_VALUES}\r\n            reportViewOptions={DEFAULT_OPTIONS}\r\n            addExtraParameters={addExtraParameters}\r\n            extraConfigOpened={true}\r\n          />\r\n        </ModalBody>\r\n      </Modal>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default IntegracaoFiscalContabilProcessView;\r\n"],"sourceRoot":""}
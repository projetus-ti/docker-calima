{"version":3,"sources":["views/pages/mcg/integracaoMHO/IntegracaoHonorariosProcessView.tsx","models/dtos/mcg/integracaoHonorariosParam.ts","dependencies/grupoEmpresaConfigDependency.ts","services/mcg.service.ts","../node_modules/reactstrap/es/Alert.js","models/dtos/mho/empresaMHO.ts","views/components/mho/empresaMHOIS/EmpresaMHOIS.tsx","models/dtos/mho/eventoMHO.ts","views/components/mho/eventoMHOIS/EventoMHOIS.tsx"],"names":["defaultSorted","dataField","order","OrderType","ASC","cellEditProps","blurToSave","mode","ClickEnum","CLICK","IntegracaoHonorariosProcessView","props","globalReducer","useSelector","state","formProps","useForm","_useState","useState","_useState2","Object","slicedToArray","data","setData","_useState3","_useState4","selectedItems","setSelectedItems","dispatch","useDispatch","callIntegracao","progressActions","showProgress","animated","className","color","label","striped","value","setValue","integrarHonorarios","getValues","errorFunction","mensagem","hideProgress","showToast","ERROR","thenFunction","selectRow","clickToSelect","SelectModeEnum","CHECKBOX","onSelect","row","isSelect","filter","it","id","onSelectAll","rows","react_default","a","createElement","summer_esm","title","useGlobalParameter","globalParameter","dependencies","hasGrupoEmpresaConfig","wikiId","Row","Col","isPrependLabel","type","InputType","REFERENCE","EmpresaMHOIS","placeholder","inputSearchProps","selectProps","isMulti","EventoMHOIS","Button","onClick","referencia","buscarLancamentosHonorarios","result","INFORMATION","index_es","icon","length","alertManager","emit","ACTION_EVENTS","SHOW","message","onOkClick","AlertType","WARNING_YES_NO","lib_default","assign","keyField","searchDataGridProps","dtoClassName","columns","editable","sort","text","Alert","empresa","grupoEmpresaRaiz","grupoEmpresaConfig","grupoEmpresa","__webpack_require__","d","__webpack_exports__","getService","create","gerarLancamentosFolhaPagamento","integracaoFolhaParam","param","send","post","integrarFolhaPagamento","lancamentoIntegracaoFolha","integrarMCP","importarParam","importarLancamentoCSV","formDataSend","FormData","append","String","importarDuplicados","importarLancamentosCardinal","_step","_iterator","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__","arquivos","s","n","done","arquivo","file","nomeArquivo","err","e","f","importarLancamentoPadraoCSV","_step2","_iterator2","importarHistoricoCSV","grupoHistoricoDestino","_step3","_iterator3","importarPlanoContaCSV","idEmpresa","grupoPlanoContaDestino","_step4","_iterator4","importarHistorico","importacaoHistorico","importarPlanoConta","importacaoPlanoContaParam","buscarConfigLivroFolhaMCG","get","integracaoFiscalContabil","encerrarContas","contaResultadoEncerramento","force","getDataUltimaContaEncerrada","idGerEmpresa","limparEncerramentoContaResultado","contaResultadoLimpeza","validarReferenciaSPEDECFIrpjCsll","configECFIrpjCsll","validarReferenciaSPEDECFImuneIsenta","configECFImuneIsenta","validarRefRemuneracaoSocio","configECFRemuneracaoSocio","validarQuadroSocietario","configQuadro","obterLucroPrejuizoClassificacao","idGrupoPlanoConta","getSaldo","saldo","validarDadosSpedECF","ecfExportacaoParam","gerarSpedECF","usuario","getArquivoDigitalService","recuperarLancamentoConta","transferenciaLancamentoConta","transferirLancamentoConta","obterBancoPlanoConta","bancoPlanoContaDTO","validarConfigLivroFolha","changeLivroFolha","fecharRestaurar","fechamentoRestauracao","forceFecharRestaurar","verificarErros","erros","gerarSpedContabil","selecaoSped","arquivoRTFEscrituracaoSubstituida","_step5","_iterator5","atributoSelecaoSped","salvarLucroPrejuizoClassificacao","lucroPrejuizoClassificacao","consultarMovimentacao","saldoCriteria","totalizadorLancamento","consulta","getSaldoAnterior","isDataEncerrada","parametros","abrirContas","removeLancamentoPeriodo","obterContasClassificacaoIndireto","salvarClassificacaoIndireto","contaFluxoCaixaIndireto","obterMutacaoPatrimonioLiquido","salvarMutacaoPatrimonioLiquido","mutacaoPatrimonioLiquido","salvarContaResultado","contaResultado","excluirContaResultado","obterContasClassificacaoDireto","salvarClassificacaoDireto","contaFluxoCaixa","findSubGrupo","planoContaSubGrupoParam","removerTodosPlanosConta","removeList","listaPlanoConta","apagarFilha","listSubGrupo","planoConta","referenciarContas","idsPlanoConta","idPlanoContaReferencial","idPlanoContaReferencialECF","desvincularContas","existeLancamentoEmContaAnalitica","idPlanoConta","importarLancamentoMCG","tipoImportacao","sobescrever","versaoSuperiorA2","isEmpty","dtInicial","dtFinal","importarSpedContabil","_step6","_iterator6","gerarManadContabil","refInicial","refFinal","arquivoSFP","evolucaoContaContabilGraf","evolucaoContaContabilGrafParam","composicaoReceitaDespesasGraf","compReceitaDespesasGrafParam","gerarFCONTContabil","fContContabilCrit","obterDadosArquivoExtrato","arquivoSelecionado","idBancoMCG","obterDadosConciliacaoBancariaPeriodo","obterBancoListPlanoConta","conciliarLancamentosExtrato","listConciliacaoBancaria","removerConciliarLancamentosExtrato","listaRemover","removerLancamentosExtratoBancario","eLalurAContas","eLacsAContas","getSaldoDebito","getSaldoCredito","removerLancamentoLote","atualizaCalculoIrpjCsll","integracaoHonorariosParam","lancamentos","isAlteraCalculoIRPJorCSLL","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","prop_types__WEBPACK_IMPORTED_MODULE_4__","prop_types__WEBPACK_IMPORTED_MODULE_4___default","classnames__WEBPACK_IMPORTED_MODULE_5__","classnames__WEBPACK_IMPORTED_MODULE_5___default","_utils__WEBPACK_IMPORTED_MODULE_6__","_Fade__WEBPACK_IMPORTED_MODULE_7__","propTypes","children","node","string","closeClassName","closeAriaLabel","cssModule","object","fade","bool","isOpen","toggle","func","tag","transition","shape","innerRef","oneOfType","defaultProps","unmountOnExit","Tag","attributes","classes","alert-dismissible","closeClasses","alertTransition","baseClass","timeout","in","role","aria-label","aria-hidden","CLASS_NAME","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","searchViewId","INPUT_SEARCH","searchExpressions","alias","conditionalGroup","fieldName"],"mappings":"4PAkCA,MAAMA,EAAoC,CACxC,CACEC,UAAW,aACXC,MAAOC,IAAUC,MAIfC,EAA+B,CACnCC,YAAY,EACZC,KAAMC,IAAUC,OAsLHC,UAnLyEC,KACtF,MAAMC,EAAgBC,YAAmCC,GAASA,EAAMF,eAClEG,EAAYC,YAAmC,CACnDT,KAAM,WAHuFU,EAMvEC,mBAAS,IAN8DC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAMxFK,EANwFH,EAAA,GAMlFI,EANkFJ,EAAA,GAAAK,EAOrDN,mBAA2C,IAPUO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAOxFE,EAPwFD,EAAA,GAOzEE,EAPyEF,EAAA,GAQzFG,EAAWC,cAiFXC,EAAiB,KACrBF,EACEG,KAAgBC,aAAa,CAC3BC,UAAU,EACVC,UAAW,6CACXC,MAAO,QACPC,MAAO,0BACPC,SAAS,EACTC,MAAO,OAGXvB,EAAUwB,SAAS,cAAeb,GAClCc,YAAmBzB,EAAU0B,YAAaf,EAAe,CACvDgB,cAAeC,IACbf,EAASG,KAAgBa,gBACzBC,aAAUF,EAAUG,MAEtBC,aAAc,KACZnB,EAASG,KAAgBa,oBAazBI,EAAY,CAChBC,eAAe,EACf1C,KAAM2C,KAAeC,SACrBC,SAXqB,CAACC,EAAKC,KAC3B3B,EAAiB2B,EAAW,IAAI5B,EAAe2B,GAAO3B,EAAc6B,OAAOC,GAAMA,EAAGC,KAAOJ,EAAII,MAW/FC,YARwB,CAACJ,EAAUK,KACnChC,EAAiB2B,EAAWK,EAAO,MAUrC,OACEC,EAAAC,EAAAC,cAACC,EAAA,GAAD,CACEC,MAAM,4CACNC,oBAAoB,EACpBC,gBAAiBtD,EAAcsD,gBAC/BC,aAAc,CAAC,IAAMC,YAAsBxD,EAAcsD,kBACzDG,OAAQ,MAERT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAkBhD,UAAWA,EAAW0C,GAAG,aAAae,gBAAgB,EAAMpC,MAAM,gBAAaqC,KAAMC,IAAUC,cAGrHf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACE7D,UAAWA,EACXqB,MAAM,aACNyC,YAAY,sCACZpB,GAAG,WACHe,gBAAgB,EAChBM,iBAAkB,CAAEC,YAAa,CAAEC,SAAS,MAE9CpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAalE,UAAWA,EAAW0C,GAAG,YAAYoB,YAAY,wBAC9DjB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAQhD,UAAU,YAAYiD,QAxFT,KACnBpE,EAAU0B,YAAY2C,WACxBC,YAA4BtE,EAAU0B,YAAa,CACjDC,cAAeC,IACbE,aAAUF,EAAUG,KACpBvB,EAAQ,KAEVwB,aAAcuC,IACZ/D,EAAQ+D,MAIZzC,aAAU,oDAAkD0C,MA4EHpD,MAAM,WAC7DyB,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAiBC,KAAK,SADxB,cAGA7B,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAQhD,UAAU,YAAYiD,QA3EjB,KACc,IAAzBzD,EAAcgE,OAChB7C,aAAU,6BAA8B0C,KAExCI,KAAaC,KAAKC,IAAcC,KAAM,CACpCC,QAAS,0GACTC,UAAW,IAAMlE,IACjB2C,KAAMwB,IAAUC,kBAoE+B/D,MAAM,SACrDyB,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAiBC,KAAK,QADxB,aAGA7B,EAAAC,EAAAC,cAACqC,EAAAtC,EAADzC,OAAAgF,OAAA,CACEC,SAAS,MACL1F,EACAA,EAAM2F,oBAHZ,CAIEhF,KAAMA,GAAQ,GACdiF,aClMkB,4EDmMlBC,QAvJ0B,CAC9B,CACEvG,UAAW,sBACXwG,UAAU,EACVC,MAAM,EACNC,KAAM,WAER,CACE1G,UAAW,kBACXwG,UAAU,EACVC,MAAM,EACNC,KAAM,UAER,CACE1G,UAAW,aACXwG,UAAU,EACVC,MAAM,EACNC,KAAM,QAER,CACE1G,UAAW,6BACXwG,UAAU,EACVC,MAAM,EACNC,KAAM,mBAER,CACE1G,UAAW,8BACXwG,UAAU,EACVC,MAAM,EACNC,KAAM,oBAER,CACE1G,UAAW,8BACXwG,UAAU,EACVC,MAAM,EACNC,KAAM,6BAER,CACE1G,UAAW,+BACXwG,UAAU,EACVC,MAAM,EACNC,KAAM,8BAER,CACE1G,UAAW,QACXwG,UAAU,EACVC,MAAM,EACNC,KAAM,UAyGJ3D,UAAWA,EACX3C,cAAeA,EACfL,cAAeA,KAEjB4D,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAOzE,MAAM,SAASD,UAAU,eAAhC,gBAEE0B,EAAAC,EAAAC,cAAA,WAFF,wKEpNH,SAASM,EAAsBF,GACpC,IAAIoB,EAAS,KAcb,OAPGpB,EAAgB2C,SAChB3C,EAAgB2C,QAAQC,iBAAiBC,oBACzC7C,EAAgB2C,QAAQG,aAAaD,qBAEtCzB,EARA,oLAWKA,EAfT2B,EAAAC,EAAAC,EAAA,sBAAA/C,m7EC6DA,SAASgD,IACP,OAAOC,aAAO,QAGT,SAASC,EAA+BC,EAA4CC,GACzFC,aAAKL,IAAaM,KAAkC,kCAAmCH,GAAuBC,GAGzG,SAASG,EAAuBC,EAAwDJ,GAC7FC,aAAKL,IAAaM,KAAkC,0BAA2BE,GAA4BJ,GAGtG,SAASK,EAAYC,EAA4BN,GACtDC,aAAKL,IAAaM,KAAuB,YAAaI,GAAgBN,GAGjE,SAASO,EAAsBzG,EAAoCkG,GACxE,MAAMQ,EAAe,IAAIC,SACzBD,EAAaE,OAAO,aAAcC,OAAO7G,EAAKuF,QAAQpD,KACtDuE,EAAaE,OAAO,qBAAsBC,OAAO7G,EAAK8G,qBACtDJ,EAAaE,OAAO,8BAA+BC,OAAO7G,EAAK+G,8BAJ2C,IAAAC,EAAAC,EAAAnH,OAAAoH,EAAA,EAAApH,CAMpFE,EAAKmH,UAN+E,IAM1G,IAAAF,EAAAG,MAAAJ,EAAAC,EAAAI,KAAAC,MAAqC,OAA1BC,EAA0BP,EAAAhG,MACnC0F,EAAaE,OAAO,WAAYW,EAAQC,KAAMD,EAAQE,cAPkD,MAAAC,GAAAT,EAAAU,EAAAD,GAAA,QAAAT,EAAAW,IAU1GzB,aAAKL,IAAaM,KAAoB,yBAA0BM,GAAeR,GAG1E,SAAS2B,EAA4B7H,EAA0CkG,GACpF,MAAMQ,EAAe,IAAIC,SACzBD,EAAaE,OAAO,aAAcC,OAAO7G,EAAKuF,QAAQpD,KAFgE,IAAA2F,EAAAC,EAAAjI,OAAAoH,EAAA,EAAApH,CAIhGE,EAAKmH,UAJ2F,IAItH,IAAAY,EAAAX,MAAAU,EAAAC,EAAAV,KAAAC,MAAqC,OAA1BC,EAA0BO,EAAA9G,MACnC0F,EAAaE,OAAO,WAAYW,EAAQC,KAAMD,EAAQE,cAL8D,MAAAC,GAAAK,EAAAJ,EAAAD,GAAA,QAAAK,EAAAH,IAOtHzB,aAAKL,IAAaM,KAAoB,+BAAgCM,GAAeR,GAGhF,SAAS8B,EAAqBhI,EAAmCkG,GACtE,MAAMQ,EAAe,IAAIC,SACzBD,EAAaE,OAAO,2BAA4BC,OAAO7G,EAAKiI,sBAAsB9F,KAFsB,IAAA+F,EAAAC,EAAArI,OAAAoH,EAAA,EAAApH,CAIlFE,EAAKmH,UAJ6E,IAIxG,IAAAgB,EAAAf,MAAAc,EAAAC,EAAAd,KAAAC,MAAqC,OAA1BC,EAA0BW,EAAAlH,MACnC0F,EAAaE,OAAO,WAAYW,EAAQC,KAAMD,EAAQE,cALgD,MAAAC,GAAAS,EAAAR,EAAAD,GAAA,QAAAS,EAAAP,IAOxGzB,aAAKL,IAAaM,KAAoB,wBAAyBM,GAAeR,GAGzE,SAASkC,EAAsBpI,EAAoCkG,GACxE,MAAMQ,EAAe,IAAIC,SACzBD,EAAaE,OAAO,YAAaC,OAAO7G,EAAKqI,YAC7C3B,EAAaE,OAAO,4BAA6BC,OAAO7G,EAAKsI,uBAAuBnG,KAHsB,IAAAoG,EAAAC,EAAA1I,OAAAoH,EAAA,EAAApH,CAKpFE,EAAKmH,UAL+E,IAK1G,IAAAqB,EAAApB,MAAAmB,EAAAC,EAAAnB,KAAAC,MAAqC,OAA1BC,EAA0BgB,EAAAvH,MACnC0F,EAAaE,OAAO,WAAYW,EAAQC,KAAMD,EAAQE,cANkD,MAAAC,GAAAc,EAAAb,EAAAD,GAAA,QAAAc,EAAAZ,IAQ1GzB,aAAKL,IAAaM,KAAoB,yBAA0BM,GAAeR,GAG1E,SAASuC,EAAkBC,EAA0CxC,GAC1EC,aAAKL,IAAaM,KAAoB,qBAAsBsC,GAAsBxC,GAG7E,SAASyC,EAAmBC,EAAiD1C,GAClFC,aAAKL,IAAaM,KAAoB,sBAAuBwC,GAA4B1C,GAGpF,SAAS2C,EAA0BR,EAAmBnC,GAC3DC,aAAKL,IAAagD,IAAgB,8BAAgCT,GAAYnC,GAGzE,SAAS6C,EAAyBvC,EAAyCN,GAChFC,aAAKL,IAAaM,KAAqC,4BAA6BI,GAAgBN,GAG/F,SAAS8C,EACdC,EACAC,EACAhD,GAEAC,aACEL,IAAaM,KAAoC,kBAAmB,CAAE6C,6BAA4BC,UAClGhD,GAIG,SAASiD,EAA4BC,EAAsBlD,GAChEC,aAAKL,IAAagD,IAAU,gCAAkCM,GAAelD,GAGxE,SAASmD,EAAiCC,EAA8CpD,GAC7FC,aAAKL,IAAaM,KAAa,wCAAyCkD,GAAwBpD,GAG3F,SAASqD,EAAiCC,EAAsCtD,GACrFC,aAAKL,IAAaM,KAAc,oCAAqCoD,GAAoBtD,GAGpF,SAASuD,EAAoCC,EAA4CxD,GAC9FC,aAAKL,IAAaM,KAAc,uCAAwCsD,GAAuBxD,GAG1F,SAASyD,EAA2BC,EAAsD1D,GAC/FC,aAAKL,IAAaM,KAAc,8BAA+BwD,GAA4B1D,GAGtF,SAAS2D,EAAwBC,EAAgC5D,GACtEC,aAAKL,IAAaM,KAAa,2BAA4B0D,GAAe5D,GAGrE,SAAS6D,EAAgCC,EAA2B9D,GACzEC,aAAKL,IAAagD,IAAQ,oCAAsCkB,GAAoB9D,GAG/E,SAAS+D,EAASC,EAAchE,GACrCC,aAAKL,IAAaM,KAAa,YAAa8D,GAAQhE,GAG/C,SAASiE,EAAoBC,EAAwClE,GAC1EC,aAAKL,IAAaM,KAAoB,uBAAwBgE,GAAqBlE,GAG9E,SAASmE,EAAaC,EAAkBF,EAAwClE,GACrFC,aACEoE,cAA2BnE,KAAa,gBAAiB,CAAEkE,UAASF,uBACpElE,GAIG,SAASsE,EAAyBC,EAA4DvE,GACnGC,aAAKL,IAAaM,KAAmB,4BAA6BqE,GAA+BvE,GAG5F,SAASwE,EAA0BD,EAA4DvE,GACpGC,aAAKL,IAAaM,KAAc,6BAA8BqE,GAA+BvE,GAGxF,SAASyE,EAAqBC,EAAqC1E,GACxEC,aAAKL,IAAaM,KAAe,wBAAyBwE,GAAqB1E,GAG1E,SAAS2E,EAAwBzB,EAAsBlD,GAC5DC,aAAKL,IAAagD,IAAa,4BAA8BM,GAAelD,GAGvE,SAAS4E,EAAiB1B,EAAsBlD,GACrDC,aAAKL,IAAagD,IAAU,qBAAuBM,GAAelD,GAG7D,SAAS6E,EAAgBC,EAAiD9E,GAC/EC,aAAKL,IAAaM,KAAkB,mBAAoB4E,GAAwB9E,GAG3E,SAAS+E,EAAqBD,EAAiD9E,GACpFC,aAAKL,IAAaM,KAAW,wBAAyB4E,GAAwB9E,GAGzE,SAASgF,EAAeC,EAAuBjF,GACpDC,aAAKL,IAAaM,KAAc,kBAAmB+E,GAAQjF,GAGtD,SAASkF,EAAkBC,EAAkCnF,GAClE,MAAMQ,EAAe,IAAIC,SAGzB,GAFAD,EAAaE,OAAO,aAAcC,OAAOwE,EAAYf,QAAQnI,KAEzDkJ,EAAYC,kCAAmC,KAAAC,EAAAC,EAAA1L,OAAAoH,EAAA,EAAApH,CAC3BuL,EAAYC,mCADe,IACjD,IAAAE,EAAApE,MAAAmE,EAAAC,EAAAnE,KAAAC,MAAqE,OAA1DC,EAA0DgE,EAAAvK,MACnE0F,EAAaE,OAAO,oCAAqCW,EAAQC,KAAMD,EAAQE,cAFhC,MAAAC,GAAA8D,EAAA7D,EAAAD,GAAA,QAAA8D,EAAA5D,KAMnD,IAAK,MAAM6D,KAAuBJ,EAEN,sCAAxBI,GACwB,YAAxBA,GACqC,OAArCJ,EAAYI,IAEZ/E,EAAaE,OAAO6E,EAAqBJ,EAAYI,IAGzDtF,aAAKL,IAAaM,KAAa,qBAAsBM,GAAeR,GAG/D,SAASwF,EACdC,EACAzF,GAEAC,aAAKL,IAAaM,KAAiC,oCAAqCuF,GAA6BzF,GAGhH,SAAS0F,EAAsBC,EAA8B3F,GAClEC,aAAKL,IAAaM,KAAwB,yBAA0ByF,GAAgB3F,GAG/E,SAAS4F,EAAsBC,EAAmC7F,GACvEC,aAAKL,IAAaM,KAA4B,yBAA0B2F,GAAW7F,GAG9E,SAAS8F,EAAiBH,EAA8B3F,GAC7DC,aAAKL,IAAaM,KAAa,oBAAqByF,GAAgB3F,GAG/D,SAAS+F,EAAgBC,EAAgChG,GAC9DC,aAAKL,IAAaM,KAAc,mBAAoB8F,GAAahG,GAG5D,SAASiG,EAAYD,EAAgChG,GAC1DC,aAAKL,IAAaM,KAAW,eAAgB8F,GAAahG,GAGrD,SAASkG,EAAwBF,EAAqChG,GAC3EC,aAAKL,IAAaM,KAAa,2BAA4B8F,GAAahG,GAGnE,SAASmG,EAAiCrC,EAA2B9D,GAC1EC,aAAKL,IAAagD,IAA+B,qCAAuCkB,GAAoB9D,GAGvG,SAASoG,EAA4BC,EAAkDrG,GAC5FC,aAAKL,IAAaM,KAAc,+BAAgCmG,GAA0BrG,GAGrF,SAASsG,EAA8BxC,EAA2B9D,GACvEC,aAAKL,IAAagD,IAAQ,kCAAoCkB,GAAoB9D,GAG7E,SAASuG,EAA+BC,EAAoDxG,GACjGC,aAAKL,IAAaM,KAAW,kCAAmCsG,GAA2BxG,GAGtF,SAASyG,EAAqBC,EAAgC1G,GACnEC,aAAKL,IAAaM,KAAW,wBAAyBwG,GAAiB1G,GAGlE,SAAS2G,EAAsBD,EAAgC1G,GACpEC,aAAKL,IAAaM,KAAW,yBAA0BwG,GAAiB1G,GAGnE,SAAS4G,EAA+B9C,EAA2B9D,GACxEC,aAAKL,IAAagD,IAAuB,mCAAqCkB,GAAoB9D,GAG7F,SAAS6G,EAA0BC,EAAkC9G,GAC1EC,aAAKL,IAAaM,KAAc,6BAA8B4G,GAAkB9G,GAG3E,SAAS+G,EAAaC,EAAkDhH,GAC7EC,aAAKL,IAAaM,KAAU,gBAAiB8G,GAA0BhH,GAGlE,SAASiH,GAAwBnD,EAA2BM,EAAkBpE,GACnFC,aACEL,IAAaM,KAAW,2BAA4B,CAAE4D,oBAAmBM,YACzEpE,GAIG,SAASkH,GAAWC,EAA+BC,EAAsBhD,EAAkBpE,GAChGC,aACEL,IAAaM,KAAU,cAAe,CAAEiH,kBAAiBC,cAAahD,YACtEpE,GAIG,SAASqH,GAAaC,EAAwBtH,GACnDC,aAAKL,IAAaM,KAAmB,gBAAiBoH,GAAatH,GAG9D,SAASuH,GACdC,EACAC,EACAC,EACA1H,GAEAC,aACEL,IAAaM,KAAW,qBAAsB,CAAEsH,gBAAeC,0BAAyBC,+BACxF1H,GAIG,SAAS2H,GACdH,EACAC,EACAC,EACA1H,GAEAC,aACEL,IAAaM,KAAW,qBAAsB,CAAEsH,gBAAeC,0BAAyBC,+BACxF1H,GAIG,SAAS4H,GAAiCC,EAAsB1F,EAAmBnC,GACxFC,aACEL,IAAaM,KAAc,oCAAqC,CAAE2H,eAAc1F,cAChFnC,GAIG,SAAS8H,GAAsBhO,EAAsCkG,GAC1E,MAAMQ,EAAe,IAAIC,SACzBD,EAAaE,OAAO,eAAgBC,OAAO7G,EAAKoJ,eAChD1C,EAAaE,OAAO,iBAAkBC,OAAO7G,EAAKiO,iBAClDvH,EAAaE,OAAO,cAAeC,OAAO7G,EAAKkO,cAC/CxH,EAAaE,OAAO,mBAAoBC,OAAO7G,EAAKmO,mBACpDzH,EAAaE,OAAO,UAAW5G,EAAKuH,QAAQ,GAAGC,KAAMxH,EAAKuH,QAAQ,GAAGE,cAEvC,IAA1BzH,EAAKmO,kBAA+BC,aAAQpO,EAAKqO,YAAeD,aAAQpO,EAAKsO,WAC/E5H,EAAaE,OAAO,YAAa5G,EAAKqO,WACtC3H,EAAaE,OAAO,UAAW5G,EAAKsO,UAGtCnI,aAAKL,IAAaM,KAA8C,yBAA0BM,GAAeR,GAGpG,SAASqI,GAAqBvO,EAA8BkG,GACjE,MAAMQ,EAAe,IAAIC,SACzBD,EAAaE,OAAO,aAAcC,OAAO7G,EAAKuF,QAAQpD,KACtDuE,EAAaE,OAAO,aAAcC,OAAO7G,EAAKsK,QAAQnI,KAH6C,IAAAqM,EAAAC,EAAA3O,OAAAoH,EAAA,EAAApH,CAK7EE,EAAKmH,UALwE,IAKnG,IAAAsH,EAAArH,MAAAoH,EAAAC,EAAApH,KAAAC,MAAqC,OAA1BC,EAA0BiH,EAAAxN,MACnC0F,EAAaE,OAAO,WAAYW,EAAQC,KAAMD,EAAQE,cAN2C,MAAAC,GAAA+G,EAAA9G,EAAAD,GAAA,QAAA+G,EAAA7G,IASnGzB,aAAKL,IAAaM,KAAoB,wBAAyBM,GAAeR,GAGzE,SAASwI,GAAmB1O,EAAyBkG,GAC1D,MAAMQ,EAAe,IAAIC,SACzBD,EAAaE,OAAO,aAAc5G,EAAK2O,YACvCjI,EAAaE,OAAO,WAAY5G,EAAK4O,UACrClI,EAAaE,OAAO,eAAgBC,OAAO7G,EAAKoJ,eAChD1C,EAAaE,OAAO,aAAcC,OAAO7G,EAAKsK,QAAQnI,KAEjDiM,aAAQpO,EAAK6O,aAChBnI,EAAaE,OAAO,aAAc5G,EAAK6O,WAAW,GAAGrH,KAAMxH,EAAK6O,WAAW,GAAGpH,aAGhFtB,aAAKL,IAAaM,KAAa,sBAAuBM,GAAeR,GAGhE,SAAS4I,GACdC,EACA7I,GAEAC,aAAKL,IAAaM,KAAsC,6BAA8B2I,GAAiC7I,GAGlH,SAAS8I,GACdC,EACA/I,GAEAC,aAAKL,IAAaM,KAA0C,iCAAkC6I,GAA+B/I,GAGxH,SAASgJ,GAAmBC,EAAsCjJ,GACvEC,aAAKL,IAAaM,KAAW,sBAAuB+I,GAAoBjJ,GAGnE,SAASkJ,GAAyBC,EAAwCC,EAAYpJ,GAC3F,MAAMQ,EAAe,IAAIC,SACzBD,EAAaE,OAAO,aAAc0I,GAElC5I,EAAaE,OAAO,qBAAsByI,EAAmB,GAAG7H,KAAM6H,EAAmB,GAAG5H,aAE5FtB,aAAKL,IAAaM,KAAqB,4BAA6BM,GAAeR,GAG9E,SAASqJ,GACdvF,EACA3B,EACAiH,EACAjB,EACAC,EACApI,GAEA,MAAMQ,EAAe,IAAIC,SACzBD,EAAaE,OAAO,oBAAqBC,OAAOmD,IAChDtD,EAAaE,OAAO,YAAaC,OAAOwB,IACxC3B,EAAaE,OAAO,aAAcC,OAAOyI,IACzC5I,EAAaE,OAAO,YAAaC,OAAOwH,IACxC3H,EAAaE,OAAO,UAAWC,OAAOyH,IAEtCnI,aAAKL,IAAaM,KAA8B,wCAAyCM,GAAeR,GAGnG,SAASsJ,GAAyB5E,EAAqC1E,GAC5EC,aAAKL,IAAaM,KAAiB,4BAA6BwE,GAAqB1E,GAGhF,SAASuJ,GAA4BC,EAAgDxJ,GAC1FC,aAAKL,IAAaM,KAAa,+BAAgCsJ,GAA0BxJ,GAGpF,SAASyJ,GAAmCC,EAAqC1J,GACtFC,aAAKL,IAAaM,KAAa,sCAAuCwJ,GAAe1J,GAGhF,SAAS2J,GAAkCD,EAA8B1J,GAC9EC,aAAKL,IAAaM,KAAa,qCAAsCwJ,GAAe1J,GAG/E,SAAS4J,GAAc3N,EAAY+D,GACxCC,aAAKL,IAAagD,IAAkB,kBAAoB3G,GAAK+D,GAGxD,SAAS6J,GAAa5N,EAAY+D,GACvCC,aAAKL,IAAagD,IAAkB,iBAAmB3G,GAAK+D,GAGvD,SAAS8J,GAAe9D,EAAuBhG,GACpDC,aAAKL,IAAaM,KAAa,kBAAmB8F,GAAahG,GAG1D,SAAS+J,GAAgB/D,EAAuBhG,GACrDC,aAAKL,IAAaM,KAAa,mBAAoB8F,GAAahG,GAG3D,SAASgK,GAAsBhE,EAAkChG,GACtEC,aAAKL,IAAaM,KAAc,yBAA0B8F,GAAahG,GAGlE,SAASiK,GAAwBjE,EAAkChG,GACxEC,aAAKL,IAAaM,KAAc,2BAA4B8F,GAAahG,GAGpE,SAASnC,GACdqM,EACAlK,GAEAC,aAAKL,IAAaM,KAAuC,+BAAgCgK,GAA4BlK,GAGhH,SAAShF,GACdkP,EACAC,EACAnK,GAEAC,aACEL,IAAaM,KAAa,sBAAuB,CAAEgK,4BAA2BC,gBAC9EnK,GAIG,SAASoK,GAA0BpE,EAA6BhG,GACrEC,aAAKL,IAAaM,KAAc,6BAA8B8F,GAAahG,sCC7f7E,IAAAqK,EAAA5K,EAAA,GAAA6K,EAAA7K,EAAA,GAAA8K,EAAA9K,EAAA,IAAA+K,EAAA/K,EAAA,GAAAgL,EAAAhL,EAAA0B,EAAAqJ,GAAAE,EAAAjL,EAAA,GAAAkL,EAAAlL,EAAA0B,EAAAuJ,GAAAE,EAAAnL,EAAA,GAAAoL,EAAApL,EAAA0B,EAAAyJ,GAAAE,EAAArL,EAAA,GAAAsL,EAAAtL,EAAA,IAQAuL,EAAA,CACAC,SAAYN,EAAAtO,EAAS6O,KACrBxQ,UAAaiQ,EAAAtO,EAAS8O,OACtBC,eAAkBT,EAAAtO,EAAS8O,OAC3BE,eAAkBV,EAAAtO,EAAS8O,OAC3BG,UAAaX,EAAAtO,EAASkP,OACtB5Q,MAASgQ,EAAAtO,EAAS8O,OAClBK,KAAQb,EAAAtO,EAASoP,KACjBC,OAAUf,EAAAtO,EAASoP,KACnBE,OAAUhB,EAAAtO,EAASuP,KACnBC,IAAOf,EAAA,EACPgB,WAAcnB,EAAAtO,EAAS0P,MAAOhB,EAAA,EAAIC,WAClCgB,SAAYrB,EAAAtO,EAAS4P,UAAA,CAAYtB,EAAAtO,EAASkP,OAASZ,EAAAtO,EAAS8O,OAASR,EAAAtO,EAASuP,QAE9EM,EAAA,CACAvR,MAAA,UACA+Q,QAAA,EACAG,IAAA,MACAR,eAAA,QACAG,MAAA,EACAM,WAAclS,OAAA2Q,EAAA,EAAA3Q,CAAc,GAAKmR,EAAA,EAAImB,aAAA,CACrCC,eAAA,KAIA,SAAA/M,EAAAjG,GACA,IAAAuB,EAAAvB,EAAAuB,UACA0Q,EAAAjS,EAAAiS,eACAC,EAAAlS,EAAAkS,eACAC,EAAAnS,EAAAmS,UACAc,EAAAjT,EAAA0S,IACAlR,EAAAxB,EAAAwB,MACA+Q,EAAAvS,EAAAuS,OACAC,EAAAxS,EAAAwS,OACAV,EAAA9R,EAAA8R,SACAa,EAAA3S,EAAA2S,WACAN,EAAArS,EAAAqS,KACAQ,EAAA7S,EAAA6S,SACAK,EAAmBzS,OAAA0Q,EAAA,EAAA1Q,CAA6BT,EAAA,uIAEhDmT,EAAgB1S,OAAAkR,EAAA,EAAAlR,CAAgBiR,IAAUnQ,EAAA,iBAAAC,EAAA,CAC1C4R,oBAAAZ,IACGL,GACHkB,EAAqB5S,OAAAkR,EAAA,EAAAlR,CAAgBiR,IAAU,QAAAO,GAAAE,GAE/CmB,EAAwB7S,OAAA2Q,EAAA,EAAA3Q,CAAc,GAAKmR,EAAA,EAAImB,aAAA,GAAiBJ,EAAA,CAChEY,UAAAlB,EAAAM,EAAAY,UAAA,GACAC,QAAAnB,EAAAM,EAAAa,QAAA,IAGA,OAASlC,EAAApO,EAAKC,cAAeyO,EAAA,EAAMnR,OAAAyQ,EAAA,EAAAzQ,CAAQ,GAAGyS,EAAAI,EAAA,CAC9CZ,IAAAO,EACA1R,UAAA4R,EACAM,GAAAlB,EACAmB,KAAA,QACAb,aACGL,EAAYlB,EAAApO,EAAKC,cAAA,UACpBW,KAAA,SACAvC,UAAA8R,EACAM,aAAAzB,EACA1N,QAAAgO,GACKlB,EAAApO,EAAKC,cAAA,QACVyQ,cAAA,QACG,cAAA9B,GAGH7L,EAAA4L,YACA5L,EAAA8M,eACevM,EAAA,sCCzDfF,EAAAC,EAAAC,EAAA,sBAAAqN,IAAO,MAAMA,EAAa,0ICeX5P,IA9BsBjE,IAEjC8T,EAAA5Q,EAAAC,cAAC4Q,EAAA,EAADtT,OAAAgF,OAAA,GACMzF,EADN,CAEE6D,gBAAgB,EAChBM,iBAAgB1D,OAAAuT,EAAA,EAAAvT,QAAAuT,EAAA,EAAAvT,CAAA,GACXT,EAAMmE,kBADK,IAEd0B,QAAS,CACP,CACEvG,UAAW,iBACX0G,KAAM,aAER,CACE1G,UAAW,sBACX0G,KAAM,mBAER,CACE1G,UAAW,gBACX0G,KAAM,sBAGVJ,aAAciO,IACdI,aAAc,yBAEhBxS,MAAM,UACNyC,YAAY,oBACZJ,KAAMC,IAAUmQ,mDCrBtB5N,EAAAC,EAAAC,EAAA,sBAAAqN,IAAO,MAAMA,EAAa,yICyCXvP,IA9CqBtE,KAYlC,OACE8T,EAAA5Q,EAAAC,cAAC4Q,EAAA,EAADtT,OAAAgF,OAAA,GACMzF,EADN,CAEE6D,gBAAgB,EAChBM,iBAAgB1D,OAAAuT,EAAA,EAAAvT,QAAAuT,EAAA,EAAAvT,CAAA,GACXT,EAAMmE,kBADK,IAEd0B,QAAS,CACP,CACEvG,UAAW,SACX0G,KAAM,aAER,CACE1G,UAAW,YACX0G,KAAM,mBAER,CACE1G,UAAW,OACX0G,KAAM,QAER,CACE1G,UAAW,QACX0G,KAAM,UAGVJ,aAAciO,IACdM,kBApCN,WACE,MAAO,CACL,CACEC,MAAO,IACPC,iBAAkB,KAClBC,UAAW,aACX3S,MAAO,YA+BPsS,aAAc,wBAEhBxS,MAAOzB,EAAMyB,MAAQzB,EAAMyB,MAAQ,SACnCyC,YAAalE,EAAMkE,YAAclE,EAAMkE,YAAc,mBACrDJ,KAAMC,IAAUmQ","file":"static/js/203.02bc8ff0.chunk.js","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { FC, useState } from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Alert, Button, Col, Row } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertType,\r\n  CellEditProps,\r\n  ClickEnum,\r\n  ColumnsProps,\r\n  DefaultSortProps,\r\n  ERROR,\r\n  INFORMATION,\r\n  InputGroupInline,\r\n  InputType,\r\n  OrderType,\r\n  progressActions,\r\n  SearchViewProps,\r\n  SelectModeEnum,\r\n  showToast,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { hasGrupoEmpresaConfig } from '../../../../dependencies/grupoEmpresaConfigDependency';\r\nimport { CLASS_NAME, IntegracaoHonorariosParam } from '../../../../models/dtos/mcg/integracaoHonorariosParam';\r\nimport { LancamentoIntegracaoHonorarios } from '../../../../models/dtos/mcg/lancamentoIntegracaoHonorarios';\r\nimport { buscarLancamentosHonorarios, integrarHonorarios } from '../../../../services/mcg.service';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport EmpresaMHOIS from '../../../components/mho/empresaMHOIS/EmpresaMHOIS';\r\nimport EventoMHOIS from '../../../components/mho/eventoMHOIS/EventoMHOIS';\r\n\r\nconst defaultSorted: DefaultSortProps[] = [\r\n  {\r\n    dataField: 'tipoEvento',\r\n    order: OrderType.ASC,\r\n  },\r\n];\r\n\r\nconst cellEditProps: CellEditProps = {\r\n  blurToSave: true,\r\n  mode: ClickEnum.CLICK,\r\n};\r\n\r\nconst IntegracaoHonorariosProcessView: FC<SearchViewProps<IntegracaoHonorariosParam>> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const formProps = useForm<IntegracaoHonorariosParam>({\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const [data, setData] = useState([]);\r\n  const [selectedItems, setSelectedItems] = useState<LancamentoIntegracaoHonorarios[]>([]);\r\n  const dispatch = useDispatch();\r\n\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'empresa.razaoSocial',\r\n      editable: false,\r\n      sort: true,\r\n      text: 'Empresa',\r\n    },\r\n    {\r\n      dataField: 'descricaoEvento',\r\n      editable: false,\r\n      sort: true,\r\n      text: 'Evento',\r\n    },\r\n    {\r\n      dataField: 'tipoEvento',\r\n      editable: false,\r\n      sort: true,\r\n      text: 'Tipo',\r\n    },\r\n    {\r\n      dataField: 'planoContaDebito.descricao',\r\n      editable: false,\r\n      sort: true,\r\n      text: 'Conta Débito',\r\n    },\r\n    {\r\n      dataField: 'planoContaCredito.descricao',\r\n      editable: false,\r\n      sort: true,\r\n      text: 'Conta Crédito',\r\n    },\r\n    {\r\n      dataField: 'centroCustoDebito.descricao',\r\n      editable: false,\r\n      sort: true,\r\n      text: 'Centro de Custo Débito',\r\n    },\r\n    {\r\n      dataField: 'centroCustoCredito.descricao',\r\n      editable: false,\r\n      sort: true,\r\n      text: 'Centro de Custo Crédito',\r\n    },\r\n    {\r\n      dataField: 'valor',\r\n      editable: false,\r\n      sort: true,\r\n      text: 'Valor',\r\n    },\r\n  ];\r\n\r\n  const buscarLancamento = () => {\r\n    if (formProps.getValues().referencia) {\r\n      buscarLancamentosHonorarios(formProps.getValues(), {\r\n        errorFunction: mensagem => {\r\n          showToast(mensagem, ERROR);\r\n          setData([]);\r\n        },\r\n        thenFunction: result => {\r\n          setData(result);\r\n        },\r\n      });\r\n    } else {\r\n      showToast('Selecione uma referência para realizar a busca', INFORMATION);\r\n    }\r\n  };\r\n\r\n  const integrar = () => {\r\n    if (selectedItems.length === 0) {\r\n      showToast('Selecione ao menos um item', INFORMATION);\r\n    } else {\r\n      alertManager.emit(ACTION_EVENTS.SHOW, {\r\n        message: 'Serão gerados lançamentos contábeis de acordo com os registros selecionados. Deseja continuar?',\r\n        onOkClick: () => callIntegracao(),\r\n        type: AlertType.WARNING_YES_NO,\r\n      });\r\n    }\r\n  };\r\n\r\n  const callIntegracao = () => {\r\n    dispatch(\r\n      progressActions.showProgress({\r\n        animated: true,\r\n        className: 'progress-bar-rounded progress-animated-alt',\r\n        color: 'first',\r\n        label: 'Aguarde, processando...',\r\n        striped: true,\r\n        value: 100,\r\n      })\r\n    );\r\n    formProps.setValue('lancamentos', selectedItems);\r\n    integrarHonorarios(formProps.getValues(), selectedItems, {\r\n      errorFunction: mensagem => {\r\n        dispatch(progressActions.hideProgress());\r\n        showToast(mensagem, ERROR);\r\n      },\r\n      thenFunction: () => {\r\n        dispatch(progressActions.hideProgress());\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleOnSelect = (row, isSelect) => {\r\n    setSelectedItems(isSelect ? [...selectedItems, row] : selectedItems.filter(it => it.id !== row.id));\r\n  };\r\n\r\n  const handleOnSelectAll = (isSelect, rows) => {\r\n    setSelectedItems(isSelect ? rows : []);\r\n  };\r\n\r\n  const selectRow = {\r\n    clickToSelect: true,\r\n    mode: SelectModeEnum.CHECKBOX,\r\n    onSelect: handleOnSelect,\r\n    onSelectAll: handleOnSelectAll,\r\n  };\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Integração - Módulo Honorário\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasGrupoEmpresaConfig(globalReducer.globalParameter)]}\r\n      wikiId={2611}\r\n    >\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline formProps={formProps} id=\"referencia\" isPrependLabel={true} label=\"Referência\" type={InputType.REFERENCE} />\r\n        </Col>\r\n      </Row>\r\n      <EmpresaMHOIS\r\n        formProps={formProps}\r\n        label=\"Empresa(s)\"\r\n        placeholder=\"Selecione uma ou várias empresas\"\r\n        id=\"empresas\"\r\n        isPrependLabel={true}\r\n        inputSearchProps={{ selectProps: { isMulti: true } }}\r\n      />\r\n      <EventoMHOIS formProps={formProps} id=\"eventoMHO\" placeholder=\"Selecione um Evento\" />\r\n      <Button className=\"mb-2 mr-2\" onClick={buscarLancamento} color=\"primary\">\r\n        <FontAwesomeIcon icon=\"sync\" /> Consultar\r\n      </Button>\r\n      <Button className=\"mb-2 mr-2\" onClick={integrar} color=\"first\">\r\n        <FontAwesomeIcon icon=\"cog\" /> Integrar\r\n      </Button>\r\n      <BootstrapTable\r\n        keyField=\"id\"\r\n        {...props}\r\n        {...props.searchDataGridProps}\r\n        data={data || []}\r\n        dtoClassName={CLASS_NAME}\r\n        columns={columns}\r\n        selectRow={selectRow}\r\n        cellEditProps={cellEditProps}\r\n        defaultSorted={defaultSorted}\r\n      />\r\n      <Row>\r\n        <Col>\r\n          <Alert color=\"danger\" className=\"text-center\">\r\n            ATENÇÂO\r\n            <br />\r\n            Na relação acima, são exibidos somente eventos lançados e que possuem configuração para a integração.\r\n          </Alert>\r\n        </Col>\r\n      </Row>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default IntegracaoHonorariosProcessView;\r\n","import { Basic } from 'summer';\r\nimport { EmpresaVW } from '../ger/empresaVW';\r\nimport { EventoMHO } from '../mho/eventoMHO';\r\nimport { LancamentoIntegracaoHonorarios } from './lancamentoIntegracaoHonorarios';\r\n\r\nexport interface IntegracaoHonorariosParam extends Basic {\r\n  empresas?: EmpresaVW[];\r\n  eventoMHO?: EventoMHO;\r\n  lancamentos?: LancamentoIntegracaoHonorarios[];\r\n  referencia?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mcg.model.dto.integracaohonorariosparam';\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasGrupoEmpresaConfig(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n\r\n  const msg: string =\r\n    'O Grupo de empresas não está configurado para a empresa selecionada. Para configurar acesse:\\n' +\r\n    'Modulo Principal > Manutenção > Configurações > Grupo de Empresa';\r\n\r\n  if (\r\n    !globalParameter.empresa ||\r\n    !globalParameter.empresa.grupoEmpresaRaiz.grupoEmpresaConfig ||\r\n    !globalParameter.empresa.grupoEmpresa.grupoEmpresaConfig\r\n  ) {\r\n    result = msg;\r\n  }\r\n\r\n  return result;\r\n}\r\n","import { AxiosInstance } from 'axios';\r\nimport { ArquivoSelecionado, AxiosParam, create, isEmpty, send } from 'summer';\r\nimport { PlanoConta } from '../models/dtos/ger/planoConta';\r\nimport { PlanoContaSubGrupoParam } from '../models/dtos/ger/planoContaSubGrupoParam';\r\nimport { RuleMessage } from '../models/dtos/ger/ruleMessage';\r\nimport { Usuario } from '../models/dtos/ger/usuario';\r\nimport { BancoExtrato } from '../models/dtos/mcg/bancoExtrato';\r\nimport { BancoMCG } from '../models/dtos/mcg/bancoMCG';\r\nimport { BancoPlanoConta } from '../models/dtos/mcg/bancoPlanoConta';\r\nimport { CalculoIrpjCsll } from '../models/dtos/mcg/calculoIrpjCsll';\r\nimport { ComposicaoReceitaDespesasGrafParam } from '../models/dtos/mcg/composicaoReceitaDespesasGrafParam';\r\nimport { ComposicaoReceitaDespesasGrafReturn } from '../models/dtos/mcg/composicaoReceitaDespesasGrafReturn';\r\nimport { ConciliacaoBancaria } from '../models/dtos/mcg/conciliacaoBancaria';\r\nimport { ConfigECFImuneIsenta } from '../models/dtos/mcg/configECFImuneIsenta';\r\nimport { ConfigECFIrpjCsll } from '../models/dtos/mcg/configECFIrpjCsll';\r\nimport { ConfigECFRemuneracaoSocio } from '../models/dtos/mcg/configECFRemuneracaoSocio';\r\nimport { ConsultaTotalLancamento } from '../models/dtos/mcg/consultaTotalLancamento';\r\nimport { ContaFluxoCaixa } from '../models/dtos/mcg/contaFluxoCaixa';\r\nimport { ContaFluxoCaixaIndireto } from '../models/dtos/mcg/contaFluxoCaixaIndireto';\r\nimport { ContaResultado } from '../models/dtos/mcg/contaResultado';\r\nimport { ContaResultadoLimpeza } from '../models/dtos/mcg/contaResultadoLimpeza';\r\nimport { ContaResultadoMCGEncerramento } from '../models/dtos/mcg/contaResultadoMCGEncerramento';\r\nimport { DataEncerradaParam } from '../models/dtos/mcg/dataEncerradaParam';\r\nimport { ECFExportacaoParam } from '../models/dtos/mcg/ecfExportacaoParam';\r\nimport { Erros } from '../models/dtos/mcg/erros';\r\nimport { EvolucaoContaContabilGrafParam } from '../models/dtos/mcg/evolucaoContaContabilGrafParam';\r\nimport { EvolucaoContaContabilGrafReturn } from '../models/dtos/mcg/evolucaoContaContabilGrafReturn';\r\nimport { FCONTContabilCrit } from '../models/dtos/mcg/fContContabilCrit';\r\nimport { FechamentoRestauracaoMCG } from '../models/dtos/mcg/fechamentoRestauracaoMCG';\r\nimport { ImportacaoFiscalContabil, ImportacaoFiscalContabilResult } from '../models/dtos/mcg/importacaoFiscalContabil';\r\nimport { ImportacaoHistorico } from '../models/dtos/mcg/importacaoHistorico';\r\nimport { ImportacaoHistoricoCSVParam } from '../models/dtos/mcg/importacaoHistoricoCSVParam';\r\nimport { ImportacaoLancamentoCSVParam } from '../models/dtos/mcg/importacaoLancamentoCSVParam';\r\nimport { ImportacaoLancamentoMCGRetornoValidacao } from '../models/dtos/mcg/importacaoLancamentoMCGRetornoValidacao';\r\nimport { ImportacaoLancamentoMCGSelecao } from '../models/dtos/mcg/importacaoLancamentoMCGSelecao';\r\nimport { ImportacaoLancamentoPadraoCSVParam } from '../models/dtos/mcg/importacaoLancamentoPadraoCSVParam';\r\nimport { ImportacaoPlanoConta } from '../models/dtos/mcg/importacaoPlanoConta';\r\nimport { ImportacaoPlanoContaCSVParam } from '../models/dtos/mcg/importacaoPlanoContaCSVParam';\r\nimport { ImportacaoSpedContabil } from '../models/dtos/mcg/importacaoSpedContabil';\r\nimport { ImportacaoResult, ImportarMCP } from '../models/dtos/mcg/importarMCP';\r\nimport { InfoConciliacaoBancaria } from '../models/dtos/mcg/infoConciliacaoBancaria';\r\nimport { IntegracaoFolhaParam } from '../models/dtos/mcg/integracaoFolhaParam';\r\nimport { IntegracaoHonorariosParam } from '../models/dtos/mcg/integracaoHonorariosParam';\r\nimport { Lancamento } from '../models/dtos/mcg/lancamento';\r\nimport { LancamentoIntegracaoFolha } from '../models/dtos/mcg/lancamentoIntegracaoFolha';\r\nimport { LancamentoIntegracaoHonorarios } from '../models/dtos/mcg/lancamentoIntegracaoHonorarios';\r\nimport { LancamentoSaldo } from '../models/dtos/mcg/lancamentoSaldo';\r\nimport { LivroFolha } from '../models/dtos/mcg/livroFolha';\r\nimport { LucroPrejuizoClassificacao } from '../models/dtos/mcg/lucroPrejuizoClassificacao';\r\nimport { MANADContabilCrit } from '../models/dtos/mcg/manadContabilCrit';\r\nimport { MutacaoPatrimonioLiquido } from '../models/dtos/mcg/mutacaoPatrimonioLiquido';\r\nimport { QuadroSocietario } from '../models/dtos/mcg/quadroSocietario';\r\nimport { RemoveLancamentoLote } from '../models/dtos/mcg/removeLancamentoLote';\r\nimport { RemoveLancamentoPeriodo } from '../models/dtos/mcg/removeLancamentoPeriodo';\r\nimport { Saldo } from '../models/dtos/mcg/saldo';\r\nimport { SaldoCriteria } from '../models/dtos/mcg/saldoCriteria';\r\nimport { SelecaoSpedContabil } from '../models/dtos/mcg/selecaoSpedContabil';\r\nimport { SomaSaldo } from '../models/dtos/mcg/somaSaldo';\r\nimport { TotalizadorLancamento } from '../models/dtos/mcg/totalizadorLancamento';\r\nimport { TransferenciaLancamentoConta } from '../models/dtos/mcg/transferenciaLancamentoConta';\r\nimport { VerificarErros } from '../models/dtos/mcg/verificarErros';\r\nimport { getArquivoDigitalService } from './ger.service';\r\n\r\nfunction getService(): AxiosInstance {\r\n  return create('/mcg');\r\n}\r\n\r\nexport function gerarLancamentosFolhaPagamento(integracaoFolhaParam: IntegracaoFolhaParam, param: AxiosParam<LancamentoIntegracaoFolha[]>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/gerarLancamentosFolhaPagamento', integracaoFolhaParam), param);\r\n}\r\n\r\nexport function integrarFolhaPagamento(lancamentoIntegracaoFolha: LancamentoIntegracaoFolha[], param: AxiosParam<any>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/integrarFolhaPagamento', lancamentoIntegracaoFolha), param);\r\n}\r\n\r\nexport function integrarMCP(importarParam: ImportarMCP, param: AxiosParam<ImportacaoResult>) {\r\n  send(getService().post<ImportacaoResult>('/importar', importarParam), param);\r\n}\r\n\r\nexport function importarLancamentoCSV(data: ImportacaoLancamentoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('importarDuplicados', String(data.importarDuplicados));\r\n  formDataSend.append('importarLancamentosCardinal', String(data.importarLancamentosCardinal));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarLancamentoPadraoCSV(data: ImportacaoLancamentoPadraoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoPadraoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistoricoCSV(data: ImportacaoHistoricoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('grupoHistoricoDestino.id', String(data.grupoHistoricoDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarHistoricoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarPlanoContaCSV(data: ImportacaoPlanoContaCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idEmpresa', String(data.idEmpresa));\r\n  formDataSend.append('grupoPlanoContaDestino.id', String(data.grupoPlanoContaDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarPlanoContaCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistorico(importacaoHistorico: ImportacaoHistorico, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarHistorico', importacaoHistorico), param);\r\n}\r\n\r\nexport function importarPlanoConta(importacaoPlanoContaParam: ImportacaoPlanoConta, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarPlanoConta', importacaoPlanoContaParam), param);\r\n}\r\n\r\nexport function buscarConfigLivroFolhaMCG(idEmpresa: number, param: AxiosParam<LivroFolha>) {\r\n  send(getService().get<LivroFolha>('/buscarConfigLivroFolhaMCG/' + idEmpresa), param);\r\n}\r\n\r\nexport function integracaoFiscalContabil(importarParam: ImportacaoFiscalContabil, param: AxiosParam<ImportacaoFiscalContabilResult>) {\r\n  send(getService().post<ImportacaoFiscalContabilResult>('/integracaoFiscalContabil', importarParam), param);\r\n}\r\n\r\nexport function encerrarContas(\r\n  contaResultadoEncerramento: ContaResultadoMCGEncerramento,\r\n  force: boolean,\r\n  param: AxiosParam<ContaResultadoMCGEncerramento>\r\n) {\r\n  send(\r\n    getService().post<ContaResultadoMCGEncerramento>('/encerrarContas', { contaResultadoEncerramento, force }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function getDataUltimaContaEncerrada(idGerEmpresa: number, param: AxiosParam<Date>) {\r\n  send(getService().get<Date>('/getDataUltimaContaEncerrada/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function limparEncerramentoContaResultado(contaResultadoLimpeza: ContaResultadoLimpeza, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/limparEncerramentoContaResultadoApos', contaResultadoLimpeza), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFIrpjCsll(configECFIrpjCsll: ConfigECFIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFIrpjCsll', configECFIrpjCsll), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFImuneIsenta(configECFImuneIsenta: ConfigECFImuneIsenta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFImuneIsenta', configECFImuneIsenta), param);\r\n}\r\n\r\nexport function validarRefRemuneracaoSocio(configECFRemuneracaoSocio: ConfigECFRemuneracaoSocio, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarRefRemuneracaoSocio', configECFRemuneracaoSocio), param);\r\n}\r\n\r\nexport function validarQuadroSocietario(configQuadro: QuadroSocietario, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/validarQuadroSocietario', configQuadro), param);\r\n}\r\n\r\nexport function obterLucroPrejuizoClassificacao(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterLucroPrejuizoClassificacao/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function getSaldo(saldo: Saldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldo', saldo), param);\r\n}\r\n\r\nexport function validarDadosSpedECF(ecfExportacaoParam: ECFExportacaoParam, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/validarDadosSpedECF', ecfExportacaoParam), param);\r\n}\r\n\r\nexport function gerarSpedECF(usuario: Usuario, ecfExportacaoParam: ECFExportacaoParam, param?: AxiosParam<string>) {\r\n  send(\r\n    getArquivoDigitalService().post<string>('/gerarSpedECF', { usuario, ecfExportacaoParam }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function recuperarLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<Lancamento[]>) {\r\n  send(getService().post<Lancamento[]>('/recuperarLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function transferirLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/transferirLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function obterBancoPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG>) {\r\n  send(getService().post<BancoMCG>('/obterBancoPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function validarConfigLivroFolha(idGerEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(getService().get<boolean>('/validarConfigLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function changeLivroFolha(idGerEmpresa: number, param: AxiosParam<void>) {\r\n  send(getService().get<void>('/changeLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function fecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<RuleMessage>) {\r\n  send(getService().post<RuleMessage>('/fecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function forceFecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/forceFecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function verificarErros(erros: VerificarErros, param: AxiosParam<Erros[]>) {\r\n  send(getService().post<Erros[]>('/verificarErros', erros), param);\r\n}\r\n\r\nexport function gerarSpedContabil(selecaoSped: SelecaoSpedContabil, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('usuario.id', String(selecaoSped.usuario.id));\r\n\r\n  if (selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n    for (const arquivo of selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n      formDataSend.append('arquivoRTFEscrituracaoSubstituida', arquivo.file, arquivo.nomeArquivo);\r\n    }\r\n  }\r\n\r\n  for (const atributoSelecaoSped in selecaoSped) {\r\n    if (\r\n      atributoSelecaoSped !== 'arquivoRTFEscrituracaoSubstituida' &&\r\n      atributoSelecaoSped !== 'usuario' &&\r\n      selecaoSped[atributoSelecaoSped] !== null\r\n    ) {\r\n      formDataSend.append(atributoSelecaoSped, selecaoSped[atributoSelecaoSped]);\r\n    }\r\n  }\r\n  send(getService().post<string>('/gerarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function salvarLucroPrejuizoClassificacao(\r\n  lucroPrejuizoClassificacao: LucroPrejuizoClassificacao,\r\n  param: AxiosParam<LucroPrejuizoClassificacao>\r\n) {\r\n  send(getService().post<LucroPrejuizoClassificacao>('/salvarLucroPrejuizoClassificacao', lucroPrejuizoClassificacao), param);\r\n}\r\n\r\nexport function consultarMovimentacao(saldoCriteria: SaldoCriteria, param: AxiosParam<LancamentoSaldo[]>) {\r\n  send(getService().post<LancamentoSaldo[]>('/consultarMovimentacao', saldoCriteria), param);\r\n}\r\n\r\nexport function totalizadorLancamento(consulta: ConsultaTotalLancamento, param: AxiosParam<TotalizadorLancamento>) {\r\n  send(getService().post<TotalizadorLancamento>('/totalizadorLancamento', consulta), param);\r\n}\r\n\r\nexport function getSaldoAnterior(saldoCriteria: SaldoCriteria, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoAnterior', saldoCriteria), param);\r\n}\r\n\r\nexport function isDataEncerrada(parametros: DataEncerradaParam, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isDataEncerrada', parametros), param);\r\n}\r\n\r\nexport function abrirContas(parametros: DataEncerradaParam, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/abrirContas', parametros), param);\r\n}\r\n\r\nexport function removeLancamentoPeriodo(parametros: RemoveLancamentoPeriodo, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removeLancamentoPeriodo', parametros), param);\r\n}\r\n\r\nexport function obterContasClassificacaoIndireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixaIndireto[]>) {\r\n  send(getService().get<ContaFluxoCaixaIndireto[]>('/obterContasClassificacaoIndireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoIndireto(contaFluxoCaixaIndireto: ContaFluxoCaixaIndireto, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoIndireto', contaFluxoCaixaIndireto), param);\r\n}\r\n\r\nexport function obterMutacaoPatrimonioLiquido(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterMutacaoPatrimonioLiquido/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarMutacaoPatrimonioLiquido(mutacaoPatrimonioLiquido: MutacaoPatrimonioLiquido, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarMutacaoPatrimonioLiquido', mutacaoPatrimonioLiquido), param);\r\n}\r\n\r\nexport function salvarContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function excluirContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/excluirContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function obterContasClassificacaoDireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixa[]>) {\r\n  send(getService().get<ContaFluxoCaixa[]>('/obterContasClassificacaoDireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoDireto(contaFluxoCaixa: ContaFluxoCaixa, param?: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoDireto', contaFluxoCaixa), param);\r\n}\r\n\r\nexport function findSubGrupo(planoContaSubGrupoParam: PlanoContaSubGrupoParam, param: AxiosParam<any>) {\r\n  send(getService().post<any>('/findSubGrupo', planoContaSubGrupoParam), param);\r\n}\r\n\r\nexport function removerTodosPlanosConta(idGrupoPlanoConta: number, usuario: Usuario, param: AxiosParam<void>) {\r\n  send(\r\n    getService().post<void>('/removerTodosPlanosConta', { idGrupoPlanoConta, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function removeList(listaPlanoConta: PlanoConta[], apagarFilha: boolean, usuario: Usuario, param: AxiosParam<any>) {\r\n  send(\r\n    getService().post<any>('/removeList', { listaPlanoConta, apagarFilha, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function listSubGrupo(planoConta: PlanoConta, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().post<PlanoConta[]>('/listSubGrupo', planoConta), param);\r\n}\r\n\r\nexport function referenciarContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<void>\r\n) {\r\n  send(\r\n    getService().post<void>('/referenciarContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function desvincularContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<any>\r\n) {\r\n  send(\r\n    getService().post<void>('/desvincularContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function existeLancamentoEmContaAnalitica(idPlanoConta: number, idEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(\r\n    getService().post<boolean>('/existeLancamentoEmContaAnalitica', { idPlanoConta, idEmpresa }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function importarLancamentoMCG(data: ImportacaoLancamentoMCGSelecao, param: AxiosParam<ImportacaoLancamentoMCGRetornoValidacao>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('tipoImportacao', String(data.tipoImportacao));\r\n  formDataSend.append('sobescrever', String(data.sobescrever));\r\n  formDataSend.append('versaoSuperiorA2', String(data.versaoSuperiorA2));\r\n  formDataSend.append('arquivo', data.arquivo[0].file, data.arquivo[0].nomeArquivo);\r\n\r\n  if (data.versaoSuperiorA2 === false && !isEmpty(data.dtInicial) && !isEmpty(data.dtFinal)) {\r\n    formDataSend.append('dtInicial', data.dtInicial);\r\n    formDataSend.append('dtFinal', data.dtFinal);\r\n  }\r\n\r\n  send(getService().post<ImportacaoLancamentoMCGRetornoValidacao>('/importarLancamentoMCG', formDataSend), param);\r\n}\r\n\r\nexport function importarSpedContabil(data: ImportacaoSpedContabil, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function gerarManadContabil(data: MANADContabilCrit, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('refInicial', data.refInicial);\r\n  formDataSend.append('refFinal', data.refFinal);\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  if (!isEmpty(data.arquivoSFP)) {\r\n    formDataSend.append('arquivoSFP', data.arquivoSFP[0].file, data.arquivoSFP[0].nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<string>('/gerarManadContabil', formDataSend), param);\r\n}\r\n\r\nexport function evolucaoContaContabilGraf(\r\n  evolucaoContaContabilGrafParam: EvolucaoContaContabilGrafParam,\r\n  param: AxiosParam<EvolucaoContaContabilGrafReturn>\r\n) {\r\n  send(getService().post<EvolucaoContaContabilGrafReturn>('/evolucaoContaContabilGraf', evolucaoContaContabilGrafParam), param);\r\n}\r\n\r\nexport function composicaoReceitaDespesasGraf(\r\n  compReceitaDespesasGrafParam: ComposicaoReceitaDespesasGrafParam,\r\n  param: AxiosParam<ComposicaoReceitaDespesasGrafReturn>\r\n) {\r\n  send(getService().post<ComposicaoReceitaDespesasGrafReturn>('/composicaoReceitaDespesasGraf', compReceitaDespesasGrafParam), param);\r\n}\r\n\r\nexport function gerarFCONTContabil(fContContabilCrit: FCONTContabilCrit, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/gerarFCONTContabil', fContContabilCrit), param);\r\n}\r\n\r\nexport function obterDadosArquivoExtrato(arquivoSelecionado: ArquivoSelecionado, idBancoMCG, param: AxiosParam<BancoExtrato[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idBancoMCG', idBancoMCG);\r\n\r\n  formDataSend.append('arquivoSelecionado', arquivoSelecionado[0].file, arquivoSelecionado[0].nomeArquivo);\r\n\r\n  send(getService().post<BancoExtrato[]>('/obterDadosArquivoExtrato', formDataSend), param);\r\n}\r\n\r\nexport function obterDadosConciliacaoBancariaPeriodo(\r\n  idGrupoPlanoConta,\r\n  idEmpresa,\r\n  idBancoMCG,\r\n  dtInicial,\r\n  dtFinal,\r\n  param: AxiosParam<InfoConciliacaoBancaria>\r\n) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGrupoPlanoConta', String(idGrupoPlanoConta));\r\n  formDataSend.append('idEmpresa', String(idEmpresa));\r\n  formDataSend.append('idBancoMCG', String(idBancoMCG));\r\n  formDataSend.append('dtInicial', String(dtInicial));\r\n  formDataSend.append('dtFinal', String(dtFinal));\r\n\r\n  send(getService().post<InfoConciliacaoBancaria>('/obterDadosConciliacaoBancariaPeriodo', formDataSend), param);\r\n}\r\n\r\nexport function obterBancoListPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG[]>) {\r\n  send(getService().post<BancoMCG[]>('/obterBancoListPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function conciliarLancamentosExtrato(listConciliacaoBancaria: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/conciliarLancamentosExtrato', listConciliacaoBancaria), param);\r\n}\r\n\r\nexport function removerConciliarLancamentosExtrato(listaRemover: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerConciliarLancamentosExtrato', listaRemover), param);\r\n}\r\n\r\nexport function removerLancamentosExtratoBancario(listaRemover: BancoExtrato[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerLancamentosExtratoBancario', listaRemover), param);\r\n}\r\n\r\nexport function eLalurAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLalurAContas/' + id), param);\r\n}\r\n\r\nexport function eLacsAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLacsAContas/' + id), param);\r\n}\r\n\r\nexport function getSaldoDebito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoDebito', parametros), param);\r\n}\r\n\r\nexport function getSaldoCredito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoCredito', parametros), param);\r\n}\r\n\r\nexport function removerLancamentoLote(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/removerLancamentoLote', parametros), param);\r\n}\r\n\r\nexport function atualizaCalculoIrpjCsll(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/atualizaCalculoIrpjCsll', parametros), param);\r\n}\r\n\r\nexport function buscarLancamentosHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  param: AxiosParam<LancamentoIntegracaoHonorarios[]>\r\n) {\r\n  send(getService().post<LancamentoIntegracaoHonorarios[]>('/buscarLancamentosHonorarios', integracaoHonorariosParam), param);\r\n}\r\n\r\nexport function integrarHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  lancamentos: LancamentoIntegracaoHonorarios[],\r\n  param: AxiosParam<number>\r\n) {\r\n  send(\r\n    getService().post<number>('/integrarHonorarios', { integracaoHonorariosParam, lancamentos }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function isAlteraCalculoIRPJorCSLL(parametros: CalculoIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isAlteraCalculoIRPJorCSLL', parametros), param);\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _objectSpread2 from \"@babel/runtime/helpers/esm/objectSpread\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Fade from './Fade';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  closeClassName: PropTypes.string,\n  closeAriaLabel: PropTypes.string,\n  cssModule: PropTypes.object,\n  color: PropTypes.string,\n  fade: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  tag: tagPropType,\n  transition: PropTypes.shape(Fade.propTypes),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  color: 'success',\n  isOpen: true,\n  tag: 'div',\n  closeAriaLabel: 'Close',\n  fade: true,\n  transition: _objectSpread2({}, Fade.defaultProps, {\n    unmountOnExit: true\n  })\n};\n\nfunction Alert(props) {\n  var className = props.className,\n      closeClassName = props.closeClassName,\n      closeAriaLabel = props.closeAriaLabel,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      color = props.color,\n      isOpen = props.isOpen,\n      toggle = props.toggle,\n      children = props.children,\n      transition = props.transition,\n      fade = props.fade,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"closeClassName\", \"closeAriaLabel\", \"cssModule\", \"tag\", \"color\", \"isOpen\", \"toggle\", \"children\", \"transition\", \"fade\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'alert', \"alert-\" + color, {\n    'alert-dismissible': toggle\n  }), cssModule);\n  var closeClasses = mapToCssModules(classNames('close', closeClassName), cssModule);\n\n  var alertTransition = _objectSpread2({}, Fade.defaultProps, {}, transition, {\n    baseClass: fade ? transition.baseClass : '',\n    timeout: fade ? transition.timeout : 0\n  });\n\n  return React.createElement(Fade, _extends({}, attributes, alertTransition, {\n    tag: Tag,\n    className: classes,\n    in: isOpen,\n    role: \"alert\",\n    innerRef: innerRef\n  }), toggle ? React.createElement(\"button\", {\n    type: \"button\",\n    className: closeClasses,\n    \"aria-label\": closeAriaLabel,\n    onClick: toggle\n  }, React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\")) : null, children);\n}\n\nAlert.propTypes = propTypes;\nAlert.defaultProps = defaultProps;\nexport default Alert;","import { Basic } from 'summer';\r\nimport { Empresa } from '../ger/empresa';\r\nimport { Banco } from '../mfp/banco';\r\nimport { ConfiguracaoBoletoMHO } from './configuracaoBoletoMHO';\r\nimport { EmpresaEventoFixoMHO } from './empresaEventoFixoMHO';\r\n\r\nexport interface EmpresaMHO extends Basic {\r\n  agenciaDebitoAutomatico?: string;\r\n  bancoInstituicaoDebitoAutomatico?: Banco;\r\n  configuracaoBoletoMHO: ConfiguracaoBoletoMHO;\r\n  contaCorrenteDebitoAutomatico?: string;\r\n  dentroMes?: boolean;\r\n  diaVencimento?: number;\r\n  digitoAgenciaDebitoAutomatico?: string;\r\n  dvContaCorrenteDebitoAutomatico?: string;\r\n  empresa?: Empresa;\r\n  empresaEventosFixos?: EmpresaEventoFixoMHO[];\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mho.model.dto.empresamho';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mho/empresaMHO';\r\n\r\nconst EmpresaMHOIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'empresa.codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'empresa.razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'diaVencimento',\r\n            text: 'Dia de Vencimento',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'EmpresaMHOSearchView',\r\n      }}\r\n      label=\"Empresa\"\r\n      placeholder=\"Informe a Empresa\"\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\nexport default EmpresaMHOIS;\r\n","import { Basic } from 'summer';\r\n\r\nexport interface EventoMHO extends Basic {\r\n  codigo?: number;\r\n  descricao?: string;\r\n  tipo?: string;\r\n  valor?: number;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mho.model.dto.eventomho';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mho/eventoMHO';\r\n\r\nconst EventoMHOIS: FC<InputProps> = props => {\r\n  function getSearchExpression(): SearchExpression[] {\r\n    return [\r\n      {\r\n        alias: 'c',\r\n        conditionalGroup: 'c_',\r\n        fieldName: 'finalidade',\r\n        value: 'manual',\r\n      },\r\n    ];\r\n  }\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n          {\r\n            dataField: 'tipo',\r\n            text: 'Tipo',\r\n          },\r\n          {\r\n            dataField: 'valor',\r\n            text: 'Valor',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressions: getSearchExpression,\r\n        searchViewId: 'EventoMHOSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Evento'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Evento'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\nexport default EventoMHOIS;\r\n"],"sourceRoot":""}
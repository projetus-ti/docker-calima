{"version":3,"sources":["models/dtos/ger/configEmail.ts","views/pages/ger/configEmail/ConfigEmailEditView.tsx"],"names":["CLASS_NAME","ConfigEmailEditView","props","_useForm","useForm","mode","reset","formProps","Object","objectWithoutProperties","useEffect","findByExample","id","entity","errorFunction","mensagem","showToast","ERROR","thenFunction","result","setTimeout","react_default","a","createElement","summer_esm","title","editViewProps","dtoClassName","label","objectSpread2","validation","required","isPrependLabel","placeholder","Row","Col","type","InputType","EMAIL"],"mappings":"yKAWO,MAAMA,EAAa,8DCsCXC,UAxCiEC,KAAS,MAAAC,EACvDC,YAAQ,CAAEC,KAAM,WAAxCC,EAD+EH,EAC/EG,MAAUC,EADqEC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,WAavF,OAXAO,oBAAU,KAERC,aAD6B,CAAEC,GAAI,KAAMC,OAAQ,MAC1Bb,EAAY,CACjCc,cAAgBC,IACdC,aAAUD,EAAUE,MAEtBC,aAAeC,IACbC,WAAW,IAAMd,EAAMa,GAAS,SAGnC,CAACb,IAEFe,EAAAC,EAAAC,cAACC,EAAA,GAAD,CAAiBC,MAAM,oDACrBJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUjB,UAAWA,EAAWmB,cAAexB,EAAOyB,aAAc3B,GAClEqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEZ,GAAG,OACHgB,MAAM,OACNrB,UAASC,OAAAqB,EAAA,EAAArB,QAAAqB,EAAA,EAAArB,CAAA,GAAOD,GAAP,IAAkBuB,WAAY,CAAEC,UAAU,KACnDC,gBAAgB,EAChBC,YAAY,mBAEdZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACY,EAAA,EAAD,KACEd,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEZ,GAAG,QACHgB,MAAM,SACNrB,UAASC,OAAAqB,EAAA,EAAArB,QAAAqB,EAAA,EAAArB,CAAA,GAAOD,GAAP,IAAkBuB,WAAY,CAAEC,UAAU,KACnDC,gBAAgB,EAChBC,YAAY,mBACZG,KAAMC,IAAUC","file":"static/js/514.beff1c35.chunk.js","sourcesContent":["import { Basic } from 'summer';\r\n\r\nexport interface ConfigEmail extends Basic {\r\n  email?: string;\r\n  name?: string;\r\n  password?: string;\r\n  authenticate?: boolean;\r\n  smtp?: string;\r\n  port?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.configemail';\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { EditForm, EditViewProps, ERROR, findByExample, InputGroupInline, InputType, showToast, WindowComponent } from 'summer';\r\nimport { CLASS_NAME, ConfigEmail } from '../../../../models/dtos/ger/configEmail';\r\n\r\ninterface ConfigEmailEditViewProps extends EditViewProps<ConfigEmail> {}\r\n\r\nconst ConfigEmailEditView: FC<ConfigEmailEditViewProps & RouteComponentProps> = props => {\r\n  const { reset, ...formProps } = useForm({ mode: 'onBlur' });\r\n  useEffect(() => {\r\n    const example: ConfigEmail = { id: null, entity: null };\r\n    findByExample(example, CLASS_NAME, {\r\n      errorFunction: (mensagem: string): void => {\r\n        showToast(mensagem, ERROR);\r\n      },\r\n      thenFunction: (result: ConfigEmail): void => {\r\n        setTimeout(() => reset(result), 500);\r\n      },\r\n    });\r\n  }, [reset]);\r\n  return (\r\n    <WindowComponent title=\"Manutenção da configuração de e-mail\">\r\n      <EditForm formProps={formProps} editViewProps={props} dtoClassName={CLASS_NAME}>\r\n        <InputGroupInline\r\n          id=\"name\"\r\n          label=\"Nome\"\r\n          formProps={{ ...formProps, validation: { required: true } }}\r\n          isPrependLabel={true}\r\n          placeholder=\"Informe o nome\"\r\n        />\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"email\"\r\n              label=\"E-mail\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              isPrependLabel={true}\r\n              placeholder=\"Informe o e-mail\"\r\n              type={InputType.EMAIL}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </EditForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default ConfigEmailEditView;\r\n"],"sourceRoot":""}
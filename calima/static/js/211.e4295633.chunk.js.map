{"version":3,"sources":["models/enumerated/mcg/tipoPlanoContaReferencialEnum.ts","views/pages/mcg/grupoPlanoConta/GrupoPlanoContaEditView.tsx","dependencies/empresaDependency.ts","dependencies/empresaMCGDependency.ts","../node_modules/reactstrap/es/CardTitle.js","models/dtos/ger/grupoPlanoConta.ts","models/dtos/mcg/planoContaReferencialInstituicao.ts","views/components/mcg/planoContaMCGReferencialInstituicao/PlanoContaMCGReferencialInstituicaoIS.tsx"],"names":["DE_PARA","label","value","TIPO_PLANO_CONTA_REFERENCIAL_ENUM_VALUES","GrupoPlanoContaEditView","props","globalReducer","useSelector","state","selectedItem","getSelectedItem","formProps","useForm","defaultValues","mode","_useState","useState","_useState2","Object","slicedToArray","isEnableDigitoAtivo","setEnableDigitoAtivo","_useState3","_useState4","isEnableDigitoPassivo","setEnableDigitoPassivo","useEffect","isEmpty","getValues","id","reset","digitoAtivo","digitoDespesa","digitoPassivo","digitoReceita","mascara","tipoPlanoContaReferencial","react_default","a","createElement","summer_esm","title","useGlobalParameter","dependencies","hasEmpresa","globalParameter","hasEmpresaMCG","wikiId","editViewProps","dtoClassName","CLASS_NAME","validateExtras","erros","count","i","length","charAt","verifyMaskLength","push","Row","Col","Card","style","marginBottom","borderWidth","CardBody","CardTitle","objectSpread2","validation","maxLength","isPrependLabel","labelWidth","tooltipProps","message","type","InputType","NUMBER","placeholder","required","onChange","setValue","input","r","FormGroup","tag","CustomInput","name","innerRef","register","withTooltip","messagem","placement","propToolTip","PlanoContaMCGReferencialInstituicaoIS","inputDropDownProps","optionsProvider","DROP_DOWN","disabled","onlyNumber","result","empresa","__webpack_require__","d","__webpack_exports__","empresaMCG","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","className","string","cssModule","object","Tag","attributes","classes","defaultProps","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","assign","inputSearchProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","searchViewId","INPUT_SEARCH"],"mappings":"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","file":"static/js/211.e4295633.chunk.js","sourcesContent":["export const O_PROPRIO = { label: 'O Pr√≥prio', value: 'P' };\r\nexport const DE_PARA = { label: 'De-Para', value: 'D' };\r\n\r\nexport const TIPO_PLANO_CONTA_REFERENCIAL_ENUM_VALUES = [O_PROPRIO, DE_PARA];\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Card, CardBody, CardTitle, Col, CustomInput, FormGroup, Row } from 'reactstrap';\r\nimport {\r\n  EditForm,\r\n  EditViewProps,\r\n  getSelectedItem,\r\n  InputGroupInline,\r\n  InputTooltipProps,\r\n  InputType,\r\n  isEmpty,\r\n  onlyNumber,\r\n  WindowComponent,\r\n  withTooltip,\r\n} from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../dependencies/empresaMCGDependency';\r\nimport { CLASS_NAME, GrupoPlanoConta } from '../../../../models/dtos/ger/grupoPlanoConta';\r\nimport { DE_PARA, TIPO_PLANO_CONTA_REFERENCIAL_ENUM_VALUES } from '../../../../models/enumerated/mcg/tipoPlanoContaReferencialEnum';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport PlanoContaMCGReferencialInstituicaoIS from '../../../components/mcg/planoContaMCGReferencialInstituicao/PlanoContaMCGReferencialInstituicaoIS';\r\n\r\ninterface GrupoPlanoContaEditViewProps extends EditViewProps<GrupoPlanoConta> {}\r\n\r\nconst GrupoPlanoContaEditView: FC<GrupoPlanoContaEditViewProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const selectedItem = getSelectedItem(props);\r\n\r\n  const formProps = useForm<GrupoPlanoConta>({ defaultValues: selectedItem, mode: 'onBlur' });\r\n\r\n  const [isEnableDigitoAtivo, setEnableDigitoAtivo] = useState(false);\r\n  const [isEnableDigitoPassivo, setEnableDigitoPassivo] = useState(false);\r\n\r\n  const propToolTip = (messagem: string): InputTooltipProps => {\r\n    return {\r\n      message: messagem,\r\n      placement: 'top-start',\r\n    };\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (isEmpty(formProps.getValues().id)) {\r\n        formProps.reset({\r\n          digitoAtivo: '1',\r\n          digitoDespesa: '4',\r\n          digitoPassivo: '2',\r\n          digitoReceita: '3',\r\n          mascara: '########',\r\n          tipoPlanoContaReferencial: DE_PARA.value,\r\n        });\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const validateExtras = () => {\r\n    const erros = [];\r\n\r\n    if (verifyMaskLength() > 25) {\r\n      erros.push('M√°scara n√£o deve exceder 25 caracteres.');\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  function verifyMaskLength(): number {\r\n    let count = 0;\r\n    for (let i = 0; i < formProps.getValues().mascara.length; i++) {\r\n      if (formProps.getValues().mascara.charAt(i) === '#') {\r\n        count++;\r\n      }\r\n    }\r\n    return count;\r\n  }\r\n\r\n  function ajustarDigitoConta(value): void {\r\n    if (value === 'P') {\r\n      formProps.setValue('digitoAtivo', '1');\r\n      formProps.setValue('digitoPassivo', '2');\r\n\r\n      setEnableDigitoAtivo(true);\r\n      setEnableDigitoPassivo(true);\r\n    } else {\r\n      setEnableDigitoAtivo(false);\r\n      setEnableDigitoPassivo(false);\r\n    }\r\n  }\r\n\r\n  function adjustMaskChars(value): void {\r\n    formProps.setValue('mascara', null);\r\n    let input = '';\r\n    let r = '';\r\n\r\n    for (let i = 0; i < value.length; i++) {\r\n      if (value.charAt(i) !== '-' && value.charAt(i) !== '.') {\r\n        r += '#';\r\n      } else {\r\n        r += value.charAt(i);\r\n      }\r\n    }\r\n    input += r;\r\n\r\n    formProps.setValue('mascara', input);\r\n  }\r\n\r\n  const defaultWidth = 105;\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Manuten√ß√£o de Grupo de Plano de Conta\"\r\n      useGlobalParameter={true}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMCG(globalReducer.globalParameter)]}\r\n      globalParameter={globalReducer.globalParameter}\r\n      wikiId={1346}\r\n    >\r\n      <EditForm formProps={formProps} editViewProps={props} dtoClassName={CLASS_NAME} validateExtras={validateExtras}>\r\n        <Row>\r\n          <Col>\r\n            <Card style={{ marginBottom: '16px', borderWidth: 'thin' }}>\r\n              <CardBody>\r\n                <CardTitle>B√°sico</CardTitle>\r\n                <Row>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      formProps={{ ...formProps, validation: { maxLength: 8 } }}\r\n                      id=\"codigo\"\r\n                      isPrependLabel={true}\r\n                      label=\"C√≥digo\"\r\n                      labelWidth={defaultWidth}\r\n                      tooltipProps={{ message: 'Preenchimento Opcional - Codifica√ß√£o  Autom√°tica' }}\r\n                      type={InputType.NUMBER}\r\n                      placeholder=\"Informe o c√≥digo\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      formProps={{ ...formProps, validation: { required: true, maxLength: 120 } }}\r\n                      id=\"descricao\"\r\n                      isPrependLabel={true}\r\n                      label=\"Descri√ß√£o\"\r\n                      labelWidth={defaultWidth}\r\n                      placeholder=\"Informe a Descri√ß√£o\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      formProps={{ ...formProps, validation: { required: true } }}\r\n                      id=\"mascara\"\r\n                      isPrependLabel={true}\r\n                      label=\"M√°scara\"\r\n                      labelWidth={defaultWidth}\r\n                      onChange={adjustMaskChars}\r\n                      placeholder=\"Informe a m√°scara do Plano de Contas\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <FormGroup tag={Row}>\r\n                  <Col>\r\n                    <CustomInput\r\n                      id=\"idutilizarContaSinteticaCompleta\"\r\n                      label=\"Utilizar conta sint√©tica completa\"\r\n                      name=\"utilizarContaSinteticaCompleta\"\r\n                      innerRef={formProps.register}\r\n                      type=\"switch\"\r\n                    />\r\n                  </Col>\r\n                  {withTooltip(\r\n                    propToolTip(\r\n                      'Utilizar conta sint√©tica completa. Ex: Conta Ativo - 1.0.0.0000. Uma vez configurada essa op√ß√£o o sistema' +\r\n                        ' n√£o ir√° respeitar a hierarquia sequencial de Contas Cont√°beis.'\r\n                    ),\r\n                    'utilizarContaSinteticaCompleta'\r\n                  )}\r\n                </FormGroup>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Card style={{ marginBottom: '16px', borderWidth: 'thin' }}>\r\n              <CardBody>\r\n                <CardTitle>SPED</CardTitle>\r\n                <Row>\r\n                  <Col>\r\n                    <PlanoContaMCGReferencialInstituicaoIS\r\n                      formProps={formProps}\r\n                      id=\"planoContaReferencialInstituicao\"\r\n                      label=\"Institui√ß√£o\"\r\n                      placeholder=\"Informe a Institui√ß√£o\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      formProps={formProps}\r\n                      id=\"tipoPlanoContaReferencial\"\r\n                      inputDropDownProps={{ optionsProvider: TIPO_PLANO_CONTA_REFERENCIAL_ENUM_VALUES }}\r\n                      isPrependLabel={true}\r\n                      label=\"Plano de Contas Referencial\"\r\n                      onChange={ajustarDigitoConta}\r\n                      placeholder=\"Informe o Plano de Contas Referencial\"\r\n                      type={InputType.DROP_DOWN}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Card style={{ marginBottom: '16px', borderWidth: 'thin' }}>\r\n              <CardBody>\r\n                <CardTitle>Conta</CardTitle>\r\n                <Row>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      disabled={isEnableDigitoAtivo}\r\n                      formProps={{ ...formProps, validation: { required: true, ...onlyNumber(0, 1) } }}\r\n                      id=\"digitoAtivo\"\r\n                      isPrependLabel={true}\r\n                      label=\"Ativo\"\r\n                      labelWidth={defaultWidth}\r\n                      placeholder=\"Informe o d√≠gito do Ativo\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      disabled={isEnableDigitoPassivo}\r\n                      formProps={{ ...formProps, validation: { required: true, ...onlyNumber(0, 1) } }}\r\n                      id=\"digitoPassivo\"\r\n                      isPrependLabel={true}\r\n                      label=\"Passivo\"\r\n                      labelWidth={defaultWidth}\r\n                      placeholder=\"Informe o d√≠gito do Passivo\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      formProps={{ ...formProps, validation: { ...onlyNumber(0, 3) } }}\r\n                      id=\"digitoPatrimonioLiquido\"\r\n                      isPrependLabel={true}\r\n                      label=\"Grupo Patrim√¥nio L√≠quido\"\r\n                      placeholder=\"Informe o d√≠gito do Grupo Patrim√¥nio L√≠quido\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      formProps={{ ...formProps, validation: { required: true, ...onlyNumber(0, 1) } }}\r\n                      id=\"digitoReceita\"\r\n                      isPrependLabel={true}\r\n                      label=\"Receita\"\r\n                      labelWidth={defaultWidth}\r\n                      placeholder=\"Informe o d√≠gito da Receita\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <InputGroupInline\r\n                      formProps={{ ...formProps, validation: { required: true, ...onlyNumber(0, 1) } }}\r\n                      id=\"digitoDespesa\"\r\n                      isPrependLabel={true}\r\n                      label=\"Despesa\"\r\n                      labelWidth={defaultWidth}\r\n                      placeholder=\"Informe o d√≠gito da Despesa\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </EditForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default GrupoPlanoContaEditView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMCG(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMCG) {\r\n    result =\r\n      'A empresa selecionada n√£o est√° configurada para o m√≥dulo Cont√°bil. Para configur√°-la acesse:\\n' +\r\n      'M√≥dulo Cont√°bil > Manuten√ß√£o > Configura√ß√µes > Empresa.';\r\n  }\r\n  return result;\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import { Basic } from 'summer';\r\nimport { PlanoContaReferencialInstituicao } from '../mcg/planoContaReferencialInstituicao';\r\nimport { PlanoConta } from './planoConta';\r\n\r\nexport interface GrupoPlanoConta extends Basic {\r\n  codigo?: number;\r\n  descricao?: string;\r\n  digitoAtivo?: string;\r\n  digitoDespesa?: string;\r\n  digitoPassivo?: string;\r\n  digitoPatrimonioLiquido?: string;\r\n  digitoReceita?: string;\r\n  idGerPlanoContaCliente?: number;\r\n  idGerPlanoContaClienteGrupo?: number;\r\n  idGerPlanoContaFornecedor?: number;\r\n  idGerPlanoContaFornecedorGrupo?: number;\r\n  idGerPlanoContaLucro?: number;\r\n  idGerPlanoContaPrejuizo?: number;\r\n  idGerPlanoContaResultado?: number;\r\n  idGerPlanoContaTransportadora?: number;\r\n  idGerPlanoContaTransportadoraGrupo?: number;\r\n  mascara?: string;\r\n  planoContaCliente?: PlanoConta;\r\n  planoContaClienteGrupo?: PlanoConta;\r\n  planoContaFornecedor?: PlanoConta;\r\n  planoContaFornecedorGrupo?: PlanoConta;\r\n  planoContaLucro?: PlanoConta;\r\n  planoContaPrejuizo?: PlanoConta;\r\n  planoContaReferencialInstituicao?: PlanoContaReferencialInstituicao;\r\n  planoContaResultado?: PlanoConta;\r\n  planoContaTransportadora?: PlanoConta;\r\n  planoContaTransportadoraGrupo?: PlanoConta;\r\n  /** tipoPlanoContaReferencialEnum */\r\n  tipoPlanoContaReferencial?: string;\r\n  utilizarContaSinteticaCompleta?: boolean;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.grupoplanoconta';\r\n","import { Basic } from 'summer';\r\n\r\nexport interface PlanoContaReferencialInstituicao extends Basic {\r\n  codigo?: string;\r\n  instituicao?: string;\r\n  codigoECD?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mcg.model.dto.planocontareferencialinstituicao';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mcg/planoContaReferencialInstituicao';\r\n\r\nconst PlanoContaMCGReferencialInstituicaoIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'C√≥digo',\r\n          },\r\n          {\r\n            dataField: 'instituicao',\r\n            text: 'Institui√ß√£o',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'PlanoContaMCGReferencialInstituicaoSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Plano de Contas Referencial'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Plano de Contas Referencial'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PlanoContaMCGReferencialInstituicaoIS;\r\n"],"sourceRoot":""}
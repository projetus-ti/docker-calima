{"version":3,"sources":["views/pages/mcg/report/lancamento/lancamentoRV.ts","views/pages/mcg/report/lancamento/LancamentoReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","dependencies/empresaMCGDependency.ts","models/enumerated/mcg/sinteticoAnaliticoTipoEnum.ts","models/enumerated/mcg/consolidarEnum.ts","models/dtos/ger/historico.ts","views/components/mcg/historicoIS/HistoricoIS.tsx"],"names":["DEFAULT_VALUES","Object","objectSpread2","getDefaultReportBasicValues","consolidar","NORMAL","value","contabilidade","controlePatrimonial","exibir","ANALITICO_NUMBER","folhaPagamento","folhaPagamentoGPSGeral","importacao","livrosFiscais","virtualization","DEFAULT_OPTIONS","getDefaultReportViewOptions","DATES","exibirConfiguracaoDadosEmpresa","refInicialLabel","refInicialRequired","LalurLacsParteBReportView","props","globalReducer","useSelector","state","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","isEnabledIsMatriz","setIsEnabledIsMatriz","useEffect","globalParameter","empresa","setTimeout","grupoEmpresa","matriz","getValues","acumularMatrizFilial","centralizar","register","name","setValue","id","react_default","a","createElement","Row","className","Col","CustomInput","type","label","innerRef","summer_esm","title","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMCG","style","marginBottom","isPrependLabel","labelWidth","placeholder","validation","required","inputDropDownProps","optionsProvider","CONSOLIDAR_ENUM_VALUES","selectProps","isClearable","InputType","DROP_DOWN","SINTETICO_ANALITICO_VALUES","HistoricoIS","ReportForm","assign","localStorageKey","routeProps","reportBasicValues","reportViewOptions","validateExtras","erros","push","result","__webpack_require__","d","__webpack_exports__","NATUREZA","SALDO_REPORT_ENUM","EmpresaIS","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","inputSearchProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","empresasSelecionadas","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","gerarCabecalhoPadraoAdministradora","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","errors","triggerValidation","handleCancel","currentItem","currentValues","parentObject","EnvioEmail","Fragment","sort","detailView","keyField","propName","maxLength","TEXT_AREA","ReportInputs","activeTab","setActiveTab","_props$reportViewOpti","printingTypes","resetObject","length","idGerEmpresa","current","currentMomentDate","endDate","DATE","dtInicial","formatDate","toDate","dtFinal","endOf","REFERENCE","referenciaInicial","format","REF_PATTERN","REFERENCES","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dtInicialRequired","dateComponent","datesComponent","dtFinalRequired","referenceInitial","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","NUMBER","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","inputProps","disabled","gerarPorEmpresas","size","isMulti","segmentacaoFolhaComponent","exibirSegmentacaoFolha","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","exibirImprimirValoresColoridos","firstOpen","extraConfigOpened","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","hidden","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","params","message","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history","empresaMCG","GRAU_CONTA_NUMBER","SINTETICO_ANALITICO_TIPO_ENUM_VALUES","ANALITICO","SINTETICO","GRAU_CONTA","SINTETICO_ANALITICO_TIPO_VALUE_STRING_ENUM_VALUES","ANALITICO_NUMBER_VALUE","SINTETICO_NUMBER_VALUE","GRAU_CONTA_NUMBER_VALUE","SINTETICO_ANALITICO_TIPO_NUMBER_VALUE_ENUM_VALUES","SINTETICO_NUMBER","NORMAL_NUMBER","GRUPO_ATUAL_NUMBER","CONSOLIDAR_NUMBER_ENUM_VALUES"],"mappings":"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","file":"static/js/60.bd1f39f3.chunk.js","sourcesContent":["import { Historico } from '../../../../../models/dtos/ger/historico';\r\nimport { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\n\r\nexport interface LancamentoRV extends ReportBasicValues {\r\n  idGerGrupoEmpresa?: number;\r\n  acumularMatrizFilial?: boolean;\r\n  matriz?: boolean;\r\n  historicoVariavel?: string;\r\n  contabilidade?: boolean;\r\n  folhaPagamento?: boolean;\r\n  folhaPagamentoGPSGeral?: boolean;\r\n  controlePatrimonial?: boolean;\r\n  livrosFiscais?: boolean;\r\n  importacao?: boolean;\r\n  historicos?: Historico;\r\n  consolidar?: string;\r\n  exibir?: string;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'lancamentorv';\r\nexport const REPORT_TITLE: string = 'Lançamentos';\r\nexport const REPORT_EVENT: string = 'printLancamento';\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { Box, Checkbox, DATES, InputGroupInline, InputType, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../../dependencies/empresaMCGDependency';\r\nimport { getDefaultReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport { CONSOLIDAR_ENUM_VALUES, NORMAL } from '../../../../../models/enumerated/mcg/consolidarEnum';\r\nimport { ANALITICO_NUMBER, SINTETICO_ANALITICO_VALUES } from '../../../../../models/enumerated/mcg/sinteticoAnaliticoTipoEnum';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport HistoricoIS from '../../../../components/mcg/historicoIS/HistoricoIS';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { CLASS_KEY, LancamentoRV, REPORT_EVENT, REPORT_TITLE } from './lancamentoRV';\r\n\r\nconst maxWidth = 170;\r\n\r\nconst DEFAULT_VALUES: LancamentoRV = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n  consolidar: NORMAL.value,\r\n  contabilidade: true,\r\n  controlePatrimonial: true,\r\n  exibir: ANALITICO_NUMBER.value,\r\n  folhaPagamento: true,\r\n  folhaPagamentoGPSGeral: true,\r\n  importacao: true,\r\n  livrosFiscais: true,\r\n  virtualization: true,\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT, DATES.value),\r\n  exibirConfiguracaoDadosEmpresa: false,\r\n  refInicialLabel: 'referência',\r\n  refInicialRequired: true,\r\n};\r\n\r\nconst LalurLacsParteBReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const { handleSubmit, ...formProps } = useForm<LancamentoRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n  const [isEnabledIsMatriz, setIsEnabledIsMatriz] = useState(false);\r\n\r\n  const carregarParametroEmpresa = () => {\r\n    if (globalReducer.globalParameter.empresa.matriz === null) {\r\n      setIsEnabledIsMatriz(true);\r\n      formProps.getValues().acumularMatrizFilial = globalReducer.globalParameter.empresa.centralizar;\r\n    }\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (globalReducer.globalParameter.empresa) {\r\n        setTimeout(() => {\r\n          const {\r\n            empresa: { grupoEmpresa },\r\n          } = globalReducer.globalParameter;\r\n          carregarParametroEmpresa();\r\n          formProps.register({ name: 'idGerGrupoEmpresa' });\r\n          formProps.setValue('idGerGrupoEmpresa', grupoEmpresa.id, true);\r\n        }, 800);\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const validateExtras = () => {\r\n    const erros = [];\r\n\r\n    if (\r\n      !formProps.getValues().contabilidade &&\r\n      !formProps.getValues().controlePatrimonial &&\r\n      !formProps.getValues().folhaPagamento &&\r\n      !formProps.getValues().importacao &&\r\n      !formProps.getValues().livrosFiscais &&\r\n      !formProps.getValues().folhaPagamentoGPSGeral\r\n    ) {\r\n      erros.push('Pelo menos 1 (uma) origem de lançamento deve estar selecionada.');\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  const acumularMatrizFilial = isEnabledIsMatriz ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          label=\"Acumular Matriz e Filiais\"\r\n          name=\"acumularMatrizFilial\"\r\n          id=\"acumularMatrizFilial\"\r\n          innerRef={formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  return (\r\n    <WindowComponent\r\n      title={REPORT_TITLE}\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMCG(globalReducer.globalParameter)]}\r\n    >\r\n      <Box title=\"Origem dos Lançamentos\">\r\n        <Row>\r\n          <Col style={{ marginBottom: '10px' }}>\r\n            <Checkbox formProps={formProps} id=\"contabilidade\" label=\"Contabilidade\" />\r\n          </Col>\r\n          <Col>\r\n            <Checkbox formProps={formProps} id=\"folhaPagamento\" label=\"Folha de Pagamento\" />\r\n          </Col>\r\n          <Col>\r\n            <Checkbox formProps={formProps} id=\"controlePatrimonial\" label=\"Controle Patrimonial\" />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col style={{ marginBottom: '10px' }}>\r\n            <Checkbox formProps={formProps} id=\"livrosFiscais\" label=\"Livros Fiscais\" />\r\n          </Col>\r\n          <Col>\r\n            <Checkbox formProps={formProps} id=\"importacao\" label=\"Importação\" />\r\n          </Col>\r\n          <Col>\r\n            <Checkbox formProps={formProps} id=\"folhaPagamentoGPSGeral\" label=\"Folha de Pagamento GPS - Geral\" />\r\n          </Col>\r\n        </Row>\r\n      </Box>\r\n      {acumularMatrizFilial}\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"consolidar\"\r\n            label=\"Consolidação\"\r\n            isPrependLabel={true}\r\n            labelWidth={maxWidth}\r\n            placeholder=\"Selecione o tipo de consolidação\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            inputDropDownProps={{\r\n              optionsProvider: CONSOLIDAR_ENUM_VALUES,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"exibir\"\r\n            label=\"Exibição\"\r\n            isPrependLabel={true}\r\n            labelWidth={maxWidth}\r\n            placeholder=\"Selecione o tipo de consolidação\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            inputDropDownProps={{\r\n              optionsProvider: SINTETICO_ANALITICO_VALUES,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <HistoricoIS labelWidth={maxWidth} formProps={formProps} id=\"historicos\" />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"historicoVariavel\"\r\n            labelWidth={maxWidth}\r\n            label=\"Histõrico Variãvel\"\r\n            formProps={formProps}\r\n            isPrependLabel={true}\r\n            placeholder=\"Informe o Histórico Variável\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n        validateExtras={validateExtras}\r\n      />\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default LalurLacsParteBReportView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMCG(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMCG) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o módulo Contábil. Para configurá-la acesse:\\n' +\r\n      'Módulo Contábil > Manutenção > Configurações > Empresa.';\r\n  }\r\n  return result;\r\n}\r\n","export const ANALITICO_NUMBER = { label: 'Analítico', value: '1' };\r\nexport const SINTETICO_NUMBER = { label: 'Sintético', value: '2' };\r\nexport const GRAU_CONTA_NUMBER = { label: 'Grau da Conta', value: '3' };\r\n\r\nexport const SINTETICO_ANALITICO_VALUES = [ANALITICO_NUMBER, SINTETICO_NUMBER];\r\n\r\nexport const SINTETICO_ANALITICO_TIPO_ENUM_VALUES = [ANALITICO_NUMBER, SINTETICO_NUMBER, GRAU_CONTA_NUMBER];\r\n\r\nexport const ANALITICO = { label: 'Analítico', value: 'analitico' };\r\nexport const SINTETICO = { label: 'Sintético', value: 'sintetico' };\r\nexport const GRAU_CONTA = { label: 'Grau da Conta', value: 'grauConta' };\r\n\r\nexport const SINTETICO_ANALITICO_TIPO_VALUE_STRING_ENUM_VALUES = [ANALITICO, SINTETICO, GRAU_CONTA];\r\n\r\nexport const ANALITICO_NUMBER_VALUE = { label: 'Analítico', value: 1 };\r\nexport const SINTETICO_NUMBER_VALUE = { label: 'Sintético', value: 2 };\r\nexport const GRAU_CONTA_NUMBER_VALUE = { label: 'Grau da Conta', value: 3 };\r\n\r\nexport const SINTETICO_ANALITICO_TIPO_NUMBER_VALUE_ENUM_VALUES = [ANALITICO_NUMBER_VALUE, SINTETICO_NUMBER_VALUE, GRAU_CONTA_NUMBER_VALUE];\r\n","export const NORMAL = { value: '1', label: 'Normal' };\r\nexport const GRUPO_ATUAL = { value: '2', label: 'Grupo Atual' };\r\nexport const HIERARQUIA_INFERIOR = { value: '3', label: 'Hierarquia Inferior' };\r\n\r\nexport const CONSOLIDAR_ENUM_VALUES = [NORMAL, GRUPO_ATUAL, HIERARQUIA_INFERIOR];\r\n\r\nexport const NORMAL_NUMBER = { value: 1, label: 'Normal' };\r\nexport const GRUPO_ATUAL_NUMBER = { value: 2, label: 'Grupo Atual' };\r\nexport const HIERARQUIA_INFERIOR_NUMBER = { value: 3, label: 'Hierarquia Inferior' };\r\n\r\nexport const CONSOLIDAR_NUMBER_ENUM_VALUES = [NORMAL_NUMBER, GRUPO_ATUAL_NUMBER, HIERARQUIA_INFERIOR_NUMBER];\r\n","import { Basic } from 'summer';\r\nimport { GrupoHistorico } from './grupoHistorico';\r\n\r\nexport interface Historico extends Basic {\r\n  codigo?: number;\r\n  descricao?: string;\r\n  grupoHistorico?: GrupoHistorico;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mcg.model.dto.historico';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/historico';\r\n\r\nconst HistoricoIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      formProps={{ ...props.formProps }}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'HistoricoSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Histórico'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Histórico'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HistoricoIS;\r\n"],"sourceRoot":""}
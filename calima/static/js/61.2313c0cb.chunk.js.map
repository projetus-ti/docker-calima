{"version":3,"sources":["views/pages/mfp/report/reciboEntregaDevolucaoCtps/reciboEntregaDevolucaoCtpsRV.ts","views/pages/mfp/report/reciboEntregaDevolucaoCtps/ReciboEntregaDevolucaoCtpsReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","dependencies/empresaMFPDependency.ts","dependencies/grupoEmpresaConfigDependency.ts","views/components/mfp/customizacaoTermoIS/CustomizacaoTermoIS.tsx","models/dtos/mfp/trabalhadorExample.ts","views/components/mfp/trabalhadorIS/TrabalhadorIS.tsx"],"names":["DEFAULT_VALUES","Object","objectSpread2","getDefaultReportBasicValues","DEFAULT_OPTIONS","getDefaultReportViewOptions","exibirConfiguracaoDadosEmpresa","ReciboEntregaDevolucaoCtpsReportView","props","globalReducer","useSelector","state","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","objectWithoutProperties","useEffect","setTimeout","setValue","formatDate","currentDate","react_default","a","createElement","summer_esm","title","useGlobalParameter","globalParameter","dependencies","hasEmpresa","hasEmpresaMFP","hasGrupoEmpresaConfig","ReportForm","assign","localStorageKey","routeProps","reportBasicValues","reportViewOptions","validateExtras","reciboEntregaDevolucaoCtpsRV","getValues","erros","isEmpty","termoEntrega","termoDevolucao","push","TrabalhadorIS","id","validation","required","label","placeholder","isPrependLabel","inputSearchProps","selectProps","isMulti","CustomizacaoTermoIS","searchViewProps","apenasReciboEntregaCtps","size","apenasReciboDevolucaoCtps","type","InputType","DATE","tooltipProps","message","result","empresa","__webpack_require__","d","__webpack_exports__","NATUREZA","value","SALDO_REPORT_ENUM","EmpresaIS","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","empresasSelecionadas","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","gerarCabecalhoPadraoAdministradora","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","virtualization","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","errors","register","triggerValidation","handleCancel","currentItem","currentValues","parentObject","EnvioEmail","Fragment","sort","detailView","keyField","propName","Row","className","Col","CustomInput","name","innerRef","maxLength","TEXT_AREA","ReportInputs","_useState","useState","_useState2","slicedToArray","activeTab","setActiveTab","_props$reportViewOpti","printingTypes","resetObject","length","idGerEmpresa","current","currentMomentDate","endDate","dtInicial","toDate","DATES","dtFinal","endOf","REFERENCE","referenciaInicial","format","REF_PATTERN","REFERENCES","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dtInicialRequired","dateComponent","datesComponent","dtFinalRequired","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","NUMBER","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","inputProps","disabled","gerarPorEmpresas","style","marginBottom","segmentacaoFolhaComponent","exibirSegmentacaoFolha","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","exibirImprimirValoresColoridos","inputDropDownProps","optionsProvider","isClearable","DROP_DOWN","firstOpen","extraConfigOpened","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","hidden","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","params","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history","empresaMFP","grupoEmpresaRaiz","grupoEmpresaConfig","grupoEmpresa","searchExpressions","apenasAbonoPecuniario","alias","conditionalGroup","fieldName","ABONO_PECUNIARIO","apenasTipo","AVISO_PREVIO_TRABALHADO","AVISO_PREVIO_INDENIZADO","PEDIDO_DEMISSAO","apenasAcordo","AVISO_PREVIO_ACORDO_TRABALHADO","AVISO_PREVIO_ACORDO_INDENIZADO","PEDIDO_DEMISSAO_ACORDO","apenasTermosCompensacaoHoras","TERMO_COMPENSACAO_HORAS","apenasTermoAditivo","TERMO_ADITIVO","apenasCartaRecomendacao","CARTA_RECOMENDACAO","apenasAvisoFerias","AVISO_FERIAS","RECIBO_CARTEIRA_DE_TRABALHO_ENTREGA","RECIBO_CARTEIRA_DE_TRABALHO_DEVOLUCAO","apenasReciboCestaBasica","RECIBO_CESTA_BASICA","apenasReciboValeTransporte","VALE_TRANSPORTE_RECIBO","apenasDeclaracaoOpcaoFgts","DECLARACAO_OPCAO_FGTS","apenasValeAlimentacaoRefeicaoRecibo","VALE_ALIMENTACAO_RECIBO","VALE_REFEICAO_RECIBO","apenasProrrogacaoHoraExtra","ACORDO_PRORROGACAO_HORA_EXTRA","apenasCartaSuspensao","CARTA_SUSPENSAO","apenasCartaPreposicao","CARTA_PREPOSICAO","apenasMsgContraCheque","MSG_CONTRA_CHEQUE","apenasMsgAniversario","MSG_ANIVERSARIO","apenasReciboProLabore","RECIBO_PRO_LABORE","summer__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"static/js/61.2313c0cb.chunk.js","sourcesContent":["import { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { CustomizacaoTermo } from '../../../../../models/dtos/mcg/customizacaoTermo';\r\nimport { Trabalhador } from '../../../../../models/dtos/mfp/trabalhador';\r\n\r\nexport interface ReciboEntregaDevolucaoCtpsRV extends ReportBasicValues {\r\n  termoDevolucao?: CustomizacaoTermo;\r\n  termoEntrega?: CustomizacaoTermo;\r\n  trabalhadores?: Trabalhador[];\r\n}\r\n\r\nexport const CLASS_KEY: string = 'reciboentregadevolucaoctpsrv';\r\nexport const REPORT_EVENT: string = 'printReciboCtps';\r\nexport const REPORT_TITLE: string = 'Recibo de Entrega Devolução da CTPS';\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { currentDate, formatDate, InputGroupInline, InputType, isEmpty, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMFP } from '../../../../../dependencies/empresaMFPDependency';\r\nimport { hasGrupoEmpresaConfig } from '../../../../../dependencies/grupoEmpresaConfigDependency';\r\nimport { getDefaultReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport CustomizacaoTermoIS from '../../../../components/mfp/customizacaoTermoIS/CustomizacaoTermoIS';\r\nimport TrabalhadorIS from '../../../../components/mfp/trabalhadorIS/TrabalhadorIS';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { CLASS_KEY, ReciboEntregaDevolucaoCtpsRV, REPORT_EVENT, REPORT_TITLE } from './reciboEntregaDevolucaoCtpsRV';\r\n\r\nconst DEFAULT_VALUES: ReciboEntregaDevolucaoCtpsRV = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT),\r\n  exibirConfiguracaoDadosEmpresa: false,\r\n};\r\n\r\nconst ReciboEntregaDevolucaoCtpsReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const { handleSubmit, ...formProps } = useForm<ReciboEntregaDevolucaoCtpsRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n\r\n  const validateExtras = () => {\r\n    const reciboEntregaDevolucaoCtpsRV: ReciboEntregaDevolucaoCtpsRV = formProps.getValues();\r\n    const erros = [];\r\n\r\n    if (isEmpty(reciboEntregaDevolucaoCtpsRV.termoEntrega) && isEmpty(reciboEntregaDevolucaoCtpsRV.termoDevolucao)) {\r\n      erros.push('É necessário informar um Termo de Devolução ou um Termo de Entrega.');\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      setTimeout(() => {\r\n        formProps.setValue('dtInicial', formatDate(currentDate()), true);\r\n      }, 800);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Recibo de Entrega/Devolução da CTPS\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[\r\n        () => hasEmpresa(globalReducer.globalParameter),\r\n        () => hasEmpresaMFP(globalReducer.globalParameter),\r\n        () => hasGrupoEmpresaConfig(globalReducer.globalParameter),\r\n      ]}\r\n    >\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n        validateExtras={validateExtras}\r\n      >\r\n        <TrabalhadorIS\r\n          id=\"trabalhadores\"\r\n          formProps={{ ...formProps, validation: { required: true } }}\r\n          label=\"Trabalhadore(s)\"\r\n          placeholder=\"Selecione Trabalhadore(s)\"\r\n          isPrependLabel={true}\r\n          inputSearchProps={{ selectProps: { isMulti: true } }}\r\n        />\r\n        <CustomizacaoTermoIS\r\n          formProps={formProps}\r\n          label=\"Entrega\"\r\n          searchViewProps={{ apenasReciboEntregaCtps: true }}\r\n          apenasReciboEntregaCtps={true}\r\n          placeholder=\"Selecione o Termo\"\r\n          id=\"termoEntrega\"\r\n          isPrependLabel={true}\r\n          inputSearchProps={{ size: 'xl' }}\r\n        />\r\n        <CustomizacaoTermoIS\r\n          formProps={formProps}\r\n          label=\"Devolução\"\r\n          searchViewProps={{ apenasReciboDevolucaoCtps: true }}\r\n          apenasReciboDevolucaoCtps={true}\r\n          placeholder=\"Selecione o Termo\"\r\n          id=\"termoDevolucao\"\r\n          isPrependLabel={true}\r\n          inputSearchProps={{ size: 'xl' }}\r\n        />\r\n        <InputGroupInline\r\n          id=\"dtInicial\"\r\n          placeholder=\"Informe a Data de Entrega\"\r\n          isPrependLabel={true}\r\n          formProps={{ ...formProps, validation: { required: true } }}\r\n          label=\"Data de Entrega\"\r\n          type={InputType.DATE}\r\n          tooltipProps={{ message: 'Data Assinatura para geração do relatório.' }}\r\n        />\r\n      </ReportForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default ReciboEntregaDevolucaoCtpsReportView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMFP(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMFP) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o Módulo Folha de Pagamento. Para configurá-la acesse Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasGrupoEmpresaConfig(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n\r\n  const msg: string =\r\n    'O Grupo de empresas não está configurado para a empresa selecionada. Para configurar acesse:\\n' +\r\n    'Modulo Principal > Manutenção > Configurações > Grupo de Empresa';\r\n\r\n  if (\r\n    !globalParameter.empresa ||\r\n    !globalParameter.empresa.grupoEmpresaRaiz.grupoEmpresaConfig ||\r\n    !globalParameter.empresa.grupoEmpresa.grupoEmpresaConfig\r\n  ) {\r\n    result = msg;\r\n  }\r\n\r\n  return result;\r\n}\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { InputSearchProps } from 'summer/dist/views/components/inputSearch/InputSearch';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mfp/customizacaoTermos';\r\nimport {\r\n  ABONO_PECUNIARIO,\r\n  ACORDO_PRORROGACAO_HORA_EXTRA,\r\n  AVISO_FERIAS,\r\n  AVISO_PREVIO_ACORDO_INDENIZADO,\r\n  AVISO_PREVIO_ACORDO_TRABALHADO,\r\n  AVISO_PREVIO_INDENIZADO,\r\n  AVISO_PREVIO_TRABALHADO,\r\n  CARTA_PREPOSICAO,\r\n  CARTA_RECOMENDACAO,\r\n  CARTA_SUSPENSAO,\r\n  DECLARACAO_OPCAO_FGTS,\r\n  MSG_ANIVERSARIO,\r\n  MSG_CONTRA_CHEQUE,\r\n  PEDIDO_DEMISSAO,\r\n  PEDIDO_DEMISSAO_ACORDO,\r\n  RECIBO_CARTEIRA_DE_TRABALHO_DEVOLUCAO,\r\n  RECIBO_CARTEIRA_DE_TRABALHO_ENTREGA,\r\n  RECIBO_CESTA_BASICA,\r\n  RECIBO_PRO_LABORE,\r\n  TERMO_ADITIVO,\r\n  TERMO_COMPENSACAO_HORAS,\r\n  VALE_ALIMENTACAO_RECIBO,\r\n  VALE_REFEICAO_RECIBO,\r\n  VALE_TRANSPORTE_RECIBO,\r\n} from '../../../../models/enumerated/mfp/customizacaoTermosTipoEnum';\r\n\r\nexport interface CustomizacaoTermoSearchViewProps extends InputProps {\r\n  apenasAbonoPecuniario?: boolean;\r\n  apenasTipo?: boolean;\r\n  apenasAcordo?: boolean;\r\n  apenasTermosCompensacaoHoras?: boolean;\r\n  apenasTermoAditivo?: boolean;\r\n  apenasCartaRecomendacao?: boolean;\r\n  apenasAvisoFerias?: boolean;\r\n  apenasReciboEntregaCtps?: boolean;\r\n  apenasReciboDevolucaoCtps?: boolean;\r\n  apenasReciboCestaBasica?: boolean;\r\n  apenasReciboValeTransporte?: boolean;\r\n  apenasDeclaracaoOpcaoFgts?: boolean;\r\n  apenasValeAlimentacaoRefeicaoRecibo?: boolean;\r\n  apenasProrrogacaoHoraExtra?: boolean;\r\n  apenasCartaSuspensao?: boolean;\r\n  apenasCartaPreposicao?: boolean;\r\n  apenasMsgContraCheque?: boolean;\r\n  apenasMsgAniversario?: boolean;\r\n  apenasReciboProLabore?: boolean;\r\n}\r\n\r\nconst CustomizacaoTermoIS: FC<CustomizacaoTermoSearchViewProps> = props => {\r\n  function getSearchExpression(): SearchExpression[] {\r\n    if (props.apenasAbonoPecuniario) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: ABONO_PECUNIARIO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasTipo) {\r\n      return [\r\n        {\r\n          alias: 'c1',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: AVISO_PREVIO_TRABALHADO.value,\r\n        },\r\n        {\r\n          alias: 'c2',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: AVISO_PREVIO_INDENIZADO.value,\r\n        },\r\n        {\r\n          alias: 'c3',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: PEDIDO_DEMISSAO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasAcordo) {\r\n      return [\r\n        {\r\n          alias: 'c1',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: AVISO_PREVIO_ACORDO_TRABALHADO.value,\r\n        },\r\n        {\r\n          alias: 'c2',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: AVISO_PREVIO_ACORDO_INDENIZADO.value,\r\n        },\r\n        {\r\n          alias: 'c3',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: PEDIDO_DEMISSAO_ACORDO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasTermosCompensacaoHoras) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: TERMO_COMPENSACAO_HORAS.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasTermoAditivo) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: TERMO_ADITIVO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasCartaRecomendacao) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: CARTA_RECOMENDACAO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasAvisoFerias) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: AVISO_FERIAS.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasReciboEntregaCtps) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: RECIBO_CARTEIRA_DE_TRABALHO_ENTREGA.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasReciboDevolucaoCtps) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: RECIBO_CARTEIRA_DE_TRABALHO_DEVOLUCAO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasReciboCestaBasica) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: RECIBO_CESTA_BASICA.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasReciboValeTransporte) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: VALE_TRANSPORTE_RECIBO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasDeclaracaoOpcaoFgts) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: DECLARACAO_OPCAO_FGTS.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasValeAlimentacaoRefeicaoRecibo) {\r\n      return [\r\n        {\r\n          alias: 'c1',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: VALE_ALIMENTACAO_RECIBO.value,\r\n        },\r\n        {\r\n          alias: 'c2',\r\n          conditionalGroup: 'c_1',\r\n          fieldName: 'tipo',\r\n          value: VALE_REFEICAO_RECIBO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasProrrogacaoHoraExtra) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: ACORDO_PRORROGACAO_HORA_EXTRA.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasCartaSuspensao) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: CARTA_SUSPENSAO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasCartaPreposicao) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: CARTA_PREPOSICAO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasMsgContraCheque) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: MSG_CONTRA_CHEQUE.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasMsgAniversario) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: MSG_ANIVERSARIO.value,\r\n        },\r\n      ];\r\n    } else if (props.apenasReciboProLabore) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: RECIBO_PRO_LABORE.value,\r\n        },\r\n      ];\r\n    }\r\n    return [];\r\n  }\r\n\r\n  const inputSearchProps: InputSearchProps<any> = {\r\n    ...props.inputSearchProps,\r\n    columns: [\r\n      {\r\n        dataField: 'descricao',\r\n        text: 'Descrição',\r\n      },\r\n      {\r\n        dataField: 'termo',\r\n        text: 'Termo',\r\n      },\r\n    ],\r\n    dtoClassName: CLASS_NAME,\r\n    searchExpressions: getSearchExpression,\r\n    searchViewId: 'CustomizacaoTermosSearchView',\r\n  };\r\n\r\n  return <InputGroupInline {...props} type={InputType.INPUT_SEARCH} inputSearchProps={inputSearchProps} />;\r\n};\r\n\r\nexport default CustomizacaoTermoIS;\r\n","import { Basic } from 'summer';\r\nimport { CepUF } from '../ger/cepUF';\r\nimport { EmpresaMFP } from './empresaMFP';\r\n\r\nexport interface TrabalhadorExample extends Basic {\r\n  carteiraTrabalhoDataEmissao?: Date;\r\n  carteiraTrabalhoNumero?: string;\r\n  carteiraTrabalhoSerie?: string;\r\n  carteiraTrabalhoUF?: CepUF;\r\n  codigo?: number;\r\n  cpf?: string;\r\n  dataNascimento?: Date;\r\n  dataValidadeVisto?: Date;\r\n  empresaMFP?: EmpresaMFP;\r\n  /** este campo utiliza o enum EstadoCivilEnum */\r\n  estadoCivil?: string;\r\n  identidade?: string;\r\n  identidadeComplemento?: string;\r\n  identidadeDataEmissao?: Date;\r\n  identidadeOrgaoExpedidor?: string;\r\n  identidadeUF?: CepUF;\r\n  /** este campo utiliza o enum NacionalidadeEnum */\r\n  nacionalidade?: string;\r\n  nome?: string;\r\n  passaporteNumero?: string;\r\n  pis?: string;\r\n  secaoEleitoral?: string;\r\n  tituloEleitor?: string;\r\n  zonaEleitoral?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.trabalhadorexample';\r\n","import React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mfp/trabalhadorExample';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\nconst TrabalhadorIS: FC<InputProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const getSearchExpressions = (): SearchExpression[] => {\r\n    let result = null;\r\n\r\n    if (props.inputSearchProps.searchExpressions) {\r\n      result = props.inputSearchProps.searchExpressions();\r\n    } else {\r\n      result = [\r\n        {\r\n          fieldName: 'empresaMFP.id',\r\n          value: globalReducer.globalParameter.empresaMFP.id,\r\n        },\r\n      ];\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      type={InputType.INPUT_SEARCH}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'identidade',\r\n            text: 'RG',\r\n          },\r\n          {\r\n            dataField: 'carteiraTrabalhoNumero',\r\n            text: 'Nº Carteira Trab.',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressions: getSearchExpressions,\r\n        searchViewId: 'TrabalhadorSearchView',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TrabalhadorIS;\r\n"],"sourceRoot":""}
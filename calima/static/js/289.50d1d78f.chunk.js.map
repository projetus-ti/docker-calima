{"version":3,"sources":["models/enumerated/mfp/tipoGpsEnum.ts","views/pages/mfp/guiaGps/GuiaGpsSearchView.tsx","dependencies/empresaDependency.ts","dependencies/empresaMFPDependency.ts","models/dtos/mfp/guiaGps.ts"],"names":["__webpack_require__","d","__webpack_exports__","TIPO_GPS_ENUM_VALUES","label","value","r","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","summer__WEBPACK_IMPORTED_MODULE_2__","_dependencies_empresaDependency__WEBPACK_IMPORTED_MODULE_3__","_dependencies_empresaMFPDependency__WEBPACK_IMPORTED_MODULE_4__","_models_dtos_mfp_guiaGps__WEBPACK_IMPORTED_MODULE_5__","_models_enumerated_mfp_tipoGpsEnum__WEBPACK_IMPORTED_MODULE_6__","defaultSorted","dataField","order","OrderType","ASC","cellEditProps","blurToSave","mode","ClickEnum","CLICK","GuiaGpsSearchView","props","globalParameter","useSelector","state","globalReducer","columns","editable","filter","type","FilterType","TEXT","formatter","cell","row","refToFormat","referencia","sort","text","DATE","formatExtraData","enumFormatter","NUMBER","alteradoManualmente","vrINSS","vrOutrasEntidades","vrJuros","vrMulta","vrCompensado","a","createElement","title","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMFP","wikiId","Object","assign","searchDataGridProps","dtoClassName","CLASS_NAME","searchExpressions","expressions","empresaMFP","push","fieldName","id","extraData","getExtraData","result","empresa"],"mappings":"6FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAO,MAMMA,EAAuB,CANf,CAAEC,MAAO,QAASC,MAAO,SACC,CAAED,MAAO,0BAAqBC,MAAO,mCACzD,CAAED,MAAO,cAAeC,MAAO,eAC5B,CAAED,MAAO,iBAAkBC,MAAO,kBACzB,CAAED,MAAO,0BAA2BC,MAAO,+DCJlFL,EAAAM,EAAAJ,GAAA,IAAAK,EAAAP,EAAA,GAAAQ,EAAAR,EAAAS,EAAAF,GAAAG,EAAAV,EAAA,IAAAW,EAAAX,EAAA,GAAAY,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,KAAAc,EAAAd,EAAA,KAAAe,EAAAf,EAAA,MAwBA,MAAMgB,EAAoC,CACxC,CACEC,UAAW,OACXC,MAAOC,IAAUC,MAIfC,EAA+B,CACnCC,YAAY,EACZC,KAAMC,IAAUC,OAuGHC,UApGyCC,KAAS,MACvDC,EAAoBC,YAAmCC,GAASA,EAAMC,eAAtEH,gBAgBR,MAAMI,EAA0B,CAC9B,CACEf,UAAW,aACXgB,UAAU,EACVC,OAAQ,CACNC,KAAMC,IAAWC,MAEnBC,UAAW,CAACC,EAAMC,IACTC,aAAYD,EAAIE,YAEzBC,MAAM,EACNC,KAAM,iBAER,CACE3B,UAAW,eACXgB,UAAU,EACVC,OAAQ,CACNC,KAAMC,IAAWS,MAEnBF,MAAM,EACNC,KAAM,qBAER,CACE3B,UAAW,OACXgB,UAAU,EACVa,gBAAiB3C,IACjBmC,UAAWS,KACXJ,MAAM,EACNC,KAAM,QAER,CACE3B,UAAW,UACXgB,UAAU,EACVC,OAAQ,CACNC,KAAMC,IAAWY,QAEnBV,UAAW,CAACE,EAAKD,IACRA,EAAKU,oBAAsBV,EAAKW,OAASX,EAAKY,kBAAoBZ,EAAKa,QAAUb,EAAKc,QAAUd,EAAKe,aAAed,EAE7HG,MAAM,EACNC,KAAM,eAER,CACE3B,UAAW,eACXgB,UAAU,EACVC,OAAQ,CACNC,KAAMC,IAAWC,MAEnBM,MAAM,EACNC,KAAM,WAER,CACE3B,UAAW,2BACXgB,UAAU,EACVC,OAAQ,CACNC,KAAMC,IAAWC,MAEnBM,MAAM,EACNC,KAAM,iBAGV,OACEpC,EAAA+C,EAAAC,cAAC7C,EAAA,GAAD,CACE8C,MAAM,aACNC,oBAAoB,EACpB9B,gBAAiBA,EACjB+B,aAAc,CAAC,IAAMC,YAAWhC,GAAkB,IAAMiC,YAAcjC,IACtEkC,OAAQ,KAERtD,EAAA+C,EAAAC,cAAC7C,EAAA,EAADoD,OAAAC,OAAA,GACMrC,EACAA,EAAMsC,oBAFZ,CAGEC,aAAcC,IACdnC,QAASA,EACTX,cAAeA,EACfL,cAAeA,EACfoD,kBA1FN,WACE,MAAMC,EAAkC,GAChCC,EAAe1C,EAAf0C,WASR,OAPIA,GACFD,EAAYE,KAAK,CACfC,UAAW,gBACXnE,MAAOiE,EAAWG,KAIfJ,GAgFHK,UAAWC,aAAahD,EAAO,kBAAmBwC,6CChInD,SAASP,EAAWhC,GACzB,IAAIgD,EAAS,KAIb,OAHKhD,EAAgBiD,UACnBD,EAAS,kDAEJA,EALT5E,EAAAC,EAAAC,EAAA,sBAAA0D,sCCAO,SAASC,EAAcjC,GAC5B,IAAIgD,EAAS,KAKb,OAJKhD,EAAgB0C,aACnBM,EACE,sKAEGA,EANT5E,EAAAC,EAAAC,EAAA,sBAAA2D,sCCyBA7D,EAAAC,EAAAC,EAAA,sBAAAiE,IAAO,MAAMA,EAAa","file":"static/js/289.50d1d78f.chunk.js","sourcesContent":["export const GERAL = { label: 'Geral', value: 'GERAL' };\r\nexport const SEGUNDA_PARCELA_DECIMO_TERCEIRO = { label: '2ª Parcela do 13º', value: 'SEGUNDA_PARCELA_DECIMO_TERCEIRO' };\r\nexport const COOPERATIVA = { label: 'Cooperativa', value: 'COOPERATIVA' };\r\nexport const PRODUTOR_RURAL = { label: 'Produtor Rural', value: 'PRODUTOR_RURAL' };\r\nexport const TERCEIROS_TRANSPORTADOR = { label: 'Terceiros Transportador', value: 'TERCEIROS_TRANSPORTADOR' };\r\n\r\nexport const TIPO_GPS_ENUM_VALUES = [GERAL, SEGUNDA_PARCELA_DECIMO_TERCEIRO, COOPERATIVA, PRODUTOR_RURAL, TERCEIROS_TRANSPORTADOR];\r\n","import React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  CellEditProps,\r\n  ClickEnum,\r\n  ColumnsProps,\r\n  DefaultSortProps,\r\n  enumFormatter,\r\n  FilterType,\r\n  getExtraData,\r\n  OrderType,\r\n  refToFormat,\r\n  SearchDataGrid,\r\n  SearchExpression,\r\n  SearchViewProps,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMFP } from '../../../../dependencies/empresaMFPDependency';\r\nimport { CLASS_NAME, GuiaGps } from '../../../../models/dtos/mfp/guiaGps';\r\nimport { TIPO_GPS_ENUM_VALUES } from '../../../../models/enumerated/mfp/tipoGpsEnum';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\nconst defaultSorted: DefaultSortProps[] = [\r\n  {\r\n    dataField: 'tipo',\r\n    order: OrderType.ASC,\r\n  },\r\n];\r\n\r\nconst cellEditProps: CellEditProps = {\r\n  blurToSave: true,\r\n  mode: ClickEnum.CLICK,\r\n};\r\n\r\nconst GuiaGpsSearchView: FC<SearchViewProps<GuiaGps>> = props => {\r\n  const { globalParameter } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  function getSearchExpression(): SearchExpression[] {\r\n    const expressions: SearchExpression[] = [];\r\n    const { empresaMFP } = globalParameter;\r\n\r\n    if (empresaMFP) {\r\n      expressions.push({\r\n        fieldName: 'empresaMFP.id',\r\n        value: empresaMFP.id,\r\n      });\r\n    }\r\n    // TODO ajustar searchExpression para trazer apenas registros com o campo tomador igual a nulo\r\n    return expressions;\r\n  }\r\n\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'referencia',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      formatter: (cell, row) => {\r\n        return refToFormat(row.referencia);\r\n      },\r\n      sort: true,\r\n      text: 'Referência',\r\n    },\r\n    {\r\n      dataField: 'dtVencimento',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.DATE,\r\n      },\r\n      sort: true,\r\n      text: 'Dt. de Vencimento',\r\n    },\r\n    {\r\n      dataField: 'tipo',\r\n      editable: false,\r\n      formatExtraData: TIPO_GPS_ENUM_VALUES,\r\n      formatter: enumFormatter,\r\n      sort: true,\r\n      text: 'Tipo',\r\n    },\r\n    {\r\n      dataField: 'vrTotal',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.NUMBER,\r\n      },\r\n      formatter: (row, cell) => {\r\n        return cell.alteradoManualmente ? cell.vrINSS + cell.vrOutrasEntidades + cell.vrJuros + cell.vrMulta + cell.vrCompensado : row;\r\n      },\r\n      sort: true,\r\n      text: 'Valor Total',\r\n    },\r\n    {\r\n      dataField: 'tomador.nome',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      sort: true,\r\n      text: 'Tomador',\r\n    },\r\n    {\r\n      dataField: 'vinculo.trabalhador.nome',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      sort: true,\r\n      text: 'Doméstico',\r\n    },\r\n  ];\r\n  return (\r\n    <WindowComponent\r\n      title=\"GPS (Guia)\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalParameter}\r\n      dependencies={[() => hasEmpresa(globalParameter), () => hasEmpresaMFP(globalParameter)]}\r\n      wikiId={892}\r\n    >\r\n      <SearchDataGrid\r\n        {...props}\r\n        {...props.searchDataGridProps}\r\n        dtoClassName={CLASS_NAME}\r\n        columns={columns}\r\n        cellEditProps={cellEditProps}\r\n        defaultSorted={defaultSorted}\r\n        searchExpressions={getSearchExpression}\r\n        extraData={getExtraData(props, 'GuiaGpsEditView', CLASS_NAME)}\r\n      />\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default GuiaGpsSearchView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMFP(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMFP) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o Módulo Folha de Pagamento. Para configurá-la acesse Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n","import { CompensacaoGps } from './compensacaoGps';\r\nimport { Fpas } from './fpas';\r\nimport { Gps } from './gps';\r\nimport { GpsDiversosAnexos } from './gpsDiversosAnexos';\r\nimport { GuiaGpsDetalhe } from './guiaGpsDetalhe';\r\nimport { GuiaGpsExample } from './guiaGpsExample';\r\nimport { PagamentoCooperativa } from './pagamentoCooperativa';\r\nimport { ProducaoRural } from './producaoRural';\r\n\r\nexport interface GuiaGps extends GuiaGpsExample {\r\n  dtVencimentoAtraso?: string;\r\n  vrEmpresa?: number;\r\n  vrINSSDescontado?: number;\r\n  vrSocioAutonomo?: number;\r\n  vrAcidenteTrabalho?: number;\r\n  vrTerceiros?: number;\r\n  vrRecolhimentoMinimo?: number;\r\n  gpsAcumulada?: GuiaGpsExample;\r\n  gps?: Gps;\r\n  fpas?: Fpas;\r\n  pagamentoCooperativa?: PagamentoCooperativa;\r\n  producaoRural?: ProducaoRural;\r\n  compensacoes?: CompensacaoGps[];\r\n  detalhe?: GuiaGpsDetalhe;\r\n  diversosAnexos?: GpsDiversosAnexos;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.guiagps';\r\n"],"sourceRoot":""}
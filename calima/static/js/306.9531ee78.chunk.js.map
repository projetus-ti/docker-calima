{"version":3,"sources":["models/enumerated/mcg/importacaoLancamentoMCGTipoEnum.ts","views/pages/mcg/importacaoLancamentoMCG/ImportacaoLancamentoMCGView.tsx","dependencies/grupoEmpresaConfigDependency.ts","services/mcg.service.ts","../node_modules/reactstrap/es/Alert.js","views/components/resultadoIntegracao/ResultadoIntegracao.tsx"],"names":["IMPORTACAO_LACAMENTO_MCG_ENUM_VALUES","value","label","ImportacaoLancamentoMCGView","props","globalReducer","useSelector","state","dispatch","useDispatch","_useForm","useForm","mode","reset","formProps","Object","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","showResultView","setShowResultView","_useState3","_useState4","showResultSuccessView","setShowResultSuccessView","_useState5","_useState6","showResultViewOldVersion","setShowResultViewOldVersion","_useState7","_useState8","showFormView","setShowFormView","_useState9","_useState10","listResultError","setListResultError","_useState11","_useState12","listResultSucess","setListResultSucess","useEffect","globalParameter","empresa","setTimeout","idGerEmpresa","id","versaoSuperiorA2","showLoading","progressActions","showProgress","animated","className","color","striped","react_default","a","createElement","summer_esm","title","useGlobalParameter","dependencies","hasGrupoEmpresaConfig","wikiId","wikiTitle","Alert","ResultadoIntegracao","assign","errorList","successList","hidePrintButton","tabFailure","tabSuccess","Form","hidden","isPrependLabel","placeholder","objectSpread2","validation","required","inputDropDownProps","optionsProvider","selectProps","isClearable","type","InputType","DROP_DOWN","Row","Col","acceptedTypes","isMultiple","limitSizeBytes","SIZE_ONE_HUNDRED_BYTES","propImageName","maxFiles","FormGroup","tag","CustomInput","innerRef","register","name","withTooltip","messagem","message","placement","propToolTip","handleSubmit","data","erros","isEmpty","getValues","arquivo","push","validateExtras","length","params","AlertType","WARNING","alertManager","emit","ACTION_EVENTS","SHOW","importarLancamentoMCG","thenFunction","result","hideProgress","errosExport","successExport","warnings","success","map","index","existeLancamentoImportado","mensagem","hasSINF","hasImportacao","dtInicial","dtFinal","onOkClick","WARNING_YES_NO","callImport","handleClose","goBack","dispatchClose","history","onClose","grupoEmpresaRaiz","grupoEmpresaConfig","grupoEmpresa","__webpack_require__","d","__webpack_exports__","getService","create","gerarLancamentosFolhaPagamento","integracaoFolhaParam","param","send","post","integrarFolhaPagamento","lancamentoIntegracaoFolha","integrarMCP","importarParam","importarLancamentoCSV","formDataSend","FormData","append","String","importarDuplicados","importarLancamentosCardinal","_step","_iterator","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__","arquivos","s","n","done","file","nomeArquivo","err","e","f","importarLancamentoPadraoCSV","_step2","_iterator2","importarHistoricoCSV","grupoHistoricoDestino","_step3","_iterator3","importarPlanoContaCSV","idEmpresa","grupoPlanoContaDestino","_step4","_iterator4","importarHistorico","importacaoHistorico","importarPlanoConta","importacaoPlanoContaParam","buscarConfigLivroFolhaMCG","get","integracaoFiscalContabil","encerrarContas","contaResultadoEncerramento","force","getDataUltimaContaEncerrada","limparEncerramentoContaResultado","contaResultadoLimpeza","validarReferenciaSPEDECFIrpjCsll","configECFIrpjCsll","validarReferenciaSPEDECFImuneIsenta","configECFImuneIsenta","validarRefRemuneracaoSocio","configECFRemuneracaoSocio","validarQuadroSocietario","configQuadro","obterLucroPrejuizoClassificacao","idGrupoPlanoConta","getSaldo","saldo","validarDadosSpedECF","ecfExportacaoParam","gerarSpedECF","usuario","getArquivoDigitalService","recuperarLancamentoConta","transferenciaLancamentoConta","transferirLancamentoConta","obterBancoPlanoConta","bancoPlanoContaDTO","validarConfigLivroFolha","changeLivroFolha","fecharRestaurar","fechamentoRestauracao","forceFecharRestaurar","verificarErros","gerarSpedContabil","selecaoSped","arquivoRTFEscrituracaoSubstituida","_step5","_iterator5","atributoSelecaoSped","salvarLucroPrejuizoClassificacao","lucroPrejuizoClassificacao","consultarMovimentacao","saldoCriteria","totalizadorLancamento","consulta","getSaldoAnterior","isDataEncerrada","parametros","abrirContas","removeLancamentoPeriodo","obterContasClassificacaoIndireto","salvarClassificacaoIndireto","contaFluxoCaixaIndireto","obterMutacaoPatrimonioLiquido","salvarMutacaoPatrimonioLiquido","mutacaoPatrimonioLiquido","salvarContaResultado","contaResultado","excluirContaResultado","obterContasClassificacaoDireto","salvarClassificacaoDireto","contaFluxoCaixa","findSubGrupo","planoContaSubGrupoParam","removerTodosPlanosConta","removeList","listaPlanoConta","apagarFilha","listSubGrupo","planoConta","referenciarContas","idsPlanoConta","idPlanoContaReferencial","idPlanoContaReferencialECF","desvincularContas","existeLancamentoEmContaAnalitica","idPlanoConta","tipoImportacao","sobescrever","importarSpedContabil","_step6","_iterator6","gerarManadContabil","refInicial","refFinal","arquivoSFP","evolucaoContaContabilGraf","evolucaoContaContabilGrafParam","composicaoReceitaDespesasGraf","compReceitaDespesasGrafParam","gerarFCONTContabil","fContContabilCrit","obterDadosArquivoExtrato","arquivoSelecionado","idBancoMCG","obterDadosConciliacaoBancariaPeriodo","obterBancoListPlanoConta","conciliarLancamentosExtrato","listConciliacaoBancaria","removerConciliarLancamentosExtrato","listaRemover","removerLancamentosExtratoBancario","obterLancamentosSaldoPeriodo","historico","valor","operacaoConsultaValor","conciliarLancamentosConta","listaConciliacao","removerConciliarLancamentosConta","listaConciliarRemover","eLalurAContas","eLacsAContas","getSaldoDebito","getSaldoCredito","removerLancamentoLote","atualizaCalculoIrpjCsll","buscarLancamentosHonorarios","integracaoHonorariosParam","integrarHonorarios","lancamentos","isAlteraCalculoIRPJorCSLL","alterarPlanoContaNaturezaConfig","enumPlanoContaNaturezaConta","prepararContaResultado","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","prop_types__WEBPACK_IMPORTED_MODULE_4__","prop_types__WEBPACK_IMPORTED_MODULE_4___default","classnames__WEBPACK_IMPORTED_MODULE_5__","classnames__WEBPACK_IMPORTED_MODULE_5___default","_utils__WEBPACK_IMPORTED_MODULE_6__","_Fade__WEBPACK_IMPORTED_MODULE_7__","propTypes","children","node","string","closeClassName","closeAriaLabel","cssModule","object","fade","bool","isOpen","toggle","func","transition","shape","oneOfType","defaultProps","unmountOnExit","Tag","attributes","classes","alert-dismissible","closeClasses","alertTransition","baseClass","timeout","in","role","aria-label","onClick","aria-hidden","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","activeTab","setActiveTab","columns","dataField","sort","text","defaultSorted","order","OrderType","ASC","toggleTab","target","tabIndex","Fragment","reactstrap__WEBPACK_IMPORTED_MODULE_5__","tabs","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","cx","active","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","tabId","react_bootstrap_table_next__WEBPACK_IMPORTED_MODULE_4___default","bootstrap4","bordered","condensed","hover","keyField","noDataIndication","responsive","tabIndexCell","key","style","marginTop","reactstrap__WEBPACK_IMPORTED_MODULE_10__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_1__","icon","disabled","printReport"],"mappings":"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","file":"static/js/306.9531ee78.chunk.js","sourcesContent":["export const PADRAO = { value: '1', label: 'Padrão' };\r\n\r\nexport const FOLHA_DE_PAGAMENTO = { value: '2', label: 'Folha de Pagamento' };\r\n\r\nexport const IMPORTACAO_LACAMENTO_MCG_ENUM_VALUES = [PADRAO, FOLHA_DE_PAGAMENTO];\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Alert, Col, CustomInput, Form, FormGroup, Row } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  EditViewProps,\r\n  ErroList,\r\n  FileInputPreview,\r\n  InputGroupInline,\r\n  InputTooltipProps,\r\n  InputType,\r\n  isEmpty,\r\n  ProcessBar,\r\n  progressActions,\r\n  SIZE_ONE_HUNDRED_BYTES,\r\n  WindowComponent,\r\n  withTooltip,\r\n} from 'summer';\r\nimport { hasGrupoEmpresaConfig } from '../../../../dependencies/grupoEmpresaConfigDependency';\r\nimport { ImportacaoLancamentoMCGRetornoValidacao } from '../../../../models/dtos/mcg/importacaoLancamentoMCGRetornoValidacao';\r\nimport { ImportacaoLancamentoMCGSelecao } from '../../../../models/dtos/mcg/importacaoLancamentoMCGSelecao';\r\nimport { IMPORTACAO_LACAMENTO_MCG_ENUM_VALUES } from '../../../../models/enumerated/mcg/importacaoLancamentoMCGTipoEnum';\r\nimport { importarLancamentoMCG } from '../../../../services/mcg.service';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport ResultadoIntegracao from '../../../components/resultadoIntegracao/ResultadoIntegracao';\r\n\r\ninterface ImportacaoLancamentoMCGViewProps extends EditViewProps<ImportacaoLancamentoMCGSelecao> {}\r\n\r\nconst ImportacaoLancamentoMCGView: FC<ImportacaoLancamentoMCGViewProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { reset, ...formProps } = useForm<ImportacaoLancamentoMCGSelecao>({ mode: 'onBlur' });\r\n\r\n  const [showResultView, setShowResultView] = useState(false);\r\n\r\n  const [showResultSuccessView, setShowResultSuccessView] = useState(false);\r\n\r\n  const [showResultViewOldVersion, setShowResultViewOldVersion] = useState(false);\r\n\r\n  const [showFormView, setShowFormView] = useState(true);\r\n\r\n  const [listResultError, setListResultError] = useState([]);\r\n\r\n  const [listResultSucess, setListResultSucess] = useState([]);\r\n\r\n  const MAX_FILES: number = 1;\r\n\r\n  useEffect(\r\n    () => {\r\n      if (globalReducer.globalParameter.empresa !== null) {\r\n        const { empresa } = globalReducer.globalParameter;\r\n        setTimeout(() => {\r\n          reset({\r\n            idGerEmpresa: empresa.id,\r\n            versaoSuperiorA2: true,\r\n          });\r\n        }, 500);\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const onClose = (goBack: boolean = true) => {\r\n    dispatchClose(props, props.history, goBack);\r\n  };\r\n\r\n  const handleCancel = () => onClose();\r\n\r\n  const handleImport = (data: ImportacaoLancamentoMCGSelecao) => {\r\n    const erros = validateExtras();\r\n    if (erros.length > 0) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.WARNING,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      dispatch(showLoading());\r\n      callImport(data);\r\n    }\r\n  };\r\n\r\n  const showLoading = () =>\r\n    progressActions.showProgress({\r\n      animated: true,\r\n      className: 'progress-bar-rounded progress-animated-alt',\r\n      color: 'first',\r\n      label: 'Aguarde processando...',\r\n      striped: true,\r\n      value: 100,\r\n    });\r\n\r\n  function callImport(data: ImportacaoLancamentoMCGSelecao): void {\r\n    importarLancamentoMCG(data, {\r\n      thenFunction: (result: ImportacaoLancamentoMCGRetornoValidacao) => {\r\n        dispatch(progressActions.hideProgress());\r\n        const errosExport = [];\r\n        const successExport = [];\r\n\r\n        if (result.versaoSuperiorA2) {\r\n          if (result.erros === null) {\r\n            setShowResultSuccessView(true);\r\n            setShowFormView(false);\r\n          }\r\n\r\n          if (result.erros !== null || result.warnings.length > 0 || result.success.length > 0) {\r\n            result.erros.map((value: string, index: number) => {\r\n              return errosExport.push({ id: index, message: value });\r\n            });\r\n\r\n            result.warnings.map((value: string, index: number) => {\r\n              return errosExport.push({ id: index, message: value });\r\n            });\r\n\r\n            result.success.map((value: string, index: number) => {\r\n              return successExport.push({ id: index, message: value });\r\n            });\r\n\r\n            setListResultError(errosExport);\r\n            setListResultSucess(successExport);\r\n            setShowResultView(true);\r\n            setShowFormView(false);\r\n          }\r\n        } else {\r\n          if (result.existeLancamentoImportado) {\r\n            let mensagem = 'Existem lançamentos importados ';\r\n\r\n            if (result.hasSINF) {\r\n              mensagem += 'do SINF  ';\r\n            }\r\n\r\n            if (result.hasSINF && result.hasImportacao) {\r\n              mensagem += 'e ';\r\n            }\r\n\r\n            if (result.hasImportacao) {\r\n              mensagem += 'de sistemas de terceiros ';\r\n            }\r\n\r\n            mensagem += 'no período de ' + result.dtInicial + ' à ' + result.dtFinal + '.';\r\n\r\n            mensagem += ' Continuar essa importação resultará na exclusão dos mesmos.\\n Deseja continuar? ';\r\n\r\n            const params: AlertProps = {\r\n              message: mensagem,\r\n              onOkClick: () => {\r\n                dispatch(showLoading());\r\n                data.dtInicial = result.dtInicial;\r\n                data.dtFinal = result.dtFinal;\r\n                data.versaoSuperiorA2 = result.versaoSuperiorA2;\r\n                importarLancamentoMCG(data, {\r\n                  thenFunction: () => {\r\n                    dispatch(progressActions.hideProgress());\r\n                    setShowResultViewOldVersion(true);\r\n                    setShowFormView(false);\r\n                  },\r\n                });\r\n              },\r\n              type: AlertType.WARNING_YES_NO,\r\n            };\r\n            alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n          } else {\r\n            dispatch(showLoading());\r\n            data.versaoSuperiorA2 = result.versaoSuperiorA2;\r\n            importarLancamentoMCG(data, {\r\n              thenFunction: () => {\r\n                dispatch(progressActions.hideProgress());\r\n                setShowResultViewOldVersion(true);\r\n                setShowFormView(false);\r\n              },\r\n            });\r\n          }\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  function validateExtras(): string[] {\r\n    const erros = [];\r\n    if (isEmpty(formProps.getValues().arquivo)) {\r\n      erros.push('Nenhum Arquivo selecionado');\r\n    }\r\n\r\n    return erros;\r\n  }\r\n\r\n  const propToolTip = (messagem: string): InputTooltipProps => {\r\n    return {\r\n      message: messagem,\r\n      placement: 'top-start',\r\n    };\r\n  };\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Importação de Lançamento Layout\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasGrupoEmpresaConfig(globalReducer.globalParameter)]}\r\n      wikiId={188}\r\n      wikiTitle=\"Layout de Importação Contábil\"\r\n    >\r\n      {showResultViewOldVersion && (\r\n        <Alert color=\"warning\" className=\"text-center\">\r\n          Impotação de arquivo de versão anterior à 2 não possuem log.\r\n        </Alert>\r\n      )}\r\n      {showResultSuccessView && (\r\n        <Alert color=\"success\" className=\"text-center\">\r\n          Todos os Registros Foram Inseridos com Sucesso.\r\n        </Alert>\r\n      )}\r\n      {showResultView && (\r\n        <ResultadoIntegracao\r\n          {...props}\r\n          errorList={listResultError}\r\n          successList={listResultSucess}\r\n          hidePrintButton={true}\r\n          tabFailure=\"Registros Rejeitados\"\r\n          tabSuccess=\"Registros Importados\"\r\n        />\r\n      )}\r\n      {showFormView && (\r\n        <Form>\r\n          <InputGroupInline formProps={formProps} id=\"idGerEmpresa\" hidden={true} />\r\n          <InputGroupInline formProps={formProps} id=\"versaoSuperiorA2\" hidden={true} />\r\n\r\n          <InputGroupInline\r\n            id=\"tipoImportacao\"\r\n            label=\"Tipo de Importação\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Selecione o Tipo de Importação\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            inputDropDownProps={{\r\n              optionsProvider: IMPORTACAO_LACAMENTO_MCG_ENUM_VALUES,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n          <Row>\r\n            <Col>\r\n              <FileInputPreview\r\n                acceptedTypes=\".txt\"\r\n                formProps={formProps}\r\n                isMultiple={true}\r\n                limitSizeBytes={SIZE_ONE_HUNDRED_BYTES}\r\n                propImageName=\"arquivo\"\r\n                maxFiles={MAX_FILES}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <FormGroup tag={Row} className=\"mt-2\">\r\n            <Col>\r\n              <CustomInput\r\n                id=\"idsobescrever\"\r\n                innerRef={formProps.register}\r\n                label=\"Sobrescrever Lançamentos Contábeis das Importações Anteriores\"\r\n                name=\"sobescrever\"\r\n                type=\"switch\"\r\n              />\r\n              {withTooltip(\r\n                propToolTip(\r\n                  'Caso o campo seja marcado, os Lançamentos Contábeis anteriores serão sobrescritos. Essa ação não sobrescreve os Planos de Contas importados anteriormente.'\r\n                ),\r\n                'sobescrever'\r\n              )}\r\n            </Col>\r\n          </FormGroup>\r\n          <ProcessBar handleSubmit={formProps.handleSubmit(handleImport)} handleClose={handleCancel} />\r\n        </Form>\r\n      )}\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default ImportacaoLancamentoMCGView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasGrupoEmpresaConfig(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n\r\n  const msg: string =\r\n    'O Grupo de empresas não está configurado para a empresa selecionada. Para configurar acesse:\\n' +\r\n    'Modulo Principal > Manutenção > Configurações > Grupo de Empresa';\r\n\r\n  if (\r\n    !globalParameter.empresa ||\r\n    !globalParameter.empresa.grupoEmpresaRaiz.grupoEmpresaConfig ||\r\n    !globalParameter.empresa.grupoEmpresa.grupoEmpresaConfig\r\n  ) {\r\n    result = msg;\r\n  }\r\n\r\n  return result;\r\n}\r\n","import { AxiosInstance } from 'axios';\r\nimport { ArquivoSelecionado, AxiosParam, create, isEmpty, send } from 'summer';\r\nimport { PlanoConta } from '../models/dtos/ger/planoConta';\r\nimport { PlanoContaSubGrupoParam } from '../models/dtos/ger/planoContaSubGrupoParam';\r\nimport { RuleMessage } from '../models/dtos/ger/ruleMessage';\r\nimport { Usuario } from '../models/dtos/ger/usuario';\r\nimport { BancoExtrato } from '../models/dtos/mcg/bancoExtrato';\r\nimport { BancoMCG } from '../models/dtos/mcg/bancoMCG';\r\nimport { BancoPlanoConta } from '../models/dtos/mcg/bancoPlanoConta';\r\nimport { CalculoIrpjCsll } from '../models/dtos/mcg/calculoIrpjCsll';\r\nimport { ComposicaoReceitaDespesasGrafParam } from '../models/dtos/mcg/composicaoReceitaDespesasGrafParam';\r\nimport { ComposicaoReceitaDespesasGrafReturn } from '../models/dtos/mcg/composicaoReceitaDespesasGrafReturn';\r\nimport { ConciliacaoBancaria } from '../models/dtos/mcg/conciliacaoBancaria';\r\nimport { ConciliacaoConta } from '../models/dtos/mcg/conciliacaoConta';\r\nimport { ConfigECFImuneIsenta } from '../models/dtos/mcg/configECFImuneIsenta';\r\nimport { ConfigECFIrpjCsll } from '../models/dtos/mcg/configECFIrpjCsll';\r\nimport { ConfigECFRemuneracaoSocio } from '../models/dtos/mcg/configECFRemuneracaoSocio';\r\nimport { ConsultaTotalLancamento } from '../models/dtos/mcg/consultaTotalLancamento';\r\nimport { ContaFluxoCaixa } from '../models/dtos/mcg/contaFluxoCaixa';\r\nimport { ContaFluxoCaixaIndireto } from '../models/dtos/mcg/contaFluxoCaixaIndireto';\r\nimport { ContaResultado } from '../models/dtos/mcg/contaResultado';\r\nimport { ContaResultadoLimpeza } from '../models/dtos/mcg/contaResultadoLimpeza';\r\nimport { ContaResultadoMCGEncerramento } from '../models/dtos/mcg/contaResultadoMCGEncerramento';\r\nimport { DataEncerradaParam } from '../models/dtos/mcg/dataEncerradaParam';\r\nimport { ECFExportacaoParam } from '../models/dtos/mcg/ecfExportacaoParam';\r\nimport { Erros } from '../models/dtos/mcg/erros';\r\nimport { EvolucaoContaContabilGrafParam } from '../models/dtos/mcg/evolucaoContaContabilGrafParam';\r\nimport { EvolucaoContaContabilGrafReturn } from '../models/dtos/mcg/evolucaoContaContabilGrafReturn';\r\nimport { FCONTContabilCrit } from '../models/dtos/mcg/fContContabilCrit';\r\nimport { FechamentoRestauracaoMCG } from '../models/dtos/mcg/fechamentoRestauracaoMCG';\r\nimport { ImportacaoFiscalContabil, ImportacaoFiscalContabilResult } from '../models/dtos/mcg/importacaoFiscalContabil';\r\nimport { ImportacaoHistorico } from '../models/dtos/mcg/importacaoHistorico';\r\nimport { ImportacaoHistoricoCSVParam } from '../models/dtos/mcg/importacaoHistoricoCSVParam';\r\nimport { ImportacaoLancamentoCSVParam } from '../models/dtos/mcg/importacaoLancamentoCSVParam';\r\nimport { ImportacaoLancamentoMCGRetornoValidacao } from '../models/dtos/mcg/importacaoLancamentoMCGRetornoValidacao';\r\nimport { ImportacaoLancamentoMCGSelecao } from '../models/dtos/mcg/importacaoLancamentoMCGSelecao';\r\nimport { ImportacaoLancamentoPadraoCSVParam } from '../models/dtos/mcg/importacaoLancamentoPadraoCSVParam';\r\nimport { ImportacaoPlanoConta } from '../models/dtos/mcg/importacaoPlanoConta';\r\nimport { ImportacaoPlanoContaCSVParam } from '../models/dtos/mcg/importacaoPlanoContaCSVParam';\r\nimport { ImportacaoSpedContabil } from '../models/dtos/mcg/importacaoSpedContabil';\r\nimport { ImportacaoResult, ImportarMCP } from '../models/dtos/mcg/importarMCP';\r\nimport { InfoConciliacaoBancaria } from '../models/dtos/mcg/infoConciliacaoBancaria';\r\nimport { IntegracaoFolhaParam } from '../models/dtos/mcg/integracaoFolhaParam';\r\nimport { IntegracaoHonorariosParam } from '../models/dtos/mcg/integracaoHonorariosParam';\r\nimport { Lancamento } from '../models/dtos/mcg/lancamento';\r\nimport { LancamentoConciliacao } from '../models/dtos/mcg/lancamentoConciliacao';\r\nimport { LancamentoIntegracaoFolha } from '../models/dtos/mcg/lancamentoIntegracaoFolha';\r\nimport { LancamentoIntegracaoHonorarios } from '../models/dtos/mcg/lancamentoIntegracaoHonorarios';\r\nimport { LancamentoSaldo } from '../models/dtos/mcg/lancamentoSaldo';\r\nimport { LivroFolha } from '../models/dtos/mcg/livroFolha';\r\nimport { LucroPrejuizoClassificacao } from '../models/dtos/mcg/lucroPrejuizoClassificacao';\r\nimport { MANADContabilCrit } from '../models/dtos/mcg/manadContabilCrit';\r\nimport { MutacaoPatrimonioLiquido } from '../models/dtos/mcg/mutacaoPatrimonioLiquido';\r\nimport { QuadroSocietario } from '../models/dtos/mcg/quadroSocietario';\r\nimport { RemoveLancamentoLote } from '../models/dtos/mcg/removeLancamentoLote';\r\nimport { RemoveLancamentoPeriodo } from '../models/dtos/mcg/removeLancamentoPeriodo';\r\nimport { Saldo } from '../models/dtos/mcg/saldo';\r\nimport { SaldoCriteria } from '../models/dtos/mcg/saldoCriteria';\r\nimport { SelecaoSpedContabil } from '../models/dtos/mcg/selecaoSpedContabil';\r\nimport { SomaSaldo } from '../models/dtos/mcg/somaSaldo';\r\nimport { TotalizadorLancamento } from '../models/dtos/mcg/totalizadorLancamento';\r\nimport { TransferenciaLancamentoConta } from '../models/dtos/mcg/transferenciaLancamentoConta';\r\nimport { VerificarErros } from '../models/dtos/mcg/verificarErros';\r\nimport { getArquivoDigitalService } from './ger.service';\r\n\r\nfunction getService(): AxiosInstance {\r\n  return create('/mcg');\r\n}\r\n\r\nexport function gerarLancamentosFolhaPagamento(integracaoFolhaParam: IntegracaoFolhaParam, param: AxiosParam<LancamentoIntegracaoFolha[]>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/gerarLancamentosFolhaPagamento', integracaoFolhaParam), param);\r\n}\r\n\r\nexport function integrarFolhaPagamento(lancamentoIntegracaoFolha: LancamentoIntegracaoFolha[], param: AxiosParam<any>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/integrarFolhaPagamento', lancamentoIntegracaoFolha), param);\r\n}\r\n\r\nexport function integrarMCP(importarParam: ImportarMCP, param: AxiosParam<ImportacaoResult>) {\r\n  send(getService().post<ImportacaoResult>('/importar', importarParam), param);\r\n}\r\n\r\nexport function importarLancamentoCSV(data: ImportacaoLancamentoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('importarDuplicados', String(data.importarDuplicados));\r\n  formDataSend.append('importarLancamentosCardinal', String(data.importarLancamentosCardinal));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarLancamentoPadraoCSV(data: ImportacaoLancamentoPadraoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoPadraoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistoricoCSV(data: ImportacaoHistoricoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('grupoHistoricoDestino.id', String(data.grupoHistoricoDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarHistoricoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarPlanoContaCSV(data: ImportacaoPlanoContaCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idEmpresa', String(data.idEmpresa));\r\n  formDataSend.append('grupoPlanoContaDestino.id', String(data.grupoPlanoContaDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarPlanoContaCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistorico(importacaoHistorico: ImportacaoHistorico, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarHistorico', importacaoHistorico), param);\r\n}\r\n\r\nexport function importarPlanoConta(importacaoPlanoContaParam: ImportacaoPlanoConta, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarPlanoConta', importacaoPlanoContaParam), param);\r\n}\r\n\r\nexport function buscarConfigLivroFolhaMCG(idEmpresa: number, param: AxiosParam<LivroFolha>) {\r\n  send(getService().get<LivroFolha>('/buscarConfigLivroFolhaMCG/' + idEmpresa), param);\r\n}\r\n\r\nexport function integracaoFiscalContabil(importarParam: ImportacaoFiscalContabil, param: AxiosParam<ImportacaoFiscalContabilResult>) {\r\n  send(getService().post<ImportacaoFiscalContabilResult>('/integracaoFiscalContabil', importarParam), param);\r\n}\r\n\r\nexport function encerrarContas(\r\n  contaResultadoEncerramento: ContaResultadoMCGEncerramento,\r\n  force: boolean,\r\n  param: AxiosParam<ContaResultadoMCGEncerramento>\r\n) {\r\n  send(\r\n    getService().post<ContaResultadoMCGEncerramento>('/encerrarContas', { contaResultadoEncerramento, force }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function getDataUltimaContaEncerrada(idGerEmpresa: number, param: AxiosParam<Date>) {\r\n  send(getService().get<Date>('/getDataUltimaContaEncerrada/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function limparEncerramentoContaResultado(contaResultadoLimpeza: ContaResultadoLimpeza, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/limparEncerramentoContaResultadoApos', contaResultadoLimpeza), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFIrpjCsll(configECFIrpjCsll: ConfigECFIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFIrpjCsll', configECFIrpjCsll), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFImuneIsenta(configECFImuneIsenta: ConfigECFImuneIsenta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFImuneIsenta', configECFImuneIsenta), param);\r\n}\r\n\r\nexport function validarRefRemuneracaoSocio(configECFRemuneracaoSocio: ConfigECFRemuneracaoSocio, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarRefRemuneracaoSocio', configECFRemuneracaoSocio), param);\r\n}\r\n\r\nexport function validarQuadroSocietario(configQuadro: QuadroSocietario, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/validarQuadroSocietario', configQuadro), param);\r\n}\r\n\r\nexport function obterLucroPrejuizoClassificacao(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterLucroPrejuizoClassificacao/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function getSaldo(saldo: Saldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldo', saldo), param);\r\n}\r\n\r\nexport function validarDadosSpedECF(ecfExportacaoParam: ECFExportacaoParam, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/validarDadosSpedECF', ecfExportacaoParam), param);\r\n}\r\n\r\nexport function gerarSpedECF(usuario: Usuario, ecfExportacaoParam: ECFExportacaoParam, param?: AxiosParam<string>) {\r\n  send(\r\n    getArquivoDigitalService().post<string>('/gerarSpedECF', { usuario, ecfExportacaoParam }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function recuperarLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<Lancamento[]>) {\r\n  send(getService().post<Lancamento[]>('/recuperarLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function transferirLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/transferirLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function obterBancoPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG>) {\r\n  send(getService().post<BancoMCG>('/obterBancoPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function validarConfigLivroFolha(idGerEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(getService().get<boolean>('/validarConfigLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function changeLivroFolha(idGerEmpresa: number, param: AxiosParam<void>) {\r\n  send(getService().get<void>('/changeLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function fecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<RuleMessage>) {\r\n  send(getService().post<RuleMessage>('/fecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function forceFecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/forceFecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function verificarErros(erros: VerificarErros, param: AxiosParam<Erros[]>) {\r\n  send(getService().post<Erros[]>('/verificarErros', erros), param);\r\n}\r\n\r\nexport function gerarSpedContabil(selecaoSped: SelecaoSpedContabil, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('usuario.id', String(selecaoSped.usuario.id));\r\n\r\n  if (selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n    for (const arquivo of selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n      formDataSend.append('arquivoRTFEscrituracaoSubstituida', arquivo.file, arquivo.nomeArquivo);\r\n    }\r\n  }\r\n\r\n  for (const atributoSelecaoSped in selecaoSped) {\r\n    if (\r\n      atributoSelecaoSped !== 'arquivoRTFEscrituracaoSubstituida' &&\r\n      atributoSelecaoSped !== 'usuario' &&\r\n      selecaoSped[atributoSelecaoSped] !== null\r\n    ) {\r\n      formDataSend.append(atributoSelecaoSped, selecaoSped[atributoSelecaoSped]);\r\n    }\r\n  }\r\n  send(getService().post<string>('/gerarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function salvarLucroPrejuizoClassificacao(\r\n  lucroPrejuizoClassificacao: LucroPrejuizoClassificacao,\r\n  param: AxiosParam<LucroPrejuizoClassificacao>\r\n) {\r\n  send(getService().post<LucroPrejuizoClassificacao>('/salvarLucroPrejuizoClassificacao', lucroPrejuizoClassificacao), param);\r\n}\r\n\r\nexport function consultarMovimentacao(saldoCriteria: SaldoCriteria, param: AxiosParam<LancamentoSaldo[]>) {\r\n  send(getService().post<LancamentoSaldo[]>('/consultarMovimentacao', saldoCriteria), param);\r\n}\r\n\r\nexport function totalizadorLancamento(consulta: ConsultaTotalLancamento, param: AxiosParam<TotalizadorLancamento>) {\r\n  send(getService().post<TotalizadorLancamento>('/totalizadorLancamento', consulta), param);\r\n}\r\n\r\nexport function getSaldoAnterior(saldoCriteria: SaldoCriteria, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoAnterior', saldoCriteria), param);\r\n}\r\n\r\nexport function isDataEncerrada(parametros: DataEncerradaParam, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isDataEncerrada', parametros), param);\r\n}\r\n\r\nexport function abrirContas(parametros: DataEncerradaParam, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/abrirContas', parametros), param);\r\n}\r\n\r\nexport function removeLancamentoPeriodo(parametros: RemoveLancamentoPeriodo, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removeLancamentoPeriodo', parametros), param);\r\n}\r\n\r\nexport function obterContasClassificacaoIndireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixaIndireto[]>) {\r\n  send(getService().get<ContaFluxoCaixaIndireto[]>('/obterContasClassificacaoIndireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoIndireto(contaFluxoCaixaIndireto: ContaFluxoCaixaIndireto, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoIndireto', contaFluxoCaixaIndireto), param);\r\n}\r\n\r\nexport function obterMutacaoPatrimonioLiquido(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterMutacaoPatrimonioLiquido/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarMutacaoPatrimonioLiquido(mutacaoPatrimonioLiquido: MutacaoPatrimonioLiquido, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarMutacaoPatrimonioLiquido', mutacaoPatrimonioLiquido), param);\r\n}\r\n\r\nexport function salvarContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function excluirContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/excluirContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function obterContasClassificacaoDireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixa[]>) {\r\n  send(getService().get<ContaFluxoCaixa[]>('/obterContasClassificacaoDireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoDireto(contaFluxoCaixa: ContaFluxoCaixa, param?: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoDireto', contaFluxoCaixa), param);\r\n}\r\n\r\nexport function findSubGrupo(planoContaSubGrupoParam: PlanoContaSubGrupoParam, param: AxiosParam<any>) {\r\n  send(getService().post<any>('/findSubGrupo', planoContaSubGrupoParam), param);\r\n}\r\n\r\nexport function removerTodosPlanosConta(idGrupoPlanoConta: number, usuario: Usuario, param: AxiosParam<void>) {\r\n  send(\r\n    getService().post<void>('/removerTodosPlanosConta', { idGrupoPlanoConta, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function removeList(listaPlanoConta: PlanoConta[], apagarFilha: boolean, usuario: Usuario, param: AxiosParam<any>) {\r\n  send(\r\n    getService().post<any>('/removeList', { listaPlanoConta, apagarFilha, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function listSubGrupo(planoConta: PlanoConta, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().post<PlanoConta[]>('/listSubGrupo', planoConta), param);\r\n}\r\n\r\nexport function referenciarContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<void>\r\n) {\r\n  send(\r\n    getService().post<void>('/referenciarContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function desvincularContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<any>\r\n) {\r\n  send(\r\n    getService().post<void>('/desvincularContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function existeLancamentoEmContaAnalitica(idPlanoConta: number, idEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(\r\n    getService().post<boolean>('/existeLancamentoEmContaAnalitica', { idPlanoConta, idEmpresa }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function importarLancamentoMCG(data: ImportacaoLancamentoMCGSelecao, param: AxiosParam<ImportacaoLancamentoMCGRetornoValidacao>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('tipoImportacao', String(data.tipoImportacao));\r\n  formDataSend.append('sobescrever', String(data.sobescrever));\r\n  formDataSend.append('versaoSuperiorA2', String(data.versaoSuperiorA2));\r\n  formDataSend.append('arquivo', data.arquivo[0].file, data.arquivo[0].nomeArquivo);\r\n\r\n  if (data.versaoSuperiorA2 === false && !isEmpty(data.dtInicial) && !isEmpty(data.dtFinal)) {\r\n    formDataSend.append('dtInicial', data.dtInicial);\r\n    formDataSend.append('dtFinal', data.dtFinal);\r\n  }\r\n\r\n  send(getService().post<ImportacaoLancamentoMCGRetornoValidacao>('/importarLancamentoMCG', formDataSend), param);\r\n}\r\n\r\nexport function importarSpedContabil(data: ImportacaoSpedContabil, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function gerarManadContabil(data: MANADContabilCrit, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('refInicial', data.refInicial);\r\n  formDataSend.append('refFinal', data.refFinal);\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  if (!isEmpty(data.arquivoSFP)) {\r\n    formDataSend.append('arquivoSFP', data.arquivoSFP[0].file, data.arquivoSFP[0].nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<string>('/gerarManadContabil', formDataSend), param);\r\n}\r\n\r\nexport function evolucaoContaContabilGraf(\r\n  evolucaoContaContabilGrafParam: EvolucaoContaContabilGrafParam,\r\n  param: AxiosParam<EvolucaoContaContabilGrafReturn>\r\n) {\r\n  send(getService().post<EvolucaoContaContabilGrafReturn>('/evolucaoContaContabilGraf', evolucaoContaContabilGrafParam), param);\r\n}\r\n\r\nexport function composicaoReceitaDespesasGraf(\r\n  compReceitaDespesasGrafParam: ComposicaoReceitaDespesasGrafParam,\r\n  param: AxiosParam<ComposicaoReceitaDespesasGrafReturn>\r\n) {\r\n  send(getService().post<ComposicaoReceitaDespesasGrafReturn>('/composicaoReceitaDespesasGraf', compReceitaDespesasGrafParam), param);\r\n}\r\n\r\nexport function gerarFCONTContabil(fContContabilCrit: FCONTContabilCrit, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/gerarFCONTContabil', fContContabilCrit), param);\r\n}\r\n\r\nexport function obterDadosArquivoExtrato(arquivoSelecionado: ArquivoSelecionado, idBancoMCG, param: AxiosParam<BancoExtrato[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idBancoMCG', idBancoMCG);\r\n\r\n  formDataSend.append('arquivoSelecionado', arquivoSelecionado[0].file, arquivoSelecionado[0].nomeArquivo);\r\n\r\n  send(getService().post<BancoExtrato[]>('/obterDadosArquivoExtrato', formDataSend), param);\r\n}\r\n\r\nexport function obterDadosConciliacaoBancariaPeriodo(\r\n  idGrupoPlanoConta,\r\n  idEmpresa,\r\n  idBancoMCG,\r\n  dtInicial,\r\n  dtFinal,\r\n  param: AxiosParam<InfoConciliacaoBancaria>\r\n) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGrupoPlanoConta', String(idGrupoPlanoConta));\r\n  formDataSend.append('idEmpresa', String(idEmpresa));\r\n  formDataSend.append('idBancoMCG', String(idBancoMCG));\r\n  formDataSend.append('dtInicial', String(dtInicial));\r\n  formDataSend.append('dtFinal', String(dtFinal));\r\n\r\n  send(getService().post<InfoConciliacaoBancaria>('/obterDadosConciliacaoBancariaPeriodo', formDataSend), param);\r\n}\r\n\r\nexport function obterBancoListPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG[]>) {\r\n  send(getService().post<BancoMCG[]>('/obterBancoListPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function conciliarLancamentosExtrato(listConciliacaoBancaria: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/conciliarLancamentosExtrato', listConciliacaoBancaria), param);\r\n}\r\n\r\nexport function removerConciliarLancamentosExtrato(listaRemover: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerConciliarLancamentosExtrato', listaRemover), param);\r\n}\r\n\r\nexport function removerLancamentosExtratoBancario(listaRemover: BancoExtrato[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerLancamentosExtratoBancario', listaRemover), param);\r\n}\r\nexport function obterLancamentosSaldoPeriodo(\r\n  idGrupoPlanoConta,\r\n  idEmpresa,\r\n  dtInicial,\r\n  dtFinal,\r\n  historico,\r\n  valor,\r\n  operacaoConsultaValor,\r\n  param: AxiosParam<LancamentoConciliacao[]>\r\n) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGrupoPlanoConta', String(idGrupoPlanoConta));\r\n  formDataSend.append('idEmpresa', String(idEmpresa));\r\n  formDataSend.append('dtInicial', String(dtInicial));\r\n  formDataSend.append('dtFinal', String(dtFinal));\r\n  formDataSend.append('historico', String(historico));\r\n  formDataSend.append('valor', String(valor));\r\n  formDataSend.append('operacaoConsultaValor', String(operacaoConsultaValor));\r\n\r\n  send(getService().post<LancamentoConciliacao[]>('/obterLancamentosSaldoPeriodo', formDataSend), param);\r\n}\r\n\r\nexport function conciliarLancamentosConta(listaConciliacao: ConciliacaoConta[], param: AxiosParam<void>) {\r\n  send(getService().post<void>('/conciliarLancamentosConta', listaConciliacao), param);\r\n}\r\n\r\nexport function removerConciliarLancamentosConta(listaConciliarRemover: ConciliacaoConta[], param: AxiosParam<void>) {\r\n  send(getService().post<void>('/removerConciliarLancamentosConta', listaConciliarRemover), param);\r\n}\r\n\r\nexport function eLalurAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLalurAContas/' + id), param);\r\n}\r\n\r\nexport function eLacsAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLacsAContas/' + id), param);\r\n}\r\n\r\nexport function getSaldoDebito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoDebito', parametros), param);\r\n}\r\n\r\nexport function getSaldoCredito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoCredito', parametros), param);\r\n}\r\n\r\nexport function removerLancamentoLote(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/removerLancamentoLote', parametros), param);\r\n}\r\n\r\nexport function atualizaCalculoIrpjCsll(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/atualizaCalculoIrpjCsll', parametros), param);\r\n}\r\n\r\nexport function buscarLancamentosHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  param: AxiosParam<LancamentoIntegracaoHonorarios[]>\r\n) {\r\n  send(getService().post<LancamentoIntegracaoHonorarios[]>('/buscarLancamentosHonorarios', integracaoHonorariosParam), param);\r\n}\r\n\r\nexport function integrarHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  lancamentos: LancamentoIntegracaoHonorarios[],\r\n  param: AxiosParam<number>\r\n) {\r\n  send(\r\n    getService().post<number>('/integrarHonorarios', { integracaoHonorariosParam, lancamentos }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function isAlteraCalculoIRPJorCSLL(parametros: CalculoIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isAlteraCalculoIRPJorCSLL', parametros), param);\r\n}\r\n\r\nexport function alterarPlanoContaNaturezaConfig(idsPlanoConta: number[], enumPlanoContaNaturezaConta: number, param: AxiosParam<void>) {\r\n  send(\r\n    getService().post<void>('/alterarPlanoContaNaturezaConfig', { idsPlanoConta, enumPlanoContaNaturezaConta }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function prepararContaResultado(idGrupoPlanoConta: number, param: AxiosParam<void>) {\r\n  send(getService().get<void>('/prepararContaResultado/' + idGrupoPlanoConta), param);\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _objectSpread2 from \"@babel/runtime/helpers/esm/objectSpread\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Fade from './Fade';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  closeClassName: PropTypes.string,\n  closeAriaLabel: PropTypes.string,\n  cssModule: PropTypes.object,\n  color: PropTypes.string,\n  fade: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  tag: tagPropType,\n  transition: PropTypes.shape(Fade.propTypes),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  color: 'success',\n  isOpen: true,\n  tag: 'div',\n  closeAriaLabel: 'Close',\n  fade: true,\n  transition: _objectSpread2({}, Fade.defaultProps, {\n    unmountOnExit: true\n  })\n};\n\nfunction Alert(props) {\n  var className = props.className,\n      closeClassName = props.closeClassName,\n      closeAriaLabel = props.closeAriaLabel,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      color = props.color,\n      isOpen = props.isOpen,\n      toggle = props.toggle,\n      children = props.children,\n      transition = props.transition,\n      fade = props.fade,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"closeClassName\", \"closeAriaLabel\", \"cssModule\", \"tag\", \"color\", \"isOpen\", \"toggle\", \"children\", \"transition\", \"fade\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'alert', \"alert-\" + color, {\n    'alert-dismissible': toggle\n  }), cssModule);\n  var closeClasses = mapToCssModules(classNames('close', closeClassName), cssModule);\n\n  var alertTransition = _objectSpread2({}, Fade.defaultProps, {}, transition, {\n    baseClass: fade ? transition.baseClass : '',\n    timeout: fade ? transition.timeout : 0\n  });\n\n  return React.createElement(Fade, _extends({}, attributes, alertTransition, {\n    tag: Tag,\n    className: classes,\n    in: isOpen,\n    role: \"alert\",\n    innerRef: innerRef\n  }), toggle ? React.createElement(\"button\", {\n    type: \"button\",\n    className: closeClasses,\n    \"aria-label\": closeAriaLabel,\n    onClick: toggle\n  }, React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\")) : null, children);\n}\n\nAlert.propTypes = propTypes;\nAlert.defaultProps = defaultProps;\nexport default Alert;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport cx from 'clsx';\r\nimport React, { FC, MouseEvent, useState } from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport { Button, Nav, NavItem, NavLink, TabContent, TabPane } from 'reactstrap';\r\nimport { ColumnsProps, DefaultSortProps, dispatchClose, OrderType } from 'summer';\r\n\r\nexport interface ResultadoIntegracaoProps {\r\n  /** Lista de erros da integração */\r\n  errorList?: any[];\r\n  /** Lista de sucessos da integração */\r\n  successList?: any[];\r\n  /** History do navegador */\r\n  history?: any;\r\n  /** Relatório a ser impresso */\r\n  printReport?: any;\r\n  /** Oculta o botão para imprimir o relatório */\r\n  hidePrintButton?: boolean | false;\r\n  /** Texto da aba de sucesso */\r\n  tabSuccess?: string;\r\n  /** Texto da aba de falhas */\r\n  tabFailure?: string;\r\n}\r\n\r\nconst ResultadoIntegracao: FC<ResultadoIntegracaoProps> = props => {\r\n  const [activeTab, setActiveTab] = useState(1);\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'message',\r\n      sort: true,\r\n      text: 'Descrição',\r\n    },\r\n  ];\r\n\r\n  const defaultSorted: DefaultSortProps[] = [\r\n    {\r\n      dataField: 'message',\r\n      order: OrderType.ASC,\r\n    },\r\n  ];\r\n\r\n  const onClose = (goBack: boolean = true) => {\r\n    dispatchClose(props, props.history, goBack);\r\n  };\r\n\r\n  const handleCancel = () => onClose();\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Nav tabs={true}>\r\n        <NavItem>\r\n          <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n            {props.tabSuccess || 'Sucessos'}\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink className={cx({ active: activeTab === 2 })} tabIndex={2} onClick={toggleTab}>\r\n            {props.tabFailure || 'Falhas'}\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n        <TabPane tabId={1} className=\"mb-0 p-3\">\r\n          <div className=\"table-area\">\r\n            <BootstrapTable\r\n              bootstrap4={true}\r\n              bordered={true}\r\n              columns={columns}\r\n              condensed={true}\r\n              className=\"table-scroll\"\r\n              data={props.successList || []}\r\n              defaultSorted={defaultSorted}\r\n              hover={true}\r\n              keyField=\"id\"\r\n              noDataIndication=\"Nenhum registro a ser exibido.\"\r\n              responsive={true}\r\n              striped={true}\r\n              tabIndexCell={true}\r\n            />\r\n          </div>\r\n          <div key=\"divFotterKey\" className=\"text-left\">\r\n            Registros: {props.successList.length}\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tabId={2} className=\"mb-0 p-3\">\r\n          <div className=\"table-area\">\r\n            <BootstrapTable\r\n              bootstrap4={true}\r\n              bordered={true}\r\n              columns={columns}\r\n              condensed={true}\r\n              className=\"table-scroll\"\r\n              data={props.errorList || []}\r\n              defaultSorted={defaultSorted}\r\n              hover={true}\r\n              keyField=\"id\"\r\n              noDataIndication=\"Nenhum registro a ser exibido.\"\r\n              responsive={true}\r\n              striped={true}\r\n              tabIndexCell={true}\r\n            />\r\n          </div>\r\n          <div key=\"divFotterKey\" className=\"text-left\">\r\n            Registros: {props.errorList.length}\r\n          </div>\r\n        </TabPane>\r\n      </TabContent>\r\n\r\n      <div className=\"float-right\" style={{ marginTop: 10 }}>\r\n        <Button color=\"danger\" className=\"mr-2\" onClick={handleCancel}>\r\n          <FontAwesomeIcon icon=\"times\" /> Cancelar\r\n        </Button>\r\n      </div>\r\n      {props.hidePrintButton ? null : (\r\n        <div className=\"float-left\" style={{ marginTop: 10 }}>\r\n          <Button className=\"mr-2\" disabled={props.errorList.length === 0} onClick={props.printReport} color=\"success\">\r\n            <FontAwesomeIcon icon=\"paste\" /> Imprimir Falhas\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResultadoIntegracao;\r\n"],"sourceRoot":""}
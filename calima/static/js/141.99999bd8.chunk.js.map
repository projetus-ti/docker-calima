{"version":3,"sources":["views/pages/mcg/report/centroCusto/centroCustoRV.ts","views/pages/mcg/report/centroCusto/CentroCustoReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/printerConfigTypeEnum.ts","models/enumerated/ger/printerTypeEnum.ts","dependencies/grupoEmpresaConfigDependency.ts","dependencies/empresaMCGDependency.ts","models/dtos/ger/printerDataBasic.ts","views/pages/report/ReportFormView.tsx"],"names":["REPORT_TITLE","BASIC_DATA","Object","objectSpread2","getDefaultPrinterDataBasic","module","CentroCustoReportView","props","history","useHistory","formProps","useForm","mode","globalReducer","useSelector","state","useEffect","globalParameter","empresa","_globalReducer$global","id","idGrupoEmpresaRaiz","grupoEmpresa","setTimeout","setValue","react_default","a","createElement","summer_esm","assign","title","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMCG","hasGrupoEmpresaConfig","ReportFormView","printerData","extraConfigOpened","hidden","result","__webpack_require__","d","__webpack_exports__","SIMPLE","DATE","DATES","MONTHYEAR","MONTHYEARS","YEAR","label","value","GRAPHIC","PRINTER_TYPE_ENUM","grupoEmpresaRaiz","grupoEmpresaConfig","empresaMCG","_enumerated_ger_printerConfigTypeEnum__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_printerTypeEnum__WEBPACK_IMPORTED_MODULE_1__","reportEventType","classKey","printerConfigTypeEnum","anoLabel","dtFinalLabel","dtInicialLabel","pageNumber","passObj","printerDataEmail","printerTypeEnum","refFinalLabel","refInicialLabel","reportSequence","_props$printerData","resetObject","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","length","current","currentMomentDate","endDate","dtInicial","formatDate","toDate","dtFinal","endOf","referenciaInicial","format","REF_PATTERN","referenciaFinal","ano","String","year","reset","dateInitial","react__WEBPACK_IMPORTED_MODULE_2___default","summer__WEBPACK_IMPORTED_MODULE_7__","isPrependLabel","validation","required","type","InputType","dateComponent","datesComponent","Fragment","referenceInitial","REFERENCE","referenceComponent","referencesComponent","anoComponent","inputMaskedProps","mask","MASK","reactstrap__WEBPACK_IMPORTED_MODULE_3__","noValidate","children","firstOpen","placeholder","iconAppend","appendClickHandler","maxLength","minLength","min","NUMBER","reactstrap__WEBPACK_IMPORTED_MODULE_4__","className","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","name","innerRef","register","inputDropDownProps","optionsProvider","selectProps","isClearable","DROP_DOWN","handleSubmit","data","event","preventDefault","erros","validateExtras","params","message","AlertType","ERROR","alertManager","emit","ACTION_EVENTS","SHOW","showToast","INFORMATION","delay","gerarOldReport","errorFunction","mensagem","thenFunction","downloadOldReport","response","contentDisposition","headers","filename","slice","lastIndexOf","split","replace","saveAs","hideCancelButton"],"mappings":"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","file":"static/js/141.99999bd8.chunk.js","sourcesContent":["export interface CentroCustoRelPass {\r\n  idGerEmpresa?: any;\r\n  idGerGrupoEmpresaAtual?: any;\r\n  idsGerGrupoEmpresaPais?: any[];\r\n  idGerGrupoEmpresaRaiz?: any;\r\n}\r\n\r\nexport const REPORT_TITLE: string = 'Relação de Centros de Custo';\r\nexport const REPORT_EVENT: string = 'printCentroCustoRelacao';\r\nexport const CLASS_KEY: string = 'centrocustorelpass';\r\n","import React, { useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { InputGroupInline, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../../dependencies/empresaMCGDependency';\r\nimport { hasGrupoEmpresaConfig } from '../../../../../dependencies/grupoEmpresaConfigDependency';\r\nimport { getDefaultPrinterDataBasic, PrinterDataBasic } from '../../../../../models/dtos/ger/printerDataBasic';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport ReportFormView from '../../../report/ReportFormView';\r\nimport { CentroCustoRelPass, CLASS_KEY, REPORT_EVENT, REPORT_TITLE } from './centroCustoRV';\r\n\r\nconst BASIC_DATA: PrinterDataBasic = {\r\n  ...getDefaultPrinterDataBasic(REPORT_TITLE, REPORT_EVENT, CLASS_KEY),\r\n  module: 'MCG',\r\n};\r\n\r\nexport default function CentroCustoReportView(props: WindowComponentProps) {\r\n  const history = useHistory();\r\n\r\n  const formProps = useForm<CentroCustoRelPass>({ mode: 'onBlur' });\r\n\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (globalReducer.globalParameter.empresa !== null) {\r\n        const {\r\n          empresa: { id, idGrupoEmpresaRaiz, grupoEmpresa },\r\n        } = globalReducer.globalParameter;\r\n\r\n        setTimeout(() => {\r\n          formProps.setValue('idGerEmpresa', id);\r\n          formProps.setValue('idGerGrupoEmpresaAtual', grupoEmpresa.id);\r\n          formProps.setValue('idGerGrupoEmpresaRaiz', idGrupoEmpresaRaiz);\r\n        }, 800);\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  return (\r\n    <WindowComponent\r\n      {...props}\r\n      title={REPORT_TITLE}\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[\r\n        () => hasEmpresa(globalReducer.globalParameter),\r\n        () => hasEmpresaMCG(globalReducer.globalParameter),\r\n        () => hasGrupoEmpresaConfig(globalReducer.globalParameter),\r\n      ]}\r\n    >\r\n      <ReportFormView formProps={formProps} printerData={BASIC_DATA} history={history} extraConfigOpened={true}>\r\n        <InputGroupInline formProps={formProps} id=\"idGerEmpresa\" hidden={true} />\r\n        <InputGroupInline formProps={formProps} id=\"idGerGrupoEmpresaAtual\" hidden={true} />\r\n        <InputGroupInline formProps={formProps} id=\"idsGerGrupoEmpresaPais[]\" hidden={true} />\r\n        <InputGroupInline formProps={formProps} id=\"idGerGrupoEmpresaRaiz\" hidden={true} />\r\n      </ReportFormView>\r\n    </WindowComponent>\r\n  );\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const SIMPLE = { label: '', value: '0' };\r\nexport const DATE = { label: '', value: '1' };\r\nexport const DATES = { label: '', value: '2' };\r\nexport const MONTHYEAR = { label: '', value: '3' };\r\nexport const MONTHYEARS = { label: '', value: '4' };\r\nexport const TINY = { label: '', value: '5' }; // TODO Remover\r\nexport const YEAR = { label: '', value: '6' };\r\nexport const QUARTER_YEAR = { label: '', value: '7' }; // TODO Remover\r\n\r\nconst PRINTER_CONFIG_TYPE_ENUM = [SIMPLE, DATE, DATES, MONTHYEAR, MONTHYEARS, TINY, YEAR, QUARTER_YEAR];\r\n\r\nexport default PRINTER_CONFIG_TYPE_ENUM;\r\n","export const TEXT = { label: 'Texto - CalimaDesk', value: 'texto' };\r\nexport const GRAPHIC = { label: 'Gráfico - PDF', value: 'grafico' };\r\nexport const EMAIL = { label: 'E-mail - PDF', value: 'email' };\r\n\r\nconst PRINTER_TYPE_ENUM = [TEXT, GRAPHIC, EMAIL];\r\n\r\nexport default PRINTER_TYPE_ENUM;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasGrupoEmpresaConfig(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n\r\n  const msg: string =\r\n    'O Grupo de empresas não está configurado para a empresa selecionada. Para configurar acesse:\\n' +\r\n    'Modulo Principal > Manutenção > Configurações > Grupo de Empresa';\r\n\r\n  if (\r\n    !globalParameter.empresa ||\r\n    !globalParameter.empresa.grupoEmpresaRaiz.grupoEmpresaConfig ||\r\n    !globalParameter.empresa.grupoEmpresa.grupoEmpresaConfig\r\n  ) {\r\n    result = msg;\r\n  }\r\n\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMCG(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMCG) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o módulo Contábil. Para configurá-la acesse:\\n' +\r\n      'Módulo Contábil > Manutenção > Configurações > Empresa.';\r\n  }\r\n  return result;\r\n}\r\n","import { SIMPLE } from '../../enumerated/ger/printerConfigTypeEnum';\r\nimport { GRAPHIC } from '../../enumerated/ger/printerTypeEnum';\r\nimport { PrinterDataEmail } from './printerDataEmail';\r\n\r\nexport interface PrinterDataBasic {\r\n  printerTypeEnum?: string;\r\n  dtInicial?: string;\r\n  dtFinal?: string;\r\n  refInicial?: string;\r\n  refFinal?: string;\r\n  reportSequence?: boolean;\r\n  pageNumber?: string;\r\n  title?: string;\r\n  printerDataEmail?: PrinterDataEmail;\r\n  passObj?: any;\r\n  printerConfigTypeEnum?: string;\r\n\r\n  dtInicialLabel?: string;\r\n  dtFinalLabel?: string;\r\n  refInicialLabel?: string;\r\n  refFinalLabel?: string;\r\n  anoLabel?: string;\r\n\r\n  reportEventType: string;\r\n  classKey: string;\r\n  module: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.printerdatabasicdto';\r\n\r\nexport function getDefaultPrinterDataBasic(\r\n  title: string,\r\n  reportEventType: string,\r\n  classKey: string,\r\n  printerConfigTypeEnum: string = SIMPLE.value,\r\n  module: string = 'MLF'\r\n) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    classKey,\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    module,\r\n    pageNumber: '1',\r\n    passObj: {},\r\n    printerConfigTypeEnum,\r\n    printerDataEmail: {},\r\n    printerTypeEnum: GRAPHIC.value,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportSequence: false,\r\n    title,\r\n  };\r\n}\r\n","import { saveAs } from 'file-saver';\r\nimport React, { FC, useEffect } from 'react';\r\nimport { Col, CustomInput, Form, Row } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  currentMomentDate,\r\n  ErroList,\r\n  ERROR,\r\n  format,\r\n  formatDate,\r\n  INFORMATION,\r\n  InputGroupInline,\r\n  InputType,\r\n  ProcessBar,\r\n  REF_PATTERN,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { PrinterDataBasic } from '../../../models/dtos/ger/printerDataBasic';\r\nimport { DATE, DATES, MONTHYEAR, MONTHYEARS, YEAR } from '../../../models/enumerated/ger/printerConfigTypeEnum';\r\nimport PRINTER_TYPE_ENUM, { GRAPHIC } from '../../../models/enumerated/ger/printerTypeEnum';\r\nimport { downloadOldReport, gerarOldReport } from '../../../services/report.service';\r\n\r\nexport interface ReportWindowComponentProps {\r\n  formProps: UseFormProps;\r\n  printerData?: PrinterDataBasic;\r\n  history?: any;\r\n  /** Função de validações extras */\r\n  validateExtras?: (printerData: PrinterDataBasic, formData: any) => string[];\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportFormView: FC<ReportWindowComponentProps> = props => {\r\n  useEffect(\r\n    () => {\r\n      const { printerTypeEnum, printerConfigTypeEnum } = props.printerData;\r\n      let resetObject: any = {\r\n        ...props.printerData,\r\n        printerTypeEnum: printerTypeEnum && printerTypeEnum.length > 0 ? printerTypeEnum[0] : GRAPHIC.value,\r\n      };\r\n\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (printerConfigTypeEnum) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case MONTHYEAR.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case MONTHYEARS.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case YEAR.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      props.formProps.reset(resetObject);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.printerData.printerConfigTypeEnum, props.printerData.printerTypeEnum]\r\n  );\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(props.printerData, data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      props.printerData.passObj = data;\r\n      showToast('Seu relatório está sendo gerado...', { ...INFORMATION, delay: 3000 });\r\n      gerarOldReport(props.printerData, {\r\n        errorFunction: (mensagem: string) => {\r\n          showToast(mensagem, ERROR);\r\n        },\r\n        thenFunction: () => {\r\n          downloadOldReport({\r\n            errorFunction: (mensagem: string) => {\r\n              showToast(mensagem, ERROR);\r\n            },\r\n            thenFunction: (response: any) => {\r\n              const contentDisposition = response.headers['content-disposition'];\r\n              const filename = contentDisposition\r\n                .slice(0, contentDisposition.lastIndexOf(';'))\r\n                .split('filename=')[1]\r\n                .replace(/\"/g, '');\r\n              saveAs(response.data, filename);\r\n            },\r\n          });\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.printerData.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.printerData.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: true } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.printerData.printerConfigTypeEnum === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.printerData.printerConfigTypeEnum === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.printerData.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: true } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"refInicial\"\r\n      label={props.printerData.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: true } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.printerData.printerConfigTypeEnum === MONTHYEAR.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.printerData.printerConfigTypeEnum === MONTHYEARS.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"refFinal\"\r\n          label={props.printerData.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: true } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.printerData.printerConfigTypeEnum === YEAR.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.printerData.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n\r\n      <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n        <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n          <InputGroupInline\r\n            id=\"title\"\r\n            label=\"Título\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Título\"\r\n            iconAppend=\"undo-alt\"\r\n            appendClickHandler={restoreTitle}\r\n            formProps={{\r\n              ...props.formProps,\r\n              validation: {\r\n                maxLength: 120,\r\n                minLength: 5,\r\n                required: true,\r\n              },\r\n            }}\r\n          />\r\n\r\n          <InputGroupInline\r\n            id=\"pageNumber\"\r\n            label=\"Página Inicial\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Página Inicial\"\r\n            formProps={{\r\n              ...props.formProps,\r\n              validation: {\r\n                min: 0,\r\n                required: true,\r\n              },\r\n            }}\r\n            type={InputType.NUMBER}\r\n          />\r\n\r\n          <Row className=\"mb-3 mt-3\">\r\n            <Col>\r\n              <CustomInput\r\n                type=\"switch\"\r\n                label=\"Sequenciar Relatórios\"\r\n                id=\"reportSequence\"\r\n                name=\"reportSequence\"\r\n                innerRef={props.formProps.register}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          {dateComponent}\r\n          {datesComponent}\r\n          {referenceComponent}\r\n          {referencesComponent}\r\n          {anoComponent}\r\n\r\n          <InputGroupInline\r\n            id=\"printerTypeEnum\"\r\n            label=\"Tipo de Impressão\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Selecione o tipo de impressão\"\r\n            formProps={{ ...props.formProps, validation: { required: true } }}\r\n            inputDropDownProps={{\r\n              optionsProvider: PRINTER_TYPE_ENUM,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n        </AccordionItem>\r\n      </Accordion>\r\n\r\n      <ProcessBar handleSubmit={props.formProps.handleSubmit(onSubmit)} hideCancelButton={true} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportFormView;\r\n"],"sourceRoot":""}
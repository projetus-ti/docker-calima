{"version":3,"sources":["views/pages/mfp/report/ferias/controle/controleFeriasRV.ts","views/pages/mfp/report/ferias/controle/ControleFeriasReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","dependencies/empresaMFPDependency.ts","models/enumerated/mfp/ordenacaoTrabalhorEnum.ts"],"names":["DEFAULT_VALUES","Object","objectSpread2","getDefaultReportBasicValues","empresasSelecionadas","ordenacao","MATRICULA","value","vencidas","DEFAULT_OPTIONS","getDefaultReportViewOptions","exibirConfiguracaoDadosEmpresa","ControleFeriasReportView","props","globalReducer","useSelector","state","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","isDisableEmpresa","setIsDisableEmpresa","_useState3","_useState4","isCheckedEmpresa","setIsCheckedEmpresa","react_default","a","createElement","summer_esm","title","useGlobalParameter","globalParameter","dependencies","hasEmpresa","hasEmpresaMFP","wikiId","wikiTitle","ReportForm","assign","localStorageKey","routeProps","reportBasicValues","reportViewOptions","validateExtras","controleFeriasRV","getValues","erros","antecipadas","noPrazo","push","gerarPorEmpresas","isEmpty","Row","style","marginBottom","Col","CustomInput","onChange","setValue","type","label","id","name","innerRef","register","checked","message","componentId","withTooltip","placement","tooltip","EmpresaIS","placeholder","isPrependLabel","inputSearchProps","size","selectProps","isMulti","disabled","validation","required","inputDropDownProps","optionsProvider","ORDENACAO_TRABALHO_CONTROLE_FERIAS_ENUM_VALUES","InputType","DROP_DOWN","Card","CardHeader","className","CardBody","result","empresa","__webpack_require__","d","__webpack_exports__","NATUREZA","SALDO_REPORT_ENUM","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","gerarCabecalhoPadraoAdministradora","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","virtualization","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","errors","triggerValidation","handleCancel","currentItem","currentValues","parentObject","EnvioEmail","Fragment","sort","detailView","keyField","propName","maxLength","TEXT_AREA","ReportInputs","activeTab","setActiveTab","useEffect","_props$reportViewOpti","printingTypes","resetObject","length","idGerEmpresa","current","currentMomentDate","endDate","DATE","dtInicial","formatDate","toDate","DATES","dtFinal","endOf","REFERENCE","referenciaInicial","format","REF_PATTERN","REFERENCES","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dtInicialRequired","dateComponent","datesComponent","dtFinalRequired","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","NUMBER","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","inputProps","segmentacaoFolhaComponent","exibirSegmentacaoFolha","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","exibirImprimirValoresColoridos","isClearable","firstOpen","extraConfigOpened","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","hidden","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","params","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history","empresaMFP","ORDENACAO_TRABALHO_MATRICULA_NOME_ENUM_VALUES","ORDENACAO_TRABALHADOR_ENUM_VALUES","NOME","LOTACAO_MATRICULA","LOTACAO_NOME","DATA_VENCIMENTO"],"mappings":"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","file":"static/js/130.06c699fe.chunk.js","sourcesContent":["import { ReportBasicValues } from '../../../../../../models/dtos/ger/reportBasicValues';\r\n\r\nexport interface ControleFeriasRV extends ReportBasicValues {\r\n  antecipadas?: boolean;\r\n  /** este campo utiliza o enum OrdenacaoTrabalhorEnum */\r\n  ordenacao?: string;\r\n  noPrazo?: boolean;\r\n  vencidas?: boolean;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'controleferiasrv';\r\nexport const REPORT_EVENT: string = 'printControleFerias';\r\nexport const REPORT_TITLE: string = 'Controle de Férias';\r\n","import React, { FC, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Card, CardBody, CardHeader, Col, CustomInput, Row } from 'reactstrap';\r\nimport { InputGroupInline, InputType, isEmpty, WindowComponent, WindowComponentProps, withTooltip } from 'summer';\r\nimport { hasEmpresa } from '../../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMFP } from '../../../../../../dependencies/empresaMFPDependency';\r\nimport { getDefaultReportBasicValues } from '../../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../../models/dtos/ger/reportViewOptions';\r\nimport { MATRICULA, ORDENACAO_TRABALHO_CONTROLE_FERIAS_ENUM_VALUES } from '../../../../../../models/enumerated/mfp/ordenacaoTrabalhorEnum';\r\nimport { Reducers } from '../../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../../store/ducks/global.duck';\r\nimport EmpresaIS from '../../../../../components/ger/empresaIS/EmpresaIS';\r\nimport ReportForm from '../../../../../components/report/ReportForm';\r\nimport { CLASS_KEY, ControleFeriasRV, REPORT_EVENT, REPORT_TITLE } from './controleFeriasRV';\r\n\r\nconst DEFAULT_VALUES: ControleFeriasRV = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n  empresasSelecionadas: [],\r\n  ordenacao: MATRICULA.value,\r\n  vencidas: true,\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT),\r\n  exibirConfiguracaoDadosEmpresa: false,\r\n};\r\n\r\nconst ControleFeriasReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const { handleSubmit, ...formProps } = useForm<ControleFeriasRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n\r\n  const tooltip = (message: string, componentId: string) => withTooltip({ message, placement: 'top-start' }, componentId);\r\n\r\n  const [isDisableEmpresa, setIsDisableEmpresa] = useState(true);\r\n\r\n  const [isCheckedEmpresa, setIsCheckedEmpresa] = useState(false);\r\n\r\n  const handleChangeEmpresa = () => {\r\n    if (isCheckedEmpresa) {\r\n      setIsCheckedEmpresa(false);\r\n      setIsDisableEmpresa(true);\r\n    } else {\r\n      setIsCheckedEmpresa(true);\r\n      setIsDisableEmpresa(false);\r\n      formProps.setValue('empresasSelecionadas', null, true);\r\n    }\r\n  };\r\n\r\n  const validateExtras = () => {\r\n    const controleFeriasRV: ControleFeriasRV = formProps.getValues();\r\n    const erros = [];\r\n\r\n    if (controleFeriasRV.vencidas === false && controleFeriasRV.antecipadas === false && controleFeriasRV.noPrazo === false) {\r\n      erros.push('Status - Pelo menos um campo deve ser marcado.');\r\n    }\r\n\r\n    if (controleFeriasRV.gerarPorEmpresas) {\r\n      if (isEmpty(controleFeriasRV.empresasSelecionadas)) {\r\n        erros.push('Empresas - Campo não pode estar em branco quando a opção Gerar por Empresas estiver selecionada.');\r\n      }\r\n    }\r\n    return erros;\r\n  };\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Controle de Férias\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMFP(globalReducer.globalParameter)]}\r\n      wikiId={2853}\r\n      wikiTitle={'Relatório de Controle de Férias'}\r\n    >\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n        validateExtras={validateExtras}\r\n      >\r\n        <Row style={{ marginBottom: '10px' }}>\r\n          <Col>\r\n            <CustomInput\r\n              onChange={handleChangeEmpresa}\r\n              type=\"switch\"\r\n              label=\"Gerar por Empresas\"\r\n              id=\"idgerarPorEmpresas\"\r\n              name=\"gerarPorEmpresas\"\r\n              innerRef={formProps.register}\r\n              checked={isCheckedEmpresa}\r\n            />\r\n            {tooltip('Quando não selecionado a empresa atual será utilizada.', 'gerarPorEmpresas')}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <EmpresaIS\r\n              label=\"Empresa(s)\"\r\n              placeholder=\"Selecione uma ou várias empresas.\"\r\n              id=\"empresasSelecionadas\"\r\n              isPrependLabel={true}\r\n              formProps={formProps}\r\n              inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n              disabled={isDisableEmpresa}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"ordenacao\"\r\n              label=\"Ordem\"\r\n              isPrependLabel={true}\r\n              placeholder=\"Selecione a ordem\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              inputDropDownProps={{\r\n                optionsProvider: ORDENACAO_TRABALHO_CONTROLE_FERIAS_ENUM_VALUES,\r\n              }}\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col style={{ marginBottom: '30px' }}>\r\n            <Card>\r\n              <CardHeader className=\"font-weight-bold bg-light\">Status</CardHeader>\r\n              <CardBody>\r\n                <Row style={{ marginBottom: '10px' }}>\r\n                  <Col>\r\n                    <CustomInput type=\"switch\" label=\"Vencidas\" id=\"vencidas\" name=\"vencidas\" innerRef={formProps.register} />\r\n                  </Col>\r\n                  <Col>\r\n                    <CustomInput type=\"switch\" label=\"No prazo\" id=\"noPrazo\" name=\"noPrazo\" innerRef={formProps.register} />\r\n                  </Col>\r\n                  <Col>\r\n                    <CustomInput type=\"switch\" label=\"Antencipadas\" id=\"antecipadas\" name=\"antecipadas\" innerRef={formProps.register} />\r\n                  </Col>\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </ReportForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default ControleFeriasReportView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMFP(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMFP) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o Módulo Folha de Pagamento. Para configurá-la acesse Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n","export const MATRICULA = { value: 'MATRICULA', label: 'Matrícula' };\r\nexport const NOME = { value: 'NOME', label: 'Nome' };\r\nexport const LOTACAO_MATRICULA = { value: 'LOTACAO_MATRICULA', label: 'Lotação e Matrícula' };\r\nexport const LOTACAO_NOME = { value: 'LOTACAO_NOME', label: 'Lotação e Nome' };\r\nexport const DATA_VENCIMENTO = { value: 'DATA_VENCIMENTO', label: 'Data de Vencimento' };\r\n\r\nexport const ORDENACAO_TRABALHO_ENUM_VALUES = [MATRICULA, NOME, LOTACAO_MATRICULA, LOTACAO_NOME, DATA_VENCIMENTO];\r\n\r\nexport const ORDENACAO_TRABALHO_MATRICULA_NOME_ENUM_VALUES = [MATRICULA, NOME];\r\n\r\nexport const ORDENACAO_TRABALHO_CONTROLE_FERIAS_ENUM_VALUES = [MATRICULA, NOME, DATA_VENCIMENTO];\r\n\r\nexport const ORDENACAO_TRABALHADOR_ENUM_VALUES = [MATRICULA, NOME, LOTACAO_MATRICULA, LOTACAO_NOME];\r\n"],"sourceRoot":""}
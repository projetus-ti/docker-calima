{"version":3,"sources":["models/dtos/ger/administradora.ts","views/pages/ger/administradora/AdministradoraEmailEditView.tsx","views/pages/ger/administradora/AdministradoraEnderecoEditView.tsx","views/pages/ger/administradora/AdministradoraTelefoneEditView.tsx","views/pages/ger/administradora/AdministradoraEditView.tsx","models/dtos/ger/cepUF.ts","models/dtos/ger/cepLocalidade.ts","views/components/ger/cepUFIS/CepUFIS.tsx","views/components/ger/cepLocalidadeIS/CepLocalidadeIS.tsx","models/dtos/ger/cepBairro.ts","models/dtos/ger/cepLogradouro.ts","models/dtos/ger/cepTitulo.ts","views/components/ger/cepBairroIS/CepBairroIS.tsx","views/components/ger/cepTituloIS/CepTituloIS.tsx","views/components/ger/cepLogradouro/CepLogradouroIS.tsx","hooks/useCepManager.ts","utilities/tipoTelefoneFormatter.ts","utilities/tipoEnderecoFormatter.ts"],"names":["CLASS_NAME","AdministradoraEmailEditView","props","formProps","useForm","defaultValues","Object","objectSpread2","selectedItem","mode","react_default","a","createElement","summer_esm","handleSubmit","handleCancel","Row","Col","validation","maxLength","id","isPrependLabel","label","labelWidth","placeholder","required","type","InputType","EMAIL","AdministradoraEnderecoEditView","cepManager","useCepManager","cep","titulo","nome","uf","localidade","bairro","useEffect","setTimeout","setValue","validateExtras","formValues","currentValues","parentObject","erros","tipoEnderecoSelection","getValues","push","enderecos","find","it","result","tipoEnderecoPrincipal","Number","isEmpty","rowIndex","CepLogradouroIS","inputSearchProps","selectProps","isMulti","name","ref","register","CepTituloIS","NUMBER","CepUFIS","CepLocalidadeIS","CepBairroIS","CustomInput","innerRef","className","AdministradoraTelefoneEditView","tipoTelefoneSelection","telefones","tipoTelefonePrincipal","TELEFONE","AdministradoraEditView","getSelectedItem","_useForm","reset","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","activeTab","setActiveTab","findByExample","entity","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleTab","target","tabIndex","defaultSortProps","dataField","order","OrderType","ASC","defaultSortEnderecoProps","columnsAdministradoraTelefone","text","formatter","tipoTelefoneFormatter","columnsAdministradoraEndereco","tipoEnderecoFormatter","administradoraEmailFormProps","columns","detailView","propName","title","administradoraTelefoneFormProps","administradoraEnderecoFormProps","editViewProps","dtoClassName","cpf","cnpj","length","xs","URL","propImageName","Label","CPF","CNPJ","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","assign","defaultSortDirection","DESC","defaultSorted","keyField","__webpack_require__","d","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","searchViewId","INPUT_SEARCH","onChange","value","searchFilter","setFilter","searchExpressionsFull","defaultExpressions","expressions","item","getFilter","CLASS_NAME_UF","fieldName","CLASS_NAME_LOCALIDADE","manage","CLASS_NAME_BAIRRO","fillForm","logradouro","keys","forEach","key","undefined","getProp","clearForm","tiposTelefone","tipoTelefoneCelular","tipoTelefoneComercial","tipoTelefoneFax","tipoTelefoneResidencial","tipoTelefone","resultado","campo","join","cell","row","tiposEndereco","tipoEnderecoCobranca","tipoEnderecoComercial","tipoEnderecoResidencial","tipoEndereco"],"mappings":"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","file":"static/js/44.45810ac4.chunk.js","sourcesContent":["import { Basic } from 'summer';\r\nimport { AdministradoraMHO } from '../mho/administradoraMHO';\r\nimport { AdministradoraEmail } from './administradoraEmail';\r\nimport { AdministradoraEndereco } from './administradoraEndereco';\r\nimport { AdministradoraTelefone } from './administradoraTelefone';\r\n\r\nexport interface Administradora extends Basic {\r\n  administradoraMHO?: AdministradoraMHO;\r\n  cei?: string;\r\n  cnpj?: string;\r\n  cpf?: string;\r\n  emails?: AdministradoraEmail[];\r\n  enderecos?: AdministradoraEndereco[];\r\n  homePage?: string;\r\n  ie?: string;\r\n  im?: string;\r\n  logoRelatorio?: any[];\r\n  nomeFantasia?: string;\r\n  razaoSocial?: string;\r\n  telefones?: AdministradoraTelefone[];\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.administradora';\r\n","import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline, InputType } from 'summer';\r\nimport { AdministradoraEmail } from '../../../../models/dtos/ger/administradoraEmail';\r\n\r\nconst labelWidth: number = 180;\r\n\r\nconst AdministradoraEmailEditView: FC<DetailEditViewFormProps<AdministradoraEmail>> = props => {\r\n  const formProps = useForm<AdministradoraEmail>({\r\n    defaultValues: { ...props.selectedItem },\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps}>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { maxLength: 120 } }}\r\n            id=\"contato\"\r\n            isPrependLabel={true}\r\n            label=\"Contato\"\r\n            labelWidth={labelWidth}\r\n            placeholder=\"Informe o contato\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { required: true, maxLength: 120 } }}\r\n            id=\"email\"\r\n            isPrependLabel={true}\r\n            label=\"E-mail\"\r\n            labelWidth={labelWidth}\r\n            placeholder=\"Informe o E-mail\"\r\n            type={InputType.EMAIL}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default AdministradoraEmailEditView;\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline, InputType, isEmpty } from 'summer';\r\nimport useCepManager from '../../../../hooks/useCepManager';\r\nimport { AdministradoraEndereco } from '../../../../models/dtos/ger/administradoraEndereco';\r\nimport { tipoEnderecoSelection } from '../../../../utilities/tipoEnderecoFormatter';\r\nimport CepBairroIS from '../../../components/ger/cepBairroIS/CepBairroIS';\r\nimport CepLocalidadeIS from '../../../components/ger/cepLocalidadeIS/CepLocalidadeIS';\r\nimport CepLogradouroIS from '../../../components/ger/cepLogradouro/CepLogradouroIS';\r\nimport CepTituloIS from '../../../components/ger/cepTituloIS/CepTituloIS';\r\nimport CepUFIS from '../../../components/ger/cepUFIS/CepUFIS';\r\n\r\nconst labelWidth: number = 180;\r\n\r\nconst AdministradoraEnderecoEditView: FC<DetailEditViewFormProps<AdministradoraEndereco>> = props => {\r\n  const formProps = useForm<AdministradoraEndereco>({\r\n    defaultValues: { ...props.selectedItem },\r\n    mode: 'onBlur',\r\n  });\r\n  const cepManager = useCepManager(formProps, { cep: true, titulo: 'tipoLogradouro', nome: 'logradouro', uf: true, localidade: true, bairro: true });\r\n\r\n  useEffect(\r\n    () => {\r\n      if (props.selectedItem && props.selectedItem.id) {\r\n        setTimeout(() => {\r\n          // @ts-ignore\r\n          formProps.setValue('cepFmt', { cep: props.selectedItem.cep, label: props.selectedItem.cep });\r\n        }, 500);\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const validateExtras = (formValues, currentValues, parentObject) => {\r\n    const erros = [];\r\n\r\n    if (!tipoEnderecoSelection(formProps.getValues())) {\r\n      erros.push('Pelo menos um tipo de endereço deve ser marcado.');\r\n    }\r\n\r\n    if (parentObject.enderecos) {\r\n      const foundEndereco = parentObject.enderecos.find(it => {\r\n        let result = false;\r\n        if (it.tipoEnderecoPrincipal === true && formValues.tipoEnderecoPrincipal === true) {\r\n          result = Number(it.id) !== Number(formValues.id) && (isEmpty(formValues.rowIndex) || Number(it.rowIndex) !== Number(formValues.rowIndex));\r\n        }\r\n        return result;\r\n      });\r\n      if (foundEndereco) {\r\n        erros.push('Já existe um Endereço cadastrado como principal.');\r\n      }\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <Row>\r\n        <Col>\r\n          <CepLogradouroIS\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            label=\"CEP\"\r\n            placeholder=\"Informe o CEP\"\r\n            id=\"cepFmt\"\r\n            labelWidth={labelWidth}\r\n            isPrependLabel={true}\r\n            inputSearchProps={{ selectProps: { isMulti: false } }}\r\n            cepManager={cepManager}\r\n          />\r\n        </Col>\r\n        <input type=\"hidden\" name=\"cep\" ref={formProps.register} />\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <CepTituloIS\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            label=\"Tipo de Logradouro\"\r\n            placeholder=\"Informe o tipo de logradouro\"\r\n            id=\"tipoLogradouro\"\r\n            labelWidth={labelWidth}\r\n            isPrependLabel={true}\r\n            inputSearchProps={{ selectProps: { isMulti: false } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { maxLength: 150, required: true } }}\r\n            id=\"logradouro\"\r\n            isPrependLabel={true}\r\n            labelWidth={labelWidth}\r\n            label=\"Logradouro\"\r\n            placeholder=\"Informe o logradouro.\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { maxLength: 10, required: true } }}\r\n            id=\"numero\"\r\n            isPrependLabel={true}\r\n            labelWidth={labelWidth}\r\n            label=\"Número\"\r\n            placeholder=\"Informe o número.\"\r\n            type={InputType.NUMBER}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { maxLength: 60 } }}\r\n            id=\"complemento\"\r\n            isPrependLabel={true}\r\n            labelWidth={labelWidth}\r\n            label=\"Complemento\"\r\n            placeholder=\"Informe o Complemento.\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <CepUFIS\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            id=\"uf\"\r\n            labelWidth={labelWidth}\r\n            isPrependLabel={true}\r\n            inputSearchProps={{ selectProps: { isMulti: false } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <CepLocalidadeIS\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            id=\"localidade\"\r\n            labelWidth={labelWidth}\r\n            isPrependLabel={true}\r\n            inputSearchProps={{ selectProps: { isMulti: false } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <CepBairroIS\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            id=\"bairro\"\r\n            labelWidth={labelWidth}\r\n            isPrependLabel={true}\r\n            inputSearchProps={{ selectProps: { isMulti: false } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <CustomInput type=\"switch\" id=\"tipoEnderecoPrincipal\" name=\"tipoEnderecoPrincipal\" label=\"Principal\" innerRef={formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput type=\"switch\" id=\"tipoEnderecoResidencial\" name=\"tipoEnderecoResidencial\" label=\"Residencial\" innerRef={formProps.register} />\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput type=\"switch\" id=\"tipoEnderecoCobranca\" name=\"tipoEnderecoCobranca\" label=\"Cobrança\" innerRef={formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput type=\"switch\" id=\"tipoEnderecoComercial\" name=\"tipoEnderecoComercial\" label=\"Comercial\" innerRef={formProps.register} />\r\n        </Col>\r\n      </Row>\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default AdministradoraEnderecoEditView;\r\n","import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline, InputType, isEmpty } from 'summer';\r\nimport { AdministradoraTelefone } from '../../../../models/dtos/ger/administradoraTelefone';\r\nimport { tipoTelefoneSelection } from '../../../../utilities/tipoTelefoneFormatter';\r\n\r\nconst labelWidth: number = 180;\r\n\r\nconst AdministradoraTelefoneEditView: FC<DetailEditViewFormProps<AdministradoraTelefone>> = props => {\r\n  const formProps = useForm<AdministradoraTelefone>({\r\n    defaultValues: { ...props.selectedItem },\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const validateExtras = (formValues, currentValues, parentObject) => {\r\n    const erros = [];\r\n\r\n    if (!tipoTelefoneSelection(formProps.getValues())) {\r\n      erros.push('Pelo menos um tipo de telefone deve ser marcado.');\r\n    }\r\n\r\n    if (parentObject.telefones) {\r\n      const foundTelefones = parentObject.telefones.find(it => {\r\n        let result = false;\r\n        if (it.tipoTelefonePrincipal === true && formValues.tipoTelefonePrincipal === true) {\r\n          result = Number(it.id) !== Number(formValues.id) && (isEmpty(formValues.rowIndex) || Number(it.rowIndex) !== Number(formValues.rowIndex));\r\n        }\r\n        return result;\r\n      });\r\n      if (foundTelefones) {\r\n        erros.push('Já existe um Endereço cadastrado como principal.');\r\n      }\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={formProps}\r\n            id=\"contato\"\r\n            isPrependLabel={true}\r\n            label=\"Contato\"\r\n            labelWidth={labelWidth}\r\n            placeholder=\"Informe o contato\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            id=\"numero\"\r\n            isPrependLabel={true}\r\n            label=\"Telefone\"\r\n            labelWidth={labelWidth}\r\n            placeholder=\"Informe o Telefone\"\r\n            type={InputType.TELEFONE}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <CustomInput type=\"switch\" id=\"tipoTelefonePrincipal\" name=\"tipoTelefonePrincipal\" label=\"Principal\" innerRef={formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput type=\"switch\" id=\"tipoTelefoneResidencial\" name=\"tipoTelefoneResidencial\" label=\"Residencial\" innerRef={formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput type=\"switch\" id=\"tipoTelefoneCelular\" name=\"tipoTelefoneCelular\" label=\"Celular\" innerRef={formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput type=\"switch\" id=\"tipoTelefoneFax\" name=\"tipoTelefoneFax\" label=\"Fax\" innerRef={formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput type=\"switch\" id=\"tipoTelefoneComercial\" name=\"tipoTelefoneComercial\" label=\"Comercial\" innerRef={formProps.register} />\r\n        </Col>\r\n      </Row>\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default AdministradoraTelefoneEditView;\r\n","import cx from 'classnames';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, Label, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  ColumnsProps,\r\n  DefaultSortProps,\r\n  DetailManagerForm,\r\n  DetailManagerFormProps,\r\n  EditForm,\r\n  EditViewProps,\r\n  ERROR,\r\n  findByExample,\r\n  getSelectedItem,\r\n  ImageInputPreview,\r\n  InputGroupInline,\r\n  InputType,\r\n  isEmpty,\r\n  OrderType,\r\n  showToast,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { Administradora, CLASS_NAME } from '../../../../models/dtos/ger/administradora';\r\nimport { tipoEnderecoFormatter } from '../../../../utilities/tipoEnderecoFormatter';\r\nimport { tipoTelefoneFormatter } from '../../../../utilities/tipoTelefoneFormatter';\r\nimport AdministradoraEmailEditView from './AdministradoraEmailEditView';\r\nimport AdministradoraEnderecoEditView from './AdministradoraEnderecoEditView';\r\nimport AdministradoraTelefoneEditView from './AdministradoraTelefoneEditView';\r\n\r\ninterface AdministradoraEditViewProps extends EditViewProps<Administradora> {}\r\n\r\nconst labelWidth: number = 140;\r\n\r\nconst AdministradoraEditView: FC<AdministradoraEditViewProps & RouteComponentProps> = props => {\r\n  const selectedItem = getSelectedItem(props);\r\n  const { reset, ...formProps } = useForm<Administradora>({ defaultValues: selectedItem, mode: 'onBlur' });\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(() => {\r\n    const example: Administradora = { id: null, entity: null };\r\n    findByExample(example, CLASS_NAME, {\r\n      errorFunction: (mensagem: string): void => {\r\n        showToast(mensagem, ERROR);\r\n      },\r\n      thenFunction: (result: Administradora): void => {\r\n        setTimeout(() => {\r\n          reset(result);\r\n        }, 500);\r\n      },\r\n    });\r\n  }, [reset]);\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const defaultSortProps: DefaultSortProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      order: OrderType.ASC,\r\n    },\r\n  ];\r\n\r\n  const defaultSortEnderecoProps: DefaultSortProps[] = [\r\n    {\r\n      dataField: 'logradouro',\r\n      order: OrderType.ASC,\r\n    },\r\n  ];\r\n\r\n  const columnsAdministradoraEmail: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  const columnsAdministradoraTelefone: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'numero',\r\n      text: 'Telefone',\r\n    },\r\n    {\r\n      dataField: 'tipoTelefonePrincipal',\r\n      formatter: tipoTelefoneFormatter,\r\n      text: 'tipo',\r\n    },\r\n  ];\r\n\r\n  const columnsAdministradoraEndereco: ColumnsProps[] = [\r\n    {\r\n      dataField: 'logradouro',\r\n      text: 'Logradouro',\r\n    },\r\n    {\r\n      dataField: 'numero',\r\n      text: 'Número',\r\n    },\r\n    {\r\n      dataField: 'cep',\r\n      text: 'CEP',\r\n    },\r\n    {\r\n      dataField: 'tipoEnderecoPrincipal',\r\n      formatter: tipoEnderecoFormatter,\r\n      text: 'tipo',\r\n    },\r\n  ];\r\n\r\n  const administradoraEmailFormProps: DetailManagerFormProps = {\r\n    columns: columnsAdministradoraEmail,\r\n    detailView: AdministradoraEmailEditView,\r\n    formProps,\r\n    propName: 'emails',\r\n    title: 'E-mail',\r\n  };\r\n\r\n  const administradoraTelefoneFormProps: DetailManagerFormProps = {\r\n    columns: columnsAdministradoraTelefone,\r\n    detailView: AdministradoraTelefoneEditView,\r\n    formProps,\r\n    propName: 'telefones',\r\n    title: 'Telefone',\r\n  };\r\n\r\n  const administradoraEnderecoFormProps: DetailManagerFormProps = {\r\n    columns: columnsAdministradoraEndereco,\r\n    detailView: AdministradoraEnderecoEditView,\r\n    formProps,\r\n    propName: 'enderecos',\r\n    title: 'Endereços',\r\n  };\r\n\r\n  const validateExtras = () => {\r\n    const erros = [];\r\n    const telefones = formProps.getValues().telefones;\r\n    const enderecos = formProps.getValues().enderecos;\r\n\r\n    if (!formProps.getValues().cpf && !formProps.getValues().cnpj) {\r\n      erros.push('Campo C.P.F ou C.N.P.J deve ser preenchido.');\r\n    }\r\n\r\n    if (!isEmpty(telefones)) {\r\n      const existTelefonePrincipal = telefones.find(it => it.tipoTelefonePrincipal === true);\r\n      if (!existTelefonePrincipal) {\r\n        erros.push('Pelo menos um telefone deve ser principal.');\r\n      }\r\n    }\r\n\r\n    if (enderecos.length <= 0) {\r\n      erros.push('Pelo menos um endereço deve ser cadastrado.');\r\n    }\r\n\r\n    if (enderecos.length >= 0) {\r\n      const existEnderecoPrincipal = enderecos.find(it => it.tipoEnderecoPrincipal === true);\r\n      if (!existEnderecoPrincipal) {\r\n        erros.push('Pelo menos um endereço deve ser principal.');\r\n      }\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  return (\r\n    <WindowComponent title=\"Manutenção de Administradora\">\r\n      <EditForm formProps={formProps} editViewProps={props} dtoClassName={CLASS_NAME} validateExtras={validateExtras}>\r\n        <Row>\r\n          <Col xs=\"10\">\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true, maxLength: 100 } }}\r\n              id=\"razaoSocial\"\r\n              isPrependLabel={true}\r\n              labelWidth={labelWidth}\r\n              label=\"Razão Social\"\r\n              placeholder=\"Informe a Razão Social.\"\r\n            />\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { maxLength: 100 } }}\r\n              id=\"nomeFantasia\"\r\n              isPrependLabel={true}\r\n              labelWidth={labelWidth}\r\n              label=\"Nome Fantasia\"\r\n              placeholder=\"Informe o dígito verificador.\"\r\n            />\r\n            <InputGroupInline\r\n              formProps={formProps}\r\n              id=\"homePage\"\r\n              isPrependLabel={true}\r\n              labelWidth={labelWidth}\r\n              label=\"Site\"\r\n              placeholder=\"Informe o Site\"\r\n              type={InputType.URL}\r\n            />\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <ImageInputPreview formProps={formProps} propImageName=\"logoRelatorio\" />\r\n            <div className=\"text-center\">\r\n              <Label>Logo Relatório</Label>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={formProps}\r\n              id=\"cpf\"\r\n              isPrependLabel={true}\r\n              labelWidth={labelWidth}\r\n              label=\"CPF\"\r\n              placeholder=\"Informe o CPF\"\r\n              type={InputType.CPF}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={formProps}\r\n              id=\"cnpj\"\r\n              isPrependLabel={true}\r\n              labelWidth={labelWidth}\r\n              label=\"CNPJ\"\r\n              placeholder=\"Informe o CNPJ\"\r\n              type={InputType.CNPJ}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { maxLength: 12 } }}\r\n              id=\"cei\"\r\n              isPrependLabel={true}\r\n              labelWidth={labelWidth}\r\n              label=\"C.E.I\"\r\n              placeholder=\"Informe o C.E.I\"\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { maxLength: 15 } }}\r\n              id=\"ie\"\r\n              isPrependLabel={true}\r\n              labelWidth={labelWidth}\r\n              label=\"I.E.\"\r\n              placeholder=\"Informe o I.E.\"\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { maxLength: 20 } }}\r\n              id=\"im\"\r\n              isPrependLabel={true}\r\n              labelWidth={labelWidth}\r\n              label=\"I.M.\"\r\n              placeholder=\"Informe o I.M.\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Nav tabs={true}>\r\n          <NavItem>\r\n            <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n              Endereço\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink className={cx({ active: activeTab === 2 })} tabIndex={2} onClick={toggleTab}>\r\n              Telefones\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab}>\r\n              E-mails\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n        <TabContent className=\"mb-1\" activeTab={activeTab}>\r\n          <TabPane tabId={1} className=\"mb-0 p-3\">\r\n            <Row>\r\n              <Col>\r\n                <DetailManagerForm\r\n                  {...props}\r\n                  defaultSortDirection={OrderType.DESC}\r\n                  defaultSorted={defaultSortEnderecoProps}\r\n                  {...administradoraEnderecoFormProps}\r\n                  keyField=\"rowIndex\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n          <TabPane tabId={2} className=\"mb-0 p-3\">\r\n            <Row>\r\n              <Col>\r\n                <DetailManagerForm\r\n                  {...props}\r\n                  defaultSortDirection={OrderType.DESC}\r\n                  defaultSorted={defaultSortProps}\r\n                  {...administradoraTelefoneFormProps}\r\n                  keyField=\"rowIndex\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n          <TabPane tabId={3} className=\"mb-0 p-3\">\r\n            <Row>\r\n              <Col>\r\n                <DetailManagerForm\r\n                  {...props}\r\n                  defaultSortDirection={OrderType.DESC}\r\n                  defaultSorted={defaultSortProps}\r\n                  {...administradoraEmailFormProps}\r\n                  keyField=\"rowIndex\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n        </TabContent>\r\n      </EditForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default AdministradoraEditView;\r\n","import { Basic } from 'summer';\r\nimport { CepPais } from './cepPais';\r\n\r\nexport interface CepUF extends Basic {\r\n  codigo?: string;\r\n  sigla?: string;\r\n  nome?: string;\r\n  exterior?: boolean;\r\n  pais?: CepPais;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.cepuf';\r\n","import { Basic } from 'summer';\r\nimport { CepUF } from './cepUF';\r\n\r\nexport interface CepLocalidade extends Basic {\r\n  nome?: string;\r\n  cep?: string;\r\n  tipo?: string;\r\n  codigoMunicipio?: string;\r\n  uf?: CepUF;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.ceplocalidade';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { SearchFilterProps } from '../../../../hooks/useSearchFilter';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepUF';\r\n\r\nexport interface CepUFISProps extends InputProps {\r\n  searchFilter?: SearchFilterProps;\r\n}\r\n\r\nconst CepUFIS: FC<CepUFISProps> = props => {\r\n  const onChange = value => {\r\n    if (props.searchFilter) {\r\n      props.searchFilter.setFilter(CLASS_NAME, value);\r\n    }\r\n    if (props.onChange) {\r\n      props.onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'sigla',\r\n            text: 'Sigla',\r\n          },\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'CepUFSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'UF'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a UF'}\r\n      type={InputType.INPUT_SEARCH}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepUFIS;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { SearchFilterProps } from '../../../../hooks/useSearchFilter';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepLocalidade';\r\nimport { CLASS_NAME as CLASS_NAME_UF } from '../../../../models/dtos/ger/cepUF';\r\n\r\nexport interface CepLocalidadeISProps extends InputProps {\r\n  searchFilter?: SearchFilterProps;\r\n}\r\n\r\nconst CepLocalidadeIS: FC<CepLocalidadeISProps> = props => {\r\n  const searchExpressionsFull = defaultExpressions => {\r\n    const expressions = [];\r\n\r\n    if (props.searchFilter) {\r\n      const item = props.searchFilter.getFilter(CLASS_NAME_UF);\r\n      if (item) {\r\n        expressions.push({\r\n          fieldName: 'uf.id',\r\n          value: item.id,\r\n        });\r\n      }\r\n    }\r\n\r\n    if (expressions.length > 0) {\r\n      expressions[0].expressions = defaultExpressions;\r\n    } else {\r\n      expressions.push(...defaultExpressions);\r\n    }\r\n\r\n    return expressions;\r\n  };\r\n\r\n  const onChange = value => {\r\n    if (props.searchFilter) {\r\n      props.searchFilter.setFilter(CLASS_NAME, value);\r\n    }\r\n    if (props.onChange) {\r\n      props.onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'cep',\r\n            text: 'CEP',\r\n          },\r\n          {\r\n            dataField: 'codigoMunicipio',\r\n            text: 'Código do Município',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressionsFull,\r\n        searchViewId: 'CepLocalidadeSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Cidade'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Cidade'}\r\n      type={InputType.INPUT_SEARCH}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepLocalidadeIS;\r\n","import { Basic } from 'summer';\r\nimport { CepLocalidade } from './cepLocalidade';\r\n\r\nexport interface CepBairro extends Basic {\r\n  bairro?: string;\r\n  localidade?: CepLocalidade;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.cepbairro';\r\n","import { Basic } from 'summer';\r\nimport { CepBairro } from './cepBairro';\r\nimport { CepLocalidade } from './cepLocalidade';\r\nimport { CepTitulo } from './cepTitulo';\r\nimport { CepUF } from './cepUF';\r\n\r\nexport interface CepLogradouro extends Basic {\r\n  bairro?: CepBairro;\r\n  cep?: string;\r\n  complemento?: string;\r\n  localidade?: CepLocalidade;\r\n  nome?: string;\r\n  titulo?: CepTitulo;\r\n  uf?: CepUF;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.ceplogradouro';\r\n","import { Basic } from 'summer';\r\n\r\nexport interface CepTitulo extends Basic {\r\n  nome?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.ceptitulo';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { SearchFilterProps } from '../../../../hooks/useSearchFilter';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepBairro';\r\nimport { CLASS_NAME as CLASS_NAME_LOCALIDADE } from '../../../../models/dtos/ger/cepLocalidade';\r\nimport { CLASS_NAME as CLASS_NAME_UF } from '../../../../models/dtos/ger/cepUF';\r\n\r\nexport interface CepBairroISProps extends InputProps {\r\n  searchFilter?: SearchFilterProps;\r\n}\r\n\r\nconst CepBairroIS: FC<CepBairroISProps> = props => {\r\n  const searchExpressionsFull = defaultExpressions => {\r\n    let expressions = [];\r\n\r\n    if (props.searchFilter) {\r\n      const localidade = props.searchFilter.getFilter(CLASS_NAME_LOCALIDADE);\r\n      const uf = props.searchFilter.getFilter(CLASS_NAME_UF);\r\n      if (localidade) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'localidade.id',\r\n            value: localidade.id,\r\n          },\r\n        ];\r\n      } else if (uf) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'localidade.uf.id',\r\n            value: uf.id,\r\n          },\r\n        ];\r\n      }\r\n    }\r\n\r\n    if (expressions.length > 0) {\r\n      expressions[0].expressions = defaultExpressions;\r\n    } else {\r\n      expressions.push(...defaultExpressions);\r\n    }\r\n\r\n    return expressions;\r\n  };\r\n\r\n  const onChange = value => {\r\n    if (props.searchFilter) {\r\n      props.searchFilter.setFilter(CLASS_NAME, value);\r\n    }\r\n    if (props.onChange) {\r\n      props.onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'bairro',\r\n            text: 'Nome do Bairro',\r\n          },\r\n          {\r\n            dataField: 'localidade.nome',\r\n            text: 'Nome da cidade',\r\n          },\r\n          {\r\n            dataField: 'localidade.uf.sigla',\r\n            text: 'Sigla da UF',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressionsFull,\r\n        searchViewId: 'CepBairroSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Bairro'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Bairro'}\r\n      type={InputType.INPUT_SEARCH}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepBairroIS;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepTitulo';\r\n\r\nconst CepTituloIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'CepTituloSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Tipo'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Tipo de Logradouro'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepTituloIS;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CepManagerProps } from '../../../../hooks/useCepManager';\r\nimport { SearchFilterProps } from '../../../../hooks/useSearchFilter';\r\nimport { CLASS_NAME as CLASS_NAME_BAIRRO } from '../../../../models/dtos/ger/cepBairro';\r\nimport { CLASS_NAME as CLASS_NAME_LOCALIDADE } from '../../../../models/dtos/ger/cepLocalidade';\r\nimport { CepLogradouro, CLASS_NAME } from '../../../../models/dtos/ger/cepLogradouro';\r\nimport { CLASS_NAME as CLASS_NAME_UF } from '../../../../models/dtos/ger/cepUF';\r\n\r\nexport interface CepLogradouroProps {\r\n  cepManager?: CepManagerProps;\r\n  searchFilter?: SearchFilterProps;\r\n}\r\n\r\nconst CepLogradouroIS: FC<InputProps & CepLogradouroProps> = props => {\r\n  const searchExpressionsFull = defaultExpressions => {\r\n    let expressions = [];\r\n\r\n    if (props.searchFilter) {\r\n      const bairro = props.searchFilter.getFilter(CLASS_NAME_BAIRRO);\r\n      const localidade = props.searchFilter.getFilter(CLASS_NAME_LOCALIDADE);\r\n      const uf = props.searchFilter.getFilter(CLASS_NAME_UF);\r\n      if (bairro) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'bairro.id',\r\n            value: bairro.id,\r\n          },\r\n        ];\r\n      } else if (localidade) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'localidade.id',\r\n            value: localidade.id,\r\n          },\r\n        ];\r\n      } else if (uf) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'uf.id',\r\n            value: uf.id,\r\n          },\r\n        ];\r\n      }\r\n    }\r\n\r\n    if (expressions.length > 0) {\r\n      expressions[0].expressions = defaultExpressions;\r\n    } else {\r\n      expressions.push(...defaultExpressions);\r\n    }\r\n\r\n    return expressions;\r\n  };\r\n\r\n  const onChangeHandle = (result: CepLogradouro) => {\r\n    if (props.cepManager) {\r\n      props.cepManager.manage(result);\r\n    }\r\n    if (props.searchFilter) {\r\n      props.searchFilter.setFilter(CLASS_NAME, result);\r\n    }\r\n    if (props.onChange) {\r\n      props.onChange(result);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      onChange={onChangeHandle}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'bairro.bairro',\r\n            text: 'Bairro',\r\n          },\r\n          {\r\n            dataField: 'cep',\r\n            text: 'CEP',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressionsFull,\r\n        searchViewId: 'CepLogradouroSearchView',\r\n      }}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepLogradouroIS;\r\n","import { UseFormProps } from 'summer';\r\nimport { CepLogradouro } from '../models/dtos/ger/cepLogradouro';\r\n\r\nexport interface CepManagerOptions {\r\n  bairro?: boolean | string;\r\n  cep?: boolean | string;\r\n  localidade?: boolean | string;\r\n  nome?: boolean | string;\r\n  titulo?: boolean | string;\r\n  uf?: boolean | string;\r\n}\r\n\r\nexport interface CepManagerProps {\r\n  manage: (logradouro: CepLogradouro) => void;\r\n  reset: () => void;\r\n}\r\n\r\nconst useCepManager = (formProps: UseFormProps, props: CepManagerOptions): CepManagerProps => {\r\n  const getProp = (name: string): string => {\r\n    let result = null;\r\n\r\n    if (props[name] !== undefined) {\r\n      result = typeof props[name] === 'boolean' ? name : props[name];\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const fillForm = (logradouro: CepLogradouro) => {\r\n    const keyList = Object.keys(props);\r\n    keyList.forEach(key => {\r\n      const name = getProp(key);\r\n      if (name) {\r\n        formProps.setValue(name, logradouro[key]);\r\n      }\r\n    });\r\n  };\r\n\r\n  const clearForm = () => {\r\n    fillForm({\r\n      bairro: null,\r\n      cep: null,\r\n      localidade: null,\r\n      nome: null,\r\n      titulo: null,\r\n      uf: null,\r\n    });\r\n  };\r\n\r\n  return {\r\n    manage: (logradouro: CepLogradouro) => {\r\n      if (logradouro) {\r\n        fillForm(logradouro);\r\n      } else {\r\n        clearForm();\r\n      }\r\n    },\r\n    reset: () => clearForm(),\r\n  };\r\n};\r\n\r\nexport default useCepManager;\r\n","const tiposTelefone = {\r\n  tipoTelefoneCelular: 'Celular',\r\n  tipoTelefoneComercial: 'Comercial',\r\n  tipoTelefoneFax: 'Fax',\r\n  tipoTelefonePrincipal: 'Principal',\r\n  tipoTelefoneResidencial: 'Residencial',\r\n};\r\n\r\nexport function tipoTelefoneSelection(tipoTelefone: any): any {\r\n  const resultado = [];\r\n  // tslint:disable-next-line:forin\r\n  for (const campo in tiposTelefone) {\r\n    // tslint:disable-next-line:no-unused-expression\r\n    tipoTelefone[campo] && resultado.push(tiposTelefone[campo]);\r\n  }\r\n  return resultado.join(', ');\r\n}\r\n\r\nexport function tipoTelefoneFormatter(cell, row) {\r\n  return tipoTelefoneSelection(row);\r\n}\r\n","const tiposEndereco = {\r\n  tipoEnderecoCobranca: 'Cobrança',\r\n  tipoEnderecoComercial: 'Comercial',\r\n  tipoEnderecoPrincipal: 'Principal',\r\n  tipoEnderecoResidencial: 'Residencial',\r\n};\r\n\r\nexport function tipoEnderecoSelection(tipoEndereco: any): any {\r\n  const resultado = [];\r\n  // tslint:disable-next-line:forin\r\n  for (const campo in tiposEndereco) {\r\n    // tslint:disable-next-line:no-unused-expression\r\n    tipoEndereco[campo] && resultado.push(tiposEndereco[campo]);\r\n  }\r\n  return resultado.join(', ');\r\n}\r\n\r\nexport function tipoEnderecoFormatter(cell, row) {\r\n  return tipoEnderecoSelection(row);\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["models/dtos/mcg/configECFImuneIsenta.ts","views/pages/mcg/configECFImuneIsenta/ConfigECFImuneIsentaEditView.tsx","dependencies/empresaDependency.ts","dependencies/empresaMCGDependency.ts","services/mcg.service.ts"],"names":["__webpack_require__","d","__webpack_exports__","CLASS_NAME","ConfigECFImuneIsentaEditView","props","globalReducer","useSelector","state","selectedItem","getSelectedItem","formProps","useForm","defaultValues","Object","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","empresaMCG","globalParameter","mode","totalizar","total2a7","calcularTotal2a7","total10a15","calcularTotal10a15","setValue","getValues","contribAssociadosSindicalizados","receitaBensServicos","rendimentosFinanceirosRendaFixa","ganhosLiquidosRendaVariavel","doacoesSubvencoes","outrosRecursos","ordenadosGratificacoesPagamentosEncargos","ifRetidoRendaFixa","ifRetidoRendaVariavel","impostosTaxasContribuicoes","despesasManutencao","outrasDespesas","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_8__","title","useGlobalParameter","dependencies","hasEmpresaMCG","hasEmpresa","wikiId","editViewProps","dtoClassName","beforePersist","formData","done","params","message","type","AlertType","WARNING","validarReferenciaSPEDECFImuneIsenta","thenFunction","result","alertManager","emit","ACTION_EVENTS","SHOW","async","id","hidden","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","validation","required","isPrependLabel","label","InputType","REFERENCE","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","maxLength","NUMBER","onBlur","disabled","empresa","getService","create","gerarLancamentosFolhaPagamento","integracaoFolhaParam","param","send","post","integrarFolhaPagamento","lancamentoIntegracaoFolha","integrarMCP","importarParam","importarLancamentoCSV","data","formDataSend","FormData","append","String","importarDuplicados","importarLancamentosCardinal","_step","_iterator","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__","arquivos","s","n","arquivo","value","file","nomeArquivo","err","e","f","importarLancamentoPadraoCSV","_step2","_iterator2","importarHistoricoCSV","grupoHistoricoDestino","_step3","_iterator3","importarPlanoContaCSV","idEmpresa","grupoPlanoContaDestino","_step4","_iterator4","importarHistorico","importacaoHistorico","importarPlanoConta","importacaoPlanoContaParam","buscarConfigLivroFolhaMCG","get","integracaoFiscalContabil","encerrarContas","contaResultadoEncerramento","force","getDataUltimaContaEncerrada","idGerEmpresa","limparEncerramentoContaResultado","contaResultadoLimpeza","validarReferenciaSPEDECFIrpjCsll","configECFIrpjCsll","configECFImuneIsenta","validarRefRemuneracaoSocio","configECFRemuneracaoSocio","validarQuadroSocietario","configQuadro","obterLucroPrejuizoClassificacao","idGrupoPlanoConta","getSaldo","saldo","validarDadosSpedECF","ecfExportacaoParam","gerarSpedECF","usuario","getArquivoDigitalService","recuperarLancamentoConta","transferenciaLancamentoConta","transferirLancamentoConta","obterBancoPlanoConta","bancoPlanoContaDTO","validarConfigLivroFolha","changeLivroFolha","fecharRestaurar","fechamentoRestauracao","forceFecharRestaurar","verificarErros","erros","gerarSpedContabil","selecaoSped","arquivoRTFEscrituracaoSubstituida","_step5","_iterator5","atributoSelecaoSped","salvarLucroPrejuizoClassificacao","lucroPrejuizoClassificacao","consultarMovimentacao","saldoCriteria","totalizadorLancamento","consulta","getSaldoAnterior","isDataEncerrada","parametros","abrirContas","removeLancamentoPeriodo","obterContasClassificacaoIndireto","salvarClassificacaoIndireto","contaFluxoCaixaIndireto","obterMutacaoPatrimonioLiquido","salvarMutacaoPatrimonioLiquido","mutacaoPatrimonioLiquido","salvarContaResultado","contaResultado","excluirContaResultado","obterContasClassificacaoDireto","salvarClassificacaoDireto","contaFluxoCaixa","findSubGrupo","planoContaSubGrupoParam","removerTodosPlanosConta","removeList","listaPlanoConta","apagarFilha","listSubGrupo","planoConta","referenciarContas","idsPlanoConta","idPlanoContaReferencial","idPlanoContaReferencialECF","desvincularContas","existeLancamentoEmContaAnalitica","idPlanoConta","importarLancamentoMCG","tipoImportacao","sobescrever","versaoSuperiorA2","isEmpty","dtInicial","dtFinal","importarSpedContabil","_step6","_iterator6","gerarManadContabil","refInicial","refFinal","arquivoSFP","evolucaoContaContabilGraf","evolucaoContaContabilGrafParam","composicaoReceitaDespesasGraf","compReceitaDespesasGrafParam","gerarFCONTContabil","fContContabilCrit","obterDadosArquivoExtrato","arquivoSelecionado","idBancoMCG","obterDadosConciliacaoBancariaPeriodo","obterBancoListPlanoConta","conciliarLancamentosExtrato","listConciliacaoBancaria","removerConciliarLancamentosExtrato","listaRemover","removerLancamentosExtratoBancario","eLalurAContas","eLacsAContas","getSaldoDebito","getSaldoCredito","removerLancamentoLote","atualizaCalculoIrpjCsll","buscarLancamentosHonorarios","integracaoHonorariosParam","integrarHonorarios","lancamentos","isAlteraCalculoIRPJorCSLL"],"mappings":"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","file":"static/js/275.b1aeb8b6.chunk.js","sourcesContent":["import { Basic } from 'summer';\r\nimport { EmpresaMCG } from './empresaMCG';\r\n\r\nexport interface ConfigECFImuneIsenta extends Basic {\r\n  contribAssociadosSindicalizados?: number;\r\n  despesasManutencao?: number;\r\n  doacoesSubvencoes?: number;\r\n  empresaMCG?: EmpresaMCG;\r\n  ganhosLiquidosRendaVariavel?: number;\r\n  ifRetidoRendaFixa?: number;\r\n  ifRetidoRendaVariavel?: number;\r\n  impostosTaxasContribuicoes?: number;\r\n  ordenadosGratificacoesPagamentosEncargos?: number;\r\n  outrasDespesas?: number;\r\n  outrosRecursos?: number;\r\n  receitaBensServicos?: number;\r\n  referencia?: string;\r\n  rendimentosFinanceirosRendaFixa?: number;\r\n  superavitDeficit?: number;\r\n  total10a15?: number;\r\n  total2a7?: number;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mcg.model.dto.configecfimuneisenta';\r\n","import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Card, CardBody, Col, Row } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  EditForm,\r\n  EditViewProps,\r\n  getSelectedItem,\r\n  InputGroupInline,\r\n  InputType,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../dependencies/empresaMCGDependency';\r\nimport { CLASS_NAME, ConfigECFImuneIsenta } from '../../../../models/dtos/mcg/configECFImuneIsenta';\r\nimport { validarReferenciaSPEDECFImuneIsenta } from '../../../../services/mcg.service';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\ninterface ConfigECFImuneIsentaEditViewProps extends EditViewProps<ConfigECFImuneIsenta> {}\r\n\r\nconst ConfigECFImuneIsentaEditView: FC<ConfigECFImuneIsentaEditViewProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const selectedItem = getSelectedItem(props);\r\n\r\n  const formProps = useForm<ConfigECFImuneIsenta>({\r\n    defaultValues: {\r\n      empresaMCG: globalReducer.globalParameter.empresaMCG,\r\n      ...selectedItem,\r\n    },\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const totalizar = () => {\r\n    const total2a7 = calcularTotal2a7();\r\n    const total10a15 = calcularTotal10a15();\r\n    formProps.setValue('total2a7', total2a7);\r\n    formProps.setValue('total10a15', total10a15);\r\n    formProps.setValue('superavitDeficit', total2a7 - total10a15);\r\n  };\r\n\r\n  const calcularTotal2a7 = () => {\r\n    return (\r\n      +formProps.getValues().contribAssociadosSindicalizados +\r\n      +formProps.getValues().receitaBensServicos +\r\n      +formProps.getValues().rendimentosFinanceirosRendaFixa +\r\n      +formProps.getValues().ganhosLiquidosRendaVariavel +\r\n      +formProps.getValues().doacoesSubvencoes +\r\n      +formProps.getValues().outrosRecursos\r\n    );\r\n  };\r\n\r\n  const calcularTotal10a15 = () => {\r\n    return (\r\n      +formProps.getValues().ordenadosGratificacoesPagamentosEncargos +\r\n      +formProps.getValues().ifRetidoRendaFixa +\r\n      +formProps.getValues().ifRetidoRendaVariavel +\r\n      +formProps.getValues().impostosTaxasContribuicoes +\r\n      +formProps.getValues().despesasManutencao +\r\n      +formProps.getValues().outrasDespesas\r\n    );\r\n  };\r\n\r\n  const beforePersist = (formData: ConfigECFImuneIsenta, done: any) => {\r\n    const params: AlertProps = {\r\n      message: 'Já existe uma configuração cadastrada para a referência informada.',\r\n      type: AlertType.WARNING,\r\n    };\r\n    validarReferenciaSPEDECFImuneIsenta(formData, {\r\n      thenFunction: (result: boolean) => {\r\n        if (result) {\r\n          done(formData);\r\n        } else {\r\n          alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n        }\r\n      },\r\n    });\r\n    return { async: true };\r\n  };\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Manutenção SPED ECF - Registro X390\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresaMCG(globalReducer.globalParameter), () => hasEmpresa(globalReducer.globalParameter)]}\r\n      wikiId={207}\r\n    >\r\n      <EditForm formProps={formProps} editViewProps={props} dtoClassName={CLASS_NAME} beforePersist={beforePersist}>\r\n        <InputGroupInline id=\"empresaMCG.id\" formProps={formProps} hidden={true} />\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              id=\"referencia\"\r\n              isPrependLabel={true}\r\n              label=\"Referência\"\r\n              type={InputType.REFERENCE}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Card>\r\n          <CardBody>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={{ ...formProps, validation: { maxLength: 15 } }}\r\n                  id=\"contribAssociadosSindicalizados\"\r\n                  isPrependLabel={true}\r\n                  label=\"Contribuições de Associados ou Sindicalizados\"\r\n                  type={InputType.NUMBER}\r\n                  onBlur={totalizar}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={{ ...formProps, validation: { maxLength: 15 } }}\r\n                  id=\"receitaBensServicos\"\r\n                  isPrependLabel={true}\r\n                  label=\"Receita da Venda de Bens ou da Prestação de Serviços\"\r\n                  type={InputType.NUMBER}\r\n                  onBlur={totalizar}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={{ ...formProps, validation: { maxLength: 15 } }}\r\n                  id=\"rendimentosFinanceirosRendaFixa\"\r\n                  isPrependLabel={true}\r\n                  label=\"Rendimentos de Aplicações Financeiras de Renda Fixa\"\r\n                  type={InputType.NUMBER}\r\n                  onBlur={totalizar}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={{ ...formProps, validation: { maxLength: 15 } }}\r\n                  id=\"ganhosLiquidosRendaVariavel\"\r\n                  isPrependLabel={true}\r\n                  label=\"Ganhos Líquidos Auferidos no Mercado de Renda Variável\"\r\n                  type={InputType.NUMBER}\r\n                  onBlur={totalizar}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={{ ...formProps, validation: { maxLength: 15 } }}\r\n                  id=\"doacoesSubvencoes\"\r\n                  isPrependLabel={true}\r\n                  label=\"Doações e Subvenções\"\r\n                  type={InputType.NUMBER}\r\n                  onBlur={totalizar}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={{ ...formProps, validation: { maxLength: 15 } }}\r\n                  id=\"outrosRecursos\"\r\n                  isPrependLabel={true}\r\n                  label=\"Outros Recursos\"\r\n                  type={InputType.NUMBER}\r\n                  onBlur={totalizar}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline formProps={formProps} id=\"total2a7\" isPrependLabel={true} label=\"Total\" type={InputType.NUMBER} disabled={true} />\r\n              </Col>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n        <Card>\r\n          <CardBody>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={{ ...formProps, validation: { maxLength: 15 } }}\r\n                  id=\"ordenadosGratificacoesPagamentosEncargos\"\r\n                  isPrependLabel={true}\r\n                  label=\"Ordenados, Gratificações e Outros Pagamentos, Inclusive Encargos Sociais\"\r\n                  type={InputType.NUMBER}\r\n                  onBlur={totalizar}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={{ ...formProps, validation: { maxLength: 15 } }}\r\n                  id=\"ifRetidoRendaFixa\"\r\n                  isPrependLabel={true}\r\n                  label=\"IR Retido sobre Rendimentos de Aplicações Financeiras de Renda Fixa\"\r\n                  type={InputType.NUMBER}\r\n                  onBlur={totalizar}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={{ ...formProps, validation: { maxLength: 15 } }}\r\n                  id=\"ifRetidoRendaVariavel\"\r\n                  isPrependLabel={true}\r\n                  label=\"IR Retido ou Pago sobre Ganhos Líquidos Auferidos no Mercado de Renda Variável\"\r\n                  type={InputType.NUMBER}\r\n                  onBlur={totalizar}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={{ ...formProps, validation: { maxLength: 15 } }}\r\n                  id=\"impostosTaxasContribuicoes\"\r\n                  isPrependLabel={true}\r\n                  label=\"Impostos, Taxas e Contribuições\"\r\n                  type={InputType.NUMBER}\r\n                  onBlur={totalizar}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={{ ...formProps, validation: { maxLength: 15 } }}\r\n                  id=\"despesasManutencao\"\r\n                  isPrependLabel={true}\r\n                  label=\"Despesas de Manutenção\"\r\n                  type={InputType.NUMBER}\r\n                  onBlur={totalizar}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={{ ...formProps, validation: { maxLength: 15 } }}\r\n                  id=\"outrasDespesas\"\r\n                  isPrependLabel={true}\r\n                  label=\"Outras Despesas\"\r\n                  type={InputType.NUMBER}\r\n                  onBlur={totalizar}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline formProps={formProps} id=\"total10a15\" isPrependLabel={true} label=\"Total\" type={InputType.NUMBER} disabled={true} />\r\n              </Col>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n        <Card>\r\n          <CardBody>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline formProps={formProps} id=\"superavitDeficit\" isPrependLabel={true} label=\"Superavit / Déficit\" disabled={true} />\r\n              </Col>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n      </EditForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default ConfigECFImuneIsentaEditView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMCG(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMCG) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o módulo Contábil. Para configurá-la acesse:\\n' +\r\n      'Módulo Contábil > Manutenção > Configurações > Empresa.';\r\n  }\r\n  return result;\r\n}\r\n","import { AxiosInstance } from 'axios';\r\nimport { ArquivoSelecionado, AxiosParam, create, isEmpty, send } from 'summer';\r\nimport { PlanoConta } from '../models/dtos/ger/planoConta';\r\nimport { PlanoContaSubGrupoParam } from '../models/dtos/ger/planoContaSubGrupoParam';\r\nimport { RuleMessage } from '../models/dtos/ger/ruleMessage';\r\nimport { Usuario } from '../models/dtos/ger/usuario';\r\nimport { BancoExtrato } from '../models/dtos/mcg/bancoExtrato';\r\nimport { BancoMCG } from '../models/dtos/mcg/bancoMCG';\r\nimport { BancoPlanoConta } from '../models/dtos/mcg/bancoPlanoConta';\r\nimport { CalculoIrpjCsll } from '../models/dtos/mcg/calculoIrpjCsll';\r\nimport { ComposicaoReceitaDespesasGrafParam } from '../models/dtos/mcg/composicaoReceitaDespesasGrafParam';\r\nimport { ComposicaoReceitaDespesasGrafReturn } from '../models/dtos/mcg/composicaoReceitaDespesasGrafReturn';\r\nimport { ConciliacaoBancaria } from '../models/dtos/mcg/conciliacaoBancaria';\r\nimport { ConfigECFImuneIsenta } from '../models/dtos/mcg/configECFImuneIsenta';\r\nimport { ConfigECFIrpjCsll } from '../models/dtos/mcg/configECFIrpjCsll';\r\nimport { ConfigECFRemuneracaoSocio } from '../models/dtos/mcg/configECFRemuneracaoSocio';\r\nimport { ConsultaTotalLancamento } from '../models/dtos/mcg/consultaTotalLancamento';\r\nimport { ContaFluxoCaixa } from '../models/dtos/mcg/contaFluxoCaixa';\r\nimport { ContaFluxoCaixaIndireto } from '../models/dtos/mcg/contaFluxoCaixaIndireto';\r\nimport { ContaResultado } from '../models/dtos/mcg/contaResultado';\r\nimport { ContaResultadoLimpeza } from '../models/dtos/mcg/contaResultadoLimpeza';\r\nimport { ContaResultadoMCGEncerramento } from '../models/dtos/mcg/contaResultadoMCGEncerramento';\r\nimport { DataEncerradaParam } from '../models/dtos/mcg/dataEncerradaParam';\r\nimport { ECFExportacaoParam } from '../models/dtos/mcg/ecfExportacaoParam';\r\nimport { Erros } from '../models/dtos/mcg/erros';\r\nimport { EvolucaoContaContabilGrafParam } from '../models/dtos/mcg/evolucaoContaContabilGrafParam';\r\nimport { EvolucaoContaContabilGrafReturn } from '../models/dtos/mcg/evolucaoContaContabilGrafReturn';\r\nimport { FCONTContabilCrit } from '../models/dtos/mcg/fContContabilCrit';\r\nimport { FechamentoRestauracaoMCG } from '../models/dtos/mcg/fechamentoRestauracaoMCG';\r\nimport { ImportacaoFiscalContabil, ImportacaoFiscalContabilResult } from '../models/dtos/mcg/importacaoFiscalContabil';\r\nimport { ImportacaoHistorico } from '../models/dtos/mcg/importacaoHistorico';\r\nimport { ImportacaoHistoricoCSVParam } from '../models/dtos/mcg/importacaoHistoricoCSVParam';\r\nimport { ImportacaoLancamentoCSVParam } from '../models/dtos/mcg/importacaoLancamentoCSVParam';\r\nimport { ImportacaoLancamentoMCGRetornoValidacao } from '../models/dtos/mcg/importacaoLancamentoMCGRetornoValidacao';\r\nimport { ImportacaoLancamentoMCGSelecao } from '../models/dtos/mcg/importacaoLancamentoMCGSelecao';\r\nimport { ImportacaoLancamentoPadraoCSVParam } from '../models/dtos/mcg/importacaoLancamentoPadraoCSVParam';\r\nimport { ImportacaoPlanoConta } from '../models/dtos/mcg/importacaoPlanoConta';\r\nimport { ImportacaoPlanoContaCSVParam } from '../models/dtos/mcg/importacaoPlanoContaCSVParam';\r\nimport { ImportacaoSpedContabil } from '../models/dtos/mcg/importacaoSpedContabil';\r\nimport { ImportacaoResult, ImportarMCP } from '../models/dtos/mcg/importarMCP';\r\nimport { InfoConciliacaoBancaria } from '../models/dtos/mcg/infoConciliacaoBancaria';\r\nimport { IntegracaoFolhaParam } from '../models/dtos/mcg/integracaoFolhaParam';\r\nimport { IntegracaoHonorariosParam } from '../models/dtos/mcg/integracaoHonorariosParam';\r\nimport { Lancamento } from '../models/dtos/mcg/lancamento';\r\nimport { LancamentoIntegracaoFolha } from '../models/dtos/mcg/lancamentoIntegracaoFolha';\r\nimport { LancamentoIntegracaoHonorarios } from '../models/dtos/mcg/lancamentoIntegracaoHonorarios';\r\nimport { LancamentoSaldo } from '../models/dtos/mcg/lancamentoSaldo';\r\nimport { LivroFolha } from '../models/dtos/mcg/livroFolha';\r\nimport { LucroPrejuizoClassificacao } from '../models/dtos/mcg/lucroPrejuizoClassificacao';\r\nimport { MANADContabilCrit } from '../models/dtos/mcg/manadContabilCrit';\r\nimport { MutacaoPatrimonioLiquido } from '../models/dtos/mcg/mutacaoPatrimonioLiquido';\r\nimport { QuadroSocietario } from '../models/dtos/mcg/quadroSocietario';\r\nimport { RemoveLancamentoLote } from '../models/dtos/mcg/removeLancamentoLote';\r\nimport { RemoveLancamentoPeriodo } from '../models/dtos/mcg/removeLancamentoPeriodo';\r\nimport { Saldo } from '../models/dtos/mcg/saldo';\r\nimport { SaldoCriteria } from '../models/dtos/mcg/saldoCriteria';\r\nimport { SelecaoSpedContabil } from '../models/dtos/mcg/selecaoSpedContabil';\r\nimport { SomaSaldo } from '../models/dtos/mcg/somaSaldo';\r\nimport { TotalizadorLancamento } from '../models/dtos/mcg/totalizadorLancamento';\r\nimport { TransferenciaLancamentoConta } from '../models/dtos/mcg/transferenciaLancamentoConta';\r\nimport { VerificarErros } from '../models/dtos/mcg/verificarErros';\r\nimport { getArquivoDigitalService } from './ger.service';\r\n\r\nfunction getService(): AxiosInstance {\r\n  return create('/mcg');\r\n}\r\n\r\nexport function gerarLancamentosFolhaPagamento(integracaoFolhaParam: IntegracaoFolhaParam, param: AxiosParam<LancamentoIntegracaoFolha[]>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/gerarLancamentosFolhaPagamento', integracaoFolhaParam), param);\r\n}\r\n\r\nexport function integrarFolhaPagamento(lancamentoIntegracaoFolha: LancamentoIntegracaoFolha[], param: AxiosParam<any>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/integrarFolhaPagamento', lancamentoIntegracaoFolha), param);\r\n}\r\n\r\nexport function integrarMCP(importarParam: ImportarMCP, param: AxiosParam<ImportacaoResult>) {\r\n  send(getService().post<ImportacaoResult>('/importar', importarParam), param);\r\n}\r\n\r\nexport function importarLancamentoCSV(data: ImportacaoLancamentoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('importarDuplicados', String(data.importarDuplicados));\r\n  formDataSend.append('importarLancamentosCardinal', String(data.importarLancamentosCardinal));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarLancamentoPadraoCSV(data: ImportacaoLancamentoPadraoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoPadraoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistoricoCSV(data: ImportacaoHistoricoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('grupoHistoricoDestino.id', String(data.grupoHistoricoDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarHistoricoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarPlanoContaCSV(data: ImportacaoPlanoContaCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idEmpresa', String(data.idEmpresa));\r\n  formDataSend.append('grupoPlanoContaDestino.id', String(data.grupoPlanoContaDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarPlanoContaCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistorico(importacaoHistorico: ImportacaoHistorico, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarHistorico', importacaoHistorico), param);\r\n}\r\n\r\nexport function importarPlanoConta(importacaoPlanoContaParam: ImportacaoPlanoConta, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarPlanoConta', importacaoPlanoContaParam), param);\r\n}\r\n\r\nexport function buscarConfigLivroFolhaMCG(idEmpresa: number, param: AxiosParam<LivroFolha>) {\r\n  send(getService().get<LivroFolha>('/buscarConfigLivroFolhaMCG/' + idEmpresa), param);\r\n}\r\n\r\nexport function integracaoFiscalContabil(importarParam: ImportacaoFiscalContabil, param: AxiosParam<ImportacaoFiscalContabilResult>) {\r\n  send(getService().post<ImportacaoFiscalContabilResult>('/integracaoFiscalContabil', importarParam), param);\r\n}\r\n\r\nexport function encerrarContas(\r\n  contaResultadoEncerramento: ContaResultadoMCGEncerramento,\r\n  force: boolean,\r\n  param: AxiosParam<ContaResultadoMCGEncerramento>\r\n) {\r\n  send(\r\n    getService().post<ContaResultadoMCGEncerramento>('/encerrarContas', { contaResultadoEncerramento, force }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function getDataUltimaContaEncerrada(idGerEmpresa: number, param: AxiosParam<Date>) {\r\n  send(getService().get<Date>('/getDataUltimaContaEncerrada/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function limparEncerramentoContaResultado(contaResultadoLimpeza: ContaResultadoLimpeza, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/limparEncerramentoContaResultadoApos', contaResultadoLimpeza), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFIrpjCsll(configECFIrpjCsll: ConfigECFIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFIrpjCsll', configECFIrpjCsll), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFImuneIsenta(configECFImuneIsenta: ConfigECFImuneIsenta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFImuneIsenta', configECFImuneIsenta), param);\r\n}\r\n\r\nexport function validarRefRemuneracaoSocio(configECFRemuneracaoSocio: ConfigECFRemuneracaoSocio, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarRefRemuneracaoSocio', configECFRemuneracaoSocio), param);\r\n}\r\n\r\nexport function validarQuadroSocietario(configQuadro: QuadroSocietario, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/validarQuadroSocietario', configQuadro), param);\r\n}\r\n\r\nexport function obterLucroPrejuizoClassificacao(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterLucroPrejuizoClassificacao/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function getSaldo(saldo: Saldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldo', saldo), param);\r\n}\r\n\r\nexport function validarDadosSpedECF(ecfExportacaoParam: ECFExportacaoParam, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/validarDadosSpedECF', ecfExportacaoParam), param);\r\n}\r\n\r\nexport function gerarSpedECF(usuario: Usuario, ecfExportacaoParam: ECFExportacaoParam, param?: AxiosParam<string>) {\r\n  send(\r\n    getArquivoDigitalService().post<string>('/gerarSpedECF', { usuario, ecfExportacaoParam }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function recuperarLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<Lancamento[]>) {\r\n  send(getService().post<Lancamento[]>('/recuperarLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function transferirLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/transferirLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function obterBancoPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG>) {\r\n  send(getService().post<BancoMCG>('/obterBancoPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function validarConfigLivroFolha(idGerEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(getService().get<boolean>('/validarConfigLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function changeLivroFolha(idGerEmpresa: number, param: AxiosParam<void>) {\r\n  send(getService().get<void>('/changeLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function fecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<RuleMessage>) {\r\n  send(getService().post<RuleMessage>('/fecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function forceFecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/forceFecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function verificarErros(erros: VerificarErros, param: AxiosParam<Erros[]>) {\r\n  send(getService().post<Erros[]>('/verificarErros', erros), param);\r\n}\r\n\r\nexport function gerarSpedContabil(selecaoSped: SelecaoSpedContabil, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('usuario.id', String(selecaoSped.usuario.id));\r\n\r\n  if (selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n    for (const arquivo of selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n      formDataSend.append('arquivoRTFEscrituracaoSubstituida', arquivo.file, arquivo.nomeArquivo);\r\n    }\r\n  }\r\n\r\n  for (const atributoSelecaoSped in selecaoSped) {\r\n    if (\r\n      atributoSelecaoSped !== 'arquivoRTFEscrituracaoSubstituida' &&\r\n      atributoSelecaoSped !== 'usuario' &&\r\n      selecaoSped[atributoSelecaoSped] !== null\r\n    ) {\r\n      formDataSend.append(atributoSelecaoSped, selecaoSped[atributoSelecaoSped]);\r\n    }\r\n  }\r\n  send(getService().post<string>('/gerarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function salvarLucroPrejuizoClassificacao(\r\n  lucroPrejuizoClassificacao: LucroPrejuizoClassificacao,\r\n  param: AxiosParam<LucroPrejuizoClassificacao>\r\n) {\r\n  send(getService().post<LucroPrejuizoClassificacao>('/salvarLucroPrejuizoClassificacao', lucroPrejuizoClassificacao), param);\r\n}\r\n\r\nexport function consultarMovimentacao(saldoCriteria: SaldoCriteria, param: AxiosParam<LancamentoSaldo[]>) {\r\n  send(getService().post<LancamentoSaldo[]>('/consultarMovimentacao', saldoCriteria), param);\r\n}\r\n\r\nexport function totalizadorLancamento(consulta: ConsultaTotalLancamento, param: AxiosParam<TotalizadorLancamento>) {\r\n  send(getService().post<TotalizadorLancamento>('/totalizadorLancamento', consulta), param);\r\n}\r\n\r\nexport function getSaldoAnterior(saldoCriteria: SaldoCriteria, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoAnterior', saldoCriteria), param);\r\n}\r\n\r\nexport function isDataEncerrada(parametros: DataEncerradaParam, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isDataEncerrada', parametros), param);\r\n}\r\n\r\nexport function abrirContas(parametros: DataEncerradaParam, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/abrirContas', parametros), param);\r\n}\r\n\r\nexport function removeLancamentoPeriodo(parametros: RemoveLancamentoPeriodo, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removeLancamentoPeriodo', parametros), param);\r\n}\r\n\r\nexport function obterContasClassificacaoIndireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixaIndireto[]>) {\r\n  send(getService().get<ContaFluxoCaixaIndireto[]>('/obterContasClassificacaoIndireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoIndireto(contaFluxoCaixaIndireto: ContaFluxoCaixaIndireto, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoIndireto', contaFluxoCaixaIndireto), param);\r\n}\r\n\r\nexport function obterMutacaoPatrimonioLiquido(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterMutacaoPatrimonioLiquido/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarMutacaoPatrimonioLiquido(mutacaoPatrimonioLiquido: MutacaoPatrimonioLiquido, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarMutacaoPatrimonioLiquido', mutacaoPatrimonioLiquido), param);\r\n}\r\n\r\nexport function salvarContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function excluirContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/excluirContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function obterContasClassificacaoDireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixa[]>) {\r\n  send(getService().get<ContaFluxoCaixa[]>('/obterContasClassificacaoDireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoDireto(contaFluxoCaixa: ContaFluxoCaixa, param?: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoDireto', contaFluxoCaixa), param);\r\n}\r\n\r\nexport function findSubGrupo(planoContaSubGrupoParam: PlanoContaSubGrupoParam, param: AxiosParam<any>) {\r\n  send(getService().post<any>('/findSubGrupo', planoContaSubGrupoParam), param);\r\n}\r\n\r\nexport function removerTodosPlanosConta(idGrupoPlanoConta: number, usuario: Usuario, param: AxiosParam<void>) {\r\n  send(\r\n    getService().post<void>('/removerTodosPlanosConta', { idGrupoPlanoConta, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function removeList(listaPlanoConta: PlanoConta[], apagarFilha: boolean, usuario: Usuario, param: AxiosParam<any>) {\r\n  send(\r\n    getService().post<any>('/removeList', { listaPlanoConta, apagarFilha, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function listSubGrupo(planoConta: PlanoConta, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().post<PlanoConta[]>('/listSubGrupo', planoConta), param);\r\n}\r\n\r\nexport function referenciarContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<void>\r\n) {\r\n  send(\r\n    getService().post<void>('/referenciarContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function desvincularContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<any>\r\n) {\r\n  send(\r\n    getService().post<void>('/desvincularContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function existeLancamentoEmContaAnalitica(idPlanoConta: number, idEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(\r\n    getService().post<boolean>('/existeLancamentoEmContaAnalitica', { idPlanoConta, idEmpresa }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function importarLancamentoMCG(data: ImportacaoLancamentoMCGSelecao, param: AxiosParam<ImportacaoLancamentoMCGRetornoValidacao>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('tipoImportacao', String(data.tipoImportacao));\r\n  formDataSend.append('sobescrever', String(data.sobescrever));\r\n  formDataSend.append('versaoSuperiorA2', String(data.versaoSuperiorA2));\r\n  formDataSend.append('arquivo', data.arquivo[0].file, data.arquivo[0].nomeArquivo);\r\n\r\n  if (data.versaoSuperiorA2 === false && !isEmpty(data.dtInicial) && !isEmpty(data.dtFinal)) {\r\n    formDataSend.append('dtInicial', data.dtInicial);\r\n    formDataSend.append('dtFinal', data.dtFinal);\r\n  }\r\n\r\n  send(getService().post<ImportacaoLancamentoMCGRetornoValidacao>('/importarLancamentoMCG', formDataSend), param);\r\n}\r\n\r\nexport function importarSpedContabil(data: ImportacaoSpedContabil, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function gerarManadContabil(data: MANADContabilCrit, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('refInicial', data.refInicial);\r\n  formDataSend.append('refFinal', data.refFinal);\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  if (!isEmpty(data.arquivoSFP)) {\r\n    formDataSend.append('arquivoSFP', data.arquivoSFP[0].file, data.arquivoSFP[0].nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<string>('/gerarManadContabil', formDataSend), param);\r\n}\r\n\r\nexport function evolucaoContaContabilGraf(\r\n  evolucaoContaContabilGrafParam: EvolucaoContaContabilGrafParam,\r\n  param: AxiosParam<EvolucaoContaContabilGrafReturn>\r\n) {\r\n  send(getService().post<EvolucaoContaContabilGrafReturn>('/evolucaoContaContabilGraf', evolucaoContaContabilGrafParam), param);\r\n}\r\n\r\nexport function composicaoReceitaDespesasGraf(\r\n  compReceitaDespesasGrafParam: ComposicaoReceitaDespesasGrafParam,\r\n  param: AxiosParam<ComposicaoReceitaDespesasGrafReturn>\r\n) {\r\n  send(getService().post<ComposicaoReceitaDespesasGrafReturn>('/composicaoReceitaDespesasGraf', compReceitaDespesasGrafParam), param);\r\n}\r\n\r\nexport function gerarFCONTContabil(fContContabilCrit: FCONTContabilCrit, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/gerarFCONTContabil', fContContabilCrit), param);\r\n}\r\n\r\nexport function obterDadosArquivoExtrato(arquivoSelecionado: ArquivoSelecionado, idBancoMCG, param: AxiosParam<BancoExtrato[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idBancoMCG', idBancoMCG);\r\n\r\n  formDataSend.append('arquivoSelecionado', arquivoSelecionado[0].file, arquivoSelecionado[0].nomeArquivo);\r\n\r\n  send(getService().post<BancoExtrato[]>('/obterDadosArquivoExtrato', formDataSend), param);\r\n}\r\n\r\nexport function obterDadosConciliacaoBancariaPeriodo(\r\n  idGrupoPlanoConta,\r\n  idEmpresa,\r\n  idBancoMCG,\r\n  dtInicial,\r\n  dtFinal,\r\n  param: AxiosParam<InfoConciliacaoBancaria>\r\n) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGrupoPlanoConta', String(idGrupoPlanoConta));\r\n  formDataSend.append('idEmpresa', String(idEmpresa));\r\n  formDataSend.append('idBancoMCG', String(idBancoMCG));\r\n  formDataSend.append('dtInicial', String(dtInicial));\r\n  formDataSend.append('dtFinal', String(dtFinal));\r\n\r\n  send(getService().post<InfoConciliacaoBancaria>('/obterDadosConciliacaoBancariaPeriodo', formDataSend), param);\r\n}\r\n\r\nexport function obterBancoListPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG[]>) {\r\n  send(getService().post<BancoMCG[]>('/obterBancoListPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function conciliarLancamentosExtrato(listConciliacaoBancaria: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/conciliarLancamentosExtrato', listConciliacaoBancaria), param);\r\n}\r\n\r\nexport function removerConciliarLancamentosExtrato(listaRemover: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerConciliarLancamentosExtrato', listaRemover), param);\r\n}\r\n\r\nexport function removerLancamentosExtratoBancario(listaRemover: BancoExtrato[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerLancamentosExtratoBancario', listaRemover), param);\r\n}\r\n\r\nexport function eLalurAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLalurAContas/' + id), param);\r\n}\r\n\r\nexport function eLacsAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLacsAContas/' + id), param);\r\n}\r\n\r\nexport function getSaldoDebito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoDebito', parametros), param);\r\n}\r\n\r\nexport function getSaldoCredito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoCredito', parametros), param);\r\n}\r\n\r\nexport function removerLancamentoLote(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/removerLancamentoLote', parametros), param);\r\n}\r\n\r\nexport function atualizaCalculoIrpjCsll(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/atualizaCalculoIrpjCsll', parametros), param);\r\n}\r\n\r\nexport function buscarLancamentosHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  param: AxiosParam<LancamentoIntegracaoHonorarios[]>\r\n) {\r\n  send(getService().post<LancamentoIntegracaoHonorarios[]>('/buscarLancamentosHonorarios', integracaoHonorariosParam), param);\r\n}\r\n\r\nexport function integrarHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  lancamentos: LancamentoIntegracaoHonorarios[],\r\n  param: AxiosParam<number>\r\n) {\r\n  send(\r\n    getService().post<number>('/integrarHonorarios', { integracaoHonorariosParam, lancamentos }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function isAlteraCalculoIRPJorCSLL(parametros: CalculoIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isAlteraCalculoIRPJorCSLL', parametros), param);\r\n}\r\n"],"sourceRoot":""}
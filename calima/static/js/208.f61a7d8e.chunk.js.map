{"version":3,"sources":["views/pages/mho/report/totalFaturamento/TotalFaturamentoRelRV.ts","views/pages/mho/report/totalFaturamento/TotalFaturamentoReportView.tsx","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","models/dtos/mho/empresaMHO.ts","views/components/mho/empresaMHOIS/EmpresaMHOIS.tsx"],"names":["DEFAULT_VALUES","Object","objectSpread2","getDefaultReportBasicValues","eventosAbertos","eventosBaixados","idsEmpresas","DEFAULT_OPTIONS","getDefaultReportViewOptions","DATES","value","dtFinalRequired","dtInicialRequired","exibirConfiguracaoDadosEmpresa","TotalFaturamentoEventoReportView","props","globalReducer","useSelector","state","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","objectWithoutProperties","handleChange","e","target","id","setValue","triggerValidation","react_default","a","createElement","summer_esm","title","useGlobalParameter","globalParameter","ReportForm","assign","localStorageKey","routeProps","reportBasicValues","reportViewOptions","validateExtras","formData","errors","dtInicial","dtFinal","push","EmpresaMHOIS","inputSearchProps","selectProps","isMulti","hidden","Row","Col","CustomInput","type","label","name","onChange","innerRef","register","__webpack_require__","d","__webpack_exports__","NATUREZA","SALDO_REPORT_ENUM","EmpresaIS","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","isPrependLabel","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","placeholder","InputType","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","empresasSelecionadas","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","gerarCabecalhoPadraoAdministradora","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","virtualization","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","getValues","handleCancel","currentItem","currentValues","parentObject","validation","required","EnvioEmail","Fragment","sort","detailView","keyField","propName","className","maxLength","TEXT_AREA","ReportInputs","_useState","useState","_useState2","slicedToArray","activeTab","setActiveTab","useEffect","_props$reportViewOpti","printingTypes","resetObject","length","idGerEmpresa","empresa","current","currentMomentDate","endDate","DATE","formatDate","toDate","endOf","REFERENCE","referenciaInicial","format","REF_PATTERN","REFERENCES","referenciaFinal","ANO","ano","String","year","reset","toggleTab","tabIndex","dateInitial","dateComponent","datesComponent","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","NUMBER","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","inputProps","disabled","gerarPorEmpresas","style","marginBottom","size","segmentacaoFolhaComponent","exibirSegmentacaoFolha","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","exibirImprimirValoresColoridos","inputDropDownProps","optionsProvider","isClearable","DROP_DOWN","firstOpen","extraConfigOpened","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","erros","params","message","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history"],"mappings":"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","file":"static/js/208.f61a7d8e.chunk.js","sourcesContent":["import { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { EmpresaMHO } from '../../../../../models/dtos/mho/empresaMHO';\r\n\r\nexport interface TotalFaturamentoRelRV extends ReportBasicValues {\r\n  eventosAbertos?: boolean;\r\n  eventosBaixados?: boolean;\r\n  idsEmpresas?: EmpresaMHO[];\r\n  totalGeral?: number;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'totalfaturamentorelrv';\r\nexport const REPORT_EVENT: string = 'printTotalFaturamento';\r\nexport const REPORT_TITLE: string = 'Total de Faturamento por Referência';\r\n","import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { DATES, InputGroupInline, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { getDefaultReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport EmpresaMHOIS from '../../../../components/mho/empresaMHOIS/EmpresaMHOIS';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { CLASS_KEY, REPORT_EVENT, REPORT_TITLE, TotalFaturamentoRelRV } from './TotalFaturamentoRelRV';\r\n\r\nconst DEFAULT_VALUES: TotalFaturamentoRelRV = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n  eventosAbertos: false,\r\n  eventosBaixados: false,\r\n  idsEmpresas: [],\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT, DATES.value),\r\n  dtFinalRequired: true,\r\n  dtInicialRequired: true,\r\n  exibirConfiguracaoDadosEmpresa: false,\r\n};\r\n\r\nconst TotalFaturamentoEventoReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const { handleSubmit, ...formProps } = useForm<TotalFaturamentoRelRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n\r\n  const validateExtras = (formData: TotalFaturamentoRelRV): string[] => {\r\n    const errors = [];\r\n    if (formData.dtInicial > formData.dtFinal) {\r\n      errors.push('A data inicial não pode ser maior ou igual a data final.');\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const handleChange = e => {\r\n    if (e.target.id === 'todos') {\r\n      e.target.value = true;\r\n      formProps.setValue('eventosBaixados', false);\r\n      formProps.setValue('eventosAbertos', false);\r\n    } else if (e.target.id === 'eventosAbertos') {\r\n      formProps.setValue('eventosAbertos', true);\r\n      formProps.setValue('eventosBaixados', false);\r\n    } else {\r\n      formProps.setValue('eventosAbertos', false);\r\n      formProps.setValue('eventosBaixados', true);\r\n    }\r\n    formProps.triggerValidation('eventosAbertos');\r\n    formProps.triggerValidation('eventosBaixados');\r\n  };\r\n\r\n  return (\r\n    <WindowComponent title=\"Total de Faturamento por Referência\" useGlobalParameter={true} globalParameter={globalReducer.globalParameter}>\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n        validateExtras={validateExtras}\r\n      >\r\n        <EmpresaMHOIS formProps={formProps} id=\"idsEmpresas\" inputSearchProps={{ selectProps: { isMulti: true } }} />\r\n\r\n        <InputGroupInline formProps={formProps} id=\"eventosBaixados\" hidden={true} />\r\n        <InputGroupInline formProps={formProps} id=\"eventosAbertos\" hidden={true} />\r\n        <Row>\r\n          <Col>\r\n            <CustomInput type=\"radio\" id=\"todos\" label=\"Imprimir todos\" name=\"todos\" value={'true'} onChange={handleChange} />\r\n          </Col>\r\n          <Col>\r\n            <CustomInput\r\n              type=\"radio\"\r\n              id=\"eventosBaixados\"\r\n              label=\"Imprimir somente baixados\"\r\n              name=\"todos\"\r\n              value={'false'}\r\n              innerRef={formProps.register}\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <CustomInput\r\n              type=\"radio\"\r\n              id=\"eventosAbertos\"\r\n              label=\"Imprimir somente não baixados\"\r\n              name=\"todos\"\r\n              value={'false'}\r\n              innerRef={formProps.register}\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </ReportForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default TotalFaturamentoEventoReportView;\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","import { Basic } from 'summer';\r\nimport { Empresa } from '../ger/empresa';\r\nimport { Banco } from '../mfp/banco';\r\nimport { ConfiguracaoBoletoMHO } from './configuracaoBoletoMHO';\r\nimport { EmpresaEventoFixoMHO } from './empresaEventoFixoMHO';\r\n\r\nexport interface EmpresaMHO extends Basic {\r\n  agenciaDebitoAutomatico?: string;\r\n  bancoInstituicaoDebitoAutomatico?: Banco;\r\n  configuracaoBoletoMHO: ConfiguracaoBoletoMHO;\r\n  contaCorrenteDebitoAutomatico?: string;\r\n  dentroMes?: boolean;\r\n  diaVencimento?: number;\r\n  digitoAgenciaDebitoAutomatico?: string;\r\n  dvContaCorrenteDebitoAutomatico?: string;\r\n  empresa?: Empresa;\r\n  empresaEventosFixos?: EmpresaEventoFixoMHO[];\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mho.model.dto.empresamho';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mho/empresaMHO';\r\n\r\nconst EmpresaMHOIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'empresa.codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'empresa.razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'diaVencimento',\r\n            text: 'Dia de Vencimento',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'EmpresaMHOSearchView',\r\n      }}\r\n      label=\"Empresa\"\r\n      placeholder=\"Informe a Empresa\"\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\nexport default EmpresaMHOIS;\r\n"],"sourceRoot":""}
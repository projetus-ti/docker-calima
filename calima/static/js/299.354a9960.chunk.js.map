{"version":3,"sources":["models/dtos/mcg/quadroSocietario.ts","models/enumerated/mcg/indicadorQualificacaoSocioEnum.ts","models/enumerated/mcg/qualificacaoRepresentanteLegalEnum.ts","models/enumerated/mcg/qualificacaoSocioEnum.ts","views/pages/mcg/quadroSocietario/QuadroSocietarioEditView.tsx","services/mcg.service.ts","models/dtos/ger/responsavel.ts","views/components/ger/responsavelIS/ResponsavelIS.tsx"],"names":["__webpack_require__","d","__webpack_exports__","CLASS_NAME","INDICADOR_QUALIFICACAO_SOCIO_ENUM_VALUES","value","label","extraField","intValue","QUALIFICACAO_REPRESENTANTE_LEGAL_ENUM_VALUES","QUALIFICACAO_SOCIO_ENUM_VALUES","QuadroSocietarioEditView","props","selectedItem","getSelectedItem","globalReducer","useSelector","state","formProps","useForm","defaultValues","Object","objectSpread2","empresa","id","globalParameter","mode","react_default","a","createElement","summer_esm","title","wikiId","editViewProps","dtoClassName","beforePersist","formData","done","validarQuadroSocietario","thenFunction","result","resultErro","length","params","message","type","AlertType","WARNING","alertManager","emit","ACTION_EVENTS","SHOW","async","hidden","Row","Col","ResponsavelIS","validation","required","placeholder","isPrependLabel","tooltipProps","inputDropDownProps","optionsProvider","selectProps","isClearable","InputType","DROP_DOWN","min","max","NUMBER","DATE","getService","create","gerarLancamentosFolhaPagamento","integracaoFolhaParam","param","send","post","integrarFolhaPagamento","lancamentoIntegracaoFolha","integrarMCP","importarParam","importarLancamentoCSV","data","formDataSend","FormData","append","String","importarDuplicados","importarLancamentosCardinal","_step","_iterator","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__","arquivos","s","n","arquivo","file","nomeArquivo","err","e","f","importarLancamentoPadraoCSV","_step2","_iterator2","importarHistoricoCSV","grupoHistoricoDestino","_step3","_iterator3","importarPlanoContaCSV","idEmpresa","grupoPlanoContaDestino","_step4","_iterator4","importarHistorico","importacaoHistorico","importarPlanoConta","importacaoPlanoContaParam","buscarConfigLivroFolhaMCG","get","integracaoFiscalContabil","encerrarContas","contaResultadoEncerramento","force","getDataUltimaContaEncerrada","idGerEmpresa","limparEncerramentoContaResultado","contaResultadoLimpeza","validarReferenciaSPEDECFIrpjCsll","configECFIrpjCsll","validarReferenciaSPEDECFImuneIsenta","configECFImuneIsenta","validarRefRemuneracaoSocio","configECFRemuneracaoSocio","configQuadro","obterLucroPrejuizoClassificacao","idGrupoPlanoConta","getSaldo","saldo","validarDadosSpedECF","ecfExportacaoParam","gerarSpedECF","usuario","getArquivoDigitalService","recuperarLancamentoConta","transferenciaLancamentoConta","transferirLancamentoConta","obterBancoPlanoConta","bancoPlanoContaDTO","validarConfigLivroFolha","changeLivroFolha","fecharRestaurar","fechamentoRestauracao","forceFecharRestaurar","verificarErros","erros","gerarSpedContabil","selecaoSped","arquivoRTFEscrituracaoSubstituida","_step5","_iterator5","atributoSelecaoSped","salvarLucroPrejuizoClassificacao","lucroPrejuizoClassificacao","consultarMovimentacao","saldoCriteria","totalizadorLancamento","consulta","getSaldoAnterior","isDataEncerrada","parametros","abrirContas","removeLancamentoPeriodo","obterContasClassificacaoIndireto","salvarClassificacaoIndireto","contaFluxoCaixaIndireto","obterMutacaoPatrimonioLiquido","salvarMutacaoPatrimonioLiquido","mutacaoPatrimonioLiquido","salvarContaResultado","contaResultado","excluirContaResultado","obterContasClassificacaoDireto","salvarClassificacaoDireto","contaFluxoCaixa","findSubGrupo","planoContaSubGrupoParam","removerTodosPlanosConta","removeList","listaPlanoConta","apagarFilha","listSubGrupo","planoConta","referenciarContas","idsPlanoConta","idPlanoContaReferencial","idPlanoContaReferencialECF","desvincularContas","existeLancamentoEmContaAnalitica","idPlanoConta","importarLancamentoMCG","tipoImportacao","sobescrever","versaoSuperiorA2","isEmpty","dtInicial","dtFinal","importarSpedContabil","_step6","_iterator6","gerarManadContabil","refInicial","refFinal","arquivoSFP","evolucaoContaContabilGraf","evolucaoContaContabilGrafParam","composicaoReceitaDespesasGraf","compReceitaDespesasGrafParam","gerarFCONTContabil","fContContabilCrit","obterDadosArquivoExtrato","arquivoSelecionado","idBancoMCG","obterDadosConciliacaoBancariaPeriodo","obterBancoListPlanoConta","conciliarLancamentosExtrato","listConciliacaoBancaria","removerConciliarLancamentosExtrato","listaRemover","removerLancamentosExtratoBancario","eLalurAContas","eLacsAContas","getSaldoDebito","getSaldoCredito","removerLancamentoLote","atualizaCalculoIrpjCsll","buscarLancamentosHonorarios","integracaoHonorariosParam","integrarHonorarios","lancamentos","isAlteraCalculoIRPJorCSLL","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","assign","inputSearchProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","searchViewId","INPUT_SEARCH"],"mappings":"6FAiBAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAO,MAAMA,EAAa,2LCjBnB,MAIMC,EAA2C,CAJ3B,CAAEC,MAAO,gBAAiBC,MAAO,mBAAiBC,WAAY,CAAEC,SAAU,IACxE,CAAEH,MAAO,kBAAmBC,MAAO,qBAAmBC,WAAY,CAAEC,SAAU,IAC3E,CAAEH,MAAO,qBAAsBC,MAAO,wBAAyBC,WAAY,CAAEC,SAAU,KCK5GC,EAA+C,CAPlC,CAAEJ,MAAO,aAAcC,MAAO,aAAcC,WAAY,CAAEC,SAAU,IACvE,CAAEH,MAAO,UAAWC,MAAO,UAAWC,WAAY,CAAEC,SAAU,IAClE,CAAEH,MAAO,MAAOC,MAAO,SAAOC,WAAY,CAAEC,SAAU,IACtD,CAAEH,MAAO,MAAOC,MAAO,MAAOC,WAAY,CAAEC,SAAU,IACpD,CAAEH,MAAO,QAASC,MAAO,QAASC,WAAY,CAAEC,SAAU,IAC1D,CAAEH,MAAO,QAASC,MAAO,QAASC,WAAY,CAAEC,SAAU,KC0ElEE,EAAiC,CA/EX,CACjCH,WAAY,CAAEC,SAAU,GACxBF,MAAO,mDACPD,MAAO,uBAEsB,CAC7BE,WAAY,CAAEC,SAAU,GACxBF,MAAO,kDACPD,MAAO,mBAE0B,CACjCE,WAAY,CAAEC,SAAU,GACxBF,MAAO,qDACPD,MAAO,uBAEsB,CAC7BE,WAAY,CAAEC,SAAU,GACxBF,MAAO,oDACPD,MAAO,mBAE4B,CACnCE,WAAY,CAAEC,SAAU,GACxBF,MAAO,kEACPD,MAAO,yBAEwB,CAC/BE,WAAY,CAAEC,SAAU,GACxBF,MAAO,iEACPD,MAAO,qBAE4B,CACnCE,WAAY,CAAEC,SAAU,GACxBF,MAAO,oEACPD,MAAO,yBAEwB,CAC/BE,WAAY,CAAEC,SAAU,GACxBF,MAAO,mEACPD,MAAO,qBAEc,CAAEA,MAAO,UAAWC,MAAO,UAAWC,WAAY,CAAEC,SAAU,IAC5C,CACvCD,WAAY,CAAEC,SAAU,IACxBF,MAAO,+CACPD,MAAO,6BAE0B,CACjCE,WAAY,CAAEC,SAAU,IACxBF,MAAO,yCACPD,MAAO,uBAE6B,CACpCE,WAAY,CAAEC,SAAU,IACxBF,MAAO,4CACPD,MAAO,0BAEgC,CACvCE,WAAY,CAAEC,SAAU,IACxBF,MAAO,+CACPD,MAAO,6BAEuC,CAC9CE,WAAY,CAAEC,SAAU,IACxBF,MAAO,+CACPD,MAAO,oCAE0B,CACjCE,WAAY,CAAEC,SAAU,IACxBF,MAAO,yCACPD,MAAO,uBAEe,CAAEA,MAAO,WAAYC,MAAO,WAAYC,WAAY,CAAEC,SAAU,KAClD,CACpCD,WAAY,CAAEC,SAAU,IACxBF,MAAO,4CACPD,MAAO,0BAEyB,CAAEA,MAAO,qBAAsBC,MAAO,2CAAmCC,WAAY,CAAEC,SAAU,4BC6GpHG,UA9J2EC,KACxF,MAAMC,EAAeC,aAAgBF,GAC/BG,EAAgBC,YAAmCC,GAASA,EAAMF,eAClEG,EAAYC,YAA0B,CAC1CC,cAAcC,OAAAC,EAAA,EAAAD,CAAA,CAAGE,QAAS,CAAEC,GAAIT,EAAcU,gBAAgBF,QAAQC,KAASX,GAC/Ea,KAAM,WA0BR,OACEC,EAAAC,EAAAC,cAACC,EAAA,GAAD,CAAiBC,MAAM,0CAAiCC,OAAQ,MAC9DL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUZ,UAAWA,EAAWe,cAAerB,EAAOsB,aAAc/B,IAAYgC,cAzB9D,CAACC,EAA4BC,KACjDC,aAAwBF,EAAU,CAChCG,aAAeC,IACb,IAAIC,EACJ,GAAID,EAAOE,OAAS,EAAG,CACN,gBAAXF,EACFC,EAAa,gCACO,cAAXD,IACTC,EAAa,yDAEf,MAAME,EAAqB,CACzBC,QAASH,EACTI,KAAMC,IAAUC,SAElBC,KAAaC,KAAKC,IAAcC,KAAMR,QAEtCN,EAAKD,MAIJ,CAAEgB,OAAO,KAMZzB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAkBN,GAAG,aAAaN,UAAWA,EAAWmC,QAAQ,IAChE1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,KACE3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,KACE5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CACEtC,UAASG,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAOH,GAAP,IAAkBuC,WAAY,CAAEC,UAAU,KACnDpD,MAAM,4BACNqD,YAAY,8BACZnC,GAAG,QACHoC,gBAAgB,MAItBjC,EAAAC,EAAAC,cAACyB,EAAA,EAAD,KACE3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,KACE5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEZ,UAAWA,EACXM,GAAG,6BACHoC,gBAAgB,EAChBtD,MAAM,8CACNuD,aAAc,CAAEjB,QAAS,+CACzBe,YAAY,2DACZG,mBAAoB,CAClBC,gBAAiB3D,EACjB4D,YAAa,CAAEC,aAAa,IAE9BpB,KAAMqB,IAAUC,cAItBxC,EAAAC,EAAAC,cAACyB,EAAA,EAAD,KACE3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,KACE5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEZ,UAAWA,EACXM,GAAG,oBACHoC,gBAAgB,EAChBtD,MAAM,iCACNuD,aAAc,CAAEjB,QAAS,kCACzBe,YAAY,8CACZG,mBAAoB,CAClBC,gBAAiBrD,EACjBsD,YAAa,CAAEC,aAAa,IAE9BpB,KAAMqB,IAAUC,cAItBxC,EAAAC,EAAAC,cAACyB,EAAA,EAAD,KACE3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,KACE5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CACEtC,UAAWA,EACXZ,MAAM,sBACNqD,YAAY,mCACZE,aAAc,CAAEjB,QAAS,uBACzBpB,GAAG,qBACHoC,gBAAgB,MAItBjC,EAAAC,EAAAC,cAACyB,EAAA,EAAD,KACE3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,KACE5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEZ,UAAWA,EACXM,GAAG,iCACHoC,gBAAgB,EAChBtD,MAAM,sCACNuD,aAAc,CAAEjB,QAAS,6CACzBe,YAAY,mDACZG,mBAAoB,CAClBC,gBAAiBtD,EACjBuD,YAAa,CAAEC,aAAa,IAE9BpB,KAAMqB,IAAUC,cAItBxC,EAAAC,EAAAC,cAACyB,EAAA,EAAD,KACE3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,KACE5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEZ,UAASG,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAOH,GAAP,IAAkBuC,WAAY,CAAEC,UAAU,EAAMU,IAAK,IAAMC,IAAK,OACzE7C,GAAG,aACHoC,gBAAgB,EAChBtD,MAAM,8BACNuD,aAAc,CAAEjB,QAAS,4EACzBC,KAAMqB,IAAUI,UAGpB3C,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,KACE5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEZ,UAAWA,EACXM,GAAG,sBACHoC,gBAAgB,EAChBtD,MAAM,0BACNuD,aAAc,CAAEjB,QAAS,qHACzBC,KAAMqB,IAAUK,SAItB5C,EAAAC,EAAAC,cAACyB,EAAA,EAAD,KACE3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,KACE5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEZ,UAASG,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAAOH,GAAP,IAAkBuC,WAAY,CAAEW,IAAK,EAAGC,IAAK,OACtD7C,GAAG,2BACHoC,gBAAgB,EAChBtD,MAAM,gCACNuD,aAAc,CAAEjB,QAAS,8EACzBC,KAAMqB,IAAUI,UAGpB3C,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,KACE5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEZ,UAAWA,EACXM,GAAG,kBACHoC,gBAAgB,EAChBtD,MAAM,mBACNuD,aAAc,CAAEjB,QAAS,oGACzBC,KAAMqB,IAAUK,47EClH9B,SAASC,IACP,OAAOC,aAAO,QAGT,SAASC,EAA+BC,EAA4CC,GACzFC,aAAKL,IAAaM,KAAkC,kCAAmCH,GAAuBC,GAGzG,SAASG,EAAuBC,EAAwDJ,GAC7FC,aAAKL,IAAaM,KAAkC,0BAA2BE,GAA4BJ,GAGtG,SAASK,EAAYC,EAA4BN,GACtDC,aAAKL,IAAaM,KAAuB,YAAaI,GAAgBN,GAGjE,SAASO,EAAsBC,EAAoCR,GACxE,MAAMS,EAAe,IAAIC,SACzBD,EAAaE,OAAO,aAAcC,OAAOJ,EAAK7D,QAAQC,KACtD6D,EAAaE,OAAO,qBAAsBC,OAAOJ,EAAKK,qBACtDJ,EAAaE,OAAO,8BAA+BC,OAAOJ,EAAKM,8BAJ2C,IAAAC,EAAAC,EAAAvE,OAAAwE,EAAA,EAAAxE,CAMpF+D,EAAKU,UAN+E,IAM1G,IAAAF,EAAAG,MAAAJ,EAAAC,EAAAI,KAAA3D,MAAqC,OAA1B4D,EAA0BN,EAAAtF,MACnCgF,EAAaE,OAAO,WAAYU,EAAQC,KAAMD,EAAQE,cAPkD,MAAAC,GAAAR,EAAAS,EAAAD,GAAA,QAAAR,EAAAU,IAU1GzB,aAAKL,IAAaM,KAAoB,yBAA0BO,GAAeT,GAG1E,SAAS2B,EAA4BnB,EAA0CR,GACpF,MAAMS,EAAe,IAAIC,SACzBD,EAAaE,OAAO,aAAcC,OAAOJ,EAAK7D,QAAQC,KAFgE,IAAAgF,EAAAC,EAAApF,OAAAwE,EAAA,EAAAxE,CAIhG+D,EAAKU,UAJ2F,IAItH,IAAAW,EAAAV,MAAAS,EAAAC,EAAAT,KAAA3D,MAAqC,OAA1B4D,EAA0BO,EAAAnG,MACnCgF,EAAaE,OAAO,WAAYU,EAAQC,KAAMD,EAAQE,cAL8D,MAAAC,GAAAK,EAAAJ,EAAAD,GAAA,QAAAK,EAAAH,IAOtHzB,aAAKL,IAAaM,KAAoB,+BAAgCO,GAAeT,GAGhF,SAAS8B,EAAqBtB,EAAmCR,GACtE,MAAMS,EAAe,IAAIC,SACzBD,EAAaE,OAAO,2BAA4BC,OAAOJ,EAAKuB,sBAAsBnF,KAFsB,IAAAoF,EAAAC,EAAAxF,OAAAwE,EAAA,EAAAxE,CAIlF+D,EAAKU,UAJ6E,IAIxG,IAAAe,EAAAd,MAAAa,EAAAC,EAAAb,KAAA3D,MAAqC,OAA1B4D,EAA0BW,EAAAvG,MACnCgF,EAAaE,OAAO,WAAYU,EAAQC,KAAMD,EAAQE,cALgD,MAAAC,GAAAS,EAAAR,EAAAD,GAAA,QAAAS,EAAAP,IAOxGzB,aAAKL,IAAaM,KAAoB,wBAAyBO,GAAeT,GAGzE,SAASkC,EAAsB1B,EAAoCR,GACxE,MAAMS,EAAe,IAAIC,SACzBD,EAAaE,OAAO,YAAaC,OAAOJ,EAAK2B,YAC7C1B,EAAaE,OAAO,4BAA6BC,OAAOJ,EAAK4B,uBAAuBxF,KAHsB,IAAAyF,EAAAC,EAAA7F,OAAAwE,EAAA,EAAAxE,CAKpF+D,EAAKU,UAL+E,IAK1G,IAAAoB,EAAAnB,MAAAkB,EAAAC,EAAAlB,KAAA3D,MAAqC,OAA1B4D,EAA0BgB,EAAA5G,MACnCgF,EAAaE,OAAO,WAAYU,EAAQC,KAAMD,EAAQE,cANkD,MAAAC,GAAAc,EAAAb,EAAAD,GAAA,QAAAc,EAAAZ,IAQ1GzB,aAAKL,IAAaM,KAAoB,yBAA0BO,GAAeT,GAG1E,SAASuC,EAAkBC,EAA0CxC,GAC1EC,aAAKL,IAAaM,KAAoB,qBAAsBsC,GAAsBxC,GAG7E,SAASyC,EAAmBC,EAAiD1C,GAClFC,aAAKL,IAAaM,KAAoB,sBAAuBwC,GAA4B1C,GAGpF,SAAS2C,EAA0BR,EAAmBnC,GAC3DC,aAAKL,IAAagD,IAAgB,8BAAgCT,GAAYnC,GAGzE,SAAS6C,EAAyBvC,EAAyCN,GAChFC,aAAKL,IAAaM,KAAqC,4BAA6BI,GAAgBN,GAG/F,SAAS8C,EACdC,EACAC,EACAhD,GAEAC,aACEL,IAAaM,KAAoC,kBAAmB,CAAE6C,6BAA4BC,UAClGhD,GAIG,SAASiD,EAA4BC,EAAsBlD,GAChEC,aAAKL,IAAagD,IAAU,gCAAkCM,GAAelD,GAGxE,SAASmD,EAAiCC,EAA8CpD,GAC7FC,aAAKL,IAAaM,KAAa,wCAAyCkD,GAAwBpD,GAG3F,SAASqD,EAAiCC,EAAsCtD,GACrFC,aAAKL,IAAaM,KAAc,oCAAqCoD,GAAoBtD,GAGpF,SAASuD,EAAoCC,EAA4CxD,GAC9FC,aAAKL,IAAaM,KAAc,uCAAwCsD,GAAuBxD,GAG1F,SAASyD,EAA2BC,EAAsD1D,GAC/FC,aAAKL,IAAaM,KAAc,8BAA+BwD,GAA4B1D,GAGtF,SAAStC,EAAwBiG,EAAgC3D,GACtEC,aAAKL,IAAaM,KAAa,2BAA4ByD,GAAe3D,GAGrE,SAAS4D,EAAgCC,EAA2B7D,GACzEC,aAAKL,IAAagD,IAAQ,oCAAsCiB,GAAoB7D,GAG/E,SAAS8D,EAASC,EAAc/D,GACrCC,aAAKL,IAAaM,KAAa,YAAa6D,GAAQ/D,GAG/C,SAASgE,EAAoBC,EAAwCjE,GAC1EC,aAAKL,IAAaM,KAAoB,uBAAwB+D,GAAqBjE,GAG9E,SAASkE,EAAaC,EAAkBF,EAAwCjE,GACrFC,aACEmE,cAA2BlE,KAAa,gBAAiB,CAAEiE,UAASF,uBACpEjE,GAIG,SAASqE,EAAyBC,EAA4DtE,GACnGC,aAAKL,IAAaM,KAAmB,4BAA6BoE,GAA+BtE,GAG5F,SAASuE,EAA0BD,EAA4DtE,GACpGC,aAAKL,IAAaM,KAAc,6BAA8BoE,GAA+BtE,GAGxF,SAASwE,EAAqBC,EAAqCzE,GACxEC,aAAKL,IAAaM,KAAe,wBAAyBuE,GAAqBzE,GAG1E,SAAS0E,EAAwBxB,EAAsBlD,GAC5DC,aAAKL,IAAagD,IAAa,4BAA8BM,GAAelD,GAGvE,SAAS2E,EAAiBzB,EAAsBlD,GACrDC,aAAKL,IAAagD,IAAU,qBAAuBM,GAAelD,GAG7D,SAAS4E,EAAgBC,EAAiD7E,GAC/EC,aAAKL,IAAaM,KAAkB,mBAAoB2E,GAAwB7E,GAG3E,SAAS8E,EAAqBD,EAAiD7E,GACpFC,aAAKL,IAAaM,KAAW,wBAAyB2E,GAAwB7E,GAGzE,SAAS+E,EAAeC,EAAuBhF,GACpDC,aAAKL,IAAaM,KAAc,kBAAmB8E,GAAQhF,GAGtD,SAASiF,EAAkBC,EAAkClF,GAClE,MAAMS,EAAe,IAAIC,SAGzB,GAFAD,EAAaE,OAAO,aAAcC,OAAOsE,EAAYf,QAAQvH,KAEzDsI,EAAYC,kCAAmC,KAAAC,EAAAC,EAAA5I,OAAAwE,EAAA,EAAAxE,CAC3ByI,EAAYC,mCADe,IACjD,IAAAE,EAAAlE,MAAAiE,EAAAC,EAAAjE,KAAA3D,MAAqE,OAA1D4D,EAA0D+D,EAAA3J,MACnEgF,EAAaE,OAAO,oCAAqCU,EAAQC,KAAMD,EAAQE,cAFhC,MAAAC,GAAA6D,EAAA5D,EAAAD,GAAA,QAAA6D,EAAA3D,KAMnD,IAAK,MAAM4D,KAAuBJ,EAEN,sCAAxBI,GACwB,YAAxBA,GACqC,OAArCJ,EAAYI,IAEZ7E,EAAaE,OAAO2E,EAAqBJ,EAAYI,IAGzDrF,aAAKL,IAAaM,KAAa,qBAAsBO,GAAeT,GAG/D,SAASuF,EACdC,EACAxF,GAEAC,aAAKL,IAAaM,KAAiC,oCAAqCsF,GAA6BxF,GAGhH,SAASyF,EAAsBC,EAA8B1F,GAClEC,aAAKL,IAAaM,KAAwB,yBAA0BwF,GAAgB1F,GAG/E,SAAS2F,EAAsBC,EAAmC5F,GACvEC,aAAKL,IAAaM,KAA4B,yBAA0B0F,GAAW5F,GAG9E,SAAS6F,EAAiBH,EAA8B1F,GAC7DC,aAAKL,IAAaM,KAAa,oBAAqBwF,GAAgB1F,GAG/D,SAAS8F,EAAgBC,EAAgC/F,GAC9DC,aAAKL,IAAaM,KAAc,mBAAoB6F,GAAa/F,GAG5D,SAASgG,EAAYD,EAAgC/F,GAC1DC,aAAKL,IAAaM,KAAW,eAAgB6F,GAAa/F,GAGrD,SAASiG,EAAwBF,EAAqC/F,GAC3EC,aAAKL,IAAaM,KAAa,2BAA4B6F,GAAa/F,GAGnE,SAASkG,EAAiCrC,EAA2B7D,GAC1EC,aAAKL,IAAagD,IAA+B,qCAAuCiB,GAAoB7D,GAGvG,SAASmG,EAA4BC,EAAkDpG,GAC5FC,aAAKL,IAAaM,KAAc,+BAAgCkG,GAA0BpG,GAGrF,SAASqG,EAA8BxC,EAA2B7D,GACvEC,aAAKL,IAAagD,IAAQ,kCAAoCiB,GAAoB7D,GAG7E,SAASsG,EAA+BC,EAAoDvG,GACjGC,aAAKL,IAAaM,KAAW,kCAAmCqG,GAA2BvG,GAGtF,SAASwG,EAAqBC,EAAgCzG,GACnEC,aAAKL,IAAaM,KAAW,wBAAyBuG,GAAiBzG,GAGlE,SAAS0G,EAAsBD,EAAgCzG,GACpEC,aAAKL,IAAaM,KAAW,yBAA0BuG,GAAiBzG,GAGnE,SAAS2G,EAA+B9C,EAA2B7D,GACxEC,aAAKL,IAAagD,IAAuB,mCAAqCiB,GAAoB7D,GAG7F,SAAS4G,EAA0BC,EAAkC7G,GAC1EC,aAAKL,IAAaM,KAAc,6BAA8B2G,GAAkB7G,GAG3E,SAAS8G,EAAaC,EAAkD/G,GAC7EC,aAAKL,IAAaM,KAAU,gBAAiB6G,GAA0B/G,GAGlE,SAASgH,GAAwBnD,EAA2BM,EAAkBnE,GACnFC,aACEL,IAAaM,KAAW,2BAA4B,CAAE2D,oBAAmBM,YACzEnE,GAIG,SAASiH,GAAWC,EAA+BC,EAAsBhD,EAAkBnE,GAChGC,aACEL,IAAaM,KAAU,cAAe,CAAEgH,kBAAiBC,cAAahD,YACtEnE,GAIG,SAASoH,GAAaC,EAAwBrH,GACnDC,aAAKL,IAAaM,KAAmB,gBAAiBmH,GAAarH,GAG9D,SAASsH,GACdC,EACAC,EACAC,EACAzH,GAEAC,aACEL,IAAaM,KAAW,qBAAsB,CAAEqH,gBAAeC,0BAAyBC,+BACxFzH,GAIG,SAAS0H,GACdH,EACAC,EACAC,EACAzH,GAEAC,aACEL,IAAaM,KAAW,qBAAsB,CAAEqH,gBAAeC,0BAAyBC,+BACxFzH,GAIG,SAAS2H,GAAiCC,EAAsBzF,EAAmBnC,GACxFC,aACEL,IAAaM,KAAc,oCAAqC,CAAE0H,eAAczF,cAChFnC,GAIG,SAAS6H,GAAsBrH,EAAsCR,GAC1E,MAAMS,EAAe,IAAIC,SACzBD,EAAaE,OAAO,eAAgBC,OAAOJ,EAAK0C,eAChDzC,EAAaE,OAAO,iBAAkBC,OAAOJ,EAAKsH,iBAClDrH,EAAaE,OAAO,cAAeC,OAAOJ,EAAKuH,cAC/CtH,EAAaE,OAAO,mBAAoBC,OAAOJ,EAAKwH,mBACpDvH,EAAaE,OAAO,UAAWH,EAAKa,QAAQ,GAAGC,KAAMd,EAAKa,QAAQ,GAAGE,cAEvC,IAA1Bf,EAAKwH,kBAA+BC,aAAQzH,EAAK0H,YAAeD,aAAQzH,EAAK2H,WAC/E1H,EAAaE,OAAO,YAAaH,EAAK0H,WACtCzH,EAAaE,OAAO,UAAWH,EAAK2H,UAGtClI,aAAKL,IAAaM,KAA8C,yBAA0BO,GAAeT,GAGpG,SAASoI,GAAqB5H,EAA8BR,GACjE,MAAMS,EAAe,IAAIC,SACzBD,EAAaE,OAAO,aAAcC,OAAOJ,EAAK7D,QAAQC,KACtD6D,EAAaE,OAAO,aAAcC,OAAOJ,EAAK2D,QAAQvH,KAH6C,IAAAyL,EAAAC,EAAA7L,OAAAwE,EAAA,EAAAxE,CAK7E+D,EAAKU,UALwE,IAKnG,IAAAoH,EAAAnH,MAAAkH,EAAAC,EAAAlH,KAAA3D,MAAqC,OAA1B4D,EAA0BgH,EAAA5M,MACnCgF,EAAaE,OAAO,WAAYU,EAAQC,KAAMD,EAAQE,cAN2C,MAAAC,GAAA8G,EAAA7G,EAAAD,GAAA,QAAA8G,EAAA5G,IASnGzB,aAAKL,IAAaM,KAAoB,wBAAyBO,GAAeT,GAGzE,SAASuI,GAAmB/H,EAAyBR,GAC1D,MAAMS,EAAe,IAAIC,SACzBD,EAAaE,OAAO,aAAcH,EAAKgI,YACvC/H,EAAaE,OAAO,WAAYH,EAAKiI,UACrChI,EAAaE,OAAO,eAAgBC,OAAOJ,EAAK0C,eAChDzC,EAAaE,OAAO,aAAcC,OAAOJ,EAAK2D,QAAQvH,KAEjDqL,aAAQzH,EAAKkI,aAChBjI,EAAaE,OAAO,aAAcH,EAAKkI,WAAW,GAAGpH,KAAMd,EAAKkI,WAAW,GAAGnH,aAGhFtB,aAAKL,IAAaM,KAAa,sBAAuBO,GAAeT,GAGhE,SAAS2I,GACdC,EACA5I,GAEAC,aAAKL,IAAaM,KAAsC,6BAA8B0I,GAAiC5I,GAGlH,SAAS6I,GACdC,EACA9I,GAEAC,aAAKL,IAAaM,KAA0C,iCAAkC4I,GAA+B9I,GAGxH,SAAS+I,GAAmBC,EAAsChJ,GACvEC,aAAKL,IAAaM,KAAW,sBAAuB8I,GAAoBhJ,GAGnE,SAASiJ,GAAyBC,EAAwCC,EAAYnJ,GAC3F,MAAMS,EAAe,IAAIC,SACzBD,EAAaE,OAAO,aAAcwI,GAElC1I,EAAaE,OAAO,qBAAsBuI,EAAmB,GAAG5H,KAAM4H,EAAmB,GAAG3H,aAE5FtB,aAAKL,IAAaM,KAAqB,4BAA6BO,GAAeT,GAG9E,SAASoJ,GACdvF,EACA1B,EACAgH,EACAjB,EACAC,EACAnI,GAEA,MAAMS,EAAe,IAAIC,SACzBD,EAAaE,OAAO,oBAAqBC,OAAOiD,IAChDpD,EAAaE,OAAO,YAAaC,OAAOuB,IACxC1B,EAAaE,OAAO,aAAcC,OAAOuI,IACzC1I,EAAaE,OAAO,YAAaC,OAAOsH,IACxCzH,EAAaE,OAAO,UAAWC,OAAOuH,IAEtClI,aAAKL,IAAaM,KAA8B,wCAAyCO,GAAeT,GAGnG,SAASqJ,GAAyB5E,EAAqCzE,GAC5EC,aAAKL,IAAaM,KAAiB,4BAA6BuE,GAAqBzE,GAGhF,SAASsJ,GAA4BC,EAAgDvJ,GAC1FC,aAAKL,IAAaM,KAAa,+BAAgCqJ,GAA0BvJ,GAGpF,SAASwJ,GAAmCC,EAAqCzJ,GACtFC,aAAKL,IAAaM,KAAa,sCAAuCuJ,GAAezJ,GAGhF,SAAS0J,GAAkCD,EAA8BzJ,GAC9EC,aAAKL,IAAaM,KAAa,qCAAsCuJ,GAAezJ,GAG/E,SAAS2J,GAAc/M,EAAYoD,GACxCC,aAAKL,IAAagD,IAAkB,kBAAoBhG,GAAKoD,GAGxD,SAAS4J,GAAahN,EAAYoD,GACvCC,aAAKL,IAAagD,IAAkB,iBAAmBhG,GAAKoD,GAGvD,SAAS6J,GAAe9D,EAAuB/F,GACpDC,aAAKL,IAAaM,KAAa,kBAAmB6F,GAAa/F,GAG1D,SAAS8J,GAAgB/D,EAAuB/F,GACrDC,aAAKL,IAAaM,KAAa,mBAAoB6F,GAAa/F,GAG3D,SAAS+J,GAAsBhE,EAAkC/F,GACtEC,aAAKL,IAAaM,KAAc,yBAA0B6F,GAAa/F,GAGlE,SAASgK,GAAwBjE,EAAkC/F,GACxEC,aAAKL,IAAaM,KAAc,2BAA4B6F,GAAa/F,GAGpE,SAASiK,GACdC,EACAlK,GAEAC,aAAKL,IAAaM,KAAuC,+BAAgCgK,GAA4BlK,GAGhH,SAASmK,GACdD,EACAE,EACApK,GAEAC,aACEL,IAAaM,KAAa,sBAAuB,CAAEgK,4BAA2BE,gBAC9EpK,GAIG,SAASqK,GAA0BtE,EAA6B/F,GACrEC,aAAKL,IAAaM,KAAc,6BAA8B6F,GAAa/F,sCCxd7E5E,EAAAC,EAAAC,EAAA,sBAAAC,IAAO,MAAMA,EAAa,2ICcXqD,IA/CuB5C,IAElCsO,EAAAtN,EAAAC,cAACsN,EAAA,EAAD9N,OAAA+N,OAAA,GACMxO,EADN,CAEEgD,gBAAgB,EAChByL,iBAAgBhO,OAAAiO,EAAA,EAAAjO,QAAAiO,EAAA,EAAAjO,CAAA,GACXT,EAAMyO,kBADK,IAEdE,QAAS,CACP,CACEC,UAAW,OACXC,KAAM,QAER,CACED,UAAW,MACXC,KAAM,OAER,CACED,UAAW,OACXC,KAAM,QAER,CACED,UAAW,MACXC,KAAM,OAER,CACED,UAAW,OACXC,KAAM,QAER,CACED,UAAW,WACXC,KAAM,YAER,CACED,UAAW,QACXC,KAAM,WAGVvN,aAAc/B,IACduP,aAAc,0BAEhBpP,MAAOM,EAAMN,MAAQM,EAAMN,MAAQ,iBACnCqD,YAAa/C,EAAM+C,YAAc/C,EAAM+C,YAAc,2BACrDd,KAAMqB,IAAUyL","file":"static/js/299.354a9960.chunk.js","sourcesContent":["import { Basic } from 'summer';\r\nimport { Empresa } from '../ger/empresa';\r\nimport { Responsavel } from '../ger/responsavel';\r\n\r\nexport interface QuadroSocietario extends Basic {\r\n  empresa?: Empresa;\r\n  socio?: Responsavel;\r\n  indicadorQualificacaoSocio?: string;\r\n  qualificacaoSocio?: string;\r\n  representanteLegal?: Responsavel;\r\n  qualificacaoRepresentanteLegal?: string;\r\n  percentual?: number;\r\n  percentualCapitalVotante?: number;\r\n  dataAlteracaoQuadro?: string;\r\n  dataSaidaQuadro?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mcg.model.dto.quadrosocietario';\r\n","export const PESSOA_FISICA = { value: 'PESSOA_FISICA', label: 'Pessoa Física', extraField: { intValue: 1 } };\r\nexport const PESSOA_JURIDICA = { value: 'PESSOA_JURIDICA', label: 'Pessoa Jurídica', extraField: { intValue: 2 } };\r\nexport const FUNDO_INVESTIMENTO = { value: 'FUNDO_INVESTIMENTO', label: 'Fundo de Investimento', extraField: { intValue: 3 } };\r\n\r\nexport const INDICADOR_QUALIFICACAO_SOCIO_ENUM_VALUES = [PESSOA_FISICA, PESSOA_JURIDICA, FUNDO_INVESTIMENTO];\r\n","export const PROCURADOR = { value: 'PROCURADOR', label: 'Procurador', extraField: { intValue: 1 } };\r\nexport const CURADOR = { value: 'CURADOR', label: 'Curador', extraField: { intValue: 2 } };\r\nexport const MAE = { value: 'MAE', label: 'Mãe', extraField: { intValue: 3 } };\r\nexport const PAI = { value: 'PAI', label: 'Pai', extraField: { intValue: 4 } };\r\nexport const TUTOR = { value: 'TUTOR', label: 'Tutor', extraField: { intValue: 5 } };\r\nexport const OUTRO = { value: 'OUTRO', label: 'Outro', extraField: { intValue: 6 } };\r\n\r\nexport const QUALIFICACAO_REPRESENTANTE_LEGAL_ENUM_VALUES = [PROCURADOR, CURADOR, MAE, PAI, TUTOR, OUTRO];\r\n","export const ACIONISTA_PF_BRASIL = {\r\n  extraField: { intValue: 1 },\r\n  label: 'Acionista Pessoa Física Domiciliado no Brasil',\r\n  value: 'ACIONISTA_PF_BRASIL',\r\n};\r\nexport const SOCIO_PF_BRASIL = {\r\n  extraField: { intValue: 2 },\r\n  label: 'Sócio Pessoa Física Domiciliado no Brasil',\r\n  value: 'SOCIO_PF_BRASIL',\r\n};\r\nexport const ACIONISTA_PJ_BRASIL = {\r\n  extraField: { intValue: 3 },\r\n  label: 'Acionista Pessoa Jurídica Domiciliado no Brasil',\r\n  value: 'ACIONISTA_PJ_BRASIL',\r\n};\r\nexport const SOCIO_PJ_BRASIL = {\r\n  extraField: { intValue: 4 },\r\n  label: 'Sócio Pessoa Jurídica Domiciliado no Brasil',\r\n  value: 'SOCIO_PJ_BRASIL',\r\n};\r\nexport const ACIONISTA_PF_EXTERIOR = {\r\n  extraField: { intValue: 5 },\r\n  label: 'Acionista Pessoa Física Residente ou Domiciliado no Exterior',\r\n  value: 'ACIONISTA_PF_EXTERIOR',\r\n};\r\nexport const SOCIO_PF_EXTERIOR = {\r\n  extraField: { intValue: 6 },\r\n  label: 'Sócio Pessoa Física Residente ou Domiciliado no Exterior',\r\n  value: 'SOCIO_PF_EXTERIOR',\r\n};\r\nexport const ACIONISTA_PJ_EXTERIOR = {\r\n  extraField: { intValue: 7 },\r\n  label: 'Acionista Pessoa Jurídica Residente ou Domiciliado no Exterior',\r\n  value: 'ACIONISTA_PJ_EXTERIOR',\r\n};\r\nexport const SOCIO_PJ_EXTERIOR = {\r\n  extraField: { intValue: 8 },\r\n  label: 'Sócio Pessoa Jurídica Residente ou Domiciliado no Exterior',\r\n  value: 'SOCIO_PJ_EXTERIOR',\r\n};\r\nexport const TITULAR = { value: 'TITULAR', label: 'Titular', extraField: { intValue: 9 } };\r\nexport const ADMINISTRADOR_SEM_VINCULO = {\r\n  extraField: { intValue: 10 },\r\n  label: 'Administrador sem Vínculo Empregatício',\r\n  value: 'ADMINISTRADOR_SEM_VINCULO',\r\n};\r\nexport const DIRETOR_SEM_VINCULO = {\r\n  extraField: { intValue: 11 },\r\n  label: 'Diretor sem Vínculo Empregatício',\r\n  value: 'DIRETOR_SEM_VINCULO',\r\n};\r\nexport const PRESIDENTE_SEM_VINCULO = {\r\n  extraField: { intValue: 12 },\r\n  label: 'Presidente sem Vínculo Empregatício',\r\n  value: 'PRESIDENTE_SEM_VINCULO',\r\n};\r\nexport const ADMINISTRADOR_COM_VINCULO = {\r\n  extraField: { intValue: 13 },\r\n  label: 'Administrador com Vínculo Empregatício',\r\n  value: 'ADMINISTRADOR_COM_VINCULO',\r\n};\r\nexport const CONSELHEIRO_ADMINISTRACAO_FISCAL = {\r\n  extraField: { intValue: 14 },\r\n  label: 'Conselheiro de Administração ou Fiscal',\r\n  value: 'CONSELHEIRO_ADMINISTRACAO_FISCAL',\r\n};\r\nexport const DIRETOR_COM_VINCULO = {\r\n  extraField: { intValue: 15 },\r\n  label: 'Diretor com Vínculo Empregatício',\r\n  value: 'DIRETOR_COM_VINCULO',\r\n};\r\nexport const FUNDADOR = { value: 'FUNDADOR', label: 'Fundador', extraField: { intValue: 16 } };\r\nexport const PRESIDENTE_COM_VINCULO = {\r\n  extraField: { intValue: 17 },\r\n  label: 'Presidente com Vínculo Empregatício',\r\n  value: 'PRESIDENTE_COM_VINCULO',\r\n};\r\nexport const USUFRUTUARIO_QUOTA = { value: 'USUFRUTUARIO_QUOTA', label: 'Usufrutuário de Quotas ou Ações', extraField: { intValue: 18 } };\r\n\r\nexport const QUALIFICACAO_SOCIO_ENUM_VALUES = [\r\n  ACIONISTA_PF_BRASIL,\r\n  SOCIO_PF_BRASIL,\r\n  ACIONISTA_PJ_BRASIL,\r\n  SOCIO_PJ_BRASIL,\r\n  ACIONISTA_PF_EXTERIOR,\r\n  SOCIO_PF_EXTERIOR,\r\n  ACIONISTA_PJ_EXTERIOR,\r\n  SOCIO_PJ_EXTERIOR,\r\n  TITULAR,\r\n  ADMINISTRADOR_SEM_VINCULO,\r\n  DIRETOR_SEM_VINCULO,\r\n  PRESIDENTE_SEM_VINCULO,\r\n  ADMINISTRADOR_COM_VINCULO,\r\n  CONSELHEIRO_ADMINISTRACAO_FISCAL,\r\n  DIRETOR_COM_VINCULO,\r\n  FUNDADOR,\r\n  PRESIDENTE_COM_VINCULO,\r\n  USUFRUTUARIO_QUOTA,\r\n];\r\n","import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, Row } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  EditForm,\r\n  EditViewProps,\r\n  getSelectedItem,\r\n  InputGroupInline,\r\n  InputType,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { CLASS_NAME, QuadroSocietario } from '../../../../models/dtos/mcg/quadroSocietario';\r\nimport { INDICADOR_QUALIFICACAO_SOCIO_ENUM_VALUES } from '../../../../models/enumerated/mcg/indicadorQualificacaoSocioEnum';\r\nimport { QUALIFICACAO_REPRESENTANTE_LEGAL_ENUM_VALUES } from '../../../../models/enumerated/mcg/qualificacaoRepresentanteLegalEnum';\r\nimport { QUALIFICACAO_SOCIO_ENUM_VALUES } from '../../../../models/enumerated/mcg/qualificacaoSocioEnum';\r\nimport { validarQuadroSocietario } from '../../../../services/mcg.service';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport ResponsavelIS from '../../../components/ger/responsavelIS/ResponsavelIS';\r\n\r\ninterface QuadroSocietarioEditViewProps extends EditViewProps<QuadroSocietario> {}\r\n\r\nconst QuadroSocietarioEditView: FC<QuadroSocietarioEditViewProps & RouteComponentProps> = props => {\r\n  const selectedItem = getSelectedItem(props);\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const formProps = useForm<QuadroSocietario>({\r\n    defaultValues: { empresa: { id: globalReducer.globalParameter.empresa.id }, ...selectedItem },\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const beforePersist = (formData: QuadroSocietario, done: any) => {\r\n    validarQuadroSocietario(formData, {\r\n      thenFunction: (result: any) => {\r\n        let resultErro;\r\n        if (result.length > 0) {\r\n          if (result === 'SocioExiste') {\r\n            resultErro = 'Sócio já foi cadastrado';\r\n          } else if (result === 'Limite100') {\r\n            resultErro = 'A soma dos percentuais ultrapassaram o valor de 100%.';\r\n          }\r\n          const params: AlertProps = {\r\n            message: resultErro,\r\n            type: AlertType.WARNING,\r\n          };\r\n          alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n        } else {\r\n          done(formData);\r\n        }\r\n      },\r\n    });\r\n    return { async: true };\r\n  };\r\n\r\n  return (\r\n    <WindowComponent title=\"Manutenção do Quadro de Sócios\" wikiId={2127}>\r\n      <EditForm formProps={formProps} editViewProps={props} dtoClassName={CLASS_NAME} beforePersist={beforePersist}>\r\n        <InputGroupInline id=\"empresa.id\" formProps={formProps} hidden={true} />\r\n        <Row>\r\n          <Col>\r\n            <ResponsavelIS\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              label=\"Responsável (Sócio)\"\r\n              placeholder=\"Selecione um Responsável\"\r\n              id=\"socio\"\r\n              isPrependLabel={true}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={formProps}\r\n              id=\"indicadorQualificacaoSocio\"\r\n              isPrependLabel={true}\r\n              label=\"Indicador de Qualificação do Sócio\"\r\n              tooltipProps={{ message: 'Indicador de Qualificação do Sócio' }}\r\n              placeholder=\"Selecione o Indicador de Qualificação do Sócio.\"\r\n              inputDropDownProps={{\r\n                optionsProvider: INDICADOR_QUALIFICACAO_SOCIO_ENUM_VALUES,\r\n                selectProps: { isClearable: true },\r\n              }}\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={formProps}\r\n              id=\"qualificacaoSocio\"\r\n              isPrependLabel={true}\r\n              label=\"Qualificação do Sócio\"\r\n              tooltipProps={{ message: 'Qualificação do Sócio' }}\r\n              placeholder=\"Selecione a Qualificação do Sócio.\"\r\n              inputDropDownProps={{\r\n                optionsProvider: QUALIFICACAO_SOCIO_ENUM_VALUES,\r\n                selectProps: { isClearable: true },\r\n              }}\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <ResponsavelIS\r\n              formProps={formProps}\r\n              label=\"Representante Legal\"\r\n              placeholder=\"Selecione um Representante Legal\"\r\n              tooltipProps={{ message: 'Representante Legal' }}\r\n              id=\"representanteLegal\"\r\n              isPrependLabel={true}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={formProps}\r\n              id=\"qualificacaoRepresentanteLegal\"\r\n              isPrependLabel={true}\r\n              label=\"Qualificação do Representante\"\r\n              tooltipProps={{ message: 'Qualificação do Representante Legal' }}\r\n              placeholder=\"Selecione a Qualificação do Representante.\"\r\n              inputDropDownProps={{\r\n                optionsProvider: QUALIFICACAO_REPRESENTANTE_LEGAL_ENUM_VALUES,\r\n                selectProps: { isClearable: true },\r\n              }}\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true, min: 0.01, max: 100 } }}\r\n              id=\"percentual\"\r\n              isPrependLabel={true}\r\n              label=\"Percentual no Capital Total\"\r\n              tooltipProps={{ message: 'Percentual Relativo à Participação do Sócio no Capital Total' }}\r\n              type={InputType.NUMBER}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={formProps}\r\n              id=\"dataAlteracaoQuadro\"\r\n              isPrependLabel={true}\r\n              label=\"Data da Alteração\"\r\n              tooltipProps={{ message: 'Data da Alteração no Quadro Societário - Data em que o sócio iniciou sua participação do quadro' }}\r\n              type={InputType.DATE}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { min: 0, max: 100 } }}\r\n              id=\"percentualCapitalVotante\"\r\n              isPrependLabel={true}\r\n              label=\"Percentual no Capital Votante\"\r\n              tooltipProps={{ message: 'Percentual Relativo à Participação do Sócio no Capital Votante' }}\r\n              type={InputType.NUMBER}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={formProps}\r\n              id=\"dataSaidaQuadro\"\r\n              isPrependLabel={true}\r\n              label=\"Data da Saída\"\r\n              tooltipProps={{ message: 'Data da Saída do Quadro Societário - Data em que o sócio deixou de participar do quadro' }}\r\n              type={InputType.DATE}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </EditForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default QuadroSocietarioEditView;\r\n","import { AxiosInstance } from 'axios';\r\nimport { ArquivoSelecionado, AxiosParam, create, isEmpty, send } from 'summer';\r\nimport { PlanoConta } from '../models/dtos/ger/planoConta';\r\nimport { PlanoContaSubGrupoParam } from '../models/dtos/ger/planoContaSubGrupoParam';\r\nimport { RuleMessage } from '../models/dtos/ger/ruleMessage';\r\nimport { Usuario } from '../models/dtos/ger/usuario';\r\nimport { BancoExtrato } from '../models/dtos/mcg/bancoExtrato';\r\nimport { BancoMCG } from '../models/dtos/mcg/bancoMCG';\r\nimport { BancoPlanoConta } from '../models/dtos/mcg/bancoPlanoConta';\r\nimport { CalculoIrpjCsll } from '../models/dtos/mcg/calculoIrpjCsll';\r\nimport { ComposicaoReceitaDespesasGrafParam } from '../models/dtos/mcg/composicaoReceitaDespesasGrafParam';\r\nimport { ComposicaoReceitaDespesasGrafReturn } from '../models/dtos/mcg/composicaoReceitaDespesasGrafReturn';\r\nimport { ConciliacaoBancaria } from '../models/dtos/mcg/conciliacaoBancaria';\r\nimport { ConfigECFImuneIsenta } from '../models/dtos/mcg/configECFImuneIsenta';\r\nimport { ConfigECFIrpjCsll } from '../models/dtos/mcg/configECFIrpjCsll';\r\nimport { ConfigECFRemuneracaoSocio } from '../models/dtos/mcg/configECFRemuneracaoSocio';\r\nimport { ConsultaTotalLancamento } from '../models/dtos/mcg/consultaTotalLancamento';\r\nimport { ContaFluxoCaixa } from '../models/dtos/mcg/contaFluxoCaixa';\r\nimport { ContaFluxoCaixaIndireto } from '../models/dtos/mcg/contaFluxoCaixaIndireto';\r\nimport { ContaResultado } from '../models/dtos/mcg/contaResultado';\r\nimport { ContaResultadoLimpeza } from '../models/dtos/mcg/contaResultadoLimpeza';\r\nimport { ContaResultadoMCGEncerramento } from '../models/dtos/mcg/contaResultadoMCGEncerramento';\r\nimport { DataEncerradaParam } from '../models/dtos/mcg/dataEncerradaParam';\r\nimport { ECFExportacaoParam } from '../models/dtos/mcg/ecfExportacaoParam';\r\nimport { Erros } from '../models/dtos/mcg/erros';\r\nimport { EvolucaoContaContabilGrafParam } from '../models/dtos/mcg/evolucaoContaContabilGrafParam';\r\nimport { EvolucaoContaContabilGrafReturn } from '../models/dtos/mcg/evolucaoContaContabilGrafReturn';\r\nimport { FCONTContabilCrit } from '../models/dtos/mcg/fContContabilCrit';\r\nimport { FechamentoRestauracaoMCG } from '../models/dtos/mcg/fechamentoRestauracaoMCG';\r\nimport { ImportacaoFiscalContabil, ImportacaoFiscalContabilResult } from '../models/dtos/mcg/importacaoFiscalContabil';\r\nimport { ImportacaoHistorico } from '../models/dtos/mcg/importacaoHistorico';\r\nimport { ImportacaoHistoricoCSVParam } from '../models/dtos/mcg/importacaoHistoricoCSVParam';\r\nimport { ImportacaoLancamentoCSVParam } from '../models/dtos/mcg/importacaoLancamentoCSVParam';\r\nimport { ImportacaoLancamentoMCGRetornoValidacao } from '../models/dtos/mcg/importacaoLancamentoMCGRetornoValidacao';\r\nimport { ImportacaoLancamentoMCGSelecao } from '../models/dtos/mcg/importacaoLancamentoMCGSelecao';\r\nimport { ImportacaoLancamentoPadraoCSVParam } from '../models/dtos/mcg/importacaoLancamentoPadraoCSVParam';\r\nimport { ImportacaoPlanoConta } from '../models/dtos/mcg/importacaoPlanoConta';\r\nimport { ImportacaoPlanoContaCSVParam } from '../models/dtos/mcg/importacaoPlanoContaCSVParam';\r\nimport { ImportacaoSpedContabil } from '../models/dtos/mcg/importacaoSpedContabil';\r\nimport { ImportacaoResult, ImportarMCP } from '../models/dtos/mcg/importarMCP';\r\nimport { InfoConciliacaoBancaria } from '../models/dtos/mcg/infoConciliacaoBancaria';\r\nimport { IntegracaoFolhaParam } from '../models/dtos/mcg/integracaoFolhaParam';\r\nimport { IntegracaoHonorariosParam } from '../models/dtos/mcg/integracaoHonorariosParam';\r\nimport { Lancamento } from '../models/dtos/mcg/lancamento';\r\nimport { LancamentoIntegracaoFolha } from '../models/dtos/mcg/lancamentoIntegracaoFolha';\r\nimport { LancamentoIntegracaoHonorarios } from '../models/dtos/mcg/lancamentoIntegracaoHonorarios';\r\nimport { LancamentoSaldo } from '../models/dtos/mcg/lancamentoSaldo';\r\nimport { LivroFolha } from '../models/dtos/mcg/livroFolha';\r\nimport { LucroPrejuizoClassificacao } from '../models/dtos/mcg/lucroPrejuizoClassificacao';\r\nimport { MANADContabilCrit } from '../models/dtos/mcg/manadContabilCrit';\r\nimport { MutacaoPatrimonioLiquido } from '../models/dtos/mcg/mutacaoPatrimonioLiquido';\r\nimport { QuadroSocietario } from '../models/dtos/mcg/quadroSocietario';\r\nimport { RemoveLancamentoLote } from '../models/dtos/mcg/removeLancamentoLote';\r\nimport { RemoveLancamentoPeriodo } from '../models/dtos/mcg/removeLancamentoPeriodo';\r\nimport { Saldo } from '../models/dtos/mcg/saldo';\r\nimport { SaldoCriteria } from '../models/dtos/mcg/saldoCriteria';\r\nimport { SelecaoSpedContabil } from '../models/dtos/mcg/selecaoSpedContabil';\r\nimport { SomaSaldo } from '../models/dtos/mcg/somaSaldo';\r\nimport { TotalizadorLancamento } from '../models/dtos/mcg/totalizadorLancamento';\r\nimport { TransferenciaLancamentoConta } from '../models/dtos/mcg/transferenciaLancamentoConta';\r\nimport { VerificarErros } from '../models/dtos/mcg/verificarErros';\r\nimport { getArquivoDigitalService } from './ger.service';\r\n\r\nfunction getService(): AxiosInstance {\r\n  return create('/mcg');\r\n}\r\n\r\nexport function gerarLancamentosFolhaPagamento(integracaoFolhaParam: IntegracaoFolhaParam, param: AxiosParam<LancamentoIntegracaoFolha[]>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/gerarLancamentosFolhaPagamento', integracaoFolhaParam), param);\r\n}\r\n\r\nexport function integrarFolhaPagamento(lancamentoIntegracaoFolha: LancamentoIntegracaoFolha[], param: AxiosParam<any>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/integrarFolhaPagamento', lancamentoIntegracaoFolha), param);\r\n}\r\n\r\nexport function integrarMCP(importarParam: ImportarMCP, param: AxiosParam<ImportacaoResult>) {\r\n  send(getService().post<ImportacaoResult>('/importar', importarParam), param);\r\n}\r\n\r\nexport function importarLancamentoCSV(data: ImportacaoLancamentoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('importarDuplicados', String(data.importarDuplicados));\r\n  formDataSend.append('importarLancamentosCardinal', String(data.importarLancamentosCardinal));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarLancamentoPadraoCSV(data: ImportacaoLancamentoPadraoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoPadraoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistoricoCSV(data: ImportacaoHistoricoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('grupoHistoricoDestino.id', String(data.grupoHistoricoDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarHistoricoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarPlanoContaCSV(data: ImportacaoPlanoContaCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idEmpresa', String(data.idEmpresa));\r\n  formDataSend.append('grupoPlanoContaDestino.id', String(data.grupoPlanoContaDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarPlanoContaCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistorico(importacaoHistorico: ImportacaoHistorico, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarHistorico', importacaoHistorico), param);\r\n}\r\n\r\nexport function importarPlanoConta(importacaoPlanoContaParam: ImportacaoPlanoConta, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarPlanoConta', importacaoPlanoContaParam), param);\r\n}\r\n\r\nexport function buscarConfigLivroFolhaMCG(idEmpresa: number, param: AxiosParam<LivroFolha>) {\r\n  send(getService().get<LivroFolha>('/buscarConfigLivroFolhaMCG/' + idEmpresa), param);\r\n}\r\n\r\nexport function integracaoFiscalContabil(importarParam: ImportacaoFiscalContabil, param: AxiosParam<ImportacaoFiscalContabilResult>) {\r\n  send(getService().post<ImportacaoFiscalContabilResult>('/integracaoFiscalContabil', importarParam), param);\r\n}\r\n\r\nexport function encerrarContas(\r\n  contaResultadoEncerramento: ContaResultadoMCGEncerramento,\r\n  force: boolean,\r\n  param: AxiosParam<ContaResultadoMCGEncerramento>\r\n) {\r\n  send(\r\n    getService().post<ContaResultadoMCGEncerramento>('/encerrarContas', { contaResultadoEncerramento, force }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function getDataUltimaContaEncerrada(idGerEmpresa: number, param: AxiosParam<Date>) {\r\n  send(getService().get<Date>('/getDataUltimaContaEncerrada/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function limparEncerramentoContaResultado(contaResultadoLimpeza: ContaResultadoLimpeza, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/limparEncerramentoContaResultadoApos', contaResultadoLimpeza), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFIrpjCsll(configECFIrpjCsll: ConfigECFIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFIrpjCsll', configECFIrpjCsll), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFImuneIsenta(configECFImuneIsenta: ConfigECFImuneIsenta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFImuneIsenta', configECFImuneIsenta), param);\r\n}\r\n\r\nexport function validarRefRemuneracaoSocio(configECFRemuneracaoSocio: ConfigECFRemuneracaoSocio, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarRefRemuneracaoSocio', configECFRemuneracaoSocio), param);\r\n}\r\n\r\nexport function validarQuadroSocietario(configQuadro: QuadroSocietario, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/validarQuadroSocietario', configQuadro), param);\r\n}\r\n\r\nexport function obterLucroPrejuizoClassificacao(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterLucroPrejuizoClassificacao/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function getSaldo(saldo: Saldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldo', saldo), param);\r\n}\r\n\r\nexport function validarDadosSpedECF(ecfExportacaoParam: ECFExportacaoParam, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/validarDadosSpedECF', ecfExportacaoParam), param);\r\n}\r\n\r\nexport function gerarSpedECF(usuario: Usuario, ecfExportacaoParam: ECFExportacaoParam, param?: AxiosParam<string>) {\r\n  send(\r\n    getArquivoDigitalService().post<string>('/gerarSpedECF', { usuario, ecfExportacaoParam }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function recuperarLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<Lancamento[]>) {\r\n  send(getService().post<Lancamento[]>('/recuperarLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function transferirLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/transferirLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function obterBancoPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG>) {\r\n  send(getService().post<BancoMCG>('/obterBancoPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function validarConfigLivroFolha(idGerEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(getService().get<boolean>('/validarConfigLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function changeLivroFolha(idGerEmpresa: number, param: AxiosParam<void>) {\r\n  send(getService().get<void>('/changeLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function fecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<RuleMessage>) {\r\n  send(getService().post<RuleMessage>('/fecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function forceFecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/forceFecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function verificarErros(erros: VerificarErros, param: AxiosParam<Erros[]>) {\r\n  send(getService().post<Erros[]>('/verificarErros', erros), param);\r\n}\r\n\r\nexport function gerarSpedContabil(selecaoSped: SelecaoSpedContabil, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('usuario.id', String(selecaoSped.usuario.id));\r\n\r\n  if (selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n    for (const arquivo of selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n      formDataSend.append('arquivoRTFEscrituracaoSubstituida', arquivo.file, arquivo.nomeArquivo);\r\n    }\r\n  }\r\n\r\n  for (const atributoSelecaoSped in selecaoSped) {\r\n    if (\r\n      atributoSelecaoSped !== 'arquivoRTFEscrituracaoSubstituida' &&\r\n      atributoSelecaoSped !== 'usuario' &&\r\n      selecaoSped[atributoSelecaoSped] !== null\r\n    ) {\r\n      formDataSend.append(atributoSelecaoSped, selecaoSped[atributoSelecaoSped]);\r\n    }\r\n  }\r\n  send(getService().post<string>('/gerarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function salvarLucroPrejuizoClassificacao(\r\n  lucroPrejuizoClassificacao: LucroPrejuizoClassificacao,\r\n  param: AxiosParam<LucroPrejuizoClassificacao>\r\n) {\r\n  send(getService().post<LucroPrejuizoClassificacao>('/salvarLucroPrejuizoClassificacao', lucroPrejuizoClassificacao), param);\r\n}\r\n\r\nexport function consultarMovimentacao(saldoCriteria: SaldoCriteria, param: AxiosParam<LancamentoSaldo[]>) {\r\n  send(getService().post<LancamentoSaldo[]>('/consultarMovimentacao', saldoCriteria), param);\r\n}\r\n\r\nexport function totalizadorLancamento(consulta: ConsultaTotalLancamento, param: AxiosParam<TotalizadorLancamento>) {\r\n  send(getService().post<TotalizadorLancamento>('/totalizadorLancamento', consulta), param);\r\n}\r\n\r\nexport function getSaldoAnterior(saldoCriteria: SaldoCriteria, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoAnterior', saldoCriteria), param);\r\n}\r\n\r\nexport function isDataEncerrada(parametros: DataEncerradaParam, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isDataEncerrada', parametros), param);\r\n}\r\n\r\nexport function abrirContas(parametros: DataEncerradaParam, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/abrirContas', parametros), param);\r\n}\r\n\r\nexport function removeLancamentoPeriodo(parametros: RemoveLancamentoPeriodo, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removeLancamentoPeriodo', parametros), param);\r\n}\r\n\r\nexport function obterContasClassificacaoIndireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixaIndireto[]>) {\r\n  send(getService().get<ContaFluxoCaixaIndireto[]>('/obterContasClassificacaoIndireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoIndireto(contaFluxoCaixaIndireto: ContaFluxoCaixaIndireto, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoIndireto', contaFluxoCaixaIndireto), param);\r\n}\r\n\r\nexport function obterMutacaoPatrimonioLiquido(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterMutacaoPatrimonioLiquido/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarMutacaoPatrimonioLiquido(mutacaoPatrimonioLiquido: MutacaoPatrimonioLiquido, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarMutacaoPatrimonioLiquido', mutacaoPatrimonioLiquido), param);\r\n}\r\n\r\nexport function salvarContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function excluirContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/excluirContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function obterContasClassificacaoDireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixa[]>) {\r\n  send(getService().get<ContaFluxoCaixa[]>('/obterContasClassificacaoDireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoDireto(contaFluxoCaixa: ContaFluxoCaixa, param?: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoDireto', contaFluxoCaixa), param);\r\n}\r\n\r\nexport function findSubGrupo(planoContaSubGrupoParam: PlanoContaSubGrupoParam, param: AxiosParam<any>) {\r\n  send(getService().post<any>('/findSubGrupo', planoContaSubGrupoParam), param);\r\n}\r\n\r\nexport function removerTodosPlanosConta(idGrupoPlanoConta: number, usuario: Usuario, param: AxiosParam<void>) {\r\n  send(\r\n    getService().post<void>('/removerTodosPlanosConta', { idGrupoPlanoConta, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function removeList(listaPlanoConta: PlanoConta[], apagarFilha: boolean, usuario: Usuario, param: AxiosParam<any>) {\r\n  send(\r\n    getService().post<any>('/removeList', { listaPlanoConta, apagarFilha, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function listSubGrupo(planoConta: PlanoConta, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().post<PlanoConta[]>('/listSubGrupo', planoConta), param);\r\n}\r\n\r\nexport function referenciarContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<void>\r\n) {\r\n  send(\r\n    getService().post<void>('/referenciarContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function desvincularContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<any>\r\n) {\r\n  send(\r\n    getService().post<void>('/desvincularContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function existeLancamentoEmContaAnalitica(idPlanoConta: number, idEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(\r\n    getService().post<boolean>('/existeLancamentoEmContaAnalitica', { idPlanoConta, idEmpresa }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function importarLancamentoMCG(data: ImportacaoLancamentoMCGSelecao, param: AxiosParam<ImportacaoLancamentoMCGRetornoValidacao>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('tipoImportacao', String(data.tipoImportacao));\r\n  formDataSend.append('sobescrever', String(data.sobescrever));\r\n  formDataSend.append('versaoSuperiorA2', String(data.versaoSuperiorA2));\r\n  formDataSend.append('arquivo', data.arquivo[0].file, data.arquivo[0].nomeArquivo);\r\n\r\n  if (data.versaoSuperiorA2 === false && !isEmpty(data.dtInicial) && !isEmpty(data.dtFinal)) {\r\n    formDataSend.append('dtInicial', data.dtInicial);\r\n    formDataSend.append('dtFinal', data.dtFinal);\r\n  }\r\n\r\n  send(getService().post<ImportacaoLancamentoMCGRetornoValidacao>('/importarLancamentoMCG', formDataSend), param);\r\n}\r\n\r\nexport function importarSpedContabil(data: ImportacaoSpedContabil, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function gerarManadContabil(data: MANADContabilCrit, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('refInicial', data.refInicial);\r\n  formDataSend.append('refFinal', data.refFinal);\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  if (!isEmpty(data.arquivoSFP)) {\r\n    formDataSend.append('arquivoSFP', data.arquivoSFP[0].file, data.arquivoSFP[0].nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<string>('/gerarManadContabil', formDataSend), param);\r\n}\r\n\r\nexport function evolucaoContaContabilGraf(\r\n  evolucaoContaContabilGrafParam: EvolucaoContaContabilGrafParam,\r\n  param: AxiosParam<EvolucaoContaContabilGrafReturn>\r\n) {\r\n  send(getService().post<EvolucaoContaContabilGrafReturn>('/evolucaoContaContabilGraf', evolucaoContaContabilGrafParam), param);\r\n}\r\n\r\nexport function composicaoReceitaDespesasGraf(\r\n  compReceitaDespesasGrafParam: ComposicaoReceitaDespesasGrafParam,\r\n  param: AxiosParam<ComposicaoReceitaDespesasGrafReturn>\r\n) {\r\n  send(getService().post<ComposicaoReceitaDespesasGrafReturn>('/composicaoReceitaDespesasGraf', compReceitaDespesasGrafParam), param);\r\n}\r\n\r\nexport function gerarFCONTContabil(fContContabilCrit: FCONTContabilCrit, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/gerarFCONTContabil', fContContabilCrit), param);\r\n}\r\n\r\nexport function obterDadosArquivoExtrato(arquivoSelecionado: ArquivoSelecionado, idBancoMCG, param: AxiosParam<BancoExtrato[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idBancoMCG', idBancoMCG);\r\n\r\n  formDataSend.append('arquivoSelecionado', arquivoSelecionado[0].file, arquivoSelecionado[0].nomeArquivo);\r\n\r\n  send(getService().post<BancoExtrato[]>('/obterDadosArquivoExtrato', formDataSend), param);\r\n}\r\n\r\nexport function obterDadosConciliacaoBancariaPeriodo(\r\n  idGrupoPlanoConta,\r\n  idEmpresa,\r\n  idBancoMCG,\r\n  dtInicial,\r\n  dtFinal,\r\n  param: AxiosParam<InfoConciliacaoBancaria>\r\n) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGrupoPlanoConta', String(idGrupoPlanoConta));\r\n  formDataSend.append('idEmpresa', String(idEmpresa));\r\n  formDataSend.append('idBancoMCG', String(idBancoMCG));\r\n  formDataSend.append('dtInicial', String(dtInicial));\r\n  formDataSend.append('dtFinal', String(dtFinal));\r\n\r\n  send(getService().post<InfoConciliacaoBancaria>('/obterDadosConciliacaoBancariaPeriodo', formDataSend), param);\r\n}\r\n\r\nexport function obterBancoListPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG[]>) {\r\n  send(getService().post<BancoMCG[]>('/obterBancoListPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function conciliarLancamentosExtrato(listConciliacaoBancaria: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/conciliarLancamentosExtrato', listConciliacaoBancaria), param);\r\n}\r\n\r\nexport function removerConciliarLancamentosExtrato(listaRemover: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerConciliarLancamentosExtrato', listaRemover), param);\r\n}\r\n\r\nexport function removerLancamentosExtratoBancario(listaRemover: BancoExtrato[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerLancamentosExtratoBancario', listaRemover), param);\r\n}\r\n\r\nexport function eLalurAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLalurAContas/' + id), param);\r\n}\r\n\r\nexport function eLacsAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLacsAContas/' + id), param);\r\n}\r\n\r\nexport function getSaldoDebito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoDebito', parametros), param);\r\n}\r\n\r\nexport function getSaldoCredito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoCredito', parametros), param);\r\n}\r\n\r\nexport function removerLancamentoLote(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/removerLancamentoLote', parametros), param);\r\n}\r\n\r\nexport function atualizaCalculoIrpjCsll(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/atualizaCalculoIrpjCsll', parametros), param);\r\n}\r\n\r\nexport function buscarLancamentosHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  param: AxiosParam<LancamentoIntegracaoHonorarios[]>\r\n) {\r\n  send(getService().post<LancamentoIntegracaoHonorarios[]>('/buscarLancamentosHonorarios', integracaoHonorariosParam), param);\r\n}\r\n\r\nexport function integrarHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  lancamentos: LancamentoIntegracaoHonorarios[],\r\n  param: AxiosParam<number>\r\n) {\r\n  send(\r\n    getService().post<number>('/integrarHonorarios', { integracaoHonorariosParam, lancamentos }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function isAlteraCalculoIRPJorCSLL(parametros: CalculoIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isAlteraCalculoIRPJorCSLL', parametros), param);\r\n}\r\n","import { Basic } from 'summer';\r\nimport { CepBairro } from './cepBairro';\r\nimport { CepLocalidade } from './cepLocalidade';\r\nimport { CepTitulo } from './cepTitulo';\r\nimport { CepUF } from './cepUF';\r\n\r\nexport interface Responsavel extends Basic {\r\n  cargo?: string;\r\n  cei?: string;\r\n  cep?: string;\r\n  cnpj?: string;\r\n  cpf?: string;\r\n  cepBairro?: CepBairro;\r\n  /** Campo referente a cidade */\r\n  cepLocalidade?: CepLocalidade;\r\n  /** tipo do logradouro ex: rua, avenida */\r\n  cepTitulo?: CepTitulo;\r\n  cepUf?: CepUF;\r\n  complemento?: string;\r\n  dataNascimento?: Date;\r\n  dataValidadeCRC?: Date;\r\n  email?: string;\r\n  /** Este campo utiliza o estadoCivilEnum */\r\n  estadoCivil?: string;\r\n  logradouro?: string;\r\n  numeroConselho?: string;\r\n  /** Este campo utiliza o nacionalidadeEnum */\r\n  nacionalidade?: string;\r\n  nome?: string;\r\n  numero?: string;\r\n  orgaoEmissor?: string;\r\n  rg?: string;\r\n  telefone?: string;\r\n  /** Este campo utiliza o responsavelTipoEnum */\r\n  tipo?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.responsavel';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/responsavel';\r\n\r\nconst ResponsavelIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'tipo',\r\n            text: 'Tipo',\r\n          },\r\n          {\r\n            dataField: 'telefone',\r\n            text: 'Telefone',\r\n          },\r\n          {\r\n            dataField: 'email',\r\n            text: 'E-mail',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'ResponsavelSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Responsável'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Responsável'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ResponsavelIS;\r\n"],"sourceRoot":""}
{"version":3,"sources":["views/pages/mlf/refazerLancamentosReinf/RefazerLancamentosReinfProcessView.tsx","dependencies/empresaDependency.ts","dependencies/empresaMLFDependency.ts","../node_modules/reactstrap/es/CardTitle.js","services/mlf.service.ts","models/dtos/ger/especie.ts","views/components/ger/especieIS/EspecieIS.tsx"],"names":["RefazerLancamentosReinfProcessView","props","globalReducer","useSelector","state","formProps","useForm","defaultValues","entrada","especies","saida","mode","dispatch","useDispatch","useEffect","findConfigReinfEmpresa","globalParameter","empresaMLF","id","errorFunction","mensagem","showToast","ERROR","thenFunction","result","params","message","type","AlertType","WARNING","alertManager","emit","ACTION_EVENTS","SHOW","empresa","fillConfigAttributes","fillDates","_globalReducer$global","usuario","setTimeout","setValue","refAtual","referenciaAtual","dtInicialFmt","formatDate","parseRefToDate","dtFinalFmt","parseLastDay","toDate","todasOpcoesDesmarcadas","values","every","value","callRefazer","data","refazerLancamentosReinf","showJobScreen","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_11__","title","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMLF","reactstrap__WEBPACK_IMPORTED_MODULE_4__","hidden","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","Object","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","validation","required","label","placeholder","isPrependLabel","InputType","DATE","onChange","getValues","dtInicial","dataDoFormulario","String","dataFinal","parseDateToRef","reactstrap__WEBPACK_IMPORTED_MODULE_7__","style","marginBottom","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","className","reactstrap__WEBPACK_IMPORTED_MODULE_10__","name","innerRef","register","_components_ger_especieIS_EspecieIS__WEBPACK_IMPORTED_MODULE_16__","inputSearchProps","selectProps","isMulti","handleSubmit","erros","compare","DATE_MONTH_YEAR_PATTERN","dtFinal","push","validateExtras","length","onOkClick","WARNING_YES_NO","handleClose","goBack","dispatchClose","history","onClose","__webpack_require__","d","__webpack_exports__","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","string","cssModule","object","CardTitle","Tag","attributes","classes","defaultProps","findEspecieByModelo","findReinfCFOPConfig","getLivroFolhaMLF","refazerLancamentosContabeis","importarIntegracaoFiscalContabil","validarIE","summer__WEBPACK_IMPORTED_MODULE_0__","getService","create","modelo","isImportacao","param","send","post","idCFOP","get","concat","idGerEmpresa","refazerLancamentosContabeisParam","refazerLancamentosReinfParam","idEmpresaMlf","importarParam","inscricaoEstadual","unidadeFederacao","CLASS_NAME","EspecieIS","summer__WEBPACK_IMPORTED_MODULE_2__","assign","columns","dataField","text","dtoClassName","searchViewId","INPUT_SEARCH"],"mappings":"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","file":"static/js/222.cd00ee5b.chunk.js","sourcesContent":["import React, { FC, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Card, CardBody, CardTitle, Col, CustomInput, Form, Row } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  compare,\r\n  DATE_MONTH_YEAR_PATTERN,\r\n  dispatchClose,\r\n  EditViewProps,\r\n  ErroList,\r\n  ERROR,\r\n  formatDate,\r\n  InputGroupInline,\r\n  InputType,\r\n  parseDateToRef,\r\n  parseLastDay,\r\n  parseRefToDate,\r\n  ProcessBar,\r\n  showToast,\r\n  toDate,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMLF } from '../../../../dependencies/empresaMLFDependency';\r\nimport { RefazerLancamentosReinfParam } from '../../../../models/dtos/mlf/refazerLancamentosReinfParam';\r\nimport { findConfigReinfEmpresa, refazerLancamentosReinf } from '../../../../services/mlf.service';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport { showJobScreen } from '../../../../store/ducks/jobs.duck';\r\nimport EspecieIS from '../../../components/ger/especieIS/EspecieIS';\r\n\r\ninterface RefazerLancamentosReinfProcessView extends EditViewProps<RefazerLancamentosReinfParam> {}\r\n\r\nconst RefazerLancamentosReinfProcessView: FC<RefazerLancamentosReinfProcessView & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const formProps = useForm<RefazerLancamentosReinfParam>({\r\n    defaultValues: {\r\n      entrada: true,\r\n      especies: [],\r\n      saida: true,\r\n    },\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(\r\n    () => {\r\n      validarConfigReinf();\r\n      if (globalReducer.globalParameter.empresa) {\r\n        fillConfigAttributes();\r\n        if (globalReducer.globalParameter.empresaMLF) {\r\n          fillDates();\r\n        }\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const fillConfigAttributes = () => {\r\n    const {\r\n      usuario,\r\n      empresa: { id },\r\n    } = globalReducer.globalParameter;\r\n\r\n    setTimeout(() => {\r\n      formProps.setValue('idEmpresa', id);\r\n      formProps.setValue('idUsuario', usuario.id);\r\n    }, 1000);\r\n  };\r\n\r\n  const fillDates = () => {\r\n    const refAtual = globalReducer.globalParameter.empresaMLF.referenciaAtual;\r\n    const dtInicialFmt: string = formatDate(parseRefToDate(refAtual, 1));\r\n    const dtFinalFmt: string = formatDate(parseLastDay(refAtual));\r\n    setTimeout(() => {\r\n      formProps.setValue('dtInicial', toDate(dtInicialFmt));\r\n      formProps.setValue('dtFinal', toDate(dtFinalFmt));\r\n    }, 500);\r\n  };\r\n\r\n  const fillDataFinalChange = () => {\r\n    if (formProps.getValues().dtInicial) {\r\n      const dataDoFormulario = toDate(String(formProps.getValues().dtInicial));\r\n      const dataFinal = parseLastDay(parseDateToRef(dataDoFormulario));\r\n      formProps.setValue('dtFinal', toDate(formatDate(dataFinal)));\r\n    } else {\r\n      formProps.setValue('dtFinal', null);\r\n    }\r\n  };\r\n\r\n  const validateExtras = () => {\r\n    const erros = [];\r\n\r\n    if (\r\n      compare(\r\n        formatDate(formProps.getValues().dtInicial, DATE_MONTH_YEAR_PATTERN),\r\n        formatDate(formProps.getValues().dtFinal, DATE_MONTH_YEAR_PATTERN)\r\n      ) > 0\r\n    ) {\r\n      erros.push('Data Final não pode ser menor que a Data Inicial.');\r\n    }\r\n\r\n    if (todasOpcoesDesmarcadas([formProps.getValues().entrada, formProps.getValues().saida])) {\r\n      erros.push('Pelo menos um tipo de nota deve ser selecionado.');\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  const todasOpcoesDesmarcadas = (values: boolean[]) => {\r\n    return values.every(value => !value);\r\n  };\r\n\r\n  const handleRefazer = (data: RefazerLancamentosReinfParam) => {\r\n    const erros = validateExtras();\r\n    if (erros.length > 0) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.WARNING,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n      return;\r\n    } else {\r\n      const params: AlertProps = {\r\n        message: 'Os lançamentos referentes ao EFD-Reinf dos itens de serviço serão recalculados.\\nDeseja continuar?',\r\n        onOkClick: () => callRefazer(data),\r\n        type: AlertType.WARNING_YES_NO,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    }\r\n  };\r\n\r\n  const callRefazer = (data: RefazerLancamentosReinfParam) => {\r\n    refazerLancamentosReinf(data, {\r\n      errorFunction: mensagem => {\r\n        showToast(mensagem, ERROR);\r\n      },\r\n      thenFunction: () => dispatch(showJobScreen()),\r\n    });\r\n  };\r\n\r\n  function validarConfigReinf(): void {\r\n    findConfigReinfEmpresa(globalReducer.globalParameter.empresaMLF.id, {\r\n      errorFunction: mensagem => {\r\n        showToast(mensagem, ERROR);\r\n      },\r\n      thenFunction: result => {\r\n        if (!result) {\r\n          const params: AlertProps = {\r\n            message:\r\n              'A empresa selecionada não está configurada para o EFD-Reinf. Acesse: Módulo Fiscal > Arquivo Digitais > Exportação > EFD-Reinf > Enviar Lotes. Clique no botão Configurações > Empresa e preencha as informações necessárias.',\r\n            type: AlertType.WARNING,\r\n          };\r\n          alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  const onClose = (goBack: boolean = true) => {\r\n    dispatchClose(props, props.history, goBack);\r\n  };\r\n\r\n  const handleCancel = () => onClose();\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Refazer Lançamentos do EFD-REINF\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMLF(globalReducer.globalParameter)]}\r\n    >\r\n      <Form>\r\n        <InputGroupInline formProps={formProps} id=\"idEmpresa\" hidden={true} />\r\n        <InputGroupInline formProps={formProps} id=\"idUsuario\" hidden={true} />\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              id=\"dtInicial\"\r\n              label=\"Data Inicial\"\r\n              placeholder=\"Informe a Data Inicial do período que deseja refazer os lançamentos\"\r\n              isPrependLabel={true}\r\n              type={InputType.DATE}\r\n              onChange={fillDataFinalChange}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              id=\"dtFinal\"\r\n              label=\"Data Final\"\r\n              placeholder=\"Informe a Data Final do período que deseja refazer os lançamentos\"\r\n              isPrependLabel={true}\r\n              type={InputType.DATE}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Card style={{ marginBottom: '16px' }}>\r\n              <CardBody>\r\n                <CardTitle>Filtros Adicionais</CardTitle>\r\n                <Row className=\"mb-3\">\r\n                  <Col>\r\n                    <CustomInput type=\"switch\" label=\"Notas de Entrada\" name=\"entrada\" id=\"entrada\" innerRef={formProps.register} />\r\n                  </Col>\r\n                  <Col>\r\n                    <CustomInput type=\"switch\" label=\"Notas de Saída\" name=\"saida\" id=\"saida\" innerRef={formProps.register} />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"mb-3\">\r\n                  <Col>\r\n                    <EspecieIS formProps={formProps} id=\"especies\" isPrependLabel={true} inputSearchProps={{ selectProps: { isMulti: true } }} />\r\n                  </Col>\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <ProcessBar handleSubmit={formProps.handleSubmit(handleRefazer)} handleClose={handleCancel} />\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default RefazerLancamentosReinfProcessView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMLF(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMLF) {\r\n    result =\r\n      'A empresa fiscal da empresa selecionada deve estar configurada. Para configurar acesse:\\n' +\r\n      'Módulo Fiscal > Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import { AxiosInstance } from 'axios';\r\nimport { AxiosParam, create, send } from 'summer';\r\nimport { Cfop } from '../models/dtos/ger/cfop';\r\nimport { Especie } from '../models/dtos/ger/especie';\r\nimport { ConfigLivroMLF } from '../models/dtos/mlf/configLivroMLF';\r\nimport { ConfigReinf } from '../models/dtos/mlf/configReinf';\r\nimport { ImportarIntegracaoFiscalContabilParam } from '../models/dtos/mlf/importarIntegracaoFiscalContabilParam';\r\nimport { RefazerLancamentosContabeisParam } from '../models/dtos/mlf/refazerLancamentosContabeisParam';\r\nimport { RefazerLancamentosReinfParam } from '../models/dtos/mlf/refazerLancamentosReinfParam';\r\n\r\nfunction getService(): AxiosInstance {\r\n  return create('/mlf');\r\n}\r\n\r\nexport function findEspecieByModelo(modelo: string, isImportacao: boolean, param: AxiosParam<Especie>) {\r\n  send(\r\n    getService().post<Especie>('/findEspecieByModelo', { modelo, isImportacao }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function findReinfCFOPConfig(idCFOP: number, param: AxiosParam<Cfop>) {\r\n  send(getService().get<Cfop>(`/findReinfCFOPConfig/${idCFOP}`), param);\r\n}\r\n\r\nexport function getLivroFolhaMLF(idGerEmpresa: number, param: AxiosParam<ConfigLivroMLF>) {\r\n  send(getService().get<ConfigLivroMLF>(`/getLivroFolhaMLF/${idGerEmpresa}`), param);\r\n}\r\n\r\nexport function refazerLancamentosContabeis(refazerLancamentosContabeisParam: RefazerLancamentosContabeisParam, param: AxiosParam<any>) {\r\n  send(getService().post<RefazerLancamentosContabeisParam>('/refazerLancamentosContabeis', refazerLancamentosContabeisParam), param);\r\n}\r\n\r\nexport function refazerLancamentosReinf(refazerLancamentosReinfParam: RefazerLancamentosReinfParam, param: AxiosParam<any>) {\r\n  send(getService().post<RefazerLancamentosReinfParam>('/refazerLancamentosReinf', refazerLancamentosReinfParam), param);\r\n}\r\n\r\nexport function findConfigReinfEmpresa(idEmpresaMlf: number, param: AxiosParam<any>) {\r\n  send(getService().get<ConfigReinf>(`/findConfigReinfEmpresa/${idEmpresaMlf}`), param);\r\n}\r\n\r\nexport function importarIntegracaoFiscalContabil(importarParam: ImportarIntegracaoFiscalContabilParam, param: AxiosParam<any>) {\r\n  send(getService().post<any>('/importarIntegracaoFiscalContabil', importarParam), param);\r\n}\r\n\r\nexport function validarIE(inscricaoEstadual: string, unidadeFederacao: string, param: AxiosParam<boolean>) {\r\n  send(\r\n    getService().post<boolean>('/validarIE', { inscricaoEstadual, unidadeFederacao }),\r\n    param\r\n  );\r\n}\r\n","import { Basic } from 'summer';\r\n\r\nexport interface Especie extends Basic {\r\n  abreviacao?: string;\r\n  descricao?: string;\r\n  cupomFiscalMaqReg?: boolean;\r\n  modelo?: string;\r\n  sequenciarNotas?: boolean;\r\n  naoValidarParticipante?: boolean;\r\n  habilitarReinf?: boolean;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.especie';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/especie';\r\n\r\nconst EspecieIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'abreviacao',\r\n            text: 'Abreviação',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'EspecieSearchView',\r\n      }}\r\n      label=\"Espécie\"\r\n      placeholder=\"Informe a Espécie\"\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EspecieIS;\r\n"],"sourceRoot":""}
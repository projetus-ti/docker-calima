{"version":3,"sources":["views/pages/mcg/report/receitaDespesas/receitasDespesasRV.ts","views/pages/mcg/report/receitaDespesas/ReceitaDespesasReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","dependencies/empresaMCGDependency.ts","models/enumerated/mcg/consolidarEnum.ts","models/dtos/ger/responsavel.ts","views/components/ger/responsavelIS/ResponsavelIS.tsx","models/dtos/mcg/customizacaoTermo.ts","models/dtos/mcg/customizacaoTermosAberturaEncerramentoCabecalhoDefault.ts","models/dtos/mcg/customizacaoTermosAberturaEncerramentoRodapeDefault.ts","models/dtos/mcg/customizacaoTermosBalancoPatrimonialDefault.ts","models/dtos/mcg/customizacaoTermosCartaResponsabilidadeDefault.ts","models/dtos/mcg/customizacaoTermosDemonstracaoResultadoDefault.ts","models/dtos/mcg/customizacaoTermosVeracidadeCabecalhoDefault.ts","models/dtos/mcg/customizacaoTermosVeracidadeRodapeDefault.ts","models/enumerated/mcg/customizacaoTermoEnum.ts","views/components/mcg/customizacaoTermoIS/CustomizacaoTermoIS.tsx"],"names":["DEFAULT_VALUES","Object","objectSpread2","getDefaultReportBasicValues","consolidacao","NORMAL","value","exibirFormatacaoValor","imprimirTotalDia","virtualization","DEFAULT_OPTIONS","getDefaultReportViewOptions","DATES","exibirConfiguracaoDadosEmpresa","exibirConfiguracaoDataAtual","exibirImprimirValoresColoridos","exibirSegmentacaoFolha","CaixaNormalReportView","props","globalReducer","useSelector","state","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","isEnabledIsMatriz","setIsEnabledIsMatriz","_useState3","_useState4","isDREEnable","setisDREEnable","_useState5","_useState6","isTermoAberturaFechamento","setisTermoAberturaFechamento","useEffect","globalParameter","empresa","setTimeout","matriz","getValues","matrizFilialDiario","centralizar","propToolTip","message","placement","acumularMatrizFilial","react_default","a","createElement","Col","CustomInput","type","label","name","id","innerRef","register","withTooltip","summer_esm","title","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMCG","Row","isPrependLabel","tooltipProps","placeholder","validation","required","inputDropDownProps","optionsProvider","CONSOLIDAR_ENUM_VALUES","selectProps","isClearable","InputType","DROP_DOWN","className","onChange","imprimirDemonstrativoResultado","disabled","DATE","CustomizacaoTermoIS","searchViewProps","apenasDemonstracaoResultado","inputSearchProps","bsSize","ResponsavelIS","bsbsSize","isMulti","imprimirAberturaEncerramento","apenasAberturaEncerramento","size","ReportForm","assign","localStorageKey","routeProps","reportBasicValues","reportViewOptions","result","__webpack_require__","d","__webpack_exports__","NATUREZA","SALDO_REPORT_ENUM","EmpresaIS","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","empresasSelecionadas","envioEmail","anexos","assunto","destinatarios","gerarBom","gerarCabecalhoPadrao","gerarCabecalhoPadraoAdministradora","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","errors","setValue","triggerValidation","handleCancel","validateExtras","currentItem","currentValues","parentObject","EnvioEmail","Fragment","sort","detailView","keyField","propName","maxLength","TEXT_AREA","ReportInputs","activeTab","setActiveTab","_props$reportViewOpti","printingTypes","resetObject","length","idGerEmpresa","current","currentMomentDate","endDate","dtInicial","formatDate","toDate","dtFinal","endOf","REFERENCE","referenciaInicial","format","REF_PATTERN","REFERENCES","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dtInicialRequired","dateComponent","datesComponent","dtFinalRequired","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","NUMBER","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","inputProps","gerarPorEmpresas","style","marginBottom","segmentacaoFolhaComponent","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","firstOpen","extraConfigOpened","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","hidden","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","erros","params","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history","empresaMCG","NORMAL_NUMBER","GRUPO_ATUAL_NUMBER","CONSOLIDAR_NUMBER_ENUM_VALUES","CustomizacaoTermosAberturaEncerramentoCabecalhoDefault","[object Object]","this","TERMO_PADRAO","getCustomizacaoTermosTipoEnum","ABERTURA_ENCERRAMENTO","getTermoDefault","CustomizacaoTermosAberturaEncerramentoRodapeDefault","CustomizacaoTermosBalancoPatrimonialDefault","BALANCO_PATRIMONIAL","CustomizacaoTermosCartaResponsabilidadeDefault","CARTA_RESPONSABILIDADE","CustomizacaoTermosDemonstracaoResultadoDefault","DEMONSTRCAO_RESULTADO","CustomizacaoTermosVeracidadeCabecalhoDefault","VERACIDADE","CustomizacaoTermosVeracidadeRodapeDefault","getTermoDefaultAbertura","getTermoDefaultEncerramento","CUSTOMIZACAO_TERMO_ENUM_VALUES","customizacaoTipoEnum","find","it","searchExpressions","apenasCartaResponsabilidade","alias","conditionalGroup","fieldName","apenasIndividualizadaVeracidade","apenasBalancoPatrimonial"],"mappings":"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","file":"static/js/38.db0f3a43.chunk.js","sourcesContent":["import { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { Responsavel } from '../../../../../models/dtos/ger/responsavel';\r\nimport { CustomizacaoTermo } from '../../../../../models/dtos/mcg/customizacaoTermo';\r\n\r\nexport interface ReceitasDespesasRV extends ReportBasicValues {\r\n  consolidacao?: string;\r\n  imprimirTotalDia?: boolean;\r\n  totalContas?: number;\r\n  imprimirData?: boolean;\r\n  matrizFilialDiario?: boolean;\r\n  imprimirDemonstrativoResultado?: boolean;\r\n  imprimirParentesesSaldoCredor?: boolean;\r\n  compararPeriodoAnteriorDre?: boolean;\r\n  dtAssinaturaDre?: string;\r\n  contarTotalPag?: boolean;\r\n  exibirConta?: boolean;\r\n  ocultarData?: boolean;\r\n  termoDemonstrativoResultado?: CustomizacaoTermo;\r\n  repDemonstracaoResultado?: Responsavel;\r\n  repAberturaEncerramento?: Responsavel;\r\n  outrosResponsaveisDer?: Responsavel[];\r\n  imprimirAberturaEncerramento?: boolean;\r\n  usarPrimeiraDataLancAssinatura?: boolean;\r\n  exibirNroPaginaTermoAE?: boolean;\r\n  dtTermoAbertura?: string;\r\n  termoAberturaEncerramento?: CustomizacaoTermo;\r\n  dtTermoEncerramento?: string;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'receitasdespesasrelrv';\r\nexport const REPORT_TITLE: string = 'Relatório de Lançamentos de Despesas e Receitas';\r\nexport const REPORT_EVENT: string = 'printReceitaDespesas';\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport {\r\n  Box,\r\n  DATES,\r\n  InputGroupInline,\r\n  InputTooltipProps,\r\n  InputType,\r\n  Tab,\r\n  TabGroup,\r\n  WindowComponent,\r\n  WindowComponentProps,\r\n  withTooltip,\r\n} from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../../dependencies/empresaMCGDependency';\r\nimport { getDefaultReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport { CONSOLIDAR_ENUM_VALUES, NORMAL } from '../../../../../models/enumerated/mcg/consolidarEnum';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport ResponsavelIS from '../../../../components/ger/responsavelIS/ResponsavelIS';\r\nimport CustomizacaoTermoIS from '../../../../components/mcg/customizacaoTermoIS/CustomizacaoTermoIS';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { CLASS_KEY, ReceitasDespesasRV, REPORT_EVENT, REPORT_TITLE } from './receitasDespesasRV';\r\n\r\nconst DEFAULT_VALUES: ReceitasDespesasRV = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n  consolidacao: NORMAL.value,\r\n  exibirFormatacaoValor: true,\r\n  imprimirTotalDia: true,\r\n  virtualization: true,\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT, DATES.value),\r\n  exibirConfiguracaoDadosEmpresa: false,\r\n  exibirConfiguracaoDataAtual: true,\r\n  exibirImprimirValoresColoridos: true,\r\n  exibirSegmentacaoFolha: true,\r\n};\r\n\r\nconst CaixaNormalReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const { handleSubmit, ...formProps } = useForm<ReceitasDespesasRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n  const [isEnabledIsMatriz, setIsEnabledIsMatriz] = useState(false);\r\n  const [isDREEnable, setisDREEnable] = useState(true);\r\n  const [isTermoAberturaFechamento, setisTermoAberturaFechamento] = useState(true);\r\n\r\n  const carregarParametroEmpresa = () => {\r\n    if (globalReducer.globalParameter.empresa.matriz === null) {\r\n      setIsEnabledIsMatriz(true);\r\n      formProps.getValues().matrizFilialDiario = globalReducer.globalParameter.empresa.centralizar;\r\n    }\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (globalReducer.globalParameter.empresa) {\r\n        setTimeout(() => {\r\n          carregarParametroEmpresa();\r\n        }, 800);\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const enableDRE = () => {\r\n    if (formProps.getValues().imprimirDemonstrativoResultado) {\r\n      setisDREEnable(false);\r\n    } else {\r\n      setisDREEnable(true);\r\n    }\r\n  };\r\n\r\n  const enableTermoAberturaEncerramento = () => {\r\n    if (formProps.getValues().imprimirAberturaEncerramento) {\r\n      setisTermoAberturaFechamento(false);\r\n    } else {\r\n      setisTermoAberturaFechamento(true);\r\n    }\r\n  };\r\n\r\n  const propToolTip = (message: string): InputTooltipProps => {\r\n    return {\r\n      message,\r\n      placement: 'auto',\r\n    };\r\n  };\r\n\r\n  const acumularMatrizFilial = isEnabledIsMatriz ? (\r\n    <Col>\r\n      <CustomInput\r\n        type=\"switch\"\r\n        label=\"Acumular Matriz e Filiais\"\r\n        name=\"matrizFilialDiario\"\r\n        id=\"idmatrizFilialDiario\"\r\n        innerRef={formProps.register}\r\n      />\r\n      {withTooltip(propToolTip('Acumula Matriz e Filial para o diário e os relatórios incorporados.'), 'matrizFilialDiario')}\r\n    </Col>\r\n  ) : null;\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Configuração de Receitas e Despesas\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMCG(globalReducer.globalParameter)]}\r\n    >\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"consolidacao\"\r\n            label=\"consolidacao\"\r\n            isPrependLabel={true}\r\n            tooltipProps={propToolTip('Consolidação de lançamentos de empresas a serem exibidos no relatório.')}\r\n            placeholder=\"Selecione uma consolidação\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            inputDropDownProps={{\r\n              optionsProvider: CONSOLIDAR_ENUM_VALUES,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <CustomInput type=\"switch\" label=\"Totalizar Por Dia\" name=\"imprimirTotalDia\" id=\"imprimirTotalDia\" innerRef={formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            label=\"Imprimir Data Completa no Lançamento\"\r\n            name=\"imprimirData\"\r\n            id=\"idimprimirData\"\r\n            innerRef={formProps.register}\r\n          />\r\n          {withTooltip(propToolTip('Imprime a data completa do lançamento no formato dd/mm/aaaa ao invés de apenas o dia.'), 'imprimirData')}\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput type=\"switch\" label=\"Exibir Conta\" name=\"exibirConta\" id=\"exibirConta\" innerRef={formProps.register} />\r\n        </Col>\r\n        {acumularMatrizFilial}\r\n      </Row>\r\n      <TabGroup formProps={formProps}>\r\n        <Tab title=\"Demonstração do Resultado\">\r\n          <Box>\r\n            <Row>\r\n              <Col>\r\n                <CustomInput\r\n                  type=\"switch\"\r\n                  label=\"Demonstração de Resultado\"\r\n                  name=\"imprimirDemonstrativoResultado\"\r\n                  onChange={enableDRE}\r\n                  id=\"imprimirDemonstrativoResultado\"\r\n                  innerRef={formProps.register}\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <CustomInput\r\n                  type=\"switch\"\r\n                  label='Imprimir \"()\" Parênteses nas Contas Credoras'\r\n                  name=\"imprimirParentesesSaldoCredor\"\r\n                  id=\"imprimirParentesesSaldoCredor\"\r\n                  disabled={isDREEnable}\r\n                  innerRef={formProps.register}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"mt-2\">\r\n              <Col className=\"mt-2\">\r\n                <CustomInput\r\n                  type=\"switch\"\r\n                  label=\"Comparar com o Período Anterior\"\r\n                  name=\"compararPeriodoAnteriorDre\"\r\n                  id=\"compararPeriodoAnteriorDre\"\r\n                  disabled={isDREEnable}\r\n                  innerRef={formProps.register}\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <InputGroupInline\r\n                  id=\"dtAssinaturaDre\"\r\n                  isPrependLabel={true}\r\n                  formProps={formProps}\r\n                  label=\"Data da Assinatura\"\r\n                  disabled={isDREEnable}\r\n                  placeholder=\"Informe a Data da Assinatura\"\r\n                  tooltipProps={propToolTip('Caso este campo esteja vazio a data de assinatura será o último dia da referência.')}\r\n                  type={InputType.DATE}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <CustomizacaoTermoIS\r\n                  formProps={formProps}\r\n                  label=\"Termo\"\r\n                  searchViewProps={{ apenasDemonstracaoResultado: true }}\r\n                  apenasDemonstracaoResultado={true}\r\n                  placeholder=\"Selecione o Termo de Demonstração Resultado\"\r\n                  id=\"termoDemonstrativoResultado\"\r\n                  isPrependLabel={true}\r\n                  disabled={isDREEnable}\r\n                  inputSearchProps={{ bsSize: 'xl' }}\r\n                  tooltipProps={propToolTip('Termo Demonstração de Resultado')}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <ResponsavelIS\r\n                  id=\"repDemonstracaoResultado\"\r\n                  formProps={formProps}\r\n                  label=\"Representante\"\r\n                  placeholder=\"Informe o Representante\"\r\n                  isPrependLabel={true}\r\n                  disabled={isDREEnable}\r\n                  inputSearchProps={{ bsbsSize: 'xl', selectProps: { isMulti: false } }}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <ResponsavelIS\r\n                  id=\"outrosResponsaveisDer\"\r\n                  formProps={formProps}\r\n                  label=\"Responsáveis\"\r\n                  placeholder=\"Informe os Responsáveis Para Assinatura\"\r\n                  isPrependLabel={true}\r\n                  inputSearchProps={{ bsbsSize: 'xl', selectProps: { isMulti: true } }}\r\n                  tooltipProps={propToolTip('Responsáveis adicionais para assinatura.')}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Box>\r\n        </Tab>\r\n        <Tab title=\"Termo de Abertura e Encerramento\">\r\n          <Box>\r\n            <Row>\r\n              <Col>\r\n                <CustomInput\r\n                  type=\"switch\"\r\n                  label=\"Termo de Abertura e Encerramento\"\r\n                  name=\"imprimirAberturaEncerramento\"\r\n                  id=\"imprimirAberturaEncerramento\"\r\n                  onChange={enableTermoAberturaEncerramento}\r\n                  innerRef={formProps.register}\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <CustomInput\r\n                  type=\"switch\"\r\n                  label=\"Usar a Data do Primeiro Lançamento na Assinatura do Termo de Abertura\"\r\n                  name=\"usarPrimeiraDataLancAssinatura\"\r\n                  disabled={isTermoAberturaFechamento}\r\n                  id=\"usarPrimeiraDataLancAssinatura\"\r\n                  innerRef={formProps.register}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"mb-3\">\r\n              <Col>\r\n                <CustomInput\r\n                  type=\"switch\"\r\n                  label=\"Exibir Numeração da Página\"\r\n                  name=\"exibirNroPaginaTermoAE\"\r\n                  disabled={isTermoAberturaFechamento}\r\n                  id=\"idexibirNroPaginaTermoAE\"\r\n                  innerRef={formProps.register}\r\n                />\r\n                {withTooltip(propToolTip('Exibe a numeração da página no relatório.'), 'exibirNroPaginaTermoAE')}\r\n              </Col>\r\n              <Col>\r\n                <CustomInput\r\n                  type=\"switch\"\r\n                  label=\"Ocultar Data do cabeçalho\"\r\n                  disabled={isTermoAberturaFechamento}\r\n                  name=\"ocultarData\"\r\n                  id=\"ocultarData\"\r\n                  innerRef={formProps.register}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  id=\"dtTermoAbertura\"\r\n                  isPrependLabel={true}\r\n                  formProps={formProps}\r\n                  label=\"Data do Termo de Abertura\"\r\n                  placeholder=\"Informe a Data do Termo de Abertura\"\r\n                  tooltipProps={propToolTip('Caso este campo esteja vazio a data do termo de abertura será a data inicial informada.')}\r\n                  type={InputType.DATE}\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <InputGroupInline\r\n                  id=\"dtTermoEncerramento\"\r\n                  isPrependLabel={true}\r\n                  formProps={formProps}\r\n                  label=\"Data do Termo de Encerramento\"\r\n                  disabled={isTermoAberturaFechamento}\r\n                  placeholder=\"Informe a Data do Termo de Encerramento\"\r\n                  tooltipProps={propToolTip('Caso este campo esteja vazio a data do termo de encerramento será a data final informada.')}\r\n                  type={InputType.DATE}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <CustomizacaoTermoIS\r\n                  formProps={formProps}\r\n                  label=\"Termo\"\r\n                  placeholder=\"Selecione o Termo de Abertura e Encerramento\"\r\n                  searchViewProps={{ apenasAberturaEncerramento: true }}\r\n                  apenasAberturaEncerramento={true}\r\n                  id=\"termoAberturaEncerramento\"\r\n                  disabled={isTermoAberturaFechamento}\r\n                  isPrependLabel={true}\r\n                  inputSearchProps={{ size: 'xl' }}\r\n                  tooltipProps={{ message: 'Termo de Abertura e Encerramento.' }}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <ResponsavelIS\r\n                  id=\"repAberturaEncerramento\"\r\n                  formProps={formProps}\r\n                  label=\"Representante\"\r\n                  placeholder=\"Informe o Representante\"\r\n                  disabled={isTermoAberturaFechamento}\r\n                  isPrependLabel={true}\r\n                  inputSearchProps={{ bsbsSize: 'xl', selectProps: { isMulti: false } }}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Box>\r\n        </Tab>\r\n      </TabGroup>\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n      />\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default CaixaNormalReportView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMCG(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMCG) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o módulo Contábil. Para configurá-la acesse:\\n' +\r\n      'Módulo Contábil > Manutenção > Configurações > Empresa.';\r\n  }\r\n  return result;\r\n}\r\n","export const NORMAL = { value: '1', label: 'Normal' };\r\nexport const GRUPO_ATUAL = { value: '2', label: 'Grupo Atual' };\r\nexport const HIERARQUIA_INFERIOR = { value: '3', label: 'Hierarquia Inferior' };\r\n\r\nexport const CONSOLIDAR_ENUM_VALUES = [NORMAL, GRUPO_ATUAL, HIERARQUIA_INFERIOR];\r\n\r\nexport const NORMAL_NUMBER = { value: 1, label: 'Normal' };\r\nexport const GRUPO_ATUAL_NUMBER = { value: 2, label: 'Grupo Atual' };\r\nexport const HIERARQUIA_INFERIOR_NUMBER = { value: 3, label: 'Hierarquia Inferior' };\r\n\r\nexport const CONSOLIDAR_NUMBER_ENUM_VALUES = [NORMAL_NUMBER, GRUPO_ATUAL_NUMBER, HIERARQUIA_INFERIOR_NUMBER];\r\n","import { Basic } from 'summer';\r\nimport { CepBairro } from './cepBairro';\r\nimport { CepLocalidade } from './cepLocalidade';\r\nimport { CepTitulo } from './cepTitulo';\r\nimport { CepUF } from './cepUF';\r\n\r\nexport interface Responsavel extends Basic {\r\n  cargo?: string;\r\n  cei?: string;\r\n  cep?: string;\r\n  cnpj?: string;\r\n  cpf?: string;\r\n  cepBairro?: CepBairro;\r\n  /** Campo referente a cidade */\r\n  cepLocalidade?: CepLocalidade;\r\n  /** tipo do logradouro ex: rua, avenida */\r\n  cepTitulo?: CepTitulo;\r\n  cepUf?: CepUF;\r\n  complemento?: string;\r\n  dataNascimento?: Date;\r\n  dataValidadeCRC?: Date;\r\n  email?: string;\r\n  /** Este campo utiliza o estadoCivilEnum */\r\n  estadoCivil?: string;\r\n  logradouro?: string;\r\n  numeroConselho?: string;\r\n  /** Este campo utiliza o nacionalidadeEnum */\r\n  nacionalidade?: string;\r\n  nome?: string;\r\n  numero?: string;\r\n  orgaoEmissor?: string;\r\n  rg?: string;\r\n  telefone?: string;\r\n  /** Este campo utiliza o responsavelTipoEnum */\r\n  tipo?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.responsavel';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/responsavel';\r\n\r\nconst ResponsavelIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'tipo',\r\n            text: 'Tipo',\r\n          },\r\n          {\r\n            dataField: 'telefone',\r\n            text: 'Telefone',\r\n          },\r\n          {\r\n            dataField: 'email',\r\n            text: 'E-mail',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'ResponsavelSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Responsável'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Responsável'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ResponsavelIS;\r\n","import { CustomizacaoTermoExample } from './customizacaoTermoExample';\r\n\r\nexport interface CustomizacaoTermo extends CustomizacaoTermoExample {\r\n  termoAbertura?: string;\r\n  termoEncerramento?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mcg.model.dto.customizacaotermo';\r\n","import { ABERTURA_ENCERRAMENTO } from '../../enumerated/mcg/customizacaoTermoEnum';\r\nimport { CustomizacaoTermosDefaultContent } from '../mfp/customizacaoTermosDefaultContent';\r\n\r\nexport class CustomizacaoTermosAberturaEncerramentoCabecalhoDefault implements CustomizacaoTermosDefaultContent {\r\n  private TERMO_PADRAO: string =\r\n    'CONTÉM O PRESENTE LIVRO <FOL_TOT/> FOLHAS, NUMERADAS SEQUENCIALMENTE POR ' +\r\n    'PROCESSAMENTO ELETRÔNICO DE DADOS DE <FOL_INI/> A <FOL_FIM/> E SE DESTINA A' +\r\n    ' SERVIR DE LIVRO <TIP_LIV/> NRO. <NUM_LIV/> DA EMPRESA \"<R_SOC_EMP/>\", ' +\r\n    'INSCRITA NO <CNPJ_CPF_EMP/>, COM SEDE A <END_EMP/>, CEP.: <CEP/>, NA CIDADE' +\r\n    ' DE <CID_EMP/>, ESTADO DE <UF_EMP/>, TENDO SEUS ATOS CONSTITUTIVOS ARQUIVADOS ' +\r\n    'NA <CART_EMP/> NO LIVRO <LIV_REG_EMP/>, SOB O NÚMERO <NUM_REG_EMP/>, EM <DAT_REG_EMP/>.';\r\n\r\n  public getCustomizacaoTermosTipoEnum() {\r\n    return ABERTURA_ENCERRAMENTO;\r\n  }\r\n\r\n  public getTermoDefault() {\r\n    return this.TERMO_PADRAO;\r\n  }\r\n}\r\n","import { ABERTURA_ENCERRAMENTO } from '../../enumerated/mcg/customizacaoTermoEnum';\r\nimport { CustomizacaoTermosDefaultContent } from '../mfp/customizacaoTermosDefaultContent';\r\n\r\nexport class CustomizacaoTermosAberturaEncerramentoRodapeDefault implements CustomizacaoTermosDefaultContent {\r\n  private TERMO_PADRAO: string =\r\n    '\\n' +\r\n    'CONTÉM O PRESENTE LIVRO <FOL_TOT/> FOLHAS, NUMERADAS SEQUENCIALMENTE POR PROCESSAMENTO ' +\r\n    'ELETRÔNICO DE DADOS DE <FOL_INI/> A <FOL_FIM/> QUE SE DESTINOU A SERVIR DE LIVRO ' +\r\n    '<TIP_LIV/> NRO. <NUM_LIV/> DA EMPRESA \"<R_SOC_EMP/>\", INSCRITA NO <CNPJ_CPF_EMP/>, ' +\r\n    'COM SEDE A <END_EMP/>, CEP.: <CEP/>, NA CIDADE DE <CID_EMP/>, ESTADO DE <UF_EMP/>,  ' +\r\n    'TENDO SEUS ATOS CONSTITUTIVOS ARQUIVADOS NA <CART_EMP/> NO LIVRO <LIV_REG_EMP/>, SOB O' +\r\n    ' NÚMERO <NUM_REG_EMP/>, EM <DAT_REG_EMP/>, COM ESCRITURAÇÃO REFERENTE AO PERÍODO DE ' +\r\n    '<PER_APURACAO/>.\\n';\r\n\r\n  public getCustomizacaoTermosTipoEnum() {\r\n    return ABERTURA_ENCERRAMENTO;\r\n  }\r\n\r\n  public getTermoDefault() {\r\n    return this.TERMO_PADRAO;\r\n  }\r\n}\r\n","import { BALANCO_PATRIMONIAL } from '../../enumerated/mcg/customizacaoTermoEnum';\r\nimport { CustomizacaoTermosDefaultContent } from '../mfp/customizacaoTermosDefaultContent';\r\n\r\nexport class CustomizacaoTermosBalancoPatrimonialDefault implements CustomizacaoTermosDefaultContent {\r\n  private TERMO_PADRAO: string =\r\n    'SOB AS PENAS DA LEI, DECLARAMOS QUE AS INFORMAÇÕES AQUI CONTIDAS SÃO VERDADEIRAS E NOS ' +\r\n    'RESPONSABILIZAMOS POR TODAS ELAS.\\n' +\r\n    'EM CUMPRIMENTO AO QUE DETERMINA O PARÁGRAFO 2º DO ARTIGO 1.184 DO CÓDIGO CIVIL BRASILEIRO, ' +\r\n    'LEI 10.406 DE 10/01/2002, ASSINAMOS O PRESENTE TERMO DE RESPONSABILIDADE RELATIVO A FIDELIDADE ' +\r\n    'E A REALIDADE DOS SALDOS DAS CONTAS AQUI LAVRADAS, CONSOANTE AS EXIGÊNCIAS DO ART. 1.188 DO' +\r\n    ' MESMO CÓDIGO. OS REGISTROS DO EXERCÍCIO FORAM REALIZADOS COM AMPARO EM DOCUMENTAÇÃO COMPETENTE,' +\r\n    ' REPASSADA AO PROFISSIONAL ENCARREGADO DA ESCRITA CONTÁBIL, ESTE NA QUALIDADE DE PROPOSTO DOS' +\r\n    ' SÓCIOS DA EMPRESA, ASSIM COMO, OS INVENTÁRIOS FÍSICOS DOS ELEMENTOS PATRIMONIAIS E AS PERTINENTES' +\r\n    ' AVALIAÇÕES, ESTES EFETUADOS SOB DIRETA RESPONSABILIDADE DO EMPRESÁRIO SIGNATÁRIO DESTE TERMO.';\r\n\r\n  public getCustomizacaoTermosTipoEnum() {\r\n    return BALANCO_PATRIMONIAL;\r\n  }\r\n\r\n  public getTermoDefault() {\r\n    return this.TERMO_PADRAO;\r\n  }\r\n}\r\n","import { CARTA_RESPONSABILIDADE } from '../../enumerated/mcg/customizacaoTermoEnum';\r\nimport { CustomizacaoTermosDefaultContent } from '../mfp/customizacaoTermosDefaultContent';\r\n\r\nexport class CustomizacaoTermosCartaResponsabilidadeDefault implements CustomizacaoTermosDefaultContent {\r\n  private TERMO_PADRAO: string =\r\n    'Prezados Senhores:\\n' +\r\n    'Declaramos, para os devidos fins, como administrador e responsável legal da empresa <R_SOC_EMP/>, CNPJ <CNPJ_CPF_EMP/>, que as informações relativas ao período base <PER_APURACAO/>, fornecidos a Vossas Senhorias para escrituração e elaboração das demonstrações contábeis, obrigações acessórias, apuração de impostos e arquivos eletrônicos exigidos pela fiscalização federal, estadual, municipal, trabalhista e previdenciária são fidedignas.\\n' +\r\n    'Também declaramos:\\n' +\r\n    '  (a). Que os controles internos adotados pela nossa empresa são de responsabilidade da administração e estão adequados ao tipo de atividade e volume de transações;\\n' +\r\n    '  (b). Que não realizamos nenhum tipo de operação que possa ser considerada ilegal, frente à legislação vigente;\\n' +\r\n    '  (c). Que todos os documentos que geramos e recebemos de nossos fornecedores estão revestidos de total idoneidade;\\n' +\r\n    '  (d). Que os estoques registrados em conta própria foram por nós avaliados, contados e levantados fisicamente e perfazem a realidade do período encerrado em <DT_PER_APURACAO_FIM/>;\\n' +\r\n    '  (e). Que as informações registradas no sistema de gestão e controle interno, denominado Calima ERP Contábil, são controladas e validadas com documentação suporte adequada, sendo de nossa inteira responsabilidade todo o conteúdo do banco de dados e arquivos eletrônicos gerados.\\n' +\r\n    'Além disso, declaramos que não temos conhecimento de quaisquer fatos ocorridos no período base que posssam afetar as demonstrações contábeis ou que as afetam até a data desta carta ou, ainda, que possam afetar a continuidade das operações da empresa.\\n' +\r\n    'Também confirmamos que não houve:\\n' +\r\n    '  (a). Fraude envolvendo administração ou empregados em cargos de responsabilidade ou confiança;\\n' +\r\n    '  (b). Fraude envolvendo terceiros que poderiam ter efeito material nas demonstrações contábeis;\\n' +\r\n    '  (c). Violação ou possíveis violações de lei, normas ou regulamentos cujos efeitos deveriam ser considerados para divulgação nas demonstrações contábeis, ou mesmo dar origem ao registro de provisão para contingências passivas.';\r\n\r\n  public getCustomizacaoTermosTipoEnum() {\r\n    return CARTA_RESPONSABILIDADE;\r\n  }\r\n\r\n  public getTermoDefault() {\r\n    return this.TERMO_PADRAO;\r\n  }\r\n}\r\n","import { DEMONSTRCAO_RESULTADO } from '../../enumerated/mcg/customizacaoTermoEnum';\r\nimport { CustomizacaoTermosDefaultContent } from '../mfp/customizacaoTermosDefaultContent';\r\n\r\nexport class CustomizacaoTermosDemonstracaoResultadoDefault implements CustomizacaoTermosDefaultContent {\r\n  private TERMO_PADRAO: string =\r\n    'RECONHECEMOS A EXATIDÃO DO PRESENTE DEMONSTRATIVO DO RESULTADO DO EXERCÍCIO, APRESENTANDO UM <LUC_PREJ_LIQUIDO/> DE <VALOR/> (<VALOR_EXTENSO/>).\\n' +\r\n    '\\n' +\r\n    'SOB AS PENAS DA LEI, DECLARAMOS QUE AS INFORMAÇÕES AQUI CONTIDAS SÃO VERDADEIRAS E NOS RESPONSABILIZAMOS POR TODAS ELAS.';\r\n\r\n  public getCustomizacaoTermosTipoEnum() {\r\n    return DEMONSTRCAO_RESULTADO;\r\n  }\r\n\r\n  public getTermoDefault() {\r\n    return this.TERMO_PADRAO;\r\n  }\r\n}\r\n","import { VERACIDADE } from '../../enumerated/mcg/customizacaoTermoEnum';\r\nimport { CustomizacaoTermosDefaultContent } from '../mfp/customizacaoTermosDefaultContent';\r\n\r\nexport class CustomizacaoTermosVeracidadeCabecalhoDefault implements CustomizacaoTermosDefaultContent {\r\n  private TERMO_PADRAO: string =\r\n    'DECLARO, SOB AS PENAS DA LEI, QUE AS INFORMAÇÕES AQUI CONTIDAS, REFLETEM A ' +\r\n    'DOCUMENTAÇÃO QUE ME FOI ENTREGUE, SÃO VERDADEIRAS E ME RESPONSABILIZO POR TODAS ELAS.';\r\n\r\n  public getCustomizacaoTermosTipoEnum() {\r\n    return VERACIDADE;\r\n  }\r\n\r\n  public getTermoDefault() {\r\n    return this.TERMO_PADRAO;\r\n  }\r\n}\r\n","import { VERACIDADE } from '../../enumerated/mcg/customizacaoTermoEnum';\r\nimport { CustomizacaoTermosDefaultContent } from '../mfp/customizacaoTermosDefaultContent';\r\n\r\nexport class CustomizacaoTermosVeracidadeRodapeDefault implements CustomizacaoTermosDefaultContent {\r\n  private TERMO_PADRAO: string =\r\n    'DECLARO, SOB AS PENAS DA LEI, QUE AS INFORMAÇÕES AQUI CONTIDAS, SÃO VERDADEIRAS E ME RESPONSABILIZO POR TODAS ELAS.';\r\n\r\n  public getCustomizacaoTermosTipoEnum() {\r\n    return VERACIDADE;\r\n  }\r\n\r\n  public getTermoDefault() {\r\n    return this.TERMO_PADRAO;\r\n  }\r\n}\r\n","import { CustomizacaoTermosAberturaEncerramentoCabecalhoDefault } from '../../dtos/mcg/customizacaoTermosAberturaEncerramentoCabecalhoDefault';\r\nimport { CustomizacaoTermosAberturaEncerramentoRodapeDefault } from '../../dtos/mcg/customizacaoTermosAberturaEncerramentoRodapeDefault';\r\nimport { CustomizacaoTermosBalancoPatrimonialDefault } from '../../dtos/mcg/customizacaoTermosBalancoPatrimonialDefault';\r\nimport { CustomizacaoTermosCartaResponsabilidadeDefault } from '../../dtos/mcg/customizacaoTermosCartaResponsabilidadeDefault';\r\nimport { CustomizacaoTermosDemonstracaoResultadoDefault } from '../../dtos/mcg/customizacaoTermosDemonstracaoResultadoDefault';\r\nimport { CustomizacaoTermosVeracidadeCabecalhoDefault } from '../../dtos/mcg/customizacaoTermosVeracidadeCabecalhoDefault';\r\nimport { CustomizacaoTermosVeracidadeRodapeDefault } from '../../dtos/mcg/customizacaoTermosVeracidadeRodapeDefault';\r\n\r\nexport const ABERTURA_ENCERRAMENTO = { value: 'ABERTURA_ENCERRAMENTO', label: 'Termo de Abertura e Encerramento' };\r\nexport const VERACIDADE = { value: 'VERACIDADE', label: 'Declaração Individualizada de Veracidade' };\r\nexport const BALANCO_PATRIMONIAL = { value: 'BALANCO_PATRIMONIAL', label: 'Termo do Balanço Patrimonial' };\r\nexport const DEMONSTRCAO_RESULTADO = { value: 'DEMONSTRCAO_RESULTADO', label: 'Termo da Demonstração do Resultado' };\r\nexport const CARTA_RESPONSABILIDADE = { value: 'CARTA_RESPONSABILIDADE', label: 'Carta de Responsabilidade' };\r\n\r\nexport function getTermoDefaultAbertura(customizacaoTipoEnum: string) {\r\n  const result = getAllDefaultContentsAbertura().find(it => it.getCustomizacaoTermosTipoEnum().value === customizacaoTipoEnum);\r\n  return result === null ? null : result.getTermoDefault();\r\n}\r\n\r\nexport function getTermoDefaultEncerramento(customizacaoTipoEnum: string) {\r\n  const result = getAllDefaultContentsEncerrramento().find(it => it.getCustomizacaoTermosTipoEnum().value === customizacaoTipoEnum);\r\n  return result === null ? null : result.getTermoDefault();\r\n}\r\n\r\nexport function getAllDefaultContentsAbertura() {\r\n  return [\r\n    new CustomizacaoTermosAberturaEncerramentoCabecalhoDefault(),\r\n    new CustomizacaoTermosBalancoPatrimonialDefault(),\r\n    new CustomizacaoTermosCartaResponsabilidadeDefault(),\r\n    new CustomizacaoTermosDemonstracaoResultadoDefault(),\r\n    new CustomizacaoTermosVeracidadeCabecalhoDefault(),\r\n  ];\r\n}\r\n\r\nexport function getAllDefaultContentsEncerrramento() {\r\n  return [new CustomizacaoTermosAberturaEncerramentoRodapeDefault(), new CustomizacaoTermosVeracidadeRodapeDefault()];\r\n}\r\n\r\nexport const CUSTOMIZACAO_TERMO_ENUM_VALUES = [ABERTURA_ENCERRAMENTO, VERACIDADE, BALANCO_PATRIMONIAL, DEMONSTRCAO_RESULTADO, CARTA_RESPONSABILIDADE];\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { InputSearchProps } from 'summer/dist/views/components/inputSearch/InputSearch';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mcg/customizacaoTermo';\r\nimport {\r\n  ABERTURA_ENCERRAMENTO,\r\n  BALANCO_PATRIMONIAL,\r\n  CARTA_RESPONSABILIDADE,\r\n  DEMONSTRCAO_RESULTADO,\r\n  VERACIDADE,\r\n} from '../../../../models/enumerated/mcg/customizacaoTermoEnum';\r\n\r\nexport interface CustomizacaoTermoSearchViewProps extends InputProps {\r\n  apenasCartaResponsabilidade?: boolean;\r\n  apenasIndividualizadaVeracidade?: boolean;\r\n  apenasDemonstracaoResultado?: boolean;\r\n  apenasAberturaEncerramento?: boolean;\r\n  apenasBalancoPatrimonial?: boolean;\r\n}\r\n\r\nconst CustomizacaoTermoIS: FC<CustomizacaoTermoSearchViewProps> = props => {\r\n  function getSearchExpression(): SearchExpression[] {\r\n    if (props.apenasCartaResponsabilidade) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: CARTA_RESPONSABILIDADE.value,\r\n        },\r\n      ];\r\n    }\r\n    if (props.apenasIndividualizadaVeracidade) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: VERACIDADE.value,\r\n        },\r\n      ];\r\n    }\r\n    if (props.apenasDemonstracaoResultado) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: DEMONSTRCAO_RESULTADO.value,\r\n        },\r\n      ];\r\n    }\r\n    if (props.apenasAberturaEncerramento) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: ABERTURA_ENCERRAMENTO.value,\r\n        },\r\n      ];\r\n    }\r\n    if (props.apenasBalancoPatrimonial) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: BALANCO_PATRIMONIAL.value,\r\n        },\r\n      ];\r\n    }\r\n    return [];\r\n  }\r\n\r\n  const inputSearchProps: InputSearchProps<any> = {\r\n    ...props.inputSearchProps,\r\n    columns: [\r\n      {\r\n        dataField: 'descricao',\r\n        text: 'Descrição',\r\n      },\r\n      {\r\n        dataField: 'termo',\r\n        text: 'Termo',\r\n      },\r\n    ],\r\n    dtoClassName: CLASS_NAME,\r\n    searchExpressions: getSearchExpression,\r\n    searchViewId: 'CustomizacaoTermoSearchView',\r\n  };\r\n\r\n  return <InputGroupInline {...props} type={InputType.INPUT_SEARCH} inputSearchProps={inputSearchProps} />;\r\n};\r\n\r\nexport default CustomizacaoTermoIS;\r\n"],"sourceRoot":""}
{"version":3,"sources":["views/pages/mcg/report/balancoPatrimonial/balancoPatrimonialRelRV.ts","views/pages/mcg/report/balancoPatrimonial/BalancoPatrimonialReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","services/mcg.service.ts","models/enumerated/mcg/sinteticoAnaliticoTipoEnum.ts","models/enumerated/mcg/consolidarEnum.ts","models/dtos/ger/responsavel.ts","views/components/ger/responsavelIS/ResponsavelIS.tsx","models/dtos/mcg/customizacaoTermo.ts","models/dtos/mcg/customizacaoTermosAberturaEncerramentoCabecalhoDefault.ts","models/dtos/mcg/customizacaoTermosAberturaEncerramentoRodapeDefault.ts","models/dtos/mcg/customizacaoTermosBalancoPatrimonialDefault.ts","models/dtos/mcg/customizacaoTermosCartaResponsabilidadeDefault.ts","models/dtos/mcg/customizacaoTermosDemonstracaoResultadoDefault.ts","models/dtos/mcg/customizacaoTermosVeracidadeCabecalhoDefault.ts","models/dtos/mcg/customizacaoTermosVeracidadeRodapeDefault.ts","models/enumerated/mcg/customizacaoTermoEnum.ts","views/components/mcg/customizacaoTermoIS/CustomizacaoTermoIS.tsx"],"names":["DEFAULT_VALUES","Object","objectSpread2","getDefaultReportBasicValues","consolidacao","NORMAL","value","grauConta","isImprimirInfoDiario","outrosResponsaveis","tipoRelatorio","ANALITICO_NUMBER","DEFAULT_OPTIONS","getDefaultReportViewOptions","REFERENCE","exibirConfiguracaoDadosEmpresa","exibirImprimirValoresColoridos","exibirSegmentacaoFolha","refInicialLabel","refInicialRequired","BalancoPatrimonialReportView","props","globalReducer","useSelector","state","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","isEnabledGrau","setIsEnabledGrau","_useState3","_useState4","isEnabledIsMatriz","setIsEnabledIsMatriz","_useState5","_useState6","isEnabledTermoTwo","setIsEnabledTermoTwo","_useState7","_useState8","isEnabledInfoDiario","setIsEnabledInfoDiario","getInfoDiario","id","globalParameter","empresa","buscarConfigLivroFolhaMCG","errorFunction","mensagem","showToast","ERROR","thenFunction","result","setTimeout","setValue","diarioLivro","triggerValidation","empresaMCG","refAtual","useEffect","matriz","getValues","isAcumularMatrizFilial","centralizar","acumularMatrizFilial","react_default","a","createElement","Row","Col","CustomInput","type","label","name","innerRef","register","termoTwo","CustomizacaoTermoIS","validation","required","searchViewProps","apenasBalancoPatrimonial","placeholder","isPrependLabel","inputSearchProps","bsSize","infoDiario","className","summer_esm","max","min","InputType","NUMBER","iconAppend","appendClickHandler","propToolTip","messagem","message","placement","title","useGlobalParameter","dependencies","hasEmpresa","onChange","GRAU_CONTA_NUMBER","inputDropDownProps","optionsProvider","SINTETICO_ANALITICO_TIPO_ENUM_VALUES","selectProps","isClearable","DROP_DOWN","CONSOLIDAR_ENUM_VALUES","disabled","withTooltip","isImprimirTermosSeparados","unregister","DATE","tooltipProps","ResponsavelIS","bsbsSize","isMulti","ReportForm","assign","localStorageKey","routeProps","reportBasicValues","reportViewOptions","validateExtras","erros","values","folhaInicial","folhaFinal","push","termo1","termo2","__webpack_require__","d","__webpack_exports__","NATUREZA","SALDO_REPORT_ENUM","EmpresaIS","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","empresasSelecionadas","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","gerarCabecalhoPadraoAdministradora","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","virtualization","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","errors","handleCancel","currentItem","currentValues","parentObject","EnvioEmail","Fragment","sort","detailView","keyField","propName","maxLength","TEXT_AREA","ReportInputs","activeTab","setActiveTab","_props$reportViewOpti","printingTypes","resetObject","length","idGerEmpresa","current","currentMomentDate","endDate","dtInicial","formatDate","toDate","DATES","dtFinal","endOf","referenciaInicial","format","REF_PATTERN","REFERENCES","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dtInicialRequired","dateComponent","datesComponent","dtFinalRequired","referenceInitial","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","inputProps","gerarPorEmpresas","style","marginBottom","size","segmentacaoFolhaComponent","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","firstOpen","extraConfigOpened","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","hidden","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","params","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history","getService","create","gerarLancamentosFolhaPagamento","integracaoFolhaParam","param","send","post","integrarFolhaPagamento","lancamentoIntegracaoFolha","integrarMCP","importarParam","importarLancamentoCSV","formDataSend","FormData","append","importarDuplicados","importarLancamentosCardinal","_step","_iterator","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__","arquivos","s","n","done","arquivo","file","nomeArquivo","err","e","f","importarLancamentoPadraoCSV","_step2","_iterator2","importarHistoricoCSV","grupoHistoricoDestino","_step3","_iterator3","importarPlanoContaCSV","idEmpresa","grupoPlanoContaDestino","_step4","_iterator4","importarHistorico","importacaoHistorico","importarPlanoConta","importacaoPlanoContaParam","get","integracaoFiscalContabil","encerrarContas","contaResultadoEncerramento","force","getDataUltimaContaEncerrada","limparEncerramentoContaResultado","contaResultadoLimpeza","validarReferenciaSPEDECFIrpjCsll","configECFIrpjCsll","validarReferenciaSPEDECFImuneIsenta","configECFImuneIsenta","validarRefRemuneracaoSocio","configECFRemuneracaoSocio","validarQuadroSocietario","configQuadro","obterLucroPrejuizoClassificacao","idGrupoPlanoConta","getSaldo","saldo","validarDadosSpedECF","ecfExportacaoParam","gerarSpedECF","usuario","getArquivoDigitalService","recuperarLancamentoConta","transferenciaLancamentoConta","transferirLancamentoConta","obterBancoPlanoConta","bancoPlanoContaDTO","validarConfigLivroFolha","changeLivroFolha","fecharRestaurar","fechamentoRestauracao","forceFecharRestaurar","verificarErros","gerarSpedContabil","selecaoSped","arquivoRTFEscrituracaoSubstituida","_step5","_iterator5","atributoSelecaoSped","salvarLucroPrejuizoClassificacao","lucroPrejuizoClassificacao","consultarMovimentacao","saldoCriteria","totalizadorLancamento","consulta","getSaldoAnterior","isDataEncerrada","parametros","abrirContas","removeLancamentoPeriodo","obterContasClassificacaoIndireto","salvarClassificacaoIndireto","contaFluxoCaixaIndireto","obterMutacaoPatrimonioLiquido","salvarMutacaoPatrimonioLiquido","mutacaoPatrimonioLiquido","salvarContaResultado","contaResultado","excluirContaResultado","obterContasClassificacaoDireto","salvarClassificacaoDireto","contaFluxoCaixa","findSubGrupo","planoContaSubGrupoParam","removerTodosPlanosConta","removeList","listaPlanoConta","apagarFilha","listSubGrupo","planoConta","referenciarContas","idsPlanoConta","idPlanoContaReferencial","idPlanoContaReferencialECF","desvincularContas","existeLancamentoEmContaAnalitica","idPlanoConta","importarLancamentoMCG","tipoImportacao","sobescrever","versaoSuperiorA2","isEmpty","importarSpedContabil","_step6","_iterator6","gerarManadContabil","refInicial","refFinal","arquivoSFP","evolucaoContaContabilGraf","evolucaoContaContabilGrafParam","composicaoReceitaDespesasGraf","compReceitaDespesasGrafParam","gerarFCONTContabil","fContContabilCrit","obterDadosArquivoExtrato","arquivoSelecionado","idBancoMCG","obterDadosConciliacaoBancariaPeriodo","obterBancoListPlanoConta","conciliarLancamentosExtrato","listConciliacaoBancaria","removerConciliarLancamentosExtrato","listaRemover","removerLancamentosExtratoBancario","eLalurAContas","eLacsAContas","getSaldoDebito","getSaldoCredito","removerLancamentoLote","atualizaCalculoIrpjCsll","buscarLancamentosHonorarios","integracaoHonorariosParam","integrarHonorarios","lancamentos","isAlteraCalculoIRPJorCSLL","SINTETICO_ANALITICO_VALUES","ANALITICO","SINTETICO","GRAU_CONTA","SINTETICO_ANALITICO_TIPO_VALUE_STRING_ENUM_VALUES","ANALITICO_NUMBER_VALUE","SINTETICO_NUMBER_VALUE","GRAU_CONTA_NUMBER_VALUE","SINTETICO_ANALITICO_TIPO_NUMBER_VALUE_ENUM_VALUES","SINTETICO_NUMBER","NORMAL_NUMBER","GRUPO_ATUAL_NUMBER","CONSOLIDAR_NUMBER_ENUM_VALUES","CustomizacaoTermosAberturaEncerramentoCabecalhoDefault","[object Object]","this","TERMO_PADRAO","getCustomizacaoTermosTipoEnum","ABERTURA_ENCERRAMENTO","getTermoDefault","CustomizacaoTermosAberturaEncerramentoRodapeDefault","CustomizacaoTermosBalancoPatrimonialDefault","BALANCO_PATRIMONIAL","CustomizacaoTermosCartaResponsabilidadeDefault","CARTA_RESPONSABILIDADE","CustomizacaoTermosDemonstracaoResultadoDefault","DEMONSTRCAO_RESULTADO","CustomizacaoTermosVeracidadeCabecalhoDefault","VERACIDADE","CustomizacaoTermosVeracidadeRodapeDefault","getTermoDefaultAbertura","getTermoDefaultEncerramento","CUSTOMIZACAO_TERMO_ENUM_VALUES","customizacaoTipoEnum","find","it","searchExpressions","apenasCartaResponsabilidade","alias","conditionalGroup","fieldName","apenasIndividualizadaVeracidade","apenasDemonstracaoResultado","apenasAberturaEncerramento"],"mappings":"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","file":"static/js/32.e1a6e889.chunk.js","sourcesContent":["import { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { Responsavel } from '../../../../../models/dtos/ger/responsavel';\r\nimport { CustomizacaoTermo } from '../../../../../models/dtos/mcg/customizacaoTermo';\r\n\r\nexport interface BalancoPatrimonialRelRV extends ReportBasicValues {\r\n  termo?: CustomizacaoTermo;\r\n  tipoRelatorio?: string;\r\n  grauConta?: number;\r\n  consolidacao?: string;\r\n  isImprimirAtivoPassivoPagDiferente?: boolean;\r\n  imprimirDataInicialFinal?: boolean;\r\n  isImprimirTermoPagDiferente?: boolean;\r\n  isImprimirInfoDiario?: boolean;\r\n  isImprimirContaSaldoZerado?: boolean;\r\n  isCompararPeriodoAnterior?: boolean;\r\n  isExibirNotasExplicativas?: boolean;\r\n  isAcumularMatrizFilial?: boolean;\r\n  isContaCodigo?: boolean;\r\n  nroLivroDiario?: number;\r\n  folhaInicial?: number;\r\n  folhaFinal?: number;\r\n  termo1?: CustomizacaoTermo;\r\n  termo2?: CustomizacaoTermo;\r\n  dtAssinatura?: Date;\r\n  marcarContasSinteticasNegrito?: boolean;\r\n  outrosResponsaveis?: Responsavel[];\r\n  isImprimirTermosSeparados?: boolean;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'balancopatrimonialrv';\r\nexport const REPORT_TITLE: string = 'Balanço Patrimonial';\r\nexport const REPORT_EVENT: string = 'printBalancoPatrimonialNovo';\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport {\r\n  ERROR,\r\n  InputGroupInline,\r\n  InputTooltipProps,\r\n  InputType,\r\n  REFERENCE,\r\n  showToast,\r\n  WindowComponent,\r\n  WindowComponentProps,\r\n  withTooltip,\r\n} from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { getDefaultReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport { LivroFolha } from '../../../../../models/dtos/mcg/livroFolha';\r\nimport { CONSOLIDAR_ENUM_VALUES, NORMAL } from '../../../../../models/enumerated/mcg/consolidarEnum';\r\nimport {\r\n  ANALITICO_NUMBER,\r\n  GRAU_CONTA_NUMBER,\r\n  SINTETICO_ANALITICO_TIPO_ENUM_VALUES,\r\n} from '../../../../../models/enumerated/mcg/sinteticoAnaliticoTipoEnum';\r\nimport { buscarConfigLivroFolhaMCG } from '../../../../../services/mcg.service';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport ResponsavelIS from '../../../../components/ger/responsavelIS/ResponsavelIS';\r\nimport CustomizacaoTermoIS from '../../../../components/mcg/customizacaoTermoIS/CustomizacaoTermoIS';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { BalancoPatrimonialRelRV, CLASS_KEY, REPORT_EVENT, REPORT_TITLE } from './balancoPatrimonialRelRV';\r\n\r\nconst DEFAULT_VALUES: BalancoPatrimonialRelRV = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n  consolidacao: NORMAL.value,\r\n  grauConta: 25,\r\n  isImprimirInfoDiario: true,\r\n  outrosResponsaveis: null,\r\n  tipoRelatorio: ANALITICO_NUMBER.value,\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT, REFERENCE.value),\r\n  exibirConfiguracaoDadosEmpresa: true,\r\n  exibirImprimirValoresColoridos: true,\r\n  exibirSegmentacaoFolha: true,\r\n  refInicialLabel: 'Referência',\r\n  refInicialRequired: true,\r\n};\r\n\r\nconst BalancoPatrimonialReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const { handleSubmit, ...formProps } = useForm<BalancoPatrimonialRelRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n\r\n  const [isEnabledGrau, setIsEnabledGrau] = useState(true);\r\n  const [isEnabledIsMatriz, setIsEnabledIsMatriz] = useState(false);\r\n  const [isEnabledTermoTwo, setIsEnabledTermoTwo] = useState(false);\r\n  const [isEnabledInfoDiario, setIsEnabledInfoDiario] = useState(true);\r\n\r\n  const carregarParametroEmpresa = () => {\r\n    if (globalReducer.globalParameter.empresa.matriz === null) {\r\n      setIsEnabledIsMatriz(true);\r\n      formProps.getValues().isAcumularMatrizFilial = globalReducer.globalParameter.empresa.centralizar;\r\n    }\r\n  };\r\n\r\n  const getInfoDiario = () => {\r\n    const {\r\n      empresa: { id },\r\n    } = globalReducer.globalParameter;\r\n\r\n    buscarConfigLivroFolhaMCG(id, {\r\n      errorFunction: mensagem => {\r\n        showToast(mensagem, ERROR);\r\n      },\r\n      thenFunction: (result: LivroFolha) => {\r\n        setTimeout(() => {\r\n          formProps.setValue('nroLivroDiario', result.diarioLivro);\r\n          formProps.triggerValidation('nroLivroDiario');\r\n          formProps.setValue('referenciaInicial', globalReducer.globalParameter.empresaMCG.refAtual);\r\n          formProps.triggerValidation('referenciaInicial');\r\n        }, 700);\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (globalReducer.globalParameter.empresa) {\r\n        getInfoDiario();\r\n        carregarParametroEmpresa();\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const enableGrau = () => {\r\n    if (formProps.getValues().tipoRelatorio === GRAU_CONTA_NUMBER.value) {\r\n      setIsEnabledGrau(false);\r\n    } else {\r\n      setIsEnabledGrau(true);\r\n    }\r\n  };\r\n\r\n  const enableTermoTwo = () => {\r\n    if (formProps.getValues().isImprimirTermosSeparados) {\r\n      setIsEnabledTermoTwo(true);\r\n    } else {\r\n      setIsEnabledTermoTwo(false);\r\n      formProps.unregister(['termo2']);\r\n    }\r\n  };\r\n\r\n  const enableInfoDiario = () => {\r\n    if (formProps.getValues().isImprimirInfoDiario) {\r\n      setIsEnabledInfoDiario(true);\r\n    } else {\r\n      setIsEnabledInfoDiario(false);\r\n    }\r\n  };\r\n\r\n  const acumularMatrizFilial = isEnabledIsMatriz ? (\r\n    <Row>\r\n      <Col>\r\n        <CustomInput type=\"switch\" label=\"Acumular Matriz e Filiais\" name=\"matrizFilial\" id=\"matrizFilial\" innerRef={formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const termoTwo = isEnabledTermoTwo ? (\r\n    <Row>\r\n      <Col>\r\n        <CustomizacaoTermoIS\r\n          formProps={{ ...formProps, validation: { required: isEnabledTermoTwo } }}\r\n          label=\"Segundo Termo\"\r\n          searchViewProps={{ apenasBalancoPatrimonial: true }}\r\n          apenasBalancoPatrimonial={true}\r\n          placeholder=\"Selecione o segundo termo\"\r\n          id=\"termo2\"\r\n          isPrependLabel={true}\r\n          inputSearchProps={{ bsSize: 'xl' }}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const infoDiario = isEnabledInfoDiario ? (\r\n    <Row className=\"mt-4\">\r\n      <Col>\r\n        <InputGroupInline\r\n          id=\"nroLivroDiario\"\r\n          label=\"Nº Livro Diário\"\r\n          isPrependLabel={true}\r\n          formProps={{ ...formProps, validation: { required: true, max: 2147483647, min: 1 } }}\r\n          type={InputType.NUMBER}\r\n          iconAppend={'reply'}\r\n          appendClickHandler={getInfoDiario}\r\n        />\r\n      </Col>\r\n      <Col>\r\n        <InputGroupInline\r\n          id=\"folhaInicial\"\r\n          label=\"Folha Inicial Diário\"\r\n          isPrependLabel={true}\r\n          formProps={{ ...formProps, validation: { required: true, max: 2147483647, min: 1 } }}\r\n          type={InputType.NUMBER}\r\n        />\r\n      </Col>\r\n      <Col>\r\n        <InputGroupInline\r\n          id=\"folhaFinal\"\r\n          label=\"Folha Final Diário\"\r\n          isPrependLabel={true}\r\n          formProps={{ ...formProps, validation: { required: true, max: 2147483647, min: 1 } }}\r\n          type={InputType.NUMBER}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const propToolTip = (messagem: string): InputTooltipProps => {\r\n    return {\r\n      message: messagem,\r\n      placement: 'top-start',\r\n    };\r\n  };\r\n\r\n  const validateExtras = () => {\r\n    const erros = [];\r\n    const values = formProps.getValues();\r\n\r\n    if (values.isImprimirInfoDiario && values.folhaInicial > values.folhaFinal) {\r\n      erros.push('A página inicial do Livro Diário deve ser menor que a página final.');\r\n    }\r\n\r\n    if (values.termo1 != null && values.termo2 != null) {\r\n      if (values.termo1.id === values.termo2.id) {\r\n        erros.push('O Termo 1 selecionado é igual ao Termo 2.');\r\n      }\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Configuração de Balancete\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter)]}\r\n    >\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"tipoRelatorio\"\r\n            label=\"Tipo de Relatório\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Selecione o tipo de relatório\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            onChange={enableGrau}\r\n            inputDropDownProps={{\r\n              optionsProvider: SINTETICO_ANALITICO_TIPO_ENUM_VALUES,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"consolidacao\"\r\n            label=\"Consolidação\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Selecione o tipo de consolidação\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            inputDropDownProps={{\r\n              optionsProvider: CONSOLIDAR_ENUM_VALUES,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"grauConta\"\r\n            label=\"Grau\"\r\n            isPrependLabel={true}\r\n            placeholder=\"digite o grau da conta\"\r\n            formProps={{ ...formProps, validation: { max: 2147483647 } }}\r\n            disabled={isEnabledGrau}\r\n            type={InputType.NUMBER}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            label=\"Imprimir Ativo / Passivo em Páginas Distintas\"\r\n            name=\"isImprimirAtivoPassivoPagDiferente\"\r\n            id=\"isImprimirAtivoPassivoPagDiferente\"\r\n            innerRef={formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            label=\"Imprimir Termo em Página Distinta\"\r\n            name=\"isImprimirTermoPagDiferente\"\r\n            id=\"isImprimirTermoPagDiferente\"\r\n            innerRef={formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            label=\"Imprimir Informação do Diário\"\r\n            name=\"isImprimirInfoDiario\"\r\n            id=\"isImprimirInfoDiario\"\r\n            onChange={enableInfoDiario}\r\n            innerRef={formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            label=\"Imprimir contas com saldo zerado\"\r\n            name=\"isImprimirContaSaldoZerado\"\r\n            id=\"isImprimirContaSaldoZerado\"\r\n            innerRef={formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            label=\"Comparar com o Período Anterior\"\r\n            name=\"isCompararPeriodoAnterior\"\r\n            id=\"isCompararPeriodoAnterior\"\r\n            innerRef={formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            label=\"Exibir Notas Explicativas\"\r\n            name=\"isExibirNotasExplicativas\"\r\n            id=\"isExibirNotasExplicativas\"\r\n            innerRef={formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            label=\"Exibir contas sintéticas em negrito\"\r\n            name=\"marcarContasSinteticasNegrito\"\r\n            id=\"marcarContasSinteticasNegrito\"\r\n            innerRef={formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            label=\"Imprimir Conta/Código Reduzido antes do nome da Conta\"\r\n            name=\"isContaCodigo\"\r\n            id=\"idisContaCodigo\"\r\n            innerRef={formProps.register}\r\n          />\r\n          {withTooltip(\r\n            propToolTip('Caso essa opção seja selecionada as contas terão número de conta e código impressas antes do nome.'),\r\n            'isContaCodigo'\r\n          )}\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            label=\"Trocar campo referencia do cabeçalho para data inicial/final\"\r\n            name=\"imprimirDataInicialFinal\"\r\n            id=\"imprimirDataInicialFinal\"\r\n            innerRef={formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      {acumularMatrizFilial}\r\n      {isEnabledInfoDiario ? <hr /> : null}\r\n      {infoDiario}\r\n      <hr />\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            label=\"Imprimir Termos Separados\"\r\n            name=\"isImprimirTermosSeparados\"\r\n            id=\"isImprimirTermosSeparados\"\r\n            innerRef={formProps.register}\r\n            onChange={enableTermoTwo}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <CustomizacaoTermoIS\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            label=\"Termo\"\r\n            searchViewProps={{ apenasBalancoPatrimonial: true }}\r\n            apenasBalancoPatrimonial={true}\r\n            placeholder=\"Selecione o Termo\"\r\n            id=\"termo1\"\r\n            isPrependLabel={true}\r\n            inputSearchProps={{ bsSize: 'xl' }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      {termoTwo}\r\n      <hr />\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"dtAssinatura\"\r\n            label=\"Data Assinatura\"\r\n            isPrependLabel={true}\r\n            placeholder=\"digite a data de assinatura\"\r\n            formProps={formProps}\r\n            type={InputType.DATE}\r\n            tooltipProps={propToolTip('Caso este campo esteja vazio a data de assinatura será o último dia da referência.')}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <ResponsavelIS\r\n            id={'outrosResponsaveis'}\r\n            formProps={formProps}\r\n            label={'Responsáveis adicionais para assinatura'}\r\n            placeholder={'Informe os Responsáveis adicionais para a assinatura'}\r\n            isPrependLabel={true}\r\n            inputSearchProps={{ bsbsSize: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n        validateExtras={validateExtras}\r\n      />\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default BalancoPatrimonialReportView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","import { AxiosInstance } from 'axios';\r\nimport { ArquivoSelecionado, AxiosParam, create, isEmpty, send } from 'summer';\r\nimport { PlanoConta } from '../models/dtos/ger/planoConta';\r\nimport { PlanoContaSubGrupoParam } from '../models/dtos/ger/planoContaSubGrupoParam';\r\nimport { RuleMessage } from '../models/dtos/ger/ruleMessage';\r\nimport { Usuario } from '../models/dtos/ger/usuario';\r\nimport { BancoExtrato } from '../models/dtos/mcg/bancoExtrato';\r\nimport { BancoMCG } from '../models/dtos/mcg/bancoMCG';\r\nimport { BancoPlanoConta } from '../models/dtos/mcg/bancoPlanoConta';\r\nimport { CalculoIrpjCsll } from '../models/dtos/mcg/calculoIrpjCsll';\r\nimport { ComposicaoReceitaDespesasGrafParam } from '../models/dtos/mcg/composicaoReceitaDespesasGrafParam';\r\nimport { ComposicaoReceitaDespesasGrafReturn } from '../models/dtos/mcg/composicaoReceitaDespesasGrafReturn';\r\nimport { ConciliacaoBancaria } from '../models/dtos/mcg/conciliacaoBancaria';\r\nimport { ConfigECFImuneIsenta } from '../models/dtos/mcg/configECFImuneIsenta';\r\nimport { ConfigECFIrpjCsll } from '../models/dtos/mcg/configECFIrpjCsll';\r\nimport { ConfigECFRemuneracaoSocio } from '../models/dtos/mcg/configECFRemuneracaoSocio';\r\nimport { ConsultaTotalLancamento } from '../models/dtos/mcg/consultaTotalLancamento';\r\nimport { ContaFluxoCaixa } from '../models/dtos/mcg/contaFluxoCaixa';\r\nimport { ContaFluxoCaixaIndireto } from '../models/dtos/mcg/contaFluxoCaixaIndireto';\r\nimport { ContaResultado } from '../models/dtos/mcg/contaResultado';\r\nimport { ContaResultadoLimpeza } from '../models/dtos/mcg/contaResultadoLimpeza';\r\nimport { ContaResultadoMCGEncerramento } from '../models/dtos/mcg/contaResultadoMCGEncerramento';\r\nimport { DataEncerradaParam } from '../models/dtos/mcg/dataEncerradaParam';\r\nimport { ECFExportacaoParam } from '../models/dtos/mcg/ecfExportacaoParam';\r\nimport { Erros } from '../models/dtos/mcg/erros';\r\nimport { EvolucaoContaContabilGrafParam } from '../models/dtos/mcg/evolucaoContaContabilGrafParam';\r\nimport { EvolucaoContaContabilGrafReturn } from '../models/dtos/mcg/evolucaoContaContabilGrafReturn';\r\nimport { FCONTContabilCrit } from '../models/dtos/mcg/fContContabilCrit';\r\nimport { FechamentoRestauracaoMCG } from '../models/dtos/mcg/fechamentoRestauracaoMCG';\r\nimport { ImportacaoFiscalContabil, ImportacaoFiscalContabilResult } from '../models/dtos/mcg/importacaoFiscalContabil';\r\nimport { ImportacaoHistorico } from '../models/dtos/mcg/importacaoHistorico';\r\nimport { ImportacaoHistoricoCSVParam } from '../models/dtos/mcg/importacaoHistoricoCSVParam';\r\nimport { ImportacaoLancamentoCSVParam } from '../models/dtos/mcg/importacaoLancamentoCSVParam';\r\nimport { ImportacaoLancamentoMCGRetornoValidacao } from '../models/dtos/mcg/importacaoLancamentoMCGRetornoValidacao';\r\nimport { ImportacaoLancamentoMCGSelecao } from '../models/dtos/mcg/importacaoLancamentoMCGSelecao';\r\nimport { ImportacaoLancamentoPadraoCSVParam } from '../models/dtos/mcg/importacaoLancamentoPadraoCSVParam';\r\nimport { ImportacaoPlanoConta } from '../models/dtos/mcg/importacaoPlanoConta';\r\nimport { ImportacaoPlanoContaCSVParam } from '../models/dtos/mcg/importacaoPlanoContaCSVParam';\r\nimport { ImportacaoSpedContabil } from '../models/dtos/mcg/importacaoSpedContabil';\r\nimport { ImportacaoResult, ImportarMCP } from '../models/dtos/mcg/importarMCP';\r\nimport { InfoConciliacaoBancaria } from '../models/dtos/mcg/infoConciliacaoBancaria';\r\nimport { IntegracaoFolhaParam } from '../models/dtos/mcg/integracaoFolhaParam';\r\nimport { IntegracaoHonorariosParam } from '../models/dtos/mcg/integracaoHonorariosParam';\r\nimport { Lancamento } from '../models/dtos/mcg/lancamento';\r\nimport { LancamentoIntegracaoFolha } from '../models/dtos/mcg/lancamentoIntegracaoFolha';\r\nimport { LancamentoIntegracaoHonorarios } from '../models/dtos/mcg/lancamentoIntegracaoHonorarios';\r\nimport { LancamentoSaldo } from '../models/dtos/mcg/lancamentoSaldo';\r\nimport { LivroFolha } from '../models/dtos/mcg/livroFolha';\r\nimport { LucroPrejuizoClassificacao } from '../models/dtos/mcg/lucroPrejuizoClassificacao';\r\nimport { MANADContabilCrit } from '../models/dtos/mcg/manadContabilCrit';\r\nimport { MutacaoPatrimonioLiquido } from '../models/dtos/mcg/mutacaoPatrimonioLiquido';\r\nimport { QuadroSocietario } from '../models/dtos/mcg/quadroSocietario';\r\nimport { RemoveLancamentoLote } from '../models/dtos/mcg/removeLancamentoLote';\r\nimport { RemoveLancamentoPeriodo } from '../models/dtos/mcg/removeLancamentoPeriodo';\r\nimport { Saldo } from '../models/dtos/mcg/saldo';\r\nimport { SaldoCriteria } from '../models/dtos/mcg/saldoCriteria';\r\nimport { SelecaoSpedContabil } from '../models/dtos/mcg/selecaoSpedContabil';\r\nimport { SomaSaldo } from '../models/dtos/mcg/somaSaldo';\r\nimport { TotalizadorLancamento } from '../models/dtos/mcg/totalizadorLancamento';\r\nimport { TransferenciaLancamentoConta } from '../models/dtos/mcg/transferenciaLancamentoConta';\r\nimport { VerificarErros } from '../models/dtos/mcg/verificarErros';\r\nimport { getArquivoDigitalService } from './ger.service';\r\n\r\nfunction getService(): AxiosInstance {\r\n  return create('/mcg');\r\n}\r\n\r\nexport function gerarLancamentosFolhaPagamento(integracaoFolhaParam: IntegracaoFolhaParam, param: AxiosParam<LancamentoIntegracaoFolha[]>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/gerarLancamentosFolhaPagamento', integracaoFolhaParam), param);\r\n}\r\n\r\nexport function integrarFolhaPagamento(lancamentoIntegracaoFolha: LancamentoIntegracaoFolha[], param: AxiosParam<any>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/integrarFolhaPagamento', lancamentoIntegracaoFolha), param);\r\n}\r\n\r\nexport function integrarMCP(importarParam: ImportarMCP, param: AxiosParam<ImportacaoResult>) {\r\n  send(getService().post<ImportacaoResult>('/importar', importarParam), param);\r\n}\r\n\r\nexport function importarLancamentoCSV(data: ImportacaoLancamentoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('importarDuplicados', String(data.importarDuplicados));\r\n  formDataSend.append('importarLancamentosCardinal', String(data.importarLancamentosCardinal));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarLancamentoPadraoCSV(data: ImportacaoLancamentoPadraoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoPadraoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistoricoCSV(data: ImportacaoHistoricoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('grupoHistoricoDestino.id', String(data.grupoHistoricoDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarHistoricoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarPlanoContaCSV(data: ImportacaoPlanoContaCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idEmpresa', String(data.idEmpresa));\r\n  formDataSend.append('grupoPlanoContaDestino.id', String(data.grupoPlanoContaDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarPlanoContaCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistorico(importacaoHistorico: ImportacaoHistorico, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarHistorico', importacaoHistorico), param);\r\n}\r\n\r\nexport function importarPlanoConta(importacaoPlanoContaParam: ImportacaoPlanoConta, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarPlanoConta', importacaoPlanoContaParam), param);\r\n}\r\n\r\nexport function buscarConfigLivroFolhaMCG(idEmpresa: number, param: AxiosParam<LivroFolha>) {\r\n  send(getService().get<LivroFolha>('/buscarConfigLivroFolhaMCG/' + idEmpresa), param);\r\n}\r\n\r\nexport function integracaoFiscalContabil(importarParam: ImportacaoFiscalContabil, param: AxiosParam<ImportacaoFiscalContabilResult>) {\r\n  send(getService().post<ImportacaoFiscalContabilResult>('/integracaoFiscalContabil', importarParam), param);\r\n}\r\n\r\nexport function encerrarContas(\r\n  contaResultadoEncerramento: ContaResultadoMCGEncerramento,\r\n  force: boolean,\r\n  param: AxiosParam<ContaResultadoMCGEncerramento>\r\n) {\r\n  send(\r\n    getService().post<ContaResultadoMCGEncerramento>('/encerrarContas', { contaResultadoEncerramento, force }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function getDataUltimaContaEncerrada(idGerEmpresa: number, param: AxiosParam<Date>) {\r\n  send(getService().get<Date>('/getDataUltimaContaEncerrada/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function limparEncerramentoContaResultado(contaResultadoLimpeza: ContaResultadoLimpeza, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/limparEncerramentoContaResultadoApos', contaResultadoLimpeza), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFIrpjCsll(configECFIrpjCsll: ConfigECFIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFIrpjCsll', configECFIrpjCsll), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFImuneIsenta(configECFImuneIsenta: ConfigECFImuneIsenta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFImuneIsenta', configECFImuneIsenta), param);\r\n}\r\n\r\nexport function validarRefRemuneracaoSocio(configECFRemuneracaoSocio: ConfigECFRemuneracaoSocio, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarRefRemuneracaoSocio', configECFRemuneracaoSocio), param);\r\n}\r\n\r\nexport function validarQuadroSocietario(configQuadro: QuadroSocietario, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/validarQuadroSocietario', configQuadro), param);\r\n}\r\n\r\nexport function obterLucroPrejuizoClassificacao(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterLucroPrejuizoClassificacao/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function getSaldo(saldo: Saldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldo', saldo), param);\r\n}\r\n\r\nexport function validarDadosSpedECF(ecfExportacaoParam: ECFExportacaoParam, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/validarDadosSpedECF', ecfExportacaoParam), param);\r\n}\r\n\r\nexport function gerarSpedECF(usuario: Usuario, ecfExportacaoParam: ECFExportacaoParam, param?: AxiosParam<string>) {\r\n  send(\r\n    getArquivoDigitalService().post<string>('/gerarSpedECF', { usuario, ecfExportacaoParam }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function recuperarLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<Lancamento[]>) {\r\n  send(getService().post<Lancamento[]>('/recuperarLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function transferirLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/transferirLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function obterBancoPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG>) {\r\n  send(getService().post<BancoMCG>('/obterBancoPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function validarConfigLivroFolha(idGerEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(getService().get<boolean>('/validarConfigLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function changeLivroFolha(idGerEmpresa: number, param: AxiosParam<void>) {\r\n  send(getService().get<void>('/changeLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function fecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<RuleMessage>) {\r\n  send(getService().post<RuleMessage>('/fecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function forceFecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/forceFecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function verificarErros(erros: VerificarErros, param: AxiosParam<Erros[]>) {\r\n  send(getService().post<Erros[]>('/verificarErros', erros), param);\r\n}\r\n\r\nexport function gerarSpedContabil(selecaoSped: SelecaoSpedContabil, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('usuario.id', String(selecaoSped.usuario.id));\r\n\r\n  if (selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n    for (const arquivo of selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n      formDataSend.append('arquivoRTFEscrituracaoSubstituida', arquivo.file, arquivo.nomeArquivo);\r\n    }\r\n  }\r\n\r\n  for (const atributoSelecaoSped in selecaoSped) {\r\n    if (\r\n      atributoSelecaoSped !== 'arquivoRTFEscrituracaoSubstituida' &&\r\n      atributoSelecaoSped !== 'usuario' &&\r\n      selecaoSped[atributoSelecaoSped] !== null\r\n    ) {\r\n      formDataSend.append(atributoSelecaoSped, selecaoSped[atributoSelecaoSped]);\r\n    }\r\n  }\r\n  send(getService().post<string>('/gerarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function salvarLucroPrejuizoClassificacao(\r\n  lucroPrejuizoClassificacao: LucroPrejuizoClassificacao,\r\n  param: AxiosParam<LucroPrejuizoClassificacao>\r\n) {\r\n  send(getService().post<LucroPrejuizoClassificacao>('/salvarLucroPrejuizoClassificacao', lucroPrejuizoClassificacao), param);\r\n}\r\n\r\nexport function consultarMovimentacao(saldoCriteria: SaldoCriteria, param: AxiosParam<LancamentoSaldo[]>) {\r\n  send(getService().post<LancamentoSaldo[]>('/consultarMovimentacao', saldoCriteria), param);\r\n}\r\n\r\nexport function totalizadorLancamento(consulta: ConsultaTotalLancamento, param: AxiosParam<TotalizadorLancamento>) {\r\n  send(getService().post<TotalizadorLancamento>('/totalizadorLancamento', consulta), param);\r\n}\r\n\r\nexport function getSaldoAnterior(saldoCriteria: SaldoCriteria, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoAnterior', saldoCriteria), param);\r\n}\r\n\r\nexport function isDataEncerrada(parametros: DataEncerradaParam, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isDataEncerrada', parametros), param);\r\n}\r\n\r\nexport function abrirContas(parametros: DataEncerradaParam, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/abrirContas', parametros), param);\r\n}\r\n\r\nexport function removeLancamentoPeriodo(parametros: RemoveLancamentoPeriodo, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removeLancamentoPeriodo', parametros), param);\r\n}\r\n\r\nexport function obterContasClassificacaoIndireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixaIndireto[]>) {\r\n  send(getService().get<ContaFluxoCaixaIndireto[]>('/obterContasClassificacaoIndireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoIndireto(contaFluxoCaixaIndireto: ContaFluxoCaixaIndireto, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoIndireto', contaFluxoCaixaIndireto), param);\r\n}\r\n\r\nexport function obterMutacaoPatrimonioLiquido(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterMutacaoPatrimonioLiquido/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarMutacaoPatrimonioLiquido(mutacaoPatrimonioLiquido: MutacaoPatrimonioLiquido, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarMutacaoPatrimonioLiquido', mutacaoPatrimonioLiquido), param);\r\n}\r\n\r\nexport function salvarContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function excluirContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/excluirContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function obterContasClassificacaoDireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixa[]>) {\r\n  send(getService().get<ContaFluxoCaixa[]>('/obterContasClassificacaoDireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoDireto(contaFluxoCaixa: ContaFluxoCaixa, param?: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoDireto', contaFluxoCaixa), param);\r\n}\r\n\r\nexport function findSubGrupo(planoContaSubGrupoParam: PlanoContaSubGrupoParam, param: AxiosParam<any>) {\r\n  send(getService().post<any>('/findSubGrupo', planoContaSubGrupoParam), param);\r\n}\r\n\r\nexport function removerTodosPlanosConta(idGrupoPlanoConta: number, usuario: Usuario, param: AxiosParam<void>) {\r\n  send(\r\n    getService().post<void>('/removerTodosPlanosConta', { idGrupoPlanoConta, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function removeList(listaPlanoConta: PlanoConta[], apagarFilha: boolean, usuario: Usuario, param: AxiosParam<any>) {\r\n  send(\r\n    getService().post<any>('/removeList', { listaPlanoConta, apagarFilha, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function listSubGrupo(planoConta: PlanoConta, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().post<PlanoConta[]>('/listSubGrupo', planoConta), param);\r\n}\r\n\r\nexport function referenciarContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<void>\r\n) {\r\n  send(\r\n    getService().post<void>('/referenciarContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function desvincularContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<any>\r\n) {\r\n  send(\r\n    getService().post<void>('/desvincularContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function existeLancamentoEmContaAnalitica(idPlanoConta: number, idEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(\r\n    getService().post<boolean>('/existeLancamentoEmContaAnalitica', { idPlanoConta, idEmpresa }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function importarLancamentoMCG(data: ImportacaoLancamentoMCGSelecao, param: AxiosParam<ImportacaoLancamentoMCGRetornoValidacao>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('tipoImportacao', String(data.tipoImportacao));\r\n  formDataSend.append('sobescrever', String(data.sobescrever));\r\n  formDataSend.append('versaoSuperiorA2', String(data.versaoSuperiorA2));\r\n  formDataSend.append('arquivo', data.arquivo[0].file, data.arquivo[0].nomeArquivo);\r\n\r\n  if (data.versaoSuperiorA2 === false && !isEmpty(data.dtInicial) && !isEmpty(data.dtFinal)) {\r\n    formDataSend.append('dtInicial', data.dtInicial);\r\n    formDataSend.append('dtFinal', data.dtFinal);\r\n  }\r\n\r\n  send(getService().post<ImportacaoLancamentoMCGRetornoValidacao>('/importarLancamentoMCG', formDataSend), param);\r\n}\r\n\r\nexport function importarSpedContabil(data: ImportacaoSpedContabil, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function gerarManadContabil(data: MANADContabilCrit, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('refInicial', data.refInicial);\r\n  formDataSend.append('refFinal', data.refFinal);\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  if (!isEmpty(data.arquivoSFP)) {\r\n    formDataSend.append('arquivoSFP', data.arquivoSFP[0].file, data.arquivoSFP[0].nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<string>('/gerarManadContabil', formDataSend), param);\r\n}\r\n\r\nexport function evolucaoContaContabilGraf(\r\n  evolucaoContaContabilGrafParam: EvolucaoContaContabilGrafParam,\r\n  param: AxiosParam<EvolucaoContaContabilGrafReturn>\r\n) {\r\n  send(getService().post<EvolucaoContaContabilGrafReturn>('/evolucaoContaContabilGraf', evolucaoContaContabilGrafParam), param);\r\n}\r\n\r\nexport function composicaoReceitaDespesasGraf(\r\n  compReceitaDespesasGrafParam: ComposicaoReceitaDespesasGrafParam,\r\n  param: AxiosParam<ComposicaoReceitaDespesasGrafReturn>\r\n) {\r\n  send(getService().post<ComposicaoReceitaDespesasGrafReturn>('/composicaoReceitaDespesasGraf', compReceitaDespesasGrafParam), param);\r\n}\r\n\r\nexport function gerarFCONTContabil(fContContabilCrit: FCONTContabilCrit, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/gerarFCONTContabil', fContContabilCrit), param);\r\n}\r\n\r\nexport function obterDadosArquivoExtrato(arquivoSelecionado: ArquivoSelecionado, idBancoMCG, param: AxiosParam<BancoExtrato[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idBancoMCG', idBancoMCG);\r\n\r\n  formDataSend.append('arquivoSelecionado', arquivoSelecionado[0].file, arquivoSelecionado[0].nomeArquivo);\r\n\r\n  send(getService().post<BancoExtrato[]>('/obterDadosArquivoExtrato', formDataSend), param);\r\n}\r\n\r\nexport function obterDadosConciliacaoBancariaPeriodo(\r\n  idGrupoPlanoConta,\r\n  idEmpresa,\r\n  idBancoMCG,\r\n  dtInicial,\r\n  dtFinal,\r\n  param: AxiosParam<InfoConciliacaoBancaria>\r\n) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGrupoPlanoConta', String(idGrupoPlanoConta));\r\n  formDataSend.append('idEmpresa', String(idEmpresa));\r\n  formDataSend.append('idBancoMCG', String(idBancoMCG));\r\n  formDataSend.append('dtInicial', String(dtInicial));\r\n  formDataSend.append('dtFinal', String(dtFinal));\r\n\r\n  send(getService().post<InfoConciliacaoBancaria>('/obterDadosConciliacaoBancariaPeriodo', formDataSend), param);\r\n}\r\n\r\nexport function obterBancoListPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG[]>) {\r\n  send(getService().post<BancoMCG[]>('/obterBancoListPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function conciliarLancamentosExtrato(listConciliacaoBancaria: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/conciliarLancamentosExtrato', listConciliacaoBancaria), param);\r\n}\r\n\r\nexport function removerConciliarLancamentosExtrato(listaRemover: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerConciliarLancamentosExtrato', listaRemover), param);\r\n}\r\n\r\nexport function removerLancamentosExtratoBancario(listaRemover: BancoExtrato[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerLancamentosExtratoBancario', listaRemover), param);\r\n}\r\n\r\nexport function eLalurAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLalurAContas/' + id), param);\r\n}\r\n\r\nexport function eLacsAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLacsAContas/' + id), param);\r\n}\r\n\r\nexport function getSaldoDebito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoDebito', parametros), param);\r\n}\r\n\r\nexport function getSaldoCredito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoCredito', parametros), param);\r\n}\r\n\r\nexport function removerLancamentoLote(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/removerLancamentoLote', parametros), param);\r\n}\r\n\r\nexport function atualizaCalculoIrpjCsll(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/atualizaCalculoIrpjCsll', parametros), param);\r\n}\r\n\r\nexport function buscarLancamentosHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  param: AxiosParam<LancamentoIntegracaoHonorarios[]>\r\n) {\r\n  send(getService().post<LancamentoIntegracaoHonorarios[]>('/buscarLancamentosHonorarios', integracaoHonorariosParam), param);\r\n}\r\n\r\nexport function integrarHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  lancamentos: LancamentoIntegracaoHonorarios[],\r\n  param: AxiosParam<number>\r\n) {\r\n  send(\r\n    getService().post<number>('/integrarHonorarios', { integracaoHonorariosParam, lancamentos }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function isAlteraCalculoIRPJorCSLL(parametros: CalculoIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isAlteraCalculoIRPJorCSLL', parametros), param);\r\n}\r\n","export const ANALITICO_NUMBER = { label: 'Analítico', value: '1' };\r\nexport const SINTETICO_NUMBER = { label: 'Sintético', value: '2' };\r\nexport const GRAU_CONTA_NUMBER = { label: 'Grau da Conta', value: '3' };\r\n\r\nexport const SINTETICO_ANALITICO_VALUES = [ANALITICO_NUMBER, SINTETICO_NUMBER];\r\n\r\nexport const SINTETICO_ANALITICO_TIPO_ENUM_VALUES = [ANALITICO_NUMBER, SINTETICO_NUMBER, GRAU_CONTA_NUMBER];\r\n\r\nexport const ANALITICO = { label: 'Analítico', value: 'analitico' };\r\nexport const SINTETICO = { label: 'Sintético', value: 'sintetico' };\r\nexport const GRAU_CONTA = { label: 'Grau da Conta', value: 'grauConta' };\r\n\r\nexport const SINTETICO_ANALITICO_TIPO_VALUE_STRING_ENUM_VALUES = [ANALITICO, SINTETICO, GRAU_CONTA];\r\n\r\nexport const ANALITICO_NUMBER_VALUE = { label: 'Analítico', value: 1 };\r\nexport const SINTETICO_NUMBER_VALUE = { label: 'Sintético', value: 2 };\r\nexport const GRAU_CONTA_NUMBER_VALUE = { label: 'Grau da Conta', value: 3 };\r\n\r\nexport const SINTETICO_ANALITICO_TIPO_NUMBER_VALUE_ENUM_VALUES = [ANALITICO_NUMBER_VALUE, SINTETICO_NUMBER_VALUE, GRAU_CONTA_NUMBER_VALUE];\r\n","export const NORMAL = { value: '1', label: 'Normal' };\r\nexport const GRUPO_ATUAL = { value: '2', label: 'Grupo Atual' };\r\nexport const HIERARQUIA_INFERIOR = { value: '3', label: 'Hierarquia Inferior' };\r\n\r\nexport const CONSOLIDAR_ENUM_VALUES = [NORMAL, GRUPO_ATUAL, HIERARQUIA_INFERIOR];\r\n\r\nexport const NORMAL_NUMBER = { value: 1, label: 'Normal' };\r\nexport const GRUPO_ATUAL_NUMBER = { value: 2, label: 'Grupo Atual' };\r\nexport const HIERARQUIA_INFERIOR_NUMBER = { value: 3, label: 'Hierarquia Inferior' };\r\n\r\nexport const CONSOLIDAR_NUMBER_ENUM_VALUES = [NORMAL_NUMBER, GRUPO_ATUAL_NUMBER, HIERARQUIA_INFERIOR_NUMBER];\r\n","import { Basic } from 'summer';\r\nimport { CepBairro } from './cepBairro';\r\nimport { CepLocalidade } from './cepLocalidade';\r\nimport { CepTitulo } from './cepTitulo';\r\nimport { CepUF } from './cepUF';\r\n\r\nexport interface Responsavel extends Basic {\r\n  cargo?: string;\r\n  cei?: string;\r\n  cep?: string;\r\n  cnpj?: string;\r\n  cpf?: string;\r\n  cepBairro?: CepBairro;\r\n  /** Campo referente a cidade */\r\n  cepLocalidade?: CepLocalidade;\r\n  /** tipo do logradouro ex: rua, avenida */\r\n  cepTitulo?: CepTitulo;\r\n  cepUf?: CepUF;\r\n  complemento?: string;\r\n  dataNascimento?: Date;\r\n  dataValidadeCRC?: Date;\r\n  email?: string;\r\n  /** Este campo utiliza o estadoCivilEnum */\r\n  estadoCivil?: string;\r\n  logradouro?: string;\r\n  numeroConselho?: string;\r\n  /** Este campo utiliza o nacionalidadeEnum */\r\n  nacionalidade?: string;\r\n  nome?: string;\r\n  numero?: string;\r\n  orgaoEmissor?: string;\r\n  rg?: string;\r\n  telefone?: string;\r\n  /** Este campo utiliza o responsavelTipoEnum */\r\n  tipo?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.responsavel';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/responsavel';\r\n\r\nconst ResponsavelIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'tipo',\r\n            text: 'Tipo',\r\n          },\r\n          {\r\n            dataField: 'telefone',\r\n            text: 'Telefone',\r\n          },\r\n          {\r\n            dataField: 'email',\r\n            text: 'E-mail',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'ResponsavelSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Responsável'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Responsável'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ResponsavelIS;\r\n","import { CustomizacaoTermoExample } from './customizacaoTermoExample';\r\n\r\nexport interface CustomizacaoTermo extends CustomizacaoTermoExample {\r\n  termoAbertura?: string;\r\n  termoEncerramento?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mcg.model.dto.customizacaotermo';\r\n","import { ABERTURA_ENCERRAMENTO } from '../../enumerated/mcg/customizacaoTermoEnum';\r\nimport { CustomizacaoTermosDefaultContent } from '../mfp/customizacaoTermosDefaultContent';\r\n\r\nexport class CustomizacaoTermosAberturaEncerramentoCabecalhoDefault implements CustomizacaoTermosDefaultContent {\r\n  private TERMO_PADRAO: string =\r\n    'CONTÉM O PRESENTE LIVRO <FOL_TOT/> FOLHAS, NUMERADAS SEQUENCIALMENTE POR ' +\r\n    'PROCESSAMENTO ELETRÔNICO DE DADOS DE <FOL_INI/> A <FOL_FIM/> E SE DESTINA A' +\r\n    ' SERVIR DE LIVRO <TIP_LIV/> NRO. <NUM_LIV/> DA EMPRESA \"<R_SOC_EMP/>\", ' +\r\n    'INSCRITA NO <CNPJ_CPF_EMP/>, COM SEDE A <END_EMP/>, CEP.: <CEP/>, NA CIDADE' +\r\n    ' DE <CID_EMP/>, ESTADO DE <UF_EMP/>, TENDO SEUS ATOS CONSTITUTIVOS ARQUIVADOS ' +\r\n    'NA <CART_EMP/> NO LIVRO <LIV_REG_EMP/>, SOB O NÚMERO <NUM_REG_EMP/>, EM <DAT_REG_EMP/>.';\r\n\r\n  public getCustomizacaoTermosTipoEnum() {\r\n    return ABERTURA_ENCERRAMENTO;\r\n  }\r\n\r\n  public getTermoDefault() {\r\n    return this.TERMO_PADRAO;\r\n  }\r\n}\r\n","import { ABERTURA_ENCERRAMENTO } from '../../enumerated/mcg/customizacaoTermoEnum';\r\nimport { CustomizacaoTermosDefaultContent } from '../mfp/customizacaoTermosDefaultContent';\r\n\r\nexport class CustomizacaoTermosAberturaEncerramentoRodapeDefault implements CustomizacaoTermosDefaultContent {\r\n  private TERMO_PADRAO: string =\r\n    '\\n' +\r\n    'CONTÉM O PRESENTE LIVRO <FOL_TOT/> FOLHAS, NUMERADAS SEQUENCIALMENTE POR PROCESSAMENTO ' +\r\n    'ELETRÔNICO DE DADOS DE <FOL_INI/> A <FOL_FIM/> QUE SE DESTINOU A SERVIR DE LIVRO ' +\r\n    '<TIP_LIV/> NRO. <NUM_LIV/> DA EMPRESA \"<R_SOC_EMP/>\", INSCRITA NO <CNPJ_CPF_EMP/>, ' +\r\n    'COM SEDE A <END_EMP/>, CEP.: <CEP/>, NA CIDADE DE <CID_EMP/>, ESTADO DE <UF_EMP/>,  ' +\r\n    'TENDO SEUS ATOS CONSTITUTIVOS ARQUIVADOS NA <CART_EMP/> NO LIVRO <LIV_REG_EMP/>, SOB O' +\r\n    ' NÚMERO <NUM_REG_EMP/>, EM <DAT_REG_EMP/>, COM ESCRITURAÇÃO REFERENTE AO PERÍODO DE ' +\r\n    '<PER_APURACAO/>.\\n';\r\n\r\n  public getCustomizacaoTermosTipoEnum() {\r\n    return ABERTURA_ENCERRAMENTO;\r\n  }\r\n\r\n  public getTermoDefault() {\r\n    return this.TERMO_PADRAO;\r\n  }\r\n}\r\n","import { BALANCO_PATRIMONIAL } from '../../enumerated/mcg/customizacaoTermoEnum';\r\nimport { CustomizacaoTermosDefaultContent } from '../mfp/customizacaoTermosDefaultContent';\r\n\r\nexport class CustomizacaoTermosBalancoPatrimonialDefault implements CustomizacaoTermosDefaultContent {\r\n  private TERMO_PADRAO: string =\r\n    'SOB AS PENAS DA LEI, DECLARAMOS QUE AS INFORMAÇÕES AQUI CONTIDAS SÃO VERDADEIRAS E NOS ' +\r\n    'RESPONSABILIZAMOS POR TODAS ELAS.\\n' +\r\n    'EM CUMPRIMENTO AO QUE DETERMINA O PARÁGRAFO 2º DO ARTIGO 1.184 DO CÓDIGO CIVIL BRASILEIRO, ' +\r\n    'LEI 10.406 DE 10/01/2002, ASSINAMOS O PRESENTE TERMO DE RESPONSABILIDADE RELATIVO A FIDELIDADE ' +\r\n    'E A REALIDADE DOS SALDOS DAS CONTAS AQUI LAVRADAS, CONSOANTE AS EXIGÊNCIAS DO ART. 1.188 DO' +\r\n    ' MESMO CÓDIGO. OS REGISTROS DO EXERCÍCIO FORAM REALIZADOS COM AMPARO EM DOCUMENTAÇÃO COMPETENTE,' +\r\n    ' REPASSADA AO PROFISSIONAL ENCARREGADO DA ESCRITA CONTÁBIL, ESTE NA QUALIDADE DE PROPOSTO DOS' +\r\n    ' SÓCIOS DA EMPRESA, ASSIM COMO, OS INVENTÁRIOS FÍSICOS DOS ELEMENTOS PATRIMONIAIS E AS PERTINENTES' +\r\n    ' AVALIAÇÕES, ESTES EFETUADOS SOB DIRETA RESPONSABILIDADE DO EMPRESÁRIO SIGNATÁRIO DESTE TERMO.';\r\n\r\n  public getCustomizacaoTermosTipoEnum() {\r\n    return BALANCO_PATRIMONIAL;\r\n  }\r\n\r\n  public getTermoDefault() {\r\n    return this.TERMO_PADRAO;\r\n  }\r\n}\r\n","import { CARTA_RESPONSABILIDADE } from '../../enumerated/mcg/customizacaoTermoEnum';\r\nimport { CustomizacaoTermosDefaultContent } from '../mfp/customizacaoTermosDefaultContent';\r\n\r\nexport class CustomizacaoTermosCartaResponsabilidadeDefault implements CustomizacaoTermosDefaultContent {\r\n  private TERMO_PADRAO: string =\r\n    'Prezados Senhores:\\n' +\r\n    'Declaramos, para os devidos fins, como administrador e responsável legal da empresa <R_SOC_EMP/>, CNPJ <CNPJ_CPF_EMP/>, que as informações relativas ao período base <PER_APURACAO/>, fornecidos a Vossas Senhorias para escrituração e elaboração das demonstrações contábeis, obrigações acessórias, apuração de impostos e arquivos eletrônicos exigidos pela fiscalização federal, estadual, municipal, trabalhista e previdenciária são fidedignas.\\n' +\r\n    'Também declaramos:\\n' +\r\n    '  (a). Que os controles internos adotados pela nossa empresa são de responsabilidade da administração e estão adequados ao tipo de atividade e volume de transações;\\n' +\r\n    '  (b). Que não realizamos nenhum tipo de operação que possa ser considerada ilegal, frente à legislação vigente;\\n' +\r\n    '  (c). Que todos os documentos que geramos e recebemos de nossos fornecedores estão revestidos de total idoneidade;\\n' +\r\n    '  (d). Que os estoques registrados em conta própria foram por nós avaliados, contados e levantados fisicamente e perfazem a realidade do período encerrado em <DT_PER_APURACAO_FIM/>;\\n' +\r\n    '  (e). Que as informações registradas no sistema de gestão e controle interno, denominado Calima ERP Contábil, são controladas e validadas com documentação suporte adequada, sendo de nossa inteira responsabilidade todo o conteúdo do banco de dados e arquivos eletrônicos gerados.\\n' +\r\n    'Além disso, declaramos que não temos conhecimento de quaisquer fatos ocorridos no período base que posssam afetar as demonstrações contábeis ou que as afetam até a data desta carta ou, ainda, que possam afetar a continuidade das operações da empresa.\\n' +\r\n    'Também confirmamos que não houve:\\n' +\r\n    '  (a). Fraude envolvendo administração ou empregados em cargos de responsabilidade ou confiança;\\n' +\r\n    '  (b). Fraude envolvendo terceiros que poderiam ter efeito material nas demonstrações contábeis;\\n' +\r\n    '  (c). Violação ou possíveis violações de lei, normas ou regulamentos cujos efeitos deveriam ser considerados para divulgação nas demonstrações contábeis, ou mesmo dar origem ao registro de provisão para contingências passivas.';\r\n\r\n  public getCustomizacaoTermosTipoEnum() {\r\n    return CARTA_RESPONSABILIDADE;\r\n  }\r\n\r\n  public getTermoDefault() {\r\n    return this.TERMO_PADRAO;\r\n  }\r\n}\r\n","import { DEMONSTRCAO_RESULTADO } from '../../enumerated/mcg/customizacaoTermoEnum';\r\nimport { CustomizacaoTermosDefaultContent } from '../mfp/customizacaoTermosDefaultContent';\r\n\r\nexport class CustomizacaoTermosDemonstracaoResultadoDefault implements CustomizacaoTermosDefaultContent {\r\n  private TERMO_PADRAO: string =\r\n    'RECONHECEMOS A EXATIDÃO DO PRESENTE DEMONSTRATIVO DO RESULTADO DO EXERCÍCIO, APRESENTANDO UM <LUC_PREJ_LIQUIDO/> DE <VALOR/> (<VALOR_EXTENSO/>).\\n' +\r\n    '\\n' +\r\n    'SOB AS PENAS DA LEI, DECLARAMOS QUE AS INFORMAÇÕES AQUI CONTIDAS SÃO VERDADEIRAS E NOS RESPONSABILIZAMOS POR TODAS ELAS.';\r\n\r\n  public getCustomizacaoTermosTipoEnum() {\r\n    return DEMONSTRCAO_RESULTADO;\r\n  }\r\n\r\n  public getTermoDefault() {\r\n    return this.TERMO_PADRAO;\r\n  }\r\n}\r\n","import { VERACIDADE } from '../../enumerated/mcg/customizacaoTermoEnum';\r\nimport { CustomizacaoTermosDefaultContent } from '../mfp/customizacaoTermosDefaultContent';\r\n\r\nexport class CustomizacaoTermosVeracidadeCabecalhoDefault implements CustomizacaoTermosDefaultContent {\r\n  private TERMO_PADRAO: string =\r\n    'DECLARO, SOB AS PENAS DA LEI, QUE AS INFORMAÇÕES AQUI CONTIDAS, REFLETEM A ' +\r\n    'DOCUMENTAÇÃO QUE ME FOI ENTREGUE, SÃO VERDADEIRAS E ME RESPONSABILIZO POR TODAS ELAS.';\r\n\r\n  public getCustomizacaoTermosTipoEnum() {\r\n    return VERACIDADE;\r\n  }\r\n\r\n  public getTermoDefault() {\r\n    return this.TERMO_PADRAO;\r\n  }\r\n}\r\n","import { VERACIDADE } from '../../enumerated/mcg/customizacaoTermoEnum';\r\nimport { CustomizacaoTermosDefaultContent } from '../mfp/customizacaoTermosDefaultContent';\r\n\r\nexport class CustomizacaoTermosVeracidadeRodapeDefault implements CustomizacaoTermosDefaultContent {\r\n  private TERMO_PADRAO: string =\r\n    'DECLARO, SOB AS PENAS DA LEI, QUE AS INFORMAÇÕES AQUI CONTIDAS, SÃO VERDADEIRAS E ME RESPONSABILIZO POR TODAS ELAS.';\r\n\r\n  public getCustomizacaoTermosTipoEnum() {\r\n    return VERACIDADE;\r\n  }\r\n\r\n  public getTermoDefault() {\r\n    return this.TERMO_PADRAO;\r\n  }\r\n}\r\n","import { CustomizacaoTermosAberturaEncerramentoCabecalhoDefault } from '../../dtos/mcg/customizacaoTermosAberturaEncerramentoCabecalhoDefault';\r\nimport { CustomizacaoTermosAberturaEncerramentoRodapeDefault } from '../../dtos/mcg/customizacaoTermosAberturaEncerramentoRodapeDefault';\r\nimport { CustomizacaoTermosBalancoPatrimonialDefault } from '../../dtos/mcg/customizacaoTermosBalancoPatrimonialDefault';\r\nimport { CustomizacaoTermosCartaResponsabilidadeDefault } from '../../dtos/mcg/customizacaoTermosCartaResponsabilidadeDefault';\r\nimport { CustomizacaoTermosDemonstracaoResultadoDefault } from '../../dtos/mcg/customizacaoTermosDemonstracaoResultadoDefault';\r\nimport { CustomizacaoTermosVeracidadeCabecalhoDefault } from '../../dtos/mcg/customizacaoTermosVeracidadeCabecalhoDefault';\r\nimport { CustomizacaoTermosVeracidadeRodapeDefault } from '../../dtos/mcg/customizacaoTermosVeracidadeRodapeDefault';\r\n\r\nexport const ABERTURA_ENCERRAMENTO = { value: 'ABERTURA_ENCERRAMENTO', label: 'Termo de Abertura e Encerramento' };\r\nexport const VERACIDADE = { value: 'VERACIDADE', label: 'Declaração Individualizada de Veracidade' };\r\nexport const BALANCO_PATRIMONIAL = { value: 'BALANCO_PATRIMONIAL', label: 'Termo do Balanço Patrimonial' };\r\nexport const DEMONSTRCAO_RESULTADO = { value: 'DEMONSTRCAO_RESULTADO', label: 'Termo da Demonstração do Resultado' };\r\nexport const CARTA_RESPONSABILIDADE = { value: 'CARTA_RESPONSABILIDADE', label: 'Carta de Responsabilidade' };\r\n\r\nexport function getTermoDefaultAbertura(customizacaoTipoEnum: string) {\r\n  const result = getAllDefaultContentsAbertura().find(it => it.getCustomizacaoTermosTipoEnum().value === customizacaoTipoEnum);\r\n  return result === null ? null : result.getTermoDefault();\r\n}\r\n\r\nexport function getTermoDefaultEncerramento(customizacaoTipoEnum: string) {\r\n  const result = getAllDefaultContentsEncerrramento().find(it => it.getCustomizacaoTermosTipoEnum().value === customizacaoTipoEnum);\r\n  return result === null ? null : result.getTermoDefault();\r\n}\r\n\r\nexport function getAllDefaultContentsAbertura() {\r\n  return [\r\n    new CustomizacaoTermosAberturaEncerramentoCabecalhoDefault(),\r\n    new CustomizacaoTermosBalancoPatrimonialDefault(),\r\n    new CustomizacaoTermosCartaResponsabilidadeDefault(),\r\n    new CustomizacaoTermosDemonstracaoResultadoDefault(),\r\n    new CustomizacaoTermosVeracidadeCabecalhoDefault(),\r\n  ];\r\n}\r\n\r\nexport function getAllDefaultContentsEncerrramento() {\r\n  return [new CustomizacaoTermosAberturaEncerramentoRodapeDefault(), new CustomizacaoTermosVeracidadeRodapeDefault()];\r\n}\r\n\r\nexport const CUSTOMIZACAO_TERMO_ENUM_VALUES = [ABERTURA_ENCERRAMENTO, VERACIDADE, BALANCO_PATRIMONIAL, DEMONSTRCAO_RESULTADO, CARTA_RESPONSABILIDADE];\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { InputSearchProps } from 'summer/dist/views/components/inputSearch/InputSearch';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mcg/customizacaoTermo';\r\nimport {\r\n  ABERTURA_ENCERRAMENTO,\r\n  BALANCO_PATRIMONIAL,\r\n  CARTA_RESPONSABILIDADE,\r\n  DEMONSTRCAO_RESULTADO,\r\n  VERACIDADE,\r\n} from '../../../../models/enumerated/mcg/customizacaoTermoEnum';\r\n\r\nexport interface CustomizacaoTermoSearchViewProps extends InputProps {\r\n  apenasCartaResponsabilidade?: boolean;\r\n  apenasIndividualizadaVeracidade?: boolean;\r\n  apenasDemonstracaoResultado?: boolean;\r\n  apenasAberturaEncerramento?: boolean;\r\n  apenasBalancoPatrimonial?: boolean;\r\n}\r\n\r\nconst CustomizacaoTermoIS: FC<CustomizacaoTermoSearchViewProps> = props => {\r\n  function getSearchExpression(): SearchExpression[] {\r\n    if (props.apenasCartaResponsabilidade) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: CARTA_RESPONSABILIDADE.value,\r\n        },\r\n      ];\r\n    }\r\n    if (props.apenasIndividualizadaVeracidade) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: VERACIDADE.value,\r\n        },\r\n      ];\r\n    }\r\n    if (props.apenasDemonstracaoResultado) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: DEMONSTRCAO_RESULTADO.value,\r\n        },\r\n      ];\r\n    }\r\n    if (props.apenasAberturaEncerramento) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: ABERTURA_ENCERRAMENTO.value,\r\n        },\r\n      ];\r\n    }\r\n    if (props.apenasBalancoPatrimonial) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: BALANCO_PATRIMONIAL.value,\r\n        },\r\n      ];\r\n    }\r\n    return [];\r\n  }\r\n\r\n  const inputSearchProps: InputSearchProps<any> = {\r\n    ...props.inputSearchProps,\r\n    columns: [\r\n      {\r\n        dataField: 'descricao',\r\n        text: 'Descrição',\r\n      },\r\n      {\r\n        dataField: 'termo',\r\n        text: 'Termo',\r\n      },\r\n    ],\r\n    dtoClassName: CLASS_NAME,\r\n    searchExpressions: getSearchExpression,\r\n    searchViewId: 'CustomizacaoTermoSearchView',\r\n  };\r\n\r\n  return <InputGroupInline {...props} type={InputType.INPUT_SEARCH} inputSearchProps={inputSearchProps} />;\r\n};\r\n\r\nexport default CustomizacaoTermoIS;\r\n"],"sourceRoot":""}
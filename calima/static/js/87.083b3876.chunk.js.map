{"version":3,"sources":["views/pages/mlf/report/relacaoEntradaSaida/estado/RelacaoEntradaEstadoReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/printerConfigTypeEnum.ts","models/enumerated/ger/printerTypeEnum.ts","dependencies/empresaMLFDependency.ts","models/dtos/ger/printerDataBasic.ts","views/pages/report/ReportFormView.tsx","views/pages/mlf/report/relacaoEntradaSaida/relacaoEntradaSaidaRV.ts","models/enumerated/mcg/sinteticoAnaliticoTipoEnum.ts","models/enumerated/mlf/origemLancamentoMLFEnum.ts","models/enumerated/ger/ufEnum.ts"],"names":["REPORT_EVENT","REPORT_TITLE","BASIC_DATA","Object","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","getDefaultPrinterDataBasic","CLASS_KEY","DATES","value","dtFinal","dtInicial","RelacaoEntradaEstadoReportView","props","history","useHistory","formProps","useForm","mode","globalReducer","useSelector","state","useEffect","globalParameter","empresa","id","setTimeout","setValue","triggerValidation","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_10__","assign","title","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMLF","_report_ReportFormView__WEBPACK_IMPORTED_MODULE_18__","printerData","hidden","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","style","marginRight","reactstrap__WEBPACK_IMPORTED_MODULE_8__","label","ANALITICO","inline","type","name","innerRef","register","SINTETICO","isPrependLabel","placeholder","inputDropDownProps","optionsProvider","ORIGEM_LANCAMENTO_MLF_ENUM_VALUES","InputType","DROP_DOWN","UF_ENUM_VALUES","reactstrap__WEBPACK_IMPORTED_MODULE_9__","tag","Row","result","__webpack_require__","d","__webpack_exports__","SIMPLE","DATE","MONTHYEAR","MONTHYEARS","YEAR","GRAPHIC","PRINTER_TYPE_ENUM","empresaMLF","_enumerated_ger_printerConfigTypeEnum__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_printerTypeEnum__WEBPACK_IMPORTED_MODULE_1__","reportEventType","classKey","printerConfigTypeEnum","module","anoLabel","dtFinalLabel","dtInicialLabel","pageNumber","passObj","printerDataEmail","printerTypeEnum","refFinalLabel","refInicialLabel","reportSequence","ReportFormView","_props$printerData","resetObject","length","current","currentMomentDate","endDate","formatDate","toDate","endOf","referenciaInicial","format","REF_PATTERN","referenciaFinal","ano","String","year","reset","dateInitial","react__WEBPACK_IMPORTED_MODULE_2___default","summer__WEBPACK_IMPORTED_MODULE_7__","validation","required","dateComponent","datesComponent","Fragment","referenceInitial","REFERENCE","referenceComponent","referencesComponent","anoComponent","inputMaskedProps","mask","MASK","reactstrap__WEBPACK_IMPORTED_MODULE_3__","noValidate","children","firstOpen","extraConfigOpened","iconAppend","appendClickHandler","maxLength","minLength","min","NUMBER","reactstrap__WEBPACK_IMPORTED_MODULE_4__","className","selectProps","isClearable","handleSubmit","data","event","preventDefault","erros","validateExtras","params","message","AlertType","ERROR","alertManager","emit","ACTION_EVENTS","SHOW","showToast","INFORMATION","delay","gerarOldReport","errorFunction","mensagem","thenFunction","downloadOldReport","response","contentDisposition","headers","filename","slice","lastIndexOf","split","replace","saveAs","hideCancelButton","ANALITICO_NUMBER","GRAU_CONTA_NUMBER","SINTETICO_ANALITICO_VALUES","SINTETICO_ANALITICO_TIPO_ENUM_VALUES","GRAU_CONTA","SINTETICO_ANALITICO_TIPO_VALUE_STRING_ENUM_VALUES","ANALITICO_NUMBER_VALUE","SINTETICO_NUMBER_VALUE","GRAU_CONTA_NUMBER_VALUE","SINTETICO_ANALITICO_TIPO_NUMBER_VALUE_ENUM_VALUES","SINTETICO_NUMBER","intValue","GO"],"mappings":"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","file":"static/js/87.083b3876.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { Col, CustomInput, FormGroup, Label, Row } from 'reactstrap';\r\nimport { InputGroupInline, InputType, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasEmpresa } from '../../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMLF } from '../../../../../../dependencies/empresaMLFDependency';\r\nimport { getDefaultPrinterDataBasic, PrinterDataBasic } from '../../../../../../models/dtos/ger/printerDataBasic';\r\nimport { DATES } from '../../../../../../models/enumerated/ger/printerConfigTypeEnum';\r\nimport { UF_ENUM_VALUES } from '../../../../../../models/enumerated/ger/ufEnum';\r\nimport { ANALITICO, SINTETICO } from '../../../../../../models/enumerated/mcg/sinteticoAnaliticoTipoEnum';\r\nimport { ORIGEM_LANCAMENTO_MLF_ENUM_VALUES } from '../../../../../../models/enumerated/mlf/origemLancamentoMLFEnum';\r\nimport { Reducers } from '../../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../../store/ducks/global.duck';\r\nimport ReportFormView from '../../../../report/ReportFormView';\r\nimport { CLASS_KEY, RelacaoEntradaSaidaRV } from '../relacaoEntradaSaidaRV';\r\n\r\nexport const REPORT_EVENT: string = 'printRelacaoEntradaEstado';\r\nexport const REPORT_TITLE = 'Relação de Entradas Por Estado (UF)';\r\n\r\nconst BASIC_DATA: PrinterDataBasic = {\r\n  ...getDefaultPrinterDataBasic(REPORT_TITLE, REPORT_EVENT, CLASS_KEY, DATES.value),\r\n  dtFinal: '31/12/2017',\r\n  dtInicial: '01/12/2017',\r\n};\r\n\r\nexport default function RelacaoEntradaEstadoReportView(props: WindowComponentProps) {\r\n  const history = useHistory();\r\n\r\n  const formProps = useForm<RelacaoEntradaSaidaRV>({ mode: 'onBlur' });\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (globalReducer.globalParameter.empresa !== null) {\r\n        const id = globalReducer.globalParameter.empresa.id;\r\n        setTimeout(() => {\r\n          formProps.setValue('idGerEmpresa', id);\r\n          formProps.setValue('sintetico', false);\r\n          formProps.setValue('uf', null);\r\n          formProps.triggerValidation('uf');\r\n        }, 800);\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  return (\r\n    <WindowComponent\r\n      {...props}\r\n      title={REPORT_TITLE}\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMLF(globalReducer.globalParameter)]}\r\n    >\r\n      <ReportFormView formProps={formProps} printerData={BASIC_DATA} history={history}>\r\n        <InputGroupInline formProps={formProps} id=\"idGerEmpresa\" hidden={true} />\r\n        <Row>\r\n          <Col>\r\n            <Label style={{ marginRight: 20 }}>Modelo do Relatório</Label>\r\n            <CustomInput\r\n              id=\"sinteticoFalse\"\r\n              value={'false'}\r\n              label={ANALITICO.label}\r\n              inline={true}\r\n              type=\"radio\"\r\n              name=\"sintetico\"\r\n              innerRef={formProps.register}\r\n            />\r\n            <CustomInput\r\n              id=\"sinteticoTrue\"\r\n              inline={true}\r\n              label={SINTETICO.label}\r\n              name=\"sintetico\"\r\n              value={'true'}\r\n              type=\"radio\"\r\n              innerRef={formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"origemLancamentoInt\"\r\n              label=\"Origem do Lançamento\"\r\n              isPrependLabel={true}\r\n              placeholder=\"Informe a Origem do Lançamento\"\r\n              formProps={formProps}\r\n              inputDropDownProps={{\r\n                optionsProvider: ORIGEM_LANCAMENTO_MLF_ENUM_VALUES,\r\n              }}\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"uf\"\r\n              label=\"Filtrar por\"\r\n              isPrependLabel={true}\r\n              placeholder=\"Informe o Estado para o filtro\"\r\n              formProps={formProps}\r\n              inputDropDownProps={{\r\n                optionsProvider: UF_ENUM_VALUES,\r\n              }}\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <FormGroup tag={Row}>\r\n          <Col>\r\n            <CustomInput id=\"subtotalDiario\" innerRef={formProps.register} label=\"Exibir Subtotais Por Dia\" name=\"subtotalDiario\" type=\"switch\" />\r\n          </Col>\r\n        </FormGroup>\r\n      </ReportFormView>\r\n    </WindowComponent>\r\n  );\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const SIMPLE = { label: '', value: '0' };\r\nexport const DATE = { label: '', value: '1' };\r\nexport const DATES = { label: '', value: '2' };\r\nexport const MONTHYEAR = { label: '', value: '3' };\r\nexport const MONTHYEARS = { label: '', value: '4' };\r\nexport const TINY = { label: '', value: '5' }; // TODO Remover\r\nexport const YEAR = { label: '', value: '6' };\r\nexport const QUARTER_YEAR = { label: '', value: '7' }; // TODO Remover\r\n\r\nconst PRINTER_CONFIG_TYPE_ENUM = [SIMPLE, DATE, DATES, MONTHYEAR, MONTHYEARS, TINY, YEAR, QUARTER_YEAR];\r\n\r\nexport default PRINTER_CONFIG_TYPE_ENUM;\r\n","export const TEXT = { label: 'Texto - CalimaDesk', value: 'texto' };\r\nexport const GRAPHIC = { label: 'Gráfico - PDF', value: 'grafico' };\r\nexport const EMAIL = { label: 'E-mail - PDF', value: 'email' };\r\n\r\nconst PRINTER_TYPE_ENUM = [TEXT, GRAPHIC, EMAIL];\r\n\r\nexport default PRINTER_TYPE_ENUM;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMLF(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMLF) {\r\n    result =\r\n      'A empresa fiscal da empresa selecionada deve estar configurada. Para configurar acesse:\\n' +\r\n      'Módulo Fiscal > Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n","import { SIMPLE } from '../../enumerated/ger/printerConfigTypeEnum';\r\nimport { GRAPHIC } from '../../enumerated/ger/printerTypeEnum';\r\nimport { PrinterDataEmail } from './printerDataEmail';\r\n\r\nexport interface PrinterDataBasic {\r\n  printerTypeEnum?: string;\r\n  dtInicial?: string;\r\n  dtFinal?: string;\r\n  refInicial?: string;\r\n  refFinal?: string;\r\n  reportSequence?: boolean;\r\n  pageNumber?: string;\r\n  title?: string;\r\n  printerDataEmail?: PrinterDataEmail;\r\n  passObj?: any;\r\n  printerConfigTypeEnum?: string;\r\n\r\n  dtInicialLabel?: string;\r\n  dtFinalLabel?: string;\r\n  refInicialLabel?: string;\r\n  refFinalLabel?: string;\r\n  anoLabel?: string;\r\n\r\n  reportEventType: string;\r\n  classKey: string;\r\n  module: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.printerdatabasicdto';\r\n\r\nexport function getDefaultPrinterDataBasic(\r\n  title: string,\r\n  reportEventType: string,\r\n  classKey: string,\r\n  printerConfigTypeEnum: string = SIMPLE.value,\r\n  module: string = 'MLF'\r\n) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    classKey,\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    module,\r\n    pageNumber: '1',\r\n    passObj: {},\r\n    printerConfigTypeEnum,\r\n    printerDataEmail: {},\r\n    printerTypeEnum: GRAPHIC.value,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportSequence: false,\r\n    title,\r\n  };\r\n}\r\n","import { saveAs } from 'file-saver';\r\nimport React, { FC, useEffect } from 'react';\r\nimport { Col, CustomInput, Form, Row } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  currentMomentDate,\r\n  ErroList,\r\n  ERROR,\r\n  format,\r\n  formatDate,\r\n  INFORMATION,\r\n  InputGroupInline,\r\n  InputType,\r\n  ProcessBar,\r\n  REF_PATTERN,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { PrinterDataBasic } from '../../../models/dtos/ger/printerDataBasic';\r\nimport { DATE, DATES, MONTHYEAR, MONTHYEARS, YEAR } from '../../../models/enumerated/ger/printerConfigTypeEnum';\r\nimport PRINTER_TYPE_ENUM, { GRAPHIC } from '../../../models/enumerated/ger/printerTypeEnum';\r\nimport { downloadOldReport, gerarOldReport } from '../../../services/report.service';\r\n\r\nexport interface ReportWindowComponentProps {\r\n  formProps: UseFormProps;\r\n  printerData?: PrinterDataBasic;\r\n  history?: any;\r\n  /** Função de validações extras */\r\n  validateExtras?: (printerData: PrinterDataBasic, formData: any) => string[];\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportFormView: FC<ReportWindowComponentProps> = props => {\r\n  useEffect(\r\n    () => {\r\n      const { printerTypeEnum, printerConfigTypeEnum } = props.printerData;\r\n      let resetObject: any = {\r\n        ...props.printerData,\r\n        printerTypeEnum: printerTypeEnum && printerTypeEnum.length > 0 ? printerTypeEnum[0] : GRAPHIC.value,\r\n      };\r\n\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (printerConfigTypeEnum) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case MONTHYEAR.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case MONTHYEARS.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case YEAR.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      props.formProps.reset(resetObject);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.printerData.printerConfigTypeEnum, props.printerData.printerTypeEnum]\r\n  );\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(props.printerData, data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      props.printerData.passObj = data;\r\n      showToast('Seu relatório está sendo gerado...', { ...INFORMATION, delay: 3000 });\r\n      gerarOldReport(props.printerData, {\r\n        errorFunction: (mensagem: string) => {\r\n          showToast(mensagem, ERROR);\r\n        },\r\n        thenFunction: () => {\r\n          downloadOldReport({\r\n            errorFunction: (mensagem: string) => {\r\n              showToast(mensagem, ERROR);\r\n            },\r\n            thenFunction: (response: any) => {\r\n              const contentDisposition = response.headers['content-disposition'];\r\n              const filename = contentDisposition\r\n                .slice(0, contentDisposition.lastIndexOf(';'))\r\n                .split('filename=')[1]\r\n                .replace(/\"/g, '');\r\n              saveAs(response.data, filename);\r\n            },\r\n          });\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.printerData.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.printerData.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: true } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.printerData.printerConfigTypeEnum === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.printerData.printerConfigTypeEnum === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.printerData.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: true } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"refInicial\"\r\n      label={props.printerData.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: true } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.printerData.printerConfigTypeEnum === MONTHYEAR.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.printerData.printerConfigTypeEnum === MONTHYEARS.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"refFinal\"\r\n          label={props.printerData.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: true } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.printerData.printerConfigTypeEnum === YEAR.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.printerData.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n\r\n      <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n        <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n          <InputGroupInline\r\n            id=\"title\"\r\n            label=\"Título\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Título\"\r\n            iconAppend=\"undo-alt\"\r\n            appendClickHandler={restoreTitle}\r\n            formProps={{\r\n              ...props.formProps,\r\n              validation: {\r\n                maxLength: 120,\r\n                minLength: 5,\r\n                required: true,\r\n              },\r\n            }}\r\n          />\r\n\r\n          <InputGroupInline\r\n            id=\"pageNumber\"\r\n            label=\"Página Inicial\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Página Inicial\"\r\n            formProps={{\r\n              ...props.formProps,\r\n              validation: {\r\n                min: 0,\r\n                required: true,\r\n              },\r\n            }}\r\n            type={InputType.NUMBER}\r\n          />\r\n\r\n          <Row className=\"mb-3 mt-3\">\r\n            <Col>\r\n              <CustomInput\r\n                type=\"switch\"\r\n                label=\"Sequenciar Relatórios\"\r\n                id=\"reportSequence\"\r\n                name=\"reportSequence\"\r\n                innerRef={props.formProps.register}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          {dateComponent}\r\n          {datesComponent}\r\n          {referenceComponent}\r\n          {referencesComponent}\r\n          {anoComponent}\r\n\r\n          <InputGroupInline\r\n            id=\"printerTypeEnum\"\r\n            label=\"Tipo de Impressão\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Selecione o tipo de impressão\"\r\n            formProps={{ ...props.formProps, validation: { required: true } }}\r\n            inputDropDownProps={{\r\n              optionsProvider: PRINTER_TYPE_ENUM,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n        </AccordionItem>\r\n      </Accordion>\r\n\r\n      <ProcessBar handleSubmit={props.formProps.handleSubmit(onSubmit)} hideCancelButton={true} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportFormView;\r\n","import { Cfop } from '../../../../../models/dtos/ger/cfop';\r\n\r\nexport interface RelacaoEntradaSaidaRV {\r\n  idGerEmpresa?: number;\r\n  /** este campo utiliza o enum origemLancamentoMLFEnum */\r\n  origemLancamentoInt?: number;\r\n  sintetico?: boolean;\r\n  dataInicialStr?: string;\r\n  dataFinalStr?: string;\r\n  modelo?: boolean;\r\n  ordemEnum?: number;\r\n  subtotalDiario?: boolean;\r\n  /** este campo utiliza o enum ufEnum */\r\n  uf?: string;\r\n  cfops?: Cfop[];\r\n  /** este campo utiliza o enum EnumTipoPagamento */\r\n  tipoPagamento?: string;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'relacaoentradasaidarelpass';\r\n","export const ANALITICO_NUMBER = { label: 'Analítico', value: '1' };\r\nexport const SINTETICO_NUMBER = { label: 'Sintético', value: '2' };\r\nexport const GRAU_CONTA_NUMBER = { label: 'Grau da Conta', value: '3' };\r\n\r\nexport const SINTETICO_ANALITICO_VALUES = [ANALITICO_NUMBER, SINTETICO_NUMBER];\r\n\r\nexport const SINTETICO_ANALITICO_TIPO_ENUM_VALUES = [ANALITICO_NUMBER, SINTETICO_NUMBER, GRAU_CONTA_NUMBER];\r\n\r\nexport const ANALITICO = { label: 'Analítico', value: 'analitico' };\r\nexport const SINTETICO = { label: 'Sintético', value: 'sintetico' };\r\nexport const GRAU_CONTA = { label: 'Grau da Conta', value: 'grauConta' };\r\n\r\nexport const SINTETICO_ANALITICO_TIPO_VALUE_STRING_ENUM_VALUES = [ANALITICO, SINTETICO, GRAU_CONTA];\r\n\r\nexport const ANALITICO_NUMBER_VALUE = { label: 'Analítico', value: 1 };\r\nexport const SINTETICO_NUMBER_VALUE = { label: 'Sintético', value: 2 };\r\nexport const GRAU_CONTA_NUMBER_VALUE = { label: 'Grau da Conta', value: 3 };\r\n\r\nexport const SINTETICO_ANALITICO_TIPO_NUMBER_VALUE_ENUM_VALUES = [ANALITICO_NUMBER_VALUE, SINTETICO_NUMBER_VALUE, GRAU_CONTA_NUMBER_VALUE];\r\n","export const MANUAL = {\r\n  intValue: [0],\r\n  label: 'Manual',\r\n  value: 0,\r\n};\r\nexport const ARQUIVO_DIGITAL_XML_TXT = {\r\n  intValue: [1],\r\n  label: 'Arquivo Digital (XML e TXT)',\r\n  value: 1,\r\n};\r\nexport const SINTEGRA = {\r\n  intValue: [2],\r\n  label: 'SINTEGRA',\r\n  value: 2,\r\n};\r\nexport const SPED = {\r\n  intValue: [3],\r\n  label: 'SPED',\r\n  value: 3,\r\n};\r\nexport const INTEGRACAO_REST_JSON = {\r\n  intValue: [4],\r\n  label: 'Integração Rest (JSON)',\r\n  value: 4,\r\n};\r\n\r\nexport const ORIGEM_LANCAMENTO_MLF_ENUM_VALUES = [MANUAL, ARQUIVO_DIGITAL_XML_TXT, SINTEGRA, SPED, INTEGRACAO_REST_JSON];\r\n","export const AC = { label: 'Acre', value: 'AC' };\r\nexport const AL = { label: 'Alagoas', value: 'AL' };\r\nexport const AP = { label: 'Amapá', value: 'AP' };\r\nexport const AM = { label: 'Amazonas', value: 'AM' };\r\nexport const BA = { label: 'Bahia', value: 'BA' };\r\nexport const CE = { label: 'Ceará', value: 'CE' };\r\nexport const DF = { label: 'Distrito Federal', value: 'DF' };\r\nexport const ES = { label: 'Espírito Santo', value: 'ES' };\r\nexport const GO = { label: 'Goiás', value: 'GO' };\r\nexport const MA = { label: 'Maranhão', value: 'MA' };\r\nexport const MT = { label: 'Mato Grosso', value: 'MT' };\r\nexport const MG = { label: 'Minas Gerais', value: 'MG' };\r\nexport const PA = { label: 'Pará', value: 'PA' };\r\nexport const PB = { label: 'Paraíba', value: 'PB' };\r\nexport const PR = { label: 'Paraná', value: 'PR' };\r\nexport const PE = { label: 'Pernambuco', value: 'PE' };\r\nexport const PI = { label: 'Piauí', value: 'PI' };\r\nexport const RJ = { label: 'Rio de Janeiro', value: 'RJ' };\r\nexport const RN = { label: 'Rio Grande do Norte', value: 'RN' };\r\nexport const RS = { label: 'Rio Grande do Sul', value: 'RS' };\r\nexport const RO = { label: 'Rondônia', value: 'RO' };\r\nexport const RR = { label: 'Roraima', value: 'RR' };\r\nexport const SC = { label: 'Santa Catarina', value: 'SC' };\r\nexport const SP = { label: 'São Paulo', value: 'SP' };\r\nexport const SE = { label: 'Sergipe', value: 'SE' };\r\nexport const TO = { label: 'Tocantins', value: 'TO' };\r\n\r\nexport const UF_ENUM_VALUES = [AC, AL, AP, AM, BA, CE, DF, ES, GO, MA, MT, MG, PA, PB, PR, PE, PI, RJ, RN, RS, RO, RR, SC, SP, SE, TO];\r\n"],"sourceRoot":""}
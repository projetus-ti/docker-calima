{"version":3,"sources":["models/enumerated/mcg/balanceteCentroCustoOrdemEnum.ts","models/enumerated/mcg/planoContaGERTipoSelecaoEnum.ts","views/pages/mcg/report/balanceteComparativo/balanceteComparativoRV.ts","views/pages/mcg/report/balanceteComparativo/BalanceteComparativoReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","views/components/mcg/planoContaIS/PlanoContaIS.tsx","models/dtos/ger/planoConta.ts","models/enumerated/mcg/consolidarEnum.ts"],"names":["__webpack_require__","d","__webpack_exports__","CONTA","BALANCETE_CENTRO_CUSTO_ORDEM_ENUM_VALUES","value","label","TODAS_CONTAS","PLANO_CONTA_GER_TIPO_SELECAO_ENUM_VALUES","DEFAULT_VALUES","Object","objectSpread2","getDefaultReportBasicValues","consolidacao","NORMAL","exibirFormatacaoValor","isTodasContas","ordemImpressao","selectionContas","virtualization","DEFAULT_OPTIONS","getDefaultReportViewOptions","REFERENCES","exibirConfiguracaoDadosEmpresa","exibirImprimirValoresColoridos","exibirSegmentacaoFolha","refFinalRequired","refInicialRequired","BalanceteComparativoReportView","props","globalReducer","useSelector","state","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","isEnabledIsMatriz","setIsEnabledIsMatriz","_useState3","_useState4","isEnabledContas","setIsEnabledContas","useEffect","globalParameter","empresa","setTimeout","matriz","getValues","isAcumularMatrizFilial","centralizar","acumularMatrizFilial","react_default","a","createElement","Col","CustomInput","type","onChange","reportTitle","setValue","name","id","innerRef","register","Row","PlanoContaIS","inputSearchProps","selectProps","isMulti","placeholder","summer_esm","title","useGlobalParameter","dependencies","hasEmpresa","wikiId","hidden","className","isPrependLabel","validation","required","inputDropDownProps","optionsProvider","isClearable","InputType","DROP_DOWN","CONSOLIDAR_ENUM_VALUES","ReportForm","assign","localStorageKey","routeProps","reportBasicValues","reportViewOptions","result","NATUREZA","SALDO_REPORT_ENUM","EmpresaIS","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","empresasSelecionadas","envioEmail","anexos","assunto","destinatarios","gerarBom","gerarCabecalhoPadrao","gerarCabecalhoPadraoAdministradora","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","errors","triggerValidation","handleCancel","validateExtras","currentItem","currentValues","parentObject","EnvioEmail","Fragment","sort","detailView","keyField","propName","maxLength","TEXT_AREA","ReportInputs","activeTab","setActiveTab","_props$reportViewOpti","printingTypes","resetObject","length","idGerEmpresa","current","currentMomentDate","endDate","DATE","dtInicial","formatDate","toDate","DATES","dtFinal","endOf","REFERENCE","referenciaInicial","format","REF_PATTERN","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dtInicialRequired","dateComponent","datesComponent","dtFinalRequired","referenceInitial","referenceComponent","referencesComponent","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","NUMBER","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","inputProps","disabled","gerarPorEmpresas","style","marginBottom","size","segmentacaoFolhaComponent","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","firstOpen","extraConfigOpened","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","erros","params","message","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history","summer__WEBPACK_IMPORTED_MODULE_3__","searchViewProps","filtroContaResultado","hideExtraFields","useDefaultSelectRow","searchExpressions","expressions","analitica","push","alias","conditionalGroup","fieldName","sintetica","forEach","filtro","idGrupoPlanoConta","grupoPlanoConta","NORMAL_NUMBER","GRUPO_ATUAL_NUMBER","CONSOLIDAR_NUMBER_ENUM_VALUES"],"mappings":"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","file":"static/js/89.4da7c9ff.chunk.js","sourcesContent":["export const CONTA = { value: 1, label: 'Conta' };\r\nexport const DESCRICAO = { value: 2, label: 'Descrição' };\r\n\r\nexport const BALANCETE_CENTRO_CUSTO_ORDEM_ENUM_VALUES = [CONTA, DESCRICAO];\r\n","export const TODAS_CONTAS = { label: 'Todas', value: 1 };\r\nexport const POR_SELECAO = { label: 'Por Seleção', value: 2 };\r\n\r\nexport const PLANO_CONTA_GER_TIPO_SELECAO_ENUM_VALUES = [TODAS_CONTAS, POR_SELECAO];\r\n","import { PlanoConta } from '../../../../../models/dtos/ger/planoConta';\r\nimport { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\n\r\nexport interface BalanceteComparativoRV extends ReportBasicValues {\r\n  ordemImpressao?: number;\r\n  consolidacao?: string;\r\n  isTodasContas?: boolean;\r\n  lstContas?: PlanoConta[];\r\n  isCompararPeriodoAnterior?: boolean;\r\n  totalContas?: number;\r\n  isAcumularMatrizFilial?: boolean;\r\n  selectionContas?: number;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'balancetecomparativoanualrelrv';\r\nexport const REPORT_TITLE: string = 'Balancete - Comparativo';\r\nexport const REPORT_EVENT: string = 'printBalanceteComparativoAnual';\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { InputGroupInline, InputType, REFERENCES, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { getDefaultReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport { BALANCETE_CENTRO_CUSTO_ORDEM_ENUM_VALUES, CONTA } from '../../../../../models/enumerated/mcg/balanceteCentroCustoOrdemEnum';\r\nimport { CONSOLIDAR_ENUM_VALUES, NORMAL } from '../../../../../models/enumerated/mcg/consolidarEnum';\r\nimport { PLANO_CONTA_GER_TIPO_SELECAO_ENUM_VALUES, TODAS_CONTAS } from '../../../../../models/enumerated/mcg/planoContaGERTipoSelecaoEnum';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport PlanoContaIS from '../../../../components/mcg/planoContaIS/PlanoContaIS';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { BalanceteComparativoRV, CLASS_KEY, REPORT_EVENT, REPORT_TITLE } from './balanceteComparativoRV';\r\n\r\nconst DEFAULT_VALUES: BalanceteComparativoRV = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n  consolidacao: NORMAL.value,\r\n  exibirFormatacaoValor: true,\r\n  isTodasContas: true,\r\n  ordemImpressao: CONTA.value,\r\n  selectionContas: TODAS_CONTAS.value,\r\n  virtualization: true,\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT, REFERENCES.value),\r\n  exibirConfiguracaoDadosEmpresa: false,\r\n  exibirImprimirValoresColoridos: true,\r\n  exibirSegmentacaoFolha: true,\r\n  refFinalRequired: true,\r\n  refInicialRequired: true,\r\n};\r\n\r\nconst BalanceteComparativoReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const { handleSubmit, ...formProps } = useForm<BalanceteComparativoRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n\r\n  const [isEnabledIsMatriz, setIsEnabledIsMatriz] = useState(false);\r\n  const [isEnabledContas, setIsEnabledContas] = useState(false);\r\n\r\n  const carregarParametroEmpresa = () => {\r\n    if (globalReducer.globalParameter.empresa.matriz === null) {\r\n      setIsEnabledIsMatriz(true);\r\n      formProps.getValues().isAcumularMatrizFilial = globalReducer.globalParameter.empresa.centralizar;\r\n    }\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (globalReducer.globalParameter.empresa) {\r\n        setTimeout(() => {\r\n          carregarParametroEmpresa();\r\n        }, 1000);\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const onSelectionContas = () => {\r\n    if (formProps.getValues().selectionContas === TODAS_CONTAS.value) {\r\n      setIsEnabledContas(false);\r\n      formProps.setValue('isTodasContas', true, true);\r\n    } else {\r\n      setIsEnabledContas(true);\r\n      formProps.setValue('isTodasContas', false, true);\r\n      formProps.setValue('lstContas', [], true);\r\n    }\r\n  };\r\n\r\n  const adjustTitle = () => {\r\n    let reportTitle: string = REPORT_TITLE;\r\n\r\n    if (formProps.getValues().isAcumularMatrizFilial) {\r\n      reportTitle += '- Consolidade';\r\n    }\r\n\r\n    formProps.setValue('title', reportTitle);\r\n  };\r\n\r\n  const acumularMatrizFilial = isEnabledIsMatriz ? (\r\n    <Col>\r\n      <CustomInput\r\n        type=\"switch\"\r\n        onChange={adjustTitle}\r\n        label=\"Acumular Matriz e Filiais\"\r\n        name=\"isAcumularMatrizFilial\"\r\n        id=\"isAcumularMatrizFilial\"\r\n        innerRef={formProps.register}\r\n      />\r\n    </Col>\r\n  ) : null;\r\n\r\n  const selectionContas = isEnabledContas ? (\r\n    <Row>\r\n      <Col>\r\n        <PlanoContaIS\r\n          id=\"lstContas\"\r\n          label=\"Plano de Conta\"\r\n          formProps={formProps}\r\n          inputSearchProps={{ selectProps: { isMulti: true } }}\r\n          placeholder=\"Selecione os Planos de Contas\"\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Balancete - Comparativo\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter)]}\r\n      wikiId={1816}\r\n    >\r\n      <InputGroupInline formProps={formProps} id=\"isTodasContas\" hidden={true} />\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            label=\"Comparar com o Período Anterior\"\r\n            name=\"isCompararPeriodoAnterior\"\r\n            id=\"isCompararPeriodoAnterior\"\r\n            innerRef={formProps.register}\r\n          />\r\n        </Col>\r\n        {acumularMatrizFilial}\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"ordemImpressao\"\r\n            label=\"Ordem de Impressão\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Selecione a Ordem de Impressão\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            inputDropDownProps={{\r\n              optionsProvider: BALANCETE_CENTRO_CUSTO_ORDEM_ENUM_VALUES,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"consolidacao\"\r\n            label=\"Consolidação\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Selecione uma consolidação\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            inputDropDownProps={{\r\n              optionsProvider: CONSOLIDAR_ENUM_VALUES,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"selectionContas\"\r\n            label=\"Contas\"\r\n            isPrependLabel={true}\r\n            onChange={onSelectionContas}\r\n            placeholder=\"Selecione as contas\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            inputDropDownProps={{\r\n              optionsProvider: PLANO_CONTA_GER_TIPO_SELECAO_ENUM_VALUES,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      {selectionContas}\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n      />\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default BalanceteComparativoReportView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","import React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/planoConta';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\nexport interface PlanoContaInputSearchProps extends InputProps {\r\n  analitica?: boolean;\r\n  sintetica?: boolean;\r\n  idGrupoPlanoConta?: number;\r\n  filtroContaResultado?: SearchExpression[];\r\n}\r\n\r\nconst PlanoContaIS: FC<PlanoContaInputSearchProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const getSearchExpression = (): SearchExpression[] => {\r\n    const expressions: SearchExpression[] = [];\r\n    if (props.analitica) {\r\n      expressions.push({\r\n        alias: 'c',\r\n        conditionalGroup: 'c_',\r\n        fieldName: 'analitica',\r\n        value: true,\r\n      });\r\n    }\r\n    if (props.sintetica) {\r\n      expressions.push({\r\n        alias: 'c',\r\n        conditionalGroup: 'c_',\r\n        fieldName: 'analitica',\r\n        value: false,\r\n      });\r\n    }\r\n\r\n    if (props.filtroContaResultado) {\r\n      props.filtroContaResultado.forEach(filtro => {\r\n        expressions.push(filtro);\r\n      });\r\n    }\r\n\r\n    return [\r\n      {\r\n        conditionalGroup: 'g_',\r\n        expressions,\r\n        fieldName: 'grupoPlanoConta.id',\r\n        value: props.idGrupoPlanoConta || globalReducer.globalParameter.grupoPlanoConta.id,\r\n      },\r\n    ];\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      searchViewProps={{\r\n        ...props.searchViewProps,\r\n        filtroContaResultado: props.filtroContaResultado,\r\n        hideExtraFields: true,\r\n        useDefaultSelectRow: true,\r\n      }}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'conta',\r\n            text: 'Conta',\r\n          },\r\n          {\r\n            dataField: 'analitica',\r\n            text: 'Analítica',\r\n          },\r\n          {\r\n            dataField: 'codigoReduzido',\r\n            text: 'C.R.',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressions: getSearchExpression,\r\n        searchViewId: 'PlanoContaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Plano de Contas'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Plano de Contas'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PlanoContaIS;\r\n","import { Basic } from 'summer';\r\nimport { PlanoContaMCG } from '../mcg/planoContaMCG';\r\nimport { SaldoAnterior } from '../mcg/saldoAnterior';\r\nimport { PlanoContaMCP } from '../mcp/planoContaMCP';\r\nimport { GrupoPlanoConta } from './grupoPlanoConta';\r\n\r\nexport interface PlanoConta extends Basic {\r\n  analitica?: boolean;\r\n  conta?: string;\r\n  codigoReduzido?: number;\r\n  descricao?: string;\r\n  grupoPlanoConta?: GrupoPlanoConta;\r\n  mcgPlanoConta?: PlanoContaMCG;\r\n  mcpPlanoConta?: PlanoContaMCP;\r\n  saldoAnterior?: SaldoAnterior;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.planoconta';\r\n","export const NORMAL = { value: '1', label: 'Normal' };\r\nexport const GRUPO_ATUAL = { value: '2', label: 'Grupo Atual' };\r\nexport const HIERARQUIA_INFERIOR = { value: '3', label: 'Hierarquia Inferior' };\r\n\r\nexport const CONSOLIDAR_ENUM_VALUES = [NORMAL, GRUPO_ATUAL, HIERARQUIA_INFERIOR];\r\n\r\nexport const NORMAL_NUMBER = { value: 1, label: 'Normal' };\r\nexport const GRUPO_ATUAL_NUMBER = { value: 2, label: 'Grupo Atual' };\r\nexport const HIERARQUIA_INFERIOR_NUMBER = { value: 3, label: 'Hierarquia Inferior' };\r\n\r\nexport const CONSOLIDAR_NUMBER_ENUM_VALUES = [NORMAL_NUMBER, GRUPO_ATUAL_NUMBER, HIERARQUIA_INFERIOR_NUMBER];\r\n"],"sourceRoot":""}
{"version":3,"sources":["models/enumerated/mcg/opcaoDataTipoEnum.ts","views/pages/mcg/report/balanceteNormal/balanceteNormalRelRV.ts","views/pages/mcg/report/balanceteNormal/BalanceteNormalReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","models/enumerated/mcg/sinteticoAnaliticoTipoEnum.ts","models/enumerated/mcg/consolidarEnum.ts"],"names":["__webpack_require__","d","__webpack_exports__","DT_EMISSAO","OPCAO_DATA_TIPO_ENUM_VALUES","value","label","CLASS_KEY","REPORT_TITLE","REPORT_EVENT","DEFAULT_VALUES","Object","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__","getDefaultReportBasicValues","consolidacao","NORMAL","exibirFormatacaoValor","grau","marcarContasSinteticasNegrito","tipo","ANALITICO","tipoData","virtualization","DEFAULT_OPTIONS","getDefaultReportViewOptions","DATES","dtFinalRequired","dtInicialRequired","exibirConfiguracaoDadosEmpresa","exibirImprimirValoresColoridos","exibirSegmentacaoFolha","BalanceteNormalReportView","props","globalReducer","useSelector","state","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","_useState","useState","_useState2","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isEnabledGrau","setIsEnabledGrau","_useState3","_useState4","isEnabledGrupo","setIsEnabledGrupo","_useState5","_useState6","isEnabledIsMatriz","setIsEnabledIsMatriz","useEffect","globalParameter","empresa","matriz","getValues","matrizFilial","centralizar","acumularMatrizFilial","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","type","name","id","innerRef","register","onChangeTitle","GRAU_CONTA","title","acumularReferencias","SINTETICO","setValue","adjustTitle","propToolTip","messagem","message","placement","summer__WEBPACK_IMPORTED_MODULE_10__","useGlobalParameter","dependencies","hasEmpresa","reactstrap__WEBPACK_IMPORTED_MODULE_8__","isPrependLabel","placeholder","validation","required","onChange","inputDropDownProps","optionsProvider","SINTETICO_ANALITICO_TIPO_VALUE_STRING_ENUM_VALUES","selectProps","isClearable","InputType","DROP_DOWN","max","disabled","NUMBER","reactstrap__WEBPACK_IMPORTED_MODULE_9__","tag","Row","withTooltip","className","quebrarPaginaFimGrupo","CONSOLIDAR_ENUM_VALUES","DATE","tooltipProps","_components_report_ReportForm__WEBPACK_IMPORTED_MODULE_17__","assign","localStorageKey","routeProps","reportBasicValues","reportViewOptions","validateExtras","erros","Number","push","tamanhoGrupo","result","NATUREZA","SALDO_REPORT_ENUM","EmpresaIS","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","inputSearchProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","empresasSelecionadas","envioEmail","anexos","assunto","destinatarios","gerarBom","gerarCabecalhoPadrao","gerarCabecalhoPadraoAdministradora","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","errors","triggerValidation","react_default","summer_esm","handleCancel","currentItem","currentValues","parentObject","objectSpread2","EnvioEmail","Fragment","sort","detailView","keyField","propName","Col","CustomInput","maxLength","TEXT_AREA","ReportInputs","slicedToArray","activeTab","setActiveTab","_props$reportViewOpti","printingTypes","resetObject","length","idGerEmpresa","current","currentMomentDate","endDate","dtInicial","formatDate","toDate","dtFinal","endOf","REFERENCE","referenciaInicial","format","REF_PATTERN","REFERENCES","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dateComponent","datesComponent","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","inputProps","gerarPorEmpresas","style","marginBottom","size","isMulti","segmentacaoFolhaComponent","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","firstOpen","extraConfigOpened","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","hidden","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","ReportForm","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","params","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history","ANALITICO_NUMBER","GRAU_CONTA_NUMBER","SINTETICO_ANALITICO_VALUES","SINTETICO_ANALITICO_TIPO_ENUM_VALUES","ANALITICO_NUMBER_VALUE","SINTETICO_NUMBER_VALUE","GRAU_CONTA_NUMBER_VALUE","SINTETICO_ANALITICO_TIPO_NUMBER_VALUE_ENUM_VALUES","SINTETICO_NUMBER","NORMAL_NUMBER","GRUPO_ATUAL_NUMBER","CONSOLIDAR_NUMBER_ENUM_VALUES"],"mappings":"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","file":"static/js/90.3afa68f0.chunk.js","sourcesContent":["export const DT_EMISSAO = { value: 'DTEMISSAO', label: 'Imprimir Data/Hora de Emissão' };\r\nexport const DT_EXTENSO = { value: 'DTEXTENSO', label: 'Imprimir Data por Extenso' };\r\nexport const SEM_DATA = { value: 'SEMDATA', label: 'Não Imprimir Data/Hora de Impressão' };\r\n\r\nexport const OPCAO_DATA_TIPO_ENUM_VALUES = [DT_EMISSAO, DT_EXTENSO, SEM_DATA];\r\n","import { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\n\r\nexport interface BalanceteNormalRelRV extends ReportBasicValues {\r\n  acumularDRE?: boolean;\r\n  acumularReferencias?: boolean;\r\n  alinharEsquerda?: boolean;\r\n  consolidacao?: string;\r\n  dtAssinatura?: string;\r\n  exibirReferenciaFormatoData?: boolean;\r\n  grau?: number;\r\n  marcarContasSinteticasNegrito?: boolean;\r\n  matrizFilial?: boolean;\r\n  quebrarPaginaFimGrupo?: boolean;\r\n  somenteContasMovimentada?: boolean;\r\n  tamanhoGrupo?: number;\r\n  tipo?: string;\r\n  tipoData?: string;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'balancetenormalrelrv';\r\nexport const REPORT_TITLE: string = 'BALANCETE';\r\nexport const REPORT_EVENT: string = 'printBalanceteNormalNovo';\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, CustomInput, FormGroup, Row } from 'reactstrap';\r\nimport { DATES, InputGroupInline, InputTooltipProps, InputType, WindowComponent, WindowComponentProps, withTooltip } from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { getDefaultReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport { CONSOLIDAR_ENUM_VALUES, NORMAL } from '../../../../../models/enumerated/mcg/consolidarEnum';\r\nimport { DT_EMISSAO, OPCAO_DATA_TIPO_ENUM_VALUES } from '../../../../../models/enumerated/mcg/opcaoDataTipoEnum';\r\nimport {\r\n  ANALITICO,\r\n  GRAU_CONTA,\r\n  SINTETICO,\r\n  SINTETICO_ANALITICO_TIPO_VALUE_STRING_ENUM_VALUES,\r\n} from '../../../../../models/enumerated/mcg/sinteticoAnaliticoTipoEnum';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { BalanceteNormalRelRV, CLASS_KEY, REPORT_EVENT, REPORT_TITLE } from './balanceteNormalRelRV';\r\n\r\nconst DEFAULT_VALUES: BalanceteNormalRelRV = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n  consolidacao: NORMAL.value,\r\n  exibirFormatacaoValor: true,\r\n  grau: 25,\r\n  marcarContasSinteticasNegrito: false,\r\n  tipo: ANALITICO.value,\r\n  tipoData: DT_EMISSAO.value,\r\n  virtualization: true,\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT, DATES.value),\r\n  dtFinalRequired: true,\r\n  dtInicialRequired: true,\r\n  exibirConfiguracaoDadosEmpresa: false,\r\n  exibirImprimirValoresColoridos: true,\r\n  exibirSegmentacaoFolha: true,\r\n};\r\n\r\nconst BalanceteNormalReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const { handleSubmit, ...formProps } = useForm<BalanceteNormalRelRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n\r\n  const [isEnabledGrau, setIsEnabledGrau] = useState(true);\r\n  const [isEnabledGrupo, setIsEnabledGrupo] = useState(true);\r\n  const [isEnabledIsMatriz, setIsEnabledIsMatriz] = useState(false);\r\n\r\n  const carregarParametroEmpresa = () => {\r\n    if (globalReducer.globalParameter.empresa.matriz === null) {\r\n      setIsEnabledIsMatriz(true);\r\n      formProps.getValues().matrizFilial = globalReducer.globalParameter.empresa.centralizar;\r\n    }\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (globalReducer.globalParameter.empresa) {\r\n        carregarParametroEmpresa();\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const validateExtras = () => {\r\n    const erros = [];\r\n\r\n    if (formProps.getValues().tipo === GRAU_CONTA.value && Number(formProps.getValues().grau) === 0) {\r\n      erros.push('Campo grau não pode ser igual a 0.');\r\n    }\r\n\r\n    if (formProps.getValues().quebrarPaginaFimGrupo === true && Number(formProps.getValues().tamanhoGrupo) === 0) {\r\n      erros.push('Campo Quantidade de classes agrupadas não pode ser igual a 0.');\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  const acumularMatrizFilial = isEnabledIsMatriz ? (\r\n    <Col>\r\n      <CustomInput type=\"switch\" label=\"Acumular Matriz e Filiais\" name=\"matrizFilial\" id=\"matrizFilial\" innerRef={formProps.register} />\r\n    </Col>\r\n  ) : null;\r\n\r\n  const adjustTitle = () => {\r\n    let title;\r\n    title = formProps.getValues().acumularReferencias === true ? 'BALANCETE ACUMULADO' : 'BALANCETE';\r\n    if (formProps.getValues().tipo === ANALITICO.value) {\r\n      title += ' ANALÍTICO';\r\n    } else if (formProps.getValues().tipo === SINTETICO.value) {\r\n      title += ' SINTÉTICO';\r\n    } else {\r\n      title += ' - GRAU ' + formProps.getValues().grau;\r\n    }\r\n\r\n    if (formProps.getValues().matrizFilial) {\r\n      title += ' - CONSOLIDADO';\r\n    }\r\n\r\n    formProps.setValue('title', title);\r\n  };\r\n\r\n  const enableGrau = () => {\r\n    if (formProps.getValues().tipo === GRAU_CONTA.value) {\r\n      setIsEnabledGrau(false);\r\n    } else {\r\n      setIsEnabledGrau(true);\r\n    }\r\n  };\r\n\r\n  const enableTamanhoGrupo = () => {\r\n    if (formProps.getValues().quebrarPaginaFimGrupo === true) {\r\n      setIsEnabledGrupo(false);\r\n    } else {\r\n      setIsEnabledGrupo(true);\r\n    }\r\n  };\r\n\r\n  const onChangeTitle = () => {\r\n    enableGrau();\r\n    adjustTitle();\r\n  };\r\n\r\n  const propToolTip = (messagem: string): InputTooltipProps => {\r\n    return {\r\n      message: messagem,\r\n      placement: 'top-start',\r\n    };\r\n  };\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Configuração de Balancete\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter)]}\r\n    >\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"tipo\"\r\n            label=\"Tipo de Relatório\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Selecione o tipo de relatório\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            onChange={onChangeTitle}\r\n            inputDropDownProps={{\r\n              optionsProvider: SINTETICO_ANALITICO_TIPO_VALUE_STRING_ENUM_VALUES,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"grau\"\r\n            label=\"Grau\"\r\n            isPrependLabel={true}\r\n            placeholder=\"digite o grau da conta\"\r\n            formProps={{ ...formProps, validation: { max: 2147483647 } }}\r\n            disabled={isEnabledGrau}\r\n            type={InputType.NUMBER}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <FormGroup tag={Row}>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            label=\"Acumular Referências\"\r\n            onChange={onChangeTitle}\r\n            name=\"acumularReferencias\"\r\n            id=\"acumularReferencias\"\r\n            innerRef={formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            label=\"Remover espaçamento dos títulos das contas\"\r\n            name=\"alinharEsquerda\"\r\n            id=\"idalinharEsquerda\"\r\n            innerRef={formProps.register}\r\n          />\r\n          {withTooltip(\r\n            propToolTip('Caso essa opção seja selecionada os títulos das contas ficarão sem os espaçamentos e alinhados à esquerda'),\r\n            'alinharEsquerda'\r\n          )}\r\n        </Col>\r\n      </FormGroup>\r\n      <FormGroup tag={Row}>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            label=\"Exibir referência no formato dd/mm/aaaa\"\r\n            name=\"exibirReferenciaFormatoData\"\r\n            id=\"idexibirReferenciaFormatoData\"\r\n            innerRef={formProps.register}\r\n          />\r\n          {withTooltip(\r\n            propToolTip('Caso essa opção seja selecionada a referência exibida no cabeçalho do relatório será no formato dd/mm/yyyy'),\r\n            'exibirReferenciaFormatoData'\r\n          )}\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            label=\"Exibir contas sintéticas em negrito\"\r\n            name=\"marcarContasSinteticasNegrito\"\r\n            id=\"idmarcarContasSinteticasNegrito\"\r\n            innerRef={formProps.register}\r\n          />\r\n          {withTooltip(\r\n            propToolTip('Caso essa opção seja selecionada as contas sintéticas serão exibidas em negrito.'),\r\n            'marcarContasSinteticasNegrito'\r\n          )}\r\n        </Col>\r\n      </FormGroup>\r\n      <FormGroup tag={Row}>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            label=\"Apresentar somente contas com movimentação\"\r\n            name=\"somenteContasMovimentada\"\r\n            id=\"idsomenteContasMovimentada\"\r\n            innerRef={formProps.register}\r\n          />\r\n          {withTooltip(\r\n            propToolTip('Caso essa opção seja selecionada só será exibido contas com movimentação no período'),\r\n            'somenteContasMovimentada'\r\n          )}\r\n        </Col>\r\n        {acumularMatrizFilial}\r\n      </FormGroup>\r\n      <Row className=\"mt-3\">\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"tipoData\"\r\n            label=\"Data\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Selecione o tipo de data\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            inputDropDownProps={{\r\n              optionsProvider: OPCAO_DATA_TIPO_ENUM_VALUES,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <hr />\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            label=\"Quebrar Página ao Fim de cada Classe\"\r\n            name=\"quebrarPaginaFimGrupo\"\r\n            id=\"idquebrarPaginaFimGrupo\"\r\n            onChange={enableTamanhoGrupo}\r\n            innerRef={formProps.register}\r\n          />\r\n          {withTooltip(\r\n            propToolTip('Quebrar página ao fim de cada classes do plano de contas - Ativo, Passivo, Receitas, Despesas.'),\r\n            'quebrarPaginaFimGrupo'\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"tamanhoGrupo\"\r\n            label=\"Quantidade de Classes Agrupadas\"\r\n            isPrependLabel={true}\r\n            placeholder=\"digite a quantidade de classes agrupadas\"\r\n            formProps={{ ...formProps, validation: { max: 2147483647 } }}\r\n            disabled={isEnabledGrupo}\r\n            type={InputType.NUMBER}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <hr />\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"consolidacao\"\r\n            label=\"Consolidação\"\r\n            isPrependLabel={true}\r\n            placeholder=\"Selecione uma consolidação\"\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            inputDropDownProps={{\r\n              optionsProvider: CONSOLIDAR_ENUM_VALUES,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            id=\"dtAssinatura\"\r\n            label=\"Data Assinatura\"\r\n            isPrependLabel={true}\r\n            placeholder=\"digite a data de assinatura\"\r\n            formProps={formProps}\r\n            type={InputType.DATE}\r\n            tooltipProps={propToolTip('Caso este campo esteja vazio a data de assinatura será o último dia da referência.')}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={{ ...DEFAULT_VALUES, ...{ title: 'BALANCETE ANALÍTICO' } }}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n        validateExtras={validateExtras}\r\n      />\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default BalanceteNormalReportView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","export const ANALITICO_NUMBER = { label: 'Analítico', value: '1' };\r\nexport const SINTETICO_NUMBER = { label: 'Sintético', value: '2' };\r\nexport const GRAU_CONTA_NUMBER = { label: 'Grau da Conta', value: '3' };\r\n\r\nexport const SINTETICO_ANALITICO_VALUES = [ANALITICO_NUMBER, SINTETICO_NUMBER];\r\n\r\nexport const SINTETICO_ANALITICO_TIPO_ENUM_VALUES = [ANALITICO_NUMBER, SINTETICO_NUMBER, GRAU_CONTA_NUMBER];\r\n\r\nexport const ANALITICO = { label: 'Analítico', value: 'analitico' };\r\nexport const SINTETICO = { label: 'Sintético', value: 'sintetico' };\r\nexport const GRAU_CONTA = { label: 'Grau da Conta', value: 'grauConta' };\r\n\r\nexport const SINTETICO_ANALITICO_TIPO_VALUE_STRING_ENUM_VALUES = [ANALITICO, SINTETICO, GRAU_CONTA];\r\n\r\nexport const ANALITICO_NUMBER_VALUE = { label: 'Analítico', value: 1 };\r\nexport const SINTETICO_NUMBER_VALUE = { label: 'Sintético', value: 2 };\r\nexport const GRAU_CONTA_NUMBER_VALUE = { label: 'Grau da Conta', value: 3 };\r\n\r\nexport const SINTETICO_ANALITICO_TIPO_NUMBER_VALUE_ENUM_VALUES = [ANALITICO_NUMBER_VALUE, SINTETICO_NUMBER_VALUE, GRAU_CONTA_NUMBER_VALUE];\r\n","export const NORMAL = { value: '1', label: 'Normal' };\r\nexport const GRUPO_ATUAL = { value: '2', label: 'Grupo Atual' };\r\nexport const HIERARQUIA_INFERIOR = { value: '3', label: 'Hierarquia Inferior' };\r\n\r\nexport const CONSOLIDAR_ENUM_VALUES = [NORMAL, GRUPO_ATUAL, HIERARQUIA_INFERIOR];\r\n\r\nexport const NORMAL_NUMBER = { value: 1, label: 'Normal' };\r\nexport const GRUPO_ATUAL_NUMBER = { value: 2, label: 'Grupo Atual' };\r\nexport const HIERARQUIA_INFERIOR_NUMBER = { value: 3, label: 'Hierarquia Inferior' };\r\n\r\nexport const CONSOLIDAR_NUMBER_ENUM_VALUES = [NORMAL_NUMBER, GRUPO_ATUAL_NUMBER, HIERARQUIA_INFERIOR_NUMBER];\r\n"],"sourceRoot":""}
{"version":3,"sources":["models/enumerated/mcg/lucroRealEnum.ts","views/pages/mcg/planoContaLalurA/PlanoContaLalurAEditView.tsx","dependencies/empresaDependency.ts","dependencies/empresaMCGDependency.ts","models/dtos/mcg/planoContaLalurA.ts"],"names":["__webpack_require__","d","__webpack_exports__","LUCRO_REAL_ENUM_VALUES","value","label","PlanoContaLalurAEditView","props","selectedItem","getSelectedItem","globalReducer","useSelector","state","formProps","useForm","defaultValues","mode","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_6__","title","useGlobalParameter","globalParameter","dependencies","hasEmpresa","hasEmpresaMCG","editViewProps","dtoClassName","CLASS_NAME","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","id","isPrependLabel","Object","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","validation","required","maxLength","type","InputType","TEXT_AREA","placeholder","inputDropDownProps","optionsProvider","selectProps","isClearable","DROP_DOWN","result","empresa","empresaMCG"],"mappings":"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","file":"static/js/285.455f6f7a.chunk.js","sourcesContent":["export const ADICAO = { value: 'A', label: 'Adição' };\r\nexport const EXCLUSAO = { value: 'E', label: 'Exclusão' };\r\nexport const COMPENSACAO_DE_PREJUIZO = { value: 'P', label: 'Compensação de Prejuízo' };\r\nexport const LUCRO = { value: 'L', label: 'Lucro' };\r\nexport const ROTULO = { value: 'R', label: 'Rótulo' };\r\n\r\nexport const LUCRO_REAL_ENUM_VALUES = [ADICAO, EXCLUSAO, COMPENSACAO_DE_PREJUIZO, LUCRO, ROTULO];\r\n","import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { EditForm, EditViewProps, getSelectedItem, InputGroupInline, InputType, WindowComponent } from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../dependencies/empresaMCGDependency';\r\nimport { CLASS_NAME, PlanoContaLalurA } from '../../../../models/dtos/mcg/planoContaLalurA';\r\nimport { LUCRO_REAL_ENUM_VALUES } from '../../../../models/enumerated/mcg/lucroRealEnum';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\ninterface PlanoContaLalurAEditViewProps extends EditViewProps<PlanoContaLalurA> {}\r\n\r\nconst PlanoContaLalurAEditView: FC<PlanoContaLalurAEditViewProps & RouteComponentProps> = props => {\r\n  const selectedItem = getSelectedItem(props);\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const formProps = useForm<PlanoContaLalurA>({\r\n    defaultValues: selectedItem,\r\n    mode: 'onBlur',\r\n  });\r\n  return (\r\n    <WindowComponent\r\n      title=\"Manutenção de Plano de Contas do Lalur Parte A\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMCG(globalReducer.globalParameter)]}\r\n    >\r\n      <EditForm formProps={formProps} editViewProps={props} dtoClassName={CLASS_NAME}>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"tabelaSped\"\r\n              label=\"Tabela SPED\"\r\n              isPrependLabel={true}\r\n              formProps={{ ...formProps, validation: { required: true, maxLength: 200 } }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"versaoTabela\"\r\n              label=\"Versão Tabela\"\r\n              isPrependLabel={true}\r\n              formProps={{ ...formProps, validation: { required: true, maxLength: 4 } }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"codigo\"\r\n              label=\"Código\"\r\n              isPrependLabel={true}\r\n              formProps={{ ...formProps, validation: { required: true, maxLength: 120 } }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"descricao\"\r\n              label=\"Descrição\"\r\n              isPrependLabel={true}\r\n              formProps={{ ...formProps, validation: { required: true, maxLength: 500 } }}\r\n              type={InputType.TEXT_AREA}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"tipoLancamento\"\r\n              label=\"Tipo de Lançamento\"\r\n              isPrependLabel={true}\r\n              placeholder=\"Selecione o tipo de lançamento\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              inputDropDownProps={{\r\n                optionsProvider: LUCRO_REAL_ENUM_VALUES,\r\n                selectProps: { isClearable: false },\r\n              }}\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </EditForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default PlanoContaLalurAEditView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMCG(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMCG) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o módulo Contábil. Para configurá-la acesse:\\n' +\r\n      'Módulo Contábil > Manutenção > Configurações > Empresa.';\r\n  }\r\n  return result;\r\n}\r\n","import { Basic } from 'summer';\r\n\r\nexport interface PlanoContaLalurA extends Basic {\r\n  tabelaSped?: string;\r\n  versaoTabela?: string;\r\n  codigo?: string;\r\n  descricao?: string;\r\n  tipoLancamento?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mcg.model.dto.planocontalalura';\r\n"],"sourceRoot":""}
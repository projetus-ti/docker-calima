{"version":3,"sources":["views/pages/mcg/mutacaoPatrimonioLiquido/MutacaoPatrimonioLiquidoTreeView.tsx","dependencies/empresaDependency.ts","dependencies/grupoEmpresaConfigDependency.ts","services/mcg.service.ts","views/components/mcg/planoContaIS/PlanoContaIS.tsx","models/dtos/ger/planoConta.ts","../node_modules/reactstrap/es/Table.js"],"names":["MutacaoPatrimonioLiquidoTreeView","globalReducer","useSelector","state","_useState","useState","_useState2","Object","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","showModalView","setShowModalView","_useState3","_useState4","listaMutacaoPatrimonio","setListaMutacaoPatrimonio","_useForm","useForm","mode","reset","formProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","formPropsConta","_useState5","_useState6","patrimonioAtual","setPatrimonioAtual","_useState7","_useState8","tabela","setTabela","_useState9","_useState10","tabelaAtualizada","setTabelaAtualizada","_useState11","_useState12","isBotaoAddDesabilitado","setIsBotaoAddDesabilitado","_useState13","_useState14","renderizarArvore","setRenderizarArvore","_useState15","_useState16","listaDeNosPais","setListaDeNosPais","prefixoPatrimonioLiquido","globalParameter","grupoPlanoConta","digitoPatrimonioLiquido","useEffect","montarTree","obterMutacaoPatrimonioLiquido","empresaMCG","id","thenFunction","result","forEach","item","index","tipo","subTipo","push","children","filter","possivelFilho","ehFilho","listaPlanoContas","removerDaLista","element","map","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","key","conta","codigoReduzido","descricao","analitica","reactstrap__WEBPACK_IMPORTED_MODULE_7__","size","color","className","onClick","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_3__","icon","reactstrap__WEBPACK_IMPORTED_MODULE_8__","target","instanceOfMutacao","object","mostrarErro","mensagemErro","alertManager","emit","ACTION_EVENTS","SHOW","message","type","AlertType","ERROR","handleCloseModal","onOkClick","setValue","undefined","WARNING_YES_NO","summer__WEBPACK_IMPORTED_MODULE_19__","title","wikiId","useGlobalParameter","dependencies","hasGrupoEmpresaConfig","hasEmpresa","parentNodesIdList","listenerRenderTree","nodeList","labelFunc","node","labelClickFunc","e","preventDefault","patrimonio","find","reactstrap__WEBPACK_IMPORTED_MODULE_9__","isOpen","backdrop","centered","toggle","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","hidden","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","disabled","isPrependLabel","label","_components_mcg_planoContaIS_PlanoContaIS__WEBPACK_IMPORTED_MODULE_23__","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","validation","required","placeholder","onChange","getValues","planoConta","substr","length","charAt","reactstrap__WEBPACK_IMPORTED_MODULE_16__","style","textAlign","hover","striped","bordered","width","reactstrap__WEBPACK_IMPORTED_MODULE_17__","reactstrap__WEBPACK_IMPORTED_MODULE_18__","handleSubmit","salvarMutacaoPatrimonioLiquido","showToast","SUCCESS","handleClose","empresa","__webpack_require__","d","__webpack_exports__","grupoEmpresaRaiz","grupoEmpresaConfig","grupoEmpresa","getService","create","gerarLancamentosFolhaPagamento","integracaoFolhaParam","param","send","post","integrarFolhaPagamento","lancamentoIntegracaoFolha","integrarMCP","importarParam","importarLancamentoCSV","data","formDataSend","FormData","append","String","importarDuplicados","importarLancamentosCardinal","_step","_iterator","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__","arquivos","s","n","done","arquivo","value","file","nomeArquivo","err","f","importarLancamentoPadraoCSV","_step2","_iterator2","importarHistoricoCSV","grupoHistoricoDestino","_step3","_iterator3","importarPlanoContaCSV","idEmpresa","grupoPlanoContaDestino","_step4","_iterator4","importarHistorico","importacaoHistorico","importarPlanoConta","importacaoPlanoContaParam","buscarConfigLivroFolhaMCG","get","integracaoFiscalContabil","encerrarContas","contaResultadoEncerramento","force","getDataUltimaContaEncerrada","idGerEmpresa","limparEncerramentoContaResultado","contaResultadoLimpeza","validarReferenciaSPEDECFIrpjCsll","configECFIrpjCsll","validarReferenciaSPEDECFImuneIsenta","configECFImuneIsenta","validarRefRemuneracaoSocio","configECFRemuneracaoSocio","validarQuadroSocietario","configQuadro","obterLucroPrejuizoClassificacao","idGrupoPlanoConta","getSaldo","saldo","validarDadosSpedECF","ecfExportacaoParam","gerarSpedECF","usuario","getArquivoDigitalService","recuperarLancamentoConta","transferenciaLancamentoConta","transferirLancamentoConta","obterBancoPlanoConta","bancoPlanoContaDTO","validarConfigLivroFolha","changeLivroFolha","fecharRestaurar","fechamentoRestauracao","forceFecharRestaurar","verificarErros","erros","gerarSpedContabil","selecaoSped","arquivoRTFEscrituracaoSubstituida","_step5","_iterator5","atributoSelecaoSped","salvarLucroPrejuizoClassificacao","lucroPrejuizoClassificacao","consultarMovimentacao","saldoCriteria","totalizadorLancamento","consulta","getSaldoAnterior","isDataEncerrada","parametros","abrirContas","removeLancamentoPeriodo","obterContasClassificacaoIndireto","salvarClassificacaoIndireto","contaFluxoCaixaIndireto","mutacaoPatrimonioLiquido","salvarContaResultado","contaResultado","excluirContaResultado","obterContasClassificacaoDireto","salvarClassificacaoDireto","contaFluxoCaixa","findSubGrupo","planoContaSubGrupoParam","removerTodosPlanosConta","removeList","listaPlanoConta","apagarFilha","listSubGrupo","referenciarContas","idsPlanoConta","idPlanoContaReferencial","idPlanoContaReferencialECF","desvincularContas","existeLancamentoEmContaAnalitica","idPlanoConta","importarLancamentoMCG","tipoImportacao","sobescrever","versaoSuperiorA2","isEmpty","dtInicial","dtFinal","importarSpedContabil","_step6","_iterator6","gerarManadContabil","refInicial","refFinal","arquivoSFP","evolucaoContaContabilGraf","evolucaoContaContabilGrafParam","composicaoReceitaDespesasGraf","compReceitaDespesasGrafParam","gerarFCONTContabil","fContContabilCrit","obterDadosArquivoExtrato","arquivoSelecionado","idBancoMCG","obterDadosConciliacaoBancariaPeriodo","obterBancoListPlanoConta","conciliarLancamentosExtrato","listConciliacaoBancaria","removerConciliarLancamentosExtrato","listaRemover","removerLancamentosExtratoBancario","obterLancamentosSaldoPeriodo","historico","valor","operacaoConsultaValor","conciliarLancamentosConta","listaConciliacao","removerConciliarLancamentosConta","listaConciliarRemover","eLalurAContas","eLacsAContas","getSaldoDebito","getSaldoCredito","removerLancamentoLote","atualizaCalculoIrpjCsll","buscarLancamentosHonorarios","integracaoHonorariosParam","integrarHonorarios","lancamentos","isAlteraCalculoIRPJorCSLL","alterarPlanoContaNaturezaConfig","enumPlanoContaNaturezaConta","prepararContaResultado","PlanoContaIS","props","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_3__","assign","searchViewProps","filtroContaResultado","hideExtraFields","useDefaultSelectRow","inputSearchProps","columns","dataField","text","dtoClassName","CLASS_NAME","searchExpressions","expressions","alias","conditionalGroup","fieldName","sintetica","filtro","searchViewId","InputType","INPUT_SEARCH","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","string","cssModule","bool","borderless","dark","responsive","oneOfType","tag","responsiveTag","innerRef","func","Table","Tag","ResponsiveTag","attributes","classes","table","ref","responsiveClassName","defaultProps"],"mappings":"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","file":"static/js/235.2495e524.chunk.js","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { Button, Card, CardBody, Col, Form, Modal, ModalBody, ModalFooter, ModalHeader, Row, Table, UncontrolledTooltip } from 'reactstrap';\r\nimport { ACTION_EVENTS, alertManager, AlertType, Box, InputGroupInline, ProcessBar, showToast, SUCCESS, Tree, WindowComponent } from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasGrupoEmpresaConfig } from '../../../../dependencies/grupoEmpresaConfigDependency';\r\nimport { MutacaoPatrimonioLiquido } from '../../../../models/dtos/mcg/mutacaoPatrimonioLiquido';\r\nimport { MutacaoPatrimonioLiquidoConta } from '../../../../models/dtos/mcg/mutacaoPatrimonioLiquidoConta';\r\nimport { obterMutacaoPatrimonioLiquido, salvarMutacaoPatrimonioLiquido } from '../../../../services/mcg.service';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport PlanoContaIS from '../../../components/mcg/planoContaIS/PlanoContaIS';\r\n\r\nconst MutacaoPatrimonioLiquidoTreeView: FC<MutacaoPatrimonioLiquido> = () => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [showModalView, setShowModalView] = useState(false);\r\n  const [listaMutacaoPatrimonio, setListaMutacaoPatrimonio] = useState<MutacaoPatrimonioLiquido[]>([]);\r\n  const { reset, ...formProps } = useForm<MutacaoPatrimonioLiquido>({ mode: 'onBlur' });\r\n  const formPropsConta = useForm<MutacaoPatrimonioLiquidoConta>({ mode: 'onBlur' });\r\n  const [patrimonioAtual, setPatrimonioAtual] = useState<MutacaoPatrimonioLiquido>();\r\n  const [tabela, setTabela] = useState();\r\n  const [tabelaAtualizada, setTabelaAtualizada] = useState();\r\n  const [isBotaoAddDesabilitado, setIsBotaoAddDesabilitado] = useState(true);\r\n  const [renderizarArvore, setRenderizarArvore] = useState();\r\n  const [listaDeNosPais, setListaDeNosPais] = useState([]);\r\n  const prefixoPatrimonioLiquido = globalReducer.globalParameter.grupoPlanoConta.digitoPatrimonioLiquido;\r\n\r\n  useEffect(\r\n    () => {\r\n      montarTree();\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const montarTree = () => {\r\n    obterMutacaoPatrimonioLiquido(globalReducer.globalParameter.empresaMCG.id, {\r\n      thenFunction: (result: MutacaoPatrimonioLiquido[]) => {\r\n        result.forEach((item, index) => {\r\n          if (item.tipo === 1 && item.subTipo === null) {\r\n            listaDeNosPais.push(index);\r\n            item.children = result.filter(possivelFilho => ehFilho(possivelFilho, 1));\r\n          } else if (item.tipo === 2 && item.subTipo === null) {\r\n            listaDeNosPais.push(index);\r\n            item.children = result.filter(possivelFilho => ehFilho(possivelFilho, 2));\r\n          } else if (item.tipo === 3 && item.subTipo === null) {\r\n            listaDeNosPais.push(index);\r\n            item.children = item.listaPlanoContas;\r\n          } else {\r\n            item.children = item.listaPlanoContas;\r\n          }\r\n        });\r\n        setListaMutacaoPatrimonio(result);\r\n        setRenderizarArvore(!renderizarArvore);\r\n        setListaDeNosPais(listaDeNosPais);\r\n      },\r\n    });\r\n  };\r\n\r\n  const ehFilho = (possivelFilho, tipo) => {\r\n    return possivelFilho.tipo === tipo && possivelFilho.subTipo !== null;\r\n  };\r\n\r\n  const removerDaLista = (id: number) => {\r\n    return () => {\r\n      patrimonioAtual.listaPlanoContas = patrimonioAtual.listaPlanoContas.filter(element => element.id !== id);\r\n      setTabelaAtualizada(!tabelaAtualizada);\r\n    };\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      setTabela(\r\n        patrimonioAtual ? (\r\n          patrimonioAtual.listaPlanoContas.map(item => {\r\n            return (\r\n              <tr key={item.id}>\r\n                <td>{item.conta}</td>\r\n                <td>{item.codigoReduzido}</td>\r\n                <td>{item.descricao}</td>\r\n                <td>{item.analitica ? 'Sim' : 'Não'}</td>\r\n                <td>\r\n                  <Button id=\"removeButton\" size=\"sm\" color=\"link\" className=\"text-danger\" onClick={removerDaLista(item.id)}>\r\n                    <FontAwesomeIcon icon=\"trash\" />\r\n                  </Button>\r\n                  <UncontrolledTooltip target=\"removeButton\">Clique aqui para remover</UncontrolledTooltip>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })\r\n        ) : (\r\n          <tr>\r\n            <td />\r\n            <td />\r\n            <td />\r\n            <td />\r\n            <td />\r\n          </tr>\r\n        )\r\n      );\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [patrimonioAtual, tabelaAtualizada]\r\n  );\r\n\r\n  const handleOpenModal = () => {\r\n    return (e, id) => {\r\n      e.preventDefault();\r\n      const patrimonio = listaMutacaoPatrimonio.find(element => element.id === id);\r\n\r\n      if (patrimonio && instanceOfMutacao(patrimonio)) {\r\n        reset(patrimonio);\r\n        setPatrimonioAtual(patrimonio);\r\n        setShowModalView(true);\r\n      }\r\n    };\r\n  };\r\n\r\n  const instanceOfMutacao = (object: any): object is MutacaoPatrimonioLiquido => {\r\n    return 'listaPlanoContas' in object;\r\n  };\r\n\r\n  const mostrarErro = mensagemErro => {\r\n    alertManager.emit(ACTION_EVENTS.SHOW, {\r\n      message: mensagemErro,\r\n      type: AlertType.ERROR,\r\n    });\r\n  };\r\n\r\n  const addNaLista = () => {\r\n    if (patrimonioAtual.listaPlanoContas.find(element => element.id === formPropsConta.getValues().planoConta.id)) {\r\n      mostrarErro(\r\n        'Conta ' +\r\n          formPropsConta.getValues().planoConta.conta +\r\n          ' - ' +\r\n          formPropsConta.getValues().planoConta.descricao +\r\n          ' já foi adicionada na lista.'\r\n      );\r\n    } else if (!formPropsConta.getValues().planoConta.analitica) {\r\n      mostrarErro('Conta deve ser analítica');\r\n    } else if (formPropsConta.getValues().planoConta.conta.substr(0, prefixoPatrimonioLiquido.length) !== prefixoPatrimonioLiquido) {\r\n      mostrarErro(\r\n        'A conta selecionada deve pertencer as contas de Patrimônio Líquido configuradas.  As contas devem pertencer ao grupo ' +\r\n          prefixoPatrimonioLiquido.charAt(0) +\r\n          '.' +\r\n          prefixoPatrimonioLiquido.substr(1, 2)\r\n      );\r\n    } else {\r\n      patrimonioAtual.listaPlanoContas.push(formPropsConta.getValues().planoConta);\r\n      formPropsConta.setValue('planoConta', undefined);\r\n      setTabelaAtualizada(!tabelaAtualizada);\r\n      setIsBotaoAddDesabilitado(true);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    salvarMutacaoPatrimonioLiquido(patrimonioAtual, {\r\n      thenFunction: () => {\r\n        showToast('Registro alterado com sucesso!', SUCCESS);\r\n        setShowModalView(false);\r\n        setIsBotaoAddDesabilitado(true);\r\n        formPropsConta.setValue('planoConta', undefined);\r\n        montarTree();\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    alertManager.emit(ACTION_EVENTS.SHOW, {\r\n      message: 'As alterações da página atual serão perdidas, deseja continuar?',\r\n      onOkClick: () => {\r\n        setShowModalView(false);\r\n        setIsBotaoAddDesabilitado(true);\r\n        formPropsConta.setValue('planoConta', undefined);\r\n        montarTree();\r\n      },\r\n      type: AlertType.WARNING_YES_NO,\r\n    });\r\n  };\r\n\r\n  const controladorHabilitarAddConta = () => {\r\n    setIsBotaoAddDesabilitado(!formPropsConta.getValues().planoConta);\r\n  };\r\n\r\n  const retornoLabelFunc = () => {\r\n    return (node: any) => {\r\n      return <div className={node.conta ? null : 'font-weight-bold'}>{node.conta ? node.conta + ' -> ' + node.descricao : node.descricao}</div>;\r\n    };\r\n  };\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Demonstração de Mutação do Patrimônio Líquido - DMPL\"\r\n      wikiId={6050}\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasGrupoEmpresaConfig(globalReducer.globalParameter), () => hasEmpresa(globalReducer.globalParameter)]}\r\n    >\r\n      {globalReducer.globalParameter.grupoPlanoConta.digitoPatrimonioLiquido ? (\r\n        <div>\r\n          <Box>\r\n            <Tree\r\n              parentNodesIdList={listaDeNosPais}\r\n              listenerRenderTree={renderizarArvore}\r\n              nodeList={listaMutacaoPatrimonio}\r\n              labelFunc={retornoLabelFunc()}\r\n              labelClickFunc={handleOpenModal()}\r\n            />\r\n          </Box>\r\n          <Modal isOpen={showModalView} backdrop=\"static\" centered={true} toggle={handleCloseModal} size=\"lg\">\r\n            <ModalHeader toggle={handleCloseModal}>Mutação do Patrimônio Líquido - Cadastro de Contas</ModalHeader>\r\n            <Form>\r\n              <Card>\r\n                <CardBody>\r\n                  <InputGroupInline id=\"empresaMCG.id\" formProps={formProps} hidden={true} />\r\n                  <InputGroupInline id=\"id\" formProps={formProps} hidden={true} />\r\n                  <Row>\r\n                    <Col>\r\n                      <InputGroupInline formProps={formProps} disabled={true} id=\"descricao\" isPrependLabel={true} label=\"Descrição\" />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className=\"col-10\">\r\n                      <PlanoContaIS\r\n                        disabled={patrimonioAtual && patrimonioAtual.subTipo === null && patrimonioAtual.tipo !== 3}\r\n                        id=\"planoConta\"\r\n                        formProps={{ ...formPropsConta, validation: { required: true } }}\r\n                        label=\"Conta\"\r\n                        placeholder=\"Informe a Conta\"\r\n                        onChange={controladorHabilitarAddConta}\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"col-2\">\r\n                      <Button id=\"addButton\" size=\"lg\" color=\"link\" className=\"text-success\" disabled={isBotaoAddDesabilitado} onClick={addNaLista}>\r\n                        <FontAwesomeIcon icon=\"plus-circle\" />\r\n                      </Button>\r\n                      <UncontrolledTooltip target=\"addButton\">Clique aqui para adicionar</UncontrolledTooltip>\r\n                    </Col>\r\n                  </Row>\r\n                  <Table style={{ textAlign: 'center' }} hover={true} striped={true} bordered={true}>\r\n                    <thead>\r\n                      <tr>\r\n                        <th style={{ width: '30%' }}>Conta</th>\r\n                        <th style={{ width: '20%' }}>C.R.</th>\r\n                        <th style={{ width: '30%' }}>Descrição</th>\r\n                        <th style={{ width: '10%' }}>Analítica</th>\r\n                        <th style={{ width: '10%' }}>Ações</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>{tabela}</tbody>\r\n                  </Table>\r\n                </CardBody>\r\n              </Card>\r\n            </Form>\r\n            <ModalBody />\r\n            <ModalFooter>\r\n              <Row>\r\n                <Col>\r\n                  <ProcessBar handleSubmit={handleSubmit} handleClose={handleCloseModal} />\r\n                </Col>\r\n              </Row>\r\n            </ModalFooter>\r\n          </Modal>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          Para a geração de Demonstração de Mutação do Patrimônio Líquido é necessário configurar o grupo correspondente na configuração do Grupo de\r\n          Conta. Vá em Manutenção > Grupo > Plano Contas > Selecione o Grupo de Plano Conta > Aba Geral > Conta > Grupo de Patrimônio Líquido.\r\n        </div>\r\n      )}\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default MutacaoPatrimonioLiquidoTreeView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasGrupoEmpresaConfig(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n\r\n  const msg: string =\r\n    'O Grupo de empresas não está configurado para a empresa selecionada. Para configurar acesse:\\n' +\r\n    'Modulo Principal > Manutenção > Configurações > Grupo de Empresa';\r\n\r\n  if (\r\n    !globalParameter.empresa ||\r\n    !globalParameter.empresa.grupoEmpresaRaiz.grupoEmpresaConfig ||\r\n    !globalParameter.empresa.grupoEmpresa.grupoEmpresaConfig\r\n  ) {\r\n    result = msg;\r\n  }\r\n\r\n  return result;\r\n}\r\n","import { AxiosInstance } from 'axios';\r\nimport { ArquivoSelecionado, AxiosParam, create, isEmpty, send } from 'summer';\r\nimport { PlanoConta } from '../models/dtos/ger/planoConta';\r\nimport { PlanoContaSubGrupoParam } from '../models/dtos/ger/planoContaSubGrupoParam';\r\nimport { RuleMessage } from '../models/dtos/ger/ruleMessage';\r\nimport { Usuario } from '../models/dtos/ger/usuario';\r\nimport { BancoExtrato } from '../models/dtos/mcg/bancoExtrato';\r\nimport { BancoMCG } from '../models/dtos/mcg/bancoMCG';\r\nimport { BancoPlanoConta } from '../models/dtos/mcg/bancoPlanoConta';\r\nimport { CalculoIrpjCsll } from '../models/dtos/mcg/calculoIrpjCsll';\r\nimport { ComposicaoReceitaDespesasGrafParam } from '../models/dtos/mcg/composicaoReceitaDespesasGrafParam';\r\nimport { ComposicaoReceitaDespesasGrafReturn } from '../models/dtos/mcg/composicaoReceitaDespesasGrafReturn';\r\nimport { ConciliacaoBancaria } from '../models/dtos/mcg/conciliacaoBancaria';\r\nimport { ConciliacaoConta } from '../models/dtos/mcg/conciliacaoConta';\r\nimport { ConfigECFImuneIsenta } from '../models/dtos/mcg/configECFImuneIsenta';\r\nimport { ConfigECFIrpjCsll } from '../models/dtos/mcg/configECFIrpjCsll';\r\nimport { ConfigECFRemuneracaoSocio } from '../models/dtos/mcg/configECFRemuneracaoSocio';\r\nimport { ConsultaTotalLancamento } from '../models/dtos/mcg/consultaTotalLancamento';\r\nimport { ContaFluxoCaixa } from '../models/dtos/mcg/contaFluxoCaixa';\r\nimport { ContaFluxoCaixaIndireto } from '../models/dtos/mcg/contaFluxoCaixaIndireto';\r\nimport { ContaResultado } from '../models/dtos/mcg/contaResultado';\r\nimport { ContaResultadoLimpeza } from '../models/dtos/mcg/contaResultadoLimpeza';\r\nimport { ContaResultadoMCGEncerramento } from '../models/dtos/mcg/contaResultadoMCGEncerramento';\r\nimport { DataEncerradaParam } from '../models/dtos/mcg/dataEncerradaParam';\r\nimport { ECFExportacaoParam } from '../models/dtos/mcg/ecfExportacaoParam';\r\nimport { Erros } from '../models/dtos/mcg/erros';\r\nimport { EvolucaoContaContabilGrafParam } from '../models/dtos/mcg/evolucaoContaContabilGrafParam';\r\nimport { EvolucaoContaContabilGrafReturn } from '../models/dtos/mcg/evolucaoContaContabilGrafReturn';\r\nimport { FCONTContabilCrit } from '../models/dtos/mcg/fContContabilCrit';\r\nimport { FechamentoRestauracaoMCG } from '../models/dtos/mcg/fechamentoRestauracaoMCG';\r\nimport { ImportacaoFiscalContabil, ImportacaoFiscalContabilResult } from '../models/dtos/mcg/importacaoFiscalContabil';\r\nimport { ImportacaoHistorico } from '../models/dtos/mcg/importacaoHistorico';\r\nimport { ImportacaoHistoricoCSVParam } from '../models/dtos/mcg/importacaoHistoricoCSVParam';\r\nimport { ImportacaoLancamentoCSVParam } from '../models/dtos/mcg/importacaoLancamentoCSVParam';\r\nimport { ImportacaoLancamentoMCGRetornoValidacao } from '../models/dtos/mcg/importacaoLancamentoMCGRetornoValidacao';\r\nimport { ImportacaoLancamentoMCGSelecao } from '../models/dtos/mcg/importacaoLancamentoMCGSelecao';\r\nimport { ImportacaoLancamentoPadraoCSVParam } from '../models/dtos/mcg/importacaoLancamentoPadraoCSVParam';\r\nimport { ImportacaoPlanoConta } from '../models/dtos/mcg/importacaoPlanoConta';\r\nimport { ImportacaoPlanoContaCSVParam } from '../models/dtos/mcg/importacaoPlanoContaCSVParam';\r\nimport { ImportacaoSpedContabil } from '../models/dtos/mcg/importacaoSpedContabil';\r\nimport { ImportacaoResult, ImportarMCP } from '../models/dtos/mcg/importarMCP';\r\nimport { InfoConciliacaoBancaria } from '../models/dtos/mcg/infoConciliacaoBancaria';\r\nimport { IntegracaoFolhaParam } from '../models/dtos/mcg/integracaoFolhaParam';\r\nimport { IntegracaoHonorariosParam } from '../models/dtos/mcg/integracaoHonorariosParam';\r\nimport { Lancamento } from '../models/dtos/mcg/lancamento';\r\nimport { LancamentoConciliacao } from '../models/dtos/mcg/lancamentoConciliacao';\r\nimport { LancamentoIntegracaoFolha } from '../models/dtos/mcg/lancamentoIntegracaoFolha';\r\nimport { LancamentoIntegracaoHonorarios } from '../models/dtos/mcg/lancamentoIntegracaoHonorarios';\r\nimport { LancamentoSaldo } from '../models/dtos/mcg/lancamentoSaldo';\r\nimport { LivroFolha } from '../models/dtos/mcg/livroFolha';\r\nimport { LucroPrejuizoClassificacao } from '../models/dtos/mcg/lucroPrejuizoClassificacao';\r\nimport { MANADContabilCrit } from '../models/dtos/mcg/manadContabilCrit';\r\nimport { MutacaoPatrimonioLiquido } from '../models/dtos/mcg/mutacaoPatrimonioLiquido';\r\nimport { QuadroSocietario } from '../models/dtos/mcg/quadroSocietario';\r\nimport { RemoveLancamentoLote } from '../models/dtos/mcg/removeLancamentoLote';\r\nimport { RemoveLancamentoPeriodo } from '../models/dtos/mcg/removeLancamentoPeriodo';\r\nimport { Saldo } from '../models/dtos/mcg/saldo';\r\nimport { SaldoCriteria } from '../models/dtos/mcg/saldoCriteria';\r\nimport { SelecaoSpedContabil } from '../models/dtos/mcg/selecaoSpedContabil';\r\nimport { SomaSaldo } from '../models/dtos/mcg/somaSaldo';\r\nimport { TotalizadorLancamento } from '../models/dtos/mcg/totalizadorLancamento';\r\nimport { TransferenciaLancamentoConta } from '../models/dtos/mcg/transferenciaLancamentoConta';\r\nimport { VerificarErros } from '../models/dtos/mcg/verificarErros';\r\nimport { getArquivoDigitalService } from './ger.service';\r\n\r\nfunction getService(): AxiosInstance {\r\n  return create('/mcg');\r\n}\r\n\r\nexport function gerarLancamentosFolhaPagamento(integracaoFolhaParam: IntegracaoFolhaParam, param: AxiosParam<LancamentoIntegracaoFolha[]>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/gerarLancamentosFolhaPagamento', integracaoFolhaParam), param);\r\n}\r\n\r\nexport function integrarFolhaPagamento(lancamentoIntegracaoFolha: LancamentoIntegracaoFolha[], param: AxiosParam<any>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/integrarFolhaPagamento', lancamentoIntegracaoFolha), param);\r\n}\r\n\r\nexport function integrarMCP(importarParam: ImportarMCP, param: AxiosParam<ImportacaoResult>) {\r\n  send(getService().post<ImportacaoResult>('/importar', importarParam), param);\r\n}\r\n\r\nexport function importarLancamentoCSV(data: ImportacaoLancamentoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('importarDuplicados', String(data.importarDuplicados));\r\n  formDataSend.append('importarLancamentosCardinal', String(data.importarLancamentosCardinal));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarLancamentoPadraoCSV(data: ImportacaoLancamentoPadraoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoPadraoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistoricoCSV(data: ImportacaoHistoricoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('grupoHistoricoDestino.id', String(data.grupoHistoricoDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarHistoricoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarPlanoContaCSV(data: ImportacaoPlanoContaCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idEmpresa', String(data.idEmpresa));\r\n  formDataSend.append('grupoPlanoContaDestino.id', String(data.grupoPlanoContaDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarPlanoContaCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistorico(importacaoHistorico: ImportacaoHistorico, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarHistorico', importacaoHistorico), param);\r\n}\r\n\r\nexport function importarPlanoConta(importacaoPlanoContaParam: ImportacaoPlanoConta, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarPlanoConta', importacaoPlanoContaParam), param);\r\n}\r\n\r\nexport function buscarConfigLivroFolhaMCG(idEmpresa: number, param: AxiosParam<LivroFolha>) {\r\n  send(getService().get<LivroFolha>('/buscarConfigLivroFolhaMCG/' + idEmpresa), param);\r\n}\r\n\r\nexport function integracaoFiscalContabil(importarParam: ImportacaoFiscalContabil, param: AxiosParam<ImportacaoFiscalContabilResult>) {\r\n  send(getService().post<ImportacaoFiscalContabilResult>('/integracaoFiscalContabil', importarParam), param);\r\n}\r\n\r\nexport function encerrarContas(\r\n  contaResultadoEncerramento: ContaResultadoMCGEncerramento,\r\n  force: boolean,\r\n  param: AxiosParam<ContaResultadoMCGEncerramento>\r\n) {\r\n  send(\r\n    getService().post<ContaResultadoMCGEncerramento>('/encerrarContas', { contaResultadoEncerramento, force }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function getDataUltimaContaEncerrada(idGerEmpresa: number, param: AxiosParam<Date>) {\r\n  send(getService().get<Date>('/getDataUltimaContaEncerrada/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function limparEncerramentoContaResultado(contaResultadoLimpeza: ContaResultadoLimpeza, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/limparEncerramentoContaResultadoApos', contaResultadoLimpeza), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFIrpjCsll(configECFIrpjCsll: ConfigECFIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFIrpjCsll', configECFIrpjCsll), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFImuneIsenta(configECFImuneIsenta: ConfigECFImuneIsenta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFImuneIsenta', configECFImuneIsenta), param);\r\n}\r\n\r\nexport function validarRefRemuneracaoSocio(configECFRemuneracaoSocio: ConfigECFRemuneracaoSocio, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarRefRemuneracaoSocio', configECFRemuneracaoSocio), param);\r\n}\r\n\r\nexport function validarQuadroSocietario(configQuadro: QuadroSocietario, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/validarQuadroSocietario', configQuadro), param);\r\n}\r\n\r\nexport function obterLucroPrejuizoClassificacao(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterLucroPrejuizoClassificacao/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function getSaldo(saldo: Saldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldo', saldo), param);\r\n}\r\n\r\nexport function validarDadosSpedECF(ecfExportacaoParam: ECFExportacaoParam, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/validarDadosSpedECF', ecfExportacaoParam), param);\r\n}\r\n\r\nexport function gerarSpedECF(usuario: Usuario, ecfExportacaoParam: ECFExportacaoParam, param?: AxiosParam<string>) {\r\n  send(\r\n    getArquivoDigitalService().post<string>('/gerarSpedECF', { usuario, ecfExportacaoParam }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function recuperarLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<Lancamento[]>) {\r\n  send(getService().post<Lancamento[]>('/recuperarLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function transferirLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/transferirLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function obterBancoPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG>) {\r\n  send(getService().post<BancoMCG>('/obterBancoPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function validarConfigLivroFolha(idGerEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(getService().get<boolean>('/validarConfigLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function changeLivroFolha(idGerEmpresa: number, param: AxiosParam<void>) {\r\n  send(getService().get<void>('/changeLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function fecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<RuleMessage>) {\r\n  send(getService().post<RuleMessage>('/fecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function forceFecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/forceFecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function verificarErros(erros: VerificarErros, param: AxiosParam<Erros[]>) {\r\n  send(getService().post<Erros[]>('/verificarErros', erros), param);\r\n}\r\n\r\nexport function gerarSpedContabil(selecaoSped: SelecaoSpedContabil, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('usuario.id', String(selecaoSped.usuario.id));\r\n\r\n  if (selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n    for (const arquivo of selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n      formDataSend.append('arquivoRTFEscrituracaoSubstituida', arquivo.file, arquivo.nomeArquivo);\r\n    }\r\n  }\r\n\r\n  for (const atributoSelecaoSped in selecaoSped) {\r\n    if (\r\n      atributoSelecaoSped !== 'arquivoRTFEscrituracaoSubstituida' &&\r\n      atributoSelecaoSped !== 'usuario' &&\r\n      selecaoSped[atributoSelecaoSped] !== null\r\n    ) {\r\n      formDataSend.append(atributoSelecaoSped, selecaoSped[atributoSelecaoSped]);\r\n    }\r\n  }\r\n  send(getService().post<string>('/gerarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function salvarLucroPrejuizoClassificacao(\r\n  lucroPrejuizoClassificacao: LucroPrejuizoClassificacao,\r\n  param: AxiosParam<LucroPrejuizoClassificacao>\r\n) {\r\n  send(getService().post<LucroPrejuizoClassificacao>('/salvarLucroPrejuizoClassificacao', lucroPrejuizoClassificacao), param);\r\n}\r\n\r\nexport function consultarMovimentacao(saldoCriteria: SaldoCriteria, param: AxiosParam<LancamentoSaldo[]>) {\r\n  send(getService().post<LancamentoSaldo[]>('/consultarMovimentacao', saldoCriteria), param);\r\n}\r\n\r\nexport function totalizadorLancamento(consulta: ConsultaTotalLancamento, param: AxiosParam<TotalizadorLancamento>) {\r\n  send(getService().post<TotalizadorLancamento>('/totalizadorLancamento', consulta), param);\r\n}\r\n\r\nexport function getSaldoAnterior(saldoCriteria: SaldoCriteria, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoAnterior', saldoCriteria), param);\r\n}\r\n\r\nexport function isDataEncerrada(parametros: DataEncerradaParam, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isDataEncerrada', parametros), param);\r\n}\r\n\r\nexport function abrirContas(parametros: DataEncerradaParam, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/abrirContas', parametros), param);\r\n}\r\n\r\nexport function removeLancamentoPeriodo(parametros: RemoveLancamentoPeriodo, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removeLancamentoPeriodo', parametros), param);\r\n}\r\n\r\nexport function obterContasClassificacaoIndireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixaIndireto[]>) {\r\n  send(getService().get<ContaFluxoCaixaIndireto[]>('/obterContasClassificacaoIndireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoIndireto(contaFluxoCaixaIndireto: ContaFluxoCaixaIndireto, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoIndireto', contaFluxoCaixaIndireto), param);\r\n}\r\n\r\nexport function obterMutacaoPatrimonioLiquido(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterMutacaoPatrimonioLiquido/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarMutacaoPatrimonioLiquido(mutacaoPatrimonioLiquido: MutacaoPatrimonioLiquido, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarMutacaoPatrimonioLiquido', mutacaoPatrimonioLiquido), param);\r\n}\r\n\r\nexport function salvarContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function excluirContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/excluirContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function obterContasClassificacaoDireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixa[]>) {\r\n  send(getService().get<ContaFluxoCaixa[]>('/obterContasClassificacaoDireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoDireto(contaFluxoCaixa: ContaFluxoCaixa, param?: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoDireto', contaFluxoCaixa), param);\r\n}\r\n\r\nexport function findSubGrupo(planoContaSubGrupoParam: PlanoContaSubGrupoParam, param: AxiosParam<any>) {\r\n  send(getService().post<any>('/findSubGrupo', planoContaSubGrupoParam), param);\r\n}\r\n\r\nexport function removerTodosPlanosConta(idGrupoPlanoConta: number, usuario: Usuario, param: AxiosParam<void>) {\r\n  send(\r\n    getService().post<void>('/removerTodosPlanosConta', { idGrupoPlanoConta, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function removeList(listaPlanoConta: PlanoConta[], apagarFilha: boolean, usuario: Usuario, param: AxiosParam<any>) {\r\n  send(\r\n    getService().post<any>('/removeList', { listaPlanoConta, apagarFilha, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function listSubGrupo(planoConta: PlanoConta, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().post<PlanoConta[]>('/listSubGrupo', planoConta), param);\r\n}\r\n\r\nexport function referenciarContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<void>\r\n) {\r\n  send(\r\n    getService().post<void>('/referenciarContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function desvincularContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<any>\r\n) {\r\n  send(\r\n    getService().post<void>('/desvincularContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function existeLancamentoEmContaAnalitica(idPlanoConta: number, idEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(\r\n    getService().post<boolean>('/existeLancamentoEmContaAnalitica', { idPlanoConta, idEmpresa }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function importarLancamentoMCG(data: ImportacaoLancamentoMCGSelecao, param: AxiosParam<ImportacaoLancamentoMCGRetornoValidacao>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('tipoImportacao', String(data.tipoImportacao));\r\n  formDataSend.append('sobescrever', String(data.sobescrever));\r\n  formDataSend.append('versaoSuperiorA2', String(data.versaoSuperiorA2));\r\n  formDataSend.append('arquivo', data.arquivo[0].file, data.arquivo[0].nomeArquivo);\r\n\r\n  if (data.versaoSuperiorA2 === false && !isEmpty(data.dtInicial) && !isEmpty(data.dtFinal)) {\r\n    formDataSend.append('dtInicial', data.dtInicial);\r\n    formDataSend.append('dtFinal', data.dtFinal);\r\n  }\r\n\r\n  send(getService().post<ImportacaoLancamentoMCGRetornoValidacao>('/importarLancamentoMCG', formDataSend), param);\r\n}\r\n\r\nexport function importarSpedContabil(data: ImportacaoSpedContabil, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function gerarManadContabil(data: MANADContabilCrit, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('refInicial', data.refInicial);\r\n  formDataSend.append('refFinal', data.refFinal);\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  if (!isEmpty(data.arquivoSFP)) {\r\n    formDataSend.append('arquivoSFP', data.arquivoSFP[0].file, data.arquivoSFP[0].nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<string>('/gerarManadContabil', formDataSend), param);\r\n}\r\n\r\nexport function evolucaoContaContabilGraf(\r\n  evolucaoContaContabilGrafParam: EvolucaoContaContabilGrafParam,\r\n  param: AxiosParam<EvolucaoContaContabilGrafReturn>\r\n) {\r\n  send(getService().post<EvolucaoContaContabilGrafReturn>('/evolucaoContaContabilGraf', evolucaoContaContabilGrafParam), param);\r\n}\r\n\r\nexport function composicaoReceitaDespesasGraf(\r\n  compReceitaDespesasGrafParam: ComposicaoReceitaDespesasGrafParam,\r\n  param: AxiosParam<ComposicaoReceitaDespesasGrafReturn>\r\n) {\r\n  send(getService().post<ComposicaoReceitaDespesasGrafReturn>('/composicaoReceitaDespesasGraf', compReceitaDespesasGrafParam), param);\r\n}\r\n\r\nexport function gerarFCONTContabil(fContContabilCrit: FCONTContabilCrit, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/gerarFCONTContabil', fContContabilCrit), param);\r\n}\r\n\r\nexport function obterDadosArquivoExtrato(arquivoSelecionado: ArquivoSelecionado, idBancoMCG, param: AxiosParam<BancoExtrato[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idBancoMCG', idBancoMCG);\r\n\r\n  formDataSend.append('arquivoSelecionado', arquivoSelecionado[0].file, arquivoSelecionado[0].nomeArquivo);\r\n\r\n  send(getService().post<BancoExtrato[]>('/obterDadosArquivoExtrato', formDataSend), param);\r\n}\r\n\r\nexport function obterDadosConciliacaoBancariaPeriodo(\r\n  idGrupoPlanoConta,\r\n  idEmpresa,\r\n  idBancoMCG,\r\n  dtInicial,\r\n  dtFinal,\r\n  param: AxiosParam<InfoConciliacaoBancaria>\r\n) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGrupoPlanoConta', String(idGrupoPlanoConta));\r\n  formDataSend.append('idEmpresa', String(idEmpresa));\r\n  formDataSend.append('idBancoMCG', String(idBancoMCG));\r\n  formDataSend.append('dtInicial', String(dtInicial));\r\n  formDataSend.append('dtFinal', String(dtFinal));\r\n\r\n  send(getService().post<InfoConciliacaoBancaria>('/obterDadosConciliacaoBancariaPeriodo', formDataSend), param);\r\n}\r\n\r\nexport function obterBancoListPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG[]>) {\r\n  send(getService().post<BancoMCG[]>('/obterBancoListPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function conciliarLancamentosExtrato(listConciliacaoBancaria: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/conciliarLancamentosExtrato', listConciliacaoBancaria), param);\r\n}\r\n\r\nexport function removerConciliarLancamentosExtrato(listaRemover: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerConciliarLancamentosExtrato', listaRemover), param);\r\n}\r\n\r\nexport function removerLancamentosExtratoBancario(listaRemover: BancoExtrato[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerLancamentosExtratoBancario', listaRemover), param);\r\n}\r\nexport function obterLancamentosSaldoPeriodo(\r\n  idGrupoPlanoConta,\r\n  idEmpresa,\r\n  dtInicial,\r\n  dtFinal,\r\n  historico,\r\n  valor,\r\n  operacaoConsultaValor,\r\n  param: AxiosParam<LancamentoConciliacao[]>\r\n) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGrupoPlanoConta', String(idGrupoPlanoConta));\r\n  formDataSend.append('idEmpresa', String(idEmpresa));\r\n  formDataSend.append('dtInicial', String(dtInicial));\r\n  formDataSend.append('dtFinal', String(dtFinal));\r\n  formDataSend.append('historico', String(historico));\r\n  formDataSend.append('valor', String(valor));\r\n  formDataSend.append('operacaoConsultaValor', String(operacaoConsultaValor));\r\n\r\n  send(getService().post<LancamentoConciliacao[]>('/obterLancamentosSaldoPeriodo', formDataSend), param);\r\n}\r\n\r\nexport function conciliarLancamentosConta(listaConciliacao: ConciliacaoConta[], param: AxiosParam<void>) {\r\n  send(getService().post<void>('/conciliarLancamentosConta', listaConciliacao), param);\r\n}\r\n\r\nexport function removerConciliarLancamentosConta(listaConciliarRemover: ConciliacaoConta[], param: AxiosParam<void>) {\r\n  send(getService().post<void>('/removerConciliarLancamentosConta', listaConciliarRemover), param);\r\n}\r\n\r\nexport function eLalurAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLalurAContas/' + id), param);\r\n}\r\n\r\nexport function eLacsAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLacsAContas/' + id), param);\r\n}\r\n\r\nexport function getSaldoDebito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoDebito', parametros), param);\r\n}\r\n\r\nexport function getSaldoCredito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoCredito', parametros), param);\r\n}\r\n\r\nexport function removerLancamentoLote(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/removerLancamentoLote', parametros), param);\r\n}\r\n\r\nexport function atualizaCalculoIrpjCsll(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/atualizaCalculoIrpjCsll', parametros), param);\r\n}\r\n\r\nexport function buscarLancamentosHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  param: AxiosParam<LancamentoIntegracaoHonorarios[]>\r\n) {\r\n  send(getService().post<LancamentoIntegracaoHonorarios[]>('/buscarLancamentosHonorarios', integracaoHonorariosParam), param);\r\n}\r\n\r\nexport function integrarHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  lancamentos: LancamentoIntegracaoHonorarios[],\r\n  param: AxiosParam<number>\r\n) {\r\n  send(\r\n    getService().post<number>('/integrarHonorarios', { integracaoHonorariosParam, lancamentos }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function isAlteraCalculoIRPJorCSLL(parametros: CalculoIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isAlteraCalculoIRPJorCSLL', parametros), param);\r\n}\r\n\r\nexport function alterarPlanoContaNaturezaConfig(idsPlanoConta: number[], enumPlanoContaNaturezaConta: number, param: AxiosParam<void>) {\r\n  send(\r\n    getService().post<void>('/alterarPlanoContaNaturezaConfig', { idsPlanoConta, enumPlanoContaNaturezaConta }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function prepararContaResultado(idGrupoPlanoConta: number, param: AxiosParam<void>) {\r\n  send(getService().get<void>('/prepararContaResultado/' + idGrupoPlanoConta), param);\r\n}\r\n","import React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/planoConta';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\nexport interface PlanoContaInputSearchProps extends InputProps {\r\n  analitica?: boolean;\r\n  sintetica?: boolean;\r\n  idGrupoPlanoConta?: number;\r\n  filtroContaResultado?: SearchExpression[];\r\n}\r\n\r\nconst PlanoContaIS: FC<PlanoContaInputSearchProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const getSearchExpression = (): SearchExpression[] => {\r\n    const expressions: SearchExpression[] = [];\r\n    if (props.analitica) {\r\n      expressions.push({\r\n        alias: 'c',\r\n        conditionalGroup: 'c_',\r\n        fieldName: 'analitica',\r\n        value: true,\r\n      });\r\n    }\r\n    if (props.sintetica) {\r\n      expressions.push({\r\n        alias: 'c',\r\n        conditionalGroup: 'c_',\r\n        fieldName: 'analitica',\r\n        value: false,\r\n      });\r\n    }\r\n\r\n    if (props.filtroContaResultado) {\r\n      props.filtroContaResultado.forEach(filtro => {\r\n        expressions.push(filtro);\r\n      });\r\n    }\r\n\r\n    return [\r\n      {\r\n        conditionalGroup: 'g_',\r\n        expressions,\r\n        fieldName: 'grupoPlanoConta.id',\r\n        value: props.idGrupoPlanoConta || globalReducer.globalParameter.grupoPlanoConta.id,\r\n      },\r\n    ];\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      searchViewProps={{\r\n        ...props.searchViewProps,\r\n        filtroContaResultado: props.filtroContaResultado,\r\n        hideExtraFields: true,\r\n        useDefaultSelectRow: true,\r\n      }}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'conta',\r\n            text: 'Conta',\r\n          },\r\n          {\r\n            dataField: 'analitica',\r\n            text: 'Analítica',\r\n          },\r\n          {\r\n            dataField: 'codigoReduzido',\r\n            text: 'C.R.',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressions: getSearchExpression,\r\n        searchViewId: 'PlanoContaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Plano de Contas'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Plano de Contas'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PlanoContaIS;\r\n","import { Basic } from 'summer';\r\nimport { PlanoContaMCG } from '../mcg/planoContaMCG';\r\nimport { SaldoAnterior } from '../mcg/saldoAnterior';\r\nimport { PlanoContaMCP } from '../mcp/planoContaMCP';\r\nimport { GrupoPlanoConta } from './grupoPlanoConta';\r\n\r\nexport interface PlanoConta extends Basic {\r\n  analitica?: boolean;\r\n  conta?: string;\r\n  codigoReduzido?: number;\r\n  descricao?: string;\r\n  grupoPlanoConta?: GrupoPlanoConta;\r\n  mcgPlanoConta?: PlanoContaMCG;\r\n  mcpPlanoConta?: PlanoContaMCP;\r\n  saldoAnterior?: SaldoAnterior;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.planoconta';\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nvar defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nvar Table = function Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive, cssModule);\n    return React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\nexport default Table;"],"sourceRoot":""}
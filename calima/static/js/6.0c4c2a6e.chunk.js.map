{"version":3,"sources":["views/pages/mcg/report/demonstracaoResultado/demonstracaoResultadoRV.ts","dependencies/empresaDependency.ts","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","dependencies/empresaMCGDependency.ts","services/mcg.service.ts","models/enumerated/mcg/consolidarEnum.ts","models/dtos/ger/responsavel.ts","views/components/ger/responsavelIS/ResponsavelIS.tsx","../node_modules/reactstrap/es/CardTitle.js","models/dtos/mcg/customizacaoTermo.ts","models/dtos/mcg/customizacaoTermosAberturaEncerramentoCabecalhoDefault.ts","models/dtos/mcg/customizacaoTermosAberturaEncerramentoRodapeDefault.ts","models/dtos/mcg/customizacaoTermosBalancoPatrimonialDefault.ts","models/dtos/mcg/customizacaoTermosCartaResponsabilidadeDefault.ts","models/dtos/mcg/customizacaoTermosDemonstracaoResultadoDefault.ts","models/dtos/mcg/customizacaoTermosVeracidadeCabecalhoDefault.ts","models/dtos/mcg/customizacaoTermosVeracidadeRodapeDefault.ts","models/enumerated/mcg/customizacaoTermoEnum.ts","views/components/mcg/customizacaoTermoIS/CustomizacaoTermoIS.tsx","models/enumerated/ger/consolidarEnum.ts"],"names":["__webpack_require__","d","__webpack_exports__","CLASS_KEY","REPORT_EVENT","REPORT_TITLE","hasEmpresa","globalParameter","result","empresa","NATUREZA","label","value","SALDO_REPORT_ENUM","EmpresaIS","props","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_2__","Object","assign","isPrependLabel","inputSearchProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","placeholder","type","InputType","INPUT_SEARCH","getDefaultReportBasicValues","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","title","identificadorAjuda","identificadorMenu","designType","GRAPHIC","empresasSelecionadas","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","gerarCabecalhoPadraoAdministradora","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","virtualization","getDefaultReportViewOptions","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDadosEmpresa","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","_useForm","useForm","defaultValues","selectedItem","mode","formProps","errors","getValues","register","setValue","triggerValidation","react_default","summer_esm","handleSubmit","handleCancel","validateExtras","currentItem","currentValues","parentObject","id","objectSpread2","validation","required","EnvioEmail","Fragment","sort","detailView","keyField","propName","Row","className","Col","CustomInput","name","innerRef","maxLength","TEXT_AREA","ReportInputs","globalReducer","useSelector","state","_useState","useState","_useState2","slicedToArray","activeTab","setActiveTab","useEffect","_props$reportViewOpti","reportViewOptions","printingTypes","resetObject","reportBasicValues","length","idGerEmpresa","current","currentMomentDate","endDate","DATE","dtInicial","formatDate","toDate","DATES","dtFinal","endOf","REFERENCE","referenciaInicial","format","REF_PATTERN","REFERENCES","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dtInicialRequired","dateComponent","datesComponent","dtFinalRequired","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","NUMBER","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","inputProps","disabled","gerarPorEmpresas","style","marginBottom","size","selectProps","isMulti","segmentacaoFolhaComponent","exibirSegmentacaoFolha","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","exibirImprimirValoresColoridos","inputDropDownProps","optionsProvider","isClearable","DROP_DOWN","firstOpen","extraConfigOpened","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","hidden","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","ReportForm","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","erros","params","message","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","routeProps","dispatchClose","history","hasEmpresaMCG","empresaMCG","getService","create","gerarLancamentosFolhaPagamento","integracaoFolhaParam","param","send","post","integrarFolhaPagamento","lancamentoIntegracaoFolha","integrarMCP","importarParam","importarLancamentoCSV","formDataSend","FormData","append","importarDuplicados","importarLancamentosCardinal","_step","_iterator","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__","arquivos","s","n","done","arquivo","file","nomeArquivo","err","e","f","importarLancamentoPadraoCSV","_step2","_iterator2","importarHistoricoCSV","grupoHistoricoDestino","_step3","_iterator3","importarPlanoContaCSV","idEmpresa","grupoPlanoContaDestino","_step4","_iterator4","importarHistorico","importacaoHistorico","importarPlanoConta","importacaoPlanoContaParam","buscarConfigLivroFolhaMCG","get","integracaoFiscalContabil","encerrarContas","contaResultadoEncerramento","force","getDataUltimaContaEncerrada","limparEncerramentoContaResultado","contaResultadoLimpeza","validarReferenciaSPEDECFIrpjCsll","configECFIrpjCsll","validarReferenciaSPEDECFImuneIsenta","configECFImuneIsenta","validarRefRemuneracaoSocio","configECFRemuneracaoSocio","validarQuadroSocietario","configQuadro","obterLucroPrejuizoClassificacao","idGrupoPlanoConta","getSaldo","saldo","validarDadosSpedECF","ecfExportacaoParam","gerarSpedECF","usuario","getArquivoDigitalService","recuperarLancamentoConta","transferenciaLancamentoConta","transferirLancamentoConta","obterBancoPlanoConta","bancoPlanoContaDTO","validarConfigLivroFolha","changeLivroFolha","fecharRestaurar","fechamentoRestauracao","forceFecharRestaurar","verificarErros","gerarSpedContabil","selecaoSped","arquivoRTFEscrituracaoSubstituida","_step5","_iterator5","atributoSelecaoSped","salvarLucroPrejuizoClassificacao","lucroPrejuizoClassificacao","consultarMovimentacao","saldoCriteria","totalizadorLancamento","consulta","getSaldoAnterior","isDataEncerrada","parametros","abrirContas","removeLancamentoPeriodo","obterContasClassificacaoIndireto","salvarClassificacaoIndireto","contaFluxoCaixaIndireto","obterMutacaoPatrimonioLiquido","salvarMutacaoPatrimonioLiquido","mutacaoPatrimonioLiquido","salvarContaResultado","contaResultado","excluirContaResultado","obterContasClassificacaoDireto","salvarClassificacaoDireto","contaFluxoCaixa","findSubGrupo","planoContaSubGrupoParam","removerTodosPlanosConta","removeList","listaPlanoConta","apagarFilha","listSubGrupo","planoConta","referenciarContas","idsPlanoConta","idPlanoContaReferencial","idPlanoContaReferencialECF","desvincularContas","existeLancamentoEmContaAnalitica","idPlanoConta","importarLancamentoMCG","tipoImportacao","sobescrever","versaoSuperiorA2","isEmpty","importarSpedContabil","_step6","_iterator6","gerarManadContabil","refInicial","refFinal","arquivoSFP","evolucaoContaContabilGraf","evolucaoContaContabilGrafParam","composicaoReceitaDespesasGraf","compReceitaDespesasGrafParam","gerarFCONTContabil","fContContabilCrit","obterDadosArquivoExtrato","arquivoSelecionado","idBancoMCG","obterDadosConciliacaoBancariaPeriodo","obterBancoListPlanoConta","conciliarLancamentosExtrato","listConciliacaoBancaria","removerConciliarLancamentosExtrato","listaRemover","removerLancamentosExtratoBancario","obterLancamentosSaldoPeriodo","historico","valor","operacaoConsultaValor","conciliarLancamentosConta","listaConciliacao","removerConciliarLancamentosConta","listaConciliarRemover","eLalurAContas","eLacsAContas","getSaldoDebito","getSaldoCredito","removerLancamentoLote","atualizaCalculoIrpjCsll","buscarLancamentosHonorarios","integracaoHonorariosParam","integrarHonorarios","lancamentos","isAlteraCalculoIRPJorCSLL","alterarPlanoContaNaturezaConfig","enumPlanoContaNaturezaConta","prepararContaResultado","NORMAL","CONSOLIDAR_ENUM_VALUES","NORMAL_NUMBER","GRUPO_ATUAL_NUMBER","CONSOLIDAR_NUMBER_ENUM_VALUES","ResponsavelIS","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","string","cssModule","object","CardTitle","Tag","attributes","classes","defaultProps","CustomizacaoTermosAberturaEncerramentoCabecalhoDefault","[object Object]","this","TERMO_PADRAO","getCustomizacaoTermosTipoEnum","ABERTURA_ENCERRAMENTO","getTermoDefault","CustomizacaoTermosAberturaEncerramentoRodapeDefault","CustomizacaoTermosBalancoPatrimonialDefault","BALANCO_PATRIMONIAL","CustomizacaoTermosCartaResponsabilidadeDefault","CARTA_RESPONSABILIDADE","CustomizacaoTermosDemonstracaoResultadoDefault","DEMONSTRCAO_RESULTADO","CustomizacaoTermosVeracidadeCabecalhoDefault","VERACIDADE","CustomizacaoTermosVeracidadeRodapeDefault","getTermoDefaultAbertura","getTermoDefaultEncerramento","CUSTOMIZACAO_TERMO_ENUM_VALUES","customizacaoTipoEnum","find","it","CustomizacaoTermoIS","searchExpressions","apenasCartaResponsabilidade","alias","conditionalGroup","fieldName","apenasIndividualizadaVeracidade","apenasDemonstracaoResultado","apenasAberturaEncerramento","apenasBalancoPatrimonial","GRUPO_ATUAL","HIERARQUIA_INFERIOR"],"mappings":"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","file":"static/js/6.0c4c2a6e.chunk.js","sourcesContent":["import { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { Responsavel } from '../../../../../models/dtos/ger/responsavel';\r\nimport { CustomizacaoTermo } from '../../../../../models/dtos/mcg/customizacaoTermo';\r\n\r\nexport interface DemonstracaoResultadoRV extends ReportBasicValues {\r\n  modoSimplificado?: boolean;\r\n  imprimirInformacaoDiario?: boolean;\r\n  compararPeriodoAnterior?: boolean;\r\n  exibirNotasExplicativas?: boolean;\r\n  imprimirDataInicialFinal?: boolean;\r\n  livroDiario?: number;\r\n  folhaInicialDiario?: number;\r\n  folhaFinalDiario?: number;\r\n  consolidacao?: string;\r\n  termo?: CustomizacaoTermo;\r\n  termo2?: CustomizacaoTermo;\r\n  periodoAnterior?: string;\r\n  notasExplicativas?: string;\r\n  descricaoCSLL?: string;\r\n  descricaoImpostoRenda?: string;\r\n  imprimirDistribuicaoLucros?: boolean;\r\n  matrizFilial?: boolean;\r\n  dataEncerramento?: Date;\r\n  adicionarMarginHeader?: boolean;\r\n  descricaoReceitaOperacional?: string;\r\n  descricaoLucroBruto?: string;\r\n  descricaoResultadoOperacional?: string;\r\n  descricaoResultadoExercicio?: string;\r\n  isImprimirTermoPagDiferente?: boolean;\r\n  acumularDRE?: boolean;\r\n  representante?: Responsavel;\r\n  outrosResponsaveis?: Responsavel[];\r\n  pathAssinatura?: string;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'demonstracaoresultadorelrv';\r\nexport const REPORT_EVENT: string = 'printDemonstracaoResultado';\r\nexport const REPORT_TITLE: string = 'Demonstração do Resultado';\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMCG(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMCG) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o módulo Contábil. Para configurá-la acesse:\\n' +\r\n      'Módulo Contábil > Manutenção > Configurações > Empresa.';\r\n  }\r\n  return result;\r\n}\r\n","import { AxiosInstance } from 'axios';\r\nimport { ArquivoSelecionado, AxiosParam, create, isEmpty, send } from 'summer';\r\nimport { PlanoConta } from '../models/dtos/ger/planoConta';\r\nimport { PlanoContaSubGrupoParam } from '../models/dtos/ger/planoContaSubGrupoParam';\r\nimport { RuleMessage } from '../models/dtos/ger/ruleMessage';\r\nimport { Usuario } from '../models/dtos/ger/usuario';\r\nimport { BancoExtrato } from '../models/dtos/mcg/bancoExtrato';\r\nimport { BancoMCG } from '../models/dtos/mcg/bancoMCG';\r\nimport { BancoPlanoConta } from '../models/dtos/mcg/bancoPlanoConta';\r\nimport { CalculoIrpjCsll } from '../models/dtos/mcg/calculoIrpjCsll';\r\nimport { ComposicaoReceitaDespesasGrafParam } from '../models/dtos/mcg/composicaoReceitaDespesasGrafParam';\r\nimport { ComposicaoReceitaDespesasGrafReturn } from '../models/dtos/mcg/composicaoReceitaDespesasGrafReturn';\r\nimport { ConciliacaoBancaria } from '../models/dtos/mcg/conciliacaoBancaria';\r\nimport { ConciliacaoConta } from '../models/dtos/mcg/conciliacaoConta';\r\nimport { ConfigECFImuneIsenta } from '../models/dtos/mcg/configECFImuneIsenta';\r\nimport { ConfigECFIrpjCsll } from '../models/dtos/mcg/configECFIrpjCsll';\r\nimport { ConfigECFRemuneracaoSocio } from '../models/dtos/mcg/configECFRemuneracaoSocio';\r\nimport { ConsultaTotalLancamento } from '../models/dtos/mcg/consultaTotalLancamento';\r\nimport { ContaFluxoCaixa } from '../models/dtos/mcg/contaFluxoCaixa';\r\nimport { ContaFluxoCaixaIndireto } from '../models/dtos/mcg/contaFluxoCaixaIndireto';\r\nimport { ContaResultado } from '../models/dtos/mcg/contaResultado';\r\nimport { ContaResultadoLimpeza } from '../models/dtos/mcg/contaResultadoLimpeza';\r\nimport { ContaResultadoMCGEncerramento } from '../models/dtos/mcg/contaResultadoMCGEncerramento';\r\nimport { DataEncerradaParam } from '../models/dtos/mcg/dataEncerradaParam';\r\nimport { ECFExportacaoParam } from '../models/dtos/mcg/ecfExportacaoParam';\r\nimport { Erros } from '../models/dtos/mcg/erros';\r\nimport { EvolucaoContaContabilGrafParam } from '../models/dtos/mcg/evolucaoContaContabilGrafParam';\r\nimport { EvolucaoContaContabilGrafReturn } from '../models/dtos/mcg/evolucaoContaContabilGrafReturn';\r\nimport { FCONTContabilCrit } from '../models/dtos/mcg/fContContabilCrit';\r\nimport { FechamentoRestauracaoMCG } from '../models/dtos/mcg/fechamentoRestauracaoMCG';\r\nimport { ImportacaoFiscalContabil, ImportacaoFiscalContabilResult } from '../models/dtos/mcg/importacaoFiscalContabil';\r\nimport { ImportacaoHistorico } from '../models/dtos/mcg/importacaoHistorico';\r\nimport { ImportacaoHistoricoCSVParam } from '../models/dtos/mcg/importacaoHistoricoCSVParam';\r\nimport { ImportacaoLancamentoCSVParam } from '../models/dtos/mcg/importacaoLancamentoCSVParam';\r\nimport { ImportacaoLancamentoMCGRetornoValidacao } from '../models/dtos/mcg/importacaoLancamentoMCGRetornoValidacao';\r\nimport { ImportacaoLancamentoMCGSelecao } from '../models/dtos/mcg/importacaoLancamentoMCGSelecao';\r\nimport { ImportacaoLancamentoPadraoCSVParam } from '../models/dtos/mcg/importacaoLancamentoPadraoCSVParam';\r\nimport { ImportacaoPlanoConta } from '../models/dtos/mcg/importacaoPlanoConta';\r\nimport { ImportacaoPlanoContaCSVParam } from '../models/dtos/mcg/importacaoPlanoContaCSVParam';\r\nimport { ImportacaoSpedContabil } from '../models/dtos/mcg/importacaoSpedContabil';\r\nimport { ImportacaoResult, ImportarMCP } from '../models/dtos/mcg/importarMCP';\r\nimport { InfoConciliacaoBancaria } from '../models/dtos/mcg/infoConciliacaoBancaria';\r\nimport { IntegracaoFolhaParam } from '../models/dtos/mcg/integracaoFolhaParam';\r\nimport { IntegracaoHonorariosParam } from '../models/dtos/mcg/integracaoHonorariosParam';\r\nimport { Lancamento } from '../models/dtos/mcg/lancamento';\r\nimport { LancamentoConciliacao } from '../models/dtos/mcg/lancamentoConciliacao';\r\nimport { LancamentoIntegracaoFolha } from '../models/dtos/mcg/lancamentoIntegracaoFolha';\r\nimport { LancamentoIntegracaoHonorarios } from '../models/dtos/mcg/lancamentoIntegracaoHonorarios';\r\nimport { LancamentoSaldo } from '../models/dtos/mcg/lancamentoSaldo';\r\nimport { LivroFolha } from '../models/dtos/mcg/livroFolha';\r\nimport { LucroPrejuizoClassificacao } from '../models/dtos/mcg/lucroPrejuizoClassificacao';\r\nimport { MANADContabilCrit } from '../models/dtos/mcg/manadContabilCrit';\r\nimport { MutacaoPatrimonioLiquido } from '../models/dtos/mcg/mutacaoPatrimonioLiquido';\r\nimport { QuadroSocietario } from '../models/dtos/mcg/quadroSocietario';\r\nimport { RemoveLancamentoLote } from '../models/dtos/mcg/removeLancamentoLote';\r\nimport { RemoveLancamentoPeriodo } from '../models/dtos/mcg/removeLancamentoPeriodo';\r\nimport { Saldo } from '../models/dtos/mcg/saldo';\r\nimport { SaldoCriteria } from '../models/dtos/mcg/saldoCriteria';\r\nimport { SelecaoSpedContabil } from '../models/dtos/mcg/selecaoSpedContabil';\r\nimport { SomaSaldo } from '../models/dtos/mcg/somaSaldo';\r\nimport { TotalizadorLancamento } from '../models/dtos/mcg/totalizadorLancamento';\r\nimport { TransferenciaLancamentoConta } from '../models/dtos/mcg/transferenciaLancamentoConta';\r\nimport { VerificarErros } from '../models/dtos/mcg/verificarErros';\r\nimport { getArquivoDigitalService } from './ger.service';\r\n\r\nfunction getService(): AxiosInstance {\r\n  return create('/mcg');\r\n}\r\n\r\nexport function gerarLancamentosFolhaPagamento(integracaoFolhaParam: IntegracaoFolhaParam, param: AxiosParam<LancamentoIntegracaoFolha[]>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/gerarLancamentosFolhaPagamento', integracaoFolhaParam), param);\r\n}\r\n\r\nexport function integrarFolhaPagamento(lancamentoIntegracaoFolha: LancamentoIntegracaoFolha[], param: AxiosParam<any>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/integrarFolhaPagamento', lancamentoIntegracaoFolha), param);\r\n}\r\n\r\nexport function integrarMCP(importarParam: ImportarMCP, param: AxiosParam<ImportacaoResult>) {\r\n  send(getService().post<ImportacaoResult>('/importar', importarParam), param);\r\n}\r\n\r\nexport function importarLancamentoCSV(data: ImportacaoLancamentoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('importarDuplicados', String(data.importarDuplicados));\r\n  formDataSend.append('importarLancamentosCardinal', String(data.importarLancamentosCardinal));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarLancamentoPadraoCSV(data: ImportacaoLancamentoPadraoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoPadraoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistoricoCSV(data: ImportacaoHistoricoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('grupoHistoricoDestino.id', String(data.grupoHistoricoDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarHistoricoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarPlanoContaCSV(data: ImportacaoPlanoContaCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idEmpresa', String(data.idEmpresa));\r\n  formDataSend.append('grupoPlanoContaDestino.id', String(data.grupoPlanoContaDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarPlanoContaCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistorico(importacaoHistorico: ImportacaoHistorico, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarHistorico', importacaoHistorico), param);\r\n}\r\n\r\nexport function importarPlanoConta(importacaoPlanoContaParam: ImportacaoPlanoConta, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarPlanoConta', importacaoPlanoContaParam), param);\r\n}\r\n\r\nexport function buscarConfigLivroFolhaMCG(idEmpresa: number, param: AxiosParam<LivroFolha>) {\r\n  send(getService().get<LivroFolha>('/buscarConfigLivroFolhaMCG/' + idEmpresa), param);\r\n}\r\n\r\nexport function integracaoFiscalContabil(importarParam: ImportacaoFiscalContabil, param: AxiosParam<ImportacaoFiscalContabilResult>) {\r\n  send(getService().post<ImportacaoFiscalContabilResult>('/integracaoFiscalContabil', importarParam), param);\r\n}\r\n\r\nexport function encerrarContas(\r\n  contaResultadoEncerramento: ContaResultadoMCGEncerramento,\r\n  force: boolean,\r\n  param: AxiosParam<ContaResultadoMCGEncerramento>\r\n) {\r\n  send(\r\n    getService().post<ContaResultadoMCGEncerramento>('/encerrarContas', { contaResultadoEncerramento, force }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function getDataUltimaContaEncerrada(idGerEmpresa: number, param: AxiosParam<Date>) {\r\n  send(getService().get<Date>('/getDataUltimaContaEncerrada/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function limparEncerramentoContaResultado(contaResultadoLimpeza: ContaResultadoLimpeza, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/limparEncerramentoContaResultadoApos', contaResultadoLimpeza), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFIrpjCsll(configECFIrpjCsll: ConfigECFIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFIrpjCsll', configECFIrpjCsll), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFImuneIsenta(configECFImuneIsenta: ConfigECFImuneIsenta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFImuneIsenta', configECFImuneIsenta), param);\r\n}\r\n\r\nexport function validarRefRemuneracaoSocio(configECFRemuneracaoSocio: ConfigECFRemuneracaoSocio, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarRefRemuneracaoSocio', configECFRemuneracaoSocio), param);\r\n}\r\n\r\nexport function validarQuadroSocietario(configQuadro: QuadroSocietario, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/validarQuadroSocietario', configQuadro), param);\r\n}\r\n\r\nexport function obterLucroPrejuizoClassificacao(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterLucroPrejuizoClassificacao/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function getSaldo(saldo: Saldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldo', saldo), param);\r\n}\r\n\r\nexport function validarDadosSpedECF(ecfExportacaoParam: ECFExportacaoParam, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/validarDadosSpedECF', ecfExportacaoParam), param);\r\n}\r\n\r\nexport function gerarSpedECF(usuario: Usuario, ecfExportacaoParam: ECFExportacaoParam, param?: AxiosParam<string>) {\r\n  send(\r\n    getArquivoDigitalService().post<string>('/gerarSpedECF', { usuario, ecfExportacaoParam }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function recuperarLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<Lancamento[]>) {\r\n  send(getService().post<Lancamento[]>('/recuperarLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function transferirLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/transferirLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function obterBancoPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG>) {\r\n  send(getService().post<BancoMCG>('/obterBancoPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function validarConfigLivroFolha(idGerEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(getService().get<boolean>('/validarConfigLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function changeLivroFolha(idGerEmpresa: number, param: AxiosParam<void>) {\r\n  send(getService().get<void>('/changeLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function fecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<RuleMessage>) {\r\n  send(getService().post<RuleMessage>('/fecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function forceFecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/forceFecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function verificarErros(erros: VerificarErros, param: AxiosParam<Erros[]>) {\r\n  send(getService().post<Erros[]>('/verificarErros', erros), param);\r\n}\r\n\r\nexport function gerarSpedContabil(selecaoSped: SelecaoSpedContabil, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('usuario.id', String(selecaoSped.usuario.id));\r\n\r\n  if (selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n    for (const arquivo of selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n      formDataSend.append('arquivoRTFEscrituracaoSubstituida', arquivo.file, arquivo.nomeArquivo);\r\n    }\r\n  }\r\n\r\n  for (const atributoSelecaoSped in selecaoSped) {\r\n    if (\r\n      atributoSelecaoSped !== 'arquivoRTFEscrituracaoSubstituida' &&\r\n      atributoSelecaoSped !== 'usuario' &&\r\n      selecaoSped[atributoSelecaoSped] !== null\r\n    ) {\r\n      formDataSend.append(atributoSelecaoSped, selecaoSped[atributoSelecaoSped]);\r\n    }\r\n  }\r\n  send(getService().post<string>('/gerarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function salvarLucroPrejuizoClassificacao(\r\n  lucroPrejuizoClassificacao: LucroPrejuizoClassificacao,\r\n  param: AxiosParam<LucroPrejuizoClassificacao>\r\n) {\r\n  send(getService().post<LucroPrejuizoClassificacao>('/salvarLucroPrejuizoClassificacao', lucroPrejuizoClassificacao), param);\r\n}\r\n\r\nexport function consultarMovimentacao(saldoCriteria: SaldoCriteria, param: AxiosParam<LancamentoSaldo[]>) {\r\n  send(getService().post<LancamentoSaldo[]>('/consultarMovimentacao', saldoCriteria), param);\r\n}\r\n\r\nexport function totalizadorLancamento(consulta: ConsultaTotalLancamento, param: AxiosParam<TotalizadorLancamento>) {\r\n  send(getService().post<TotalizadorLancamento>('/totalizadorLancamento', consulta), param);\r\n}\r\n\r\nexport function getSaldoAnterior(saldoCriteria: SaldoCriteria, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoAnterior', saldoCriteria), param);\r\n}\r\n\r\nexport function isDataEncerrada(parametros: DataEncerradaParam, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isDataEncerrada', parametros), param);\r\n}\r\n\r\nexport function abrirContas(parametros: DataEncerradaParam, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/abrirContas', parametros), param);\r\n}\r\n\r\nexport function removeLancamentoPeriodo(parametros: RemoveLancamentoPeriodo, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removeLancamentoPeriodo', parametros), param);\r\n}\r\n\r\nexport function obterContasClassificacaoIndireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixaIndireto[]>) {\r\n  send(getService().get<ContaFluxoCaixaIndireto[]>('/obterContasClassificacaoIndireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoIndireto(contaFluxoCaixaIndireto: ContaFluxoCaixaIndireto, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoIndireto', contaFluxoCaixaIndireto), param);\r\n}\r\n\r\nexport function obterMutacaoPatrimonioLiquido(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterMutacaoPatrimonioLiquido/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarMutacaoPatrimonioLiquido(mutacaoPatrimonioLiquido: MutacaoPatrimonioLiquido, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarMutacaoPatrimonioLiquido', mutacaoPatrimonioLiquido), param);\r\n}\r\n\r\nexport function salvarContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function excluirContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/excluirContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function obterContasClassificacaoDireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixa[]>) {\r\n  send(getService().get<ContaFluxoCaixa[]>('/obterContasClassificacaoDireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoDireto(contaFluxoCaixa: ContaFluxoCaixa, param?: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoDireto', contaFluxoCaixa), param);\r\n}\r\n\r\nexport function findSubGrupo(planoContaSubGrupoParam: PlanoContaSubGrupoParam, param: AxiosParam<any>) {\r\n  send(getService().post<any>('/findSubGrupo', planoContaSubGrupoParam), param);\r\n}\r\n\r\nexport function removerTodosPlanosConta(idGrupoPlanoConta: number, usuario: Usuario, param: AxiosParam<void>) {\r\n  send(\r\n    getService().post<void>('/removerTodosPlanosConta', { idGrupoPlanoConta, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function removeList(listaPlanoConta: PlanoConta[], apagarFilha: boolean, usuario: Usuario, param: AxiosParam<any>) {\r\n  send(\r\n    getService().post<any>('/removeList', { listaPlanoConta, apagarFilha, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function listSubGrupo(planoConta: PlanoConta, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().post<PlanoConta[]>('/listSubGrupo', planoConta), param);\r\n}\r\n\r\nexport function referenciarContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<void>\r\n) {\r\n  send(\r\n    getService().post<void>('/referenciarContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function desvincularContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<any>\r\n) {\r\n  send(\r\n    getService().post<void>('/desvincularContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function existeLancamentoEmContaAnalitica(idPlanoConta: number, idEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(\r\n    getService().post<boolean>('/existeLancamentoEmContaAnalitica', { idPlanoConta, idEmpresa }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function importarLancamentoMCG(data: ImportacaoLancamentoMCGSelecao, param: AxiosParam<ImportacaoLancamentoMCGRetornoValidacao>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('tipoImportacao', String(data.tipoImportacao));\r\n  formDataSend.append('sobescrever', String(data.sobescrever));\r\n  formDataSend.append('versaoSuperiorA2', String(data.versaoSuperiorA2));\r\n  formDataSend.append('arquivo', data.arquivo[0].file, data.arquivo[0].nomeArquivo);\r\n\r\n  if (data.versaoSuperiorA2 === false && !isEmpty(data.dtInicial) && !isEmpty(data.dtFinal)) {\r\n    formDataSend.append('dtInicial', data.dtInicial);\r\n    formDataSend.append('dtFinal', data.dtFinal);\r\n  }\r\n\r\n  send(getService().post<ImportacaoLancamentoMCGRetornoValidacao>('/importarLancamentoMCG', formDataSend), param);\r\n}\r\n\r\nexport function importarSpedContabil(data: ImportacaoSpedContabil, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function gerarManadContabil(data: MANADContabilCrit, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('refInicial', data.refInicial);\r\n  formDataSend.append('refFinal', data.refFinal);\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  if (!isEmpty(data.arquivoSFP)) {\r\n    formDataSend.append('arquivoSFP', data.arquivoSFP[0].file, data.arquivoSFP[0].nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<string>('/gerarManadContabil', formDataSend), param);\r\n}\r\n\r\nexport function evolucaoContaContabilGraf(\r\n  evolucaoContaContabilGrafParam: EvolucaoContaContabilGrafParam,\r\n  param: AxiosParam<EvolucaoContaContabilGrafReturn>\r\n) {\r\n  send(getService().post<EvolucaoContaContabilGrafReturn>('/evolucaoContaContabilGraf', evolucaoContaContabilGrafParam), param);\r\n}\r\n\r\nexport function composicaoReceitaDespesasGraf(\r\n  compReceitaDespesasGrafParam: ComposicaoReceitaDespesasGrafParam,\r\n  param: AxiosParam<ComposicaoReceitaDespesasGrafReturn>\r\n) {\r\n  send(getService().post<ComposicaoReceitaDespesasGrafReturn>('/composicaoReceitaDespesasGraf', compReceitaDespesasGrafParam), param);\r\n}\r\n\r\nexport function gerarFCONTContabil(fContContabilCrit: FCONTContabilCrit, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/gerarFCONTContabil', fContContabilCrit), param);\r\n}\r\n\r\nexport function obterDadosArquivoExtrato(arquivoSelecionado: ArquivoSelecionado, idBancoMCG, param: AxiosParam<BancoExtrato[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idBancoMCG', idBancoMCG);\r\n\r\n  formDataSend.append('arquivoSelecionado', arquivoSelecionado[0].file, arquivoSelecionado[0].nomeArquivo);\r\n\r\n  send(getService().post<BancoExtrato[]>('/obterDadosArquivoExtrato', formDataSend), param);\r\n}\r\n\r\nexport function obterDadosConciliacaoBancariaPeriodo(\r\n  idGrupoPlanoConta,\r\n  idEmpresa,\r\n  idBancoMCG,\r\n  dtInicial,\r\n  dtFinal,\r\n  param: AxiosParam<InfoConciliacaoBancaria>\r\n) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGrupoPlanoConta', String(idGrupoPlanoConta));\r\n  formDataSend.append('idEmpresa', String(idEmpresa));\r\n  formDataSend.append('idBancoMCG', String(idBancoMCG));\r\n  formDataSend.append('dtInicial', String(dtInicial));\r\n  formDataSend.append('dtFinal', String(dtFinal));\r\n\r\n  send(getService().post<InfoConciliacaoBancaria>('/obterDadosConciliacaoBancariaPeriodo', formDataSend), param);\r\n}\r\n\r\nexport function obterBancoListPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG[]>) {\r\n  send(getService().post<BancoMCG[]>('/obterBancoListPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function conciliarLancamentosExtrato(listConciliacaoBancaria: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/conciliarLancamentosExtrato', listConciliacaoBancaria), param);\r\n}\r\n\r\nexport function removerConciliarLancamentosExtrato(listaRemover: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerConciliarLancamentosExtrato', listaRemover), param);\r\n}\r\n\r\nexport function removerLancamentosExtratoBancario(listaRemover: BancoExtrato[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerLancamentosExtratoBancario', listaRemover), param);\r\n}\r\nexport function obterLancamentosSaldoPeriodo(\r\n  idGrupoPlanoConta,\r\n  idEmpresa,\r\n  dtInicial,\r\n  dtFinal,\r\n  historico,\r\n  valor,\r\n  operacaoConsultaValor,\r\n  param: AxiosParam<LancamentoConciliacao[]>\r\n) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGrupoPlanoConta', String(idGrupoPlanoConta));\r\n  formDataSend.append('idEmpresa', String(idEmpresa));\r\n  formDataSend.append('dtInicial', String(dtInicial));\r\n  formDataSend.append('dtFinal', String(dtFinal));\r\n  formDataSend.append('historico', String(historico));\r\n  formDataSend.append('valor', String(valor));\r\n  formDataSend.append('operacaoConsultaValor', String(operacaoConsultaValor));\r\n\r\n  send(getService().post<LancamentoConciliacao[]>('/obterLancamentosSaldoPeriodo', formDataSend), param);\r\n}\r\n\r\nexport function conciliarLancamentosConta(listaConciliacao: ConciliacaoConta[], param: AxiosParam<void>) {\r\n  send(getService().post<void>('/conciliarLancamentosConta', listaConciliacao), param);\r\n}\r\n\r\nexport function removerConciliarLancamentosConta(listaConciliarRemover: ConciliacaoConta[], param: AxiosParam<void>) {\r\n  send(getService().post<void>('/removerConciliarLancamentosConta', listaConciliarRemover), param);\r\n}\r\n\r\nexport function eLalurAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLalurAContas/' + id), param);\r\n}\r\n\r\nexport function eLacsAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLacsAContas/' + id), param);\r\n}\r\n\r\nexport function getSaldoDebito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoDebito', parametros), param);\r\n}\r\n\r\nexport function getSaldoCredito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoCredito', parametros), param);\r\n}\r\n\r\nexport function removerLancamentoLote(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/removerLancamentoLote', parametros), param);\r\n}\r\n\r\nexport function atualizaCalculoIrpjCsll(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/atualizaCalculoIrpjCsll', parametros), param);\r\n}\r\n\r\nexport function buscarLancamentosHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  param: AxiosParam<LancamentoIntegracaoHonorarios[]>\r\n) {\r\n  send(getService().post<LancamentoIntegracaoHonorarios[]>('/buscarLancamentosHonorarios', integracaoHonorariosParam), param);\r\n}\r\n\r\nexport function integrarHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  lancamentos: LancamentoIntegracaoHonorarios[],\r\n  param: AxiosParam<number>\r\n) {\r\n  send(\r\n    getService().post<number>('/integrarHonorarios', { integracaoHonorariosParam, lancamentos }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function isAlteraCalculoIRPJorCSLL(parametros: CalculoIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isAlteraCalculoIRPJorCSLL', parametros), param);\r\n}\r\n\r\nexport function alterarPlanoContaNaturezaConfig(idsPlanoConta: number[], enumPlanoContaNaturezaConta: number, param: AxiosParam<void>) {\r\n  send(\r\n    getService().post<void>('/alterarPlanoContaNaturezaConfig', { idsPlanoConta, enumPlanoContaNaturezaConta }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function prepararContaResultado(idGrupoPlanoConta: number, param: AxiosParam<void>) {\r\n  send(getService().get<void>('/prepararContaResultado/' + idGrupoPlanoConta), param);\r\n}\r\n","export const NORMAL = { value: '1', label: 'Normal' };\r\nexport const GRUPO_ATUAL = { value: '2', label: 'Grupo Atual' };\r\nexport const HIERARQUIA_INFERIOR = { value: '3', label: 'Hierarquia Inferior' };\r\n\r\nexport const CONSOLIDAR_ENUM_VALUES = [NORMAL, GRUPO_ATUAL, HIERARQUIA_INFERIOR];\r\n\r\nexport const NORMAL_NUMBER = { value: 1, label: 'Normal' };\r\nexport const GRUPO_ATUAL_NUMBER = { value: 2, label: 'Grupo Atual' };\r\nexport const HIERARQUIA_INFERIOR_NUMBER = { value: 3, label: 'Hierarquia Inferior' };\r\n\r\nexport const CONSOLIDAR_NUMBER_ENUM_VALUES = [NORMAL_NUMBER, GRUPO_ATUAL_NUMBER, HIERARQUIA_INFERIOR_NUMBER];\r\n","import { Basic } from 'summer';\r\nimport { CepBairro } from './cepBairro';\r\nimport { CepLocalidade } from './cepLocalidade';\r\nimport { CepTitulo } from './cepTitulo';\r\nimport { CepUF } from './cepUF';\r\n\r\nexport interface Responsavel extends Basic {\r\n  cargo?: string;\r\n  cei?: string;\r\n  cep?: string;\r\n  cnpj?: string;\r\n  cpf?: string;\r\n  cepBairro?: CepBairro;\r\n  /** Campo referente a cidade */\r\n  cepLocalidade?: CepLocalidade;\r\n  /** tipo do logradouro ex: rua, avenida */\r\n  cepTitulo?: CepTitulo;\r\n  cepUf?: CepUF;\r\n  complemento?: string;\r\n  dataNascimento?: Date;\r\n  dataValidadeCRC?: Date;\r\n  email?: string;\r\n  /** Este campo utiliza o estadoCivilEnum */\r\n  estadoCivil?: string;\r\n  logradouro?: string;\r\n  numeroConselho?: string;\r\n  /** Este campo utiliza o nacionalidadeEnum */\r\n  nacionalidade?: string;\r\n  nome?: string;\r\n  numero?: string;\r\n  orgaoEmissor?: string;\r\n  rg?: string;\r\n  telefone?: string;\r\n  /** Este campo utiliza o responsavelTipoEnum */\r\n  tipo?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.responsavel';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/responsavel';\r\n\r\nconst ResponsavelIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'tipo',\r\n            text: 'Tipo',\r\n          },\r\n          {\r\n            dataField: 'telefone',\r\n            text: 'Telefone',\r\n          },\r\n          {\r\n            dataField: 'email',\r\n            text: 'E-mail',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'ResponsavelSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Responsável'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Responsável'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ResponsavelIS;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import { CustomizacaoTermoExample } from './customizacaoTermoExample';\r\n\r\nexport interface CustomizacaoTermo extends CustomizacaoTermoExample {\r\n  termoAbertura?: string;\r\n  termoEncerramento?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mcg.model.dto.customizacaotermo';\r\n","import { ABERTURA_ENCERRAMENTO } from '../../enumerated/mcg/customizacaoTermoEnum';\r\nimport { CustomizacaoTermosDefaultContent } from '../mfp/customizacaoTermosDefaultContent';\r\n\r\nexport class CustomizacaoTermosAberturaEncerramentoCabecalhoDefault implements CustomizacaoTermosDefaultContent {\r\n  private TERMO_PADRAO: string =\r\n    'CONTÉM O PRESENTE LIVRO <FOL_TOT/> FOLHAS, NUMERADAS SEQUENCIALMENTE POR ' +\r\n    'PROCESSAMENTO ELETRÔNICO DE DADOS DE <FOL_INI/> A <FOL_FIM/> E SE DESTINA A' +\r\n    ' SERVIR DE LIVRO <TIP_LIV/> NRO. <NUM_LIV/> DA EMPRESA \"<R_SOC_EMP/>\", ' +\r\n    'INSCRITA NO <CNPJ_CPF_EMP/>, COM SEDE A <END_EMP/>, CEP.: <CEP/>, NA CIDADE' +\r\n    ' DE <CID_EMP/>, ESTADO DE <UF_EMP/>, TENDO SEUS ATOS CONSTITUTIVOS ARQUIVADOS ' +\r\n    'NA <CART_EMP/> NO LIVRO <LIV_REG_EMP/>, SOB O NÚMERO <NUM_REG_EMP/>, EM <DAT_REG_EMP/>.';\r\n\r\n  public getCustomizacaoTermosTipoEnum() {\r\n    return ABERTURA_ENCERRAMENTO;\r\n  }\r\n\r\n  public getTermoDefault() {\r\n    return this.TERMO_PADRAO;\r\n  }\r\n}\r\n","import { ABERTURA_ENCERRAMENTO } from '../../enumerated/mcg/customizacaoTermoEnum';\r\nimport { CustomizacaoTermosDefaultContent } from '../mfp/customizacaoTermosDefaultContent';\r\n\r\nexport class CustomizacaoTermosAberturaEncerramentoRodapeDefault implements CustomizacaoTermosDefaultContent {\r\n  private TERMO_PADRAO: string =\r\n    '\\n' +\r\n    'CONTÉM O PRESENTE LIVRO <FOL_TOT/> FOLHAS, NUMERADAS SEQUENCIALMENTE POR PROCESSAMENTO ' +\r\n    'ELETRÔNICO DE DADOS DE <FOL_INI/> A <FOL_FIM/> QUE SE DESTINOU A SERVIR DE LIVRO ' +\r\n    '<TIP_LIV/> NRO. <NUM_LIV/> DA EMPRESA \"<R_SOC_EMP/>\", INSCRITA NO <CNPJ_CPF_EMP/>, ' +\r\n    'COM SEDE A <END_EMP/>, CEP.: <CEP/>, NA CIDADE DE <CID_EMP/>, ESTADO DE <UF_EMP/>,  ' +\r\n    'TENDO SEUS ATOS CONSTITUTIVOS ARQUIVADOS NA <CART_EMP/> NO LIVRO <LIV_REG_EMP/>, SOB O' +\r\n    ' NÚMERO <NUM_REG_EMP/>, EM <DAT_REG_EMP/>, COM ESCRITURAÇÃO REFERENTE AO PERÍODO DE ' +\r\n    '<PER_APURACAO/>.\\n';\r\n\r\n  public getCustomizacaoTermosTipoEnum() {\r\n    return ABERTURA_ENCERRAMENTO;\r\n  }\r\n\r\n  public getTermoDefault() {\r\n    return this.TERMO_PADRAO;\r\n  }\r\n}\r\n","import { BALANCO_PATRIMONIAL } from '../../enumerated/mcg/customizacaoTermoEnum';\r\nimport { CustomizacaoTermosDefaultContent } from '../mfp/customizacaoTermosDefaultContent';\r\n\r\nexport class CustomizacaoTermosBalancoPatrimonialDefault implements CustomizacaoTermosDefaultContent {\r\n  private TERMO_PADRAO: string =\r\n    'SOB AS PENAS DA LEI, DECLARAMOS QUE AS INFORMAÇÕES AQUI CONTIDAS SÃO VERDADEIRAS E NOS ' +\r\n    'RESPONSABILIZAMOS POR TODAS ELAS.\\n' +\r\n    'EM CUMPRIMENTO AO QUE DETERMINA O PARÁGRAFO 2º DO ARTIGO 1.184 DO CÓDIGO CIVIL BRASILEIRO, ' +\r\n    'LEI 10.406 DE 10/01/2002, ASSINAMOS O PRESENTE TERMO DE RESPONSABILIDADE RELATIVO A FIDELIDADE ' +\r\n    'E A REALIDADE DOS SALDOS DAS CONTAS AQUI LAVRADAS, CONSOANTE AS EXIGÊNCIAS DO ART. 1.188 DO' +\r\n    ' MESMO CÓDIGO. OS REGISTROS DO EXERCÍCIO FORAM REALIZADOS COM AMPARO EM DOCUMENTAÇÃO COMPETENTE,' +\r\n    ' REPASSADA AO PROFISSIONAL ENCARREGADO DA ESCRITA CONTÁBIL, ESTE NA QUALIDADE DE PROPOSTO DOS' +\r\n    ' SÓCIOS DA EMPRESA, ASSIM COMO, OS INVENTÁRIOS FÍSICOS DOS ELEMENTOS PATRIMONIAIS E AS PERTINENTES' +\r\n    ' AVALIAÇÕES, ESTES EFETUADOS SOB DIRETA RESPONSABILIDADE DO EMPRESÁRIO SIGNATÁRIO DESTE TERMO.';\r\n\r\n  public getCustomizacaoTermosTipoEnum() {\r\n    return BALANCO_PATRIMONIAL;\r\n  }\r\n\r\n  public getTermoDefault() {\r\n    return this.TERMO_PADRAO;\r\n  }\r\n}\r\n","import { CARTA_RESPONSABILIDADE } from '../../enumerated/mcg/customizacaoTermoEnum';\r\nimport { CustomizacaoTermosDefaultContent } from '../mfp/customizacaoTermosDefaultContent';\r\n\r\nexport class CustomizacaoTermosCartaResponsabilidadeDefault implements CustomizacaoTermosDefaultContent {\r\n  private TERMO_PADRAO: string =\r\n    'Prezados Senhores:\\n' +\r\n    'Declaramos, para os devidos fins, como administrador e responsável legal da empresa <R_SOC_EMP/>, CNPJ <CNPJ_CPF_EMP/>, que as informações relativas ao período base <PER_APURACAO/>, fornecidos a Vossas Senhorias para escrituração e elaboração das demonstrações contábeis, obrigações acessórias, apuração de impostos e arquivos eletrônicos exigidos pela fiscalização federal, estadual, municipal, trabalhista e previdenciária são fidedignas.\\n' +\r\n    'Também declaramos:\\n' +\r\n    '  (a). Que os controles internos adotados pela nossa empresa são de responsabilidade da administração e estão adequados ao tipo de atividade e volume de transações;\\n' +\r\n    '  (b). Que não realizamos nenhum tipo de operação que possa ser considerada ilegal, frente à legislação vigente;\\n' +\r\n    '  (c). Que todos os documentos que geramos e recebemos de nossos fornecedores estão revestidos de total idoneidade;\\n' +\r\n    '  (d). Que os estoques registrados em conta própria foram por nós avaliados, contados e levantados fisicamente e perfazem a realidade do período encerrado em <DT_PER_APURACAO_FIM/>;\\n' +\r\n    '  (e). Que as informações registradas no sistema de gestão e controle interno, denominado Calima ERP Contábil, são controladas e validadas com documentação suporte adequada, sendo de nossa inteira responsabilidade todo o conteúdo do banco de dados e arquivos eletrônicos gerados.\\n' +\r\n    'Além disso, declaramos que não temos conhecimento de quaisquer fatos ocorridos no período base que posssam afetar as demonstrações contábeis ou que as afetam até a data desta carta ou, ainda, que possam afetar a continuidade das operações da empresa.\\n' +\r\n    'Também confirmamos que não houve:\\n' +\r\n    '  (a). Fraude envolvendo administração ou empregados em cargos de responsabilidade ou confiança;\\n' +\r\n    '  (b). Fraude envolvendo terceiros que poderiam ter efeito material nas demonstrações contábeis;\\n' +\r\n    '  (c). Violação ou possíveis violações de lei, normas ou regulamentos cujos efeitos deveriam ser considerados para divulgação nas demonstrações contábeis, ou mesmo dar origem ao registro de provisão para contingências passivas.';\r\n\r\n  public getCustomizacaoTermosTipoEnum() {\r\n    return CARTA_RESPONSABILIDADE;\r\n  }\r\n\r\n  public getTermoDefault() {\r\n    return this.TERMO_PADRAO;\r\n  }\r\n}\r\n","import { DEMONSTRCAO_RESULTADO } from '../../enumerated/mcg/customizacaoTermoEnum';\r\nimport { CustomizacaoTermosDefaultContent } from '../mfp/customizacaoTermosDefaultContent';\r\n\r\nexport class CustomizacaoTermosDemonstracaoResultadoDefault implements CustomizacaoTermosDefaultContent {\r\n  private TERMO_PADRAO: string =\r\n    'RECONHECEMOS A EXATIDÃO DO PRESENTE DEMONSTRATIVO DO RESULTADO DO EXERCÍCIO, APRESENTANDO UM <LUC_PREJ_LIQUIDO/> DE <VALOR/> (<VALOR_EXTENSO/>).\\n' +\r\n    '\\n' +\r\n    'SOB AS PENAS DA LEI, DECLARAMOS QUE AS INFORMAÇÕES AQUI CONTIDAS SÃO VERDADEIRAS E NOS RESPONSABILIZAMOS POR TODAS ELAS.';\r\n\r\n  public getCustomizacaoTermosTipoEnum() {\r\n    return DEMONSTRCAO_RESULTADO;\r\n  }\r\n\r\n  public getTermoDefault() {\r\n    return this.TERMO_PADRAO;\r\n  }\r\n}\r\n","import { VERACIDADE } from '../../enumerated/mcg/customizacaoTermoEnum';\r\nimport { CustomizacaoTermosDefaultContent } from '../mfp/customizacaoTermosDefaultContent';\r\n\r\nexport class CustomizacaoTermosVeracidadeCabecalhoDefault implements CustomizacaoTermosDefaultContent {\r\n  private TERMO_PADRAO: string =\r\n    'DECLARO, SOB AS PENAS DA LEI, QUE AS INFORMAÇÕES AQUI CONTIDAS, REFLETEM A ' +\r\n    'DOCUMENTAÇÃO QUE ME FOI ENTREGUE, SÃO VERDADEIRAS E ME RESPONSABILIZO POR TODAS ELAS.';\r\n\r\n  public getCustomizacaoTermosTipoEnum() {\r\n    return VERACIDADE;\r\n  }\r\n\r\n  public getTermoDefault() {\r\n    return this.TERMO_PADRAO;\r\n  }\r\n}\r\n","import { VERACIDADE } from '../../enumerated/mcg/customizacaoTermoEnum';\r\nimport { CustomizacaoTermosDefaultContent } from '../mfp/customizacaoTermosDefaultContent';\r\n\r\nexport class CustomizacaoTermosVeracidadeRodapeDefault implements CustomizacaoTermosDefaultContent {\r\n  private TERMO_PADRAO: string =\r\n    'DECLARO, SOB AS PENAS DA LEI, QUE AS INFORMAÇÕES AQUI CONTIDAS, SÃO VERDADEIRAS E ME RESPONSABILIZO POR TODAS ELAS.';\r\n\r\n  public getCustomizacaoTermosTipoEnum() {\r\n    return VERACIDADE;\r\n  }\r\n\r\n  public getTermoDefault() {\r\n    return this.TERMO_PADRAO;\r\n  }\r\n}\r\n","import { CustomizacaoTermosAberturaEncerramentoCabecalhoDefault } from '../../dtos/mcg/customizacaoTermosAberturaEncerramentoCabecalhoDefault';\r\nimport { CustomizacaoTermosAberturaEncerramentoRodapeDefault } from '../../dtos/mcg/customizacaoTermosAberturaEncerramentoRodapeDefault';\r\nimport { CustomizacaoTermosBalancoPatrimonialDefault } from '../../dtos/mcg/customizacaoTermosBalancoPatrimonialDefault';\r\nimport { CustomizacaoTermosCartaResponsabilidadeDefault } from '../../dtos/mcg/customizacaoTermosCartaResponsabilidadeDefault';\r\nimport { CustomizacaoTermosDemonstracaoResultadoDefault } from '../../dtos/mcg/customizacaoTermosDemonstracaoResultadoDefault';\r\nimport { CustomizacaoTermosVeracidadeCabecalhoDefault } from '../../dtos/mcg/customizacaoTermosVeracidadeCabecalhoDefault';\r\nimport { CustomizacaoTermosVeracidadeRodapeDefault } from '../../dtos/mcg/customizacaoTermosVeracidadeRodapeDefault';\r\n\r\nexport const ABERTURA_ENCERRAMENTO = { value: 'ABERTURA_ENCERRAMENTO', label: 'Termo de Abertura e Encerramento' };\r\nexport const VERACIDADE = { value: 'VERACIDADE', label: 'Declaração Individualizada de Veracidade' };\r\nexport const BALANCO_PATRIMONIAL = { value: 'BALANCO_PATRIMONIAL', label: 'Termo do Balanço Patrimonial' };\r\nexport const DEMONSTRCAO_RESULTADO = { value: 'DEMONSTRCAO_RESULTADO', label: 'Termo da Demonstração do Resultado' };\r\nexport const CARTA_RESPONSABILIDADE = { value: 'CARTA_RESPONSABILIDADE', label: 'Carta de Responsabilidade' };\r\n\r\nexport function getTermoDefaultAbertura(customizacaoTipoEnum: string) {\r\n  const result = getAllDefaultContentsAbertura().find(it => it.getCustomizacaoTermosTipoEnum().value === customizacaoTipoEnum);\r\n  return result === null ? null : result.getTermoDefault();\r\n}\r\n\r\nexport function getTermoDefaultEncerramento(customizacaoTipoEnum: string) {\r\n  const result = getAllDefaultContentsEncerrramento().find(it => it.getCustomizacaoTermosTipoEnum().value === customizacaoTipoEnum);\r\n  return result === null ? null : result.getTermoDefault();\r\n}\r\n\r\nexport function getAllDefaultContentsAbertura() {\r\n  return [\r\n    new CustomizacaoTermosAberturaEncerramentoCabecalhoDefault(),\r\n    new CustomizacaoTermosBalancoPatrimonialDefault(),\r\n    new CustomizacaoTermosCartaResponsabilidadeDefault(),\r\n    new CustomizacaoTermosDemonstracaoResultadoDefault(),\r\n    new CustomizacaoTermosVeracidadeCabecalhoDefault(),\r\n  ];\r\n}\r\n\r\nexport function getAllDefaultContentsEncerrramento() {\r\n  return [new CustomizacaoTermosAberturaEncerramentoRodapeDefault(), new CustomizacaoTermosVeracidadeRodapeDefault()];\r\n}\r\n\r\nexport const CUSTOMIZACAO_TERMO_ENUM_VALUES = [ABERTURA_ENCERRAMENTO, VERACIDADE, BALANCO_PATRIMONIAL, DEMONSTRCAO_RESULTADO, CARTA_RESPONSABILIDADE];\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { InputSearchProps } from 'summer/dist/views/components/inputSearch/InputSearch';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mcg/customizacaoTermo';\r\nimport {\r\n  ABERTURA_ENCERRAMENTO,\r\n  BALANCO_PATRIMONIAL,\r\n  CARTA_RESPONSABILIDADE,\r\n  DEMONSTRCAO_RESULTADO,\r\n  VERACIDADE,\r\n} from '../../../../models/enumerated/mcg/customizacaoTermoEnum';\r\n\r\nexport interface CustomizacaoTermoSearchViewProps extends InputProps {\r\n  apenasCartaResponsabilidade?: boolean;\r\n  apenasIndividualizadaVeracidade?: boolean;\r\n  apenasDemonstracaoResultado?: boolean;\r\n  apenasAberturaEncerramento?: boolean;\r\n  apenasBalancoPatrimonial?: boolean;\r\n}\r\n\r\nconst CustomizacaoTermoIS: FC<CustomizacaoTermoSearchViewProps> = props => {\r\n  function getSearchExpression(): SearchExpression[] {\r\n    if (props.apenasCartaResponsabilidade) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: CARTA_RESPONSABILIDADE.value,\r\n        },\r\n      ];\r\n    }\r\n    if (props.apenasIndividualizadaVeracidade) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: VERACIDADE.value,\r\n        },\r\n      ];\r\n    }\r\n    if (props.apenasDemonstracaoResultado) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: DEMONSTRCAO_RESULTADO.value,\r\n        },\r\n      ];\r\n    }\r\n    if (props.apenasAberturaEncerramento) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: ABERTURA_ENCERRAMENTO.value,\r\n        },\r\n      ];\r\n    }\r\n    if (props.apenasBalancoPatrimonial) {\r\n      return [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'tipo',\r\n          value: BALANCO_PATRIMONIAL.value,\r\n        },\r\n      ];\r\n    }\r\n    return [];\r\n  }\r\n\r\n  const inputSearchProps: InputSearchProps<any> = {\r\n    ...props.inputSearchProps,\r\n    columns: [\r\n      {\r\n        dataField: 'descricao',\r\n        text: 'Descrição',\r\n      },\r\n      {\r\n        dataField: 'termo',\r\n        text: 'Termo',\r\n      },\r\n    ],\r\n    dtoClassName: CLASS_NAME,\r\n    searchExpressions: getSearchExpression,\r\n    searchViewId: 'CustomizacaoTermoSearchView',\r\n  };\r\n\r\n  return <InputGroupInline {...props} type={InputType.INPUT_SEARCH} inputSearchProps={inputSearchProps} />;\r\n};\r\n\r\nexport default CustomizacaoTermoIS;\r\n","export const NORMAL = { value: '1', label: 'Normal' };\r\nexport const GRUPO_ATUAL = { value: '2', label: 'Grupo Atual' };\r\nexport const HIERARQUIA_INFERIOR = { value: '3', label: 'Hierarquia Inferior' };\r\n\r\nexport const CONSOLIDAR_ENUM_VALUES = [NORMAL, GRUPO_ATUAL, HIERARQUIA_INFERIOR];\r\n"],"sourceRoot":""}
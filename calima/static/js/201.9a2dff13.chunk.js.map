{"version":3,"sources":["models/enumerated/ger/statusEmpresasEnum.ts","views/pages/ger/report/relacaoEmpresa/relacaoEmpresaRV.ts","views/pages/ger/report/relacaoEmpresa/RelacaoEmpresaReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","models/enumerated/mlf/sinteticoAnaliticoEnum.ts"],"names":["TODAS","label","value","STATUS_EMPRESAS_ENUM","DEFAULT_VALUES","Object","objectSpread2","empresasSelecionadas","getDefaultReportBasicValues","gerarCabecalhoPadraoAdministradora","isOrdenarRazao","status","tipo","ANALITICO","DEFAULT_OPTIONS","getDefaultReportViewOptions","SIMPLE","exibirConfiguracaoDadosEmpresa","RelacaoEmpresaReportView","props","globalReducer","useSelector","state","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","objectWithoutProperties","propToolTip","messagem","message","placement","react_default","a","createElement","summer_esm","title","useGlobalParameter","globalParameter","dependencies","hasEmpresa","ReportForm","assign","localStorageKey","routeProps","reportBasicValues","reportViewOptions","EmpresaIS","placeholder","id","isPrependLabel","inputSearchProps","selectProps","isMulti","validation","required","inputDropDownProps","optionsProvider","isClearable","type","InputType","DROP_DOWN","SINTETICO_ANALITICO_ENUM_VALUES","Row","Col","Label","style","marginRight","CustomInput","inline","innerRef","register","name","withTooltip","result","empresa","__webpack_require__","d","__webpack_exports__","NATUREZA","SALDO_REPORT_ENUM","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","virtualization","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","errors","getValues","setValue","triggerValidation","handleCancel","validateExtras","currentItem","currentValues","parentObject","EnvioEmail","Fragment","sort","detailView","keyField","propName","className","maxLength","TEXT_AREA","ReportInputs","_useState","useState","_useState2","slicedToArray","activeTab","setActiveTab","useEffect","_props$reportViewOpti","printingTypes","resetObject","length","idGerEmpresa","current","currentMomentDate","endDate","DATE","dtInicial","formatDate","toDate","DATES","dtFinal","endOf","REFERENCE","referenciaInicial","format","REF_PATTERN","REFERENCES","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dtInicialRequired","dateComponent","datesComponent","dtFinalRequired","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","NUMBER","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","inputProps","disabled","gerarPorEmpresas","marginBottom","size","segmentacaoFolhaComponent","exibirSegmentacaoFolha","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","exibirImprimirValoresColoridos","firstOpen","extraConfigOpened","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","hidden","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","erros","params","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history"],"mappings":"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","file":"static/js/201.9a2dff13.chunk.js","sourcesContent":["export const TODAS = { label: 'Todas', value: 'TODAS' };\r\nexport const ATIVA = { label: 'Ativa', value: 'ATIVA' };\r\nexport const INATIVA = { label: 'Inativa', value: 'INATIVA' };\r\n\r\nconst STATUS_EMPRESAS_ENUM = [TODAS, ATIVA, INATIVA];\r\n\r\nexport default STATUS_EMPRESAS_ENUM;\r\n","import { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\n\r\nexport interface RelacaoEmpresaRV extends ReportBasicValues {\r\n  status?: string;\r\n  tipo?: string;\r\n  isOrdenarRazao?: any;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'relacaoempresasrv';\r\nexport const REPORT_TITLE: string = 'Relação de Empresas';\r\nexport const REPORT_EVENT: string = 'printRelacaoEmpresas';\r\n","import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, CustomInput, Label, Row } from 'reactstrap';\r\nimport { InputGroupInline, InputTooltipProps, InputType, SIMPLE, WindowComponent, WindowComponentProps, withTooltip } from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { getDefaultReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport STATUS_EMPRESAS_ENUM, { TODAS } from '../../../../../models/enumerated/ger/statusEmpresasEnum';\r\nimport { ANALITICO, SINTETICO_ANALITICO_ENUM_VALUES } from '../../../../../models/enumerated/mlf/sinteticoAnaliticoEnum';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport EmpresaIS from '../../../../components/ger/empresaIS/EmpresaIS';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { CLASS_KEY, RelacaoEmpresaRV, REPORT_EVENT, REPORT_TITLE } from './relacaoEmpresaRV';\r\n\r\nconst DEFAULT_VALUES: RelacaoEmpresaRV = {\r\n  empresasSelecionadas: [],\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n  gerarCabecalhoPadraoAdministradora: true,\r\n  isOrdenarRazao: 'true',\r\n  status: TODAS.value,\r\n  tipo: ANALITICO.value,\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT, SIMPLE.value),\r\n  exibirConfiguracaoDadosEmpresa: false,\r\n};\r\n\r\nconst RelacaoEmpresaReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const { handleSubmit, ...formProps } = useForm<RelacaoEmpresaRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n\r\n  const propToolTip = (messagem: string): InputTooltipProps => {\r\n    return {\r\n      message: messagem,\r\n      placement: 'top-start',\r\n    };\r\n  };\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Relação de Empresas\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter)]}\r\n    >\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n      >\r\n        <EmpresaIS\r\n          formProps={formProps}\r\n          label=\"Empresa(s)\"\r\n          placeholder=\"Selecione uma ou várias empresas\"\r\n          id=\"empresasSelecionadas\"\r\n          isPrependLabel={true}\r\n          inputSearchProps={{ selectProps: { isMulti: true } }}\r\n        />\r\n\r\n        <InputGroupInline\r\n          id=\"status\"\r\n          label=\"Status da Empresa\"\r\n          isPrependLabel={true}\r\n          formProps={{ ...formProps, validation: { required: true } }}\r\n          inputDropDownProps={{\r\n            optionsProvider: STATUS_EMPRESAS_ENUM,\r\n            selectProps: { isClearable: false },\r\n          }}\r\n          type={InputType.DROP_DOWN}\r\n        />\r\n\r\n        <InputGroupInline\r\n          id=\"tipo\"\r\n          label=\"Tipo de Relatório\"\r\n          isPrependLabel={true}\r\n          placeholder=\"Selecione o tipo de relatório\"\r\n          formProps={{ ...formProps, validation: { required: true } }}\r\n          inputDropDownProps={{\r\n            optionsProvider: SINTETICO_ANALITICO_ENUM_VALUES,\r\n            selectProps: { isClearable: false },\r\n          }}\r\n          type={InputType.DROP_DOWN}\r\n        />\r\n\r\n        <Row>\r\n          <Col>\r\n            <Label style={{ marginRight: 20 }}>Ordenar Por</Label>\r\n            <CustomInput\r\n              id=\"idisOrdenarRazaoTrue\"\r\n              inline={true}\r\n              innerRef={formProps.register}\r\n              label=\"Razão Social\"\r\n              name=\"isOrdenarRazao\"\r\n              value={'true'}\r\n              type=\"radio\"\r\n            />\r\n            {withTooltip(propToolTip('Ordena as empresas pela razão social'), 'isOrdenarRazaoTrue')}\r\n\r\n            <CustomInput\r\n              id=\"idisOrdenarRazaoFalse\"\r\n              inline={true}\r\n              innerRef={formProps.register}\r\n              label=\"Código\"\r\n              name=\"isOrdenarRazao\"\r\n              value={'false'}\r\n              type=\"radio\"\r\n            />\r\n            {withTooltip(propToolTip('Ordena as empresas por código'), 'isOrdenarRazaoFalse')}\r\n          </Col>\r\n        </Row>\r\n      </ReportForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default RelacaoEmpresaReportView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","export const SINTETICO = { label: 'Sintético', value: 'SINTETICO' };\r\nexport const ANALITICO = { label: 'Analítico', value: 'ANALITICO' };\r\n\r\nexport const SINTETICO_ANALITICO_ENUM_VALUES = [SINTETICO, ANALITICO];\r\n"],"sourceRoot":""}
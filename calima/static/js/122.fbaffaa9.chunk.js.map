{"version":3,"sources":["views/pages/mfp/report/memoriaCalculoDARF/memoriaCalculoDARFRV.ts","views/pages/mfp/report/memoriaCalculoDARF/MemoriaCalculoDARFReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","dependencies/empresaMFPDependency.ts","models/enumerated/mfp/guiaDarfEnum.ts"],"names":["DEFAULT_VALUES","Object","objectSpread2","getDefaultReportBasicValues","gerarCabecalhoPadraoAdministradora","tipoDarf","CONTRIBUICAO_TI","value","DEFAULT_OPTIONS","getDefaultReportViewOptions","exibirConfiguracaoDadosEmpresa","MemoriaCalculoDARFReportView","props","globalReducer","useSelector","state","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","objectWithoutProperties","react_default","a","createElement","summer_esm","title","useGlobalParameter","globalParameter","dependencies","hasEmpresa","hasEmpresaMFP","ReportForm","assign","localStorageKey","routeProps","reportBasicValues","reportViewOptions","Row","Col","validation","required","id","isPrependLabel","label","labelWidth","placeholder","type","InputType","REFERENCE","inputDropDownProps","optionsProvider","GUIA_DARF_ENUM_VALUES","selectProps","isClearable","DROP_DOWN","result","empresa","__webpack_require__","d","__webpack_exports__","NATUREZA","SALDO_REPORT_ENUM","EmpresaIS","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","inputSearchProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","empresasSelecionadas","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","virtualization","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","errors","getValues","register","setValue","triggerValidation","handleCancel","validateExtras","currentItem","currentValues","parentObject","EnvioEmail","Fragment","sort","detailView","keyField","propName","className","CustomInput","name","innerRef","maxLength","TEXT_AREA","ReportInputs","_useState","useState","_useState2","slicedToArray","activeTab","setActiveTab","useEffect","_props$reportViewOpti","printingTypes","resetObject","length","idGerEmpresa","current","currentMomentDate","endDate","DATE","dtInicial","formatDate","toDate","DATES","dtFinal","endOf","referenciaInicial","format","REF_PATTERN","REFERENCES","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dtInicialRequired","dateComponent","datesComponent","dtFinalRequired","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","NUMBER","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","inputProps","disabled","gerarPorEmpresas","style","marginBottom","size","isMulti","segmentacaoFolhaComponent","exibirSegmentacaoFolha","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","exibirImprimirValoresColoridos","firstOpen","extraConfigOpened","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","hidden","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","erros","params","message","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history","empresaMFP"],"mappings":"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","file":"static/js/122.fbaffaa9.chunk.js","sourcesContent":["import { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\n\r\nexport interface MemoriaCalculoDARFRV extends ReportBasicValues {\r\n  referencia?: string;\r\n  /** este campo utiliza o enum GuiaDarfEnum */\r\n  tipoDarf?: string;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'memoriacalculodarfrv';\r\nexport const REPORT_EVENT: string = 'printMemoriaCalculoDarf';\r\nexport const REPORT_TITLE: string = 'Memória de Cálculo - DARF';\r\n","import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { InputGroupInline, InputType, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMFP } from '../../../../../dependencies/empresaMFPDependency';\r\nimport { getDefaultReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport { CONTRIBUICAO_TI, GUIA_DARF_ENUM_VALUES } from '../../../../../models/enumerated/mfp/guiaDarfEnum';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { CLASS_KEY, MemoriaCalculoDARFRV, REPORT_EVENT, REPORT_TITLE } from './memoriaCalculoDARFRV';\r\n\r\nconst DEFAULT_VALUES: MemoriaCalculoDARFRV = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n  gerarCabecalhoPadraoAdministradora: true,\r\n  tipoDarf: CONTRIBUICAO_TI.value,\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT),\r\n  exibirConfiguracaoDadosEmpresa: true,\r\n};\r\n\r\nconst defaultWidth: number = 120;\r\n\r\nconst MemoriaCalculoDARFReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const { handleSubmit, ...formProps } = useForm<MemoriaCalculoDARFRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Memória de Cálculo - DARF\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMFP(globalReducer.globalParameter)]}\r\n    >\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n      >\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              id=\"referencia\"\r\n              isPrependLabel={true}\r\n              label=\"Referência\"\r\n              labelWidth={defaultWidth}\r\n              placeholder=\"Informe a Referência\"\r\n              type={InputType.REFERENCE}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"tipoDarf\"\r\n              label=\"Tipo de Darf\"\r\n              labelWidth={defaultWidth}\r\n              isPrependLabel={true}\r\n              placeholder=\"Selecione o Tipo de Darf\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              inputDropDownProps={{\r\n                optionsProvider: GUIA_DARF_ENUM_VALUES,\r\n                selectProps: { isClearable: false },\r\n              }}\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </ReportForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default MemoriaCalculoDARFReportView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMFP(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMFP) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o Módulo Folha de Pagamento. Para configurá-la acesse Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n","export const CONTRIBUICAO_TI = {\r\n  label:\r\n    '2985 - Contribuição Previdenciária Sobre Receita Bruta – Empresas Prestadoras de Serviços de Tecnologia da Informação (TI) e Tecnologia da Informação e Comunicação (TIC)',\r\n  value: 'CONTRIBUICAO_TI',\r\n};\r\nexport const CONTRIBUICAO_DEMAIS = { label: '2991 - Contribuição Previdenciária Sobre Receita Bruta – Demais.', value: 'CONTRIBUICAO_DEMAIS' };\r\nexport const IRRF_EMPREGADO = { label: '0561 - IRRF - Rendimento do Trabalho Assalariado.', value: 'IRRF_EMPREGADO' };\r\nexport const IRRF_AUTONOMO = { label: '0588 - IRRF - Rendimento do Trabalho sem Vínculo Empregatício.', value: 'IRRF_AUTONOMO' };\r\nexport const PIS_FOLHA = { label: '8301 - PIS - Folha de Pagamento.', value: 'PIS_FOLHA' };\r\n\r\nexport const GUIA_DARF_ENUM_VALUES = [CONTRIBUICAO_TI, CONTRIBUICAO_DEMAIS, IRRF_EMPREGADO, IRRF_AUTONOMO, PIS_FOLHA];\r\n"],"sourceRoot":""}
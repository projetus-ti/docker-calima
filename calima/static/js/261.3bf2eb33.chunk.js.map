{"version":3,"sources":["models/dtos/mcg/doacaoPartidoPolitico.ts","models/enumerated/mcg/formaDoacaoEnum.ts","models/enumerated/mcg/tipoBeneficiarioEnum.ts","views/pages/mcg/doacaoPartidoPolitico/DoacaoPartidoPoliticoSearchView.tsx","dependencies/empresaDependency.ts","dependencies/empresaMCGDependency.ts"],"names":["__webpack_require__","d","__webpack_exports__","CLASS_NAME","FORMA_DOACAO_ENUM_VALUES","label","value","TIPO_BENEFICIARIO_ENUM_VALUES","r","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","summer__WEBPACK_IMPORTED_MODULE_2__","_dependencies_empresaDependency__WEBPACK_IMPORTED_MODULE_3__","_dependencies_empresaMCGDependency__WEBPACK_IMPORTED_MODULE_4__","_models_dtos_mcg_doacaoPartidoPolitico__WEBPACK_IMPORTED_MODULE_5__","_models_enumerated_mcg_formaDoacaoEnum__WEBPACK_IMPORTED_MODULE_6__","_models_enumerated_mcg_tipoBeneficiarioEnum__WEBPACK_IMPORTED_MODULE_7__","defaultSorted","dataField","order","OrderType","ASC","cellEditProps","blurToSave","mode","ClickEnum","CLICK","DoacaoPartidoPoliticoSearchView","props","globalReducer","useSelector","state","columns","editable","filter","type","FilterType","TEXT","formatter","cnpjFormatter","sort","text","enumColumn","editor","decimalFormatter","a","createElement","title","useGlobalParameter","globalParameter","dependencies","hasEmpresa","hasEmpresaMCG","Object","assign","searchDataGridProps","dtoClassName","extraData","getExtraData","result","empresa","empresaMCG"],"mappings":"6FAaAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAO,MAAMA,EAAa,2GCb1BH,EAAAC,EAAAC,EAAA,sBAAAE,IAAO,MAQMA,EAA2B,CARlB,CAAEC,MAAO,SAAUC,MAAO,UACR,CAAED,MAAO,iCAA4BC,MAAO,4BACpD,CAAED,MAAO,4BAAuBC,MAAO,oBACnC,CAAED,MAAO,8BAA4BC,MAAO,wBACxD,CAAED,MAAO,WAAYC,MAAO,YAChC,CAAED,MAAO,OAAQC,MAAO,QACpB,CAAED,MAAO,cAAYC,MAAO,gDCNpDN,EAAAC,EAAAC,EAAA,sBAAAK,IAAO,MAIMA,EAAgC,CAJN,CAAEF,MAAO,4BAA6BC,MAAO,2BACnD,CAAED,MAAO,uBAAqBC,MAAO,qBACtC,CAAED,MAAO,sBAAoBC,MAAO,wDCFpEN,EAAAQ,EAAAN,GAAA,IAAAO,EAAAT,EAAA,GAAAU,EAAAV,EAAAW,EAAAF,GAAAG,EAAAZ,EAAA,IAAAa,EAAAb,EAAA,GAAAc,EAAAd,EAAA,KAAAe,EAAAf,EAAA,KAAAgB,EAAAhB,EAAA,MAAAiB,EAAAjB,EAAA,MAAAkB,EAAAlB,EAAA,MAyBA,MAAMmB,EAAoC,CACxC,CACEC,UAAW,OACXC,MAAOC,IAAUC,MAIfC,EAA+B,CACnCC,YAAY,EACZC,KAAMC,IAAUC,OAoEHC,UAjEqEC,KAClF,MAAMC,EAAgBC,YAAmCC,GAASA,EAAMF,eAElEG,EAA0B,CAC9B,CACEd,UAAW,OACXe,UAAU,EACVC,OAAQ,CACNC,KAAMC,IAAWC,MAEnBC,UAAWC,KACXC,MAAM,EACNC,KAAM,QAERC,aACE,CACExB,UAAW,OACXyB,QAAQ,EACRT,QAAQ,EACRM,MAAM,EACNC,KAAM,wBAERpC,KAEFqC,aACE,CACExB,UAAW,QACXyB,QAAQ,EACRT,QAAQ,EACRM,MAAM,EACNC,KAAM,yBAERvC,KAEF,CACEgB,UAAW,QACXe,UAAU,EACVC,OAAQ,CACNC,KAAMC,IAAWC,MAEnBC,UAAWM,KACXJ,MAAM,EACNC,KAAM,UAGV,OACEjC,EAAAqC,EAAAC,cAACnC,EAAA,GAAD,CACEoC,MAAM,2DACNC,oBAAoB,EACpBC,gBAAiBpB,EAAcoB,gBAC/BC,aAAc,CAAC,IAAMC,YAAWtB,EAAcoB,iBAAkB,IAAMG,YAAcvB,EAAcoB,mBAElGzC,EAAAqC,EAAAC,cAACnC,EAAA,EAAD0C,OAAAC,OAAA,GACM1B,EACAA,EAAM2B,oBAFZ,CAGEC,aAAcvD,IACd+B,QAASA,EACTV,cAAeA,EACfL,cAAeA,EACfwC,UAAWC,aAAa9B,EAAO,gCAAiC3B,6CC9FjE,SAASkD,EAAWF,GACzB,IAAIU,EAAS,KAIb,OAHKV,EAAgBW,UACnBD,EAAS,kDAEJA,EALT7D,EAAAC,EAAAC,EAAA,sBAAAmD,sCCAO,SAASC,EAAcH,GAC5B,IAAIU,EAAS,KAMb,OALKV,EAAgBY,aACnBF,EACE,0LAGGA,EAPT7D,EAAAC,EAAAC,EAAA,sBAAAoD","file":"static/js/261.3bf2eb33.chunk.js","sourcesContent":["import { Basic } from 'summer';\r\nimport { EmpresaMCG } from './empresaMCG';\r\n\r\nexport interface DoacaoPartidoPolitico extends Basic {\r\n  cnpj?: string;\r\n  empresaMCG?: EmpresaMCG;\r\n  /** FormaDoacaoEnum */\r\n  forma?: string;\r\n  /** TipoBenefiarioEnum */\r\n  tipo?: string;\r\n  valor?: number;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mcg.model.dto.doacaopartidopolitico';\r\n","export const CHEQUE = { label: 'Cheque', value: 'cheque' };\r\nexport const TRANSFERENCIA_ELETRONICA = { label: 'Transferência Eletrônica', value: 'transferencia_eletronica' };\r\nexport const DEPOSITO_ESPECIE = { label: 'Depósito em Espécie', value: 'deposito_especie' };\r\nexport const OUTROS_TIPOS_CREDITO = { label: 'Outros Tipos de Créditos', value: 'outros_tipos_credito' };\r\nexport const DINHEIRO = { label: 'Dinheiro', value: 'dinheiro' };\r\nexport const BENS = { label: 'Bens', value: 'bens' };\r\nexport const SERVICOS = { label: 'Serviços', value: 'servicos' };\r\n\r\nexport const FORMA_DOACAO_ENUM_VALUES = [CHEQUE, TRANSFERENCIA_ELETRONICA, DEPOSITO_ESPECIE, OUTROS_TIPOS_CREDITO, DINHEIRO, BENS, SERVICOS];\r\n","export const CANDIDATO_CARGO_EFETIVO = { label: 'Candidato a Cargo Eletivo', value: 'candidato_cargo_efetivo' };\r\nexport const COMITE_FINANCEIRO = { label: 'Comitê Financeiro', value: 'comite_financeiro' };\r\nexport const PARTIDO_POLITICO = { label: 'Partido Político', value: 'partido_politico' };\r\n\r\nexport const TIPO_BENEFICIARIO_ENUM_VALUES = [CANDIDATO_CARGO_EFETIVO, COMITE_FINANCEIRO, PARTIDO_POLITICO];\r\n","import React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  CellEditProps,\r\n  ClickEnum,\r\n  cnpjFormatter,\r\n  ColumnsProps,\r\n  decimalFormatter,\r\n  DefaultSortProps,\r\n  enumColumn,\r\n  FilterType,\r\n  getExtraData,\r\n  OrderType,\r\n  SearchDataGrid,\r\n  SearchViewProps,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../dependencies/empresaMCGDependency';\r\nimport { CLASS_NAME, DoacaoPartidoPolitico } from '../../../../models/dtos/mcg/doacaoPartidoPolitico';\r\nimport { FORMA_DOACAO_ENUM_VALUES } from '../../../../models/enumerated/mcg/formaDoacaoEnum';\r\nimport { TIPO_BENEFICIARIO_ENUM_VALUES } from '../../../../models/enumerated/mcg/tipoBeneficiarioEnum';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\nconst defaultSorted: DefaultSortProps[] = [\r\n  {\r\n    dataField: 'cnpj',\r\n    order: OrderType.ASC,\r\n  },\r\n];\r\n\r\nconst cellEditProps: CellEditProps = {\r\n  blurToSave: true,\r\n  mode: ClickEnum.CLICK,\r\n};\r\n\r\nconst DoacaoPartidoPoliticoSearchView: FC<SearchViewProps<DoacaoPartidoPolitico>> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'cnpj',\r\n      editable: false,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      formatter: cnpjFormatter,\r\n      sort: true,\r\n      text: 'CNPJ',\r\n    },\r\n    enumColumn(\r\n      {\r\n        dataField: 'tipo',\r\n        editor: true,\r\n        filter: true,\r\n        sort: true,\r\n        text: 'Tipo Beneficiário',\r\n      },\r\n      TIPO_BENEFICIARIO_ENUM_VALUES\r\n    ),\r\n    enumColumn(\r\n      {\r\n        dataField: 'forma',\r\n        editor: true,\r\n        filter: true,\r\n        sort: true,\r\n        text: 'Forma de Doação',\r\n      },\r\n      FORMA_DOACAO_ENUM_VALUES\r\n    ),\r\n    {\r\n      dataField: 'valor',\r\n      editable: true,\r\n      filter: {\r\n        type: FilterType.TEXT,\r\n      },\r\n      formatter: decimalFormatter,\r\n      sort: true,\r\n      text: 'Valor',\r\n    },\r\n  ];\r\n  return (\r\n    <WindowComponent\r\n      title=\"Manutenção de Doações a Campanhas Eleitorais\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMCG(globalReducer.globalParameter)]}\r\n    >\r\n      <SearchDataGrid\r\n        {...props}\r\n        {...props.searchDataGridProps}\r\n        dtoClassName={CLASS_NAME}\r\n        columns={columns}\r\n        cellEditProps={cellEditProps}\r\n        defaultSorted={defaultSorted}\r\n        extraData={getExtraData(props, 'DoacaoPartidoPoliticoEditView', CLASS_NAME)}\r\n      />\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default DoacaoPartidoPoliticoSearchView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMCG(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMCG) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o módulo Contábil. Para configurá-la acesse:\\n' +\r\n      'Módulo Contábil > Manutenção > Configurações > Empresa.';\r\n  }\r\n  return result;\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["models/dtos/mcg/lalurAConfig.ts","views/pages/mcg/lalurLacsApuracao/LalurLacsApuracaoProcessView.tsx","dependencies/empresaDependency.ts","dependencies/empresaMCGDependency.ts","models/enumerated/mlf/mesEnum.ts","models/enumerated/mcg/tipoLancamentoEnum.ts"],"names":["__webpack_require__","d","__webpack_exports__","CLASS_NAME","LalurLacsApuracaoProcessView","props","globalReducer","useSelector","state","empresaMCG","globalParameter","formProps","useForm","defaultValues","ano","Number","formatDate","currentDate","mes","JANEIRO_STRING","value","mode","_useState","useState","_useState2","Object","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","isLalur","setIsLalur","useEffect","setTimeout","setValue","id","lalurAColumns","dataField","hidden","text","editable","sort","enumColumn","TIPO_LANCAMENTO_ENUM_VALUES","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_11__","title","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMCG","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","validation","required","min","maxLength","isPrependLabel","label","type","InputType","NUMBER","placeholder","inputDropDownProps","optionsProvider","MES_STRING_ENUM_VALUES","selectProps","isClearable","DROP_DOWN","disabled","className","reactstrap__WEBPACK_IMPORTED_MODULE_10__","color","onClick","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__","icon","searchCriteria","fetchType","max","sortFieldName","start","expressions","fieldName","getValues","findAllByExpression","errorFunction","mensagem","showToast","ERROR","thenFunction","result","content","handleSubmit","goBack","dispatchClose","history","onClose","react_bootstrap_table_next__WEBPACK_IMPORTED_MODULE_4___default","keyField","data","columns","responsive","striped","JSON","stringify","empresa","MES_ENUM_VALUES"],"mappings":"6FAIAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAO,MAAMA,EAAa,8QCmOXC,UAhM8EC,KAC3F,MAAMC,EAAgBC,YAAmCC,GAASA,EAAMF,eAClEG,EAAyBH,EAAcI,gBAAgBD,WACvDE,EAAYC,YAA2B,CAC3CC,cAAe,CACbC,IAAKC,OAAOC,aAAWC,eAAe,SACtCC,IAAKC,IAAeC,OAEtBC,KAAM,WAR4FC,EAUtEC,mBAAS,MAV6DC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAU7FK,EAV6FH,EAAA,GAUpFI,EAVoFJ,EAAA,GAYpGK,oBACE,KACEC,WAAW,KACTnB,EAAUoB,SAAS,gBAAiBtB,EAAWuB,IAAI,IAClD,MAEL,IAgBF,MAAMC,EAAgC,CACpC,CACEC,UAAW,YACXC,QAAQ,EACRC,KAAM,cAER,CACEF,UAAW,SACXG,UAAU,EACVC,MAAM,EACNF,KAAM,aAER,CACEF,UAAW,YACXG,UAAU,EACVC,MAAM,EACNF,KAAM,mBAERG,aACE,CACEL,UAAW,iBACXG,UAAU,EACVC,MAAM,EACNF,KAAM,QAERI,MA+BJ,OACEC,EAAAC,EAAAC,cAACC,EAAA,GAAD,CACEC,MAAM,kDACNC,oBAAoB,EACpBpC,gBAAiBJ,EAAcI,gBAC/BqC,aAAc,CAAC,IAAMC,YAAW1C,EAAcI,iBAAkB,IAAMuC,YAAc3C,EAAcI,mBAElG+B,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEjC,UAASc,OAAA4B,EAAA,EAAA5B,QAAA4B,EAAA,EAAA5B,CAAA,GAAOd,GAAP,IAAkB2C,WAAY,CAAEC,UAAU,EAAMC,IAAK,KAAMC,UAAW,KAC/EzB,GAAG,MACH0B,gBAAgB,EAChBC,MAAM,MACNC,KAAMC,IAAUC,OAChBC,YAAY,oBAGhBtB,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEZ,GAAG,MACH2B,MAAM,SACND,gBAAgB,EAChBK,YAAY,sBACZpD,UAASc,OAAA4B,EAAA,EAAA5B,QAAA4B,EAAA,EAAA5B,CAAA,GAAOd,GAAP,IAAkB2C,WAAY,CAAEC,UAAU,KACnDS,mBAAoB,CAClBC,gBAAiBC,IACjBC,YAAa,CAAEC,aAAa,IAE9BR,KAAMC,IAAUQ,cAItB5B,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAkBjC,UAAWA,EAAWqB,GAAG,UAAUsC,UAAU,EAAMZ,gBAAgB,EAAMC,MAAM,aAEnGlB,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAkBjC,UAAWA,EAAWqB,GAAG,WAAWsC,UAAU,EAAMZ,gBAAgB,EAAMC,MAAM,cAEpGlB,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAkBjC,UAAWA,EAAWqB,GAAG,YAAYsC,UAAU,EAAMZ,gBAAgB,EAAMC,MAAM,gBAGvGlB,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAKoB,UAAU,QACb9B,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQD,UAAU,OAAOE,MAAM,UAAUC,QAAS,MAChDjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAiBC,KAAK,yBADxB,aAGAnC,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQD,UAAU,OAAOE,MAAM,UAAUC,QA7EjC,KAChB,MAAMG,EAAiC,CACrCN,UAAWpE,IACX2E,UAAW,MACXC,IAAK,IACLC,cAAe,MACfC,MAAO,GAGTJ,EAAeK,YAlDR,CACL,CACEC,UAAW,gBACX/D,MAAOX,EAAWuB,IAEpB,CACEmD,UAAW,MACX/D,MAAOT,EAAUyE,YAAYtE,MA6CjCuE,aAAoBR,EAAgB,CAClCS,cAAeC,IACbC,aAAUD,EAAUE,MAEtBC,aAAcC,IACZ/D,EAAW+D,EAAOC,cA8DZnD,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAiBC,KAAK,SADxB,cAGAnC,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQD,UAAU,OAAOE,MAAM,UAAUC,QAAS,MAChDjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAiBC,KAAK,gBADxB,cAIFnC,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQD,UAAU,cAAcG,QAAS/D,EAAUkF,aA5DxC,IAJL,EAACC,GAAkB,KACjCC,aAAc1F,EAAOA,EAAM2F,QAASF,IAGXG,IA4D8DxB,MAAM,UACnFhC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAiBC,KAAK,iBADxB,aAKJnC,EAAAC,EAAAC,cAACC,EAAA,GAAD,CAAUjC,UAAWA,GACnB8B,EAAAC,EAAAC,cAACC,EAAA,GAAD,CAAKC,MAAM,aACTJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWjC,UAAWA,GACpB8B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeC,MAAM,WACnBJ,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAgByD,SAAS,KAAKC,KAAMzE,GAAW,GAAI0E,QAASpE,EAAeqE,YAAY,EAAMC,SAAS,IACtG9D,EAAAC,EAAAC,cAAA,WAAM6D,KAAKC,UAAU9F,EAAUyE,YAAa,KAAM,KAEpD3C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeC,MAAM,WACnBJ,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAgByD,SAAS,KAAKC,KAAMzE,GAAW,GAAI0E,QAASpE,EAAeqE,YAAY,EAAMC,SAAS,IACtG9D,EAAAC,EAAAC,cAAA,WAAM6D,KAAKC,UAAU9F,EAAUyE,YAAa,KAAM,KAEpD3C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeC,MAAM,WACnBJ,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAgByD,SAAS,KAAKC,KAAMzE,GAAW,GAAI0E,QAASpE,EAAeqE,YAAY,EAAMC,SAAS,IACtG9D,EAAAC,EAAAC,cAAA,WAAM6D,KAAKC,UAAU9F,EAAUyE,YAAa,KAAM,OAIxD3C,EAAAC,EAAAC,cAACC,EAAA,GAAD,CAAKC,MAAM,YACTJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWjC,UAAWA,GACpB8B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeC,MAAM,WACnBJ,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAgByD,SAAS,KAAKC,KAAMzE,GAAW,GAAI0E,QAASpE,EAAeqE,YAAY,EAAMC,SAAS,IACtG9D,EAAAC,EAAAC,cAAA,WAAM6D,KAAKC,UAAU9F,EAAUyE,YAAa,KAAM,KAEpD3C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeC,MAAM,WACnBJ,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAgByD,SAAS,KAAKC,KAAMzE,GAAW,GAAI0E,QAASpE,EAAeqE,YAAY,EAAMC,SAAS,IACtG9D,EAAAC,EAAAC,cAAA,WAAM6D,KAAKC,UAAU9F,EAAUyE,YAAa,KAAM,KAEpD3C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeC,MAAM,WACnBJ,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAgByD,SAAS,KAAKC,KAAMzE,GAAW,GAAI0E,QAASpE,EAAeqE,YAAY,EAAMC,SAAS,IACtG9D,EAAAC,EAAAC,cAAA,WAAM6D,KAAKC,UAAU9F,EAAUyE,YAAa,KAAM,8CC3N3D,SAASpC,EAAWtC,GACzB,IAAIiF,EAAS,KAIb,OAHKjF,EAAgBgG,UACnBf,EAAS,kDAEJA,EALT3F,EAAAC,EAAAC,EAAA,sBAAA8C,sCCAO,SAASC,EAAcvC,GAC5B,IAAIiF,EAAS,KAMb,OALKjF,EAAgBD,aACnBkF,EACE,0LAGGA,EAPT3F,EAAAC,EAAAC,EAAA,sBAAA+C,sCCFAjD,EAAAC,EAAAC,EAAA,sBAAAyG,IAAA3G,EAAAC,EAAAC,EAAA,sBAAAiB,IAAAnB,EAAAC,EAAAC,EAAA,sBAAAgE,IAAO,MAaMyC,EAAkB,CAbR,CAAEhD,MAAO,UAAWvC,MAAO,GACzB,CAAEuC,MAAO,YAAavC,MAAO,GACjC,CAAEuC,MAAO,WAASvC,MAAO,GACzB,CAAEuC,MAAO,QAASvC,MAAO,GAC1B,CAAEuC,MAAO,OAAQvC,MAAO,GACvB,CAAEuC,MAAO,QAASvC,MAAO,GACzB,CAAEuC,MAAO,QAASvC,MAAO,GACxB,CAAEuC,MAAO,SAAUvC,MAAO,GACxB,CAAEuC,MAAO,WAAYvC,MAAO,GAC7B,CAAEuC,MAAO,UAAWvC,MAAO,IAC1B,CAAEuC,MAAO,WAAYvC,MAAO,IAC5B,CAAEuC,MAAO,WAAYvC,MAAO,KAIvCD,EAAiB,CAAEwC,MAAO,UAAWvC,MAAO,KAa5C8C,EAAyB,CACpC/C,EAb8B,CAAEwC,MAAO,YAAavC,MAAO,KACjC,CAAEuC,MAAO,WAASvC,MAAO,KACzB,CAAEuC,MAAO,QAASvC,MAAO,KAC1B,CAAEuC,MAAO,OAAQvC,MAAO,KACvB,CAAEuC,MAAO,QAASvC,MAAO,KACzB,CAAEuC,MAAO,QAASvC,MAAO,KACxB,CAAEuC,MAAO,SAAUvC,MAAO,KACxB,CAAEuC,MAAO,WAAYvC,MAAO,KAC7B,CAAEuC,MAAO,UAAWvC,MAAO,MAC1B,CAAEuC,MAAO,WAAYvC,MAAO,MAC5B,CAAEuC,MAAO,WAAYvC,MAAO,yCC1B3DpB,EAAAC,EAAAC,EAAA,sBAAAsC,IAAO,MAMMA,EAA8B,CANrB,CAAEmB,MAAO,eAAUvC,MAAO,UACxB,CAAEuC,MAAO,cAAYvC,MAAO,YACzB,CAAEuC,MAAO,gCAA2BvC,MAAO,eACjD,CAAEuC,MAAO,QAASvC,MAAO,SACxB,CAAEuC,MAAO,YAAUvC,MAAO","file":"static/js/262.16119472.chunk.js","sourcesContent":["import { LalurLacsConfig } from './lalurLacsConfig';\r\n\r\nexport interface LalurAConfig extends LalurLacsConfig {}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mcg.model.dto.laluraconfig';\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Button, Col, Form, Row } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ColumnsProps,\r\n  currentDate,\r\n  dispatchClose,\r\n  EditViewProps,\r\n  enumColumn,\r\n  ERROR,\r\n  findAllByExpression,\r\n  formatDate,\r\n  InputGroupInline,\r\n  InputType,\r\n  SearchCriteria,\r\n  SearchExpression,\r\n  showToast,\r\n  Tab,\r\n  TabGroup,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../dependencies/empresaMCGDependency';\r\nimport { EmpresaMCG } from '../../../../models/dtos/mcg/empresaMCG';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mcg/lalurAConfig';\r\nimport { LalurLacsApuracao } from '../../../../models/dtos/mcg/lalurLacsApuracao';\r\nimport { TIPO_LANCAMENTO_ENUM_VALUES } from '../../../../models/enumerated/mcg/tipoLancamentoEnum';\r\nimport { JANEIRO_STRING, MES_STRING_ENUM_VALUES } from '../../../../models/enumerated/mlf/mesEnum';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\ninterface LalurLacsApuracaoProcessView extends EditViewProps<LalurLacsApuracao> {}\r\n\r\nconst LalurLacsApuracaoProcessView: FC<LalurLacsApuracaoProcessView & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const empresaMCG: EmpresaMCG = globalReducer.globalParameter.empresaMCG;\r\n  const formProps = useForm<LalurLacsApuracao>({\r\n    defaultValues: {\r\n      ano: Number(formatDate(currentDate(), 'YYYY')),\r\n      mes: JANEIRO_STRING.value,\r\n    },\r\n    mode: 'onBlur',\r\n  });\r\n  const [isLalur, setIsLalur] = useState(null);\r\n\r\n  useEffect(\r\n    () => {\r\n      setTimeout(() => {\r\n        formProps.setValue('empresaMCG.id', empresaMCG.id, true);\r\n      }, 500);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  function getSearchExpression(): SearchExpression[] {\r\n    return [\r\n      {\r\n        fieldName: 'empresaMCG.id',\r\n        value: empresaMCG.id,\r\n      },\r\n      {\r\n        fieldName: 'ano',\r\n        value: formProps.getValues().ano,\r\n      },\r\n    ];\r\n  }\r\n\r\n  const lalurAColumns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'rowNumber',\r\n      hidden: true,\r\n      text: 'Row Number',\r\n    },\r\n    {\r\n      dataField: 'codigo',\r\n      editable: false,\r\n      sort: true,\r\n      text: 'Código',\r\n    },\r\n    {\r\n      dataField: 'descricao',\r\n      editable: false,\r\n      sort: true,\r\n      text: 'Descrição',\r\n    },\r\n    enumColumn(\r\n      {\r\n        dataField: 'tipoLancamento',\r\n        editable: false,\r\n        sort: true,\r\n        text: 'Tipo',\r\n      },\r\n      TIPO_LANCAMENTO_ENUM_VALUES\r\n    ),\r\n  ];\r\n\r\n  const consultar = () => {\r\n    const searchCriteria: SearchCriteria = {\r\n      className: CLASS_NAME,\r\n      fetchType: 'ALL',\r\n      max: 900,\r\n      sortFieldName: 'ano',\r\n      start: 0,\r\n    };\r\n\r\n    searchCriteria.expressions = getSearchExpression();\r\n\r\n    findAllByExpression(searchCriteria, {\r\n      errorFunction: mensagem => {\r\n        showToast(mensagem, ERROR);\r\n      },\r\n      thenFunction: result => {\r\n        setIsLalur(result.content);\r\n      },\r\n    });\r\n  };\r\n\r\n  const onClose = (goBack: boolean = true) => {\r\n    dispatchClose(props, props.history, goBack);\r\n  };\r\n\r\n  const handleCancel = () => onClose();\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Integração - Módulo Folha de Pagamento\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMCG(globalReducer.globalParameter)]}\r\n    >\r\n      <Form>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true, min: 1900, maxLength: 4 } }}\r\n              id=\"ano\"\r\n              isPrependLabel={true}\r\n              label=\"Ano\"\r\n              type={InputType.NUMBER}\r\n              placeholder=\"Informe o ano.\"\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <InputGroupInline\r\n              id=\"mes\"\r\n              label=\"Mês\"\r\n              isPrependLabel={true}\r\n              placeholder=\"Selecione um Mês\"\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              inputDropDownProps={{\r\n                optionsProvider: MES_STRING_ENUM_VALUES,\r\n                selectProps: { isClearable: false },\r\n              }}\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline formProps={formProps} id=\"receita\" disabled={true} isPrependLabel={true} label=\"Receita\" />\r\n          </Col>\r\n          <Col>\r\n            <InputGroupInline formProps={formProps} id=\"despesas\" disabled={true} isPrependLabel={true} label=\"Despesas\" />\r\n          </Col>\r\n          <Col>\r\n            <InputGroupInline formProps={formProps} id=\"resultado\" disabled={true} isPrependLabel={true} label=\"Resultado\" />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <Button className=\"ml-0\" color=\"warning\" onClick={null}>\r\n              <FontAwesomeIcon icon=\"exclamation-triangle\" /> Impostos\r\n            </Button>\r\n            <Button className=\"ml-3\" color=\"primary\" onClick={consultar}>\r\n              <FontAwesomeIcon icon=\"sync\" /> Consultar\r\n            </Button>\r\n            <Button className=\"ml-3\" color=\"success\" onClick={null}>\r\n              <FontAwesomeIcon icon=\"info-circle\" /> Calcular\r\n            </Button>\r\n          </Col>\r\n          <Col>\r\n            <Button className=\"float-right\" onClick={formProps.handleSubmit(handleCancel)} color=\"danger\">\r\n              <FontAwesomeIcon icon=\"check-circle\" /> Fechar\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <TabGroup formProps={formProps}>\r\n          <Tab title=\"e-Lalur A\">\r\n            <Accordion formProps={formProps}>\r\n              <AccordionItem title=\"Parte A\">\r\n                <BootstrapTable keyField=\"id\" data={isLalur || []} columns={lalurAColumns} responsive={true} striped={true} />\r\n                <pre>{JSON.stringify(formProps.getValues(), null, 2)}</pre>\r\n              </AccordionItem>\r\n              <AccordionItem title=\"Parte B\">\r\n                <BootstrapTable keyField=\"id\" data={isLalur || []} columns={lalurAColumns} responsive={true} striped={true} />\r\n                <pre>{JSON.stringify(formProps.getValues(), null, 2)}</pre>\r\n              </AccordionItem>\r\n              <AccordionItem title=\"Imposto\">\r\n                <BootstrapTable keyField=\"id\" data={isLalur || []} columns={lalurAColumns} responsive={true} striped={true} />\r\n                <pre>{JSON.stringify(formProps.getValues(), null, 2)}</pre>\r\n              </AccordionItem>\r\n            </Accordion>\r\n          </Tab>\r\n          <Tab title=\"e-Lacs B\">\r\n            <Accordion formProps={formProps}>\r\n              <AccordionItem title=\"Parte A\">\r\n                <BootstrapTable keyField=\"id\" data={isLalur || []} columns={lalurAColumns} responsive={true} striped={true} />\r\n                <pre>{JSON.stringify(formProps.getValues(), null, 2)}</pre>\r\n              </AccordionItem>\r\n              <AccordionItem title=\"Parte B\">\r\n                <BootstrapTable keyField=\"id\" data={isLalur || []} columns={lalurAColumns} responsive={true} striped={true} />\r\n                <pre>{JSON.stringify(formProps.getValues(), null, 2)}</pre>\r\n              </AccordionItem>\r\n              <AccordionItem title=\"Imposto\">\r\n                <BootstrapTable keyField=\"id\" data={isLalur || []} columns={lalurAColumns} responsive={true} striped={true} />\r\n                <pre>{JSON.stringify(formProps.getValues(), null, 2)}</pre>\r\n              </AccordionItem>\r\n            </Accordion>\r\n          </Tab>\r\n        </TabGroup>\r\n      </Form>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default LalurLacsApuracaoProcessView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMCG(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMCG) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o módulo Contábil. Para configurá-la acesse:\\n' +\r\n      'Módulo Contábil > Manutenção > Configurações > Empresa.';\r\n  }\r\n  return result;\r\n}\r\n","export const JANEIRO = { label: 'Janeiro', value: 1 };\r\nexport const FEVEREIRO = { label: 'Fevereiro', value: 2 };\r\nexport const MARCO = { label: 'Março', value: 3 };\r\nexport const ABRIL = { label: 'Abril', value: 4 };\r\nexport const MAIO = { label: 'Maio', value: 5 };\r\nexport const JUNHO = { label: 'Junho', value: 6 };\r\nexport const JULHO = { label: 'Julho', value: 7 };\r\nexport const AGOSTO = { label: 'Agosto', value: 8 };\r\nexport const SETEMBRO = { label: 'Setembro', value: 9 };\r\nexport const OUTUBRO = { label: 'Outubro', value: 10 };\r\nexport const NOVEMBRO = { label: 'Novembro', value: 11 };\r\nexport const DEZEMBRO = { label: 'Dezembro', value: 12 };\r\n\r\nexport const MES_ENUM_VALUES = [JANEIRO, FEVEREIRO, MARCO, ABRIL, MAIO, JUNHO, JULHO, AGOSTO, SETEMBRO, OUTUBRO, NOVEMBRO, DEZEMBRO];\r\n\r\nexport const JANEIRO_STRING = { label: 'Janeiro', value: '1' };\r\nexport const FEVEREIRO_STRING = { label: 'Fevereiro', value: '2' };\r\nexport const MARCO_STRING = { label: 'Março', value: '3' };\r\nexport const ABRIL_STRING = { label: 'Abril', value: '4' };\r\nexport const MAIO_STRING = { label: 'Maio', value: '5' };\r\nexport const JUNHO_STRING = { label: 'Junho', value: '6' };\r\nexport const JULHO_STRING = { label: 'Julho', value: '7' };\r\nexport const AGOSTO_STRING = { label: 'Agosto', value: '8' };\r\nexport const SETEMBRO_STRING = { label: 'Setembro', value: '9' };\r\nexport const OUTUBRO_STRING = { label: 'Outubro', value: '10' };\r\nexport const NOVEMBRO_STRING = { label: 'Novembro', value: '11' };\r\nexport const DEZEMBRO_STRING = { label: 'Dezembro', value: '12' };\r\n\r\nexport const MES_STRING_ENUM_VALUES = [\r\n  JANEIRO_STRING,\r\n  FEVEREIRO_STRING,\r\n  MARCO_STRING,\r\n  ABRIL_STRING,\r\n  MAIO_STRING,\r\n  JUNHO_STRING,\r\n  JULHO_STRING,\r\n  AGOSTO_STRING,\r\n  SETEMBRO_STRING,\r\n  OUTUBRO_STRING,\r\n  NOVEMBRO_STRING,\r\n  DEZEMBRO_STRING,\r\n];\r\n","export const ADICAO = { label: 'Adição', value: 'ADICAO' };\r\nexport const EXCLUSAO = { label: 'Exclusão', value: 'EXCLUSAO' };\r\nexport const COMPENSACAO = { label: 'Compensação de Prejuizo', value: 'COMPENSACAO' };\r\nexport const LUCRO = { label: 'Lucro', value: 'LUCRO' };\r\nexport const ROTULO = { label: 'Rótulo', value: 'ROTULO' };\r\n\r\nexport const TIPO_LANCAMENTO_ENUM_VALUES = [ADICAO, EXCLUSAO, COMPENSACAO, LUCRO, ROTULO];\r\n"],"sourceRoot":""}
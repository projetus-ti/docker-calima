{"version":3,"sources":["models/enumerated/ger/classificacaoTributariaEnum.ts","models/enumerated/ger/naturezaJuridicaEnum.ts","models/enumerated/ger/tipoEmpresaEnum.ts","models/enumerated/mcg/qualificacaoPJEnum.ts","models/enumerated/mfp/contribuicaoPrevidenciariaProdutorRuralEnum.ts","models/enumerated/mfp/indicativoContribuicaoEnum.ts","models/enumerated/mfp/indicativoSubstituicaoContribuicaoEnum.ts","models/enumerated/mlf/apropriacaoCreditoEnum.ts","models/enumerated/mlf/incidenciaTributariaEnum.ts","models/enumerated/mlf/tipoContribuicaoEnum.ts","utilities/empresa.util.ts","views/pages/ger/empresa/EmpresaConfiguracaoAutomaticaProcessView.tsx","views/pages/ger/empresa/EmpresaEmailDetailEditView.tsx","views/pages/ger/empresa/EmpresaEnderecoDetailEditView.tsx","views/pages/ger/empresa/EmpresaTelefoneDetailEditView.tsx","views/pages/ger/empresa/EmpresaEditView.tsx","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/cepUF.ts","models/dtos/ger/cepLocalidade.ts","views/components/ger/cepUFIS/CepUFIS.tsx","views/components/ger/cepLocalidadeIS/CepLocalidadeIS.tsx","models/dtos/ger/cepBairro.ts","models/dtos/ger/responsavel.ts","views/components/ger/responsavelIS/ResponsavelIS.tsx","../node_modules/reactstrap/es/CardTitle.js","models/dtos/ger/cepLogradouro.ts","models/dtos/ger/cepTitulo.ts","views/components/ger/cepBairroIS/CepBairroIS.tsx","views/components/ger/cepTituloIS/CepTituloIS.tsx","views/components/ger/cepLogradouro/CepLogradouroIS.tsx","hooks/useCepManager.ts","utilities/enum.util.ts","../node_modules/reactstrap/es/Alert.js","services/mlf.service.ts","utilities/tipoTelefoneFormatter.ts","models/enumerated/ger/tipoTributacaoEnum.ts","models/dtos/ger/grupoEmpresa.ts","models/dtos/ger/empresa.ts","utilities/tipoEnderecoFormatter.ts","models/enumerated/mcg/formaApuracaoEnum.ts","models/enumerated/mfp/tipoCAEPFEnum.ts","models/enumerated/mfp/tipoTributacaoRealFCONTEnum.ts","views/components/ger/grupoEmpresa/GrupoEmpresaIS.tsx"],"names":["CLASSIFICACAO_02","label","value","CLASSIFICACAO_03","CLASSIFICACAO_07","CLASSIFICACAO_08","CLASSIFICACAO_09","CLASSIFICACAO_21","CLASSIFICACAO_60","CLASSIFICACAO_80","CLASSIFICACAO_99","CLASSIFICACAO_TRIBUTARIA_ENUM_VALUES","CONTRIB_PREVIDENCIARIA_PATRONAL_VALUES","CONTRIB_PREVIDENCIARIA_PRODUTOR_VALUES","NATUREZA_JURIDICA_ENUM_VALUES","INDUSTRIA","COMERCIO","PRESTACAO_SERVICO","TERCEIRO_SETOR","PRODUTOR_RURAL","ATIVIDADE_IMOBILIARIA","CONSTRUTORA","MEI","EMPRESA_GRANDE_PORTE","CONDOMINIO","TIPO_EMPRESA_AUTOMATIZACAO_VALUES","QUALIFICACAO_PJ_ENUM_VALUES","CONTRIBUICAO_PREVIDENCIARIA_PRODUTOR_RURAL_ENUM_VALUES","INDICATIVO_CONTRIBUICAO_ENUM_VALUES","INDICATIVO_SUBSTITUICAO_CONTRIBUICAO_ENUM_VALUES","APROPRIACAO_CREDITO_ENUM_VALUES","CUMULATIVO_E_NAO_CUMULATIVO","NAO_CUMULATIVO","INCIDENCIA_TRIBUTARIA_ENUM_VALUES","TIPO_CONTRIBUICAO_ENUM_VALUES","showLoading","progressActions","showProgress","animated","className","color","striped","closeLoading","hideProgress","toolTip","messagem","name","withTooltip","message","placement","promisedAlert","type","AlertType","WARNING_YES_NO","Promise","resolve","promisedAlertWithCatch","then","catch","reject","alertManager","emit","ACTION_EVENTS","SHOW","onCancelClick","onNoClick","onOkClick","EmpresaConfiguracaoAutomaticaProcessView","props","selectedItem","getSelectedItem","formProps","useForm","defaultValues","mode","dispatch","useDispatch","_useState","useState","_useState2","Object","slicedToArray","isLucroReal","setLucroReal","useEffect","setTimeout","reset","id","empresaAutomacao","razaoSocial","tipoEmpresa","tipoTributacao","LUCRO_REAL","setValue","ANUAL","react_default","a","createElement","summer_esm","title","wikiId","Form","hidden","disabled","isPrependLabel","Alert","Row","Col","objectSpread2","validation","required","inputDropDownProps","optionsProvider","placeholder","InputType","DROP_DOWN","TIPO_TRIBUTACAO_ENUM_VALUES","FORMA_APURACAO_ENUM_VALUES","handleSubmit","empresa","getValues","configurarEmpresa","errorFunction","mensagem","showToast","ERROR","thenFunction","result","history","go","hideCancelButton","EmpresaEmailDetailEditView","handleCancel","maxLength","labelWidth","EMAIL","EmpresaEnderecoDetailEditView","cepManager","useCepManager","bairro","cep","localidade","nome","titulo","uf","validateExtras","formValues","currentValues","parentObject","isInsert","isEmpty","rowIndex","erros","tipoEnderecoSelection","push","enderecos","tipoEnderecoPrincipal","foundEndereco","filter","it","Number","length","CepLogradouroIS","ref","register","CepTituloIS","CepUFIS","CepLocalidadeIS","CepBairroIS","Card","style","marginBottom","borderWidth","CardHeader","CardBody","FormGroup","tag","CustomInput","innerRef","EmpresaTelefoneDetailEditView","tipoTelefoneSelection","telefones","tipoTelefonePrincipal","foundTelefones","TELEFONE","EmpresaEditView","isEntidadeBeneficente","setEntidadeBeneficente","_useState3","_useState4","isTribSubstituidaNaoSubstituida","setTribSubstituidaNaoSubstituida","_useState5","_useState6","isContribPrevidenciariaPatronal","setContribPrevidenciariaPatronal","_useState7","_useState8","isContribPrevidenciariaProdutor","setContribPrevidenciariaProdutor","_useState9","_useState10","isApropriacaoCredito","setApropriacaoCredito","_useState11","_useState12","isTribFCONT","setTribFCONT","_useState13","_useState14","isTipoTributacao","setTipoTributacao","_useState15","_useState16","isEnableImportRF","setIsEnableImportRF","_useState17","_useState18","isEnableGrupo","setIsEnableGrupo","_useState19","_useState20","isAcordoIsencao","setAcordoIsencao","_useState21","_useState22","errorIE","setErrorIE","grupoEmpresa","_formProps$getValues","classificacaoTributaria","incidenciaTributaria","tipoEmpresaPessoaFisica","changeClassificacaoTributaria","changeIncidenciaTributaria","changeTipoTributacao","onCheckPessoaFisica","matriz","centralizar","grupoEmpresaRaiz","grupoEmpresaConfig","grupoPlanoConta","INFORMATION","selecionarMatriz","errorFunc","changeAcordoIsencao","EnumUtil","contains","changeContribPrevidenciariaPatronal","changeContribPrevidenciariaProdutor","changeEntidadeBeneficente","changeTribSubstituidaNaoSubstituida","alreadyHasCNPJ","formData","validarCNPJEmpresa","cnpj","alreadyHasCPF","validarCPFEmpresa","cpf","enderecoColumns","dataField","sort","text","formatter","cepFormatter","tipoEnderecoFormatter","telefoneColumns","phoneWithDDDFormatter","tipoTelefoneFormatter","afterPersist","done","AUTOMATIZACAO_EMPRESA_VALUES","tipoDaEmpresa","tipoEmpresaPrestacaoServico","tipoEmpresaComercio","tipoEmpresaIndustria","tipoEmpresaAtividadeImobiliaria","tipoEmpresaConstrutora","indicadorEmpresaGrandePorte","mei","tipoEmpresaProdutorRural","tipoEmpresaTerceiroSetor","componente","Page","pageProps","editItemProps","location","match","multiPageActions","showPage","openMultiPage","async","beforePersist","promise","dtoClassName","CLASS_NAME","editViewProps","concat","ie","find","dataEncerramentoAtividade","compare","dataInicioAtividade","tipoEmpresaCondominio","inputProps","autoFocus","CNPJ","Button","onClick","existeEmpresaPorCNPJ","importarEmpresaPorCNPJRF","keys","map","key","[object Object]","importarDaReceita","validateEmpresaExists","index_es","icon","marginRight","xs","onlyNumber","tooltipProps","NUMBER","onChange","inativa","GrupoEmpresaIS","CPF","onBlur","sigla","validarIE","WARNING","onlyAlphaNum","TIPO_CAEPF_ENUM_VALUES","URL","assign","columns","detailView","detailViewSize","keyField","propName","CardTitle","EmpresaIS","empresaFilialSemGrupoPlanoContaIgual","empresaMFP","calcularGpsTomador","TIPO_TRIBUTACAO_REAL_FCONT_ENUM_VALUES","DATE","ResponsavelIS","pattern","RegExp","minValue","maxValue","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","inputSearchProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","searchViewId","INPUT_SEARCH","__webpack_require__","d","__webpack_exports__","searchFilter","setFilter","searchExpressionsFull","defaultExpressions","expressions","item","getFilter","CLASS_NAME_UF","fieldName","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","string","cssModule","object","Tag","attributes","classes","defaultProps","CLASS_NAME_LOCALIDADE","manage","CLASS_NAME_BAIRRO","fillForm","logradouro","forEach","undefined","getProp","clearForm","list","search","extraField","extraFields","_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","prop_types__WEBPACK_IMPORTED_MODULE_4__","prop_types__WEBPACK_IMPORTED_MODULE_4___default","classnames__WEBPACK_IMPORTED_MODULE_5__","classnames__WEBPACK_IMPORTED_MODULE_5___default","_utils__WEBPACK_IMPORTED_MODULE_6__","_Fade__WEBPACK_IMPORTED_MODULE_7__","children","node","closeClassName","closeAriaLabel","fade","bool","isOpen","toggle","func","transition","shape","oneOfType","unmountOnExit","alert-dismissible","closeClasses","alertTransition","baseClass","timeout","in","role","aria-label","aria-hidden","findEspecieByModelo","findReinfCFOPConfig","getLivroFolhaMLF","refazerLancamentosContabeis","refazerLancamentosReinf","findConfigReinfEmpresa","importarIntegracaoFiscalContabil","summer__WEBPACK_IMPORTED_MODULE_0__","getService","create","modelo","isImportacao","param","send","post","idCFOP","get","idGerEmpresa","refazerLancamentosContabeisParam","refazerLancamentosReinfParam","idEmpresaMlf","importarParam","inscricaoEstadual","unidadeFederacao","tiposTelefone","tipoTelefoneCelular","tipoTelefoneComercial","tipoTelefoneFax","tipoTelefoneResidencial","tipoTelefone","resultado","campo","join","cell","row","SIMPLES_NACIONAL","TRIBUTACAO_LUCRO_REAL_ENUM_VALUES","LUCRO_REAL_ARBITRADO","LUCRO_PRESUMIDO_REAL_ARBITRADO","LUCRO_PRESUMIDO","IMUNE","ISENTO","tiposEndereco","tipoEnderecoCobranca","tipoEnderecoComercial","tipoEnderecoResidencial","tipoEndereco","TRIMESTRAL","REAL"],"mappings":"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","file":"static/js/19.e08952f1.chunk.js","sourcesContent":["export const CLASSIFICACAO_01 = {\r\n  label: '01 - Empresa enquadrada no regime de tributação Simples Nacional com tributação previdenciária substituída',\r\n  value: 'CLASSIFICACAO_01',\r\n};\r\nexport const CLASSIFICACAO_02 = {\r\n  label: '02 - Empresa enquadrada no regime de tributação Simples Nacional com tributação previdenciária não substituída',\r\n  value: 'CLASSIFICACAO_02',\r\n};\r\nexport const CLASSIFICACAO_03 = {\r\n  label: '03 - Empresa enquadrada no regime de tributação Simples Nacional com tributação previdenciária substituída e não substituída',\r\n  value: 'CLASSIFICACAO_03',\r\n};\r\nexport const CLASSIFICACAO_04 = { label: '04 - MEI - Micro Empreendedor Individual', value: 'CLASSIFICACAO_04' };\r\nexport const CLASSIFICACAO_06 = { label: '06 - Agroindústria', value: 'CLASSIFICACAO_06' };\r\nexport const CLASSIFICACAO_07 = { label: '07 - Produtor Rural Pessoa Jurídica', value: 'CLASSIFICACAO_07' };\r\nexport const CLASSIFICACAO_08 = { label: '08 - Consórcio Simplificado de Produtores Rurais', value: 'CLASSIFICACAO_08' };\r\nexport const CLASSIFICACAO_09 = { label: '09 - Órgão Gestor de Mão de Obra', value: 'CLASSIFICACAO_09' };\r\nexport const CLASSIFICACAO_10 = { label: '10 - Entidade Sindical a que se refere a Lei 12.023/2009', value: 'CLASSIFICACAO_10' };\r\nexport const CLASSIFICACAO_11 = { label: '11 - Associação Desportiva que mantém Clube de Futebol Profissional', value: 'CLASSIFICACAO_11' };\r\nexport const CLASSIFICACAO_13 = {\r\n  label:\r\n    '13 - Banco, caixa econômica, sociedade de crédito, financiamento e investimento e demais empresas relacionadas no parágrafo 1º do art. 22 da Lei 8.212./91',\r\n  value: 'CLASSIFICACAO_13',\r\n};\r\nexport const CLASSIFICACAO_14 = { label: '14 - Sindicatos em geral, exceto aquele classificado no código [10]', value: 'CLASSIFICACAO_14' };\r\nexport const CLASSIFICACAO_21 = { label: '21 - Pessoa Física, exceto Segurado Especial', value: 'CLASSIFICACAO_21' };\r\nexport const CLASSIFICACAO_22 = { label: '22 - Segurado Especial', value: 'CLASSIFICACAO_22' };\r\nexport const CLASSIFICACAO_60 = { label: '60 - Missão Diplomática ou Repartição Consular de carreira estrangeira', value: 'CLASSIFICACAO_60' };\r\nexport const CLASSIFICACAO_70 = { label: '70 - Empresa de que trata o Decreto 5.436/2005', value: 'CLASSIFICACAO_70' };\r\nexport const CLASSIFICACAO_80 = {\r\n  label: '80 - Entidade Beneficente de Assistência Social isenta de contribuições sociais',\r\n  value: 'CLASSIFICACAO_80',\r\n};\r\nexport const CLASSIFICACAO_85 = { label: '85 - Ente Federativo, Órgãos da União, Autarquias e Fundações Públicas', value: 'CLASSIFICACAO_85' };\r\nexport const CLASSIFICACAO_99 = { label: '99 - Pessoas Jurídicas em Geral', value: 'CLASSIFICACAO_99' };\r\n\r\nexport const CLASSIFICACAO_TRIBUTARIA_ENUM_VALUES = [\r\n  CLASSIFICACAO_01,\r\n  CLASSIFICACAO_02,\r\n  CLASSIFICACAO_03,\r\n  CLASSIFICACAO_04,\r\n  CLASSIFICACAO_06,\r\n  CLASSIFICACAO_07,\r\n  CLASSIFICACAO_08,\r\n  CLASSIFICACAO_09,\r\n  CLASSIFICACAO_10,\r\n  CLASSIFICACAO_11,\r\n  CLASSIFICACAO_13,\r\n  CLASSIFICACAO_14,\r\n  CLASSIFICACAO_21,\r\n  CLASSIFICACAO_22,\r\n  CLASSIFICACAO_60,\r\n  CLASSIFICACAO_70,\r\n  CLASSIFICACAO_80,\r\n  CLASSIFICACAO_85,\r\n  CLASSIFICACAO_99,\r\n];\r\n\r\nexport const CONTRIB_PREVIDENCIARIA_PATRONAL_VALUES = [CLASSIFICACAO_02, CLASSIFICACAO_03, CLASSIFICACAO_09, CLASSIFICACAO_99];\r\n\r\nexport const CONTRIB_PREVIDENCIARIA_PRODUTOR_VALUES = [CLASSIFICACAO_07, CLASSIFICACAO_08, CLASSIFICACAO_21];\r\n","export const ORGAO_PUBLICO_DO_PODER_EXECUTIVO_FEDERAL = {\r\n  label: '101-5 - Órgão Público do Poder Executivo Federal',\r\n  value: 'ORGAO_PUBLICO_DO_PODER_EXECUTIVO_FEDERAL',\r\n};\r\nexport const ORGAO_PUBLICO_DO_PODER_EXECUTIVO_ESTADUAL_OU_DO_DISTRITO_FEDERAL = {\r\n  label: '102-3 - Órgão Público do Poder Executivo Estaudal ou do Distrito Federal',\r\n  value: 'ORGAO_PUBLICO_DO_PODER_EXECUTIVO_ESTADUAL_OU_DO_DISTRITO_FEDERAL',\r\n};\r\nexport const ORGAO_PUBLICO_DO_PODER_EXECUTIVO_MUNICIPAL = {\r\n  label: '103-1 - Órgão Público do Poder Executivo Municipal',\r\n  value: 'ORGAO_PUBLICO_DO_PODER_EXECUTIVO_MUNICIPAL',\r\n};\r\nexport const ORGAO_PUBLICO_DO_PODER_LEGISLATIVO_FEDERAL = {\r\n  label: '104-0 - Órgão Público do Poder Legislativo Federal',\r\n  value: 'ORGAO_PUBLICO_DO_PODER_LEGISLATIVO_FEDERAL',\r\n};\r\nexport const ORGAO_PUBLICO_DO_PODER_LEGISLATIVO_ESTADUAL_OU_DO_DISTRITO_FEDERAL = {\r\n  label: '105-8 - Órgão Público do Poder Legislativo Estadual ou do Distrito Federal',\r\n  value: 'ORGAO_PUBLICO_DO_PODER_LEGISLATIVO_ESTADUAL_OU_DO_DISTRITO_FEDERAL',\r\n};\r\nexport const ORGAO_PULBICO_DO_PODER_LEGISLATIVO_MUNICIPAL = {\r\n  label: '106-6 - Órgão Público do Poder Legislativo Municipal',\r\n  value: 'ORGAO_PULBICO_DO_PODER_LEGISLATIVO_MUNICIPAL',\r\n};\r\nexport const ORGAO_PUBLICO_DO_PODER_JUDICIARIO_FEDERAL = {\r\n  label: '107-4 - Órgão Público do Poder Judiciário Federal',\r\n  value: 'ORGAO_PUBLICO_DO_PODER_JUDICIARIO_FEDERAL',\r\n};\r\nexport const ORGAO_PUBLICO_DO_PODER_JUDICIARIO_ESTADUAL = {\r\n  label: '108-2 - Órgão Público do Poder Judiciário Estadual',\r\n  value: 'ORGAO_PUBLICO_DO_PODER_JUDICIARIO_ESTADUAL',\r\n};\r\nexport const AUTARQUIA_FEDERAL = {\r\n  label: '110-4 - Autarquia Federal',\r\n  value: 'AUTARQUIA_FEDERAL',\r\n};\r\nexport const AUTARQUIA_ESTADUAL_OU_DO_DISTRITO_FEDERAL = {\r\n  label: '111-2 - Autarquia Estadual ou do Distrito Federal',\r\n  value: 'AUTARQUIA_ESTADUAL_OU_DO_DISTRITO_FEDERAL',\r\n};\r\nexport const AUTARQUIA_MUNICIPAL = {\r\n  label: '112-0 - Autarquia Municipal',\r\n  value: 'AUTARQUIA_MUNICIPAL',\r\n};\r\nexport const FUNDACAO_FEDERAL = {\r\n  label: '113-9 - Fundação Federal',\r\n  value: 'FUNDACAO_FEDERAL',\r\n};\r\nexport const FUNDACAO_ESTADUAL_OU_DO_DISTRITO_FEDERAL = {\r\n  label: '114-7 - Fundação Estadual ou do Distrito Federal',\r\n  value: 'FUNDACAO_ESTADUAL_OU_DO_DISTRITO_FEDERAL',\r\n};\r\nexport const FUNDACAO_MUNICIPAL = {\r\n  label: '115-5 - Fundação Municipal',\r\n  value: 'FUNDACAO_MUNICIPAL',\r\n};\r\nexport const ORGAO_PUBLICO_AUTONOMO_FEDERAL = {\r\n  label: '116-3 - Órgão Público Autônomo Federal',\r\n  value: 'ORGAO_PUBLICO_AUTONOMO_FEDERAL',\r\n};\r\nexport const ORGAO_PUBLICO_AUTONOMO_ESTADUAL_OU_DO_DISTRITO_FEDERAL = {\r\n  label: '117-1 - Órgão Público Autônomo Estadual ou do Distrito Federal',\r\n  value: 'ORGAO_PUBLICO_AUTONOMO_ESTADUAL_OU_DO_DISTRITO_FEDERAL',\r\n};\r\nexport const ORGAO_PUBLICO_AUTONOMO_MUNICIPAL = {\r\n  label: '118-0 - Órgão Público Autônomo Municipal',\r\n  value: 'ORGAO_PUBLICO_AUTONOMO_MUNICIPAL',\r\n};\r\nexport const COMISSAO_POLINACIONAL = {\r\n  label: '119-8 - Comissão Polinacional',\r\n  value: 'COMISSAO_POLINACIONAL',\r\n};\r\nexport const FUNDO_PUBLICO = {\r\n  label: '120-1 - Fundo Público',\r\n  value: 'FUNDO_PUBLICO',\r\n};\r\nexport const ASSOCIACAO_PUBLICA = {\r\n  label: '121-0 - Associação Pública',\r\n  value: 'ASSOCIACAO_PUBLICA',\r\n};\r\nexport const CONSORCIO_PUBLICO_DIREITO_PRIVADO = {\r\n  label: '122-8 - Consórcio Público de Direito Privado',\r\n  value: 'CONSORCIO_PUBLICO_DIREITO_PRIVADO',\r\n};\r\nexport const ESTADO_OU_DISTRITO_FEDERAL = {\r\n  label: '123-6 - Estado ou Distrito Federal',\r\n  value: 'ESTADO_OU_DISTRITO_FEDERAL',\r\n};\r\nexport const MUNICIPIO = {\r\n  label: '124-4 - Município',\r\n  value: 'MUNICIPIO',\r\n};\r\nexport const FUNDACAO_PUBLICA_DIREITO_PRIVADO_FEREDAL = {\r\n  label: '125-2 - Fundação Pública de Direito Privado Federal',\r\n  value: 'FUNDACAO_PUBLICA_DIREITO_PRIVADO_FEREDAL',\r\n};\r\nexport const FUNDACAO_PUBLICA_DIREITO_PRIVADO_ESTADUAL_OU_DF = {\r\n  label: '126-0 - Fundação Pública de Direito Privado Estadual ou do Distrito Federal',\r\n  value: 'FUNDACAO_PUBLICA_DIREITO_PRIVADO_ESTADUAL_OU_DF',\r\n};\r\nexport const FUNDACAO_PUBLICA_DIREITO_PRIVADO_MUNICIPAL = {\r\n  label: '127-9 - Fundação Pública de Direito Privado Municipal',\r\n  value: 'FUNDACAO_PUBLICA_DIREITO_PRIVADO_MUNICIPAL',\r\n};\r\nexport const EMPRESA_PUBLICA = {\r\n  label: '201-1 - Empresa Pública',\r\n  value: 'EMPRESA_PUBLICA',\r\n};\r\nexport const SOCIEDADE_DE_ECONOMIA_MISTA = {\r\n  label: '203-8 - Sociedade de Economia Mista',\r\n  value: 'SOCIEDADE_DE_ECONOMIA_MISTA',\r\n};\r\nexport const SOCIEDADE_ANONIMA_ABERTA = {\r\n  label: '204-6 - Sociedade Anônima Aberta',\r\n  value: 'SOCIEDADE_ANONIMA_ABERTA',\r\n};\r\nexport const SOCIEDADE_ANONIMA_FECHADA = {\r\n  label: '205-4 - Sociedade Anônima Fechada',\r\n  value: 'SOCIEDADE_ANONIMA_FECHADA',\r\n};\r\nexport const SOCIEDADE_EMPRESARIA_LIMITADA = {\r\n  label: '206-2 - Sociedade Empresaria Limitada',\r\n  value: 'SOCIEDADE_EMPRESARIA_LIMITADA',\r\n};\r\nexport const SOCIEDADE_EMPRESARIA_EM_NOME_COLETIVO = {\r\n  label: '207-0 - Sociedade Empresaria em Nome Coletivo',\r\n  value: 'SOCIEDADE_EMPRESARIA_EM_NOME_COLETIVO',\r\n};\r\nexport const SOCIEDADE_EMPRESARIA_EM_COMANDITA_SIMPLES = {\r\n  label: '208-9 - Sociedade Empresaria em Comandita Simples',\r\n  value: 'SOCIEDADE_EMPRESARIA_EM_COMANDITA_SIMPLES',\r\n};\r\nexport const SOCIEDADE_EMPRESARIA_EM_COMANDITA_POR_ACOES = {\r\n  label: '209-7 - Sociedade Empresaria em Comandita por Ações',\r\n  value: 'SOCIEDADE_EMPRESARIA_EM_COMANDITA_POR_ACOES',\r\n};\r\nexport const SOCIEDADE_EM_CONTA_DE_PARTICIPACAO = {\r\n  label: '212-7 - Sociedade em Conta de Parcipação',\r\n  value: 'SOCIEDADE_EM_CONTA_DE_PARTICIPACAO',\r\n};\r\nexport const EMPRESARIO_INDIVIDUAL = {\r\n  label: '213-5 - Empresário Individual',\r\n  value: 'EMPRESARIO_INDIVIDUAL',\r\n};\r\nexport const COOPERATIVA = {\r\n  label: '214-3 - Cooperativa',\r\n  value: 'COOPERATIVA',\r\n};\r\nexport const CONSORCIO_DE_SOCIEDADES = {\r\n  label: '215-1 - Consórcio de Sociedades',\r\n  value: 'CONSORCIO_DE_SOCIEDADES',\r\n};\r\nexport const GRUPO_DE_SOCIEDADES = {\r\n  label: '216-0 - Grupo de Sociedades',\r\n  value: 'GRUPO_DE_SOCIEDADES',\r\n};\r\nexport const ESTABELECIMENTO_NO_BRASIL_DE_SOCIEDADE_ESTRANGEIRA = {\r\n  label: '217-8 - Estabelecimento no Brasil de Sociedade Estrangeira',\r\n  value: 'ESTABELECIMENTO_NO_BRASIL_DE_SOCIEDADE_ESTRANGEIRA',\r\n};\r\nexport const ESTABELECIMENTO_NO_BRASIL_DE_EMPRESA_BINACIONAL_ARGENTINO_BRASILEIRA = {\r\n  label: '219-4 - Estabelecimento no Brasil de Empresa Binacional Argentino Brasileira',\r\n  value: 'ESTABELECIMENTO_NO_BRASIL_DE_EMPRESA_BINACIONAL_ARGENTINO_BRASILEIRA',\r\n};\r\nexport const EMPRESA_DOMICILIADA_NO_EXTERIOR = {\r\n  label: '221-6 - Empresa Domiciliada no Exterior',\r\n  value: 'EMPRESA_DOMICILIADA_NO_EXTERIOR',\r\n};\r\nexport const CLUBE_FUNDO_DE_INVESTIMENTO = {\r\n  label: '222-4 - Clube Fundo de Investimento',\r\n  value: 'CLUBE_FUNDO_DE_INVESTIMENTO',\r\n};\r\nexport const SOCIEDADE_SIMPLES_PURA = {\r\n  label: '223-2 - Sociedade Simples Pura',\r\n  value: 'SOCIEDADE_SIMPLES_PURA',\r\n};\r\nexport const SOCIEDADE_SIMPLES_LIMITADA = {\r\n  label: '224-0 - Sociedade Simples Limitada',\r\n  value: 'SOCIEDADE_SIMPLES_LIMITADA',\r\n};\r\nexport const SOCIEDADE_SIMPLES_EM_NOME_COLETIVO = {\r\n  label: '225-9 - Sociedade Simples em Nome Coletivo',\r\n  value: 'SOCIEDADE_SIMPLES_EM_NOME_COLETIVO',\r\n};\r\nexport const SOCIEDADE_SIMPLES_EM_COMANDITA_SIMPLES = {\r\n  label: '226-7 - Sociedade Simples em Comandita Simples',\r\n  value: 'SOCIEDADE_SIMPLES_EM_COMANDITA_SIMPLES',\r\n};\r\nexport const EMPRESA_BINACIONAL = {\r\n  label: '227-5 - Empresa Binacional',\r\n  value: 'EMPRESA_BINACIONAL',\r\n};\r\nexport const CONSORCIO_DE_EMPREGADORES = {\r\n  label: '228-3 - Consorcio de Empregadores',\r\n  value: 'CONSORCIO_DE_EMPREGADORES',\r\n};\r\nexport const CONSORCIO_SIMPLES = {\r\n  label: '229-1 - Consorcio Simples',\r\n  value: 'CONSORCIO_SIMPLES',\r\n};\r\nexport const EMPRESA_INDIV_RESPONSAB_LTDA_EMPRESARIAL = {\r\n  label: '230-5 - Empresa individual de Responsabilidade Limitada (de Natureza Empresária)',\r\n  value: 'EMPRESA_INDIV_RESPONSAB_LTDA_EMPRESARIAL',\r\n};\r\nexport const EMPRESA_INDIV_RESPONSAB_LTDA_SIMPLES = {\r\n  label: '231-3 - Empresa Individual de Responsabilidade Limitada (de Natureza Simples)',\r\n  value: 'EMPRESA_INDIV_RESPONSAB_LTDA_SIMPLES',\r\n};\r\nexport const SOCIEDADE_UNIPESSOAL_ADVOGADOS = {\r\n  label: '232-1 - Sociedade Unipessoal de Advogados',\r\n  value: 'SOCIEDADE_UNIPESSOAL_ADVOGADOS',\r\n};\r\nexport const COOPERATIVAS_CONSUMO = {\r\n  label: '233-0 - Cooperativas de Consumo',\r\n  value: 'COOPERATIVAS_CONSUMO',\r\n};\r\nexport const SERVICO_NOTARIAL_E_REGISTRAL_CARTORIO = {\r\n  label: '303-4 - Serviço Notarial e Registral Cartório',\r\n  value: 'SERVICO_NOTARIAL_E_REGISTRAL_CARTORIO',\r\n};\r\nexport const FUNDACAO_PRIVADA = {\r\n  label: '306-9 - Fundação Privada',\r\n  value: 'FUNDACAO_PRIVADA',\r\n};\r\nexport const SERVICO_SOCIAL_AUTONOMO = {\r\n  label: '307-7 - Serviço Social Autônomo',\r\n  value: 'SERVICO_SOCIAL_AUTONOMO',\r\n};\r\nexport const CONDOMINIO_EDIFICIO = {\r\n  label: '308-5 - Condomínio, Edifício',\r\n  value: 'CONDOMINIO_EDIFICIO',\r\n};\r\nexport const COMISSAO_DE_CONCILIACAO_PREVIA = {\r\n  label: '310-7 - Comissão de Conciliação Prévia',\r\n  value: 'COMISSAO_DE_CONCILIACAO_PREVIA',\r\n};\r\nexport const ENTIDADE_DE_MEDIACAO_E_ARBITRAGEM = {\r\n  label: '311-5 - Entidade de Mediação e Arbitragem',\r\n  value: 'ENTIDADE_DE_MEDIACAO_E_ARBITRAGEM',\r\n};\r\nexport const PARTIDO_POLITICO = {\r\n  label: '312-3 - Partido Político',\r\n  value: 'PARTIDO_POLITICO',\r\n};\r\nexport const ENTIDADE_SINDICAL = {\r\n  label: '313-1 - Entidade Sindical',\r\n  value: 'ENTIDADE_SINDICAL',\r\n};\r\nexport const ESTABELECIMENTO_NO_BRASIL_DE_FUNDACAO_OU_ASSOCIACAO_ESTRANGEIRAS = {\r\n  label: '320-4 - Estabelecimento no Brasil de Fundaçao ou Associação Estrangeiras',\r\n  value: 'ESTABELECIMENTO_NO_BRASIL_DE_FUNDACAO_OU_ASSOCIACAO_ESTRANGEIRAS',\r\n};\r\nexport const FUNDACAO_OU_ASSOCIACAO_DOMICILIADA_NO_EXTERIOR = {\r\n  label: '321-2 - Fundação ou Associação Domiciliada no Exterior',\r\n  value: 'FUNDACAO_OU_ASSOCIACAO_DOMICILIADA_NO_EXTERIOR',\r\n};\r\nexport const ORGANIZACAO_RELIGIOSA = {\r\n  label: '322-0 - Organização Religiosa',\r\n  value: 'ORGANIZACAO_RELIGIOSA',\r\n};\r\nexport const COMUNIDADE_INDIGENA = {\r\n  label: '323-9 - Comunidade Indígena',\r\n  value: 'COMUNIDADE_INDIGENA',\r\n};\r\nexport const FUNDO_PRIVADO = {\r\n  label: '324-7 - Fundo Privado',\r\n  value: 'FUNDO_PRIVADO',\r\n};\r\nexport const ORGAO_DIRECAO_NACIONAL_PARTIDO_POLITICO = {\r\n  label: '325-5 - Órgão de Direção Nacional de Partido Político',\r\n  value: 'ORGAO_DIRECAO_NACIONAL_PARTIDO_POLITICO',\r\n};\r\nexport const ORGAO_DIRECAO_REGIONAL_PARTIDO_POLITICO = {\r\n  label: '326-3 - Órgão de Direção Regional de Partido Político',\r\n  value: 'ORGAO_DIRECAO_REGIONAL_PARTIDO_POLITICO',\r\n};\r\nexport const ORGAO_DIRECAO_LOCAL_PARTIDO_POLITICO = {\r\n  label: '327-1 - Órgão de Direção Local de Partido Político',\r\n  value: 'ORGAO_DIRECAO_LOCAL_PARTIDO_POLITICO',\r\n};\r\nexport const COMITE_FINANCEIRO_PARTIDO_POLITICO = {\r\n  label: '328-0 - Comitê Financeiro de Partido Político',\r\n  value: 'COMITE_FINANCEIRO_PARTIDO_POLITICO',\r\n};\r\nexport const FRENTE_PLEBISCITARIA_OU_REFERENCIA = {\r\n  label: '329-8 - Frente Plebiscitária ou Referendária',\r\n  value: 'FRENTE_PLEBISCITARIA_OU_REFERENCIA',\r\n};\r\nexport const ORGANIZACAO_SOCIAL = {\r\n  label: '330-1 - Organização Social (OS)',\r\n  value: 'ORGANIZACAO_SOCIAL',\r\n};\r\nexport const DEMAIS_CONDOMINIOS = {\r\n  label: '331-0 - Demais Condomínios',\r\n  value: 'DEMAIS_CONDOMINIOS',\r\n};\r\nexport const ASSOCIACAO_PRIVADA = {\r\n  label: '399-9 - Associação Privada',\r\n  value: 'ASSOCIACAO_PRIVADA',\r\n};\r\nexport const EMPRESA_INDIVIDUAL_IMOBILIARIA = {\r\n  label: '401-4 - Empresa Individual Imobiliária',\r\n  value: 'EMPRESA_INDIVIDUAL_IMOBILIARIA',\r\n};\r\nexport const SEGURADO_ESPECIAL = {\r\n  label: '402-2 - Segurado Especial',\r\n  value: 'SEGURADO_ESPECIAL',\r\n};\r\nexport const CONTRIBUINTE_INDIVIDUAL = {\r\n  label: '408-1 - Contribuinte Individual',\r\n  value: 'CONTRIBUINTE_INDIVIDUAL',\r\n};\r\nexport const CANDIDATO_A_CARGO_POLITICO_ELETIVO = {\r\n  label: '409-0 - Candidato a Cargo Político Eletivo',\r\n  value: 'CANDIDATO_A_CARGO_POLITICO_ELETIVO',\r\n};\r\nexport const LEILOEIRO = {\r\n  label: '411-1 - Leiloeiro',\r\n  value: 'LEILOEIRO',\r\n};\r\nexport const PRODUTOR_RURAL_PF = {\r\n  label: '412-0 - Produtor Rural (Pessoa Física)',\r\n  value: 'PRODUTOR_RURAL_PF',\r\n};\r\nexport const ORGANIZACAO_INTERNACIONAL = {\r\n  label: '501-0 - Organização Internacional',\r\n  value: 'ORGANIZACAO_INTERNACIONAL',\r\n};\r\nexport const REPRESENTACAO_DIPLOMATICA_ESTRANGEIRA = {\r\n  label: '502-9 - Representação Diplomática Estrangeira',\r\n  value: 'REPRESENTACAO_DIPLOMATICA_ESTRANGEIRA',\r\n};\r\nexport const OUTRAS_INSTITUICOES_EXTRATERRITORIAIS = {\r\n  label: '503-7 - Outras Instituições Extraterritoriais',\r\n  value: 'OUTRAS_INSTITUICOES_EXTRATERRITORIAIS',\r\n};\r\nexport const NATUREZA_JURIDICA_ENUM_VALUES = [\r\n  // Administração Pública\r\n  ORGAO_PUBLICO_DO_PODER_EXECUTIVO_FEDERAL,\r\n  ORGAO_PUBLICO_DO_PODER_EXECUTIVO_ESTADUAL_OU_DO_DISTRITO_FEDERAL,\r\n  ORGAO_PUBLICO_DO_PODER_EXECUTIVO_MUNICIPAL,\r\n  ORGAO_PUBLICO_DO_PODER_LEGISLATIVO_FEDERAL,\r\n  ORGAO_PUBLICO_DO_PODER_LEGISLATIVO_ESTADUAL_OU_DO_DISTRITO_FEDERAL,\r\n  ORGAO_PULBICO_DO_PODER_LEGISLATIVO_MUNICIPAL,\r\n  ORGAO_PUBLICO_DO_PODER_JUDICIARIO_FEDERAL,\r\n  ORGAO_PUBLICO_DO_PODER_JUDICIARIO_ESTADUAL,\r\n  AUTARQUIA_FEDERAL,\r\n  AUTARQUIA_ESTADUAL_OU_DO_DISTRITO_FEDERAL,\r\n  AUTARQUIA_MUNICIPAL,\r\n  FUNDACAO_FEDERAL,\r\n  FUNDACAO_ESTADUAL_OU_DO_DISTRITO_FEDERAL,\r\n  FUNDACAO_MUNICIPAL,\r\n  ORGAO_PUBLICO_AUTONOMO_FEDERAL,\r\n  ORGAO_PUBLICO_AUTONOMO_ESTADUAL_OU_DO_DISTRITO_FEDERAL,\r\n  ORGAO_PUBLICO_AUTONOMO_MUNICIPAL,\r\n  COMISSAO_POLINACIONAL,\r\n  FUNDO_PUBLICO,\r\n  ASSOCIACAO_PUBLICA,\r\n  CONSORCIO_PUBLICO_DIREITO_PRIVADO,\r\n  ESTADO_OU_DISTRITO_FEDERAL,\r\n  MUNICIPIO,\r\n  FUNDACAO_PUBLICA_DIREITO_PRIVADO_FEREDAL,\r\n  FUNDACAO_PUBLICA_DIREITO_PRIVADO_ESTADUAL_OU_DF,\r\n  FUNDACAO_PUBLICA_DIREITO_PRIVADO_MUNICIPAL,\r\n  // Entidades Empresariais\r\n  EMPRESA_PUBLICA,\r\n  SOCIEDADE_DE_ECONOMIA_MISTA,\r\n  SOCIEDADE_ANONIMA_ABERTA,\r\n  SOCIEDADE_ANONIMA_FECHADA,\r\n  SOCIEDADE_EMPRESARIA_LIMITADA,\r\n  SOCIEDADE_EMPRESARIA_EM_NOME_COLETIVO,\r\n  SOCIEDADE_EMPRESARIA_EM_COMANDITA_SIMPLES,\r\n  SOCIEDADE_EMPRESARIA_EM_COMANDITA_POR_ACOES,\r\n  SOCIEDADE_EM_CONTA_DE_PARTICIPACAO,\r\n  EMPRESARIO_INDIVIDUAL,\r\n  COOPERATIVA,\r\n  CONSORCIO_DE_SOCIEDADES,\r\n  GRUPO_DE_SOCIEDADES,\r\n  ESTABELECIMENTO_NO_BRASIL_DE_SOCIEDADE_ESTRANGEIRA,\r\n  ESTABELECIMENTO_NO_BRASIL_DE_EMPRESA_BINACIONAL_ARGENTINO_BRASILEIRA,\r\n  EMPRESA_DOMICILIADA_NO_EXTERIOR,\r\n  CLUBE_FUNDO_DE_INVESTIMENTO,\r\n  SOCIEDADE_SIMPLES_PURA,\r\n  SOCIEDADE_SIMPLES_LIMITADA,\r\n  SOCIEDADE_SIMPLES_EM_NOME_COLETIVO,\r\n  SOCIEDADE_SIMPLES_EM_COMANDITA_SIMPLES,\r\n  EMPRESA_BINACIONAL,\r\n  CONSORCIO_DE_EMPREGADORES,\r\n  CONSORCIO_SIMPLES,\r\n  EMPRESA_INDIV_RESPONSAB_LTDA_EMPRESARIAL,\r\n  EMPRESA_INDIV_RESPONSAB_LTDA_SIMPLES,\r\n  SOCIEDADE_UNIPESSOAL_ADVOGADOS,\r\n  COOPERATIVAS_CONSUMO,\r\n  // Entidades sem Fins Lucrativos\r\n  SERVICO_NOTARIAL_E_REGISTRAL_CARTORIO,\r\n  FUNDACAO_PRIVADA,\r\n  SERVICO_SOCIAL_AUTONOMO,\r\n  CONDOMINIO_EDIFICIO,\r\n  COMISSAO_DE_CONCILIACAO_PREVIA,\r\n  ENTIDADE_DE_MEDIACAO_E_ARBITRAGEM,\r\n  PARTIDO_POLITICO,\r\n  ENTIDADE_SINDICAL,\r\n  ESTABELECIMENTO_NO_BRASIL_DE_FUNDACAO_OU_ASSOCIACAO_ESTRANGEIRAS,\r\n  FUNDACAO_OU_ASSOCIACAO_DOMICILIADA_NO_EXTERIOR,\r\n  ORGANIZACAO_RELIGIOSA,\r\n  COMUNIDADE_INDIGENA,\r\n  FUNDO_PRIVADO,\r\n  ORGAO_DIRECAO_NACIONAL_PARTIDO_POLITICO,\r\n  ORGAO_DIRECAO_REGIONAL_PARTIDO_POLITICO,\r\n  ORGAO_DIRECAO_LOCAL_PARTIDO_POLITICO,\r\n  COMITE_FINANCEIRO_PARTIDO_POLITICO,\r\n  FRENTE_PLEBISCITARIA_OU_REFERENCIA,\r\n  ORGANIZACAO_SOCIAL,\r\n  DEMAIS_CONDOMINIOS,\r\n  ASSOCIACAO_PRIVADA,\r\n  // Pessoas Físicas\r\n  EMPRESA_INDIVIDUAL_IMOBILIARIA,\r\n  SEGURADO_ESPECIAL,\r\n  CONTRIBUINTE_INDIVIDUAL,\r\n  CANDIDATO_A_CARGO_POLITICO_ELETIVO,\r\n  LEILOEIRO,\r\n  PRODUTOR_RURAL_PF,\r\n  // Organizações Internacionais e Outras Instituições Extraterritoriais\r\n  ORGANIZACAO_INTERNACIONAL,\r\n  REPRESENTACAO_DIPLOMATICA_ESTRANGEIRA,\r\n  OUTRAS_INSTITUICOES_EXTRATERRITORIAIS,\r\n];\r\n","export const INDUSTRIA = { label: 'Indústria', value: 'INDUSTRIA' };\r\nexport const COMERCIO = { label: 'Comércio', value: 'COMERCIO' };\r\nexport const PRESTACAO_SERVICO = { label: 'Prestação de Serviço', value: 'PRESTACAO_SERVICO' };\r\nexport const PESSOA_FISICA = { label: 'Pessoa Física', value: 'PESSOA_FISICA' };\r\nexport const TERCEIRO_SETOR = { label: 'Terceiro Setor', value: 'TERCEIRO_SETOR' };\r\nexport const PRODUTOR_RURAL = { label: 'Produtor Rural', value: 'PRODUTOR_RURAL' };\r\nexport const ATIVIDADE_IMOBILIARIA = { label: 'Atividade Imobiliária', value: 'ATIVIDADE_IMOBILIARIA' };\r\nexport const CONSTRUTORA = { label: 'Construtora', value: 'CONSTRUTORA' };\r\nexport const MEI = { label: 'Micro Empreendedor Individual(MEI)', value: 'MEI' };\r\nexport const EMPRESA_GRANDE_PORTE = { label: 'Empresa de Grande Porte', value: 'EMPRESA_GRANDE_PORTE' };\r\nexport const CONDOMINIO = { label: 'Personalidade Anômala', value: 'CONDOMINIO' };\r\n\r\nexport const TIPO_EMPRESA_ENUM_VALUES = [\r\n  INDUSTRIA,\r\n  COMERCIO,\r\n  PRESTACAO_SERVICO,\r\n  PESSOA_FISICA,\r\n  TERCEIRO_SETOR,\r\n  PRODUTOR_RURAL,\r\n  ATIVIDADE_IMOBILIARIA,\r\n  CONSTRUTORA,\r\n  MEI,\r\n  EMPRESA_GRANDE_PORTE,\r\n  CONDOMINIO,\r\n];\r\n\r\nexport const TIPO_EMPRESA_AUTOMATIZACAO_VALUES = [\r\n  INDUSTRIA,\r\n  COMERCIO,\r\n  PRESTACAO_SERVICO,\r\n  TERCEIRO_SETOR,\r\n  PRODUTOR_RURAL,\r\n  ATIVIDADE_IMOBILIARIA,\r\n  CONSTRUTORA,\r\n  MEI,\r\n  EMPRESA_GRANDE_PORTE,\r\n  CONDOMINIO,\r\n];\r\n","export const PJ_GERAL = { label: 'PJ em Geral', value: 'pjGeral' };\r\nexport const PJ_SISTEMA_FINANCEIRO = { label: 'PJ Componente do Sistema Financeiro', value: 'pjSistemaFinanceiro' };\r\nexport const SOCIEDADE = { label: 'Sociedades Seguradoras, de Capitalização ou Entidade Aberta de Previdência Complementar', value: 'sociedade' };\r\n\r\nexport const QUALIFICACAO_PJ_ENUM_VALUES = [PJ_GERAL, PJ_SISTEMA_FINANCEIRO, SOCIEDADE];\r\n","export const SOBRE_COMERCIALIZACAO = { label: '1 - Sobre a comercialização da sua produção', value: 'SOBRE_COMERCIALIZACAO' };\r\nexport const SOBRE_FOLHA_PGTO = { label: '2 - Sobre a folha de pagamento', value: 'SOBRE_FOLHA_PGTO' };\r\n\r\nexport const CONTRIBUICAO_PREVIDENCIARIA_PRODUTOR_RURAL_ENUM_VALUES = [SOBRE_COMERCIALIZACAO, SOBRE_FOLHA_PGTO];\r\n","export const SUBSTITUIDA_INTEGRALMENTE = { label: '1 - Contribuição substituída integralmente', value: 'SUBSTITUIDA_INTEGRALMENTE' };\r\nexport const NAO_SUBSTITUIDA = { label: '2 - Contribuição não substituída', value: 'NAO_SUBSTITUIDA' };\r\nexport const SUBSTITUIDA_E_NAO_SUBSTITUIDA = {\r\n  label: '3 - Contribuição não substituída concomitante com contribuição substituída',\r\n  value: 'SUBSTITUIDA_E_NAO_SUBSTITUIDA',\r\n};\r\n\r\nexport const INDICATIVO_CONTRIBUICAO_ENUM_VALUES = [SUBSTITUIDA_INTEGRALMENTE, NAO_SUBSTITUIDA, SUBSTITUIDA_E_NAO_SUBSTITUIDA];\r\n","export const INTEGRALMENTE_SUBSTITUIDA = { label: '1 - Integralmente substituída', value: 'INTEGRALMENTE_SUBSTITUIDA' };\r\nexport const PARCIALMENTE_SUBSTITUIDA = { label: '2 - Parcialmente substituída', value: 'PARCIALMENTE_SUBSTITUIDA' };\r\n\r\nexport const INDICATIVO_SUBSTITUICAO_CONTRIBUICAO_ENUM_VALUES = [INTEGRALMENTE_SUBSTITUIDA, PARCIALMENTE_SUBSTITUIDA];\r\n","export const APROPRIACAO_DIRETA = { label: 'Apropriação Direta', value: 'apropriacaoDireta' };\r\nexport const RATEIO_PROPORCIONAL = { label: 'Rateio Proporcional', value: 'rateioProporcional' };\r\n\r\nexport const APROPRIACAO_CREDITO_ENUM_VALUES = [APROPRIACAO_DIRETA, RATEIO_PROPORCIONAL];\r\n","export const CUMULATIVO = { label: 'Cumulativo', value: 'cumulativo' };\r\nexport const CUMULATIVO_E_NAO_CUMULATIVO = { label: 'Não cumulativo e cumulativo', value: 'cumulativoENaoCumulativo' };\r\nexport const NAO_CUMULATIVO = { label: 'Não Cumulativo', value: 'naoCumulativo' };\r\n\r\nexport const INCIDENCIA_TRIBUTARIA_ENUM_VALUES = [CUMULATIVO, NAO_CUMULATIVO, CUMULATIVO_E_NAO_CUMULATIVO];\r\n","export const ALIQUOTA_BASICA = { label: 'Alíquota Básica', value: 'aliquotaBasica' };\r\nexport const ALIQUOTA_ESPECIFICA = { label: 'Alíquota Específica', value: 'aliquotaEspecifica' };\r\n\r\nexport const TIPO_CONTRIBUICAO_ENUM_VALUES = [ALIQUOTA_BASICA, ALIQUOTA_ESPECIFICA];\r\n","import { ACTION_EVENTS, alertManager, AlertType, progressActions, withTooltip } from 'summer';\r\n\r\nexport const showLoading = () =>\r\n  progressActions.showProgress({\r\n    animated: true,\r\n    className: 'progress-bar-rounded progress-animated-alt',\r\n    color: 'first',\r\n    label: 'Aguarde processando...',\r\n    striped: true,\r\n    value: 100,\r\n  });\r\n\r\nexport const closeLoading = () => progressActions.hideProgress();\r\n\r\nexport const toolTip = (messagem: string, name: any) => {\r\n  return withTooltip({ message: messagem, placement: 'top-start' }, name);\r\n};\r\n\r\nexport const promisedAlert = (message, type = AlertType.WARNING_YES_NO) =>\r\n  new Promise(resolve => {\r\n    promisedAlertWithCatch(message, type)\r\n      .then(resolve)\r\n      .catch(() => null);\r\n  });\r\n\r\nexport const promisedAlertWithCatch = (message, type = AlertType.WARNING_YES_NO) =>\r\n  new Promise((resolve, reject) => {\r\n    alertManager.emit(ACTION_EVENTS.SHOW, {\r\n      message,\r\n      onCancelClick: () => reject(),\r\n      onNoClick: () => reject(),\r\n      onOkClick: () => resolve(),\r\n      type,\r\n    });\r\n  });\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Alert, Col, Form, Row } from 'reactstrap';\r\nimport { EditViewProps, ERROR, getSelectedItem, InputGroupInline, InputType, ProcessBar, showToast, WindowComponent } from 'summer';\r\nimport { AutomatizacaoConfigEmpresa } from '../../../../models/dtos/ger/AutomatizacaoConfigEmpresa';\r\nimport { TIPO_EMPRESA_AUTOMATIZACAO_VALUES } from '../../../../models/enumerated/ger/tipoEmpresaEnum';\r\nimport { LUCRO_REAL, TIPO_TRIBUTACAO_ENUM_VALUES } from '../../../../models/enumerated/ger/tipoTributacaoEnum';\r\nimport { ANUAL, FORMA_APURACAO_ENUM_VALUES } from '../../../../models/enumerated/mcg/formaApuracaoEnum';\r\nimport { configurarEmpresa } from '../../../../services/ger.service';\r\nimport { closeLoading, showLoading } from '../../../../utilities/empresa.util';\r\n\r\ninterface EmpresaConfiguracaoAutomaticaProps extends EditViewProps<AutomatizacaoConfigEmpresa> {}\r\n\r\ninterface ConfiguracaoEmpresaProps {\r\n  empresaAutomacao?: AutomatizacaoConfigEmpresa;\r\n}\r\n\r\nconst EmpresaConfiguracaoAutomaticaProcessView: FC<EmpresaConfiguracaoAutomaticaProps & RouteComponentProps & ConfiguracaoEmpresaProps> = props => {\r\n  const selectedItem = getSelectedItem(props);\r\n  const formProps = useForm<AutomatizacaoConfigEmpresa>({ defaultValues: selectedItem, mode: 'onBlur' });\r\n  const dispatch = useDispatch();\r\n  const [isLucroReal, setLucroReal] = useState(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      setTimeout(() => {\r\n        formProps.reset({\r\n          id: props.empresaAutomacao.id,\r\n          razaoSocial: props.empresaAutomacao.razaoSocial,\r\n          tipoEmpresa: props.empresaAutomacao.tipoEmpresa,\r\n          tipoTributacao: props.empresaAutomacao.tipoTributacao,\r\n        });\r\n\r\n        if (props.empresaAutomacao.tipoTributacao === LUCRO_REAL.value) {\r\n          setLucroReal(true);\r\n          formProps.setValue('formaApuracaoECF', ANUAL.value, true);\r\n        }\r\n      }, 800);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  function handleImport(): void {\r\n    const empresa = formProps.getValues();\r\n\r\n    dispatch(showLoading());\r\n\r\n    configurarEmpresa(empresa, {\r\n      errorFunction: mensagem => {\r\n        showToast(mensagem, ERROR);\r\n        dispatch(closeLoading());\r\n      },\r\n      thenFunction: result => {\r\n        dispatch(closeLoading());\r\n        props.history.go(-2);\r\n      },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <WindowComponent title=\"Automatização de cadastro da Empresa\" wikiId={6574}>\r\n      <Form>\r\n        <InputGroupInline formProps={formProps} id=\"id\" hidden={true} />\r\n        <InputGroupInline disabled={true} formProps={formProps} id=\"razaoSocial\" isPrependLabel={true} label=\"Empresa\" />\r\n\r\n        <Alert color=\"primary\" className=\"text-center\">\r\n          Esta funcionalidade visa otimizar o processo de cadastramento e configuração de sua empresa a partir das melhores práticas utilizadas no\r\n          mercado. Facilitando assim a geração de arquivos digitais, relatórios, impostos, dentre outras funcionalidades. A configuração levará em\r\n          consideração cada tipo de empresa selecionada dentre as opções abaixo.\r\n        </Alert>\r\n        <Alert color=\"danger\" className=\"text-center\">\r\n          ATENÇÃO! As configurações automáticas não substituem a importância e o dever da conferência por parte do Contador das alíquotas e valores\r\n          gerados como padrão, devido à natureza e particularidades inerentes a cada empresa.\r\n        </Alert>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              id=\"tipoEmpresa\"\r\n              inputDropDownProps={{\r\n                optionsProvider: TIPO_EMPRESA_AUTOMATIZACAO_VALUES,\r\n              }}\r\n              isPrependLabel={true}\r\n              label=\"Tipo de Empresa\"\r\n              placeholder=\"Selecione o Tipo de Empresa\"\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              disabled={true}\r\n              formProps={formProps}\r\n              id=\"tipoTributacao\"\r\n              inputDropDownProps={{\r\n                optionsProvider: TIPO_TRIBUTACAO_ENUM_VALUES,\r\n              }}\r\n              isPrependLabel={true}\r\n              label=\"Tributação\"\r\n              placeholder=\"Selecione o Tipo de CAEPF\"\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        {isLucroReal ? (\r\n          <Row>\r\n            <Col>\r\n              <InputGroupInline\r\n                formProps={formProps}\r\n                id=\"formaApuracaoECF\"\r\n                inputDropDownProps={{\r\n                  optionsProvider: FORMA_APURACAO_ENUM_VALUES,\r\n                }}\r\n                isPrependLabel={true}\r\n                label=\"ECF forma de apuração\"\r\n                placeholder=\"Selecione a Forma de apuração a ser utilizada nas configurações do SPED ECF\"\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        ) : null}\r\n        <ProcessBar handleSubmit={formProps.handleSubmit(handleImport)} hideCancelButton={true} />\r\n      </Form>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default EmpresaConfiguracaoAutomaticaProcessView;\r\n","import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline, InputType } from 'summer';\r\nimport { EmpresaEmail } from '../../../../models/dtos/ger/empresaEmail';\r\n\r\nconst EmpresaEmailDetailEditView: FC<DetailEditViewFormProps<EmpresaEmail>> = props => {\r\n  const formProps = useForm<EmpresaEmail>({ defaultValues: props.selectedItem || {}, mode: 'onBlur' });\r\n\r\n  const defaultWidth = 100;\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps}>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { maxLength: 60 } }}\r\n            id=\"contato\"\r\n            isPrependLabel={true}\r\n            label=\"Contato\"\r\n            labelWidth={defaultWidth}\r\n            placeholder=\"Informe o contato\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { maxLength: 120, required: true } }}\r\n            id=\"email\"\r\n            isPrependLabel={true}\r\n            label=\"Email\"\r\n            labelWidth={defaultWidth}\r\n            placeholder=\"Informe o email\"\r\n            type={InputType.EMAIL}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default EmpresaEmailDetailEditView;\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Card, CardBody, CardHeader, Col, CustomInput, FormGroup, Row } from 'reactstrap';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline, isEmpty } from 'summer';\r\nimport useCepManager from '../../../../hooks/useCepManager';\r\nimport { Endereco } from '../../../../models/dtos/ger/endereco';\r\nimport { tipoEnderecoSelection } from '../../../../utilities/tipoEnderecoFormatter';\r\nimport CepBairroIS from '../../../components/ger/cepBairroIS/CepBairroIS';\r\nimport CepLocalidadeIS from '../../../components/ger/cepLocalidadeIS/CepLocalidadeIS';\r\nimport CepLogradouroIS from '../../../components/ger/cepLogradouro/CepLogradouroIS';\r\nimport CepTituloIS from '../../../components/ger/cepTituloIS/CepTituloIS';\r\nimport CepUFIS from '../../../components/ger/cepUFIS/CepUFIS';\r\n\r\nconst EmpresaEnderecoDetailEditView: FC<DetailEditViewFormProps<Endereco>> = props => {\r\n  const formProps = useForm<Endereco>({ defaultValues: props.selectedItem || {}, mode: 'onBlur' });\r\n\r\n  const cepManager = useCepManager(formProps, {\r\n    bairro: true,\r\n    cep: true,\r\n    localidade: true,\r\n    nome: 'logradouro',\r\n    titulo: 'tipoLogradouro',\r\n    uf: true,\r\n  });\r\n\r\n  useEffect(\r\n    () => {\r\n      if (props.selectedItem && props.selectedItem.id) {\r\n        setTimeout(() => {\r\n          // @ts-ignore\r\n          formProps.setValue('cepFmt', { cep: props.selectedItem.cep, label: props.selectedItem.cep }, true);\r\n        }, 800);\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const validateExtras = (formValues, currentValues, parentObject) => {\r\n    const isInsert = isEmpty(formValues.rowIndex) && isEmpty(formValues.id);\r\n    const erros = [];\r\n\r\n    if (!tipoEnderecoSelection(formProps.getValues())) {\r\n      erros.push('Pelo menos um tipo de endereço deve ser marcado.');\r\n    }\r\n\r\n    if (parentObject.enderecos && formProps.getValues().tipoEnderecoPrincipal === true) {\r\n      let foundEndereco;\r\n      if (isInsert) {\r\n        foundEndereco = parentObject.enderecos.filter(it => it.tipoEnderecoPrincipal);\r\n      } else {\r\n        foundEndereco = parentObject.enderecos.filter(it => {\r\n          const hasId = !isEmpty(formValues.id);\r\n          if (hasId) {\r\n            return it.tipoEnderecoPrincipal && Number(formValues.id) !== Number(it.id);\r\n          } else {\r\n            return it.tipoEnderecoPrincipal && Number(formValues.rowIndex) !== Number(it.rowIndex);\r\n          }\r\n        });\r\n      }\r\n      if (foundEndereco && foundEndereco.length > 0) {\r\n        erros.push('Já existe um Endereço cadastrado como principal.');\r\n      }\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <Row>\r\n        <Col>\r\n          <CepLogradouroIS\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            id=\"cepFmt\"\r\n            isPrependLabel={true}\r\n            label=\"CEP\"\r\n            placeholder=\"Informe o CEP\"\r\n            cepManager={cepManager}\r\n          />\r\n          <input type=\"hidden\" name=\"cep\" ref={formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <CepTituloIS id=\"tipoLogradouro\" isPrependLabel={true} formProps={{ ...formProps, validation: { required: true } }} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { required: true, maxLength: 150 } }}\r\n            id=\"logradouro\"\r\n            isPrependLabel={true}\r\n            label=\"Logradouro\"\r\n            placeholder=\"Informe o logradouro\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { required: true, maxLength: 10 } }}\r\n            id=\"numero\"\r\n            isPrependLabel={true}\r\n            label=\"Numero\"\r\n            placeholder=\"Informe o número\"\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { maxLength: 60 } }}\r\n            id=\"complemento\"\r\n            isPrependLabel={true}\r\n            label=\"Complemento\"\r\n            placeholder=\"Informe o complemento\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <CepUFIS formProps={{ ...formProps, validation: { required: true } }} id=\"uf\" />\r\n        </Col>\r\n        <Col>\r\n          <CepLocalidadeIS formProps={{ ...formProps, validation: { required: true } }} id=\"localidade\" />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <CepBairroIS formProps={{ ...formProps, validation: { required: true } }} id=\"bairro\" />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Card style={{ marginBottom: '16px', borderWidth: 'thin' }}>\r\n            <CardHeader className=\"font-weight-bold bg-light\">Tipo de Endereço</CardHeader>\r\n            <CardBody>\r\n              <FormGroup tag={Row}>\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    label=\"Principal\"\r\n                    name=\"tipoEnderecoPrincipal\"\r\n                    id=\"tipoEnderecoPrincipal\"\r\n                    innerRef={formProps.register}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    label=\"Residencial\"\r\n                    name=\"tipoEnderecoResidencial\"\r\n                    id=\"tipoEnderecoResidencial\"\r\n                    innerRef={formProps.register}\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup tag={Row}>\r\n                <Col>\r\n                  <CustomInput type=\"switch\" label=\"Cobrança\" name=\"tipoEnderecoCobranca\" id=\"tipoEnderecoCobranca\" innerRef={formProps.register} />\r\n                </Col>\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    label=\"Comercial\"\r\n                    name=\"tipoEnderecoComercial\"\r\n                    id=\"tipoEnderecoComercial\"\r\n                    innerRef={formProps.register}\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default EmpresaEnderecoDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Card, CardBody, CardHeader, Col, CustomInput, Row } from 'reactstrap';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline, InputType, isEmpty } from 'summer';\r\nimport { EmpresaTelefone } from '../../../../models/dtos/ger/empresaTelefone';\r\nimport { tipoTelefoneSelection } from '../../../../utilities/tipoTelefoneFormatter';\r\n\r\nconst EmpresaTelefoneDetailEditView: FC<DetailEditViewFormProps<EmpresaTelefone>> = props => {\r\n  const formProps = useForm<EmpresaTelefone>({ defaultValues: props.selectedItem || {}, mode: 'onBlur' });\r\n\r\n  const validateExtras = (formValues, currentValues, parentObject) => {\r\n    const isInsert = isEmpty(formValues.rowIndex) && isEmpty(formValues.id);\r\n    const erros = [];\r\n\r\n    if (!tipoTelefoneSelection(formProps.getValues())) {\r\n      erros.push('Pelo menos um tipo de telefone deve ser marcado.');\r\n    }\r\n\r\n    if (parentObject.telefones && formProps.getValues().tipoTelefonePrincipal === true) {\r\n      let foundTelefones;\r\n      if (isInsert) {\r\n        foundTelefones = parentObject.telefones.filter(it => it.tipoTelefonePrincipal);\r\n      } else {\r\n        foundTelefones = parentObject.telefones.filter(it => {\r\n          const hasId = !isEmpty(formValues.id);\r\n          if (hasId) {\r\n            return it.tipoTelefonePrincipal && Number(formValues.id) !== Number(it.id);\r\n          } else {\r\n            return it.tipoTelefonePrincipal && Number(formValues.rowIndex) !== Number(it.rowIndex);\r\n          }\r\n        });\r\n      }\r\n      if (foundTelefones && foundTelefones.length > 0) {\r\n        erros.push('Já existe um Telefone cadastrado como principal para a Empresa.');\r\n      }\r\n    }\r\n    return erros;\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline formProps={{ ...formProps, validation: { maxLength: 60 } }} id=\"contato\" isPrependLabel={true} label=\"Contato\" />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            id=\"numero\"\r\n            isPrependLabel={true}\r\n            label=\"Telefone\"\r\n            type={InputType.TELEFONE}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col style={{ marginBottom: '30px' }}>\r\n          <Card>\r\n            <CardHeader className=\"font-weight-bold bg-light\">Tipo</CardHeader>\r\n            <CardBody>\r\n              <Row style={{ marginBottom: '10px' }}>\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    label=\"Principal\"\r\n                    name=\"tipoTelefonePrincipal\"\r\n                    id=\"tipoTelefonePrincipal\"\r\n                    innerRef={formProps.register}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    label=\"Residencial\"\r\n                    name=\"tipoTelefoneResidencial\"\r\n                    id=\"tipoTelefoneResidencial\"\r\n                    innerRef={formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row style={{ marginBottom: '10px' }}>\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    label=\"Comercial\"\r\n                    name=\"tipoTelefoneComercial\"\r\n                    id=\"tipoTelefoneComercial\"\r\n                    innerRef={formProps.register}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <CustomInput type=\"switch\" label=\"Celular\" name=\"tipoTelefoneCelular\" id=\"tipoTelefoneCelular\" innerRef={formProps.register} />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <CustomInput type=\"switch\" label=\"Fax\" name=\"tipoTelefoneFax\" id=\"tipoTelefoneFax\" innerRef={formProps.register} />\r\n                </Col>\r\n              </Row>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default EmpresaTelefoneDetailEditView;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Button, Card, CardBody, CardTitle, Col, CustomInput, FormGroup, Row } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  AlertType,\r\n  cepFormatter,\r\n  ColumnsProps,\r\n  compare,\r\n  DetailManagerForm,\r\n  EditForm,\r\n  EditViewProps,\r\n  ERROR,\r\n  getSelectedItem,\r\n  InputGroupInline,\r\n  InputType,\r\n  isEmpty,\r\n  onlyAlphaNum,\r\n  onlyNumber,\r\n  phoneWithDDDFormatter,\r\n  showToast,\r\n  Tab,\r\n  TabGroup,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { AutomatizacaoConfigEmpresa } from '../../../../models/dtos/ger/AutomatizacaoConfigEmpresa';\r\nimport { CLASS_NAME, Empresa } from '../../../../models/dtos/ger/empresa';\r\nimport {\r\n  CLASSIFICACAO_03,\r\n  CLASSIFICACAO_60,\r\n  CLASSIFICACAO_80,\r\n  CLASSIFICACAO_TRIBUTARIA_ENUM_VALUES,\r\n  CONTRIB_PREVIDENCIARIA_PATRONAL_VALUES,\r\n  CONTRIB_PREVIDENCIARIA_PRODUTOR_VALUES,\r\n} from '../../../../models/enumerated/ger/classificacaoTributariaEnum';\r\nimport { NATUREZA_JURIDICA_ENUM_VALUES } from '../../../../models/enumerated/ger/naturezaJuridicaEnum';\r\nimport {\r\n  ATIVIDADE_IMOBILIARIA,\r\n  COMERCIO,\r\n  CONSTRUTORA,\r\n  EMPRESA_GRANDE_PORTE,\r\n  INDUSTRIA,\r\n  MEI,\r\n  PRESTACAO_SERVICO,\r\n  PRODUTOR_RURAL,\r\n  TERCEIRO_SETOR,\r\n} from '../../../../models/enumerated/ger/tipoEmpresaEnum';\r\nimport { AUTOMATIZACAO_EMPRESA_VALUES, LUCRO_REAL, TIPO_TRIBUTACAO_ENUM_VALUES } from '../../../../models/enumerated/ger/tipoTributacaoEnum';\r\nimport { QUALIFICACAO_PJ_ENUM_VALUES } from '../../../../models/enumerated/mcg/qualificacaoPJEnum';\r\nimport { CONTRIBUICAO_PREVIDENCIARIA_PRODUTOR_RURAL_ENUM_VALUES } from '../../../../models/enumerated/mfp/contribuicaoPrevidenciariaProdutorRuralEnum';\r\nimport { INDICATIVO_CONTRIBUICAO_ENUM_VALUES } from '../../../../models/enumerated/mfp/indicativoContribuicaoEnum';\r\nimport { INDICATIVO_SUBSTITUICAO_CONTRIBUICAO_ENUM_VALUES } from '../../../../models/enumerated/mfp/indicativoSubstituicaoContribuicaoEnum';\r\nimport { TIPO_CAEPF_ENUM_VALUES } from '../../../../models/enumerated/mfp/tipoCAEPFEnum';\r\nimport { TIPO_TRIBUTACAO_REAL_FCONT_ENUM_VALUES } from '../../../../models/enumerated/mfp/tipoTributacaoRealFCONTEnum';\r\nimport { APROPRIACAO_CREDITO_ENUM_VALUES } from '../../../../models/enumerated/mlf/apropriacaoCreditoEnum';\r\nimport {\r\n  CUMULATIVO_E_NAO_CUMULATIVO,\r\n  INCIDENCIA_TRIBUTARIA_ENUM_VALUES,\r\n  NAO_CUMULATIVO,\r\n} from '../../../../models/enumerated/mlf/incidenciaTributariaEnum';\r\nimport { TIPO_CONTRIBUICAO_ENUM_VALUES } from '../../../../models/enumerated/mlf/tipoContribuicaoEnum';\r\nimport {\r\n  empresaFilialSemGrupoPlanoContaIgual,\r\n  existeEmpresaPorCNPJ,\r\n  importarEmpresaPorCNPJRF,\r\n  validarCNPJEmpresa,\r\n  validarCPFEmpresa,\r\n} from '../../../../services/ger.service';\r\nimport { validarIE } from '../../../../services/mlf.service';\r\nimport { multiPageActions } from '../../../../store/ducks';\r\nimport { closeLoading, promisedAlert, promisedAlertWithCatch, showLoading, toolTip } from '../../../../utilities/empresa.util';\r\nimport EnumUtil from '../../../../utilities/enum.util';\r\nimport { tipoEnderecoFormatter } from '../../../../utilities/tipoEnderecoFormatter';\r\nimport { tipoTelefoneFormatter } from '../../../../utilities/tipoTelefoneFormatter';\r\nimport EmpresaIS from '../../../components/ger/empresaIS/EmpresaIS';\r\nimport GrupoEmpresaIS from '../../../components/ger/grupoEmpresa/GrupoEmpresaIS';\r\nimport ResponsavelIS from '../../../components/ger/responsavelIS/ResponsavelIS';\r\nimport EmpresaConfiguracaoAutomaticaProcessView from './EmpresaConfiguracaoAutomaticaProcessView';\r\nimport EmpresaEmailDetailEditView from './EmpresaEmailDetailEditView';\r\nimport EmpresaEnderecoDetailEditView from './EmpresaEnderecoDetailEditView';\r\nimport EmpresaTelefoneDetailEditView from './EmpresaTelefoneDetailEditView';\r\n\r\ninterface EmpresaEditViewProps extends EditViewProps<Empresa> {}\r\n\r\nconst EmpresaEditView: FC<EmpresaEditViewProps & RouteComponentProps> = props => {\r\n  const selectedItem = getSelectedItem(props);\r\n\r\n  const formProps = useForm<Empresa>({ defaultValues: selectedItem, mode: 'onBlur' });\r\n  const dispatch = useDispatch();\r\n\r\n  const [isEntidadeBeneficente, setEntidadeBeneficente] = useState(true);\r\n  const [isTribSubstituidaNaoSubstituida, setTribSubstituidaNaoSubstituida] = useState(true);\r\n  const [isContribPrevidenciariaPatronal, setContribPrevidenciariaPatronal] = useState(true);\r\n  const [isContribPrevidenciariaProdutor, setContribPrevidenciariaProdutor] = useState(true);\r\n  const [isApropriacaoCredito, setApropriacaoCredito] = useState(true);\r\n  const [isTribFCONT, setTribFCONT] = useState(true);\r\n  const [isTipoTributacao, setTipoTributacao] = useState(false);\r\n  const [isEnableImportRF, setIsEnableImportRF] = useState(false);\r\n  const [isEnableGrupo, setIsEnableGrupo] = useState(false);\r\n  const [isAcordoIsencao, setAcordoIsencao] = useState(true);\r\n  const [errorIE, setErrorIE] = useState(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      formProps.register({ name: 'empresaMFP' });\r\n      formProps.register({ name: 'grupoEmpresaRaiz' });\r\n      formProps.register({ name: 'matriz' });\r\n\r\n      setTimeout(() => {\r\n        if (formProps.getValues().id) {\r\n          setIsEnableImportRF(true);\r\n        }\r\n        if (formProps.getValues().grupoEmpresa) {\r\n          setIsEnableGrupo(true);\r\n        }\r\n        const { classificacaoTributaria, incidenciaTributaria, tipoTributacao, tipoEmpresaPessoaFisica } = formProps.getValues();\r\n        changeClassificacaoTributaria(classificacaoTributaria);\r\n        changeIncidenciaTributaria(incidenciaTributaria);\r\n        changeTipoTributacao(tipoTributacao);\r\n        onCheckPessoaFisica(tipoEmpresaPessoaFisica);\r\n      }, 800);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      selecionarMatriz();\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [formProps.getValues().matriz]\r\n  );\r\n\r\n  const errorFunc = mensagem => {\r\n    showToast(mensagem, ERROR);\r\n  };\r\n\r\n  function changeEntidadeBeneficente(value) {\r\n    if (value === CLASSIFICACAO_80.value) {\r\n      setEntidadeBeneficente(false);\r\n    } else {\r\n      setEntidadeBeneficente(true);\r\n      formProps.setValue('ministerioLeiCertificado', null);\r\n      formProps.setValue('numeroCertificado', null);\r\n      formProps.setValue('dataEmissaoCertificado', null);\r\n      formProps.setValue('dataVencimentoCertificado', null);\r\n      formProps.setValue('numeroProtocoloRenovacao', null);\r\n      formProps.setValue('dataProtocoloRenovacao', null);\r\n      formProps.setValue('dataPublicacaoDiarioOficial', null);\r\n      formProps.setValue('numeroPaginaDiarioOficial', null);\r\n    }\r\n  }\r\n\r\n  function changeTribSubstituidaNaoSubstituida(value) {\r\n    if (value === CLASSIFICACAO_03.value) {\r\n      setTribSubstituidaNaoSubstituida(false);\r\n    } else {\r\n      setTribSubstituidaNaoSubstituida(true);\r\n      formProps.setValue('indicadorContribuicaoSubstituida', null);\r\n      formProps.setValue('fatorMes', 0);\r\n      formProps.setValue('fator13', 0);\r\n    }\r\n  }\r\n\r\n  function changeContribPrevidenciariaPatronal(value) {\r\n    setContribPrevidenciariaPatronal(!EnumUtil.contains(CONTRIB_PREVIDENCIARIA_PATRONAL_VALUES, value));\r\n\r\n    if (!isContribPrevidenciariaPatronal) {\r\n      setContribPrevidenciariaPatronal(true);\r\n      formProps.setValue('indicadorContribuicaoPatronal', null);\r\n      formProps.setValue('percentualReducaoContribuicao', 0);\r\n    }\r\n  }\r\n\r\n  function changeContribPrevidenciariaProdutor(value) {\r\n    setContribPrevidenciariaProdutor(!EnumUtil.contains(CONTRIB_PREVIDENCIARIA_PRODUTOR_VALUES, value));\r\n\r\n    if (!isContribPrevidenciariaProdutor) {\r\n      setContribPrevidenciariaProdutor(true);\r\n      formProps.setValue('contribPrevidenciariaProdutorRural', null);\r\n    }\r\n  }\r\n\r\n  function changeAcordoIsencao(value) {\r\n    if (value === CLASSIFICACAO_60.value) {\r\n      setAcordoIsencao(false);\r\n    } else {\r\n      setAcordoIsencao(true);\r\n      formProps.setValue('acordoIsencaoMulta', false);\r\n    }\r\n  }\r\n\r\n  function changeClassificacaoTributaria(value): void {\r\n    changeAcordoIsencao(value);\r\n    changeContribPrevidenciariaPatronal(value);\r\n    changeContribPrevidenciariaProdutor(value);\r\n    changeEntidadeBeneficente(value);\r\n    changeTribSubstituidaNaoSubstituida(value);\r\n  }\r\n\r\n  function confirmarInativacao(): void {\r\n    if (formProps.getValues().inativa) {\r\n      promisedAlertWithCatch('Ao inativar esta empresa, a mesma deixará de aparecer dentre as empresas ativas nas buscas. Deseja prosseguir?')\r\n        .then(() => null)\r\n        .catch(() => setTimeout(() => formProps.setValue('inativa', false), 800));\r\n    }\r\n  }\r\n\r\n  const obterDadosEmpresa = (): void => {\r\n    const cnpj = formProps.getValues().cnpj;\r\n    if (!isEmpty(cnpj) && cnpj.length === 14) {\r\n      dispatch(showLoading());\r\n      validateEmpresaExists(cnpj);\r\n    } else {\r\n      promisedAlert('O Campo CNPJ não pode estar em branco ou incompleto!', AlertType.INFORMATION);\r\n    }\r\n  };\r\n\r\n  function validateEmpresaExists(cnpj: string): void {\r\n    existeEmpresaPorCNPJ(cnpj, {\r\n      errorFunction: mensagem => {\r\n        dispatch(closeLoading());\r\n        showToast(mensagem, ERROR);\r\n      },\r\n      thenFunction: result => {\r\n        if (result) {\r\n          dispatch(closeLoading());\r\n          promisedAlert('Este CNPJ já está cadastrado.', AlertType.INFORMATION);\r\n        } else {\r\n          dispatch(showLoading());\r\n          importarDaReceita(cnpj);\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  function importarDaReceita(cnpj: string): void {\r\n    importarEmpresaPorCNPJRF(cnpj, {\r\n      errorFunction: mensagem => {\r\n        dispatch(closeLoading());\r\n        showToast(mensagem, ERROR);\r\n      },\r\n      thenFunction: result => {\r\n        dispatch(closeLoading());\r\n        if (result) {\r\n          formProps.setValue(Object.keys(result).map(key => ({ [key]: result[key] })));\r\n        } else {\r\n          promisedAlert('Não foi encontrada empresa correspondente ao CNPJ informado no site da Receita Federal', AlertType.INFORMATION);\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  const validateExtras = (formData: Empresa): string[] => {\r\n    const erros = [];\r\n\r\n    if (errorIE) {\r\n      erros.push(`Inscrição Estadual: ${formData.ie} inválida!`);\r\n    }\r\n\r\n    if (!formData.cpf && !formData.cnpj) {\r\n      erros.push('O Campo CPF ou CNPJ deve ser preenchido');\r\n    } else if (formData.cpf && formData.cnpj) {\r\n      erros.push('Apenas o CPF ou o CNPJ deve ser preenchido.');\r\n    }\r\n\r\n    if (isEmpty(formData.enderecos)) {\r\n      erros.push('Pelo menos um endereço deve ser cadastrado');\r\n    }\r\n\r\n    if (!isEmpty(formData.enderecos)) {\r\n      if (formData.enderecos.length >= 0 && !formData.enderecos.find(it => it.tipoEnderecoPrincipal === true)) {\r\n        erros.push('Pelo menos um endereço deve ser principal.');\r\n      }\r\n    }\r\n\r\n    if (!isEmpty(formData.dataEncerramentoAtividade)) {\r\n      if (compare(formData.dataEncerramentoAtividade, formData.dataInicioAtividade) === -1) {\r\n        erros.push('A data de encerramento das atividades não pode ser menor do que a data de início');\r\n      }\r\n    }\r\n\r\n    if (formData.id) {\r\n      if (formData.matriz && formData.matriz.id === Number(formData.id)) {\r\n        erros.push('Empresa não pode ser matriz dela mesma.');\r\n      }\r\n    }\r\n\r\n    if (formData.mei && formData.indicadorEmpresaGrandePorte) {\r\n      erros.push('Selecione apenas umas das seguintes opções: Micro Empreendedor Individual ou Empresa de Grande Porte.');\r\n    }\r\n\r\n    if (!isEmpty(formData) && formData.centralizar === true && !isEmpty(formData.matriz)) {\r\n      erros.push('A Empresa não pode ser Filial e possuir Centralização de informações na Matriz marcado');\r\n    }\r\n\r\n    if (\r\n      !formData.tipoEmpresaIndustria &&\r\n      !formData.tipoEmpresaComercio &&\r\n      !formData.tipoEmpresaPrestacaoServico &&\r\n      !formData.tipoEmpresaPessoaFisica &&\r\n      !formData.tipoEmpresaTerceiroSetor &&\r\n      !formData.tipoEmpresaProdutorRural &&\r\n      !formData.tipoEmpresaAtividadeImobiliaria &&\r\n      !formData.tipoEmpresaConstrutora &&\r\n      !formData.mei &&\r\n      !formData.indicadorEmpresaGrandePorte &&\r\n      !formData.tipoEmpresaCondominio\r\n    ) {\r\n      erros.push('Pelo menos um Tipo de Empresa deve ser selecionado.');\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  const beforePersist = (formData: Empresa, done: any) => {\r\n    let promise = null;\r\n\r\n    if (formData.cnpj) {\r\n      promise = alreadyHasCNPJ(formData);\r\n    } else {\r\n      promise = alreadyHasCPF(formData);\r\n    }\r\n\r\n    promise.then(() => done());\r\n\r\n    return { async: true };\r\n  };\r\n\r\n  const alreadyHasCNPJ = (formData: Empresa) => {\r\n    return new Promise(resolve => {\r\n      validarCNPJEmpresa(\r\n        { cnpj: formData.cnpj, id: formData.id },\r\n        {\r\n          errorFunction: errorFunc,\r\n          thenFunction: result => {\r\n            if (result) {\r\n              promisedAlert('O CNPJ Já está cadastrado. Deseja Continuar?').then(() => {\r\n                resolve();\r\n              });\r\n            } else {\r\n              resolve();\r\n            }\r\n          },\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  const alreadyHasCPF = (formData: Empresa) => {\r\n    return new Promise(resolve => {\r\n      validarCPFEmpresa(\r\n        { cpf: formData.cpf, id: formData.id },\r\n        {\r\n          errorFunction: errorFunc,\r\n          thenFunction: result => {\r\n            if (result) {\r\n              promisedAlert('O CPF Já está cadastrado. Deseja Continuar?').then(() => {\r\n                resolve();\r\n              });\r\n            } else {\r\n              resolve();\r\n            }\r\n          },\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  const prestadorServicosChange = () => {\r\n    if (\r\n      !formProps.getValues().tipoEmpresaPrestacaoServico &&\r\n      !isEmpty(formProps.getValues().empresaMFP) &&\r\n      formProps.getValues().empresaMFP.calcularGpsTomador\r\n    ) {\r\n      promisedAlert(\r\n        'Em MFP > Manutenção > Configurações > Empresa > GPS está configurado para gerar GPS por Tomador, é necessário desmarcar esta opção para alterar este Tipo de Empresa.',\r\n        AlertType.WARNING\r\n      );\r\n\r\n      formProps.setValue('tipoEmpresaPrestacaoServico', true);\r\n    }\r\n  };\r\n\r\n  const construtoraChange = () => {\r\n    if (\r\n      !formProps.getValues().tipoEmpresaConstrutora &&\r\n      !isEmpty(formProps.getValues().empresaMFP) &&\r\n      formProps.getValues().empresaMFP.calcularGpsTomador\r\n    ) {\r\n      promisedAlert(\r\n        'Em MFP > Manutenção > Configurações > Empresa > GPS está configurado para gerar GPS por Tomador, é necessário desmarcar esta opção para alterar este Tipo de Empresa.',\r\n        AlertType.WARNING\r\n      );\r\n\r\n      formProps.setValue('tipoEmpresaConstrutora', true);\r\n    }\r\n  };\r\n\r\n  function selecionarCentralizar(): void {\r\n    if (formProps.getValues().id !== null && formProps.getValues().centralizar === true && formProps.getValues().matriz === null) {\r\n      empresaFilialSemGrupoPlanoContaIgual(formProps.getValues().id, formProps.getValues().grupoEmpresa.grupoEmpresaConfig.grupoPlanoConta.id, {\r\n        errorFunction: errorFunc,\r\n        thenFunction: result => {\r\n          if (result) {\r\n            promisedAlert(\r\n              'Ao marcar Centralizar a Matriz irá possuir Filiais que não possuem o mesmo Grupo de Plano de Conta.\\n' +\r\n                'Dessa forma não será possível fazer a integração do Fiscal com o contábil até ocorrer a mudança do plano de contas\\n' +\r\n                'das filiais. Se desejar fazer essa correção vá nas empresas filiais em: Módulo Principal > Manutenção > Configurações' +\r\n                ' > Grupo de Empresas > Grupo de Plano de Contas.',\r\n              AlertType.INFORMATION\r\n            );\r\n          }\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  function selecionarMatriz(): void {\r\n    const empresa = formProps.getValues();\r\n\r\n    if (\r\n      empresa.matriz &&\r\n      empresa.matriz.centralizar === true &&\r\n      empresa.grupoEmpresaRaiz.grupoEmpresaConfig !== null &&\r\n      empresa.matriz.grupoEmpresa.grupoEmpresaConfig !== null &&\r\n      empresa.grupoEmpresaRaiz.grupoEmpresaConfig.grupoPlanoConta.id !== empresa.matriz.grupoEmpresa.grupoEmpresaConfig.grupoPlanoConta.id\r\n    ) {\r\n      promisedAlert(\r\n        'A Empresa Atual precisa ter o mesmo Grupo de Plano de Contas da Empresa Matriz, \\n' +\r\n          ' pois a matriz possui configuração de Centralização Contábil.' +\r\n          ' Configure corretamente em Módulo Principal > Manutenção > Configurações > Grupo de Empresas ' +\r\n          '> Grupo de Plano de Contas.',\r\n        AlertType.INFORMATION\r\n      );\r\n    }\r\n  }\r\n\r\n  function changeIncidenciaTributaria(value): void {\r\n    if (value === NAO_CUMULATIVO.value || value === CUMULATIVO_E_NAO_CUMULATIVO.value) {\r\n      setApropriacaoCredito(false);\r\n    } else {\r\n      setApropriacaoCredito(true);\r\n      formProps.setValue('apropriacaoCredito', null);\r\n    }\r\n  }\r\n\r\n  function changeTipoTributacao(value): void {\r\n    if (value === LUCRO_REAL.value && !formProps.getValues().tipoEmpresaPessoaFisica) {\r\n      setTribFCONT(false);\r\n    } else {\r\n      setTribFCONT(true);\r\n      formProps.setValue('forTribFCONT', null);\r\n    }\r\n  }\r\n\r\n  function onCheckPessoaFisica(value): void {\r\n    if (value) {\r\n      setApropriacaoCredito(true);\r\n      setTribFCONT(true);\r\n      setTipoTributacao(true);\r\n\r\n      formProps.setValue('apropriacaoCredito', null);\r\n      formProps.setValue('forTribFCONT', null);\r\n      formProps.setValue('tipoTributacao', null);\r\n    } else {\r\n      setTipoTributacao(false);\r\n    }\r\n  }\r\n\r\n  function onIEBlur(): void {\r\n    const ie = formProps.getValues().ie;\r\n    if (formProps.getValues().enderecos.length > 0 && ie) {\r\n      const uf = formProps.getValues().enderecos[0].uf.sigla;\r\n\r\n      validarIE(ie, uf, {\r\n        errorFunction: errorFunc,\r\n        thenFunction: result => {\r\n          if (!result) {\r\n            setErrorIE(true);\r\n            promisedAlert(`Inscrição Estadual: ${ie} inválida!`, AlertType.WARNING);\r\n          } else {\r\n            setErrorIE(false);\r\n          }\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  const openMultiPage = (componente: any, empresaAutomacao: AutomatizacaoConfigEmpresa) => {\r\n    const Page = componente as FC<any>;\r\n    const pageProps = {\r\n      editItemProps: props.editItemProps,\r\n      empresaAutomacao,\r\n      history: props.history,\r\n      location: props.location,\r\n      match: props.match,\r\n      selectedItem: formProps.getValues(),\r\n    };\r\n    dispatch(multiPageActions.showPage(<Page {...pageProps} />));\r\n  };\r\n\r\n  /* A automação das empresas só será efetuada caso o tipo da empresa esteja dentre os valores da AUTOMATIZACAO_EMPRESA_VALUES\r\n    e a empresa não possua o grupo de empresas já cadastrado */\r\n  const afterPersist = (formData: Empresa, done: any) => {\r\n    if (EnumUtil.contains(AUTOMATIZACAO_EMPRESA_VALUES, formData.tipoTributacao) && isEmpty(formProps.getValues().grupoEmpresa)) {\r\n      let tipoDaEmpresa = '';\r\n\r\n      if (formData.tipoEmpresaPrestacaoServico) {\r\n        tipoDaEmpresa = PRESTACAO_SERVICO.value;\r\n      } else if (formData.tipoEmpresaComercio) {\r\n        tipoDaEmpresa = COMERCIO.value;\r\n      } else if (formData.tipoEmpresaIndustria) {\r\n        tipoDaEmpresa = INDUSTRIA.value;\r\n      } else if (formData.tipoEmpresaAtividadeImobiliaria) {\r\n        tipoDaEmpresa = ATIVIDADE_IMOBILIARIA.value;\r\n      } else if (formData.tipoEmpresaConstrutora) {\r\n        tipoDaEmpresa = CONSTRUTORA.value;\r\n      } else if (formData.indicadorEmpresaGrandePorte) {\r\n        tipoDaEmpresa = EMPRESA_GRANDE_PORTE.value;\r\n      } else if (formData.mei) {\r\n        tipoDaEmpresa = MEI.value;\r\n      } else if (formData.tipoEmpresaProdutorRural) {\r\n        tipoDaEmpresa = PRODUTOR_RURAL.value;\r\n      } else if (formData.tipoEmpresaTerceiroSetor) {\r\n        tipoDaEmpresa = TERCEIRO_SETOR.value;\r\n      }\r\n\r\n      const empresaAutomacao: AutomatizacaoConfigEmpresa = {\r\n        id: formData.id,\r\n        razaoSocial: formData.razaoSocial,\r\n        tipoEmpresa: tipoDaEmpresa,\r\n        tipoTributacao: formData.tipoTributacao,\r\n      };\r\n      openMultiPage(EmpresaConfiguracaoAutomaticaProcessView, empresaAutomacao);\r\n    } else {\r\n      done();\r\n    }\r\n\r\n    return { async: true };\r\n  };\r\n\r\n  const enderecoColumns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'logradouro',\r\n      sort: true,\r\n      text: 'Logradouro',\r\n    },\r\n    {\r\n      dataField: 'numero',\r\n      sort: true,\r\n      text: 'Número',\r\n    },\r\n    {\r\n      dataField: 'cep',\r\n      formatter: cepFormatter,\r\n      sort: true,\r\n      text: 'CEP',\r\n    },\r\n    {\r\n      dataField: 'bairro.bairro',\r\n      sort: true,\r\n      text: 'Bairro',\r\n    },\r\n    {\r\n      dataField: 'localidade.nome',\r\n      text: 'Cidade',\r\n    },\r\n    {\r\n      dataField: 'tipos',\r\n      formatter: tipoEnderecoFormatter,\r\n      text: 'Tipos',\r\n    },\r\n  ];\r\n\r\n  const telefoneColumns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'numero',\r\n      formatter: phoneWithDDDFormatter,\r\n      text: 'Telefone',\r\n    },\r\n    {\r\n      dataField: 'tipos',\r\n      formatter: tipoTelefoneFormatter,\r\n      text: 'Tipos',\r\n    },\r\n  ];\r\n\r\n  const emailColumns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <WindowComponent title=\"Manutenção de Empresas\" wikiId={4394}>\r\n      <EditForm\r\n        afterPersist={afterPersist}\r\n        beforePersist={beforePersist}\r\n        dtoClassName={CLASS_NAME}\r\n        editViewProps={props}\r\n        formProps={formProps}\r\n        validateExtras={validateExtras}\r\n      >\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={formProps}\r\n              id=\"cnpj\"\r\n              isPrependLabel={true}\r\n              inputProps={{ autoFocus: true }}\r\n              label=\"CNPJ\"\r\n              placeholder=\"Informe o CNPJ da Empresa\"\r\n              type={InputType.CNPJ}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <Button disabled={isEnableImportRF} className=\"btn btn-primary\" color=\"primary\" onClick={obterDadosEmpresa}>\r\n              <FontAwesomeIcon icon={'globe'} style={{ marginRight: '10px' }} />\r\n              Importar dados da RF\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={5}>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { ...onlyNumber(0, 8) } }}\r\n              id=\"codigo\"\r\n              isPrependLabel={true}\r\n              label=\"Código\"\r\n              placeholder=\"Informe o Código da Empresa\"\r\n              tooltipProps={{ message: 'Preenchimento Opcional - Codificação Automática' }}\r\n              type={InputType.NUMBER}\r\n            />\r\n          </Col>\r\n          <Col xs={5}>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { maxLength: 100, required: true } }}\r\n              id=\"razaoSocial\"\r\n              isPrependLabel={true}\r\n              label=\"Razão Social\"\r\n              placeholder=\"Informe a Razão Social da Empresa\"\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <CustomInput id=\"idinativa\" innerRef={formProps.register} label=\"Inativa\" type=\"switch\" name=\"inativa\" onChange={confirmarInativacao} />\r\n          </Col>\r\n          {toolTip('A empresa esta inativa para o escritório contábil?', 'inativa')}\r\n        </Row>\r\n        <TabGroup formProps={formProps}>\r\n          <Tab title=\"Dados Principais\">\r\n            <Row>\r\n              <Col>\r\n                <GrupoEmpresaIS disabled={isEnableGrupo} formProps={formProps} id=\"grupoEmpresa\" />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={{ ...formProps, validation: { maxLength: 100 } }}\r\n                  id=\"nomeFantasia\"\r\n                  isPrependLabel={true}\r\n                  label=\"Nome Fantasia\"\r\n                  placeholder=\"Informe o Nome Fantasia\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={formProps}\r\n                  id=\"cpf\"\r\n                  isPrependLabel={true}\r\n                  label=\"CPF\"\r\n                  placeholder=\"Informe o CNPJ\"\r\n                  type={InputType.CPF}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={{ ...formProps, validation: { maxLength: 12 } }}\r\n                  id=\"cei\"\r\n                  isPrependLabel={true}\r\n                  label=\"CEI/CNO\"\r\n                  placeholder=\"Informe o CEI/CNO\"\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={{ ...formProps, validation: { maxLength: 14 } }}\r\n                  id=\"ie\"\r\n                  isPrependLabel={true}\r\n                  label=\"I.E.\"\r\n                  placeholder=\"Informe o IE\"\r\n                  onBlur={onIEBlur}\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={{ ...formProps, validation: { maxLength: 20 } }}\r\n                  id=\"im\"\r\n                  isPrependLabel={true}\r\n                  label=\"I.M.\"\r\n                  placeholder=\"Informe o IM\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={{ ...formProps, validation: { ...onlyAlphaNum(0, 20) } }}\r\n                  id=\"caepf\"\r\n                  isPrependLabel={true}\r\n                  label=\"C.A.E.P.F.\"\r\n                  placeholder=\"Informe o CAEPF\"\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <InputGroupInline\r\n                  id=\"tipoCaepf\"\r\n                  label=\"Tipo de CAEPF\"\r\n                  isPrependLabel={true}\r\n                  placeholder=\"Selecione o Tipo de CAEPF\"\r\n                  formProps={formProps}\r\n                  inputDropDownProps={{\r\n                    optionsProvider: TIPO_CAEPF_ENUM_VALUES,\r\n                  }}\r\n                  type={InputType.DROP_DOWN}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={{ ...formProps, validation: { maxLength: 193 } }}\r\n                  id=\"homePage\"\r\n                  isPrependLabel={true}\r\n                  label=\"Site\"\r\n                  placeholder=\"Informe o Site\"\r\n                  type={InputType.URL}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Accordion formProps={formProps}>\r\n              <AccordionItem title=\"Endereços\">\r\n                <Row>\r\n                  <Col>\r\n                    <DetailManagerForm\r\n                      {...props}\r\n                      columns={enderecoColumns}\r\n                      detailView={EmpresaEnderecoDetailEditView}\r\n                      detailViewSize=\"extralarge\"\r\n                      formProps={formProps}\r\n                      keyField=\"rowIndex\"\r\n                      propName=\"enderecos\"\r\n                      title=\"Empresa - Endereço\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </AccordionItem>\r\n              <AccordionItem title=\"Telefones\">\r\n                <Row>\r\n                  <Col>\r\n                    <DetailManagerForm\r\n                      {...props}\r\n                      columns={telefoneColumns}\r\n                      detailView={EmpresaTelefoneDetailEditView}\r\n                      detailViewSize=\"large\"\r\n                      formProps={formProps}\r\n                      keyField=\"rowIndex\"\r\n                      propName=\"telefones\"\r\n                      title=\"Empresa - Telefone\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </AccordionItem>\r\n              <AccordionItem title=\"E-mails\">\r\n                <Row>\r\n                  <Col>\r\n                    <DetailManagerForm\r\n                      {...props}\r\n                      columns={emailColumns}\r\n                      detailView={EmpresaEmailDetailEditView}\r\n                      detailViewSize=\"large\"\r\n                      formProps={formProps}\r\n                      keyField=\"rowIndex\"\r\n                      propName=\"emails\"\r\n                      title=\"Empresa - Email\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </AccordionItem>\r\n            </Accordion>\r\n          </Tab>\r\n          <Tab title=\"Dados Complementares\">\r\n            <Row>\r\n              <Col>\r\n                <Card style={{ marginBottom: '16px', borderWidth: 'thin' }}>\r\n                  <CardBody>\r\n                    <CardTitle>Matriz e Filial</CardTitle>\r\n                    <EmpresaIS formProps={formProps} id=\"matriz\" label=\"Matriz\" placeholder=\"Informe a Matriz da Empresa\" />\r\n                    <FormGroup tag={Row}>\r\n                      <Col>\r\n                        <CustomInput\r\n                          id=\"idcentralizar\"\r\n                          innerRef={formProps.register}\r\n                          label=\"Centralizar\"\r\n                          name=\"centralizar\"\r\n                          onChange={selecionarCentralizar}\r\n                          type=\"switch\"\r\n                        />\r\n                      </Col>\r\n                      {toolTip('Centraliza Informações na Matriz (Integração Contábil)', 'centralizar')}\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Card style={{ marginBottom: '16px', borderWidth: 'thin' }}>\r\n                  <CardBody>\r\n                    <CardTitle>Tipo de Empresa</CardTitle>\r\n                    <FormGroup tag={Row}>\r\n                      <Col>\r\n                        <CustomInput\r\n                          id=\"idtipoEmpresaIndustria\"\r\n                          innerRef={formProps.register}\r\n                          label=\"Indústria\"\r\n                          name=\"tipoEmpresaIndustria\"\r\n                          type=\"switch\"\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <CustomInput\r\n                          id=\"idtipoEmpresaComercio\"\r\n                          innerRef={formProps.register}\r\n                          label=\"Comércio\"\r\n                          name=\"tipoEmpresaComercio\"\r\n                          type=\"switch\"\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <CustomInput\r\n                          id=\"idtipoEmpresaPrestacaoServico\"\r\n                          innerRef={formProps.register}\r\n                          label=\"Prestação de Serviço\"\r\n                          name=\"tipoEmpresaPrestacaoServico\"\r\n                          onChange={prestadorServicosChange}\r\n                          type=\"switch\"\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <CustomInput\r\n                          id=\"idtipoEmpresaPessoaFisica\"\r\n                          innerRef={formProps.register}\r\n                          label=\"Pessoa Física\"\r\n                          name=\"tipoEmpresaPessoaFisica\"\r\n                          onChange={onCheckPessoaFisica}\r\n                          type=\"switch\"\r\n                        />\r\n                      </Col>\r\n                    </FormGroup>\r\n                    <FormGroup tag={Row}>\r\n                      <Col>\r\n                        <CustomInput\r\n                          id=\"idtipoEmpresaTerceiroSetor\"\r\n                          innerRef={formProps.register}\r\n                          label=\"Terceiro Setor\"\r\n                          name=\"tipoEmpresaTerceiroSetor\"\r\n                          type=\"switch\"\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <CustomInput\r\n                          id=\"idtipoEmpresaProdutorRural\"\r\n                          innerRef={formProps.register}\r\n                          label=\"Produtor Rural\"\r\n                          name=\"tipoEmpresaProdutorRural\"\r\n                          type=\"switch\"\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <CustomInput\r\n                          id=\"idtipoEmpresaAtividadeImobiliaria\"\r\n                          innerRef={formProps.register}\r\n                          label=\"Atividade Imobiliária\"\r\n                          name=\"tipoEmpresaAtividadeImobiliaria\"\r\n                          type=\"switch\"\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <CustomInput\r\n                          id=\"idtipoEmpresaConstrutora\"\r\n                          innerRef={formProps.register}\r\n                          label=\"Construtora\"\r\n                          name=\"tipoEmpresaConstrutora\"\r\n                          onChange={construtoraChange}\r\n                          type=\"switch\"\r\n                        />\r\n                      </Col>\r\n                    </FormGroup>\r\n                    <FormGroup tag={Row}>\r\n                      <Col>\r\n                        <CustomInput id=\"idmei\" innerRef={formProps.register} label=\"Micro Empreendedor Individual(MEI)\" name=\"mei\" type=\"switch\" />\r\n                        {toolTip('Empresa do Tipo MEI', 'mei')}\r\n                      </Col>\r\n                      <Col>\r\n                        <CustomInput\r\n                          id=\"idindicadorEmpresaGrandePorte\"\r\n                          innerRef={formProps.register}\r\n                          label=\"Empresa de Grande Porte\"\r\n                          name=\"indicadorEmpresaGrandePorte\"\r\n                          type=\"switch\"\r\n                        />\r\n                        {toolTip('Empresa é de grande porte?', 'indicadorEmpresaGrandePorte')}\r\n                      </Col>\r\n                      <Col>\r\n                        <CustomInput\r\n                          id=\"idtipoEmpresaCondominio\"\r\n                          innerRef={formProps.register}\r\n                          label=\"Personalidade Anômala\"\r\n                          name=\"tipoEmpresaCondominio\"\r\n                          type=\"switch\"\r\n                        />\r\n                        {toolTip('Empresa que não se enquadra na situação de Física nem Jurídica. Ex. Condomínio', 'tipoEmpresaCondominio')}\r\n                      </Col>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Card style={{ marginBottom: '16px', borderWidth: 'thin' }}>\r\n                  <CardBody>\r\n                    <CardTitle>Tributação</CardTitle>\r\n                    <Row>\r\n                      <Col>\r\n                        <InputGroupInline\r\n                          disabled={isTipoTributacao}\r\n                          formProps={{ ...formProps, validation: { required: !formProps.getValues().tipoEmpresaPessoaFisica } }}\r\n                          id=\"tipoTributacao\"\r\n                          inputDropDownProps={{\r\n                            optionsProvider: TIPO_TRIBUTACAO_ENUM_VALUES,\r\n                          }}\r\n                          isPrependLabel={true}\r\n                          label=\"Tributação\"\r\n                          onChange={changeTipoTributacao}\r\n                          placeholder=\"Selecione o Tipo de Tributação\"\r\n                          type={InputType.DROP_DOWN}\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <InputGroupInline\r\n                          formProps={formProps}\r\n                          id=\"incidenciaTributaria\"\r\n                          inputDropDownProps={{\r\n                            optionsProvider: INCIDENCIA_TRIBUTARIA_ENUM_VALUES,\r\n                          }}\r\n                          isPrependLabel={true}\r\n                          label=\"Incidência Tributária\"\r\n                          onChange={changeIncidenciaTributaria}\r\n                          placeholder=\"Selecione a Incidência Tributária\"\r\n                          type={InputType.DROP_DOWN}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <InputGroupInline\r\n                          disabled={isApropriacaoCredito}\r\n                          id=\"apropriacaoCredito\"\r\n                          label=\"Apropriação de Créditos\"\r\n                          isPrependLabel={true}\r\n                          placeholder=\"Selecione o Tipo de Apropriação de Créditos\"\r\n                          formProps={formProps}\r\n                          inputDropDownProps={{\r\n                            optionsProvider: APROPRIACAO_CREDITO_ENUM_VALUES,\r\n                          }}\r\n                          type={InputType.DROP_DOWN}\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <InputGroupInline\r\n                          id=\"tipoContribuicao\"\r\n                          label=\"Tipo de Contribuição\"\r\n                          isPrependLabel={true}\r\n                          placeholder=\"Selecione o Tipo de Contribuição\"\r\n                          formProps={formProps}\r\n                          inputDropDownProps={{\r\n                            optionsProvider: TIPO_CONTRIBUICAO_ENUM_VALUES,\r\n                          }}\r\n                          type={InputType.DROP_DOWN}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <InputGroupInline\r\n                          disabled={isTribFCONT}\r\n                          formProps={formProps}\r\n                          id=\"forTribFCONT\"\r\n                          inputDropDownProps={{\r\n                            optionsProvider: TIPO_TRIBUTACAO_REAL_FCONT_ENUM_VALUES,\r\n                          }}\r\n                          isPrependLabel={true}\r\n                          label=\"Tributação Real (FCONT)\"\r\n                          placeholder=\"Selecione o Tipo de Tributação Real (FCONT)\"\r\n                          type={InputType.DROP_DOWN}\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <InputGroupInline\r\n                          id=\"qualificacaoPJ\"\r\n                          label=\"Qualificação da PJ\"\r\n                          isPrependLabel={true}\r\n                          placeholder=\"Selecione o Tipo de Contribuição\"\r\n                          formProps={formProps}\r\n                          inputDropDownProps={{\r\n                            optionsProvider: QUALIFICACAO_PJ_ENUM_VALUES,\r\n                          }}\r\n                          type={InputType.DROP_DOWN}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <InputGroupInline\r\n                          id=\"codigoAcessoSimplesNacional\"\r\n                          label=\"Código de Acesso Simples Nacional\"\r\n                          isPrependLabel={true}\r\n                          placeholder=\"Informe o Código de Acesso Simples Nacional\"\r\n                          formProps={{ ...formProps, validation: { ...onlyNumber(0, 20) } }}\r\n                          type={InputType.NUMBER}\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <InputGroupInline\r\n                          id=\"naturezaJuridica\"\r\n                          label=\"Natureza Jurídica\"\r\n                          isPrependLabel={true}\r\n                          placeholder=\"Selecione a Natureza Jurídica\"\r\n                          formProps={formProps}\r\n                          inputDropDownProps={{\r\n                            optionsProvider: NATUREZA_JURIDICA_ENUM_VALUES,\r\n                          }}\r\n                          type={InputType.DROP_DOWN}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <InputGroupInline\r\n                          formProps={formProps}\r\n                          id=\"dtInicioPrestServCont\"\r\n                          isPrependLabel={true}\r\n                          label=\"Data Início da Prestação de Serviços Contábeis\"\r\n                          placeholder=\"Informe a Data de Início da Prestação de Serviços Contábeis\"\r\n                          type={InputType.DATE}\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <InputGroupInline\r\n                          formProps={formProps}\r\n                          id=\"dtInicioServAdm\"\r\n                          isPrependLabel={true}\r\n                          label=\"Data Início Prestação de Serviços Administrativos\"\r\n                          placeholder=\"Informe a Data de Início Prestação de Serviços Administrativos\"\r\n                          type={InputType.DATE}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Card style={{ marginBottom: '16px', borderWidth: 'thin' }}>\r\n                  <CardBody>\r\n                    <CardTitle>Responsáveis</CardTitle>\r\n                    <Row>\r\n                      <Col>\r\n                        <ResponsavelIS formProps={{ ...formProps, validation: { required: true } }} id=\"responsavel\" />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <ResponsavelIS formProps={formProps} id=\"responsavelContador\" label=\"Contador\" placeholder=\"Informe o Contador Responsável\" />\r\n                      </Col>\r\n                    </Row>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Tab>\r\n          <Tab title=\"Registro da Empresa\">\r\n            <FormGroup tag={Row}>\r\n              <Col>\r\n                <CustomInput\r\n                  id=\"idindicadorNire\"\r\n                  innerRef={formProps.register}\r\n                  label=\"Empresa possui registro na Junta Comercial\"\r\n                  name=\"indicadorNire\"\r\n                  type=\"switch\"\r\n                />\r\n                {toolTip('Empresa possui registro na Junta Comercial (possui NIRE)?', 'indicadorNire')}\r\n              </Col>\r\n            </FormGroup>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={{ ...formProps, validation: { ...onlyNumber(0, 20) } }}\r\n                  id=\"nroLivro\"\r\n                  isPrependLabel={true}\r\n                  label=\"Nº do Livro\"\r\n                  placeholder=\"Informe o Nº do Livro\"\r\n                  type={InputType.NUMBER}\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={{\r\n                    ...formProps,\r\n                    validation: {\r\n                      maxLength: 60,\r\n                      pattern: {\r\n                        message: 'Somente são permitidos números ou letras.',\r\n                        value: new RegExp(`^[a-zA-Z0-9 ]{0,60}$`),\r\n                      },\r\n                    },\r\n                  }}\r\n                  id=\"orgaoRegistro\"\r\n                  isPrependLabel={true}\r\n                  label=\"Órgão Registro\"\r\n                  placeholder=\"Informe o Órgão Registro\"\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={formProps}\r\n                  id=\"dataRegistro\"\r\n                  isPrependLabel={true}\r\n                  label=\"Data Registro\"\r\n                  placeholder=\"Informe a Data de Registro\"\r\n                  type={InputType.DATE}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={{ ...formProps, validation: { ...onlyAlphaNum(0, 9) } }}\r\n                  id=\"suframa\"\r\n                  isPrependLabel={true}\r\n                  label=\"Suframa\"\r\n                  placeholder=\"Informe o código Suframa\"\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={{ ...formProps, validation: { ...onlyNumber(0, 60) } }}\r\n                  id=\"numIdentOrgao\"\r\n                  isPrependLabel={true}\r\n                  label=\"Nº Identificação do Órgão\"\r\n                  placeholder=\"Informe o Nº Identificação do Órgão\"\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={{ ...formProps, validation: { required: true } }}\r\n                  id=\"dataInicioAtividade\"\r\n                  isPrependLabel={true}\r\n                  label=\"Data Início Atividade\"\r\n                  placeholder=\"Informe a Data de Início da Atividade\"\r\n                  type={InputType.DATE}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={{ ...formProps, validation: { ...onlyAlphaNum(0, 7) } }}\r\n                  id=\"cnaef\"\r\n                  isPrependLabel={true}\r\n                  label=\"CNAE\"\r\n                  placeholder=\"Informe o CNAE\"\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={{ ...formProps, validation: { ...onlyNumber(0, 2) } }}\r\n                  id=\"cnaefDesmembramento\"\r\n                  isPrependLabel={true}\r\n                  label=\"Desmembramento CNAE\"\r\n                  placeholder=\"Informe o Desmembramento CNAE\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={formProps}\r\n                  id=\"dtSimplesEmpresarial\"\r\n                  isPrependLabel={true}\r\n                  label=\"Data Sociedade Simples para Sociedade Empresarial\"\r\n                  placeholder=\"Informe a Data de Início da Atividade\"\r\n                  tooltipProps={{\r\n                    message:\r\n                      'Data do NIRE - Data de Arquivamento do Ato de Conversão de Sociedade Simples em Sociedade Empresária. ' +\r\n                      'É a data em que a Junta Comercial arquivou o documento que formaliza a conversão.',\r\n                  }}\r\n                  type={InputType.DATE}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={formProps}\r\n                  id=\"dtVencimentoAlvaraLocalizacao\"\r\n                  isPrependLabel={true}\r\n                  label=\"Data de Vencimento do Alvará de Localização\"\r\n                  placeholder=\"Informe o Vencimento do Alvará de Localização\"\r\n                  type={InputType.DATE}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={formProps}\r\n                  id=\"dataEncerramentoAtividade\"\r\n                  isPrependLabel={true}\r\n                  label=\"Data Encerramento das Atividades\"\r\n                  placeholder=\"Informe a Data Encerramento das Atividades\"\r\n                  type={InputType.DATE}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Tab>\r\n          <Tab title=\"eSocial / EFD-Reinf\">\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  formProps={formProps}\r\n                  id=\"classificacaoTributaria\"\r\n                  inputDropDownProps={{\r\n                    optionsProvider: CLASSIFICACAO_TRIBUTARIA_ENUM_VALUES,\r\n                  }}\r\n                  isPrependLabel={true}\r\n                  label=\"Classificação Tributária\"\r\n                  onChange={changeClassificacaoTributaria}\r\n                  placeholder=\"Selecione a Classificação Tributária\"\r\n                  type={InputType.DROP_DOWN}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  disabled={isTribSubstituidaNaoSubstituida}\r\n                  formProps={formProps}\r\n                  label=\"Indicador de Contribuição Substituída\"\r\n                  id=\"indicadorContribuicaoSubstituida\"\r\n                  isPrependLabel={true}\r\n                  inputDropDownProps={{\r\n                    optionsProvider: INDICATIVO_CONTRIBUICAO_ENUM_VALUES,\r\n                  }}\r\n                  placeholder=\"Selecione o Indicador de Contribuição Substituída\"\r\n                  type={InputType.DROP_DOWN}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  disabled={isTribSubstituidaNaoSubstituida}\r\n                  formProps={{ ...formProps, validation: { minValue: 0, maxLength: 4, maxValue: 100 } }}\r\n                  label=\"Fator Mês\"\r\n                  id=\"fatorMes\"\r\n                  isPrependLabel={true}\r\n                  placeholder=\"Informe o Nº do Livro\"\r\n                  tooltipProps={{\r\n                    message:\r\n                      'Fator a ser utilizado para cálculo da contribuição patronal do mês dos trabalhadores envolvidos na execução das atividades ' +\r\n                      'enquadradas no Anexo IV em conjunto com as dos Anexos I a III e V da Lei Complementar nº 123/2006.',\r\n                  }}\r\n                  type={InputType.NUMBER}\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <InputGroupInline\r\n                  disabled={isTribSubstituidaNaoSubstituida}\r\n                  formProps={{ ...formProps, validation: { minValue: 0, maxLength: 2, maxValue: 100 } }}\r\n                  id=\"fator13\"\r\n                  isPrependLabel={true}\r\n                  label=\"Fator 13º\"\r\n                  placeholder=\"Informe o Fator 13º\"\r\n                  tooltipProps={{\r\n                    message:\r\n                      'Fator a ser utilizado para cálculo da contribuição patronal do décimo terceiro dos trabalhadores envolvidos na execução ' +\r\n                      'das atividades enquadradas no Anexo IV em conjunto com as dos Anexos I a III e V da Lei Complementar nº 123/2006.',\r\n                  }}\r\n                  type={InputType.NUMBER}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  disabled={isContribPrevidenciariaPatronal}\r\n                  formProps={formProps}\r\n                  id=\"indicadorContribuicaoPatronal\"\r\n                  inputDropDownProps={{\r\n                    optionsProvider: INDICATIVO_SUBSTITUICAO_CONTRIBUICAO_ENUM_VALUES,\r\n                  }}\r\n                  isPrependLabel={true}\r\n                  label=\"Contribuição Previdenciária Patronal\"\r\n                  placeholder=\"Selecione a Contribuição Previdenciária Patronal\"\r\n                  tooltipProps={{\r\n                    message: 'Indicativo de substituição da contribuição previdenciária patronal.',\r\n                  }}\r\n                  type={InputType.DROP_DOWN}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  disabled={isContribPrevidenciariaPatronal}\r\n                  formProps={{ ...formProps, validation: { minValue: 0, maxLength: 2, maxValue: 100 } }}\r\n                  id=\"percentualReducaoContribuicao\"\r\n                  isPrependLabel={true}\r\n                  label=\"Percentual Redução da Contribuição\"\r\n                  placeholder=\"Informe o Percentual Redução da Contribuição\"\r\n                  tooltipProps={{ message: 'Percentual de redução da contribuição prevista na lei 12.546/2011.' }}\r\n                  type={InputType.NUMBER}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline\r\n                  disabled={isContribPrevidenciariaProdutor}\r\n                  formProps={formProps}\r\n                  id=\"contribPrevidenciariaProdutorRural\"\r\n                  isPrependLabel={true}\r\n                  inputDropDownProps={{\r\n                    optionsProvider: CONTRIBUICAO_PREVIDENCIARIA_PRODUTOR_RURAL_ENUM_VALUES,\r\n                  }}\r\n                  label=\"Contribuição Previdenciária Produtor Rural\"\r\n                  placeholder=\"Selecione a Contribuição Previdenciária Produtor Rural\"\r\n                  tooltipProps={{\r\n                    message:\r\n                      'Indicativo da opção pelo produtor rural pela forma de tributação da contribuição previdenciária, ' +\r\n                      'nos termos do art. 25, §13, da Lei 8.212/1991 e do art. 25, §7°, da Lei 8.870/1994.',\r\n                  }}\r\n                  type={InputType.DROP_DOWN}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <FormGroup tag={Row}>\r\n              <Col>\r\n                <CustomInput\r\n                  disabled={isAcordoIsencao}\r\n                  id=\"idacordoIsencaoMulta\"\r\n                  innerRef={formProps.register}\r\n                  label=\"Acordo Internacional para Isenção de Multa\"\r\n                  name=\"acordoIsencaoMulta\"\r\n                  type=\"switch\"\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n            <Row>\r\n              <Col>\r\n                <Card style={{ marginBottom: '16px', borderWidth: 'thin' }}>\r\n                  <CardBody>\r\n                    <CardTitle>Entidade Beneficente/Inseta</CardTitle>\r\n                    <Row>\r\n                      <Col>\r\n                        <InputGroupInline\r\n                          disabled={isEntidadeBeneficente}\r\n                          formProps={{ ...formProps, validation: { maxLength: 70 } }}\r\n                          id=\"ministerioLeiCertificado\"\r\n                          isPrependLabel={true}\r\n                          label=\"Ministério/Lei\"\r\n                          placeholder=\"Informe o Ministério/Lei\"\r\n                          tooltipProps={{ message: 'Sigla e nome do Ministério ou Lei que concedeu o Certificado.' }}\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <InputGroupInline\r\n                          disabled={isEntidadeBeneficente}\r\n                          formProps={{ ...formProps, validation: { maxLength: 40 } }}\r\n                          id=\"numeroCertificado\"\r\n                          isPrependLabel={true}\r\n                          label=\"Nº Certificado\"\r\n                          placeholder=\"Informe o Nº Certificado\"\r\n                          tooltipProps={{\r\n                            message:\r\n                              'Número do Certificado de Entidade Beneficente de Assistência Social, número da portaria de concessão do Certificado,' +\r\n                              ' ou, no caso de concessão através de Lei específica, o número da Lei.',\r\n                          }}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <InputGroupInline\r\n                          disabled={isEntidadeBeneficente}\r\n                          formProps={formProps}\r\n                          id=\"dataEmissaoCertificado\"\r\n                          isPrependLabel={true}\r\n                          label=\"Data de Emissão do Certificado/Publicação da Lei\"\r\n                          placeholder=\"Informe a Data de Emissão do Certificado/Publicação da Lei\"\r\n                          type={InputType.DATE}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <InputGroupInline\r\n                          disabled={isEntidadeBeneficente}\r\n                          formProps={formProps}\r\n                          id=\"dataVencimentoCertificado\"\r\n                          isPrependLabel={true}\r\n                          label=\"Data de Vencimento do Certificado\"\r\n                          placeholder=\"Informe a Data de Vencimento do Certificado\"\r\n                          type={InputType.DATE}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <InputGroupInline\r\n                          disabled={isEntidadeBeneficente}\r\n                          formProps={{ ...formProps, validation: { maxLength: 40 } }}\r\n                          id=\"numeroProtocoloRenovacao\"\r\n                          isPrependLabel={true}\r\n                          label=\"Nº Protocolo Renovação\"\r\n                          placeholder=\"Informe o Nº Protocolo Renovação\"\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <InputGroupInline\r\n                          disabled={isEntidadeBeneficente}\r\n                          formProps={formProps}\r\n                          id=\"dataProtocoloRenovacao\"\r\n                          isPrependLabel={true}\r\n                          label=\"Data Protocolo Renovação\"\r\n                          placeholder=\"Informe a Data Protocolo Renovação\"\r\n                          type={InputType.DATE}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <InputGroupInline\r\n                          disabled={isEntidadeBeneficente}\r\n                          formProps={formProps}\r\n                          id=\"dataProtocodataPublicacaoDiarioOficial\"\r\n                          isPrependLabel={true}\r\n                          label=\"Data de Publicação no Diário Oficial da União\"\r\n                          placeholder=\"Informe a Data de Publicação no Diário Oficial da União\"\r\n                          type={InputType.DATE}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <InputGroupInline\r\n                          disabled={isEntidadeBeneficente}\r\n                          formProps={{ ...formProps, validation: { ...onlyNumber(0, 5) } }}\r\n                          id=\"numeroPaginaDiarioOficial\"\r\n                          isPrependLabel={true}\r\n                          label=\"Número da Página no Diário Oficial da União\"\r\n                          placeholder=\"Informe o Número da Página no Diário Oficial da União\"\r\n                          tooltipProps={{\r\n                            message: 'Número da página no Diário Oficial da União referente à publicação do documento de concessão do certificado.',\r\n                          }}\r\n                          type={InputType.NUMBER}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Tab>\r\n        </TabGroup>\r\n      </EditForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default EmpresaEditView;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { Basic } from 'summer';\r\nimport { CepPais } from './cepPais';\r\n\r\nexport interface CepUF extends Basic {\r\n  codigo?: string;\r\n  sigla?: string;\r\n  nome?: string;\r\n  exterior?: boolean;\r\n  pais?: CepPais;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.cepuf';\r\n","import { Basic } from 'summer';\r\nimport { CepUF } from './cepUF';\r\n\r\nexport interface CepLocalidade extends Basic {\r\n  nome?: string;\r\n  cep?: string;\r\n  tipo?: string;\r\n  codigoMunicipio?: string;\r\n  uf?: CepUF;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.ceplocalidade';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { SearchFilterProps } from '../../../../hooks/useSearchFilter';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepUF';\r\n\r\nexport interface CepUFISProps extends InputProps {\r\n  searchFilter?: SearchFilterProps;\r\n}\r\n\r\nconst CepUFIS: FC<CepUFISProps> = props => {\r\n  const onChange = value => {\r\n    if (props.searchFilter) {\r\n      props.searchFilter.setFilter(CLASS_NAME, value);\r\n    }\r\n    if (props.onChange) {\r\n      props.onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'sigla',\r\n            text: 'Sigla',\r\n          },\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'CepUFSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'UF'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a UF'}\r\n      type={InputType.INPUT_SEARCH}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepUFIS;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { SearchFilterProps } from '../../../../hooks/useSearchFilter';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepLocalidade';\r\nimport { CLASS_NAME as CLASS_NAME_UF } from '../../../../models/dtos/ger/cepUF';\r\n\r\nexport interface CepLocalidadeISProps extends InputProps {\r\n  searchFilter?: SearchFilterProps;\r\n}\r\n\r\nconst CepLocalidadeIS: FC<CepLocalidadeISProps> = props => {\r\n  const searchExpressionsFull = defaultExpressions => {\r\n    const expressions = [];\r\n\r\n    if (props.searchFilter) {\r\n      const item = props.searchFilter.getFilter(CLASS_NAME_UF);\r\n      if (item) {\r\n        expressions.push({\r\n          fieldName: 'uf.id',\r\n          value: item.id,\r\n        });\r\n      }\r\n    }\r\n\r\n    if (expressions.length > 0) {\r\n      expressions[0].expressions = defaultExpressions;\r\n    } else {\r\n      expressions.push(...defaultExpressions);\r\n    }\r\n\r\n    return expressions;\r\n  };\r\n\r\n  const onChange = value => {\r\n    if (props.searchFilter) {\r\n      props.searchFilter.setFilter(CLASS_NAME, value);\r\n    }\r\n    if (props.onChange) {\r\n      props.onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'cep',\r\n            text: 'CEP',\r\n          },\r\n          {\r\n            dataField: 'codigoMunicipio',\r\n            text: 'Código do Município',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressionsFull,\r\n        searchViewId: 'CepLocalidadeSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Cidade'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Cidade'}\r\n      type={InputType.INPUT_SEARCH}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepLocalidadeIS;\r\n","import { Basic } from 'summer';\r\nimport { CepLocalidade } from './cepLocalidade';\r\n\r\nexport interface CepBairro extends Basic {\r\n  bairro?: string;\r\n  localidade?: CepLocalidade;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.cepbairro';\r\n","import { Basic } from 'summer';\r\nimport { CepBairro } from './cepBairro';\r\nimport { CepLocalidade } from './cepLocalidade';\r\nimport { CepTitulo } from './cepTitulo';\r\nimport { CepUF } from './cepUF';\r\n\r\nexport interface Responsavel extends Basic {\r\n  cargo?: string;\r\n  cei?: string;\r\n  cep?: string;\r\n  cnpj?: string;\r\n  cpf?: string;\r\n  cepBairro?: CepBairro;\r\n  /** Campo referente a cidade */\r\n  cepLocalidade?: CepLocalidade;\r\n  /** tipo do logradouro ex: rua, avenida */\r\n  cepTitulo?: CepTitulo;\r\n  cepUf?: CepUF;\r\n  complemento?: string;\r\n  dataNascimento?: Date;\r\n  dataValidadeCRC?: Date;\r\n  email?: string;\r\n  /** Este campo utiliza o estadoCivilEnum */\r\n  estadoCivil?: string;\r\n  logradouro?: string;\r\n  numeroConselho?: string;\r\n  /** Este campo utiliza o nacionalidadeEnum */\r\n  nacionalidade?: string;\r\n  nome?: string;\r\n  numero?: string;\r\n  orgaoEmissor?: string;\r\n  rg?: string;\r\n  telefone?: string;\r\n  /** Este campo utiliza o responsavelTipoEnum */\r\n  tipo?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.responsavel';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/responsavel';\r\n\r\nconst ResponsavelIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'tipo',\r\n            text: 'Tipo',\r\n          },\r\n          {\r\n            dataField: 'telefone',\r\n            text: 'Telefone',\r\n          },\r\n          {\r\n            dataField: 'email',\r\n            text: 'E-mail',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'ResponsavelSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Responsável'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Responsável'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ResponsavelIS;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import { Basic } from 'summer';\r\nimport { CepBairro } from './cepBairro';\r\nimport { CepLocalidade } from './cepLocalidade';\r\nimport { CepTitulo } from './cepTitulo';\r\nimport { CepUF } from './cepUF';\r\n\r\nexport interface CepLogradouro extends Basic {\r\n  bairro?: CepBairro;\r\n  cep?: string;\r\n  complemento?: string;\r\n  localidade?: CepLocalidade;\r\n  nome?: string;\r\n  titulo?: CepTitulo;\r\n  uf?: CepUF;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.ceplogradouro';\r\n","import { Basic } from 'summer';\r\n\r\nexport interface CepTitulo extends Basic {\r\n  nome?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.ceptitulo';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { SearchFilterProps } from '../../../../hooks/useSearchFilter';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepBairro';\r\nimport { CLASS_NAME as CLASS_NAME_LOCALIDADE } from '../../../../models/dtos/ger/cepLocalidade';\r\nimport { CLASS_NAME as CLASS_NAME_UF } from '../../../../models/dtos/ger/cepUF';\r\n\r\nexport interface CepBairroISProps extends InputProps {\r\n  searchFilter?: SearchFilterProps;\r\n}\r\n\r\nconst CepBairroIS: FC<CepBairroISProps> = props => {\r\n  const searchExpressionsFull = defaultExpressions => {\r\n    let expressions = [];\r\n\r\n    if (props.searchFilter) {\r\n      const localidade = props.searchFilter.getFilter(CLASS_NAME_LOCALIDADE);\r\n      const uf = props.searchFilter.getFilter(CLASS_NAME_UF);\r\n      if (localidade) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'localidade.id',\r\n            value: localidade.id,\r\n          },\r\n        ];\r\n      } else if (uf) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'localidade.uf.id',\r\n            value: uf.id,\r\n          },\r\n        ];\r\n      }\r\n    }\r\n\r\n    if (expressions.length > 0) {\r\n      expressions[0].expressions = defaultExpressions;\r\n    } else {\r\n      expressions.push(...defaultExpressions);\r\n    }\r\n\r\n    return expressions;\r\n  };\r\n\r\n  const onChange = value => {\r\n    if (props.searchFilter) {\r\n      props.searchFilter.setFilter(CLASS_NAME, value);\r\n    }\r\n    if (props.onChange) {\r\n      props.onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'bairro',\r\n            text: 'Nome do Bairro',\r\n          },\r\n          {\r\n            dataField: 'localidade.nome',\r\n            text: 'Nome da cidade',\r\n          },\r\n          {\r\n            dataField: 'localidade.uf.sigla',\r\n            text: 'Sigla da UF',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressionsFull,\r\n        searchViewId: 'CepBairroSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Bairro'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Bairro'}\r\n      type={InputType.INPUT_SEARCH}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepBairroIS;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/cepTitulo';\r\n\r\nconst CepTituloIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'CepTituloSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Tipo'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Tipo de Logradouro'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepTituloIS;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CepManagerProps } from '../../../../hooks/useCepManager';\r\nimport { SearchFilterProps } from '../../../../hooks/useSearchFilter';\r\nimport { CLASS_NAME as CLASS_NAME_BAIRRO } from '../../../../models/dtos/ger/cepBairro';\r\nimport { CLASS_NAME as CLASS_NAME_LOCALIDADE } from '../../../../models/dtos/ger/cepLocalidade';\r\nimport { CepLogradouro, CLASS_NAME } from '../../../../models/dtos/ger/cepLogradouro';\r\nimport { CLASS_NAME as CLASS_NAME_UF } from '../../../../models/dtos/ger/cepUF';\r\n\r\nexport interface CepLogradouroProps {\r\n  cepManager?: CepManagerProps;\r\n  searchFilter?: SearchFilterProps;\r\n}\r\n\r\nconst CepLogradouroIS: FC<InputProps & CepLogradouroProps> = props => {\r\n  const searchExpressionsFull = defaultExpressions => {\r\n    let expressions = [];\r\n\r\n    if (props.searchFilter) {\r\n      const bairro = props.searchFilter.getFilter(CLASS_NAME_BAIRRO);\r\n      const localidade = props.searchFilter.getFilter(CLASS_NAME_LOCALIDADE);\r\n      const uf = props.searchFilter.getFilter(CLASS_NAME_UF);\r\n      if (bairro) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'bairro.id',\r\n            value: bairro.id,\r\n          },\r\n        ];\r\n      } else if (localidade) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'localidade.id',\r\n            value: localidade.id,\r\n          },\r\n        ];\r\n      } else if (uf) {\r\n        expressions = [\r\n          {\r\n            fieldName: 'uf.id',\r\n            value: uf.id,\r\n          },\r\n        ];\r\n      }\r\n    }\r\n\r\n    if (expressions.length > 0) {\r\n      expressions[0].expressions = defaultExpressions;\r\n    } else {\r\n      expressions.push(...defaultExpressions);\r\n    }\r\n\r\n    return expressions;\r\n  };\r\n\r\n  const onChangeHandle = (result: CepLogradouro) => {\r\n    if (props.cepManager) {\r\n      props.cepManager.manage(result);\r\n    }\r\n    if (props.searchFilter) {\r\n      props.searchFilter.setFilter(CLASS_NAME, result);\r\n    }\r\n    if (props.onChange) {\r\n      props.onChange(result);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      onChange={onChangeHandle}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'bairro.bairro',\r\n            text: 'Bairro',\r\n          },\r\n          {\r\n            dataField: 'cep',\r\n            text: 'CEP',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressionsFull,\r\n        searchViewId: 'CepLogradouroSearchView',\r\n      }}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CepLogradouroIS;\r\n","import { UseFormProps } from 'summer';\r\nimport { CepLogradouro } from '../models/dtos/ger/cepLogradouro';\r\n\r\nexport interface CepManagerOptions {\r\n  bairro?: boolean | string;\r\n  cep?: boolean | string;\r\n  localidade?: boolean | string;\r\n  nome?: boolean | string;\r\n  titulo?: boolean | string;\r\n  uf?: boolean | string;\r\n}\r\n\r\nexport interface CepManagerProps {\r\n  manage: (logradouro: CepLogradouro) => void;\r\n  reset: () => void;\r\n}\r\n\r\nconst useCepManager = (formProps: UseFormProps, props: CepManagerOptions): CepManagerProps => {\r\n  const getProp = (name: string): string => {\r\n    let result = null;\r\n\r\n    if (props[name] !== undefined) {\r\n      result = typeof props[name] === 'boolean' ? name : props[name];\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const fillForm = (logradouro: CepLogradouro) => {\r\n    const keyList = Object.keys(props);\r\n    keyList.forEach(key => {\r\n      const name = getProp(key);\r\n      if (name) {\r\n        formProps.setValue(name, logradouro[key]);\r\n      }\r\n    });\r\n  };\r\n\r\n  const clearForm = () => {\r\n    fillForm({\r\n      bairro: null,\r\n      cep: null,\r\n      localidade: null,\r\n      nome: null,\r\n      titulo: null,\r\n      uf: null,\r\n    });\r\n  };\r\n\r\n  return {\r\n    manage: (logradouro: CepLogradouro) => {\r\n      if (logradouro) {\r\n        fillForm(logradouro);\r\n      } else {\r\n        clearForm();\r\n      }\r\n    },\r\n    reset: () => clearForm(),\r\n  };\r\n};\r\n\r\nexport default useCepManager;\r\n","import { BasicEnum } from '../models/enumerated/basicEnum';\r\n\r\ninterface EnumWithExtraFields extends BasicEnum {\r\n  extraFields?: any;\r\n}\r\n\r\nconst EnumUtil = {\r\n  contains: (list: EnumWithExtraFields[], search: EnumWithExtraFields | string, extraField: string = null) =>\r\n    EnumUtil.find(list, search, extraField) !== undefined,\r\n  find: (list: EnumWithExtraFields[], search: EnumWithExtraFields | string, extraField: string = null) => {\r\n    let result;\r\n\r\n    if (search) {\r\n      result = list.find(item => (extraField ? item.extraFields[extraField] : item.value) === (typeof search === 'object' ? search.value : search));\r\n    }\r\n\r\n    return result;\r\n  },\r\n};\r\n\r\nexport default EnumUtil;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _objectSpread2 from \"@babel/runtime/helpers/esm/objectSpread\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Fade from './Fade';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  closeClassName: PropTypes.string,\n  closeAriaLabel: PropTypes.string,\n  cssModule: PropTypes.object,\n  color: PropTypes.string,\n  fade: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  tag: tagPropType,\n  transition: PropTypes.shape(Fade.propTypes),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  color: 'success',\n  isOpen: true,\n  tag: 'div',\n  closeAriaLabel: 'Close',\n  fade: true,\n  transition: _objectSpread2({}, Fade.defaultProps, {\n    unmountOnExit: true\n  })\n};\n\nfunction Alert(props) {\n  var className = props.className,\n      closeClassName = props.closeClassName,\n      closeAriaLabel = props.closeAriaLabel,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      color = props.color,\n      isOpen = props.isOpen,\n      toggle = props.toggle,\n      children = props.children,\n      transition = props.transition,\n      fade = props.fade,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"closeClassName\", \"closeAriaLabel\", \"cssModule\", \"tag\", \"color\", \"isOpen\", \"toggle\", \"children\", \"transition\", \"fade\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'alert', \"alert-\" + color, {\n    'alert-dismissible': toggle\n  }), cssModule);\n  var closeClasses = mapToCssModules(classNames('close', closeClassName), cssModule);\n\n  var alertTransition = _objectSpread2({}, Fade.defaultProps, {}, transition, {\n    baseClass: fade ? transition.baseClass : '',\n    timeout: fade ? transition.timeout : 0\n  });\n\n  return React.createElement(Fade, _extends({}, attributes, alertTransition, {\n    tag: Tag,\n    className: classes,\n    in: isOpen,\n    role: \"alert\",\n    innerRef: innerRef\n  }), toggle ? React.createElement(\"button\", {\n    type: \"button\",\n    className: closeClasses,\n    \"aria-label\": closeAriaLabel,\n    onClick: toggle\n  }, React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\")) : null, children);\n}\n\nAlert.propTypes = propTypes;\nAlert.defaultProps = defaultProps;\nexport default Alert;","import { AxiosInstance } from 'axios';\r\nimport { AxiosParam, create, send } from 'summer';\r\nimport { Cfop } from '../models/dtos/ger/cfop';\r\nimport { Especie } from '../models/dtos/ger/especie';\r\nimport { ConfigLivroMLF } from '../models/dtos/mlf/configLivroMLF';\r\nimport { ConfigReinf } from '../models/dtos/mlf/configReinf';\r\nimport { ImportarIntegracaoFiscalContabilParam } from '../models/dtos/mlf/importarIntegracaoFiscalContabilParam';\r\nimport { RefazerLancamentosContabeisParam } from '../models/dtos/mlf/refazerLancamentosContabeisParam';\r\nimport { RefazerLancamentosReinfParam } from '../models/dtos/mlf/refazerLancamentosReinfParam';\r\n\r\nfunction getService(): AxiosInstance {\r\n  return create('/mlf');\r\n}\r\n\r\nexport function findEspecieByModelo(modelo: string, isImportacao: boolean, param: AxiosParam<Especie>) {\r\n  send(\r\n    getService().post<Especie>('/findEspecieByModelo', { modelo, isImportacao }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function findReinfCFOPConfig(idCFOP: number, param: AxiosParam<Cfop>) {\r\n  send(getService().get<Cfop>(`/findReinfCFOPConfig/${idCFOP}`), param);\r\n}\r\n\r\nexport function getLivroFolhaMLF(idGerEmpresa: number, param: AxiosParam<ConfigLivroMLF>) {\r\n  send(getService().get<ConfigLivroMLF>(`/getLivroFolhaMLF/${idGerEmpresa}`), param);\r\n}\r\n\r\nexport function refazerLancamentosContabeis(refazerLancamentosContabeisParam: RefazerLancamentosContabeisParam, param: AxiosParam<any>) {\r\n  send(getService().post<RefazerLancamentosContabeisParam>('/refazerLancamentosContabeis', refazerLancamentosContabeisParam), param);\r\n}\r\n\r\nexport function refazerLancamentosReinf(refazerLancamentosReinfParam: RefazerLancamentosReinfParam, param: AxiosParam<any>) {\r\n  send(getService().post<RefazerLancamentosReinfParam>('/refazerLancamentosReinf', refazerLancamentosReinfParam), param);\r\n}\r\n\r\nexport function findConfigReinfEmpresa(idEmpresaMlf: number, param: AxiosParam<any>) {\r\n  send(getService().get<ConfigReinf>(`/findConfigReinfEmpresa/${idEmpresaMlf}`), param);\r\n}\r\n\r\nexport function importarIntegracaoFiscalContabil(importarParam: ImportarIntegracaoFiscalContabilParam, param: AxiosParam<any>) {\r\n  send(getService().post<any>('/importarIntegracaoFiscalContabil', importarParam), param);\r\n}\r\n\r\nexport function validarIE(inscricaoEstadual: string, unidadeFederacao: string, param: AxiosParam<boolean>) {\r\n  send(\r\n    getService().post<boolean>('/validarIE', { inscricaoEstadual, unidadeFederacao }),\r\n    param\r\n  );\r\n}\r\n","const tiposTelefone = {\r\n  tipoTelefoneCelular: 'Celular',\r\n  tipoTelefoneComercial: 'Comercial',\r\n  tipoTelefoneFax: 'Fax',\r\n  tipoTelefonePrincipal: 'Principal',\r\n  tipoTelefoneResidencial: 'Residencial',\r\n};\r\n\r\nexport function tipoTelefoneSelection(tipoTelefone: any): any {\r\n  const resultado = [];\r\n  // tslint:disable-next-line:forin\r\n  for (const campo in tiposTelefone) {\r\n    // tslint:disable-next-line:no-unused-expression\r\n    tipoTelefone[campo] && resultado.push(tiposTelefone[campo]);\r\n  }\r\n  return resultado.join(', ');\r\n}\r\n\r\nexport function tipoTelefoneFormatter(cell, row) {\r\n  return tipoTelefoneSelection(row);\r\n}\r\n","export const LUCRO_REAL = { value: 'lucroReal', label: 'Lucro Real' };\r\nexport const LUCRO_REAL_ARBITRADO = { value: 'lucroRealArbitrado', label: 'Lucro Real/Arbitrado' };\r\nexport const LUCRO_PRESUMIDO_REAL = { value: 'lucroPresumidoReal', label: 'Lucro Presumido/Real' };\r\nexport const LUCRO_PRESUMIDO_REAL_ARBITRADO = { value: 'lucroPresumidoRealArbitrado', label: 'Lucro Presumido/Real/Arbitrado' };\r\nexport const LUCRO_PRESUMIDO = { value: 'lucroPresumido', label: 'Lucro Presumido' };\r\nexport const LUCRO_ARBITRADO = { value: 'lucroArbitrado', label: 'Lucro Arbitrado' };\r\nexport const LUCRO_PRESUMIDO_ARBITRADO = { value: 'lucroPresumidoArbitrado', label: 'Lucro Presumido/Arbitrado' };\r\nexport const IMUNE = { value: 'imune', label: 'Imune do IRPJ' };\r\nexport const ISENTO = { value: 'isento', label: 'Isenta do IRPJ' };\r\nexport const SIMPLES_NACIONAL = { value: 'simplesNacional', label: 'Simples Nacional' };\r\n\r\nexport const TIPO_TRIBUTACAO_ENUM_VALUES = [\r\n  IMUNE,\r\n  ISENTO,\r\n  LUCRO_ARBITRADO,\r\n  LUCRO_PRESUMIDO,\r\n  LUCRO_PRESUMIDO_ARBITRADO,\r\n  LUCRO_PRESUMIDO_REAL,\r\n  LUCRO_PRESUMIDO_REAL_ARBITRADO,\r\n  LUCRO_REAL,\r\n  LUCRO_REAL_ARBITRADO,\r\n  SIMPLES_NACIONAL,\r\n];\r\n\r\nexport const AUTOMATIZACAO_EMPRESA_VALUES = [LUCRO_REAL, LUCRO_PRESUMIDO, ISENTO, IMUNE, SIMPLES_NACIONAL];\r\n\r\nexport const TRIBUTACAO_LUCRO_REAL_ENUM_VALUES = [LUCRO_REAL, LUCRO_REAL_ARBITRADO, LUCRO_PRESUMIDO_REAL_ARBITRADO];\r\n","import { Basic } from 'summer';\r\nimport { GrupoEmpresaConfig } from './grupoEmpresaConfig';\r\n\r\nexport interface GrupoEmpresa extends Basic {\r\n  codigo?: number;\r\n  descricao?: string;\r\n  grupoEmpresaRaiz?: GrupoEmpresa;\r\n  grupoEmpresaPai?: GrupoEmpresa;\r\n  gruposEmpresasFilhos?: GrupoEmpresa[];\r\n  grupoEmpresaConfig?: GrupoEmpresaConfig;\r\n  label?: string;\r\n  children?: GrupoEmpresa[];\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.grupoempresa';\r\n","import { EmpresaMCG } from '../mcg/empresaMCG';\r\nimport { EmpresaMCP } from '../mcp/empresaMCP';\r\nimport { EmpresaMFP } from '../mfp/empresaMFP';\r\nimport { EmpresaMLF } from '../mlf/empresaMLF';\r\nimport { EmpresaEmail } from './empresaEmail';\r\nimport { EmpresaTelefone } from './empresaTelefone';\r\nimport { Endereco } from './endereco';\r\nimport { GrupoEmpresa } from './grupoEmpresa';\r\nimport { Pessoa } from './pessoa';\r\nimport { Responsavel } from './responsavel';\r\n\r\nexport interface Empresa extends Pessoa {\r\n  acordoIsencaoMulta?: boolean;\r\n  /** Este campo utiliza o apropriacaoCreditoEnum */\r\n  apropriacaoCredito?: string;\r\n  caepf?: string;\r\n  centralizar?: boolean;\r\n  /** Este campo utiliza o classificacaoTributariaEnum */\r\n  classificacaoTributaria?: string;\r\n  cnaef?: string;\r\n  cnaefDesmembramento?: string;\r\n  codigo?: number;\r\n  codigoAcessoSimplesNacional?: string;\r\n  /** Este campo utiliza o contribuicaoPrevidenciariaProdutorRuralEnum */\r\n  contribPrevidenciariaProdutorRural?: string;\r\n  criarGrupoEmpPersistir?: boolean;\r\n  dataEmissaoCertificado?: string;\r\n  dataEncerramentoAtividade?: string;\r\n  dataInicioAtividade?: string;\r\n  dataProtocoloRenovacao?: string;\r\n  dataPublicacaoDiarioOficial?: string;\r\n  dataRegistro?: string;\r\n  dataVencimentoCertificado?: string;\r\n  dtInicioPrestServCont?: string;\r\n  dtInicioServAdm?: string;\r\n  dtSimplesEmpresarial?: string;\r\n  dtVencimentoAlvaraLocalizacao?: string;\r\n  /** Este campo utiliza o enquadramentoSimplesNacionalEnum */\r\n  enquadramentoSimplesNacional?: string;\r\n  emails?: EmpresaEmail[];\r\n  empresaMCG?: EmpresaMCG;\r\n  empresaMCP?: EmpresaMCP;\r\n  empresaMFP?: EmpresaMFP;\r\n  empresaMLF?: EmpresaMLF;\r\n  enderecos?: Endereco[];\r\n  fator13?: number;\r\n  fatorMes?: number;\r\n  /** Este campo utiliza o tipoTributacaoRealFCONTEnum */\r\n  forTribFCONT?: string;\r\n  grupoEmpresa?: GrupoEmpresa;\r\n  grupoEmpresaRaiz?: GrupoEmpresa;\r\n  idEmpresaApi?: string;\r\n  idGrupoEmpresaRaiz?: number;\r\n  inativa?: boolean;\r\n  /** Este campo utiliza o incidenciaTributariaEnum */\r\n  incidenciaTributaria?: string;\r\n  /** Este campo utiliza o indicativoSubstituicaoContribuicaoEnum */\r\n  indicadorContribuicaoPatronal?: string;\r\n  /** Este campo utiliza o indicativoContribuicaoEnum */\r\n  indicadorContribuicaoSubstituida?: string;\r\n  indicadorEmpresaGrandePorte?: boolean;\r\n  indicadorNire?: boolean;\r\n  matriz?: Empresa;\r\n  mei?: boolean;\r\n  ministerioLeiCertificado?: string;\r\n  /** Este campo utiliza o naturezaJuridicaEnum */\r\n  naturezaJuridica?: string;\r\n  nroLivro?: string;\r\n  numeroCertificado?: string;\r\n  numeroPaginaDiarioOficial?: number;\r\n  numeroProtocoloRenovacao?: string;\r\n  numIdentOrgao?: string;\r\n  orgaoRegistro?: string;\r\n  percentualReducaoContribuicao?: number;\r\n  /** Este campo utiliza o qualificacaoPJEnum */\r\n  qualificacaoPJ?: string;\r\n  responsavel?: Responsavel;\r\n  responsavelContador?: Responsavel;\r\n  suframa?: string;\r\n  telefones?: EmpresaTelefone[];\r\n  /** Este campo utiliza o tipoCAEPFEnum */\r\n  tipoCaepf?: string;\r\n  /** Este campo utiliza o tipoContribuicaoEnum */\r\n  tipoContribuicao?: string;\r\n  tipoEmpresaAtividadeImobiliaria?: boolean;\r\n  tipoEmpresaComercio?: boolean;\r\n  tipoEmpresaCondominio?: boolean;\r\n  tipoEmpresaConstrutora?: boolean;\r\n  tipoEmpresaIndustria?: boolean;\r\n  tipoEmpresaPessoaFisica?: boolean;\r\n  tipoEmpresaPrestacaoServico?: boolean;\r\n  tipoEmpresaProdutorRural?: boolean;\r\n  tipoEmpresaTerceiroSetor?: boolean;\r\n  /** Este campo utiliza o tipoTributacaoEnum */\r\n  tipoTributacao?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.empresa';\r\n","const tiposEndereco = {\r\n  tipoEnderecoCobranca: 'Cobrança',\r\n  tipoEnderecoComercial: 'Comercial',\r\n  tipoEnderecoPrincipal: 'Principal',\r\n  tipoEnderecoResidencial: 'Residencial',\r\n};\r\n\r\nexport function tipoEnderecoSelection(tipoEndereco: any): any {\r\n  const resultado = [];\r\n  // tslint:disable-next-line:forin\r\n  for (const campo in tiposEndereco) {\r\n    // tslint:disable-next-line:no-unused-expression\r\n    tipoEndereco[campo] && resultado.push(tiposEndereco[campo]);\r\n  }\r\n  return resultado.join(', ');\r\n}\r\n\r\nexport function tipoEnderecoFormatter(cell, row) {\r\n  return tipoEnderecoSelection(row);\r\n}\r\n","export const TRIMESTRAL = { label: 'Trimestral', value: 'trimestral' };\r\nexport const ANUAL = { label: 'Anual', value: 'anual' };\r\n\r\nexport const FORMA_APURACAO_ENUM_VALUES = [TRIMESTRAL, ANUAL];\r\n","export const CONTRIBUINTE_INDIVIDUAL = { label: 'Contribuinte Individual', value: 'CONTRIBUINTE_INDIVIDUAL' };\r\nexport const PRODUCAO_RURAL = { label: 'Produtor Rural', value: 'PRODUCAO_RURAL' };\r\nexport const SEGURADO_ESPECIAL = { label: 'Segurado Especial', value: 'SEGURADO_ESPECIAL' };\r\n\r\nexport const TIPO_CAEPF_ENUM_VALUES = [CONTRIBUINTE_INDIVIDUAL, PRODUCAO_RURAL, SEGURADO_ESPECIAL];\r\n","export const REAL = { label: 'Real', value: 'real' };\r\nexport const REAL_ARBITRADO = { label: 'Real Arbitrado', value: 'realArbitrado' };\r\nexport const REAL_TRIMESTRE = { label: 'Real Presumido (Trimestre)', value: 'realTrimestre' };\r\nexport const REAL_ARBITRADO_TRIMESTRE = { label: 'Real Presumido Arbitrado (Trimestre)', value: 'realArbitradoTrimestre' };\r\n\r\nexport const TIPO_TRIBUTACAO_REAL_FCONT_ENUM_VALUES = [REAL, REAL_ARBITRADO, REAL_TRIMESTRE, REAL_ARBITRADO_TRIMESTRE];\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/grupoEmpresa';\r\n\r\nconst GrupoEmpresaIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'GrupoEmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Grupo Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Grupo da Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default GrupoEmpresaIS;\r\n"],"sourceRoot":""}
{"version":3,"sources":["models/dtos/mho/contabilizacaoEventoMHO.ts","views/pages/mho/contabilizacaoEventoMHO/ContabilizacaoEventoEditView.tsx","views/components/mcg/planoContaIS/PlanoContaIS.tsx","models/dtos/ger/planoConta.ts","models/dtos/ger/centroCusto.ts","views/components/mcg/centroCustoIS/CentroCustoIS.tsx","models/dtos/ger/historico.ts","models/dtos/mho/empresaMHO.ts","views/components/mho/empresaMHOIS/EmpresaMHOIS.tsx","models/dtos/mho/eventoMHO.ts","views/components/mcg/historicoIS/HistoricoIS.tsx","views/components/mho/eventoMHOIS/EventoMHOIS.tsx"],"names":["__webpack_require__","d","__webpack_exports__","CLASS_NAME","ContabilizacaoEventoEditView","props","selectedItem","getSelectedItem","formProps","useForm","defaultValues","mode","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_5__","title","wikiId","editViewProps","dtoClassName","validateExtras","erros","getValues","contaDebito","analitica","push","contaCredito","historicoPadrao","historicoVariavel","_components_mho_empresaMHOIS_EmpresaMHOIS__WEBPACK_IMPORTED_MODULE_10__","Object","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","validation","required","id","_components_mho_eventoMHOIS_EventoMHOIS__WEBPACK_IMPORTED_MODULE_11__","isPrependLabel","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","_components_mcg_planoContaIS_PlanoContaIS__WEBPACK_IMPORTED_MODULE_9__","label","disabled","empresaMHO","_components_mcg_centroCustoIS_CentroCustoIS__WEBPACK_IMPORTED_MODULE_7__","_components_mcg_historicoIS_HistoricoIS__WEBPACK_IMPORTED_MODULE_8__","placeholder","type","InputType","TEXT_AREA","PlanoContaIS","globalReducer","useSelector","state","summer__WEBPACK_IMPORTED_MODULE_3__","assign","searchViewProps","filtroContaResultado","hideExtraFields","useDefaultSelectRow","inputSearchProps","columns","dataField","text","searchExpressions","expressions","alias","conditionalGroup","fieldName","value","sintetica","idGrupoPlanoConta","globalParameter","grupoPlanoConta","forEach","filtro","searchViewId","INPUT_SEARCH","CentroCustoIS","summer__WEBPACK_IMPORTED_MODULE_2__","EmpresaMHOIS","HistoricoIS","EventoMHOIS"],"mappings":"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","file":"static/js/73.d00f7cc4.chunk.js","sourcesContent":["import { Basic } from 'summer';\r\nimport { CentroCusto } from '../ger/centroCusto';\r\nimport { Historico } from '../ger/historico';\r\nimport { PlanoConta } from '../ger/planoConta';\r\nimport { EmpresaMHO } from './empresaMHO';\r\nimport { EventoMHO } from './eventoMHO';\r\n\r\nexport interface ContabilizacaoEventoMHO extends Basic {\r\n  centroCustoCredito?: CentroCusto;\r\n  centroCustoDebito?: CentroCusto;\r\n  contaCredito?: PlanoConta;\r\n  contaDebito?: PlanoConta;\r\n  empresaMHO?: EmpresaMHO;\r\n  eventoMHO?: EventoMHO;\r\n  historicoPadrao?: Historico;\r\n  historicoVariavel?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mho.model.dto.contabilizacaoeventomho';\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { Accordion, AccordionItem, EditForm, EditViewProps, getSelectedItem, InputGroupInline, InputType, WindowComponent } from 'summer';\r\nimport { CLASS_NAME, ContabilizacaoEventoMHO } from '../../../../models/dtos/mho/contabilizacaoEventoMHO';\r\nimport CentroCustoIS from '../../../components/mcg/centroCustoIS/CentroCustoIS';\r\nimport HistoricoIS from '../../../components/mcg/historicoIS/HistoricoIS';\r\nimport PlanoContaIS from '../../../components/mcg/planoContaIS/PlanoContaIS';\r\nimport EmpresaMHOIS from '../../../components/mho/empresaMHOIS/EmpresaMHOIS';\r\nimport EventoMHOIS from '../../../components/mho/eventoMHOIS/EventoMHOIS';\r\n\r\ninterface ContabilizacaoEventoMHOProps extends EditViewProps<ContabilizacaoEventoMHO> {}\r\n\r\nconst ContabilizacaoEventoEditView: React.FC<ContabilizacaoEventoMHOProps & RouteComponentProps> = props => {\r\n  const selectedItem = getSelectedItem(props);\r\n  const formProps = useForm<ContabilizacaoEventoMHO>({ defaultValues: selectedItem, mode: 'onBlur' });\r\n\r\n  const validateExtras = () => {\r\n    const erros = [];\r\n\r\n    if (formProps.getValues().contaDebito && !formProps.getValues().contaDebito.analitica) {\r\n      erros.push('Campo Conta -> Débito deve ser analítica');\r\n    }\r\n\r\n    if (formProps.getValues().contaCredito && !formProps.getValues().contaCredito.analitica) {\r\n      erros.push('Campo Conta -> Crédito deve ser analítica');\r\n    }\r\n\r\n    if (!formProps.getValues().contaCredito && !formProps.getValues().contaDebito) {\r\n      erros.push('Pelo menos uma conta, débito ou crédito, deve ser selecionada.');\r\n    }\r\n\r\n    if (!formProps.getValues().historicoPadrao && !formProps.getValues().historicoVariavel) {\r\n      erros.push('Pelo menos um histórico, padrão ou variável, deve ser definido.');\r\n    }\r\n\r\n    return erros;\r\n  };\r\n\r\n  // TODO implementar filtros necessários na consulta do Plano de Conta\r\n\r\n  return (\r\n    <WindowComponent title=\"Manutenção de Contabilização de Eventos\" wikiId={2611}>\r\n      <EditForm formProps={formProps} editViewProps={props} dtoClassName={CLASS_NAME} validateExtras={validateExtras}>\r\n        <EmpresaMHOIS formProps={{ ...formProps, validation: { required: true } }} id=\"empresaMHO\" />\r\n        <EventoMHOIS formProps={{ ...formProps, validation: { required: true } }} id=\"eventoMHO\" isPrependLabel={true} />\r\n        <Accordion>\r\n          <AccordionItem title=\"Conta\">\r\n            <Row>\r\n              <Col>\r\n                <PlanoContaIS id=\"contaDebito\" formProps={formProps} label=\"Débito\" disabled={!formProps.getValues().empresaMHO} />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <PlanoContaIS id=\"contaCredito\" formProps={formProps} label=\"Crédito\" disabled={!formProps.getValues().empresaMHO} />\r\n              </Col>\r\n            </Row>\r\n          </AccordionItem>\r\n          <AccordionItem title=\"Centro de Custo\">\r\n            <Row>\r\n              <Col>\r\n                <CentroCustoIS id=\"centroCustoDebito\" formProps={formProps} label=\"Débito\" disabled={!formProps.getValues().empresaMHO} />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <CentroCustoIS id=\"centroCustoCredito\" formProps={formProps} label=\"Crédito\" disabled={!formProps.getValues().empresaMHO} />\r\n              </Col>\r\n            </Row>\r\n          </AccordionItem>\r\n          <AccordionItem title=\"Histórico\">\r\n            <Row>\r\n              <Col>\r\n                <HistoricoIS\r\n                  id=\"historicoPadrao\"\r\n                  formProps={formProps}\r\n                  label=\"Padrão\"\r\n                  placeholder=\"Informe o Histórico Padrão\"\r\n                  disabled={!formProps.getValues().empresaMHO}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <InputGroupInline id=\"historicoVariavel\" label=\"Variável\" formProps={formProps} isPrependLabel={true} type={InputType.TEXT_AREA} />\r\n              </Col>\r\n            </Row>\r\n          </AccordionItem>\r\n        </Accordion>\r\n      </EditForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default ContabilizacaoEventoEditView;\r\n","import React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/planoConta';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\nexport interface PlanoContaInputSearchProps extends InputProps {\r\n  analitica?: boolean;\r\n  sintetica?: boolean;\r\n  idGrupoPlanoConta?: number;\r\n  filtroContaResultado?: SearchExpression[];\r\n}\r\n\r\nconst PlanoContaIS: FC<PlanoContaInputSearchProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  function getSearchExpression(): SearchExpression[] {\r\n    let expressions = [];\r\n    if (props.analitica) {\r\n      expressions = [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'analitica',\r\n          value: true,\r\n        },\r\n      ];\r\n    }\r\n    if (props.sintetica) {\r\n      expressions = [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'analitica',\r\n          value: false,\r\n        },\r\n      ];\r\n    }\r\n\r\n    expressions.push({\r\n      alias: 'g',\r\n      conditionalGroup: 'g_',\r\n      fieldName: 'grupoPlanoConta.id',\r\n      value: props.idGrupoPlanoConta || globalReducer.globalParameter.grupoPlanoConta.id,\r\n    });\r\n\r\n    if (props.filtroContaResultado) {\r\n      props.filtroContaResultado.forEach(filtro => {\r\n        expressions.push(filtro);\r\n      });\r\n    }\r\n\r\n    return expressions;\r\n  }\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      searchViewProps={{\r\n        ...props.searchViewProps,\r\n        filtroContaResultado: props.filtroContaResultado,\r\n        hideExtraFields: true,\r\n        useDefaultSelectRow: true,\r\n      }}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'conta',\r\n            text: 'Conta',\r\n          },\r\n          {\r\n            dataField: 'analitica',\r\n            text: 'Analítica',\r\n          },\r\n          {\r\n            dataField: 'codigoReduzido',\r\n            text: 'C.R.',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressions: getSearchExpression,\r\n        searchViewId: 'PlanoContaSearchView',\r\n      }} // TODO Implementar as regras do IS\r\n      label={props.label ? props.label : 'Plano de Contas'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Plano de Contas'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PlanoContaIS;\r\n","import { Basic } from 'summer';\r\nimport { PlanoContaMCG } from '../mcg/planoContaMCG';\r\nimport { SaldoAnterior } from '../mcg/saldoAnterior';\r\nimport { PlanoContaMCP } from '../mcp/planoContaMCP';\r\nimport { GrupoPlanoConta } from './grupoPlanoConta';\r\n\r\nexport interface PlanoConta extends Basic {\r\n  analitica?: boolean;\r\n  conta?: string;\r\n  codigoReduzido?: number;\r\n  descricao?: string;\r\n  grupoPlanoConta?: GrupoPlanoConta;\r\n  mcgPlanoConta?: PlanoContaMCG;\r\n  mcpPlanoConta?: PlanoContaMCP;\r\n  saldoAnterior?: SaldoAnterior;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.planoconta';\r\n","import { Basic } from 'summer';\r\nimport { Bem } from '../mcp/bem';\r\nimport { GrupoCentroCusto } from './grupoCentroCusto';\r\n\r\nexport interface CentroCusto extends Basic {\r\n  codigo?: string;\r\n  codigoReduzido?: number;\r\n  descricao?: string;\r\n  analitica?: boolean;\r\n  grupoCentroCusto?: GrupoCentroCusto;\r\n  bem?: Bem;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.centrocusto';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/centroCusto';\r\n\r\nconst CentroCustoIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'CentroCustoSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Centro de Custo'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Centro de Custo'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CentroCustoIS;\r\n","import { Basic } from 'summer';\r\nimport { GrupoHistorico } from './grupoHistorico';\r\n\r\nexport interface Historico extends Basic {\r\n  codigo?: number;\r\n  descricao?: string;\r\n  grupoHistorico?: GrupoHistorico;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mcg.model.dto.historico';\r\n","import { Basic } from 'summer';\r\nimport { Empresa } from '../ger/empresa';\r\nimport { Banco } from '../mfp/banco';\r\nimport { ConfiguracaoBoletoMHO } from './configuracaoBoletoMHO';\r\nimport { EmpresaEventoFixoMHO } from './empresaEventoFixoMHO';\r\n\r\nexport interface EmpresaMHO extends Basic {\r\n  agenciaDebitoAutomatico?: string;\r\n  bancoInstituicaoDebitoAutomatico?: Banco;\r\n  configuracaoBoletoMHO: ConfiguracaoBoletoMHO;\r\n  contaCorrenteDebitoAutomatico?: string;\r\n  dentroMes?: boolean;\r\n  diaVencimento?: number;\r\n  digitoAgenciaDebitoAutomatico?: string;\r\n  dvContaCorrenteDebitoAutomatico?: string;\r\n  empresa?: Empresa;\r\n  empresaEventosFixos?: EmpresaEventoFixoMHO[];\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mho.model.dto.empresamho';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mho/empresaMHO';\r\n\r\nconst EmpresaMHOIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'empresa.codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'empresa.razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'diaVencimento',\r\n            text: 'Dia de Vencimento',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'EmpresaMHOSearchView',\r\n      }}\r\n      label=\"Empresa\"\r\n      placeholder=\"Informe a Empresa\"\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\nexport default EmpresaMHOIS;\r\n","import { Basic } from 'summer';\r\n\r\nexport interface EventoMHO extends Basic {\r\n  codigo?: number;\r\n  descricao?: string;\r\n  tipo?: string;\r\n  valor?: number;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mho.model.dto.eventomho';\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/historico';\r\n\r\nconst HistoricoIS: FC<InputProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      formProps={{ ...props.formProps }}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchViewId: 'HistoricoSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Histórico'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Histórico'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HistoricoIS;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mho/eventoMHO';\r\n\r\nconst EventoMHOIS: FC<InputProps> = props => {\r\n  function getSearchExpression(): SearchExpression[] {\r\n    return [\r\n      {\r\n        alias: 'c',\r\n        conditionalGroup: 'c_',\r\n        fieldName: 'finalidade',\r\n        value: 'manual',\r\n      },\r\n    ];\r\n  }\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n          {\r\n            dataField: 'tipo',\r\n            text: 'Tipo',\r\n          },\r\n          {\r\n            dataField: 'valor',\r\n            text: 'Valor',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressions: getSearchExpression,\r\n        searchViewId: 'EventoMHOSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Evento'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Evento'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\nexport default EventoMHOIS;\r\n"],"sourceRoot":""}
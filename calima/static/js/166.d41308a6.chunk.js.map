{"version":3,"sources":["views/pages/mfp/report/contratosExperienciaPendentes/contratosExperienciaPendentesRV.ts","views/pages/mfp/report/contratosExperienciaPendentes/ContratoExperienciaPendeteReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","dependencies/empresaMFPDependency.ts"],"names":["DEFAULT_VALUES","Object","objectSpread2","getDefaultReportBasicValues","gerarCabecalhoPadraoAdministradora","DEFAULT_OPTIONS","getDefaultReportViewOptions","REFERENCE","value","exibirConfiguracaoDadosEmpresa","ContratoExperienciaPendeteReportView","props","globalReducer","useSelector","state","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","objectWithoutProperties","react_default","a","createElement","summer_esm","title","useGlobalParameter","globalParameter","dependencies","hasEmpresa","hasEmpresaMFP","wikiId","ReportForm","assign","localStorageKey","routeProps","reportBasicValues","reportViewOptions","extraConfigOpened","result","empresa","__webpack_require__","d","__webpack_exports__","NATUREZA","label","SALDO_REPORT_ENUM","EmpresaIS","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","isPrependLabel","inputSearchProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","placeholder","type","InputType","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","empresasSelecionadas","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","virtualization","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","errors","getValues","register","setValue","triggerValidation","handleCancel","validateExtras","currentItem","currentValues","parentObject","id","validation","required","EnvioEmail","Fragment","sort","detailView","keyField","propName","Row","className","Col","CustomInput","name","innerRef","maxLength","TEXT_AREA","ReportInputs","_useState","useState","_useState2","slicedToArray","activeTab","setActiveTab","useEffect","_props$reportViewOpti","printingTypes","resetObject","length","idGerEmpresa","current","currentMomentDate","endDate","DATE","dtInicial","formatDate","toDate","DATES","dtFinal","endOf","referenciaInicial","format","REF_PATTERN","REFERENCES","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dtInicialRequired","dateComponent","datesComponent","dtFinalRequired","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","NUMBER","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","inputProps","disabled","gerarPorEmpresas","style","marginBottom","size","selectProps","isMulti","segmentacaoFolhaComponent","exibirSegmentacaoFolha","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","exibirImprimirValoresColoridos","inputDropDownProps","optionsProvider","isClearable","DROP_DOWN","firstOpen","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","hidden","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","erros","params","message","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history","empresaMFP"],"mappings":"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","file":"static/js/166.d41308a6.chunk.js","sourcesContent":["import { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { VinculoNotificacaoDetalhe } from '../../../../../models/dtos/mfp/vinculoNotificacaoDetalhe';\r\n\r\nexport interface ContratosExperienciaPendentesRV extends ReportBasicValues {\r\n  detalhe?: VinculoNotificacaoDetalhe;\r\n  geradoPorScheduler?: boolean;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'contratosexperienciapendentesrv';\r\nexport const REPORT_EVENT: string = 'printRelacaoContratosExperienciaPendentes';\r\nexport const REPORT_TITLE: string = 'Contratos de Experiência Pendentes';\r\n","import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { REFERENCE, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMFP } from '../../../../../dependencies/empresaMFPDependency';\r\nimport { getDefaultReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { CLASS_KEY, ContratosExperienciaPendentesRV, REPORT_EVENT, REPORT_TITLE } from './contratosExperienciaPendentesRV';\r\n\r\nconst DEFAULT_VALUES: ContratosExperienciaPendentesRV = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n  gerarCabecalhoPadraoAdministradora: true,\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT, REFERENCE.value),\r\n  exibirConfiguracaoDadosEmpresa: false,\r\n};\r\n\r\nconst ContratoExperienciaPendeteReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const { handleSubmit, ...formProps } = useForm<ContratosExperienciaPendentesRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Contratos de Experiência Pendentes\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMFP(globalReducer.globalParameter)]}\r\n      wikiId={1973}\r\n    >\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n        extraConfigOpened={true}\r\n      />\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default ContratoExperienciaPendeteReportView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMFP(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMFP) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o Módulo Folha de Pagamento. Para configurá-la acesse Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["views/pages/mlf/importarIntegracaoFiscal/ImportarIntegracaoFiscalContabilProcessView.tsx","dependencies/empresaDependency.ts","views/components/ger/empresaIS/EmpresaIS.tsx","dependencies/empresaMLFDependency.ts","services/mlf.service.ts"],"names":["ImportarIntegracaoFiscalContabilProcessView","props","globalReducer","useSelector","state","formProps","useForm","mode","dispatch","useDispatch","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_7__","title","useGlobalParameter","globalParameter","dependencies","hasEmpresa","hasEmpresaMLF","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","_components_ger_empresaIS_EmpresaIS__WEBPACK_IMPORTED_MODULE_11__","label","placeholder","id","isPrependLabel","Object","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","validation","required","inputSearchProps","size","empresa","codigo","razaoSocial","handleSubmit","data","empresaDestino","progressActions","showProgress","animated","now","importarIntegracaoFiscalContabil","errorFunction","mensagem","showToast","ERROR","hideProgress","thenFunction","params","message","type","AlertType","INFORMATION","alertManager","emit","ACTION_EVENTS","SHOW","handleClose","goBack","dispatchClose","history","onClose","result","__webpack_require__","d","__webpack_exports__","EmpresaIS","summer__WEBPACK_IMPORTED_MODULE_2__","assign","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","InputType","INPUT_SEARCH","empresaMLF","findEspecieByModelo","findReinfCFOPConfig","getLivroFolhaMLF","refazerLancamentosContabeis","refazerLancamentosReinf","findConfigReinfEmpresa","validarIE","summer__WEBPACK_IMPORTED_MODULE_0__","getService","create","modelo","isImportacao","param","send","post","idCFOP","get","concat","idGerEmpresa","refazerLancamentosContabeisParam","refazerLancamentosReinfParam","idEmpresaMlf","importarParam","inscricaoEstadual","unidadeFederacao"],"mappings":"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","file":"static/js/289.ee8b8f86.chunk.js","sourcesContent":["import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, Form, Row } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  EditViewProps,\r\n  ERROR,\r\n  ProcessBar,\r\n  progressActions,\r\n  showToast,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMLF } from '../../../../dependencies/empresaMLFDependency';\r\nimport { ImportarIntegracaoFiscalContabilParam } from '../../../../models/dtos/mlf/importarIntegracaoFiscalContabilParam';\r\nimport { importarIntegracaoFiscalContabil } from '../../../../services/mlf.service';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport EmpresaIS from '../../../components/ger/empresaIS/EmpresaIS';\r\n\r\ninterface ImportarIntegracaoFiscalContabilProcessView extends EditViewProps<ImportarIntegracaoFiscalContabilParam> {}\r\n\r\nconst ImportarIntegracaoFiscalContabilProcessView: FC<ImportarIntegracaoFiscalContabilProcessView & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const formProps = useForm<any>({ mode: 'onBlur' });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleImportar = (data: ImportarIntegracaoFiscalContabilParam) => {\r\n    data.empresaDestino = globalReducer.globalParameter.empresa;\r\n    dispatch(\r\n      progressActions.showProgress({\r\n        animated: true,\r\n        label: 'Aguarde processando...',\r\n        now: 100,\r\n      })\r\n    );\r\n    importarIntegracaoFiscalContabil(data, {\r\n      errorFunction: mensagem => {\r\n        showToast(mensagem, ERROR);\r\n        dispatch(progressActions.hideProgress());\r\n      },\r\n      thenFunction: () => {\r\n        dispatch(progressActions.hideProgress());\r\n        const params: AlertProps = {\r\n          message: 'Integração Realizada com Sucesso!',\r\n          type: AlertType.INFORMATION,\r\n        };\r\n        alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n      },\r\n    });\r\n  };\r\n\r\n  const onClose = (goBack: boolean = true) => {\r\n    dispatchClose(props, props.history, goBack);\r\n  };\r\n\r\n  const handleCancel = () => onClose();\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Importar Integração Fiscal/Contábil\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMLF(globalReducer.globalParameter)]}\r\n    >\r\n      <Form>\r\n        <Row>\r\n          <Col>\r\n            <EmpresaIS\r\n              label=\"Empresa de Origem\"\r\n              placeholder=\"Selecione a empresa que deseja importar as integrações\"\r\n              id=\"empresaOrigem\"\r\n              isPrependLabel={true}\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              inputSearchProps={{ size: 'xl' }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <h5>Empresa Destino: {globalReducer.globalParameter.empresa.codigo + ' - ' + globalReducer.globalParameter.empresa.razaoSocial}</h5>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <ProcessBar handleSubmit={formProps.handleSubmit(handleImportar)} handleClose={handleCancel} />\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default ImportarIntegracaoFiscalContabilProcessView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMLF(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMLF) {\r\n    result =\r\n      'A empresa fiscal da empresa selecionada deve estar configurada. Para configurar acesse:\\n' +\r\n      'Módulo Fiscal > Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n","import { AxiosInstance } from 'axios';\r\nimport { AxiosParam, create, send } from 'summer';\r\nimport { Cfop } from '../models/dtos/ger/cfop';\r\nimport { Especie } from '../models/dtos/ger/especie';\r\nimport { ConfigLivroMLF } from '../models/dtos/mlf/configLivroMLF';\r\nimport { ConfigReinf } from '../models/dtos/mlf/configReinf';\r\nimport { ImportarIntegracaoFiscalContabilParam } from '../models/dtos/mlf/importarIntegracaoFiscalContabilParam';\r\nimport { RefazerLancamentosContabeisParam } from '../models/dtos/mlf/refazerLancamentosContabeisParam';\r\nimport { RefazerLancamentosReinfParam } from '../models/dtos/mlf/refazerLancamentosReinfParam';\r\n\r\nfunction getService(): AxiosInstance {\r\n  return create('/mlf');\r\n}\r\n\r\nexport function findEspecieByModelo(modelo: string, isImportacao: boolean, param: AxiosParam<Especie>) {\r\n  send(\r\n    getService().post<Especie>('/findEspecieByModelo', { modelo, isImportacao }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function findReinfCFOPConfig(idCFOP: number, param: AxiosParam<Cfop>) {\r\n  send(getService().get<Cfop>(`/findReinfCFOPConfig/${idCFOP}`), param);\r\n}\r\n\r\nexport function getLivroFolhaMLF(idGerEmpresa: number, param: AxiosParam<ConfigLivroMLF>) {\r\n  send(getService().get<ConfigLivroMLF>(`/getLivroFolhaMLF/${idGerEmpresa}`), param);\r\n}\r\n\r\nexport function refazerLancamentosContabeis(refazerLancamentosContabeisParam: RefazerLancamentosContabeisParam, param: AxiosParam<any>) {\r\n  send(getService().post<RefazerLancamentosContabeisParam>('/refazerLancamentosContabeis', refazerLancamentosContabeisParam), param);\r\n}\r\n\r\nexport function refazerLancamentosReinf(refazerLancamentosReinfParam: RefazerLancamentosReinfParam, param: AxiosParam<any>) {\r\n  send(getService().post<RefazerLancamentosReinfParam>('/refazerLancamentosReinf', refazerLancamentosReinfParam), param);\r\n}\r\n\r\nexport function findConfigReinfEmpresa(idEmpresaMlf: number, param: AxiosParam<any>) {\r\n  send(getService().get<ConfigReinf>(`/findConfigReinfEmpresa/${idEmpresaMlf}`), param);\r\n}\r\n\r\nexport function importarIntegracaoFiscalContabil(importarParam: ImportarIntegracaoFiscalContabilParam, param: AxiosParam<any>) {\r\n  send(getService().post<any>('/importarIntegracaoFiscalContabil', importarParam), param);\r\n}\r\n\r\nexport function validarIE(inscricaoEstadual: string, unidadeFederacao: string, param: AxiosParam<boolean>) {\r\n  send(\r\n    getService().post<boolean>('/validarIE', { inscricaoEstadual, unidadeFederacao }),\r\n    param\r\n  );\r\n}\r\n"],"sourceRoot":""}
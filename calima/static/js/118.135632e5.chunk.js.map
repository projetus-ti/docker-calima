{"version":3,"sources":["views/pages/mcg/report/lancamentoPadrao/LancamentosPadraoReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","dependencies/grupoEmpresaConfigDependency.ts","dependencies/empresaMCGDependency.ts"],"names":["DEFAULT_VALUES","Object","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__","getDefaultReportBasicValues","gerarCabecalhoPadraoAdministradora","DEFAULT_OPTIONS","getDefaultReportViewOptions","LancamentosPadraoReportView","props","globalReducer","useSelector","state","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_5__","title","useGlobalParameter","globalParameter","dependencies","hasEmpresa","hasEmpresaMCG","hasGrupoEmpresaConfig","_components_report_ReportForm__WEBPACK_IMPORTED_MODULE_11__","assign","localStorageKey","routeProps","reportBasicValues","reportViewOptions","extraConfigOpened","result","empresa","__webpack_require__","d","__webpack_exports__","NATUREZA","label","value","SALDO_REPORT_ENUM","EmpresaIS","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","isPrependLabel","inputSearchProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","placeholder","type","InputType","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","empresasSelecionadas","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","virtualization","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDadosEmpresa","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","errors","getValues","register","setValue","triggerValidation","react_default","summer_esm","handleCancel","validateExtras","currentItem","currentValues","parentObject","id","objectSpread2","validation","required","EnvioEmail","Fragment","sort","detailView","keyField","propName","Row","className","Col","CustomInput","name","innerRef","maxLength","TEXT_AREA","ReportInputs","_useState","useState","_useState2","slicedToArray","activeTab","setActiveTab","useEffect","_props$reportViewOpti","printingTypes","resetObject","length","idGerEmpresa","current","currentMomentDate","endDate","DATE","dtInicial","formatDate","toDate","DATES","dtFinal","endOf","REFERENCE","referenciaInicial","format","REF_PATTERN","REFERENCES","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dtInicialRequired","dateComponent","datesComponent","dtFinalRequired","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","NUMBER","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","inputProps","disabled","gerarPorEmpresas","style","marginBottom","size","selectProps","isMulti","segmentacaoFolhaComponent","exibirSegmentacaoFolha","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","exibirImprimirValoresColoridos","inputDropDownProps","optionsProvider","isClearable","DROP_DOWN","firstOpen","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","hidden","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","ReportForm","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","erros","params","message","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history","grupoEmpresaRaiz","grupoEmpresaConfig","grupoEmpresa","empresaMCG"],"mappings":"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","file":"static/js/118.135632e5.chunk.js","sourcesContent":["import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../../dependencies/empresaMCGDependency';\r\nimport { hasGrupoEmpresaConfig } from '../../../../../dependencies/grupoEmpresaConfigDependency';\r\nimport { getDefaultReportBasicValues, ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\n\r\nconst CLASS_KEY: string = 'lancamentopadrao';\r\nconst REPORT_EVENT: string = 'printLancamentoPadrao';\r\nconst REPORT_TITLE: string = 'Relação de Lançamentos Padrões';\r\n\r\nconst DEFAULT_VALUES: ReportBasicValues = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n  gerarCabecalhoPadraoAdministradora: true,\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT),\r\n};\r\n\r\nconst LancamentosPadraoReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const { handleSubmit, ...formProps } = useForm<ReportBasicValues>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Relação de Lançamentos Padrões\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[\r\n        () => hasEmpresa(globalReducer.globalParameter),\r\n        () => hasEmpresaMCG(globalReducer.globalParameter),\r\n        () => hasGrupoEmpresaConfig(globalReducer.globalParameter),\r\n      ]}\r\n    >\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n        extraConfigOpened={true}\r\n      />\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default LancamentosPadraoReportView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasGrupoEmpresaConfig(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n\r\n  const msg: string =\r\n    'O Grupo de empresas não está configurado para a empresa selecionada. Para configurar acesse:\\n' +\r\n    'Modulo Principal > Manutenção > Configurações > Grupo de Empresa';\r\n\r\n  if (\r\n    !globalParameter.empresa ||\r\n    !globalParameter.empresa.grupoEmpresaRaiz.grupoEmpresaConfig ||\r\n    !globalParameter.empresa.grupoEmpresa.grupoEmpresaConfig\r\n  ) {\r\n    result = msg;\r\n  }\r\n\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMCG(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMCG) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o módulo Contábil. Para configurá-la acesse:\\n' +\r\n      'Módulo Contábil > Manutenção > Configurações > Empresa.';\r\n  }\r\n  return result;\r\n}\r\n"],"sourceRoot":""}
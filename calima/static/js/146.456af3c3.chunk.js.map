{"version":3,"sources":["views/pages/mcg/importacaoSpedContabil/ImportacaoSpedContabilProcessView.tsx","dependencies/empresaDependency.ts","dependencies/grupoEmpresaConfigDependency.ts","dependencies/empresaMCGDependency.ts","services/mcg.service.ts","../node_modules/reactstrap/es/Alert.js","views/components/resultadoIntegracao/ResultadoIntegracao.tsx","dependencies/grupoPlanoContasDependency.ts"],"names":["ImportacaoSpedContabilProcessView","props","globalReducer","useSelector","state","dispatch","useDispatch","_useForm","useForm","mode","reset","formProps","Object","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","_useState","useState","_useState2","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","showResultView","setShowResultView","_useState3","_useState4","listResult","setListResult","useEffect","globalParameter","empresa","_globalReducer$global","usuario","setTimeout","id","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_9__","title","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMCG","hasGrupoEmpresaConfig","hasGrupoPlanoContas","wikiId","wikiTitle","_components_resultadoIntegracao_ResultadoIntegracao__WEBPACK_IMPORTED_MODULE_15__","assign","errorList","filter","it","success","successList","hidePrintButton","tabFailure","tabSuccess","reactstrap__WEBPACK_IMPORTED_MODULE_5__","hidden","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","color","className","acceptedTypes","isMultiple","limitSizeBytes","SIZE_ONE_HUNDRED_BYTES","propImageName","maxFiles","handleSubmit","data","erros","getValues","arquivos","length","push","validateExtras","params","message","type","AlertType","WARNING","alertManager","emit","ACTION_EVENTS","SHOW","progressActions","showProgress","animated","label","striped","value","importarSpedContabil","errorFunction","mensagem","hideProgress","showToast","ERROR","thenFunction","result","callImport","handleClose","goBack","dispatchClose","history","onClose","__webpack_require__","d","__webpack_exports__","grupoEmpresaRaiz","grupoEmpresaConfig","grupoEmpresa","empresaMCG","getService","create","gerarLancamentosFolhaPagamento","integracaoFolhaParam","param","send","post","integrarFolhaPagamento","lancamentoIntegracaoFolha","integrarMCP","importarParam","importarLancamentoCSV","formDataSend","FormData","append","String","importarDuplicados","importarLancamentosCardinal","_step","_iterator","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__","s","n","done","arquivo","file","nomeArquivo","err","e","f","importarLancamentoPadraoCSV","_step2","_iterator2","importarHistoricoCSV","grupoHistoricoDestino","_step3","_iterator3","importarPlanoContaCSV","idEmpresa","grupoPlanoContaDestino","_step4","_iterator4","importarHistorico","importacaoHistorico","importarPlanoConta","importacaoPlanoContaParam","buscarConfigLivroFolhaMCG","get","integracaoFiscalContabil","encerrarContas","contaResultadoEncerramento","force","getDataUltimaContaEncerrada","idGerEmpresa","limparEncerramentoContaResultado","contaResultadoLimpeza","validarReferenciaSPEDECFIrpjCsll","configECFIrpjCsll","validarReferenciaSPEDECFImuneIsenta","configECFImuneIsenta","validarRefRemuneracaoSocio","configECFRemuneracaoSocio","validarQuadroSocietario","configQuadro","obterLucroPrejuizoClassificacao","idGrupoPlanoConta","getSaldo","saldo","validarDadosSpedECF","ecfExportacaoParam","gerarSpedECF","getArquivoDigitalService","recuperarLancamentoConta","transferenciaLancamentoConta","transferirLancamentoConta","obterBancoPlanoConta","bancoPlanoContaDTO","validarConfigLivroFolha","changeLivroFolha","fecharRestaurar","fechamentoRestauracao","forceFecharRestaurar","verificarErros","gerarSpedContabil","selecaoSped","arquivoRTFEscrituracaoSubstituida","_step5","_iterator5","atributoSelecaoSped","salvarLucroPrejuizoClassificacao","lucroPrejuizoClassificacao","consultarMovimentacao","saldoCriteria","totalizadorLancamento","consulta","getSaldoAnterior","isDataEncerrada","parametros","abrirContas","removeLancamentoPeriodo","obterContasClassificacaoIndireto","salvarClassificacaoIndireto","contaFluxoCaixaIndireto","obterMutacaoPatrimonioLiquido","salvarMutacaoPatrimonioLiquido","mutacaoPatrimonioLiquido","salvarContaResultado","contaResultado","excluirContaResultado","obterContasClassificacaoDireto","salvarClassificacaoDireto","contaFluxoCaixa","findSubGrupo","planoContaSubGrupoParam","removerTodosPlanosConta","removeList","listaPlanoConta","apagarFilha","listSubGrupo","planoConta","referenciarContas","idsPlanoConta","idPlanoContaReferencial","idPlanoContaReferencialECF","desvincularContas","existeLancamentoEmContaAnalitica","idPlanoConta","importarLancamentoMCG","tipoImportacao","sobescrever","versaoSuperiorA2","isEmpty","dtInicial","dtFinal","_step6","_iterator6","gerarManadContabil","refInicial","refFinal","arquivoSFP","evolucaoContaContabilGraf","evolucaoContaContabilGrafParam","composicaoReceitaDespesasGraf","compReceitaDespesasGrafParam","gerarFCONTContabil","fContContabilCrit","obterDadosArquivoExtrato","arquivoSelecionado","idBancoMCG","obterDadosConciliacaoBancariaPeriodo","obterBancoListPlanoConta","conciliarLancamentosExtrato","listConciliacaoBancaria","removerConciliarLancamentosExtrato","listaRemover","removerLancamentosExtratoBancario","obterLancamentosSaldoPeriodo","historico","valor","operacaoConsultaValor","conciliarLancamentosConta","listaConciliacao","removerConciliarLancamentosConta","listaConciliarRemover","eLalurAContas","eLacsAContas","getSaldoDebito","getSaldoCredito","removerLancamentoLote","atualizaCalculoIrpjCsll","buscarLancamentosHonorarios","integracaoHonorariosParam","integrarHonorarios","lancamentos","isAlteraCalculoIRPJorCSLL","alterarPlanoContaNaturezaConfig","enumPlanoContaNaturezaConta","prepararContaResultado","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","prop_types__WEBPACK_IMPORTED_MODULE_4__","prop_types__WEBPACK_IMPORTED_MODULE_4___default","classnames__WEBPACK_IMPORTED_MODULE_5__","classnames__WEBPACK_IMPORTED_MODULE_5___default","_utils__WEBPACK_IMPORTED_MODULE_6__","_Fade__WEBPACK_IMPORTED_MODULE_7__","propTypes","children","node","string","closeClassName","closeAriaLabel","cssModule","object","fade","bool","isOpen","toggle","func","tag","transition","shape","innerRef","oneOfType","defaultProps","unmountOnExit","Alert","Tag","attributes","classes","alert-dismissible","closeClasses","alertTransition","baseClass","timeout","in","role","aria-label","onClick","aria-hidden","ResultadoIntegracao","activeTab","setActiveTab","columns","dataField","sort","text","defaultSorted","order","OrderType","ASC","toggleTab","target","tabIndex","Fragment","tabs","cx","active","reactstrap__WEBPACK_IMPORTED_MODULE_9__","tabId","react_bootstrap_table_next__WEBPACK_IMPORTED_MODULE_4___default","bootstrap4","bordered","condensed","hover","keyField","noDataIndication","responsive","tabIndexCell","key","style","marginTop","reactstrap__WEBPACK_IMPORTED_MODULE_10__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_1__","icon","disabled","printReport","grupoPlanoConta","mascara","digitoAtivo","digitoPassivo","digitoReceita","digitoDespesa"],"mappings":"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","file":"static/js/146.456af3c3.chunk.js","sourcesContent":["import React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Alert, Col, Form, Row } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  EditViewProps,\r\n  ErroList,\r\n  ERROR,\r\n  FileInputPreview,\r\n  InputGroupInline,\r\n  ProcessBar,\r\n  progressActions,\r\n  showToast,\r\n  SIZE_ONE_HUNDRED_BYTES,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../dependencies/empresaMCGDependency';\r\nimport { hasGrupoEmpresaConfig } from '../../../../dependencies/grupoEmpresaConfigDependency';\r\nimport { hasGrupoPlanoContas } from '../../../../dependencies/grupoPlanoContasDependency';\r\nimport { RuleMessage } from '../../../../models/dtos/ger/ruleMessage';\r\nimport { ImportacaoSpedContabil } from '../../../../models/dtos/mcg/importacaoSpedContabil';\r\nimport { importarSpedContabil } from '../../../../services/mcg.service';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\nimport ResultadoIntegracao from '../../../components/resultadoIntegracao/ResultadoIntegracao';\r\n\r\ninterface ImportacaoSpedContabilProcessProps extends EditViewProps<ImportacaoSpedContabil> {}\r\n\r\nconst ImportacaoSpedContabilProcessView: FC<ImportacaoSpedContabilProcessProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { reset, ...formProps } = useForm<ImportacaoSpedContabil>({ mode: 'onBlur' });\r\n\r\n  const [showResultView, setShowResultView] = useState(false);\r\n\r\n  const [listResult, setListResult] = useState<RuleMessage[]>([]);\r\n\r\n  const MAX_FILES: number = 1;\r\n\r\n  useEffect(\r\n    () => {\r\n      if (globalReducer.globalParameter.empresa !== null) {\r\n        const { empresa, usuario } = globalReducer.globalParameter;\r\n        setTimeout(() => {\r\n          reset({\r\n            empresa: {\r\n              id: empresa.id,\r\n            },\r\n            usuario: {\r\n              id: usuario.id,\r\n            },\r\n          });\r\n        }, 500);\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const onClose = (goBack: boolean = true) => {\r\n    dispatchClose(props, props.history, goBack);\r\n  };\r\n\r\n  const handleCancel = () => onClose();\r\n\r\n  const handleImport = (data: ImportacaoSpedContabil) => {\r\n    const erros = validateExtras();\r\n    if (erros.length > 0) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.WARNING,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      dispatch(\r\n        progressActions.showProgress({\r\n          animated: true,\r\n          className: 'progress-bar-rounded progress-animated-alt',\r\n          color: 'first',\r\n          label: 'Aguarde processando...',\r\n          striped: true,\r\n          value: 100,\r\n        })\r\n      );\r\n      callImport(data);\r\n    }\r\n  };\r\n\r\n  function callImport(data: ImportacaoSpedContabil): void {\r\n    importarSpedContabil(data, {\r\n      errorFunction: mensagem => {\r\n        dispatch(progressActions.hideProgress());\r\n        showToast(mensagem, ERROR);\r\n      },\r\n      thenFunction: (result: RuleMessage[]) => {\r\n        dispatch(progressActions.hideProgress());\r\n        setListResult(result);\r\n        setShowResultView(true);\r\n      },\r\n    });\r\n  }\r\n\r\n  function validateExtras(): string[] {\r\n    const erros = [];\r\n    if (formProps.getValues().arquivos.length === 0) {\r\n      erros.push('Nenhum Arquivo selecionado');\r\n    }\r\n    return erros;\r\n  }\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Importação do SPED Contábil\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[\r\n        () => hasEmpresa(globalReducer.globalParameter),\r\n        () => hasEmpresaMCG(globalReducer.globalParameter),\r\n        () => hasGrupoEmpresaConfig(globalReducer.globalParameter),\r\n        () => hasGrupoPlanoContas(globalReducer.globalParameter),\r\n      ]}\r\n      wikiId={176}\r\n      wikiTitle=\"Importação de Dados Via SPED ECD\"\r\n    >\r\n      {showResultView ? (\r\n        <ResultadoIntegracao\r\n          {...props}\r\n          errorList={listResult.filter(it => !it.success)}\r\n          successList={listResult.filter(it => it.success)}\r\n          hidePrintButton={true}\r\n          tabFailure=\"Registros Rejeitados\"\r\n          tabSuccess=\"Registros Aceitos\"\r\n        />\r\n      ) : (\r\n        <Form>\r\n          <InputGroupInline formProps={formProps} id=\"empresa.id\" hidden={true} />\r\n          <InputGroupInline formProps={formProps} id=\"usuario.id\" hidden={true} />\r\n          <Row>\r\n            <Col>\r\n              <Alert color=\"danger\" className=\"text-center\">\r\n                Todos os lançamentos importados no período serão excluídos.\r\n              </Alert>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FileInputPreview\r\n                acceptedTypes=\".txt, .zip, .7z, .rar\"\r\n                formProps={formProps}\r\n                isMultiple={true}\r\n                limitSizeBytes={SIZE_ONE_HUNDRED_BYTES}\r\n                propImageName=\"arquivos\"\r\n                maxFiles={MAX_FILES}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <ProcessBar handleSubmit={formProps.handleSubmit(handleImport)} handleClose={handleCancel} />\r\n        </Form>\r\n      )}\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default ImportacaoSpedContabilProcessView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasGrupoEmpresaConfig(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n\r\n  const msg: string =\r\n    'O Grupo de empresas não está configurado para a empresa selecionada. Para configurar acesse:\\n' +\r\n    'Modulo Principal > Manutenção > Configurações > Grupo de Empresa';\r\n\r\n  if (\r\n    !globalParameter.empresa ||\r\n    !globalParameter.empresa.grupoEmpresaRaiz.grupoEmpresaConfig ||\r\n    !globalParameter.empresa.grupoEmpresa.grupoEmpresaConfig\r\n  ) {\r\n    result = msg;\r\n  }\r\n\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMCG(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMCG) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o módulo Contábil. Para configurá-la acesse:\\n' +\r\n      'Módulo Contábil > Manutenção > Configurações > Empresa.';\r\n  }\r\n  return result;\r\n}\r\n","import { AxiosInstance } from 'axios';\r\nimport { ArquivoSelecionado, AxiosParam, create, isEmpty, send } from 'summer';\r\nimport { PlanoConta } from '../models/dtos/ger/planoConta';\r\nimport { PlanoContaSubGrupoParam } from '../models/dtos/ger/planoContaSubGrupoParam';\r\nimport { RuleMessage } from '../models/dtos/ger/ruleMessage';\r\nimport { Usuario } from '../models/dtos/ger/usuario';\r\nimport { BancoExtrato } from '../models/dtos/mcg/bancoExtrato';\r\nimport { BancoMCG } from '../models/dtos/mcg/bancoMCG';\r\nimport { BancoPlanoConta } from '../models/dtos/mcg/bancoPlanoConta';\r\nimport { CalculoIrpjCsll } from '../models/dtos/mcg/calculoIrpjCsll';\r\nimport { ComposicaoReceitaDespesasGrafParam } from '../models/dtos/mcg/composicaoReceitaDespesasGrafParam';\r\nimport { ComposicaoReceitaDespesasGrafReturn } from '../models/dtos/mcg/composicaoReceitaDespesasGrafReturn';\r\nimport { ConciliacaoBancaria } from '../models/dtos/mcg/conciliacaoBancaria';\r\nimport { ConciliacaoConta } from '../models/dtos/mcg/conciliacaoConta';\r\nimport { ConfigECFImuneIsenta } from '../models/dtos/mcg/configECFImuneIsenta';\r\nimport { ConfigECFIrpjCsll } from '../models/dtos/mcg/configECFIrpjCsll';\r\nimport { ConfigECFRemuneracaoSocio } from '../models/dtos/mcg/configECFRemuneracaoSocio';\r\nimport { ConsultaTotalLancamento } from '../models/dtos/mcg/consultaTotalLancamento';\r\nimport { ContaFluxoCaixa } from '../models/dtos/mcg/contaFluxoCaixa';\r\nimport { ContaFluxoCaixaIndireto } from '../models/dtos/mcg/contaFluxoCaixaIndireto';\r\nimport { ContaResultado } from '../models/dtos/mcg/contaResultado';\r\nimport { ContaResultadoLimpeza } from '../models/dtos/mcg/contaResultadoLimpeza';\r\nimport { ContaResultadoMCGEncerramento } from '../models/dtos/mcg/contaResultadoMCGEncerramento';\r\nimport { DataEncerradaParam } from '../models/dtos/mcg/dataEncerradaParam';\r\nimport { ECFExportacaoParam } from '../models/dtos/mcg/ecfExportacaoParam';\r\nimport { Erros } from '../models/dtos/mcg/erros';\r\nimport { EvolucaoContaContabilGrafParam } from '../models/dtos/mcg/evolucaoContaContabilGrafParam';\r\nimport { EvolucaoContaContabilGrafReturn } from '../models/dtos/mcg/evolucaoContaContabilGrafReturn';\r\nimport { FCONTContabilCrit } from '../models/dtos/mcg/fContContabilCrit';\r\nimport { FechamentoRestauracaoMCG } from '../models/dtos/mcg/fechamentoRestauracaoMCG';\r\nimport { ImportacaoFiscalContabil, ImportacaoFiscalContabilResult } from '../models/dtos/mcg/importacaoFiscalContabil';\r\nimport { ImportacaoHistorico } from '../models/dtos/mcg/importacaoHistorico';\r\nimport { ImportacaoHistoricoCSVParam } from '../models/dtos/mcg/importacaoHistoricoCSVParam';\r\nimport { ImportacaoLancamentoCSVParam } from '../models/dtos/mcg/importacaoLancamentoCSVParam';\r\nimport { ImportacaoLancamentoMCGRetornoValidacao } from '../models/dtos/mcg/importacaoLancamentoMCGRetornoValidacao';\r\nimport { ImportacaoLancamentoMCGSelecao } from '../models/dtos/mcg/importacaoLancamentoMCGSelecao';\r\nimport { ImportacaoLancamentoPadraoCSVParam } from '../models/dtos/mcg/importacaoLancamentoPadraoCSVParam';\r\nimport { ImportacaoPlanoConta } from '../models/dtos/mcg/importacaoPlanoConta';\r\nimport { ImportacaoPlanoContaCSVParam } from '../models/dtos/mcg/importacaoPlanoContaCSVParam';\r\nimport { ImportacaoSpedContabil } from '../models/dtos/mcg/importacaoSpedContabil';\r\nimport { ImportacaoResult, ImportarMCP } from '../models/dtos/mcg/importarMCP';\r\nimport { InfoConciliacaoBancaria } from '../models/dtos/mcg/infoConciliacaoBancaria';\r\nimport { IntegracaoFolhaParam } from '../models/dtos/mcg/integracaoFolhaParam';\r\nimport { IntegracaoHonorariosParam } from '../models/dtos/mcg/integracaoHonorariosParam';\r\nimport { Lancamento } from '../models/dtos/mcg/lancamento';\r\nimport { LancamentoConciliacao } from '../models/dtos/mcg/lancamentoConciliacao';\r\nimport { LancamentoIntegracaoFolha } from '../models/dtos/mcg/lancamentoIntegracaoFolha';\r\nimport { LancamentoIntegracaoHonorarios } from '../models/dtos/mcg/lancamentoIntegracaoHonorarios';\r\nimport { LancamentoSaldo } from '../models/dtos/mcg/lancamentoSaldo';\r\nimport { LivroFolha } from '../models/dtos/mcg/livroFolha';\r\nimport { LucroPrejuizoClassificacao } from '../models/dtos/mcg/lucroPrejuizoClassificacao';\r\nimport { MANADContabilCrit } from '../models/dtos/mcg/manadContabilCrit';\r\nimport { MutacaoPatrimonioLiquido } from '../models/dtos/mcg/mutacaoPatrimonioLiquido';\r\nimport { QuadroSocietario } from '../models/dtos/mcg/quadroSocietario';\r\nimport { RemoveLancamentoLote } from '../models/dtos/mcg/removeLancamentoLote';\r\nimport { RemoveLancamentoPeriodo } from '../models/dtos/mcg/removeLancamentoPeriodo';\r\nimport { Saldo } from '../models/dtos/mcg/saldo';\r\nimport { SaldoCriteria } from '../models/dtos/mcg/saldoCriteria';\r\nimport { SelecaoSpedContabil } from '../models/dtos/mcg/selecaoSpedContabil';\r\nimport { SomaSaldo } from '../models/dtos/mcg/somaSaldo';\r\nimport { TotalizadorLancamento } from '../models/dtos/mcg/totalizadorLancamento';\r\nimport { TransferenciaLancamentoConta } from '../models/dtos/mcg/transferenciaLancamentoConta';\r\nimport { VerificarErros } from '../models/dtos/mcg/verificarErros';\r\nimport { getArquivoDigitalService } from './ger.service';\r\n\r\nfunction getService(): AxiosInstance {\r\n  return create('/mcg');\r\n}\r\n\r\nexport function gerarLancamentosFolhaPagamento(integracaoFolhaParam: IntegracaoFolhaParam, param: AxiosParam<LancamentoIntegracaoFolha[]>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/gerarLancamentosFolhaPagamento', integracaoFolhaParam), param);\r\n}\r\n\r\nexport function integrarFolhaPagamento(lancamentoIntegracaoFolha: LancamentoIntegracaoFolha[], param: AxiosParam<any>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/integrarFolhaPagamento', lancamentoIntegracaoFolha), param);\r\n}\r\n\r\nexport function integrarMCP(importarParam: ImportarMCP, param: AxiosParam<ImportacaoResult>) {\r\n  send(getService().post<ImportacaoResult>('/importar', importarParam), param);\r\n}\r\n\r\nexport function importarLancamentoCSV(data: ImportacaoLancamentoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('importarDuplicados', String(data.importarDuplicados));\r\n  formDataSend.append('importarLancamentosCardinal', String(data.importarLancamentosCardinal));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarLancamentoPadraoCSV(data: ImportacaoLancamentoPadraoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoPadraoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistoricoCSV(data: ImportacaoHistoricoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('grupoHistoricoDestino.id', String(data.grupoHistoricoDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarHistoricoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarPlanoContaCSV(data: ImportacaoPlanoContaCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idEmpresa', String(data.idEmpresa));\r\n  formDataSend.append('grupoPlanoContaDestino.id', String(data.grupoPlanoContaDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarPlanoContaCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistorico(importacaoHistorico: ImportacaoHistorico, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarHistorico', importacaoHistorico), param);\r\n}\r\n\r\nexport function importarPlanoConta(importacaoPlanoContaParam: ImportacaoPlanoConta, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarPlanoConta', importacaoPlanoContaParam), param);\r\n}\r\n\r\nexport function buscarConfigLivroFolhaMCG(idEmpresa: number, param: AxiosParam<LivroFolha>) {\r\n  send(getService().get<LivroFolha>('/buscarConfigLivroFolhaMCG/' + idEmpresa), param);\r\n}\r\n\r\nexport function integracaoFiscalContabil(importarParam: ImportacaoFiscalContabil, param: AxiosParam<ImportacaoFiscalContabilResult>) {\r\n  send(getService().post<ImportacaoFiscalContabilResult>('/integracaoFiscalContabil', importarParam), param);\r\n}\r\n\r\nexport function encerrarContas(\r\n  contaResultadoEncerramento: ContaResultadoMCGEncerramento,\r\n  force: boolean,\r\n  param: AxiosParam<ContaResultadoMCGEncerramento>\r\n) {\r\n  send(\r\n    getService().post<ContaResultadoMCGEncerramento>('/encerrarContas', { contaResultadoEncerramento, force }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function getDataUltimaContaEncerrada(idGerEmpresa: number, param: AxiosParam<Date>) {\r\n  send(getService().get<Date>('/getDataUltimaContaEncerrada/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function limparEncerramentoContaResultado(contaResultadoLimpeza: ContaResultadoLimpeza, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/limparEncerramentoContaResultadoApos', contaResultadoLimpeza), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFIrpjCsll(configECFIrpjCsll: ConfigECFIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFIrpjCsll', configECFIrpjCsll), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFImuneIsenta(configECFImuneIsenta: ConfigECFImuneIsenta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFImuneIsenta', configECFImuneIsenta), param);\r\n}\r\n\r\nexport function validarRefRemuneracaoSocio(configECFRemuneracaoSocio: ConfigECFRemuneracaoSocio, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarRefRemuneracaoSocio', configECFRemuneracaoSocio), param);\r\n}\r\n\r\nexport function validarQuadroSocietario(configQuadro: QuadroSocietario, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/validarQuadroSocietario', configQuadro), param);\r\n}\r\n\r\nexport function obterLucroPrejuizoClassificacao(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterLucroPrejuizoClassificacao/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function getSaldo(saldo: Saldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldo', saldo), param);\r\n}\r\n\r\nexport function validarDadosSpedECF(ecfExportacaoParam: ECFExportacaoParam, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/validarDadosSpedECF', ecfExportacaoParam), param);\r\n}\r\n\r\nexport function gerarSpedECF(usuario: Usuario, ecfExportacaoParam: ECFExportacaoParam, param?: AxiosParam<string>) {\r\n  send(\r\n    getArquivoDigitalService().post<string>('/gerarSpedECF', { usuario, ecfExportacaoParam }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function recuperarLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<Lancamento[]>) {\r\n  send(getService().post<Lancamento[]>('/recuperarLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function transferirLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/transferirLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function obterBancoPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG>) {\r\n  send(getService().post<BancoMCG>('/obterBancoPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function validarConfigLivroFolha(idGerEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(getService().get<boolean>('/validarConfigLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function changeLivroFolha(idGerEmpresa: number, param: AxiosParam<void>) {\r\n  send(getService().get<void>('/changeLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function fecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<RuleMessage>) {\r\n  send(getService().post<RuleMessage>('/fecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function forceFecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/forceFecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function verificarErros(erros: VerificarErros, param: AxiosParam<Erros[]>) {\r\n  send(getService().post<Erros[]>('/verificarErros', erros), param);\r\n}\r\n\r\nexport function gerarSpedContabil(selecaoSped: SelecaoSpedContabil, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('usuario.id', String(selecaoSped.usuario.id));\r\n\r\n  if (selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n    for (const arquivo of selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n      formDataSend.append('arquivoRTFEscrituracaoSubstituida', arquivo.file, arquivo.nomeArquivo);\r\n    }\r\n  }\r\n\r\n  for (const atributoSelecaoSped in selecaoSped) {\r\n    if (\r\n      atributoSelecaoSped !== 'arquivoRTFEscrituracaoSubstituida' &&\r\n      atributoSelecaoSped !== 'usuario' &&\r\n      selecaoSped[atributoSelecaoSped] !== null\r\n    ) {\r\n      formDataSend.append(atributoSelecaoSped, selecaoSped[atributoSelecaoSped]);\r\n    }\r\n  }\r\n  send(getService().post<string>('/gerarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function salvarLucroPrejuizoClassificacao(\r\n  lucroPrejuizoClassificacao: LucroPrejuizoClassificacao,\r\n  param: AxiosParam<LucroPrejuizoClassificacao>\r\n) {\r\n  send(getService().post<LucroPrejuizoClassificacao>('/salvarLucroPrejuizoClassificacao', lucroPrejuizoClassificacao), param);\r\n}\r\n\r\nexport function consultarMovimentacao(saldoCriteria: SaldoCriteria, param: AxiosParam<LancamentoSaldo[]>) {\r\n  send(getService().post<LancamentoSaldo[]>('/consultarMovimentacao', saldoCriteria), param);\r\n}\r\n\r\nexport function totalizadorLancamento(consulta: ConsultaTotalLancamento, param: AxiosParam<TotalizadorLancamento>) {\r\n  send(getService().post<TotalizadorLancamento>('/totalizadorLancamento', consulta), param);\r\n}\r\n\r\nexport function getSaldoAnterior(saldoCriteria: SaldoCriteria, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoAnterior', saldoCriteria), param);\r\n}\r\n\r\nexport function isDataEncerrada(parametros: DataEncerradaParam, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isDataEncerrada', parametros), param);\r\n}\r\n\r\nexport function abrirContas(parametros: DataEncerradaParam, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/abrirContas', parametros), param);\r\n}\r\n\r\nexport function removeLancamentoPeriodo(parametros: RemoveLancamentoPeriodo, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removeLancamentoPeriodo', parametros), param);\r\n}\r\n\r\nexport function obterContasClassificacaoIndireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixaIndireto[]>) {\r\n  send(getService().get<ContaFluxoCaixaIndireto[]>('/obterContasClassificacaoIndireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoIndireto(contaFluxoCaixaIndireto: ContaFluxoCaixaIndireto, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoIndireto', contaFluxoCaixaIndireto), param);\r\n}\r\n\r\nexport function obterMutacaoPatrimonioLiquido(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterMutacaoPatrimonioLiquido/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarMutacaoPatrimonioLiquido(mutacaoPatrimonioLiquido: MutacaoPatrimonioLiquido, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarMutacaoPatrimonioLiquido', mutacaoPatrimonioLiquido), param);\r\n}\r\n\r\nexport function salvarContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function excluirContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/excluirContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function obterContasClassificacaoDireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixa[]>) {\r\n  send(getService().get<ContaFluxoCaixa[]>('/obterContasClassificacaoDireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoDireto(contaFluxoCaixa: ContaFluxoCaixa, param?: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoDireto', contaFluxoCaixa), param);\r\n}\r\n\r\nexport function findSubGrupo(planoContaSubGrupoParam: PlanoContaSubGrupoParam, param: AxiosParam<any>) {\r\n  send(getService().post<any>('/findSubGrupo', planoContaSubGrupoParam), param);\r\n}\r\n\r\nexport function removerTodosPlanosConta(idGrupoPlanoConta: number, usuario: Usuario, param: AxiosParam<void>) {\r\n  send(\r\n    getService().post<void>('/removerTodosPlanosConta', { idGrupoPlanoConta, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function removeList(listaPlanoConta: PlanoConta[], apagarFilha: boolean, usuario: Usuario, param: AxiosParam<any>) {\r\n  send(\r\n    getService().post<any>('/removeList', { listaPlanoConta, apagarFilha, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function listSubGrupo(planoConta: PlanoConta, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().post<PlanoConta[]>('/listSubGrupo', planoConta), param);\r\n}\r\n\r\nexport function referenciarContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<void>\r\n) {\r\n  send(\r\n    getService().post<void>('/referenciarContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function desvincularContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<any>\r\n) {\r\n  send(\r\n    getService().post<void>('/desvincularContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function existeLancamentoEmContaAnalitica(idPlanoConta: number, idEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(\r\n    getService().post<boolean>('/existeLancamentoEmContaAnalitica', { idPlanoConta, idEmpresa }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function importarLancamentoMCG(data: ImportacaoLancamentoMCGSelecao, param: AxiosParam<ImportacaoLancamentoMCGRetornoValidacao>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('tipoImportacao', String(data.tipoImportacao));\r\n  formDataSend.append('sobescrever', String(data.sobescrever));\r\n  formDataSend.append('versaoSuperiorA2', String(data.versaoSuperiorA2));\r\n  formDataSend.append('arquivo', data.arquivo[0].file, data.arquivo[0].nomeArquivo);\r\n\r\n  if (data.versaoSuperiorA2 === false && !isEmpty(data.dtInicial) && !isEmpty(data.dtFinal)) {\r\n    formDataSend.append('dtInicial', data.dtInicial);\r\n    formDataSend.append('dtFinal', data.dtFinal);\r\n  }\r\n\r\n  send(getService().post<ImportacaoLancamentoMCGRetornoValidacao>('/importarLancamentoMCG', formDataSend), param);\r\n}\r\n\r\nexport function importarSpedContabil(data: ImportacaoSpedContabil, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function gerarManadContabil(data: MANADContabilCrit, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('refInicial', data.refInicial);\r\n  formDataSend.append('refFinal', data.refFinal);\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  if (!isEmpty(data.arquivoSFP)) {\r\n    formDataSend.append('arquivoSFP', data.arquivoSFP[0].file, data.arquivoSFP[0].nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<string>('/gerarManadContabil', formDataSend), param);\r\n}\r\n\r\nexport function evolucaoContaContabilGraf(\r\n  evolucaoContaContabilGrafParam: EvolucaoContaContabilGrafParam,\r\n  param: AxiosParam<EvolucaoContaContabilGrafReturn>\r\n) {\r\n  send(getService().post<EvolucaoContaContabilGrafReturn>('/evolucaoContaContabilGraf', evolucaoContaContabilGrafParam), param);\r\n}\r\n\r\nexport function composicaoReceitaDespesasGraf(\r\n  compReceitaDespesasGrafParam: ComposicaoReceitaDespesasGrafParam,\r\n  param: AxiosParam<ComposicaoReceitaDespesasGrafReturn>\r\n) {\r\n  send(getService().post<ComposicaoReceitaDespesasGrafReturn>('/composicaoReceitaDespesasGraf', compReceitaDespesasGrafParam), param);\r\n}\r\n\r\nexport function gerarFCONTContabil(fContContabilCrit: FCONTContabilCrit, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/gerarFCONTContabil', fContContabilCrit), param);\r\n}\r\n\r\nexport function obterDadosArquivoExtrato(arquivoSelecionado: ArquivoSelecionado, idBancoMCG, param: AxiosParam<BancoExtrato[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idBancoMCG', idBancoMCG);\r\n\r\n  formDataSend.append('arquivoSelecionado', arquivoSelecionado[0].file, arquivoSelecionado[0].nomeArquivo);\r\n\r\n  send(getService().post<BancoExtrato[]>('/obterDadosArquivoExtrato', formDataSend), param);\r\n}\r\n\r\nexport function obterDadosConciliacaoBancariaPeriodo(\r\n  idGrupoPlanoConta,\r\n  idEmpresa,\r\n  idBancoMCG,\r\n  dtInicial,\r\n  dtFinal,\r\n  param: AxiosParam<InfoConciliacaoBancaria>\r\n) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGrupoPlanoConta', String(idGrupoPlanoConta));\r\n  formDataSend.append('idEmpresa', String(idEmpresa));\r\n  formDataSend.append('idBancoMCG', String(idBancoMCG));\r\n  formDataSend.append('dtInicial', String(dtInicial));\r\n  formDataSend.append('dtFinal', String(dtFinal));\r\n\r\n  send(getService().post<InfoConciliacaoBancaria>('/obterDadosConciliacaoBancariaPeriodo', formDataSend), param);\r\n}\r\n\r\nexport function obterBancoListPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG[]>) {\r\n  send(getService().post<BancoMCG[]>('/obterBancoListPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function conciliarLancamentosExtrato(listConciliacaoBancaria: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/conciliarLancamentosExtrato', listConciliacaoBancaria), param);\r\n}\r\n\r\nexport function removerConciliarLancamentosExtrato(listaRemover: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerConciliarLancamentosExtrato', listaRemover), param);\r\n}\r\n\r\nexport function removerLancamentosExtratoBancario(listaRemover: BancoExtrato[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerLancamentosExtratoBancario', listaRemover), param);\r\n}\r\nexport function obterLancamentosSaldoPeriodo(\r\n  idGrupoPlanoConta,\r\n  idEmpresa,\r\n  dtInicial,\r\n  dtFinal,\r\n  historico,\r\n  valor,\r\n  operacaoConsultaValor,\r\n  param: AxiosParam<LancamentoConciliacao[]>\r\n) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGrupoPlanoConta', String(idGrupoPlanoConta));\r\n  formDataSend.append('idEmpresa', String(idEmpresa));\r\n  formDataSend.append('dtInicial', String(dtInicial));\r\n  formDataSend.append('dtFinal', String(dtFinal));\r\n  formDataSend.append('historico', String(historico));\r\n  formDataSend.append('valor', String(valor));\r\n  formDataSend.append('operacaoConsultaValor', String(operacaoConsultaValor));\r\n\r\n  send(getService().post<LancamentoConciliacao[]>('/obterLancamentosSaldoPeriodo', formDataSend), param);\r\n}\r\n\r\nexport function conciliarLancamentosConta(listaConciliacao: ConciliacaoConta[], param: AxiosParam<void>) {\r\n  send(getService().post<void>('/conciliarLancamentosConta', listaConciliacao), param);\r\n}\r\n\r\nexport function removerConciliarLancamentosConta(listaConciliarRemover: ConciliacaoConta[], param: AxiosParam<void>) {\r\n  send(getService().post<void>('/removerConciliarLancamentosConta', listaConciliarRemover), param);\r\n}\r\n\r\nexport function eLalurAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLalurAContas/' + id), param);\r\n}\r\n\r\nexport function eLacsAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLacsAContas/' + id), param);\r\n}\r\n\r\nexport function getSaldoDebito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoDebito', parametros), param);\r\n}\r\n\r\nexport function getSaldoCredito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoCredito', parametros), param);\r\n}\r\n\r\nexport function removerLancamentoLote(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/removerLancamentoLote', parametros), param);\r\n}\r\n\r\nexport function atualizaCalculoIrpjCsll(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/atualizaCalculoIrpjCsll', parametros), param);\r\n}\r\n\r\nexport function buscarLancamentosHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  param: AxiosParam<LancamentoIntegracaoHonorarios[]>\r\n) {\r\n  send(getService().post<LancamentoIntegracaoHonorarios[]>('/buscarLancamentosHonorarios', integracaoHonorariosParam), param);\r\n}\r\n\r\nexport function integrarHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  lancamentos: LancamentoIntegracaoHonorarios[],\r\n  param: AxiosParam<number>\r\n) {\r\n  send(\r\n    getService().post<number>('/integrarHonorarios', { integracaoHonorariosParam, lancamentos }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function isAlteraCalculoIRPJorCSLL(parametros: CalculoIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isAlteraCalculoIRPJorCSLL', parametros), param);\r\n}\r\n\r\nexport function alterarPlanoContaNaturezaConfig(idsPlanoConta: number[], enumPlanoContaNaturezaConta: number, param: AxiosParam<void>) {\r\n  send(\r\n    getService().post<void>('/alterarPlanoContaNaturezaConfig', { idsPlanoConta, enumPlanoContaNaturezaConta }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function prepararContaResultado(idGrupoPlanoConta: number, param: AxiosParam<void>) {\r\n  send(getService().get<void>('/prepararContaResultado/' + idGrupoPlanoConta), param);\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _objectSpread2 from \"@babel/runtime/helpers/esm/objectSpread\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Fade from './Fade';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  closeClassName: PropTypes.string,\n  closeAriaLabel: PropTypes.string,\n  cssModule: PropTypes.object,\n  color: PropTypes.string,\n  fade: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  tag: tagPropType,\n  transition: PropTypes.shape(Fade.propTypes),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  color: 'success',\n  isOpen: true,\n  tag: 'div',\n  closeAriaLabel: 'Close',\n  fade: true,\n  transition: _objectSpread2({}, Fade.defaultProps, {\n    unmountOnExit: true\n  })\n};\n\nfunction Alert(props) {\n  var className = props.className,\n      closeClassName = props.closeClassName,\n      closeAriaLabel = props.closeAriaLabel,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      color = props.color,\n      isOpen = props.isOpen,\n      toggle = props.toggle,\n      children = props.children,\n      transition = props.transition,\n      fade = props.fade,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"closeClassName\", \"closeAriaLabel\", \"cssModule\", \"tag\", \"color\", \"isOpen\", \"toggle\", \"children\", \"transition\", \"fade\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'alert', \"alert-\" + color, {\n    'alert-dismissible': toggle\n  }), cssModule);\n  var closeClasses = mapToCssModules(classNames('close', closeClassName), cssModule);\n\n  var alertTransition = _objectSpread2({}, Fade.defaultProps, {}, transition, {\n    baseClass: fade ? transition.baseClass : '',\n    timeout: fade ? transition.timeout : 0\n  });\n\n  return React.createElement(Fade, _extends({}, attributes, alertTransition, {\n    tag: Tag,\n    className: classes,\n    in: isOpen,\n    role: \"alert\",\n    innerRef: innerRef\n  }), toggle ? React.createElement(\"button\", {\n    type: \"button\",\n    className: closeClasses,\n    \"aria-label\": closeAriaLabel,\n    onClick: toggle\n  }, React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\")) : null, children);\n}\n\nAlert.propTypes = propTypes;\nAlert.defaultProps = defaultProps;\nexport default Alert;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport cx from 'clsx';\r\nimport React, { FC, MouseEvent, useState } from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport { Button, Nav, NavItem, NavLink, TabContent, TabPane } from 'reactstrap';\r\nimport { ColumnsProps, DefaultSortProps, dispatchClose, OrderType } from 'summer';\r\n\r\nexport interface ResultadoIntegracaoProps {\r\n  /** Lista de erros da integração */\r\n  errorList?: any[];\r\n  /** Lista de sucessos da integração */\r\n  successList?: any[];\r\n  /** History do navegador */\r\n  history?: any;\r\n  /** Relatório a ser impresso */\r\n  printReport?: any;\r\n  /** Oculta o botão para imprimir o relatório */\r\n  hidePrintButton?: boolean | false;\r\n  /** Texto da aba de sucesso */\r\n  tabSuccess?: string;\r\n  /** Texto da aba de falhas */\r\n  tabFailure?: string;\r\n}\r\n\r\nconst ResultadoIntegracao: FC<ResultadoIntegracaoProps> = props => {\r\n  const [activeTab, setActiveTab] = useState(1);\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'message',\r\n      sort: true,\r\n      text: 'Descrição',\r\n    },\r\n  ];\r\n\r\n  const defaultSorted: DefaultSortProps[] = [\r\n    {\r\n      dataField: 'message',\r\n      order: OrderType.ASC,\r\n    },\r\n  ];\r\n\r\n  const onClose = (goBack: boolean = true) => {\r\n    dispatchClose(props, props.history, goBack);\r\n  };\r\n\r\n  const handleCancel = () => onClose();\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Nav tabs={true}>\r\n        <NavItem>\r\n          <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n            {props.tabSuccess || 'Sucessos'}\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink className={cx({ active: activeTab === 2 })} tabIndex={2} onClick={toggleTab}>\r\n            {props.tabFailure || 'Falhas'}\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n        <TabPane tabId={1} className=\"mb-0 p-3\">\r\n          <div className=\"table-area\">\r\n            <BootstrapTable\r\n              bootstrap4={true}\r\n              bordered={true}\r\n              columns={columns}\r\n              condensed={true}\r\n              className=\"table-scroll\"\r\n              data={props.successList || []}\r\n              defaultSorted={defaultSorted}\r\n              hover={true}\r\n              keyField=\"id\"\r\n              noDataIndication=\"Nenhum registro a ser exibido.\"\r\n              responsive={true}\r\n              striped={true}\r\n              tabIndexCell={true}\r\n            />\r\n          </div>\r\n          <div key=\"divFotterKey\" className=\"text-left\">\r\n            Registros: {props.successList.length}\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tabId={2} className=\"mb-0 p-3\">\r\n          <div className=\"table-area\">\r\n            <BootstrapTable\r\n              bootstrap4={true}\r\n              bordered={true}\r\n              columns={columns}\r\n              condensed={true}\r\n              className=\"table-scroll\"\r\n              data={props.errorList || []}\r\n              defaultSorted={defaultSorted}\r\n              hover={true}\r\n              keyField=\"id\"\r\n              noDataIndication=\"Nenhum registro a ser exibido.\"\r\n              responsive={true}\r\n              striped={true}\r\n              tabIndexCell={true}\r\n            />\r\n          </div>\r\n          <div key=\"divFotterKey\" className=\"text-left\">\r\n            Registros: {props.errorList.length}\r\n          </div>\r\n        </TabPane>\r\n      </TabContent>\r\n\r\n      <div className=\"float-right\" style={{ marginTop: 10 }}>\r\n        <Button color=\"danger\" className=\"mr-2\" onClick={handleCancel}>\r\n          <FontAwesomeIcon icon=\"times\" /> Cancelar\r\n        </Button>\r\n      </div>\r\n      {props.hidePrintButton ? null : (\r\n        <div className=\"float-left\" style={{ marginTop: 10 }}>\r\n          <Button className=\"mr-2\" disabled={props.errorList.length === 0} onClick={props.printReport} color=\"success\">\r\n            <FontAwesomeIcon icon=\"paste\" /> Imprimir Falhas\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResultadoIntegracao;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasGrupoPlanoContas(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n\r\n  const msg: string =\r\n    ' O Grupo de Plano de Contas selecionado não está configurado. Para configuar acesse:' +\r\n    'Módulo Contábil > Manutenção > Grupos > Plano de Contas - \\n' +\r\n    'E configure os seguintes campos: Máscara, Dígito: Ativo, Passivo, Receita e Despesa.';\r\n\r\n  if (\r\n    !globalParameter.grupoEmpresaConfig &&\r\n    !globalParameter.grupoPlanoConta &&\r\n    !globalParameter.grupoPlanoConta.mascara &&\r\n    !globalParameter.grupoPlanoConta.digitoAtivo &&\r\n    !globalParameter.grupoPlanoConta.digitoPassivo &&\r\n    !globalParameter.grupoPlanoConta.digitoReceita &&\r\n    !globalParameter.grupoPlanoConta.digitoDespesa\r\n  ) {\r\n    result = msg;\r\n  }\r\n\r\n  return result;\r\n}\r\n"],"sourceRoot":""}
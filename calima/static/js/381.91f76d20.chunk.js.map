{"version":3,"sources":["models/enumerated/ger/modeloDocumentoEnum.ts","views/pages/mlf/especie/EspecieEditView.tsx","services/mlf.service.ts","models/dtos/ger/especie.ts"],"names":["MODELO_55","label","value","MODELO_57","MODELO_65","MODELO_67","MODELODOCUMENTOENUM_VALUES","EspecieEditView","props","selectedItem","getSelectedItem","formProps","useForm","defaultValues","mode","react_default","a","createElement","summer_esm","title","editViewProps","dtoClassName","CLASS_NAME","beforePersist","formData","done","params","message","onOkClick","type","AlertType","WARNING_YES_NO","modelo","isEmpty","alertManager","emit","ACTION_EVENTS","SHOW","findEspecieByModelo","errorFunction","mensagem","showToast","ERROR","thenFunction","result","verificarEspecie","async","Row","Col","Object","objectSpread2","validation","required","maxLength","id","isPrependLabel","inputProps","autoFocus","labelWidth","placeholder","inputDropDownProps","optionsProvider","InputType","DROP_DOWN","FormGroup","tag","CustomInput","innerRef","register","name","withTooltip","messagem","placement","propToolTip","__webpack_require__","d","__webpack_exports__","findReinfCFOPConfig","getLivroFolhaMLF","refazerLancamentosContabeis","refazerLancamentosReinf","findConfigReinfEmpresa","importarIntegracaoFiscalContabil","validarIE","summer__WEBPACK_IMPORTED_MODULE_0__","getService","create","isImportacao","param","send","post","idCFOP","get","concat","idGerEmpresa","refazerLancamentosContabeisParam","refazerLancamentosReinfParam","idEmpresaMlf","importarParam","inscricaoEstadual","unidadeFederacao"],"mappings":"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","file":"static/js/381.91f76d20.chunk.js","sourcesContent":["export const MODELO_01 = { label: '01 - Nota fiscal', value: 'modelo01' };\r\nexport const MODELO_1A = { label: '1A - Nota fiscal 1-A', value: 'modelo1A' };\r\nexport const MODELO_1B = { label: '1B - Nota fiscal avulsa', value: 'modelo1B' };\r\nexport const MODELO_02 = { label: '02 - Nota fiscal de venda a consumidor', value: 'modelo02' };\r\nexport const MODELO_03 = { label: '03 - Nota fiscal de entrada', value: 'modelo03' };\r\nexport const MODELO_04 = { label: '04 - Nota fiscal de produtor', value: 'modelo04' };\r\nexport const MODELO_06 = { label: '06 - Nota fiscal/conta de energia elétrica', value: 'modelo06' };\r\nexport const MODELO_07 = { label: '07 - Nota fiscal de serviço de transporte', value: 'modelo07' };\r\nexport const MODELO_08 = { label: '08 - Conhecimento de tranporte rodoviário de cargas', value: 'modelo08' };\r\nexport const MODELO_8B = { label: '8B - Conhecimento de tranporte de cargas avulso', value: 'modelo8B' };\r\nexport const MODELO_09 = { label: '09 - Conhecimento de tranporte aquaviário de cargas', value: 'modelo09' };\r\nexport const MODELO_10 = { label: '10 - Conhecimento aéreo', value: 'modelo10' };\r\nexport const MODELO_11 = { label: '11 - Conhecimento de tranporte ferroviário de cargas', value: 'modelo11' };\r\nexport const MODELO_13 = { label: '13 - Bilhete de passagem rodoviário', value: 'modelo13' };\r\nexport const MODELO_14 = { label: '14 - Bilhete de passagem aquaviário', value: 'modelo14' };\r\nexport const MODELO_15 = { label: '15 - Bilhete de passagem e nota de bagagem', value: 'modelo15' };\r\nexport const MODELO_16 = { label: '16 - Bilhete de passagem ferroviário', value: 'modelo16' };\r\nexport const MODELO_17 = { label: '17 - Despacho de tranporte', value: 'modelo17' };\r\nexport const MODELO_18 = { label: '18 - Resumo de movimento diário', value: 'modelo18' };\r\nexport const MODELO_20 = { label: '20 - Ordem de coleta de carga', value: 'modelo20' };\r\nexport const MODELO_21 = { label: '21 - Nota fiscal de serviço de comunicação', value: 'modelo21' };\r\nexport const MODELO_22 = { label: '22 - Nota fiscal de serviço de telecomunicações', value: 'modelo22' };\r\nexport const MODELO_24 = { label: '24 - Autorização de carregamento e tranporte', value: 'modelo24' };\r\nexport const MODELO_25 = { label: '25 - Manifesto de carga', value: 'modelo25' };\r\nexport const MODELO_26 = { label: '26 - Conhecimento de tranporte multimodal de cargas', value: 'modelo26' };\r\nexport const MODELO_27 = { label: '27 - Nota fiscal de serviço de tranporte ferroviário', value: 'modelo27' };\r\nexport const MODELO_28 = { label: '28 - Nota fiscal de Consumo Fornecimento de Gás', value: 'modelo28' };\r\nexport const MODELO_2B = { label: \"2B - Nota fiscal/Consta de Fornececimento de D'Agua Canalizada\", value: 'modelo2B' };\r\nexport const MODELO_2C = { label: '2C - Cupom fiscal emitido por máquima registradora (não ECF)', value: 'modelo2C' };\r\nexport const MODELO_2D = { label: '2D - Cupom fiscal PDV', value: 'modelo2D' };\r\nexport const MODELO_2E = { label: '2E - Cupom fiscal (emitido por ECF)', value: 'modelo2E' };\r\nexport const MODELO_55 = { label: '55 - Cupom fiscal bilhete de passagem', value: 'modelo55' };\r\nexport const MODELO_57 = { label: '57 - Nota fiscal eletrônica', value: 'modelo57' };\r\nexport const MODELO_58 = { label: '58 - Conhecimento de Transporte Eletrônico (CT-e)', value: 'modelo58' };\r\nexport const MODELO_59 = { label: '59 - Manifesto Eletrônico de Documentos Fiscais (MDF-e)', value: 'modelo59' };\r\nexport const MODELO_29 = { label: '29 - Cupom Fiscal Eletrônico (CF-e)', value: 'modelo29' };\r\nexport const MODELO_63 = { label: '63 - Bilhete de Passagem Eletrônico (BP-e)', value: 'modelo63' };\r\nexport const MODELO_65 = { label: '65 - Nota Fiscal de Consumidor Eletrônica  (NFC-e)', value: 'modelo65' };\r\nexport const MODELO_67 = { label: '67 - Conhecimento de Transporte Eletrônico para outros serviços (CT-e OS)', value: 'modelo67' };\r\n\r\nexport const DOCUMENTOS_ELETRONICOS_VALUES = [MODELO_55.value, MODELO_65.value, MODELO_67.value, MODELO_57.value];\r\n\r\nexport const MODELODOCUMENTOENUM_VALUES = [\r\n  MODELO_01,\r\n  MODELO_1A,\r\n  MODELO_1B,\r\n  MODELO_02,\r\n  MODELO_03,\r\n  MODELO_04,\r\n  MODELO_06,\r\n  MODELO_07,\r\n  MODELO_08,\r\n  MODELO_8B,\r\n  MODELO_09,\r\n  MODELO_10,\r\n  MODELO_11,\r\n  MODELO_13,\r\n  MODELO_14,\r\n  MODELO_15,\r\n  MODELO_16,\r\n  MODELO_17,\r\n  MODELO_18,\r\n  MODELO_20,\r\n  MODELO_21,\r\n  MODELO_22,\r\n  MODELO_24,\r\n  MODELO_25,\r\n  MODELO_26,\r\n  MODELO_27,\r\n  MODELO_28,\r\n  MODELO_2B,\r\n  MODELO_2C,\r\n  MODELO_2D,\r\n  MODELO_2E,\r\n  MODELO_55,\r\n  MODELO_57,\r\n  MODELO_58,\r\n  MODELO_59,\r\n  MODELO_29,\r\n  MODELO_63,\r\n  MODELO_65,\r\n  MODELO_67,\r\n];\r\n","import React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, CustomInput, FormGroup, Row } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  EditForm,\r\n  EditViewProps,\r\n  ERROR,\r\n  getSelectedItem,\r\n  InputGroupInline,\r\n  InputTooltipProps,\r\n  InputType,\r\n  isEmpty,\r\n  showToast,\r\n  WindowComponent,\r\n  withTooltip,\r\n} from 'summer';\r\nimport { CLASS_NAME, Especie } from '../../../../models/dtos/ger/especie';\r\nimport { MODELODOCUMENTOENUM_VALUES } from '../../../../models/enumerated/ger/modeloDocumentoEnum';\r\nimport { findEspecieByModelo } from '../../../../services/mlf.service';\r\n\r\ninterface EspecieEditViewProps extends EditViewProps<Especie> {}\r\n\r\nconst EspecieEditView: FC<EspecieEditViewProps & RouteComponentProps> = props => {\r\n  const selectedItem = getSelectedItem(props);\r\n\r\n  const formProps = useForm<Especie>({ defaultValues: selectedItem, mode: 'onBlur' });\r\n\r\n  const defaultWidth: number = 110;\r\n\r\n  const beforePersist = (formData: Especie, done: any) => {\r\n    const params: AlertProps = {\r\n      message: 'Modelo do Documento NÃO foi preenchido. Confirma a gravação?',\r\n      onOkClick: () => {\r\n        done(formData);\r\n      },\r\n      type: AlertType.WARNING_YES_NO,\r\n    };\r\n\r\n    if (formData.modelo === null || isEmpty(formData.modelo)) {\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else if (formData.modelo) {\r\n      verificarEspecie(formData, done);\r\n    }\r\n    return { async: true };\r\n  };\r\n\r\n  function verificarEspecie(formData: Especie, done: any): void {\r\n    findEspecieByModelo(formData.modelo, false, {\r\n      errorFunction: mensagem => {\r\n        showToast(mensagem, ERROR);\r\n      },\r\n      thenFunction: result => {\r\n        if (result) {\r\n          const params: AlertProps = {\r\n            message: 'Modelo do Documento já está cadastrado em outra Espécie. Confirma a gravação?',\r\n            onOkClick: () => {\r\n              done(formData);\r\n            },\r\n            type: AlertType.WARNING_YES_NO,\r\n          };\r\n          alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n        } else {\r\n          done(formData);\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  const propToolTip = (messagem: string): InputTooltipProps => {\r\n    return {\r\n      message: messagem,\r\n      placement: 'top-start',\r\n    };\r\n  };\r\n\r\n  return (\r\n    <WindowComponent title=\"Manutenção de Espécie\">\r\n      <EditForm formProps={formProps} editViewProps={props} dtoClassName={CLASS_NAME} beforePersist={beforePersist}>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true, maxLength: 8 } }}\r\n              id=\"abreviacao\"\r\n              isPrependLabel={true}\r\n              inputProps={{ autoFocus: true }}\r\n              label=\"Abreviação\"\r\n              labelWidth={defaultWidth}\r\n              placeholder=\"Informe a Abreviação da espécie.\"\r\n            />\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true, maxLength: 120 } }}\r\n              id=\"descricao\"\r\n              isPrependLabel={true}\r\n              label=\"Descrição\"\r\n              labelWidth={defaultWidth}\r\n              placeholder=\"Informe a descrição\"\r\n            />\r\n            <InputGroupInline\r\n              formProps={{ ...formProps }}\r\n              id=\"modelo\"\r\n              inputDropDownProps={{ optionsProvider: MODELODOCUMENTOENUM_VALUES }}\r\n              isPrependLabel={true}\r\n              label=\"Modelo do Documento\"\r\n              placeholder=\"Informe o Modelo do Documento\"\r\n              type={InputType.DROP_DOWN}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <FormGroup tag={Row}>\r\n          <Col>\r\n            <CustomInput\r\n              id=\"cupomFiscalMaqReg\"\r\n              innerRef={formProps.register}\r\n              label=\"Espécie para Cupom Fiscal ou Máquina Registradora (ECF, CF, CMR)\"\r\n              name=\"cupomFiscalMaqReg\"\r\n              type=\"switch\"\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup tag={Row}>\r\n          <Col>\r\n            <CustomInput\r\n              id=\"sequenciarNotas\"\r\n              innerRef={formProps.register}\r\n              label=\"Habilitar intervalo de Notas Fiscais\"\r\n              name=\"sequenciarNotas\"\r\n              type=\"switch\"\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup tag={Row}>\r\n          <Col>\r\n            <CustomInput\r\n              id=\"naoValidarParticipante\"\r\n              innerRef={formProps.register}\r\n              label=\"Não exigir o preenchimento do Participante nos lançamentos de entrada/saída\"\r\n              name=\"naoValidarParticipante\"\r\n              type=\"switch\"\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup tag={Row}>\r\n          <Col>\r\n            <CustomInput id=\"idhabilitarReinf\" innerRef={formProps.register} label=\"Habilitar aba do EFD-Reinf\" name=\"habilitarReinf\" type=\"switch\" />\r\n            {withTooltip(\r\n              propToolTip('Habilita a aba do EFD-Reinf para lançamento de informações utilizadas nos eventos R-2010 e R-2020.'),\r\n              'habilitarReinf'\r\n            )}\r\n          </Col>\r\n        </FormGroup>\r\n      </EditForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default EspecieEditView;\r\n","import { AxiosInstance } from 'axios';\r\nimport { AxiosParam, create, send } from 'summer';\r\nimport { Cfop } from '../models/dtos/ger/cfop';\r\nimport { Especie } from '../models/dtos/ger/especie';\r\nimport { ConfigLivroMLF } from '../models/dtos/mlf/configLivroMLF';\r\nimport { ConfigReinf } from '../models/dtos/mlf/configReinf';\r\nimport { ImportarIntegracaoFiscalContabilParam } from '../models/dtos/mlf/importarIntegracaoFiscalContabilParam';\r\nimport { RefazerLancamentosContabeisParam } from '../models/dtos/mlf/refazerLancamentosContabeisParam';\r\nimport { RefazerLancamentosReinfParam } from '../models/dtos/mlf/refazerLancamentosReinfParam';\r\n\r\nfunction getService(): AxiosInstance {\r\n  return create('/mlf');\r\n}\r\n\r\nexport function findEspecieByModelo(modelo: string, isImportacao: boolean, param: AxiosParam<Especie>) {\r\n  send(\r\n    getService().post<Especie>('/findEspecieByModelo', { modelo, isImportacao }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function findReinfCFOPConfig(idCFOP: number, param: AxiosParam<Cfop>) {\r\n  send(getService().get<Cfop>(`/findReinfCFOPConfig/${idCFOP}`), param);\r\n}\r\n\r\nexport function getLivroFolhaMLF(idGerEmpresa: number, param: AxiosParam<ConfigLivroMLF>) {\r\n  send(getService().get<ConfigLivroMLF>(`/getLivroFolhaMLF/${idGerEmpresa}`), param);\r\n}\r\n\r\nexport function refazerLancamentosContabeis(refazerLancamentosContabeisParam: RefazerLancamentosContabeisParam, param: AxiosParam<any>) {\r\n  send(getService().post<RefazerLancamentosContabeisParam>('/refazerLancamentosContabeis', refazerLancamentosContabeisParam), param);\r\n}\r\n\r\nexport function refazerLancamentosReinf(refazerLancamentosReinfParam: RefazerLancamentosReinfParam, param: AxiosParam<any>) {\r\n  send(getService().post<RefazerLancamentosReinfParam>('/refazerLancamentosReinf', refazerLancamentosReinfParam), param);\r\n}\r\n\r\nexport function findConfigReinfEmpresa(idEmpresaMlf: number, param: AxiosParam<any>) {\r\n  send(getService().get<ConfigReinf>(`/findConfigReinfEmpresa/${idEmpresaMlf}`), param);\r\n}\r\n\r\nexport function importarIntegracaoFiscalContabil(importarParam: ImportarIntegracaoFiscalContabilParam, param: AxiosParam<any>) {\r\n  send(getService().post<any>('/importarIntegracaoFiscalContabil', importarParam), param);\r\n}\r\n\r\nexport function validarIE(inscricaoEstadual: string, unidadeFederacao: string, param: AxiosParam<boolean>) {\r\n  send(\r\n    getService().post<boolean>('/validarIE', { inscricaoEstadual, unidadeFederacao }),\r\n    param\r\n  );\r\n}\r\n","import { Basic } from 'summer';\r\n\r\nexport interface Especie extends Basic {\r\n  abreviacao?: string;\r\n  descricao?: string;\r\n  cupomFiscalMaqReg?: boolean;\r\n  modelo?: string;\r\n  sequenciarNotas?: boolean;\r\n  naoValidarParticipante?: boolean;\r\n  habilitarReinf?: boolean;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.especie';\r\n"],"sourceRoot":""}
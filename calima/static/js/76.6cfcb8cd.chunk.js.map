{"version":3,"sources":["views/pages/mfp/report/relacao/salarioFamiliaRV.ts","views/pages/mfp/report/relacao/SalarioFamiliaReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","dependencies/empresaMFPDependency.ts","dependencies/grupoEmpresaConfigDependency.ts","models/dtos/mfp/trabalhadorExample.ts","views/components/mfp/trabalhadorIS/TrabalhadorIS.tsx"],"names":["DEFAULT_VALUES","Object","objectSpread2","getDefaultReportBasicValues","DEFAULT_OPTIONS","getDefaultReportViewOptions","exibirConfiguracaoDadosEmpresa","SalarioFamiliaReportView","props","globalParameter","useSelector","state","globalReducer","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","objectWithoutProperties","useEffect","setTimeout","setValue","empresaMFP","referencia","react_default","a","createElement","summer_esm","title","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMFP","hasGrupoEmpresaConfig","ReportForm","assign","localStorageKey","routeProps","reportBasicValues","reportViewOptions","Row","Col","TrabalhadorIS","id","label","placeholder","isPrependLabel","inputSearchProps","selectProps","isMulti","tooltipProps","message","validation","required","type","InputType","REFERENCE","result","empresa","__webpack_require__","d","__webpack_exports__","NATUREZA","value","SALDO_REPORT_ENUM","EmpresaIS","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","empresasSelecionadas","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","gerarCabecalhoPadraoAdministradora","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","virtualization","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","errors","getValues","register","triggerValidation","handleCancel","validateExtras","currentItem","currentValues","parentObject","EnvioEmail","Fragment","sort","detailView","keyField","propName","className","CustomInput","name","innerRef","maxLength","TEXT_AREA","ReportInputs","_useState","useState","_useState2","slicedToArray","activeTab","setActiveTab","_props$reportViewOpti","printingTypes","resetObject","length","idGerEmpresa","current","currentMomentDate","endDate","DATE","dtInicial","formatDate","toDate","DATES","dtFinal","endOf","referenciaInicial","format","REF_PATTERN","REFERENCES","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dtInicialRequired","dateComponent","datesComponent","dtFinalRequired","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","NUMBER","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","inputProps","disabled","gerarPorEmpresas","style","marginBottom","size","segmentacaoFolhaComponent","exibirSegmentacaoFolha","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","exibirImprimirValoresColoridos","inputDropDownProps","optionsProvider","isClearable","DROP_DOWN","firstOpen","extraConfigOpened","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","hidden","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","erros","params","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history","grupoEmpresaRaiz","grupoEmpresaConfig","grupoEmpresa","summer__WEBPACK_IMPORTED_MODULE_3__","searchExpressions","fieldName"],"mappings":"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","file":"static/js/76.6cfcb8cd.chunk.js","sourcesContent":["import { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { TrabalhadorExample } from '../../../../../models/dtos/mfp/trabalhadorExample';\r\n\r\nexport interface SalarioFamiliaRV extends ReportBasicValues {\r\n  referencia?: string;\r\n  trabalhadores?: TrabalhadorExample[];\r\n}\r\n\r\nexport const CLASS_KEY: string = 'salariofamiliarv';\r\nexport const REPORT_EVENT: string = 'printSalarioFamilia';\r\nexport const REPORT_TITLE: string = 'Relação de Salário Família';\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { InputGroupInline, InputType, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMFP } from '../../../../../dependencies/empresaMFPDependency';\r\nimport { hasGrupoEmpresaConfig } from '../../../../../dependencies/grupoEmpresaConfigDependency';\r\nimport { getDefaultReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport TrabalhadorIS from '../../../../components/mfp/trabalhadorIS/TrabalhadorIS';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { CLASS_KEY, REPORT_EVENT, REPORT_TITLE, SalarioFamiliaRV } from './salarioFamiliaRV';\r\n\r\nconst DEFAULT_VALUES: SalarioFamiliaRV = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT),\r\n  exibirConfiguracaoDadosEmpresa: false,\r\n};\r\n\r\nconst SalarioFamiliaReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const { globalParameter } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const { handleSubmit, ...formProps } = useForm<SalarioFamiliaRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n\r\n  useEffect(\r\n    () => {\r\n      setTimeout(() => {\r\n        formProps.setValue('referencia', globalParameter.empresaMFP.referencia);\r\n      }, 200);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Relação de Salário Família\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalParameter}\r\n      dependencies={[() => hasEmpresa(globalParameter), () => hasEmpresaMFP(globalParameter), () => hasGrupoEmpresaConfig(globalParameter)]}\r\n    >\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n      >\r\n        <Row>\r\n          <Col>\r\n            <TrabalhadorIS\r\n              id=\"vinculosSelecionados\"\r\n              formProps={formProps}\r\n              label=\"Trabalhadores\"\r\n              placeholder=\"Selecione os Trabalhadores\"\r\n              isPrependLabel={true}\r\n              inputSearchProps={{ selectProps: { isMulti: true } }}\r\n              tooltipProps={{ message: 'Selecionar trabalhadores. Caso nenhum seja selecionado todos serão exibidos.' }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <InputGroupInline\r\n              formProps={{ ...formProps, validation: { required: true } }}\r\n              id=\"referencia\"\r\n              label=\"Referência\"\r\n              placeholder=\"Informe a Referência\"\r\n              isPrependLabel={true}\r\n              type={InputType.REFERENCE}\r\n              tooltipProps={{ message: 'Selecione a referência onde a relação sera obtida.' }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </ReportForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default SalarioFamiliaReportView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMFP(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMFP) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o Módulo Folha de Pagamento. Para configurá-la acesse Manutenção > Configurações > Empresa';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasGrupoEmpresaConfig(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n\r\n  const msg: string =\r\n    'O Grupo de empresas não está configurado para a empresa selecionada. Para configurar acesse:\\n' +\r\n    'Modulo Principal > Manutenção > Configurações > Grupo de Empresa';\r\n\r\n  if (\r\n    !globalParameter.empresa ||\r\n    !globalParameter.empresa.grupoEmpresaRaiz.grupoEmpresaConfig ||\r\n    !globalParameter.empresa.grupoEmpresa.grupoEmpresaConfig\r\n  ) {\r\n    result = msg;\r\n  }\r\n\r\n  return result;\r\n}\r\n","import { Basic } from 'summer';\r\nimport { CepUF } from '../ger/cepUF';\r\nimport { EmpresaMFP } from './empresaMFP';\r\n\r\nexport interface TrabalhadorExample extends Basic {\r\n  carteiraTrabalhoDataEmissao?: Date;\r\n  carteiraTrabalhoNumero?: string;\r\n  carteiraTrabalhoSerie?: string;\r\n  carteiraTrabalhoUF?: CepUF;\r\n  codigo?: number;\r\n  cpf?: string;\r\n  dataNascimento?: Date;\r\n  dataValidadeVisto?: Date;\r\n  empresaMFP?: EmpresaMFP;\r\n  /** este campo utiliza o enum EstadoCivilEnum */\r\n  estadoCivil?: string;\r\n  identidade?: string;\r\n  identidadeComplemento?: string;\r\n  identidadeDataEmissao?: Date;\r\n  identidadeOrgaoExpedidor?: string;\r\n  identidadeUF?: CepUF;\r\n  /** este campo utiliza o enum NacionalidadeEnum */\r\n  nacionalidade?: string;\r\n  nome?: string;\r\n  passaporteNumero?: string;\r\n  pis?: string;\r\n  secaoEleitoral?: string;\r\n  tituloEleitor?: string;\r\n  zonaEleitoral?: string;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.mfp.model.dto.trabalhadorexample';\r\n","import React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/mfp/trabalhadorExample';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\nconst TrabalhadorIS: FC<InputProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const getSearchExpressions = (): SearchExpression[] => {\r\n    let result = null;\r\n\r\n    if (props.inputSearchProps.searchExpressions) {\r\n      result = props.inputSearchProps.searchExpressions();\r\n    } else {\r\n      result = [\r\n        {\r\n          fieldName: 'empresaMFP.id',\r\n          value: globalReducer.globalParameter.empresaMFP.id,\r\n        },\r\n      ];\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      type={InputType.INPUT_SEARCH}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'nome',\r\n            text: 'Nome',\r\n          },\r\n          {\r\n            dataField: 'identidade',\r\n            text: 'RG',\r\n          },\r\n          {\r\n            dataField: 'carteiraTrabalhoNumero',\r\n            text: 'Nº Carteira Trab.',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressions: getSearchExpressions,\r\n        searchViewId: 'TrabalhadorSearchView',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TrabalhadorIS;\r\n"],"sourceRoot":""}
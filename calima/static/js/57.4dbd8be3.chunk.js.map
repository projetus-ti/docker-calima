{"version":3,"sources":["views/pages/mcg/report/historicoPlanoConta/historicoPlanoContaRV.ts","views/pages/mcg/report/historicoPlanoConta/HistoricoPlanoContaReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","dependencies/grupoEmpresaConfigDependency.ts","dependencies/empresaMCGDependency.ts","views/components/mcg/planoContaIS/PlanoContaIS.tsx","models/dtos/ger/planoConta.ts","models/enumerated/mcg/consolidarEnum.ts"],"names":["DEFAULT_VALUES","Object","objectSpread2","getDefaultReportBasicValues","consolidacao","NORMAL","value","isAcumularMatrizFilial","DEFAULT_OPTIONS","getDefaultReportViewOptions","REFERENCES","exibirConfiguracaoDadosEmpresa","HistoricoPlanoContaReportView","props","globalReducer","useSelector","state","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","isMatriz","setIsMatriz","useEffect","isEmpty","globalParameter","empresa","setTimeout","matriz","setValue","centralizar","react_default","a","createElement","summer_esm","title","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMCG","hasGrupoEmpresaConfig","FormGroup","tag","Row","Col","CustomInput","type","label","name","id","inline","innerRef","register","PlanoContaIS","validation","required","inputDropDownProps","optionsProvider","CONSOLIDAR_ENUM_VALUES","selectProps","isClearable","isPrependLabel","placeholder","InputType","DROP_DOWN","ReportForm","assign","localStorageKey","routeProps","reportBasicValues","reportViewOptions","result","__webpack_require__","d","__webpack_exports__","NATUREZA","SALDO_REPORT_ENUM","EmpresaIS","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","inputSearchProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","empresasSelecionadas","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","gerarCabecalhoPadraoAdministradora","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","virtualization","reportEventType","reportViewType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","errors","getValues","triggerValidation","handleCancel","validateExtras","currentItem","currentValues","parentObject","EnvioEmail","Fragment","sort","detailView","keyField","propName","className","maxLength","TEXT_AREA","ReportInputs","activeTab","setActiveTab","_props$reportViewOpti","printingTypes","resetObject","length","idGerEmpresa","current","currentMomentDate","endDate","DATE","dtInicial","formatDate","toDate","DATES","dtFinal","endOf","REFERENCE","referenciaInicial","format","REF_PATTERN","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dtInicialRequired","dateComponent","datesComponent","dtFinalRequired","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","NUMBER","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","inputProps","disabled","gerarPorEmpresas","style","marginBottom","size","isMulti","segmentacaoFolhaComponent","exibirSegmentacaoFolha","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","exibirImprimirValoresColoridos","firstOpen","extraConfigOpened","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","hidden","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","erros","params","message","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history","grupoEmpresaRaiz","grupoEmpresaConfig","grupoEmpresa","empresaMCG","summer__WEBPACK_IMPORTED_MODULE_3__","searchViewProps","filtroContaResultado","hideExtraFields","useDefaultSelectRow","searchExpressions","expressions","analitica","alias","conditionalGroup","fieldName","sintetica","push","idGrupoPlanoConta","grupoPlanoConta","forEach","filtro","NORMAL_NUMBER","GRUPO_ATUAL_NUMBER","CONSOLIDAR_NUMBER_ENUM_VALUES"],"mappings":"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","file":"static/js/57.4dbd8be3.chunk.js","sourcesContent":["import { PlanoConta } from '../../../../../models/dtos/ger/planoConta';\r\nimport { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\n\r\nexport interface HistoricoPlanoContaRV extends ReportBasicValues {\r\n  consolidacao?: string;\r\n  isAcumularMatrizFilial?: boolean;\r\n  planoConta?: PlanoConta;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'historicoplanocontarv';\r\nexport const REPORT_EVENT: string = 'printHistoricoPlanoConta';\r\nexport const REPORT_TITLE: string = 'Histórico de Plano de Contas';\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, CustomInput, FormGroup, Row } from 'reactstrap';\r\nimport { InputGroupInline, InputType, isEmpty, REFERENCES, WindowComponent, WindowComponentProps } from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../../dependencies/empresaMCGDependency';\r\nimport { hasGrupoEmpresaConfig } from '../../../../../dependencies/grupoEmpresaConfigDependency';\r\nimport { getDefaultReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport { CONSOLIDAR_ENUM_VALUES, NORMAL } from '../../../../../models/enumerated/mcg/consolidarEnum';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport PlanoContaIS from '../../../../components/mcg/planoContaIS/PlanoContaIS';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { CLASS_KEY, HistoricoPlanoContaRV, REPORT_EVENT, REPORT_TITLE } from './historicoPlanoContaRV';\r\n\r\nconst DEFAULT_VALUES: HistoricoPlanoContaRV = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n  consolidacao: NORMAL.value,\r\n  isAcumularMatrizFilial: false,\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT, REFERENCES.value),\r\n  exibirConfiguracaoDadosEmpresa: false,\r\n};\r\n\r\nconst HistoricoPlanoContaReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const { handleSubmit, ...formProps } = useForm<HistoricoPlanoContaRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n  const [isMatriz, setIsMatriz] = useState(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!isEmpty(globalReducer.globalParameter.empresa)) {\r\n        const empresa = globalReducer.globalParameter.empresa;\r\n        setTimeout(() => {\r\n          if (empresa.matriz === null) {\r\n            formProps.setValue('isAcumularMatrizFilial', empresa.centralizar);\r\n            setIsMatriz(true);\r\n          }\r\n        }, 500);\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Histórico de Plano de Contas\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[\r\n        () => hasEmpresa(globalReducer.globalParameter),\r\n        () => hasEmpresaMCG(globalReducer.globalParameter),\r\n        () => hasGrupoEmpresaConfig(globalReducer.globalParameter),\r\n      ]}\r\n    >\r\n      {isMatriz ? (\r\n        <FormGroup tag={Row}>\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              label=\"Acumular Matriz e Filiais\"\r\n              name=\"isAcumularMatrizFilial\"\r\n              id=\"isAcumularMatrizFilial\"\r\n              inline={true}\r\n              innerRef={formProps.register}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n      ) : null}\r\n      <Row>\r\n        <Col>\r\n          <PlanoContaIS id=\"planoConta\" formProps={{ ...formProps, validation: { required: true } }} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroupInline\r\n            formProps={{ ...formProps, validation: { required: true } }}\r\n            id=\"consolidacao\"\r\n            inputDropDownProps={{\r\n              optionsProvider: CONSOLIDAR_ENUM_VALUES,\r\n              selectProps: { isClearable: false },\r\n            }}\r\n            isPrependLabel={true}\r\n            label=\"Consolidação\"\r\n            placeholder=\"Selecione o Tipo de Consolidação\"\r\n            type={InputType.DROP_DOWN}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n      />\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default HistoricoPlanoContaReportView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasGrupoEmpresaConfig(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n\r\n  const msg: string =\r\n    'O Grupo de empresas não está configurado para a empresa selecionada. Para configurar acesse:\\n' +\r\n    'Modulo Principal > Manutenção > Configurações > Grupo de Empresa';\r\n\r\n  if (\r\n    !globalParameter.empresa ||\r\n    !globalParameter.empresa.grupoEmpresaRaiz.grupoEmpresaConfig ||\r\n    !globalParameter.empresa.grupoEmpresa.grupoEmpresaConfig\r\n  ) {\r\n    result = msg;\r\n  }\r\n\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMCG(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMCG) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o módulo Contábil. Para configurá-la acesse:\\n' +\r\n      'Módulo Contábil > Manutenção > Configurações > Empresa.';\r\n  }\r\n  return result;\r\n}\r\n","import React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { InputGroupInline, InputProps, InputType, SearchExpression } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/planoConta';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\nexport interface PlanoContaInputSearchProps extends InputProps {\r\n  analitica?: boolean;\r\n  sintetica?: boolean;\r\n  idGrupoPlanoConta?: number;\r\n  filtroContaResultado?: SearchExpression[];\r\n}\r\n\r\nconst PlanoContaIS: FC<PlanoContaInputSearchProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  function getSearchExpression(): SearchExpression[] {\r\n    let expressions = [];\r\n    if (props.analitica) {\r\n      expressions = [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'analitica',\r\n          value: true,\r\n        },\r\n      ];\r\n    }\r\n    if (props.sintetica) {\r\n      expressions = [\r\n        {\r\n          alias: 'c',\r\n          conditionalGroup: 'c_',\r\n          fieldName: 'analitica',\r\n          value: false,\r\n        },\r\n      ];\r\n    }\r\n\r\n    expressions.push({\r\n      alias: 'g',\r\n      conditionalGroup: 'g_',\r\n      fieldName: 'grupoPlanoConta.id',\r\n      value: props.idGrupoPlanoConta || globalReducer.globalParameter.grupoPlanoConta.id,\r\n    });\r\n\r\n    if (props.filtroContaResultado) {\r\n      props.filtroContaResultado.forEach(filtro => {\r\n        expressions.push(filtro);\r\n      });\r\n    }\r\n\r\n    return expressions;\r\n  }\r\n\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      searchViewProps={{\r\n        ...props.searchViewProps,\r\n        filtroContaResultado: props.filtroContaResultado,\r\n        hideExtraFields: true,\r\n        useDefaultSelectRow: true,\r\n      }}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'conta',\r\n            text: 'Conta',\r\n          },\r\n          {\r\n            dataField: 'analitica',\r\n            text: 'Analítica',\r\n          },\r\n          {\r\n            dataField: 'codigoReduzido',\r\n            text: 'C.R.',\r\n          },\r\n          {\r\n            dataField: 'descricao',\r\n            text: 'Descrição',\r\n          },\r\n        ],\r\n        dtoClassName: CLASS_NAME,\r\n        searchExpressions: getSearchExpression,\r\n        searchViewId: 'PlanoContaSearchView',\r\n      }} // TODO Implementar as regras do IS\r\n      label={props.label ? props.label : 'Plano de Contas'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe o Plano de Contas'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PlanoContaIS;\r\n","import { Basic } from 'summer';\r\nimport { PlanoContaMCG } from '../mcg/planoContaMCG';\r\nimport { SaldoAnterior } from '../mcg/saldoAnterior';\r\nimport { PlanoContaMCP } from '../mcp/planoContaMCP';\r\nimport { GrupoPlanoConta } from './grupoPlanoConta';\r\n\r\nexport interface PlanoConta extends Basic {\r\n  analitica?: boolean;\r\n  conta?: string;\r\n  codigoReduzido?: number;\r\n  descricao?: string;\r\n  grupoPlanoConta?: GrupoPlanoConta;\r\n  mcgPlanoConta?: PlanoContaMCG;\r\n  mcpPlanoConta?: PlanoContaMCP;\r\n  saldoAnterior?: SaldoAnterior;\r\n}\r\n\r\nexport const CLASS_NAME = 'br.com.projetusinformatica.calima.ger.model.dto.planoconta';\r\n","export const NORMAL = { value: '1', label: 'Normal' };\r\nexport const GRUPO_ATUAL = { value: '2', label: 'Grupo Atual' };\r\nexport const HIERARQUIA_INFERIOR = { value: '3', label: 'Hierarquia Inferior' };\r\n\r\nexport const CONSOLIDAR_ENUM_VALUES = [NORMAL, GRUPO_ATUAL, HIERARQUIA_INFERIOR];\r\n\r\nexport const NORMAL_NUMBER = { value: 1, label: 'Normal' };\r\nexport const GRUPO_ATUAL_NUMBER = { value: 2, label: 'Grupo Atual' };\r\nexport const HIERARQUIA_INFERIOR_NUMBER = { value: 3, label: 'Hierarquia Inferior' };\r\n\r\nexport const CONSOLIDAR_NUMBER_ENUM_VALUES = [NORMAL_NUMBER, GRUPO_ATUAL_NUMBER, HIERARQUIA_INFERIOR_NUMBER];\r\n"],"sourceRoot":""}
{"version":3,"sources":["views/pages/mcg/integracaoMFP/IntegracaoFolhaPagamentoProcessView.tsx","dependencies/empresaDependency.ts","dependencies/empresaMCGDependency.ts","services/mcg.service.ts"],"names":["IntegracaoFolhaPagamentoProcessView","props","globalReducer","useSelector","state","formProps","useForm","defaultValues","cooperativa","decimoTerceiro","ferias","fgtsDecimoTerceiro","fgtsFerias","geral","gerarPelaDataPagamento","grrfCsll","grrfMulta","inssDecimoTerceiro","inssFerias","isFuncionario","isSocio","isTerceiro","produtorRural","segundaParcela13","terceirosTransportador","mode","dispatch","useDispatch","_useState","useState","_useState2","Object","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","isLancamentoIntegracaoFolha","setIsLancamentoIntegracaoFolha","_useState3","_useState4","selectedItems","setSelectedItems","useEffect","globalParameter","empresa","_globalReducer$global","id","referencia","empresaMFP","setTimeout","setValue","setPropertyRefAndEmp","columns","dataField","hidden","text","editable","sort","formatter","cell","row","planoContaDebito","conta","descricao","planoContaCredito","centroCustoDebito","codigo","centroCustoCredito","decimalFormatter","selectRow","clickToSelect","SelectModeEnum","CHECKBOX","onSelect","isSelect","filter","it","onSelectAll","rows","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","summer__WEBPACK_IMPORTED_MODULE_12__","title","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMCG","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","className","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","validation","required","isPrependLabel","label","placeholder","type","InputType","REFERENCE","reactstrap__WEBPACK_IMPORTED_MODULE_10__","name","value","innerRef","register","reactstrap__WEBPACK_IMPORTED_MODULE_11__","onClick","handleSubmit","data","progressActions","showProgress","animated","now","gerarLancamentosFolhaPagamento","errorFunction","mensagem","showToast","ERROR","hideProgress","thenFunction","result","callIntegracao","color","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__","icon","length","integrarFolhaPagamento","params","message","AlertType","INFORMATION","alertManager","emit","ACTION_EVENTS","SHOW","WARNING","goBack","dispatchClose","history","onClose","react_bootstrap_table_next__WEBPACK_IMPORTED_MODULE_4___default","keyField","responsive","striped","__webpack_require__","d","__webpack_exports__","empresaMCG","getService","create","integracaoFolhaParam","param","send","post","lancamentoIntegracaoFolha","integrarMCP","importarParam","importarLancamentoCSV","formDataSend","FormData","append","String","importarDuplicados","importarLancamentosCardinal","_step","_iterator","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__","arquivos","s","n","done","arquivo","file","nomeArquivo","err","e","f","importarLancamentoPadraoCSV","_step2","_iterator2","importarHistoricoCSV","grupoHistoricoDestino","_step3","_iterator3","importarPlanoContaCSV","idEmpresa","grupoPlanoContaDestino","_step4","_iterator4","importarHistorico","importacaoHistorico","importarPlanoConta","importacaoPlanoContaParam","buscarConfigLivroFolhaMCG","get","integracaoFiscalContabil","encerrarContas","contaResultadoEncerramento","force","getDataUltimaContaEncerrada","idGerEmpresa","limparEncerramentoContaResultado","contaResultadoLimpeza","validarReferenciaSPEDECFIrpjCsll","configECFIrpjCsll","validarReferenciaSPEDECFImuneIsenta","configECFImuneIsenta","validarRefRemuneracaoSocio","configECFRemuneracaoSocio","validarQuadroSocietario","configQuadro","obterLucroPrejuizoClassificacao","idGrupoPlanoConta","getSaldo","saldo","validarDadosSpedECF","ecfExportacaoParam","gerarSpedECF","usuario","getArquivoDigitalService","recuperarLancamentoConta","transferenciaLancamentoConta","transferirLancamentoConta","obterBancoPlanoConta","bancoPlanoContaDTO","validarConfigLivroFolha","changeLivroFolha","fecharRestaurar","fechamentoRestauracao","forceFecharRestaurar","verificarErros","erros","gerarSpedContabil","selecaoSped","arquivoRTFEscrituracaoSubstituida","_step5","_iterator5","atributoSelecaoSped","salvarLucroPrejuizoClassificacao","lucroPrejuizoClassificacao","consultarMovimentacao","saldoCriteria","totalizadorLancamento","consulta","getSaldoAnterior","isDataEncerrada","parametros","abrirContas","removeLancamentoPeriodo","obterContasClassificacaoIndireto","salvarClassificacaoIndireto","contaFluxoCaixaIndireto","obterMutacaoPatrimonioLiquido","salvarMutacaoPatrimonioLiquido","mutacaoPatrimonioLiquido","salvarContaResultado","contaResultado","excluirContaResultado","obterContasClassificacaoDireto","salvarClassificacaoDireto","contaFluxoCaixa","findSubGrupo","planoContaSubGrupoParam","removerTodosPlanosConta","removeList","listaPlanoConta","apagarFilha","listSubGrupo","planoConta","referenciarContas","idsPlanoConta","idPlanoContaReferencial","idPlanoContaReferencialECF","desvincularContas","existeLancamentoEmContaAnalitica","idPlanoConta","importarLancamentoMCG","tipoImportacao","sobescrever","versaoSuperiorA2","isEmpty","dtInicial","dtFinal","importarSpedContabil","_step6","_iterator6","gerarManadContabil","refInicial","refFinal","arquivoSFP","evolucaoContaContabilGraf","evolucaoContaContabilGrafParam","composicaoReceitaDespesasGraf","compReceitaDespesasGrafParam","gerarFCONTContabil","fContContabilCrit","obterDadosArquivoExtrato","arquivoSelecionado","idBancoMCG","obterDadosConciliacaoBancariaPeriodo","obterBancoListPlanoConta","conciliarLancamentosExtrato","listConciliacaoBancaria","removerConciliarLancamentosExtrato","listaRemover","removerLancamentosExtratoBancario","eLalurAContas","eLacsAContas","getSaldoDebito","getSaldoCredito","removerLancamentoLote","atualizaCalculoIrpjCsll","buscarLancamentosHonorarios","integracaoHonorariosParam","integrarHonorarios","lancamentos","isAlteraCalculoIRPJorCSLL"],"mappings":"+PA6ZeA,UA3X4FC,KACzG,MAAMC,EAAgBC,YAAmCC,GAASA,EAAMF,eAClEG,EAAYC,YAAa,CAC7BC,cAAe,CACbC,aAAa,EACbC,gBAAgB,EAChBC,QAAQ,EACRC,oBAAoB,EACpBC,YAAY,EACZC,OAAO,EACPC,uBAAwB,OACxBC,UAAU,EACVC,WAAW,EACXC,oBAAoB,EACpBC,YAAY,EACZC,eAAe,EACfC,SAAS,EACTC,YAAY,EACZC,eAAe,EACfC,kBAAkB,EAClBC,wBAAwB,GAE1BC,KAAM,WAGFC,EAAWC,cAzBiGC,EA0B5CC,mBAAS,MA1BmCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GA0B3GK,EA1B2GH,EAAA,GA0B9EI,EA1B8EJ,EAAA,GAAAK,EA2BxEN,mBAAsC,IA3BkCO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GA2B3GE,EA3B2GD,EAAA,GA2B5FE,EA3B4FF,EAAA,GAyClHG,oBACE,KACMrC,EAAcsC,gBAAgBC,SAdT,MAAM,MAAAC,EAI7BxC,EAAcsC,gBAFLG,EAFoBD,EAE/BD,QAAWE,GACGC,EAHiBF,EAG/BG,WAAcD,WAGhBE,WAAW,KACTzC,EAAU0C,SAAS,aAAcJ,GACjCtC,EAAU0C,SAAS,aAAcH,IAChC,MAMCI,IAGJ,IAGF,MAAMC,EAA0B,CAC9B,CACEC,UAAW,YACXC,QAAQ,EACRC,KAAM,cAER,CACEF,UAAW,SACXG,UAAU,EACVC,MAAM,EACNF,KAAM,UAER,CACEF,UAAW,YACXG,UAAU,EACVC,MAAM,EACNF,KAAM,QAER,CACEF,UAAW,OACXG,UAAU,EACVC,MAAM,EACNF,KAAM,QAER,CACEF,UAAW,6BACXG,UAAU,EACVE,UAAW,CAACC,EAAMC,IACTA,EAAIC,iBAAiBC,MAAQ,MAAQF,EAAIC,iBAAiBE,UAEnEN,MAAM,EACNF,KAAM,mBAER,CACEF,UAAW,8BACXG,UAAU,EACVE,UAAW,CAACC,EAAMC,IACTA,EAAII,kBAAkBF,MAAQ,MAAQF,EAAII,kBAAkBD,UAErEN,MAAM,EACNF,KAAM,oBAER,CACEF,UAAW,8BACXG,UAAU,EACVE,UAAW,CAACC,EAAMC,IACTA,EAAIK,kBAAkBC,OAAS,MAAQN,EAAIK,kBAAkBF,UAEtEN,MAAM,EACNF,KAAM,6BAER,CACEF,UAAW,+BACXG,UAAU,EACVE,UAAW,CAACC,EAAMC,IACTA,EAAIO,mBAAmBD,OAAS,MAAQN,EAAIO,mBAAmBJ,UAExEN,MAAM,EACNF,KAAM,8BAER,CACEF,UAAW,QACXG,UAAU,EACVE,UAAWU,KACXX,MAAM,EACNF,KAAM,UA0EJc,EAAY,CAChBC,eAAe,EACf1C,KAAM2C,KAAeC,SACrBC,SAXqB,CAACb,EAAKc,KAC3BjC,EAAiBiC,EAAW,IAAIlC,EAAeoB,GAAOpB,EAAcmC,OAAOC,GAAMA,EAAG9B,KAAOc,EAAId,MAW/F+B,YARwB,CAACH,EAAUI,KACnCrC,EAAiBiC,EAAWI,EAAO,MAUrC,OACEC,EAAAC,EAAAC,cAACC,EAAA,GAAD,CACEC,MAAM,kDACNC,oBAAoB,EACpBzC,gBAAiBtC,EAAcsC,gBAC/B0C,aAAc,CAAC,IAAMC,YAAWjF,EAAcsC,iBAAkB,IAAM4C,YAAclF,EAAcsC,mBAElGoC,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAkB1E,UAAWA,EAAWsC,GAAG,aAAaQ,QAAQ,IAChEyB,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAKC,UAAU,QACbZ,EAAAC,EAAAC,cAACQ,EAAA,EAAD,aACAV,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE1E,UAAS0B,OAAA0D,EAAA,EAAA1D,QAAA0D,EAAA,EAAA1D,CAAA,GAAO1B,GAAP,IAAkBqF,WAAY,CAAEC,UAAU,KACnDhD,GAAG,aACHiD,gBAAgB,EAChBC,MAAM,gBACNC,YAAY,2BACZC,KAAMC,IAAUC,cAItBrB,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAACQ,EAAA,EAAD,iCACAV,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACEH,KAAK,QACLF,MAAM,4DACNM,KAAK,yBACLxD,GAAG,6BACHyD,MAAO,OACPC,SAAUhG,EAAUiG,YAGxB1B,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACEH,KAAK,QACLF,MAAM,mCACNM,KAAK,yBACLxD,GAAG,8BACHyD,MAAO,QACPC,SAAUhG,EAAUiG,cAK5B1B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAKC,UAAU,QACbZ,EAAAC,EAAAC,cAACQ,EAAA,EAAD,kCACAV,EAAAC,EAAAC,cAACQ,EAAA,EAAD,uBACAV,EAAAC,EAAAC,cAACQ,EAAA,EAAD,wBACAV,EAAAC,EAAAC,cAACQ,EAAA,EAAD,iBAEFV,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAaH,KAAK,SAASF,MAAM,iBAAcM,KAAK,gBAAgBxD,GAAG,gBAAgB0D,SAAUhG,EAAUiG,YAE7G1B,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAaH,KAAK,SAASF,MAAM,QAAQM,KAAK,QAAQxD,GAAG,QAAQ0D,SAAUhG,EAAUiG,YAEvF1B,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAaH,KAAK,SAASF,MAAM,YAASM,KAAK,SAASxD,GAAG,SAAS0D,SAAUhG,EAAUiG,YAE1F1B,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAaH,KAAK,SAASF,MAAM,QAAQM,KAAK,YAAYxD,GAAG,YAAY0D,SAAUhG,EAAUiG,aAGjG1B,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAaH,KAAK,SAASF,MAAM,WAAQM,KAAK,UAAUxD,GAAG,UAAU0D,SAAUhG,EAAUiG,YAE3F1B,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAaH,KAAK,SAASF,MAAM,cAAcM,KAAK,cAAcxD,GAAG,cAAc0D,SAAUhG,EAAUiG,YAEzG1B,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAaH,KAAK,SAASF,MAAM,iBAAcM,KAAK,aAAaxD,GAAG,aAAa0D,SAAUhG,EAAUiG,YAEvG1B,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAaH,KAAK,SAASF,MAAM,8BAAwBM,KAAK,WAAWxD,GAAG,WAAW0D,SAAUhG,EAAUiG,aAG/G1B,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAaH,KAAK,SAASF,MAAM,YAAYM,KAAK,aAAaxD,GAAG,aAAa0D,SAAUhG,EAAUiG,YAErG1B,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAaH,KAAK,SAASF,MAAM,iBAAiBM,KAAK,gBAAgBxD,GAAG,iBAAiB0D,SAAUhG,EAAUiG,YAEjH1B,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAaH,KAAK,SAASF,MAAM,iBAAcM,KAAK,aAAaxD,GAAG,aAAa0D,SAAUhG,EAAUiG,aAGzG1B,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAACQ,EAAA,EAAD,aACAV,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACEH,KAAK,SACLF,MAAM,0BACNM,KAAK,yBACLxD,GAAG,yBACH0D,SAAUhG,EAAUiG,YAGxB1B,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAaH,KAAK,SAASF,MAAM,qBAAkBM,KAAK,iBAAiBxD,GAAG,iBAAiB0D,SAAUhG,EAAUiG,aAGrH1B,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAACQ,EAAA,EAAD,aACAV,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAaH,KAAK,SAASF,MAAM,0BAAoBM,KAAK,mBAAmBxD,GAAG,mBAAmB0D,SAAUhG,EAAUiG,YAEzH1B,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACEH,KAAK,SACLF,MAAM,0BACNM,KAAK,qBACLxD,GAAG,qBACH0D,SAAUhG,EAAUiG,aAI1B1B,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAACQ,EAAA,EAAD,aACAV,EAAAC,EAAAC,cAACQ,EAAA,EAAD,aACAV,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACEH,KAAK,SACLF,MAAM,0BACNM,KAAK,qBACLxD,GAAG,qBACH0D,SAAUhG,EAAUiG,cAK5B1B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAKE,UAAU,QACbZ,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAQf,UAAU,OAAOgB,QAASnG,EAAUoG,aAvMhCC,IACpBhF,EACEiF,KAAgBC,aAAa,CAC3BC,UAAU,EACVhB,MAAO,yBACPiB,IAAK,OAxBaJ,KACtBK,YAA+BL,EAAM,CACnCM,cAAeC,IACbC,aAAUD,EAAUE,KACpBzF,EAASiF,KAAgBS,iBAE3BC,aAAeC,IACb5F,EAASiF,KAAgBS,gBACzBlF,EAA+BoF,OAmBnCC,CAAeb,KA+LiEc,MAAM,WAC5E5C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAiBC,KAAK,SADxB,cAGCzF,EACC2C,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAQf,UAAU,OAAOgB,QAhMd,KACrB,GAAInE,EAAcsF,OAAS,EACzBjG,EACEiF,KAAgBC,aAAa,CAC3BC,UAAU,EACVhB,MAAO,yBACPiB,IAAK,OAGTc,YAAuBvF,EAAe,CACpC2E,cAAeC,IACbC,aAAUD,EAAUE,KACpBzF,EAASiF,KAAgBS,iBAE3BC,aAAc,KACZ3F,EAASiF,KAAgBS,gBACzB,MAAMS,EAAqB,CACzBC,QAAS,0CACT/B,KAAMgC,IAAUC,aAElBC,KAAaC,KAAKC,IAAcC,KAAMP,UAGrC,CACL,MAAMA,EAAqB,CACzBC,QAAS,gDACT/B,KAAMgC,IAAUM,SAElBJ,KAAaC,KAAKC,IAAcC,KAAMP,KAoKoBL,MAAM,WACtD5C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAiBC,KAAK,iBADxB,aAGE,MAEN9C,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAQf,UAAU,cAAcgB,QAASnG,EAAUoG,aAnNxC,IAJL,EAAC6B,GAAkB,KACjCC,aAActI,EAAOA,EAAMuI,QAASF,IAGXG,IAmN8DjB,MAAM,UACnF5C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAiBC,KAAK,iBADxB,aAKJ9C,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACGtD,EACC2C,EAAAC,EAAAC,cAAC4D,EAAA7D,EAAD,CACE8D,SAAS,KACTjC,KAAMzE,GAA+B,GACrCgB,QAASA,EACTiB,UAAWA,EACX0E,YAAY,EACZC,SAAS,IAET,OAGRjE,EAAAC,EAAAC,cAAA,OAAKU,UAAU,UAEjBZ,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAAA,OAAKU,UAAU,8DAAf,6JClZH,SAASL,EAAW3C,GACzB,IAAI8E,EAAS,KAIb,OAHK9E,EAAgBC,UACnB6E,EAAS,kDAEJA,EALTwB,EAAAC,EAAAC,EAAA,sBAAA7D,sCCAO,SAASC,EAAc5C,GAC5B,IAAI8E,EAAS,KAMb,OALK9E,EAAgByG,aACnB3B,EACE,0LAGGA,EAPTwB,EAAAC,EAAAC,EAAA,sBAAA5D,m7EC6DA,SAAS8D,IACP,OAAOC,aAAO,QAGT,SAASpC,EAA+BqC,EAA4CC,GACzFC,aAAKJ,IAAaK,KAAkC,kCAAmCH,GAAuBC,GAGzG,SAASzB,EAAuB4B,EAAwDH,GAC7FC,aAAKJ,IAAaK,KAAkC,0BAA2BC,GAA4BH,GAGtG,SAASI,EAAYC,EAA4BL,GACtDC,aAAKJ,IAAaK,KAAuB,YAAaG,GAAgBL,GAGjE,SAASM,EAAsBjD,EAAoC2C,GACxE,MAAMO,EAAe,IAAIC,SACzBD,EAAaE,OAAO,aAAcC,OAAOrD,EAAKjE,QAAQE,KACtDiH,EAAaE,OAAO,qBAAsBC,OAAOrD,EAAKsD,qBACtDJ,EAAaE,OAAO,8BAA+BC,OAAOrD,EAAKuD,8BAJ2C,IAAAC,EAAAC,EAAApI,OAAAqI,EAAA,EAAArI,CAMpF2E,EAAK2D,UAN+E,IAM1G,IAAAF,EAAAG,MAAAJ,EAAAC,EAAAI,KAAAC,MAAqC,OAA1BC,EAA0BP,EAAA9D,MACnCwD,EAAaE,OAAO,WAAYW,EAAQC,KAAMD,EAAQE,cAPkD,MAAAC,GAAAT,EAAAU,EAAAD,GAAA,QAAAT,EAAAW,IAU1GxB,aAAKJ,IAAaK,KAAoB,yBAA0BK,GAAeP,GAG1E,SAAS0B,EAA4BrE,EAA0C2C,GACpF,MAAMO,EAAe,IAAIC,SACzBD,EAAaE,OAAO,aAAcC,OAAOrD,EAAKjE,QAAQE,KAFgE,IAAAqI,EAAAC,EAAAlJ,OAAAqI,EAAA,EAAArI,CAIhG2E,EAAK2D,UAJ2F,IAItH,IAAAY,EAAAX,MAAAU,EAAAC,EAAAV,KAAAC,MAAqC,OAA1BC,EAA0BO,EAAA5E,MACnCwD,EAAaE,OAAO,WAAYW,EAAQC,KAAMD,EAAQE,cAL8D,MAAAC,GAAAK,EAAAJ,EAAAD,GAAA,QAAAK,EAAAH,IAOtHxB,aAAKJ,IAAaK,KAAoB,+BAAgCK,GAAeP,GAGhF,SAAS6B,EAAqBxE,EAAmC2C,GACtE,MAAMO,EAAe,IAAIC,SACzBD,EAAaE,OAAO,2BAA4BC,OAAOrD,EAAKyE,sBAAsBxI,KAFsB,IAAAyI,EAAAC,EAAAtJ,OAAAqI,EAAA,EAAArI,CAIlF2E,EAAK2D,UAJ6E,IAIxG,IAAAgB,EAAAf,MAAAc,EAAAC,EAAAd,KAAAC,MAAqC,OAA1BC,EAA0BW,EAAAhF,MACnCwD,EAAaE,OAAO,WAAYW,EAAQC,KAAMD,EAAQE,cALgD,MAAAC,GAAAS,EAAAR,EAAAD,GAAA,QAAAS,EAAAP,IAOxGxB,aAAKJ,IAAaK,KAAoB,wBAAyBK,GAAeP,GAGzE,SAASiC,EAAsB5E,EAAoC2C,GACxE,MAAMO,EAAe,IAAIC,SACzBD,EAAaE,OAAO,YAAaC,OAAOrD,EAAK6E,YAC7C3B,EAAaE,OAAO,4BAA6BC,OAAOrD,EAAK8E,uBAAuB7I,KAHsB,IAAA8I,EAAAC,EAAA3J,OAAAqI,EAAA,EAAArI,CAKpF2E,EAAK2D,UAL+E,IAK1G,IAAAqB,EAAApB,MAAAmB,EAAAC,EAAAnB,KAAAC,MAAqC,OAA1BC,EAA0BgB,EAAArF,MACnCwD,EAAaE,OAAO,WAAYW,EAAQC,KAAMD,EAAQE,cANkD,MAAAC,GAAAc,EAAAb,EAAAD,GAAA,QAAAc,EAAAZ,IAQ1GxB,aAAKJ,IAAaK,KAAoB,yBAA0BK,GAAeP,GAG1E,SAASsC,EAAkBC,EAA0CvC,GAC1EC,aAAKJ,IAAaK,KAAoB,qBAAsBqC,GAAsBvC,GAG7E,SAASwC,EAAmBC,EAAiDzC,GAClFC,aAAKJ,IAAaK,KAAoB,sBAAuBuC,GAA4BzC,GAGpF,SAAS0C,EAA0BR,EAAmBlC,GAC3DC,aAAKJ,IAAa8C,IAAgB,8BAAgCT,GAAYlC,GAGzE,SAAS4C,EAAyBvC,EAAyCL,GAChFC,aAAKJ,IAAaK,KAAqC,4BAA6BG,GAAgBL,GAG/F,SAAS6C,EACdC,EACAC,EACA/C,GAEAC,aACEJ,IAAaK,KAAoC,kBAAmB,CAAE4C,6BAA4BC,UAClG/C,GAIG,SAASgD,EAA4BC,EAAsBjD,GAChEC,aAAKJ,IAAa8C,IAAU,gCAAkCM,GAAejD,GAGxE,SAASkD,EAAiCC,EAA8CnD,GAC7FC,aAAKJ,IAAaK,KAAa,wCAAyCiD,GAAwBnD,GAG3F,SAASoD,EAAiCC,EAAsCrD,GACrFC,aAAKJ,IAAaK,KAAc,oCAAqCmD,GAAoBrD,GAGpF,SAASsD,EAAoCC,EAA4CvD,GAC9FC,aAAKJ,IAAaK,KAAc,uCAAwCqD,GAAuBvD,GAG1F,SAASwD,EAA2BC,EAAsDzD,GAC/FC,aAAKJ,IAAaK,KAAc,8BAA+BuD,GAA4BzD,GAGtF,SAAS0D,EAAwBC,EAAgC3D,GACtEC,aAAKJ,IAAaK,KAAa,2BAA4ByD,GAAe3D,GAGrE,SAAS4D,EAAgCC,EAA2B7D,GACzEC,aAAKJ,IAAa8C,IAAQ,oCAAsCkB,GAAoB7D,GAG/E,SAAS8D,EAASC,EAAc/D,GACrCC,aAAKJ,IAAaK,KAAa,YAAa6D,GAAQ/D,GAG/C,SAASgE,EAAoBC,EAAwCjE,GAC1EC,aAAKJ,IAAaK,KAAoB,uBAAwB+D,GAAqBjE,GAG9E,SAASkE,EAAaC,EAAkBF,EAAwCjE,GACrFC,aACEmE,cAA2BlE,KAAa,gBAAiB,CAAEiE,UAASF,uBACpEjE,GAIG,SAASqE,EAAyBC,EAA4DtE,GACnGC,aAAKJ,IAAaK,KAAmB,4BAA6BoE,GAA+BtE,GAG5F,SAASuE,EAA0BD,EAA4DtE,GACpGC,aAAKJ,IAAaK,KAAc,6BAA8BoE,GAA+BtE,GAGxF,SAASwE,EAAqBC,EAAqCzE,GACxEC,aAAKJ,IAAaK,KAAe,wBAAyBuE,GAAqBzE,GAG1E,SAAS0E,EAAwBzB,EAAsBjD,GAC5DC,aAAKJ,IAAa8C,IAAa,4BAA8BM,GAAejD,GAGvE,SAAS2E,EAAiB1B,EAAsBjD,GACrDC,aAAKJ,IAAa8C,IAAU,qBAAuBM,GAAejD,GAG7D,SAAS4E,EAAgBC,EAAiD7E,GAC/EC,aAAKJ,IAAaK,KAAkB,mBAAoB2E,GAAwB7E,GAG3E,SAAS8E,EAAqBD,EAAiD7E,GACpFC,aAAKJ,IAAaK,KAAW,wBAAyB2E,GAAwB7E,GAGzE,SAAS+E,EAAeC,EAAuBhF,GACpDC,aAAKJ,IAAaK,KAAc,kBAAmB8E,GAAQhF,GAGtD,SAASiF,EAAkBC,EAAkClF,GAClE,MAAMO,EAAe,IAAIC,SAGzB,GAFAD,EAAaE,OAAO,aAAcC,OAAOwE,EAAYf,QAAQ7K,KAEzD4L,EAAYC,kCAAmC,KAAAC,EAAAC,EAAA3M,OAAAqI,EAAA,EAAArI,CAC3BwM,EAAYC,mCADe,IACjD,IAAAE,EAAApE,MAAAmE,EAAAC,EAAAnE,KAAAC,MAAqE,OAA1DC,EAA0DgE,EAAArI,MACnEwD,EAAaE,OAAO,oCAAqCW,EAAQC,KAAMD,EAAQE,cAFhC,MAAAC,GAAA8D,EAAA7D,EAAAD,GAAA,QAAA8D,EAAA5D,KAMnD,IAAK,MAAM6D,KAAuBJ,EAEN,sCAAxBI,GACwB,YAAxBA,GACqC,OAArCJ,EAAYI,IAEZ/E,EAAaE,OAAO6E,EAAqBJ,EAAYI,IAGzDrF,aAAKJ,IAAaK,KAAa,qBAAsBK,GAAeP,GAG/D,SAASuF,EACdC,EACAxF,GAEAC,aAAKJ,IAAaK,KAAiC,oCAAqCsF,GAA6BxF,GAGhH,SAASyF,EAAsBC,EAA8B1F,GAClEC,aAAKJ,IAAaK,KAAwB,yBAA0BwF,GAAgB1F,GAG/E,SAAS2F,EAAsBC,EAAmC5F,GACvEC,aAAKJ,IAAaK,KAA4B,yBAA0B0F,GAAW5F,GAG9E,SAAS6F,EAAiBH,EAA8B1F,GAC7DC,aAAKJ,IAAaK,KAAa,oBAAqBwF,GAAgB1F,GAG/D,SAAS8F,EAAgBC,EAAgC/F,GAC9DC,aAAKJ,IAAaK,KAAc,mBAAoB6F,GAAa/F,GAG5D,SAASgG,EAAYD,EAAgC/F,GAC1DC,aAAKJ,IAAaK,KAAW,eAAgB6F,GAAa/F,GAGrD,SAASiG,EAAwBF,EAAqC/F,GAC3EC,aAAKJ,IAAaK,KAAa,2BAA4B6F,GAAa/F,GAGnE,SAASkG,EAAiCrC,EAA2B7D,GAC1EC,aAAKJ,IAAa8C,IAA+B,qCAAuCkB,GAAoB7D,GAGvG,SAASmG,EAA4BC,EAAkDpG,GAC5FC,aAAKJ,IAAaK,KAAc,+BAAgCkG,GAA0BpG,GAGrF,SAASqG,EAA8BxC,EAA2B7D,GACvEC,aAAKJ,IAAa8C,IAAQ,kCAAoCkB,GAAoB7D,GAG7E,SAASsG,EAA+BC,EAAoDvG,GACjGC,aAAKJ,IAAaK,KAAW,kCAAmCqG,GAA2BvG,GAGtF,SAASwG,EAAqBC,EAAgCzG,GACnEC,aAAKJ,IAAaK,KAAW,wBAAyBuG,GAAiBzG,GAGlE,SAAS0G,EAAsBD,EAAgCzG,GACpEC,aAAKJ,IAAaK,KAAW,yBAA0BuG,GAAiBzG,GAGnE,SAAS2G,EAA+B9C,EAA2B7D,GACxEC,aAAKJ,IAAa8C,IAAuB,mCAAqCkB,GAAoB7D,GAG7F,SAAS4G,EAA0BC,EAAkC7G,GAC1EC,aAAKJ,IAAaK,KAAc,6BAA8B2G,GAAkB7G,GAG3E,SAAS8G,EAAaC,EAAkD/G,GAC7EC,aAAKJ,IAAaK,KAAU,gBAAiB6G,GAA0B/G,GAGlE,SAASgH,GAAwBnD,EAA2BM,EAAkBnE,GACnFC,aACEJ,IAAaK,KAAW,2BAA4B,CAAE2D,oBAAmBM,YACzEnE,GAIG,SAASiH,GAAWC,EAA+BC,EAAsBhD,EAAkBnE,GAChGC,aACEJ,IAAaK,KAAU,cAAe,CAAEgH,kBAAiBC,cAAahD,YACtEnE,GAIG,SAASoH,GAAaC,EAAwBrH,GACnDC,aAAKJ,IAAaK,KAAmB,gBAAiBmH,GAAarH,GAG9D,SAASsH,GACdC,EACAC,EACAC,EACAzH,GAEAC,aACEJ,IAAaK,KAAW,qBAAsB,CAAEqH,gBAAeC,0BAAyBC,+BACxFzH,GAIG,SAAS0H,GACdH,EACAC,EACAC,EACAzH,GAEAC,aACEJ,IAAaK,KAAW,qBAAsB,CAAEqH,gBAAeC,0BAAyBC,+BACxFzH,GAIG,SAAS2H,GAAiCC,EAAsB1F,EAAmBlC,GACxFC,aACEJ,IAAaK,KAAc,oCAAqC,CAAE0H,eAAc1F,cAChFlC,GAIG,SAAS6H,GAAsBxK,EAAsC2C,GAC1E,MAAMO,EAAe,IAAIC,SACzBD,EAAaE,OAAO,eAAgBC,OAAOrD,EAAK4F,eAChD1C,EAAaE,OAAO,iBAAkBC,OAAOrD,EAAKyK,iBAClDvH,EAAaE,OAAO,cAAeC,OAAOrD,EAAK0K,cAC/CxH,EAAaE,OAAO,mBAAoBC,OAAOrD,EAAK2K,mBACpDzH,EAAaE,OAAO,UAAWpD,EAAK+D,QAAQ,GAAGC,KAAMhE,EAAK+D,QAAQ,GAAGE,cAEvC,IAA1BjE,EAAK2K,kBAA+BC,aAAQ5K,EAAK6K,YAAeD,aAAQ5K,EAAK8K,WAC/E5H,EAAaE,OAAO,YAAapD,EAAK6K,WACtC3H,EAAaE,OAAO,UAAWpD,EAAK8K,UAGtClI,aAAKJ,IAAaK,KAA8C,yBAA0BK,GAAeP,GAGpG,SAASoI,GAAqB/K,EAA8B2C,GACjE,MAAMO,EAAe,IAAIC,SACzBD,EAAaE,OAAO,aAAcC,OAAOrD,EAAKjE,QAAQE,KACtDiH,EAAaE,OAAO,aAAcC,OAAOrD,EAAK8G,QAAQ7K,KAH6C,IAAA+O,EAAAC,EAAA5P,OAAAqI,EAAA,EAAArI,CAK7E2E,EAAK2D,UALwE,IAKnG,IAAAsH,EAAArH,MAAAoH,EAAAC,EAAApH,KAAAC,MAAqC,OAA1BC,EAA0BiH,EAAAtL,MACnCwD,EAAaE,OAAO,WAAYW,EAAQC,KAAMD,EAAQE,cAN2C,MAAAC,GAAA+G,EAAA9G,EAAAD,GAAA,QAAA+G,EAAA7G,IASnGxB,aAAKJ,IAAaK,KAAoB,wBAAyBK,GAAeP,GAGzE,SAASuI,GAAmBlL,EAAyB2C,GAC1D,MAAMO,EAAe,IAAIC,SACzBD,EAAaE,OAAO,aAAcpD,EAAKmL,YACvCjI,EAAaE,OAAO,WAAYpD,EAAKoL,UACrClI,EAAaE,OAAO,eAAgBC,OAAOrD,EAAK4F,eAChD1C,EAAaE,OAAO,aAAcC,OAAOrD,EAAK8G,QAAQ7K,KAEjD2O,aAAQ5K,EAAKqL,aAChBnI,EAAaE,OAAO,aAAcpD,EAAKqL,WAAW,GAAGrH,KAAMhE,EAAKqL,WAAW,GAAGpH,aAGhFrB,aAAKJ,IAAaK,KAAa,sBAAuBK,GAAeP,GAGhE,SAAS2I,GACdC,EACA5I,GAEAC,aAAKJ,IAAaK,KAAsC,6BAA8B0I,GAAiC5I,GAGlH,SAAS6I,GACdC,EACA9I,GAEAC,aAAKJ,IAAaK,KAA0C,iCAAkC4I,GAA+B9I,GAGxH,SAAS+I,GAAmBC,EAAsChJ,GACvEC,aAAKJ,IAAaK,KAAW,sBAAuB8I,GAAoBhJ,GAGnE,SAASiJ,GAAyBC,EAAwCC,EAAYnJ,GAC3F,MAAMO,EAAe,IAAIC,SACzBD,EAAaE,OAAO,aAAc0I,GAElC5I,EAAaE,OAAO,qBAAsByI,EAAmB,GAAG7H,KAAM6H,EAAmB,GAAG5H,aAE5FrB,aAAKJ,IAAaK,KAAqB,4BAA6BK,GAAeP,GAG9E,SAASoJ,GACdvF,EACA3B,EACAiH,EACAjB,EACAC,EACAnI,GAEA,MAAMO,EAAe,IAAIC,SACzBD,EAAaE,OAAO,oBAAqBC,OAAOmD,IAChDtD,EAAaE,OAAO,YAAaC,OAAOwB,IACxC3B,EAAaE,OAAO,aAAcC,OAAOyI,IACzC5I,EAAaE,OAAO,YAAaC,OAAOwH,IACxC3H,EAAaE,OAAO,UAAWC,OAAOyH,IAEtClI,aAAKJ,IAAaK,KAA8B,wCAAyCK,GAAeP,GAGnG,SAASqJ,GAAyB5E,EAAqCzE,GAC5EC,aAAKJ,IAAaK,KAAiB,4BAA6BuE,GAAqBzE,GAGhF,SAASsJ,GAA4BC,EAAgDvJ,GAC1FC,aAAKJ,IAAaK,KAAa,+BAAgCqJ,GAA0BvJ,GAGpF,SAASwJ,GAAmCC,EAAqCzJ,GACtFC,aAAKJ,IAAaK,KAAa,sCAAuCuJ,GAAezJ,GAGhF,SAAS0J,GAAkCD,EAA8BzJ,GAC9EC,aAAKJ,IAAaK,KAAa,qCAAsCuJ,GAAezJ,GAG/E,SAAS2J,GAAcrQ,EAAY0G,GACxCC,aAAKJ,IAAa8C,IAAkB,kBAAoBrJ,GAAK0G,GAGxD,SAAS4J,GAAatQ,EAAY0G,GACvCC,aAAKJ,IAAa8C,IAAkB,iBAAmBrJ,GAAK0G,GAGvD,SAAS6J,GAAe9D,EAAuB/F,GACpDC,aAAKJ,IAAaK,KAAa,kBAAmB6F,GAAa/F,GAG1D,SAAS8J,GAAgB/D,EAAuB/F,GACrDC,aAAKJ,IAAaK,KAAa,mBAAoB6F,GAAa/F,GAG3D,SAAS+J,GAAsBhE,EAAkC/F,GACtEC,aAAKJ,IAAaK,KAAc,yBAA0B6F,GAAa/F,GAGlE,SAASgK,GAAwBjE,EAAkC/F,GACxEC,aAAKJ,IAAaK,KAAc,2BAA4B6F,GAAa/F,GAGpE,SAASiK,GACdC,EACAlK,GAEAC,aAAKJ,IAAaK,KAAuC,+BAAgCgK,GAA4BlK,GAGhH,SAASmK,GACdD,EACAE,EACApK,GAEAC,aACEJ,IAAaK,KAAa,sBAAuB,CAAEgK,4BAA2BE,gBAC9EpK,GAIG,SAASqK,GAA0BtE,EAA6B/F,GACrEC,aAAKJ,IAAaK,KAAc,6BAA8B6F,GAAa/F","file":"static/js/311.e607b086.chunk.js","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Button, Col, CustomInput, Form, Row } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  ColumnsProps,\r\n  decimalFormatter,\r\n  dispatchClose,\r\n  EditViewProps,\r\n  ERROR,\r\n  InputGroupInline,\r\n  InputType,\r\n  progressActions,\r\n  SelectModeEnum,\r\n  showToast,\r\n  WindowComponent,\r\n} from 'summer';\r\nimport { hasEmpresa } from '../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../dependencies/empresaMCGDependency';\r\nimport { IntegracaoFolhaParam } from '../../../../models/dtos/mcg/integracaoFolhaParam';\r\nimport { LancamentoIntegracaoFolha } from '../../../../models/dtos/mcg/lancamentoIntegracaoFolha';\r\nimport { gerarLancamentosFolhaPagamento, integrarFolhaPagamento } from '../../../../services/mcg.service';\r\nimport { Reducers } from '../../../../store/ducks';\r\nimport { GlobalState } from '../../../../store/ducks/global.duck';\r\n\r\ninterface IntegracaoFolhaPagamentoProcessView extends EditViewProps<IntegracaoFolhaParam> {}\r\n\r\nconst IntegracaoFolhaPagamentoProcessView: FC<IntegracaoFolhaPagamentoProcessView & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const formProps = useForm<any>({\r\n    defaultValues: {\r\n      cooperativa: true,\r\n      decimoTerceiro: true,\r\n      ferias: true,\r\n      fgtsDecimoTerceiro: true,\r\n      fgtsFerias: true,\r\n      geral: true,\r\n      gerarPelaDataPagamento: 'true',\r\n      grrfCsll: true,\r\n      grrfMulta: true,\r\n      inssDecimoTerceiro: true,\r\n      inssFerias: true,\r\n      isFuncionario: true,\r\n      isSocio: true,\r\n      isTerceiro: true,\r\n      produtorRural: true,\r\n      segundaParcela13: true,\r\n      terceirosTransportador: true,\r\n    },\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const [isLancamentoIntegracaoFolha, setIsLancamentoIntegracaoFolha] = useState(null);\r\n  const [selectedItems, setSelectedItems] = useState<LancamentoIntegracaoFolha[]>([]);\r\n\r\n  const setPropertyRefAndEmp = () => {\r\n    const {\r\n      empresa: { id },\r\n      empresaMFP: { referencia },\r\n    } = globalReducer.globalParameter;\r\n\r\n    setTimeout(() => {\r\n      formProps.setValue('empresa.id', id);\r\n      formProps.setValue('referencia', referencia);\r\n    }, 1000);\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (globalReducer.globalParameter.empresa) {\r\n        setPropertyRefAndEmp();\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'rowNumber',\r\n      hidden: true,\r\n      text: 'Row Number',\r\n    },\r\n    {\r\n      dataField: 'evento',\r\n      editable: false,\r\n      sort: true,\r\n      text: 'Evento',\r\n    },\r\n    {\r\n      dataField: 'categoria',\r\n      editable: false,\r\n      sort: true,\r\n      text: 'Tipo',\r\n    },\r\n    {\r\n      dataField: 'data',\r\n      editable: false,\r\n      sort: true,\r\n      text: 'Data',\r\n    },\r\n    {\r\n      dataField: 'planoContaDebito.descricao',\r\n      editable: false,\r\n      formatter: (cell, row) => {\r\n        return row.planoContaDebito.conta + ' - ' + row.planoContaDebito.descricao;\r\n      },\r\n      sort: true,\r\n      text: 'Conta Débito',\r\n    },\r\n    {\r\n      dataField: 'planoContaCredito.descricao',\r\n      editable: false,\r\n      formatter: (cell, row) => {\r\n        return row.planoContaCredito.conta + ' - ' + row.planoContaCredito.descricao;\r\n      },\r\n      sort: true,\r\n      text: 'Conta Crédito',\r\n    },\r\n    {\r\n      dataField: 'centroCustoDebito.descricao',\r\n      editable: false,\r\n      formatter: (cell, row) => {\r\n        return row.centroCustoDebito.codigo + ' - ' + row.centroCustoDebito.descricao;\r\n      },\r\n      sort: true,\r\n      text: 'Centro de Custo Débito',\r\n    },\r\n    {\r\n      dataField: 'centroCustoCredito.descricao',\r\n      editable: false,\r\n      formatter: (cell, row) => {\r\n        return row.centroCustoCredito.codigo + ' - ' + row.centroCustoCredito.descricao;\r\n      },\r\n      sort: true,\r\n      text: 'Centro de Custo Crédito',\r\n    },\r\n    {\r\n      dataField: 'valor',\r\n      editable: false,\r\n      formatter: decimalFormatter,\r\n      sort: true,\r\n      text: 'Valor',\r\n    },\r\n  ];\r\n\r\n  const callIntegracao = (data: IntegracaoFolhaParam) => {\r\n    gerarLancamentosFolhaPagamento(data, {\r\n      errorFunction: mensagem => {\r\n        showToast(mensagem, ERROR);\r\n        dispatch(progressActions.hideProgress());\r\n      },\r\n      thenFunction: (result: LancamentoIntegracaoFolha[]) => {\r\n        dispatch(progressActions.hideProgress());\r\n        setIsLancamentoIntegracaoFolha(result);\r\n      },\r\n    });\r\n  };\r\n\r\n  const onClose = (goBack: boolean = true) => {\r\n    dispatchClose(props, props.history, goBack);\r\n  };\r\n\r\n  const handleCancel = () => onClose();\r\n\r\n  const handleBuscar = (data: IntegracaoFolhaParam) => {\r\n    dispatch(\r\n      progressActions.showProgress({\r\n        animated: true,\r\n        label: 'Aguarde processando...',\r\n        now: 100,\r\n      })\r\n    );\r\n    callIntegracao(data);\r\n  };\r\n\r\n  const handleIntegrar = () => {\r\n    if (selectedItems.length > 0) {\r\n      dispatch(\r\n        progressActions.showProgress({\r\n          animated: true,\r\n          label: 'Aguarde processando...',\r\n          now: 100,\r\n        })\r\n      );\r\n      integrarFolhaPagamento(selectedItems, {\r\n        errorFunction: mensagem => {\r\n          showToast(mensagem, ERROR);\r\n          dispatch(progressActions.hideProgress());\r\n        },\r\n        thenFunction: () => {\r\n          dispatch(progressActions.hideProgress());\r\n          const params: AlertProps = {\r\n            message: 'Integraçào realizada com sucesso!',\r\n            type: AlertType.INFORMATION,\r\n          };\r\n          alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n        },\r\n      });\r\n    } else {\r\n      const params: AlertProps = {\r\n        message: 'Selecione pelo menos um evento para integrar!',\r\n        type: AlertType.WARNING,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    }\r\n  };\r\n\r\n  const handleOnSelect = (row, isSelect) => {\r\n    setSelectedItems(isSelect ? [...selectedItems, row] : selectedItems.filter(it => it.id !== row.id));\r\n  };\r\n\r\n  const handleOnSelectAll = (isSelect, rows) => {\r\n    setSelectedItems(isSelect ? rows : []);\r\n  };\r\n\r\n  const selectRow = {\r\n    clickToSelect: true,\r\n    mode: SelectModeEnum.CHECKBOX,\r\n    onSelect: handleOnSelect,\r\n    onSelectAll: handleOnSelectAll,\r\n  };\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Integração - Módulo Folha de Pagamento\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[() => hasEmpresa(globalReducer.globalParameter), () => hasEmpresaMCG(globalReducer.globalParameter)]}\r\n    >\r\n      <Form>\r\n        <InputGroupInline formProps={formProps} id=\"empresa.id\" hidden={true} />\r\n        <Row>\r\n          <Col className=\"ml-3\">\r\n            <Row>&nbsp;</Row>\r\n            <Row>\r\n              <InputGroupInline\r\n                formProps={{ ...formProps, validation: { required: true } }}\r\n                id=\"referencia\"\r\n                isPrependLabel={true}\r\n                label=\"Referência\"\r\n                placeholder=\"Informe a referência.\"\r\n                type={InputType.REFERENCE}\r\n              />\r\n            </Row>\r\n          </Col>\r\n          <Col>\r\n            <Row>Gerar lançamento com:</Row>\r\n            <Row>\r\n              <CustomInput\r\n                type=\"radio\"\r\n                label=\"Data do pagamento do cálculo/vencimento da GPS ou DARF\"\r\n                name=\"gerarPelaDataPagamento\"\r\n                id=\"gerarPelaDataPagamentoTrue\"\r\n                value={'true'}\r\n                innerRef={formProps.register}\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <CustomInput\r\n                type=\"radio\"\r\n                label=\"O último dia da referência\"\r\n                name=\"gerarPelaDataPagamento\"\r\n                id=\"gerarPelaDataPagamentoFalse\"\r\n                value={'false'}\r\n                innerRef={formProps.register}\r\n              />\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        <hr />\r\n        <Row>\r\n          <Col className=\"ml-3\">\r\n            <Row> Categoria do Vínculo:</Row>\r\n            <Row> Tipo de GPS: </Row>\r\n            <Row> Provisões: </Row>\r\n            <Row> GRRF: </Row>\r\n          </Col>\r\n          <Col>\r\n            <Row>\r\n              <CustomInput type=\"switch\" label=\"Funcionário\" name=\"isFuncionario\" id=\"isFuncionario\" innerRef={formProps.register} />\r\n            </Row>\r\n            <Row>\r\n              <CustomInput type=\"switch\" label=\"Geral\" name=\"geral\" id=\"geral\" innerRef={formProps.register} />\r\n            </Row>\r\n            <Row>\r\n              <CustomInput type=\"switch\" label=\"Férias\" name=\"ferias\" id=\"ferias\" innerRef={formProps.register} />\r\n            </Row>\r\n            <Row>\r\n              <CustomInput type=\"switch\" label=\"Multa\" name=\"grrfMulta\" id=\"grrfMulta\" innerRef={formProps.register} />\r\n            </Row>\r\n          </Col>\r\n          <Col>\r\n            <Row>\r\n              <CustomInput type=\"switch\" label=\"Sócio\" name=\"isSocio\" id=\"isSocio\" innerRef={formProps.register} />\r\n            </Row>\r\n            <Row>\r\n              <CustomInput type=\"switch\" label=\"Cooperativa\" name=\"cooperativa\" id=\"cooperativa\" innerRef={formProps.register} />\r\n            </Row>\r\n            <Row>\r\n              <CustomInput type=\"switch\" label=\"FGTS Férias\" name=\"fgtsFerias\" id=\"fgtsFerias\" innerRef={formProps.register} />\r\n            </Row>\r\n            <Row>\r\n              <CustomInput type=\"switch\" label=\"Contribuição Sindical\" name=\"grrfCsll\" id=\"grrfCsll\" innerRef={formProps.register} />\r\n            </Row>\r\n          </Col>\r\n          <Col>\r\n            <Row>\r\n              <CustomInput type=\"switch\" label=\"Terceiros\" name=\"isTerceiro\" id=\"isTerceiro\" innerRef={formProps.register} />\r\n            </Row>\r\n            <Row>\r\n              <CustomInput type=\"switch\" label=\"Produtor Rural\" name=\"produtorRural\" id=\"produtorRural \" innerRef={formProps.register} />\r\n            </Row>\r\n            <Row>\r\n              <CustomInput type=\"switch\" label=\"INSS Férias\" name=\"inssFerias\" id=\"inssFerias\" innerRef={formProps.register} />\r\n            </Row>\r\n          </Col>\r\n          <Col>\r\n            <Row>&nbsp;</Row>\r\n            <Row>\r\n              <CustomInput\r\n                type=\"switch\"\r\n                label=\"Terceiros Transportador\"\r\n                name=\"terceirosTransportador\"\r\n                id=\"terceirosTransportador\"\r\n                innerRef={formProps.register}\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <CustomInput type=\"switch\" label=\"Décimo Terceiro\" name=\"decimoTerceiro\" id=\"decimoTerceiro\" innerRef={formProps.register} />\r\n            </Row>\r\n          </Col>\r\n          <Col>\r\n            <Row>&nbsp;</Row>\r\n            <Row>\r\n              <CustomInput type=\"switch\" label=\"2ª Parcela do 13°\" name=\"segundaParcela13\" id=\"segundaParcela13\" innerRef={formProps.register} />\r\n            </Row>\r\n            <Row>\r\n              <CustomInput\r\n                type=\"switch\"\r\n                label=\"FGTS Décimo Terceiro\"\r\n                name=\"fgtsDecimoTerceiro\"\r\n                id=\"fgtsDecimoTerceiro\"\r\n                innerRef={formProps.register}\r\n              />\r\n            </Row>\r\n          </Col>\r\n          <Col>\r\n            <Row>&nbsp;</Row>\r\n            <Row>&nbsp;</Row>\r\n            <Row>\r\n              <CustomInput\r\n                type=\"switch\"\r\n                label=\"INSS Décimo Terceiro\"\r\n                name=\"inssDecimoTerceiro\"\r\n                id=\"inssDecimoTerceiro\"\r\n                innerRef={formProps.register}\r\n              />\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        <hr />\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <Button className=\"ml-0\" onClick={formProps.handleSubmit(handleBuscar)} color=\"primary\">\r\n              <FontAwesomeIcon icon=\"sync\" /> Consultar\r\n            </Button>\r\n            {isLancamentoIntegracaoFolha ? (\r\n              <Button className=\"ml-2\" onClick={handleIntegrar} color=\"success\">\r\n                <FontAwesomeIcon icon=\"check-circle\" /> Integrar\r\n              </Button>\r\n            ) : null}\r\n          </Col>\r\n          <Col>\r\n            <Button className=\"float-right\" onClick={formProps.handleSubmit(handleCancel)} color=\"danger\">\r\n              <FontAwesomeIcon icon=\"check-circle\" /> Fechar\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            {isLancamentoIntegracaoFolha ? (\r\n              <BootstrapTable\r\n                keyField=\"id\"\r\n                data={isLancamentoIntegracaoFolha || []}\r\n                columns={columns}\r\n                selectRow={selectRow}\r\n                responsive={true}\r\n                striped={true}\r\n              />\r\n            ) : null}\r\n          </Col>\r\n        </Row>\r\n        <div className=\"mt-3\" />\r\n      </Form>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"p-3 mb-2 bg-light text-dark text-center font-weight-bolder\">\r\n            Atenção: Todos os lançamentos desta referência e proveniente da folha de pagamento, serão apagados.\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default IntegracaoFolhaPagamentoProcessView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMCG(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMCG) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o módulo Contábil. Para configurá-la acesse:\\n' +\r\n      'Módulo Contábil > Manutenção > Configurações > Empresa.';\r\n  }\r\n  return result;\r\n}\r\n","import { AxiosInstance } from 'axios';\r\nimport { ArquivoSelecionado, AxiosParam, create, isEmpty, send } from 'summer';\r\nimport { PlanoConta } from '../models/dtos/ger/planoConta';\r\nimport { PlanoContaSubGrupoParam } from '../models/dtos/ger/planoContaSubGrupoParam';\r\nimport { RuleMessage } from '../models/dtos/ger/ruleMessage';\r\nimport { Usuario } from '../models/dtos/ger/usuario';\r\nimport { BancoExtrato } from '../models/dtos/mcg/bancoExtrato';\r\nimport { BancoMCG } from '../models/dtos/mcg/bancoMCG';\r\nimport { BancoPlanoConta } from '../models/dtos/mcg/bancoPlanoConta';\r\nimport { CalculoIrpjCsll } from '../models/dtos/mcg/calculoIrpjCsll';\r\nimport { ComposicaoReceitaDespesasGrafParam } from '../models/dtos/mcg/composicaoReceitaDespesasGrafParam';\r\nimport { ComposicaoReceitaDespesasGrafReturn } from '../models/dtos/mcg/composicaoReceitaDespesasGrafReturn';\r\nimport { ConciliacaoBancaria } from '../models/dtos/mcg/conciliacaoBancaria';\r\nimport { ConfigECFImuneIsenta } from '../models/dtos/mcg/configECFImuneIsenta';\r\nimport { ConfigECFIrpjCsll } from '../models/dtos/mcg/configECFIrpjCsll';\r\nimport { ConfigECFRemuneracaoSocio } from '../models/dtos/mcg/configECFRemuneracaoSocio';\r\nimport { ConsultaTotalLancamento } from '../models/dtos/mcg/consultaTotalLancamento';\r\nimport { ContaFluxoCaixa } from '../models/dtos/mcg/contaFluxoCaixa';\r\nimport { ContaFluxoCaixaIndireto } from '../models/dtos/mcg/contaFluxoCaixaIndireto';\r\nimport { ContaResultado } from '../models/dtos/mcg/contaResultado';\r\nimport { ContaResultadoLimpeza } from '../models/dtos/mcg/contaResultadoLimpeza';\r\nimport { ContaResultadoMCGEncerramento } from '../models/dtos/mcg/contaResultadoMCGEncerramento';\r\nimport { DataEncerradaParam } from '../models/dtos/mcg/dataEncerradaParam';\r\nimport { ECFExportacaoParam } from '../models/dtos/mcg/ecfExportacaoParam';\r\nimport { Erros } from '../models/dtos/mcg/erros';\r\nimport { EvolucaoContaContabilGrafParam } from '../models/dtos/mcg/evolucaoContaContabilGrafParam';\r\nimport { EvolucaoContaContabilGrafReturn } from '../models/dtos/mcg/evolucaoContaContabilGrafReturn';\r\nimport { FCONTContabilCrit } from '../models/dtos/mcg/fContContabilCrit';\r\nimport { FechamentoRestauracaoMCG } from '../models/dtos/mcg/fechamentoRestauracaoMCG';\r\nimport { ImportacaoFiscalContabil, ImportacaoFiscalContabilResult } from '../models/dtos/mcg/importacaoFiscalContabil';\r\nimport { ImportacaoHistorico } from '../models/dtos/mcg/importacaoHistorico';\r\nimport { ImportacaoHistoricoCSVParam } from '../models/dtos/mcg/importacaoHistoricoCSVParam';\r\nimport { ImportacaoLancamentoCSVParam } from '../models/dtos/mcg/importacaoLancamentoCSVParam';\r\nimport { ImportacaoLancamentoMCGRetornoValidacao } from '../models/dtos/mcg/importacaoLancamentoMCGRetornoValidacao';\r\nimport { ImportacaoLancamentoMCGSelecao } from '../models/dtos/mcg/importacaoLancamentoMCGSelecao';\r\nimport { ImportacaoLancamentoPadraoCSVParam } from '../models/dtos/mcg/importacaoLancamentoPadraoCSVParam';\r\nimport { ImportacaoPlanoConta } from '../models/dtos/mcg/importacaoPlanoConta';\r\nimport { ImportacaoPlanoContaCSVParam } from '../models/dtos/mcg/importacaoPlanoContaCSVParam';\r\nimport { ImportacaoSpedContabil } from '../models/dtos/mcg/importacaoSpedContabil';\r\nimport { ImportacaoResult, ImportarMCP } from '../models/dtos/mcg/importarMCP';\r\nimport { InfoConciliacaoBancaria } from '../models/dtos/mcg/infoConciliacaoBancaria';\r\nimport { IntegracaoFolhaParam } from '../models/dtos/mcg/integracaoFolhaParam';\r\nimport { IntegracaoHonorariosParam } from '../models/dtos/mcg/integracaoHonorariosParam';\r\nimport { Lancamento } from '../models/dtos/mcg/lancamento';\r\nimport { LancamentoIntegracaoFolha } from '../models/dtos/mcg/lancamentoIntegracaoFolha';\r\nimport { LancamentoIntegracaoHonorarios } from '../models/dtos/mcg/lancamentoIntegracaoHonorarios';\r\nimport { LancamentoSaldo } from '../models/dtos/mcg/lancamentoSaldo';\r\nimport { LivroFolha } from '../models/dtos/mcg/livroFolha';\r\nimport { LucroPrejuizoClassificacao } from '../models/dtos/mcg/lucroPrejuizoClassificacao';\r\nimport { MANADContabilCrit } from '../models/dtos/mcg/manadContabilCrit';\r\nimport { MutacaoPatrimonioLiquido } from '../models/dtos/mcg/mutacaoPatrimonioLiquido';\r\nimport { QuadroSocietario } from '../models/dtos/mcg/quadroSocietario';\r\nimport { RemoveLancamentoLote } from '../models/dtos/mcg/removeLancamentoLote';\r\nimport { RemoveLancamentoPeriodo } from '../models/dtos/mcg/removeLancamentoPeriodo';\r\nimport { Saldo } from '../models/dtos/mcg/saldo';\r\nimport { SaldoCriteria } from '../models/dtos/mcg/saldoCriteria';\r\nimport { SelecaoSpedContabil } from '../models/dtos/mcg/selecaoSpedContabil';\r\nimport { SomaSaldo } from '../models/dtos/mcg/somaSaldo';\r\nimport { TotalizadorLancamento } from '../models/dtos/mcg/totalizadorLancamento';\r\nimport { TransferenciaLancamentoConta } from '../models/dtos/mcg/transferenciaLancamentoConta';\r\nimport { VerificarErros } from '../models/dtos/mcg/verificarErros';\r\nimport { getArquivoDigitalService } from './ger.service';\r\n\r\nfunction getService(): AxiosInstance {\r\n  return create('/mcg');\r\n}\r\n\r\nexport function gerarLancamentosFolhaPagamento(integracaoFolhaParam: IntegracaoFolhaParam, param: AxiosParam<LancamentoIntegracaoFolha[]>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/gerarLancamentosFolhaPagamento', integracaoFolhaParam), param);\r\n}\r\n\r\nexport function integrarFolhaPagamento(lancamentoIntegracaoFolha: LancamentoIntegracaoFolha[], param: AxiosParam<any>) {\r\n  send(getService().post<LancamentoIntegracaoFolha[]>('/integrarFolhaPagamento', lancamentoIntegracaoFolha), param);\r\n}\r\n\r\nexport function integrarMCP(importarParam: ImportarMCP, param: AxiosParam<ImportacaoResult>) {\r\n  send(getService().post<ImportacaoResult>('/importar', importarParam), param);\r\n}\r\n\r\nexport function importarLancamentoCSV(data: ImportacaoLancamentoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('importarDuplicados', String(data.importarDuplicados));\r\n  formDataSend.append('importarLancamentosCardinal', String(data.importarLancamentosCardinal));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarLancamentoPadraoCSV(data: ImportacaoLancamentoPadraoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarLancamentoPadraoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistoricoCSV(data: ImportacaoHistoricoCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('grupoHistoricoDestino.id', String(data.grupoHistoricoDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarHistoricoCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarPlanoContaCSV(data: ImportacaoPlanoContaCSVParam, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idEmpresa', String(data.idEmpresa));\r\n  formDataSend.append('grupoPlanoContaDestino.id', String(data.grupoPlanoContaDestino.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n  send(getService().post<RuleMessage[]>('/importarPlanoContaCSV', formDataSend), param);\r\n}\r\n\r\nexport function importarHistorico(importacaoHistorico: ImportacaoHistorico, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarHistorico', importacaoHistorico), param);\r\n}\r\n\r\nexport function importarPlanoConta(importacaoPlanoContaParam: ImportacaoPlanoConta, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/importarPlanoConta', importacaoPlanoContaParam), param);\r\n}\r\n\r\nexport function buscarConfigLivroFolhaMCG(idEmpresa: number, param: AxiosParam<LivroFolha>) {\r\n  send(getService().get<LivroFolha>('/buscarConfigLivroFolhaMCG/' + idEmpresa), param);\r\n}\r\n\r\nexport function integracaoFiscalContabil(importarParam: ImportacaoFiscalContabil, param: AxiosParam<ImportacaoFiscalContabilResult>) {\r\n  send(getService().post<ImportacaoFiscalContabilResult>('/integracaoFiscalContabil', importarParam), param);\r\n}\r\n\r\nexport function encerrarContas(\r\n  contaResultadoEncerramento: ContaResultadoMCGEncerramento,\r\n  force: boolean,\r\n  param: AxiosParam<ContaResultadoMCGEncerramento>\r\n) {\r\n  send(\r\n    getService().post<ContaResultadoMCGEncerramento>('/encerrarContas', { contaResultadoEncerramento, force }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function getDataUltimaContaEncerrada(idGerEmpresa: number, param: AxiosParam<Date>) {\r\n  send(getService().get<Date>('/getDataUltimaContaEncerrada/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function limparEncerramentoContaResultado(contaResultadoLimpeza: ContaResultadoLimpeza, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/limparEncerramentoContaResultadoApos', contaResultadoLimpeza), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFIrpjCsll(configECFIrpjCsll: ConfigECFIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFIrpjCsll', configECFIrpjCsll), param);\r\n}\r\n\r\nexport function validarReferenciaSPEDECFImuneIsenta(configECFImuneIsenta: ConfigECFImuneIsenta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarReferenciaSPEDECFImuneIsenta', configECFImuneIsenta), param);\r\n}\r\n\r\nexport function validarRefRemuneracaoSocio(configECFRemuneracaoSocio: ConfigECFRemuneracaoSocio, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/validarRefRemuneracaoSocio', configECFRemuneracaoSocio), param);\r\n}\r\n\r\nexport function validarQuadroSocietario(configQuadro: QuadroSocietario, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/validarQuadroSocietario', configQuadro), param);\r\n}\r\n\r\nexport function obterLucroPrejuizoClassificacao(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterLucroPrejuizoClassificacao/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function getSaldo(saldo: Saldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldo', saldo), param);\r\n}\r\n\r\nexport function validarDadosSpedECF(ecfExportacaoParam: ECFExportacaoParam, param: AxiosParam<RuleMessage[]>) {\r\n  send(getService().post<RuleMessage[]>('/validarDadosSpedECF', ecfExportacaoParam), param);\r\n}\r\n\r\nexport function gerarSpedECF(usuario: Usuario, ecfExportacaoParam: ECFExportacaoParam, param?: AxiosParam<string>) {\r\n  send(\r\n    getArquivoDigitalService().post<string>('/gerarSpedECF', { usuario, ecfExportacaoParam }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function recuperarLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<Lancamento[]>) {\r\n  send(getService().post<Lancamento[]>('/recuperarLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function transferirLancamentoConta(transferenciaLancamentoConta: TransferenciaLancamentoConta, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/transferirLancamentoConta', transferenciaLancamentoConta), param);\r\n}\r\n\r\nexport function obterBancoPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG>) {\r\n  send(getService().post<BancoMCG>('/obterBancoPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function validarConfigLivroFolha(idGerEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(getService().get<boolean>('/validarConfigLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function changeLivroFolha(idGerEmpresa: number, param: AxiosParam<void>) {\r\n  send(getService().get<void>('/changeLivroFolha/' + idGerEmpresa), param);\r\n}\r\n\r\nexport function fecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<RuleMessage>) {\r\n  send(getService().post<RuleMessage>('/fecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function forceFecharRestaurar(fechamentoRestauracao: FechamentoRestauracaoMCG, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/forceFecharRestaurar', fechamentoRestauracao), param);\r\n}\r\n\r\nexport function verificarErros(erros: VerificarErros, param: AxiosParam<Erros[]>) {\r\n  send(getService().post<Erros[]>('/verificarErros', erros), param);\r\n}\r\n\r\nexport function gerarSpedContabil(selecaoSped: SelecaoSpedContabil, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('usuario.id', String(selecaoSped.usuario.id));\r\n\r\n  if (selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n    for (const arquivo of selecaoSped.arquivoRTFEscrituracaoSubstituida) {\r\n      formDataSend.append('arquivoRTFEscrituracaoSubstituida', arquivo.file, arquivo.nomeArquivo);\r\n    }\r\n  }\r\n\r\n  for (const atributoSelecaoSped in selecaoSped) {\r\n    if (\r\n      atributoSelecaoSped !== 'arquivoRTFEscrituracaoSubstituida' &&\r\n      atributoSelecaoSped !== 'usuario' &&\r\n      selecaoSped[atributoSelecaoSped] !== null\r\n    ) {\r\n      formDataSend.append(atributoSelecaoSped, selecaoSped[atributoSelecaoSped]);\r\n    }\r\n  }\r\n  send(getService().post<string>('/gerarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function salvarLucroPrejuizoClassificacao(\r\n  lucroPrejuizoClassificacao: LucroPrejuizoClassificacao,\r\n  param: AxiosParam<LucroPrejuizoClassificacao>\r\n) {\r\n  send(getService().post<LucroPrejuizoClassificacao>('/salvarLucroPrejuizoClassificacao', lucroPrejuizoClassificacao), param);\r\n}\r\n\r\nexport function consultarMovimentacao(saldoCriteria: SaldoCriteria, param: AxiosParam<LancamentoSaldo[]>) {\r\n  send(getService().post<LancamentoSaldo[]>('/consultarMovimentacao', saldoCriteria), param);\r\n}\r\n\r\nexport function totalizadorLancamento(consulta: ConsultaTotalLancamento, param: AxiosParam<TotalizadorLancamento>) {\r\n  send(getService().post<TotalizadorLancamento>('/totalizadorLancamento', consulta), param);\r\n}\r\n\r\nexport function getSaldoAnterior(saldoCriteria: SaldoCriteria, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoAnterior', saldoCriteria), param);\r\n}\r\n\r\nexport function isDataEncerrada(parametros: DataEncerradaParam, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isDataEncerrada', parametros), param);\r\n}\r\n\r\nexport function abrirContas(parametros: DataEncerradaParam, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/abrirContas', parametros), param);\r\n}\r\n\r\nexport function removeLancamentoPeriodo(parametros: RemoveLancamentoPeriodo, param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removeLancamentoPeriodo', parametros), param);\r\n}\r\n\r\nexport function obterContasClassificacaoIndireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixaIndireto[]>) {\r\n  send(getService().get<ContaFluxoCaixaIndireto[]>('/obterContasClassificacaoIndireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoIndireto(contaFluxoCaixaIndireto: ContaFluxoCaixaIndireto, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoIndireto', contaFluxoCaixaIndireto), param);\r\n}\r\n\r\nexport function obterMutacaoPatrimonioLiquido(idGrupoPlanoConta: number, param: AxiosParam<[]>) {\r\n  send(getService().get<[]>('/obterMutacaoPatrimonioLiquido/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarMutacaoPatrimonioLiquido(mutacaoPatrimonioLiquido: MutacaoPatrimonioLiquido, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarMutacaoPatrimonioLiquido', mutacaoPatrimonioLiquido), param);\r\n}\r\n\r\nexport function salvarContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/salvarContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function excluirContaResultado(contaResultado: ContaResultado, param?: AxiosParam<void>) {\r\n  send(getService().post<void>('/excluirContaResultado', contaResultado), param);\r\n}\r\n\r\nexport function obterContasClassificacaoDireto(idGrupoPlanoConta: number, param: AxiosParam<ContaFluxoCaixa[]>) {\r\n  send(getService().get<ContaFluxoCaixa[]>('/obterContasClassificacaoDireto/' + idGrupoPlanoConta), param);\r\n}\r\n\r\nexport function salvarClassificacaoDireto(contaFluxoCaixa: ContaFluxoCaixa, param?: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/salvarClassificacaoDireto', contaFluxoCaixa), param);\r\n}\r\n\r\nexport function findSubGrupo(planoContaSubGrupoParam: PlanoContaSubGrupoParam, param: AxiosParam<any>) {\r\n  send(getService().post<any>('/findSubGrupo', planoContaSubGrupoParam), param);\r\n}\r\n\r\nexport function removerTodosPlanosConta(idGrupoPlanoConta: number, usuario: Usuario, param: AxiosParam<void>) {\r\n  send(\r\n    getService().post<void>('/removerTodosPlanosConta', { idGrupoPlanoConta, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function removeList(listaPlanoConta: PlanoConta[], apagarFilha: boolean, usuario: Usuario, param: AxiosParam<any>) {\r\n  send(\r\n    getService().post<any>('/removeList', { listaPlanoConta, apagarFilha, usuario }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function listSubGrupo(planoConta: PlanoConta, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().post<PlanoConta[]>('/listSubGrupo', planoConta), param);\r\n}\r\n\r\nexport function referenciarContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<void>\r\n) {\r\n  send(\r\n    getService().post<void>('/referenciarContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function desvincularContas(\r\n  idsPlanoConta: number[],\r\n  idPlanoContaReferencial: number,\r\n  idPlanoContaReferencialECF: number,\r\n  param: AxiosParam<any>\r\n) {\r\n  send(\r\n    getService().post<void>('/desvincularContas', { idsPlanoConta, idPlanoContaReferencial, idPlanoContaReferencialECF }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function existeLancamentoEmContaAnalitica(idPlanoConta: number, idEmpresa: number, param: AxiosParam<boolean>) {\r\n  send(\r\n    getService().post<boolean>('/existeLancamentoEmContaAnalitica', { idPlanoConta, idEmpresa }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function importarLancamentoMCG(data: ImportacaoLancamentoMCGSelecao, param: AxiosParam<ImportacaoLancamentoMCGRetornoValidacao>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('tipoImportacao', String(data.tipoImportacao));\r\n  formDataSend.append('sobescrever', String(data.sobescrever));\r\n  formDataSend.append('versaoSuperiorA2', String(data.versaoSuperiorA2));\r\n  formDataSend.append('arquivo', data.arquivo[0].file, data.arquivo[0].nomeArquivo);\r\n\r\n  if (data.versaoSuperiorA2 === false && !isEmpty(data.dtInicial) && !isEmpty(data.dtFinal)) {\r\n    formDataSend.append('dtInicial', data.dtInicial);\r\n    formDataSend.append('dtFinal', data.dtFinal);\r\n  }\r\n\r\n  send(getService().post<ImportacaoLancamentoMCGRetornoValidacao>('/importarLancamentoMCG', formDataSend), param);\r\n}\r\n\r\nexport function importarSpedContabil(data: ImportacaoSpedContabil, param: AxiosParam<RuleMessage[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('empresa.id', String(data.empresa.id));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  for (const arquivo of data.arquivos) {\r\n    formDataSend.append('arquivos', arquivo.file, arquivo.nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<RuleMessage[]>('/importarSpedContabil', formDataSend), param);\r\n}\r\n\r\nexport function gerarManadContabil(data: MANADContabilCrit, param: AxiosParam<string>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('refInicial', data.refInicial);\r\n  formDataSend.append('refFinal', data.refFinal);\r\n  formDataSend.append('idGerEmpresa', String(data.idGerEmpresa));\r\n  formDataSend.append('usuario.id', String(data.usuario.id));\r\n\r\n  if (!isEmpty(data.arquivoSFP)) {\r\n    formDataSend.append('arquivoSFP', data.arquivoSFP[0].file, data.arquivoSFP[0].nomeArquivo);\r\n  }\r\n\r\n  send(getService().post<string>('/gerarManadContabil', formDataSend), param);\r\n}\r\n\r\nexport function evolucaoContaContabilGraf(\r\n  evolucaoContaContabilGrafParam: EvolucaoContaContabilGrafParam,\r\n  param: AxiosParam<EvolucaoContaContabilGrafReturn>\r\n) {\r\n  send(getService().post<EvolucaoContaContabilGrafReturn>('/evolucaoContaContabilGraf', evolucaoContaContabilGrafParam), param);\r\n}\r\n\r\nexport function composicaoReceitaDespesasGraf(\r\n  compReceitaDespesasGrafParam: ComposicaoReceitaDespesasGrafParam,\r\n  param: AxiosParam<ComposicaoReceitaDespesasGrafReturn>\r\n) {\r\n  send(getService().post<ComposicaoReceitaDespesasGrafReturn>('/composicaoReceitaDespesasGraf', compReceitaDespesasGrafParam), param);\r\n}\r\n\r\nexport function gerarFCONTContabil(fContContabilCrit: FCONTContabilCrit, param: AxiosParam<void>) {\r\n  send(getService().post<void>('/gerarFCONTContabil', fContContabilCrit), param);\r\n}\r\n\r\nexport function obterDadosArquivoExtrato(arquivoSelecionado: ArquivoSelecionado, idBancoMCG, param: AxiosParam<BancoExtrato[]>) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idBancoMCG', idBancoMCG);\r\n\r\n  formDataSend.append('arquivoSelecionado', arquivoSelecionado[0].file, arquivoSelecionado[0].nomeArquivo);\r\n\r\n  send(getService().post<BancoExtrato[]>('/obterDadosArquivoExtrato', formDataSend), param);\r\n}\r\n\r\nexport function obterDadosConciliacaoBancariaPeriodo(\r\n  idGrupoPlanoConta,\r\n  idEmpresa,\r\n  idBancoMCG,\r\n  dtInicial,\r\n  dtFinal,\r\n  param: AxiosParam<InfoConciliacaoBancaria>\r\n) {\r\n  const formDataSend = new FormData();\r\n  formDataSend.append('idGrupoPlanoConta', String(idGrupoPlanoConta));\r\n  formDataSend.append('idEmpresa', String(idEmpresa));\r\n  formDataSend.append('idBancoMCG', String(idBancoMCG));\r\n  formDataSend.append('dtInicial', String(dtInicial));\r\n  formDataSend.append('dtFinal', String(dtFinal));\r\n\r\n  send(getService().post<InfoConciliacaoBancaria>('/obterDadosConciliacaoBancariaPeriodo', formDataSend), param);\r\n}\r\n\r\nexport function obterBancoListPlanoConta(bancoPlanoContaDTO: BancoPlanoConta, param: AxiosParam<BancoMCG[]>) {\r\n  send(getService().post<BancoMCG[]>('/obterBancoListPlanoConta', bancoPlanoContaDTO), param);\r\n}\r\n\r\nexport function conciliarLancamentosExtrato(listConciliacaoBancaria: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/conciliarLancamentosExtrato', listConciliacaoBancaria), param);\r\n}\r\n\r\nexport function removerConciliarLancamentosExtrato(listaRemover: ConciliacaoBancaria[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerConciliarLancamentosExtrato', listaRemover), param);\r\n}\r\n\r\nexport function removerLancamentosExtratoBancario(listaRemover: BancoExtrato[], param: AxiosParam<string>) {\r\n  send(getService().post<string>('/removerLancamentosExtratoBancario', listaRemover), param);\r\n}\r\n\r\nexport function eLalurAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLalurAContas/' + id), param);\r\n}\r\n\r\nexport function eLacsAContas(id: number, param: AxiosParam<PlanoConta[]>) {\r\n  send(getService().get<PlanoConta[]>('/eLacsAContas/' + id), param);\r\n}\r\n\r\nexport function getSaldoDebito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoDebito', parametros), param);\r\n}\r\n\r\nexport function getSaldoCredito(parametros: SomaSaldo, param: AxiosParam<number>) {\r\n  send(getService().post<number>('/getSaldoCredito', parametros), param);\r\n}\r\n\r\nexport function removerLancamentoLote(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/removerLancamentoLote', parametros), param);\r\n}\r\n\r\nexport function atualizaCalculoIrpjCsll(parametros: RemoveLancamentoLote, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/atualizaCalculoIrpjCsll', parametros), param);\r\n}\r\n\r\nexport function buscarLancamentosHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  param: AxiosParam<LancamentoIntegracaoHonorarios[]>\r\n) {\r\n  send(getService().post<LancamentoIntegracaoHonorarios[]>('/buscarLancamentosHonorarios', integracaoHonorariosParam), param);\r\n}\r\n\r\nexport function integrarHonorarios(\r\n  integracaoHonorariosParam: IntegracaoHonorariosParam,\r\n  lancamentos: LancamentoIntegracaoHonorarios[],\r\n  param: AxiosParam<number>\r\n) {\r\n  send(\r\n    getService().post<number>('/integrarHonorarios', { integracaoHonorariosParam, lancamentos }),\r\n    param\r\n  );\r\n}\r\n\r\nexport function isAlteraCalculoIRPJorCSLL(parametros: CalculoIrpjCsll, param: AxiosParam<boolean>) {\r\n  send(getService().post<boolean>('/isAlteraCalculoIRPJorCSLL', parametros), param);\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["views/pages/mcg/report/demonstracaoLucroPrejuizo/demonstrativoLucroPrejuizoRV.ts","views/pages/mcg/report/demonstracaoLucroPrejuizo/DemonstrativoLucroPrejuizoReportView.tsx","dependencies/empresaDependency.ts","models/enumerated/ger/saldoReportEnum.ts","views/components/ger/empresaIS/EmpresaIS.tsx","models/dtos/ger/reportBasicValues.ts","models/dtos/ger/reportViewOptions.ts","views/components/envioEmail/DestinatarioEmailDetailEditView.tsx","views/components/envioEmail/EnvioEmail.tsx","views/components/report/ReportInputs.tsx","views/components/report/ReportForm.tsx","dependencies/grupoEmpresaConfigDependency.ts","dependencies/empresaMCGDependency.ts","models/enumerated/ger/consolidarEnum.ts"],"names":["DEFAULT_VALUES","Object","objectSpread2","getDefaultReportBasicValues","consolidacao","NORMAL","value","gerarCabecalhoPadraoAdministradora","DEFAULT_OPTIONS","getDefaultReportViewOptions","REFERENCE","exibirConfiguracaoDadosEmpresa","exibirSegmentacaoFolha","DemonstrativoLucroPrejuizoReportView","props","globalReducer","useSelector","state","_useForm","useForm","defaultValues","mode","handleSubmit","formProps","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","isMatriz","setIsMatriz","useEffect","globalParameter","empresa","setTimeout","matriz","setValue","centralizar","getValues","compararPeriodoAnterior","reportViewType","referenciaInicial","empresaMCG","refAtual","REFERENCES","react_default","a","createElement","summer_esm","title","useGlobalParameter","dependencies","hasEmpresa","hasEmpresaMCG","hasGrupoEmpresaConfig","wikiId","ReportForm","assign","localStorageKey","routeProps","reportBasicValues","reportViewOptions","id","validation","required","label","inputDropDownProps","optionsProvider","CONSOLIDAR_ENUM_VALUES","selectProps","autoFocus","isClearable","isPrependLabel","placeholder","type","InputType","DROP_DOWN","FormGroup","tag","Row","Col","CustomInput","name","innerRef","register","withTooltip","messagem","message","placement","propToolTip","disabled","result","__webpack_require__","d","__webpack_exports__","NATUREZA","SALDO_REPORT_ENUM","EmpresaIS","react__WEBPACK_IMPORTED_MODULE_1___default","summer__WEBPACK_IMPORTED_MODULE_2__","inputSearchProps","C_Program_Files_x86_Jenkins_workspace_Calima_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","columns","dataField","text","dtoClassName","CLASS_NAME","searchViewId","INPUT_SEARCH","summer__WEBPACK_IMPORTED_MODULE_0__","_enumerated_ger_saldoReportEnum__WEBPACK_IMPORTED_MODULE_1__","identificadorAjuda","identificadorMenu","designType","GRAPHIC","empresasSelecionadas","envioEmail","anexos","assunto","destinatarios","exibirFormatacaoValor","gerarBom","gerarCabecalhoPadrao","imprimirCodigoEmpresa","imprimirDataHora","imprimirValoresColoridos","requestSolicitacao","saldoReportEnum","saveSession","showDadosEmpresa","showLogoAdministradora","startPage","virtualization","reportEventType","anoLabel","dtFinalLabel","dtInicialLabel","exibirConfiguracaoDataAtual","exibirConfiguracaoLogoAdministradora","exibirEnviarPorEmail","exibirPaginaInicial","refFinalLabel","refInicialLabel","emptyItem","contato","email","DestinatarioEmailDetailEditView","selectedItem","errors","triggerValidation","handleCancel","validateExtras","currentItem","currentValues","parentObject","EnvioEmail","Fragment","sort","detailView","keyField","propName","className","maxLength","TEXT_AREA","ReportInputs","activeTab","setActiveTab","_props$reportViewOpti","printingTypes","resetObject","length","idGerEmpresa","current","currentMomentDate","endDate","DATE","dtInicial","formatDate","toDate","DATES","dtFinal","endOf","format","REF_PATTERN","referenciaFinal","ANO","ano","String","year","reset","toggleTab","target","tabIndex","dateInitial","dtInicialRequired","dateComponent","datesComponent","dtFinalRequired","referenceInitial","refInicialRequired","referenceComponent","referencesComponent","refFinalRequired","anoComponent","anoRequired","inputMaskedProps","mask","MASK","startPageComponent","min","NUMBER","multiplasEmpresasComponent","exibirConfiguracaoMultiplasEmpresas","xs","inputProps","gerarPorEmpresas","style","marginBottom","size","isMulti","segmentacaoFolhaComponent","dataAtualComponent","logoAdmComponent","dadosEmpresaComponent","formatacaoValoresComponent","exibirImprimirValoresColoridos","firstOpen","extraConfigOpened","Nav","tabs","NavItem","NavLink","cx","active","onClick","TabContent","TabPane","tabId","hidden","iconAppend","appendClickHandler","minLength","DESIGN_TYPE_ENUM","envioEmail_EnvioEmail","initialSubject","headerDrawerToggle","dispatch","useDispatch","finishSubmit","data","addExtraParameters","gerarReport","errorFunction","mensagem","showToast","ERROR","thenFunction","toggleHeaderDrawer","afterSubmit","Form","noValidate","children","report_ReportInputs","event","preventDefault","erros","params","AlertType","alertManager","emit","ACTION_EVENTS","SHOW","INFORMATION","handleClose","dispatchClose","history","grupoEmpresaRaiz","grupoEmpresaConfig","grupoEmpresa","GRUPO_ATUAL","HIERARQUIA_INFERIOR"],"mappings":"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","file":"static/js/98.ff7e910f.chunk.js","sourcesContent":["import { ReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\n\r\nexport interface DemonstrativoLucroPrejuizoRV extends ReportBasicValues {\r\n  adicionarMarginHeader?: boolean;\r\n  compararPeriodoAnterior?: boolean;\r\n  /** Campo utiliza o ConsolidarEnum */\r\n  consolidacao?: string;\r\n  imprimirDataInicialFinal?: boolean;\r\n  isAcumularMatrizFilial?: boolean;\r\n}\r\n\r\nexport const CLASS_KEY: string = 'demonstrativolucroprejuizorv';\r\nexport const REPORT_EVENT: string = 'printDemonstrativoLucroPrejuizo';\r\nexport const REPORT_TITLE: string = 'Demonstrativo de Lucros e Prejuízos';\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Col, CustomInput, FormGroup, Row } from 'reactstrap';\r\nimport { InputGroupInline, InputTooltipProps, InputType, REFERENCE, REFERENCES, WindowComponent, WindowComponentProps, withTooltip } from 'summer';\r\nimport { hasEmpresa } from '../../../../../dependencies/empresaDependency';\r\nimport { hasEmpresaMCG } from '../../../../../dependencies/empresaMCGDependency';\r\nimport { hasGrupoEmpresaConfig } from '../../../../../dependencies/grupoEmpresaConfigDependency';\r\nimport { getDefaultReportBasicValues } from '../../../../../models/dtos/ger/reportBasicValues';\r\nimport { getDefaultReportViewOptions, ReportViewOptions } from '../../../../../models/dtos/ger/reportViewOptions';\r\nimport { CONSOLIDAR_ENUM_VALUES, NORMAL } from '../../../../../models/enumerated/ger/consolidarEnum';\r\nimport { Reducers } from '../../../../../store/ducks';\r\nimport { GlobalState } from '../../../../../store/ducks/global.duck';\r\nimport ReportForm from '../../../../components/report/ReportForm';\r\nimport { CLASS_KEY, DemonstrativoLucroPrejuizoRV, REPORT_EVENT, REPORT_TITLE } from './demonstrativoLucroPrejuizoRV';\r\n\r\nconst DEFAULT_VALUES: DemonstrativoLucroPrejuizoRV = {\r\n  ...getDefaultReportBasicValues(REPORT_TITLE),\r\n  consolidacao: NORMAL.value,\r\n  gerarCabecalhoPadraoAdministradora: true,\r\n};\r\n\r\nconst DEFAULT_OPTIONS: ReportViewOptions = {\r\n  ...getDefaultReportViewOptions(REPORT_EVENT, REFERENCE.value),\r\n  exibirConfiguracaoDadosEmpresa: true,\r\n  exibirSegmentacaoFolha: true,\r\n};\r\n\r\nconst DemonstrativoLucroPrejuizoReportView: FC<WindowComponentProps & RouteComponentProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n\r\n  const { handleSubmit, ...formProps } = useForm<DemonstrativoLucroPrejuizoRV>({ defaultValues: DEFAULT_VALUES, mode: 'onBlur' });\r\n\r\n  const [isMatriz, setIsMatriz] = useState(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (globalReducer.globalParameter.empresa !== null) {\r\n        const empresa = globalReducer.globalParameter.empresa;\r\n        setTimeout(() => {\r\n          if (empresa.matriz === null) {\r\n            formProps.setValue('isAcumularMatrizFilial', empresa.centralizar);\r\n            setIsMatriz(true);\r\n          }\r\n        }, 500);\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      if (formProps.getValues().compararPeriodoAnterior === true) {\r\n        DEFAULT_OPTIONS.reportViewType = REFERENCE.value;\r\n        DEFAULT_VALUES.referenciaInicial = globalReducer.globalParameter.empresaMCG.refAtual;\r\n        formProps.setValue('isAcumularMatrizFilial', false);\r\n      } else {\r\n        DEFAULT_OPTIONS.reportViewType = REFERENCES.value;\r\n      }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [formProps.getValues().compararPeriodoAnterior]\r\n  );\r\n\r\n  const propToolTip = (messagem: string): InputTooltipProps => {\r\n    return {\r\n      message: messagem,\r\n      placement: 'top-start',\r\n    };\r\n  };\r\n\r\n  return (\r\n    <WindowComponent\r\n      title=\"Demonstrativo de Lucros e Prejuízos\"\r\n      useGlobalParameter={true}\r\n      globalParameter={globalReducer.globalParameter}\r\n      dependencies={[\r\n        () => hasEmpresa(globalReducer.globalParameter),\r\n        () => hasEmpresaMCG(globalReducer.globalParameter),\r\n        () => hasGrupoEmpresaConfig(globalReducer.globalParameter),\r\n      ]}\r\n      wikiId={2156}\r\n    >\r\n      <ReportForm\r\n        {...props}\r\n        handleSubmit={handleSubmit}\r\n        formProps={formProps}\r\n        localStorageKey={CLASS_KEY}\r\n        routeProps={props}\r\n        reportBasicValues={DEFAULT_VALUES}\r\n        reportViewOptions={DEFAULT_OPTIONS}\r\n      >\r\n        <InputGroupInline\r\n          id=\"consolidacao\"\r\n          formProps={{ ...formProps, validation: { required: true } }}\r\n          label=\"Consolidação\"\r\n          inputDropDownProps={{\r\n            optionsProvider: CONSOLIDAR_ENUM_VALUES,\r\n            selectProps: { autoFocus: true, isClearable: false },\r\n          }}\r\n          isPrependLabel={true}\r\n          placeholder=\"Informe a Consolidação\"\r\n          type={InputType.DROP_DOWN}\r\n        />\r\n\r\n        <FormGroup tag={Row}>\r\n          <Col>\r\n            <CustomInput\r\n              id=\"idcompararPeriodoAnterior\"\r\n              label=\"Comparar com o Período Anterior\"\r\n              name=\"compararPeriodoAnterior\"\r\n              innerRef={formProps.register}\r\n              title=\"\"\r\n              type=\"switch\"\r\n            />\r\n            {withTooltip(propToolTip('Ao comparar com o período anterior só é permitido informar a referência inicial.'), 'compararPeriodoAnterior')}\r\n          </Col>\r\n        </FormGroup>\r\n        {isMatriz ? (\r\n          <FormGroup tag={Row}>\r\n            <Col>\r\n              <CustomInput\r\n                disabled={formProps.getValues().compararPeriodoAnterior}\r\n                id=\"checkIsAcumularMatrizFilial\"\r\n                label=\"Acumular matriz e filiais\"\r\n                name=\"isAcumularMatrizFilial\"\r\n                innerRef={formProps.register}\r\n                type=\"switch\"\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n        ) : null}\r\n\r\n        <FormGroup tag={Row}>\r\n          <Col>\r\n            <CustomInput\r\n              id=\"checkImprimirDataInicialFinal\"\r\n              label=\"Trocar campo referência do cabeçalho para data inicial/final\"\r\n              name=\"imprimirDataInicialFinal\"\r\n              innerRef={formProps.register}\r\n              type=\"switch\"\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n      </ReportForm>\r\n    </WindowComponent>\r\n  );\r\n};\r\n\r\nexport default DemonstrativoLucroPrejuizoReportView;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresa(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresa) {\r\n    result = 'Pelo menos uma empresa deve estar selecionada.';\r\n  }\r\n  return result;\r\n}\r\n","export const PADRAO = { label: \"Utilizar sinal '-' para valores negativos\", value: 'PADRAO' };\r\nexport const PARENTESE = { label: \"Utilizar Parênteses '()' para valores negativos\", value: 'PARENTESE' };\r\nexport const NATUREZA = { label: 'Utilizar Natureza da Conta', value: 'NATUREZA' };\r\n\r\nconst SALDO_REPORT_ENUM = [PADRAO, PARENTESE, NATUREZA];\r\n\r\nexport default SALDO_REPORT_ENUM;\r\n","import React, { FC } from 'react';\r\nimport { InputGroupInline, InputProps, InputType } from 'summer';\r\nimport { CLASS_NAME } from '../../../../models/dtos/ger/empresaVW';\r\n\r\nexport interface EmpresaInputSearchProps extends InputProps {\r\n  dtoClassName?: string;\r\n}\r\n\r\nconst EmpresaIS: FC<EmpresaInputSearchProps> = props => {\r\n  return (\r\n    <InputGroupInline\r\n      {...props}\r\n      isPrependLabel={true}\r\n      inputSearchProps={{\r\n        ...props.inputSearchProps,\r\n        columns: [\r\n          {\r\n            dataField: 'codigo',\r\n            text: 'Código',\r\n          },\r\n          {\r\n            dataField: 'razaoSocial',\r\n            text: 'Razão Social',\r\n          },\r\n          {\r\n            dataField: 'nomeFantasia',\r\n            text: 'Nome Fantasia',\r\n          },\r\n          {\r\n            dataField: 'cnpj',\r\n            text: 'CNPJ',\r\n          },\r\n          {\r\n            dataField: 'cpf',\r\n            text: 'CPF',\r\n          },\r\n          {\r\n            dataField: 'cei',\r\n            text: 'CEI',\r\n          },\r\n          {\r\n            dataField: 'ie',\r\n            text: 'IE',\r\n          },\r\n          {\r\n            dataField: 'im',\r\n            text: 'IM',\r\n          },\r\n          {\r\n            dataField: 'grupo',\r\n            text: 'Grupo',\r\n          },\r\n        ],\r\n        dtoClassName: props.dtoClassName || CLASS_NAME,\r\n        searchViewId: 'EmpresaSearchView',\r\n      }}\r\n      label={props.label ? props.label : 'Empresa'}\r\n      placeholder={props.placeholder ? props.placeholder : 'Informe a Empresa'}\r\n      type={InputType.INPUT_SEARCH}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmpresaIS;\r\n","import { GRAPHIC } from 'summer';\r\nimport { NATUREZA } from '../../enumerated/ger/saldoReportEnum';\r\nimport { Empresa } from './empresa';\r\nimport { EnvioEmail } from './envioEmail';\r\nimport { Usuario } from './usuario';\r\n\r\nexport interface ReportBasicValues {\r\n  /** chave do relatório */\r\n  key?: string;\r\n  /** Tipo de arquivo gerado */\r\n  designType?: string;\r\n  /** Título do relatório */\r\n  title?: string;\r\n  /** Página inicial do relatório */\r\n  startPage?: string;\r\n  /** Data inicial para a geração do relatório */\r\n  dtInicial?: string;\r\n  /** Data final para a geração do relatório */\r\n  dtFinal?: string;\r\n  /** Referência inicial para a geração do relatório */\r\n  referenciaInicial?: string;\r\n  /** Referência final para a geração do relatório */\r\n  referenciaFinal?: string;\r\n  /** É para imprimir com a data atual ? */\r\n  showCurrentDate?: boolean;\r\n  empresa?: Empresa;\r\n  saldoReportEnum?: string;\r\n  exibirFormatacaoValor?: boolean;\r\n  imprimirValoresColoridos?: boolean;\r\n  /** Ano para a geração do relatório */\r\n  ano?: string;\r\n  showDadosEmpresa?: boolean;\r\n  showLogoAdministradora?: boolean;\r\n\r\n  enviarPorEmail?: boolean;\r\n  envioEmail?: EnvioEmail;\r\n  imprimirDataHora?: boolean;\r\n  imprimirCodigoEmpresa?: boolean;\r\n  usuario?: Usuario;\r\n  segmentacaoFolha?: boolean;\r\n  virtualization?: boolean;\r\n  gerarBom?: boolean;\r\n  identificadorAjuda?: string;\r\n  gerarCabecalhoPadrao?: boolean;\r\n  gerarCabecalhoPadraoAdministradora?: boolean;\r\n  gerarPorEmpresas?: boolean;\r\n  empresasSelecionadas?: Empresa[];\r\n  identificadorMenu?: string;\r\n  enviarParaConnect?: boolean;\r\n  requestSolicitacao?: any; // TODO RequestSolicitacaoDTO;\r\n  enviarEmailAdministradora?: boolean;\r\n\r\n  /** É para salvar a sessão ? */\r\n  saveSession?: boolean;\r\n  idGerEmpresa?: string;\r\n}\r\n\r\nexport function getDefaultReportBasicValues(title: string = null, identificadorAjuda: string = null, identificadorMenu: string = null) {\r\n  return {\r\n    designType: GRAPHIC.value,\r\n    empresasSelecionadas: [],\r\n    envioEmail: {\r\n      anexos: [],\r\n      assunto: title,\r\n      destinatarios: [],\r\n    },\r\n    exibirFormatacaoValor: false,\r\n    gerarBom: true,\r\n    gerarCabecalhoPadrao: true,\r\n    gerarCabecalhoPadraoAdministradora: false,\r\n    identificadorAjuda,\r\n    identificadorMenu,\r\n    imprimirCodigoEmpresa: true,\r\n    imprimirDataHora: false,\r\n    imprimirValoresColoridos: false,\r\n    requestSolicitacao: {},\r\n    saldoReportEnum: NATUREZA.value,\r\n    saveSession: false,\r\n    showDadosEmpresa: true,\r\n    showLogoAdministradora: true,\r\n    startPage: '1',\r\n    title,\r\n    virtualization: false,\r\n  };\r\n}\r\n","import { BasicReportViewOptions } from 'summer';\r\n\r\nexport interface ReportViewOptions extends BasicReportViewOptions {\r\n  exibirEnviarPorEmail?: boolean;\r\n\r\n  exibirPaginaInicial?: boolean;\r\n  exibirConfiguracaoMultiplasEmpresas?: boolean;\r\n  exibirSegmentacaoFolha?: boolean;\r\n  exibirConfiguracaoDataAtual?: boolean;\r\n  exibirImprimirValoresColoridos?: boolean;\r\n  exibirConfiguracaoLogoAdministradora?: boolean;\r\n  exibirConfiguracaoDadosEmpresa?: boolean;\r\n}\r\n\r\nexport function getDefaultReportViewOptions(reportEventType: string, reportViewType: string = null) {\r\n  return {\r\n    anoLabel: 'Ano',\r\n    dtFinalLabel: 'Data Final',\r\n    dtInicialLabel: 'Data Inicial',\r\n    exibirConfiguracaoDadosEmpresa: true,\r\n    exibirConfiguracaoDataAtual: true,\r\n    exibirConfiguracaoLogoAdministradora: true,\r\n    exibirEnviarPorEmail: true,\r\n    exibirPaginaInicial: true,\r\n    refFinalLabel: 'Referência Final',\r\n    refInicialLabel: 'Referência Inicial',\r\n    reportEventType,\r\n    reportViewType,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DetailEditForm, DetailEditViewFormProps, InputGroupInline } from 'summer';\r\nimport { DestinatarioEmail } from '../../../models/dtos/ger/destinatarioEmail';\r\n\r\nconst emptyItem: DestinatarioEmail = {\r\n  contato: '',\r\n  email: '',\r\n};\r\n\r\nconst DestinatarioEmailDetailEditView: React.FC<DetailEditViewFormProps<DestinatarioEmail>> = props => {\r\n  const { errors, getValues, register, setValue, triggerValidation } = useForm<DestinatarioEmail>({\r\n    defaultValues: props.selectedItem || emptyItem,\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const formProps = {\r\n    errors,\r\n    getValues,\r\n    register,\r\n    setValue,\r\n    triggerValidation,\r\n  };\r\n\r\n  const validateExtras = (currentItem: any, currentValues: any[], parentObject: any) => {\r\n    return [];\r\n  };\r\n\r\n  return (\r\n    <DetailEditForm handleSubmit={props.handleSubmit} handleCancel={props.handleCancel} formProps={formProps} validateExtras={validateExtras}>\r\n      <InputGroupInline\r\n        id=\"contato\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"Contato\"\r\n        placeholder=\"Informe o nome do contato\"\r\n      />\r\n\r\n      <InputGroupInline\r\n        id=\"email\"\r\n        isPrependLabel={true}\r\n        formProps={{\r\n          ...formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n        label=\"E-mail\"\r\n        placeholder=\"Informe o e-mail do contato\"\r\n      />\r\n    </DetailEditForm>\r\n  );\r\n};\r\n\r\nexport default DestinatarioEmailDetailEditView;\r\n","import React, { FC } from 'react';\r\nimport { Col, CustomInput, Row } from 'reactstrap';\r\nimport { ColumnsProps, DetailManagerForm, InputGroupInline, InputType, UseFormProps } from 'summer';\r\nimport DestinatarioEmailDetailEditView from './DestinatarioEmailDetailEditView';\r\n\r\nexport interface EnvioEmailProps {\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** Assunto padrão */\r\n  initialSubject?: string;\r\n}\r\n\r\nconst EnvioEmail: FC<EnvioEmailProps> = props => {\r\n  const columns: ColumnsProps[] = [\r\n    {\r\n      dataField: 'contato',\r\n      sort: true,\r\n      text: 'Contato',\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      sort: true,\r\n      text: 'E-mail',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <p>Dados para Envio do E-mail</p>\r\n      <InputGroupInline\r\n        id=\"envioEmail.assunto\"\r\n        label=\"Assunto\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Assunto\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            required: true,\r\n          },\r\n        }}\r\n      />\r\n\r\n      <DetailManagerForm\r\n        columns={columns}\r\n        title=\"Destinatário E-mail\"\r\n        detailView={DestinatarioEmailDetailEditView}\r\n        keyField=\"email\"\r\n        formProps={props.formProps}\r\n        propName=\"envioEmail.destinatarios\"\r\n        {...props}\r\n      />\r\n\r\n      <p>Copiar para:</p>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailAdministradora\"\r\n            name=\"envioEmail.enviarEmailAdministradora\"\r\n            label=\"Administradora\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"enviarEmailUsuarioLogado\"\r\n            name=\"envioEmail.enviarEmailUsuarioLogado\"\r\n            label=\"Usuário Logado\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <InputGroupInline\r\n        id=\"envioEmail.mensagem\"\r\n        label=\"Mensagem\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Mensagem\"\r\n        formProps={{\r\n          ...props.formProps,\r\n          validation: {\r\n            maxLength: 1000,\r\n          },\r\n        }}\r\n        type={InputType.TEXT_AREA}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnvioEmail;\r\n","import cx from 'clsx';\r\nimport React, { FC, MouseEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Col, CustomInput, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  ANO,\r\n  currentMomentDate,\r\n  DATE,\r\n  DATES,\r\n  DESIGN_TYPE_ENUM,\r\n  format,\r\n  formatDate,\r\n  GRAPHIC,\r\n  InputGroupInline,\r\n  InputType,\r\n  REF_PATTERN,\r\n  REFERENCE,\r\n  REFERENCES,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport SALDO_REPORT_ENUM from '../../../models/enumerated/ger/saldoReportEnum';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState } from '../../../store/ducks/global.duck';\r\nimport EnvioEmail from '../envioEmail/EnvioEmail';\r\nimport EmpresaIS from '../ger/empresaIS/EmpresaIS';\r\n\r\nexport interface ReportProps {\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Opções do relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** UseFormProps (vide useForm) */\r\n  formProps: UseFormProps;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n}\r\n\r\nconst ReportInputs: FC<ReportProps> = props => {\r\n  const globalReducer = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      const { printingTypes, reportViewType } = props.reportViewOptions;\r\n      let resetObject: any = {\r\n        ...props.reportBasicValues,\r\n        designType: printingTypes && printingTypes.length > 0 ? printingTypes[0] : GRAPHIC.value,\r\n        idGerEmpresa: globalReducer.globalParameter.empresa.id,\r\n        startPage: 1,\r\n      };\r\n      const current = currentMomentDate();\r\n      const endDate = currentMomentDate();\r\n      switch (reportViewType) {\r\n        case DATE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case DATES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            dtFinal: formatDate(endDate.endOf('month').toDate()),\r\n            dtInicial: formatDate(current.toDate()),\r\n          };\r\n          break;\r\n        case REFERENCE.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaInicial: format(current.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case REFERENCES.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            referenciaFinal: format(current.toDate(), REF_PATTERN),\r\n            referenciaInicial: format(endDate.toDate(), REF_PATTERN),\r\n          };\r\n          break;\r\n        case ANO.value:\r\n          resetObject = {\r\n            ...resetObject,\r\n            ano: String(current.year()),\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      props.formProps.reset(resetObject);\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [props.reportViewOptions, globalReducer.globalParameter.empresa]\r\n  );\r\n\r\n  const toggleTab = ({ target }: MouseEvent) => {\r\n    const { tabIndex } = target as HTMLElement;\r\n    if (activeTab !== tabIndex) {\r\n      setActiveTab(tabIndex);\r\n    }\r\n  };\r\n\r\n  const restoreTitle = () => {\r\n    props.formProps.setValue('title', props.reportBasicValues.title, true);\r\n  };\r\n\r\n  const dateInitial = (\r\n    <InputGroupInline\r\n      id=\"dtInicial\"\r\n      label={props.reportViewOptions.dtInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtInicialRequired } }}\r\n      type={InputType.DATE}\r\n    />\r\n  );\r\n\r\n  const dateComponent = props.reportViewOptions.reportViewType === DATE.value ? dateInitial : null;\r\n\r\n  const datesComponent =\r\n    props.reportViewOptions.reportViewType === DATES.value ? (\r\n      <>\r\n        {dateInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"dtFinal\"\r\n          label={props.reportViewOptions.dtFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.dtFinalRequired } }}\r\n          type={InputType.DATE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const referenceInitial = (\r\n    <InputGroupInline\r\n      id=\"referenciaInicial\"\r\n      label={props.reportViewOptions.refInicialLabel}\r\n      isPrependLabel={true}\r\n      formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refInicialRequired } }}\r\n      type={InputType.REFERENCE}\r\n    />\r\n  );\r\n\r\n  const referenceComponent = props.reportViewOptions.reportViewType === REFERENCE.value ? referenceInitial : null;\r\n\r\n  const referencesComponent =\r\n    props.reportViewOptions.reportViewType === REFERENCES.value ? (\r\n      <>\r\n        {referenceInitial}\r\n\r\n        <InputGroupInline\r\n          id=\"referenciaFinal\"\r\n          label={props.reportViewOptions.refFinalLabel}\r\n          isPrependLabel={true}\r\n          formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.refFinalRequired } }}\r\n          type={InputType.REFERENCE}\r\n        />\r\n      </>\r\n    ) : null;\r\n\r\n  const anoComponent =\r\n    props.reportViewOptions.reportViewType === ANO.value ? (\r\n      <InputGroupInline\r\n        id=\"ano\"\r\n        label={props.reportViewOptions.anoLabel}\r\n        isPrependLabel={true}\r\n        formProps={{ ...props.formProps, validation: { required: props.reportViewOptions.anoRequired } }}\r\n        inputMaskedProps={{ mask: '9999' }}\r\n        type={InputType.MASK}\r\n      />\r\n    ) : null;\r\n\r\n  const startPageComponent = props.reportViewOptions.exibirPaginaInicial ? (\r\n    <InputGroupInline\r\n      id=\"startPage\"\r\n      label=\"Página Inicial\"\r\n      isPrependLabel={true}\r\n      placeholder=\"Página Inicial\"\r\n      formProps={{\r\n        ...props.formProps,\r\n        validation: {\r\n          min: 0,\r\n          required: true,\r\n        },\r\n      }}\r\n      type={InputType.NUMBER}\r\n    />\r\n  ) : null;\r\n\r\n  const multiplasEmpresasComponent = props.reportViewOptions.exibirConfiguracaoMultiplasEmpresas ? (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col xs={2}>\r\n          <CustomInput type=\"switch\" id=\"gerarPorEmpresas\" name=\"gerarPorEmpresas\" label=\"Gerar por Empresas\" innerRef={props.formProps.register} />\r\n        </Col>\r\n        <Col>\r\n          <EmpresaIS\r\n            formProps={props.formProps}\r\n            label=\"Empresa(s)\"\r\n            placeholder=\"Selecione uma ou várias empresas\"\r\n            id=\"empresasSelecionadas\"\r\n            isPrependLabel={true}\r\n            inputProps={{ disabled: props.formProps.getValues().gerarPorEmpresas, style: { marginBottom: 20 } }}\r\n            inputSearchProps={{ size: 'xl', selectProps: { isMulti: true } }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const segmentacaoFolhaComponent = props.reportViewOptions.exibirSegmentacaoFolha ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"segmentacaoFolha\"\r\n          name=\"segmentacaoFolha\"\r\n          label=\"Exibir Número das Páginas como Folhas\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dataAtualComponent = props.reportViewOptions.exibirConfiguracaoDataAtual ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput type=\"switch\" id=\"showCurrentDate\" name=\"showCurrentDate\" label=\"Imprimir a Data Atual\" innerRef={props.formProps.register} />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const logoAdmComponent = props.reportViewOptions.exibirConfiguracaoLogoAdministradora ? (\r\n    <Row className=\"mb-3\">\r\n      <Col>\r\n        <CustomInput\r\n          type=\"switch\"\r\n          id=\"showLogoAdministradora\"\r\n          name=\"showLogoAdministradora\"\r\n          label=\"Imprimir o Logo Administradora\"\r\n          innerRef={props.formProps.register}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  ) : null;\r\n\r\n  const dadosEmpresaComponent = props.reportViewOptions.exibirConfiguracaoDadosEmpresa ? (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"showDadosEmpresa\"\r\n            name=\"showDadosEmpresa\"\r\n            label=\"Imprimir os Dados da Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <CustomInput\r\n            type=\"switch\"\r\n            id=\"imprimirCodigoEmpresa\"\r\n            name=\"imprimirCodigoEmpresa\"\r\n            label=\"Imprimir o Código Empresa\"\r\n            innerRef={props.formProps.register}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  ) : null;\r\n\r\n  const formatacaoValoresComponent = props.reportBasicValues.exibirFormatacaoValor ? (\r\n    <>\r\n      {props.reportViewOptions.exibirImprimirValoresColoridos && (\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <CustomInput\r\n              type=\"switch\"\r\n              id=\"imprimirValoresColoridos\"\r\n              name=\"imprimirValoresColoridos\"\r\n              label=\"Imprimir Valores Devedores em Azul e Credores em Vermelho\"\r\n              innerRef={props.formProps.register}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <InputGroupInline\r\n        id=\"saldoReportEnum\"\r\n        label=\"Tipo de Formatação de Valores\"\r\n        isPrependLabel={true}\r\n        placeholder=\"Selecione o tipo de formatação dos valores\"\r\n        formProps={{ ...props.formProps, validation: { required: true } }}\r\n        inputDropDownProps={{\r\n          optionsProvider: SALDO_REPORT_ENUM,\r\n          selectProps: { isClearable: false },\r\n        }}\r\n        type={InputType.DROP_DOWN}\r\n      />\r\n    </>\r\n  ) : null;\r\n\r\n  return (\r\n    <Accordion formProps={props.formProps} firstOpen={props.extraConfigOpened || false}>\r\n      <AccordionItem title=\"Configurações adicionais do Relatório\">\r\n        <>\r\n          <Nav tabs={true}>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 1 })} tabIndex={1} onClick={toggleTab}>\r\n                Configurações Gerais\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={cx({ active: activeTab === 2 })}\r\n                tabIndex={2}\r\n                onClick={toggleTab}\r\n                disabled={!props.reportViewOptions.exibirEnviarPorEmail}\r\n              >\r\n                Envio de E-mail\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={cx({ active: activeTab === 3 })} tabIndex={3} onClick={toggleTab} disabled={true}>\r\n                Connect\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <TabContent className=\"mb-5\" activeTab={activeTab}>\r\n            <TabPane tabId={1} className=\"mb-0 p-3\">\r\n              <InputGroupInline formProps={props.formProps} id=\"idGerEmpresa\" hidden={true} />\r\n              <InputGroupInline\r\n                id=\"title\"\r\n                label=\"Título\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Título\"\r\n                iconAppend=\"undo-alt\"\r\n                appendClickHandler={restoreTitle}\r\n                formProps={{\r\n                  ...props.formProps,\r\n                  validation: {\r\n                    maxLength: 120,\r\n                    minLength: 5,\r\n                    required: true,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              {startPageComponent}\r\n\r\n              {multiplasEmpresasComponent}\r\n\r\n              {segmentacaoFolhaComponent}\r\n\r\n              {dataAtualComponent}\r\n\r\n              {formatacaoValoresComponent}\r\n\r\n              {logoAdmComponent}\r\n\r\n              {dadosEmpresaComponent}\r\n\r\n              {dateComponent}\r\n              {datesComponent}\r\n              {referenceComponent}\r\n              {referencesComponent}\r\n              {anoComponent}\r\n\r\n              <hr />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"gerarCabecalhoPadrao\"\r\n                    name=\"gerarCabecalhoPadrao\"\r\n                    label=\"Exibir Cabeçalho\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"virtualization\"\r\n                    name=\"virtualization\"\r\n                    label=\"Virtualizar Relatório\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <InputGroupInline\r\n                id=\"designType\"\r\n                label=\"Tipo de Impressão\"\r\n                isPrependLabel={true}\r\n                placeholder=\"Selecione o tipo de impressão\"\r\n                formProps={{ ...props.formProps, validation: { required: true } }}\r\n                inputDropDownProps={{\r\n                  optionsProvider: props.reportViewOptions.printingTypes ? props.reportViewOptions.printingTypes : DESIGN_TYPE_ENUM,\r\n                  selectProps: { isClearable: false },\r\n                }}\r\n                type={InputType.DROP_DOWN}\r\n              />\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarPorEmail\"\r\n                    name=\"enviarPorEmail\"\r\n                    label=\"Enviar por E-mail\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"enviarParaConnect\"\r\n                    name=\"enviarParaConnect\"\r\n                    label=\"Enviar para o Connect\"\r\n                    innerRef={props.formProps.register}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId={2} className=\"mb-0 p-3\">\r\n              <EnvioEmail formProps={props.formProps} initialSubject={props.reportBasicValues.title} />\r\n            </TabPane>\r\n            <TabPane tabId={3} className=\"mb-0 p-3\">\r\n              {/* TODO fazer tela de envio de mensagens do Connect*/}\r\n            </TabPane>\r\n          </TabContent>\r\n        </>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ReportInputs;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form } from 'reactstrap';\r\nimport {\r\n  ACTION_EVENTS,\r\n  alertManager,\r\n  AlertProps,\r\n  AlertType,\r\n  dispatchClose,\r\n  ErroList,\r\n  ERROR,\r\n  INFORMATION,\r\n  ProcessBar,\r\n  showToast,\r\n  UseFormProps,\r\n} from 'summer';\r\nimport { ReportBasicValues } from '../../../models/dtos/ger/reportBasicValues';\r\nimport { ReportViewOptions } from '../../../models/dtos/ger/reportViewOptions';\r\nimport { gerarReport } from '../../../services/report.service';\r\nimport { Reducers } from '../../../store/ducks';\r\nimport { GlobalState, toggleHeaderDrawer } from '../../../store/ducks/global.duck';\r\nimport ReportInputs from './ReportInputs';\r\n\r\nexport interface BasicReportFormProps {\r\n  /** Função do submit (vide useForm) */\r\n  handleSubmit: (onSubmit: any) => any;\r\n  /** Função de fechar/redirecionar a tela */\r\n  handleClose?: () => void;\r\n  /** Propriedades de formulário da tela pai (ReportView) */\r\n  formProps: UseFormProps;\r\n  /** Valores default da geração */\r\n  reportBasicValues: ReportBasicValues;\r\n  /** Configuração da tela de relatório */\r\n  reportViewOptions: ReportViewOptions;\r\n  /** chave que guarda as configurações de geração no cache */\r\n  localStorageKey?: string;\r\n  /** ID da view da tela pai */\r\n  viewId?: string;\r\n  /** Função de validações extras */\r\n  validateExtras?: (formData: any) => string[];\r\n  /** Função de envio de parametros extras */\r\n  addExtraParameters?: (formData: any) => any;\r\n  /** já iniciar as opções extras do relatório expandidas? */\r\n  extraConfigOpened?: boolean;\r\n  /** Função executada após o submit */\r\n  afterSubmit?: () => void;\r\n}\r\n\r\nexport interface ReportFormProps extends BasicReportFormProps {\r\n  /** Propriedades das rotas */\r\n  routeProps?: RouteComponentProps;\r\n}\r\n\r\nconst ReportForm: FC<ReportFormProps> = props => {\r\n  const { headerDrawerToggle } = useSelector<Reducers, GlobalState>(state => state.globalReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClose() {\r\n    if (props.handleClose) {\r\n      props.handleClose();\r\n    } else if (props.routeProps) {\r\n      dispatchClose(props.routeProps, props.routeProps.history);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data: any, event: any) => {\r\n    event.preventDefault();\r\n    let erros = [];\r\n    if (props.validateExtras) {\r\n      erros = props.validateExtras(data);\r\n    }\r\n    if (erros && erros.length) {\r\n      const params: AlertProps = {\r\n        message: <ErroList erros={erros} />,\r\n        type: AlertType.ERROR,\r\n      };\r\n      alertManager.emit(ACTION_EVENTS.SHOW, params);\r\n    } else {\r\n      showToast('Seu arquivo está sendo gerado. Uma notificação será exibida quando estiver finalizado e o mesmo poderá ser salvo.', INFORMATION);\r\n      finishSubmit(data);\r\n    }\r\n  };\r\n\r\n  const finishSubmit = (data: any) => {\r\n    if (props.addExtraParameters) {\r\n      data = props.addExtraParameters(data);\r\n    }\r\n    data.saveSession = false;\r\n\r\n    gerarReport(data, props.reportViewOptions.reportEventType, {\r\n      errorFunction: (mensagem: string) => showToast(mensagem, ERROR),\r\n      thenFunction: () => {\r\n        if (!headerDrawerToggle) {\r\n          dispatch(toggleHeaderDrawer());\r\n        }\r\n        if (props.afterSubmit) {\r\n          props.afterSubmit();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form noValidate={true}>\r\n      {props.children}\r\n      <ReportInputs\r\n        reportBasicValues={props.reportBasicValues}\r\n        reportViewOptions={props.reportViewOptions}\r\n        formProps={props.formProps}\r\n        extraConfigOpened={props.extraConfigOpened}\r\n      />\r\n\r\n      <ProcessBar handleSubmit={props.handleSubmit(onSubmit)} handleClose={handleClose} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReportForm;\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasGrupoEmpresaConfig(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n\r\n  const msg: string =\r\n    'O Grupo de empresas não está configurado para a empresa selecionada. Para configurar acesse:\\n' +\r\n    'Modulo Principal > Manutenção > Configurações > Grupo de Empresa';\r\n\r\n  if (\r\n    !globalParameter.empresa ||\r\n    !globalParameter.empresa.grupoEmpresaRaiz.grupoEmpresaConfig ||\r\n    !globalParameter.empresa.grupoEmpresa.grupoEmpresaConfig\r\n  ) {\r\n    result = msg;\r\n  }\r\n\r\n  return result;\r\n}\r\n","import { GlobalParameter } from '../models/dtos/ger/globalParameter';\r\n\r\nexport function hasEmpresaMCG(globalParameter: GlobalParameter): string | undefined {\r\n  let result = null;\r\n  if (!globalParameter.empresaMCG) {\r\n    result =\r\n      'A empresa selecionada não está configurada para o módulo Contábil. Para configurá-la acesse:\\n' +\r\n      'Módulo Contábil > Manutenção > Configurações > Empresa.';\r\n  }\r\n  return result;\r\n}\r\n","export const NORMAL = { value: '1', label: 'Normal' };\r\nexport const GRUPO_ATUAL = { value: '2', label: 'Grupo Atual' };\r\nexport const HIERARQUIA_INFERIOR = { value: '3', label: 'Hierarquia Inferior' };\r\n\r\nexport const CONSOLIDAR_ENUM_VALUES = [NORMAL, GRUPO_ATUAL, HIERARQUIA_INFERIOR];\r\n"],"sourceRoot":""}
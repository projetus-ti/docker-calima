<?xml version="1.0" encoding="UTF-8"?>
<services-config>
    <services>
        <service-include file-path="remoting-config.xml"/>
        <service-include file-path="messaging-config.xml"/>

        <service class="br.com.projetusinformatica.calima.novelty.ger.bootstrap.CustomBootstrapService" id="bootstrap"/>
        <default-channels>
            <channel ref="my-amf"/>
        </default-channels>

    </services>

    <channels>
        <channel-definition id="my-amf" class="mx.messaging.channels.AMFChannel">
            <endpoint
                    url="http://{server.name}:{server.port}/{context.root}/spring/messagebroker/amf"
                    class="br.com.projetusinformatica.calima.ger.context.CalimaAMFEndpoint"/>
            <properties>
                <polling-enabled>false</polling-enabled>
            </properties>
        </channel-definition>

        <channel-definition id="my-polling-amf" class="mx.messaging.channels.AMFChannel">
            <endpoint
                    url="http://{server.name}:{server.port}/{context.root}/spring/messagebroker/amfpolling"
                    class="br.com.projetusinformatica.calima.ger.context.CalimaAMFEndpoint"/>
            <properties>
                <polling-enabled>true</polling-enabled>
                <polling-interval-millis>1000</polling-interval-millis>
            </properties>
        </channel-definition>

        <channel-definition id="my-long-polling-amf" class="mx.messaging.channels.AMFChannel">
            <endpoint
                    url="http://{server.name}:{server.port}/{context.root}/spring/messagebroker/amflongpolling"
                    class="br.com.projetusinformatica.calima.ger.context.CalimaAMFEndpoint"/>
            <properties>
                <polling-enabled>true</polling-enabled>
                <wait-interval-millis>-1</wait-interval-millis>
                <polling-interval-millis>100</polling-interval-millis>
                <max-waiting-poll-requests>50</max-waiting-poll-requests>
            </properties>
        </channel-definition>

        <channel-definition id="my-streaming-amf" class="mx.messaging.channels.StreamingAMFChannel">
            <endpoint
                    url="http://{server.name}:{server.port}/{context.root}/spring/messagebroker/amfstreaming"
                    class="flex.messaging.endpoints.StreamingAMFEndpoint"/>
            <properties>
                <idle-timeout-minutes>0</idle-timeout-minutes>
                <max-streaming-clients>10</max-streaming-clients>
                <server-to-client-heartbeat-millis>5000</server-to-client-heartbeat-millis>
            </properties>
        </channel-definition>
    </channels>

    <logging>
        <!-- You may also use flex.messaging.log.ServletLogTarget -->
        <target class="flex.messaging.log.ConsoleTarget" level="ERROR">
            <properties>
                <prefix>[BlazeDS]</prefix>
                <includeDate>true</includeDate>
                <includeTime>true</includeTime>
                <includeLevel>true</includeLevel>
                <includeCategory>true</includeCategory>
            </properties>
            <filters>
                <pattern>DataService.*</pattern>
                <pattern>Configuration.*</pattern>
            </filters>
        </target>
    </logging>

    <flex-client>
        <!-- Make sure clients are automatically expired -->
        <timeout-minutes>5</timeout-minutes>
    </flex-client>

    <system>
        <manageable>false</manageable>
        <redeploy>
            <enabled>true</enabled>
            <watch-interval>20</watch-interval>
            <watch-file>{context.root}/WEB-INF/flex/services-config.xml</watch-file>
            <watch-file>{context.root}/WEB-INF/flex/remoting-config.xml</watch-file>
            <touch-file>{context.root}/WEB-INF/web.xml</touch-file>
        </redeploy>
    </system>
</services-config>